2024-08-18 15:12:34,855 [Worker 0] Is distributed: False
2024-08-18 15:12:34,855 [Process: 0] Starting training
2024-08-18 15:12:34,856 [Process: 0] EPOCH 1:
2024-08-18 15:12:34,858 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:36,620 [Process: 0] Synchronize training processes
2024-08-18 15:12:36,621 [Process: 0] Evaluating...
2024-08-18 15:12:36,624 [Process: 0] EPOCH 2:
2024-08-18 15:12:36,626 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.6122, 0.4697, 0.2048,  ..., 0.2305, 0.3274, 0.1983],
         [0.1293, 0.1783, 0.2048,  ..., 0.4168, 0.2242, 0.4050],
         [0.1293, 0.1389, 0.3567,  ..., 0.1544, 0.2242, 0.1983],
         [0.1293, 0.2131, 0.2337,  ..., 0.1983, 0.2242, 0.1983]],
        [[0.3803, 0.2671, 0.7249,  ..., 0.2031, 0.1584, 0.1903],
         [0.2066, 0.2211, 0.0917,  ..., 0.2745, 0.5247, 0.4292],
         [0.2066, 0.2335, 0.0917,  ..., 0.3193, 0.1584, 0.1903],
         [0.2066, 0.2783, 0.0917,  ..., 0.2031, 0.1584, 0.1903]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2324, 0.2226, 0.3253,  ..., 0.2434, 0.2500, 0.0049],
         [0.3508, 0.2916, 0.1575,  ..., 0.3152, 0.2500, 0.0049],
         [0.1789, 0.2463, 0.1169,  ..., 0.2207, 0.2500, 0.9852],
         [0.2380, 0.2396, 0.4003,  ..., 0.2207, 0.2500, 0.0049]],
        [[0.3083, 0.2701, 0.3301,  ..., 0.2705, 0.2319, 0.2966],
         [0.1937, 0.2733, 0.2905,  ..., 0.2176, 0.2319, 0.2736],
         [0.1450, 0.2013, 0.1897,  ..., 0.1926, 0.2349, 0.1579],
         [0.3531, 0.2553, 0.1897,  ..., 0.3193, 0.3013, 0.2719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:12:37,683 [Process: 0] Synchronize training processes
2024-08-18 15:12:37,684 [Process: 0] Evaluating...
2024-08-18 15:12:37,685 [Process: 0] EPOCH 3:
2024-08-18 15:12:37,687 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:38,752 [Process: 0] Synchronize training processes
2024-08-18 15:12:38,752 [Process: 0] Evaluating...
2024-08-18 15:12:38,754 [Process: 0] EPOCH 4:
2024-08-18 15:12:38,756 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2789, 0.2789, 0.2612,  ..., 0.2513, 0.2445, 0.2155],
         [0.2633, 0.2534, 0.2674,  ..., 0.2817, 0.2696, 0.2155],
         [0.1962, 0.2198, 0.2125,  ..., 0.2158, 0.2347, 0.3297],
         [0.2616, 0.2480, 0.2589,  ..., 0.2512, 0.2512, 0.2393]],
        [[0.2718, 0.2731, 0.2584,  ..., 0.2512, 0.2623, 0.2691],
         [0.2654, 0.2668, 0.2235,  ..., 0.2763, 0.2849, 0.2636],
         [0.2198, 0.2050, 0.2947,  ..., 0.2201, 0.1810, 0.2122],
         [0.2431, 0.2551, 0.2235,  ..., 0.2524, 0.2719, 0.2551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2544, 0.2599, 0.2537,  ..., 0.2482, 0.2699, 0.2573],
         [0.2527, 0.2564, 0.2454,  ..., 0.2617, 0.2501, 0.2506],
         [0.2236, 0.2177, 0.2269,  ..., 0.2237, 0.2191, 0.2252],
         [0.2694, 0.2660, 0.2740,  ..., 0.2664, 0.2610, 0.2669]],
        [[0.2631, 0.2534, 0.2672,  ..., 0.2526, 0.2591, 0.2574],
         [0.2472, 0.2695, 0.2474,  ..., 0.2453, 0.2685, 0.2563],
         [0.2250, 0.2150, 0.2250,  ..., 0.2423, 0.2104, 0.2184],
         [0.2648, 0.2621, 0.2604,  ..., 0.2598, 0.2620, 0.2680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2543, 0.2540, 0.2444,  ..., 0.2597, 0.1718, 0.2799],
         [0.2545, 0.2496, 0.2522,  ..., 0.2505, 0.1718, 0.2353],
         [0.2218, 0.2319, 0.2315,  ..., 0.2276, 0.4845, 0.2353],
         [0.2694, 0.2645, 0.2719,  ..., 0.2622, 0.1718, 0.2495]],
        [[0.2686, 0.2528, 0.2599,  ..., 0.2586, 0.2429, 0.2527],
         [0.2410, 0.2596, 0.2512,  ..., 0.2494, 0.2494, 0.2506],
         [0.2251, 0.2159, 0.2230,  ..., 0.2240, 0.2338, 0.2273],
         [0.2653, 0.2717, 0.2659,  ..., 0.2681, 0.2738, 0.2694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:12:39,808 [Process: 0] Synchronize training processes
2024-08-18 15:12:39,809 [Process: 0] Evaluating...
2024-08-18 15:12:39,810 [Process: 0] EPOCH 5:
2024-08-18 15:12:39,812 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:40,870 [Process: 0] Synchronize training processes
2024-08-18 15:12:40,870 [Process: 0] Evaluating...
2024-08-18 15:12:40,872 [Process: 0] EPOCH 6:
2024-08-18 15:12:40,874 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2600, 0.2546, 0.2479,  ..., 0.2541, 0.2590, 0.2513],
         [0.2465, 0.2481, 0.2542,  ..., 0.2509, 0.2575, 0.2564],
         [0.2239, 0.2318, 0.2301,  ..., 0.2295, 0.2191, 0.2253],
         [0.2696, 0.2655, 0.2677,  ..., 0.2655, 0.2644, 0.2669]],
        [[0.2539, 0.2493, 0.2553,  ..., 0.2413, 0.2535, 0.2542],
         [0.2538, 0.2492, 0.2494,  ..., 0.2413, 0.2488, 0.2521],
         [0.2297, 0.2311, 0.2273,  ..., 0.2761, 0.2246, 0.2273],
         [0.2626, 0.2704, 0.2679,  ..., 0.2413, 0.2731, 0.2663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2517, 0.2552, 0.2506,  ..., 0.2717, 0.2500, 0.2553],
         [0.2412, 0.2503, 0.2530,  ..., 0.2461, 0.2500, 0.2439],
         [0.2397, 0.2276, 0.2239,  ..., 0.2411, 0.2500, 0.2380],
         [0.2674, 0.2670, 0.2725,  ..., 0.2411, 0.2500, 0.2628]],
        [[0.2530, 0.2492, 0.2511,  ..., 0.2547, 0.2440, 0.2416],
         [0.2459, 0.2506, 0.2567,  ..., 0.2593, 0.2436, 0.2410],
         [0.2320, 0.2339, 0.2280,  ..., 0.2216, 0.2551, 0.2577],
         [0.2692, 0.2663, 0.2643,  ..., 0.2644, 0.2572, 0.2598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2399, 0.2440, 0.2442,  ..., 0.2638, 0.2496, 0.2577],
         [0.2333, 0.2363, 0.2356,  ..., 0.2381, 0.2340, 0.2494],
         [0.2726, 0.2478, 0.2532,  ..., 0.2285, 0.2624, 0.2278],
         [0.2541, 0.2718, 0.2669,  ..., 0.2695, 0.2540, 0.2651]],
        [[0.2594, 0.2588, 0.2543,  ..., 0.2590, 0.2650, 0.2438],
         [0.2343, 0.2458, 0.2296,  ..., 0.2455, 0.2483, 0.2426],
         [0.2336, 0.2249, 0.2571,  ..., 0.2254, 0.2148, 0.2491],
         [0.2727, 0.2705, 0.2590,  ..., 0.2702, 0.2720, 0.2644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2484, 0.2445, 0.2415,  ..., 0.2476, 0.2414, 0.2471],
         [0.2255, 0.2275, 0.2241,  ..., 0.2476, 0.2414, 0.2318],
         [0.2689, 0.2742, 0.2812,  ..., 0.2476, 0.2759, 0.2651],
         [0.2572, 0.2538, 0.2532,  ..., 0.2573, 0.2414, 0.2560]],
        [[0.2444, 0.2466, 0.2449,  ..., 0.2510, 0.2522, 0.2521],
         [0.2251, 0.2213, 0.2311,  ..., 0.2295, 0.2447, 0.2395],
         [0.2747, 0.2798, 0.2655,  ..., 0.2607, 0.2378, 0.2438],
         [0.2559, 0.2523, 0.2585,  ..., 0.2587, 0.2652, 0.2645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:12:41,940 [Process: 0] Synchronize training processes
2024-08-18 15:12:41,940 [Process: 0] Evaluating...
2024-08-18 15:12:41,942 [Process: 0] EPOCH 7:
2024-08-18 15:12:41,944 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:43,005 [Process: 0] Synchronize training processes
2024-08-18 15:12:43,006 [Process: 0] Evaluating...
2024-08-18 15:12:43,007 [Process: 0] EPOCH 8:
2024-08-18 15:12:43,009 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2467, 0.2525, 0.2508,  ..., 0.2467, 0.2557, 0.2424],
         [0.2322, 0.2324, 0.2210,  ..., 0.2267, 0.2269, 0.2345],
         [0.2594, 0.2536, 0.2711,  ..., 0.2676, 0.2595, 0.2652],
         [0.2617, 0.2615, 0.2570,  ..., 0.2590, 0.2579, 0.2579]],
        [[0.2482, 0.2556, 0.2411,  ..., 0.2511, 0.2452, 0.2447],
         [0.2310, 0.2291, 0.2256,  ..., 0.2348, 0.2207, 0.2251],
         [0.2576, 0.2598, 0.2712,  ..., 0.2489, 0.2773, 0.2665],
         [0.2632, 0.2555, 0.2621,  ..., 0.2652, 0.2568, 0.2637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2546, 0.2506, 0.2559,  ..., 0.2500, 0.2462, 0.2653],
         [0.2284, 0.2324, 0.2330,  ..., 0.2500, 0.2199, 0.2306],
         [0.2579, 0.2541, 0.2505,  ..., 0.2500, 0.2803, 0.2402],
         [0.2591, 0.2630, 0.2606,  ..., 0.2500, 0.2536, 0.2639]],
        [[0.2600, 0.2528, 0.2483,  ..., 0.2559, 0.2551, 0.2602],
         [0.2316, 0.2387, 0.2289,  ..., 0.2273, 0.2283, 0.2324],
         [0.2456, 0.2440, 0.2566,  ..., 0.2545, 0.2532, 0.2414],
         [0.2627, 0.2645, 0.2662,  ..., 0.2623, 0.2635, 0.2660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2595, 0.2701, 0.2571,  ..., 0.2570, 0.2584, 0.2552],
         [0.2300, 0.2301, 0.2405,  ..., 0.2258, 0.2217, 0.2280],
         [0.2454, 0.2376, 0.2395,  ..., 0.2547, 0.2561, 0.2544],
         [0.2651, 0.2623, 0.2629,  ..., 0.2626, 0.2637, 0.2623]],
        [[0.2570, 0.2537, 0.2525,  ..., 0.2494, 0.2451, 0.2466],
         [0.2280, 0.2255, 0.2274,  ..., 0.2248, 0.2176, 0.2190],
         [0.2523, 0.2620, 0.2578,  ..., 0.2558, 0.2819, 0.2776],
         [0.2628, 0.2589, 0.2624,  ..., 0.2701, 0.2554, 0.2569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2558, 0.2601, 0.2628,  ..., 0.2500, 0.2309, 0.2490],
         [0.2302, 0.2284, 0.2258,  ..., 0.2500, 0.2309, 0.2267],
         [0.2500, 0.2507, 0.2503,  ..., 0.2500, 0.3074, 0.2573],
         [0.2640, 0.2608, 0.2612,  ..., 0.2500, 0.2309, 0.2670]],
        [[0.2561, 0.2623, 0.2623,  ..., 0.2537, 0.2609, 0.2591],
         [0.2317, 0.2256, 0.2240,  ..., 0.2308, 0.2345, 0.2299],
         [0.2485, 0.2510, 0.2521,  ..., 0.2522, 0.2401, 0.2456],
         [0.2637, 0.2611, 0.2616,  ..., 0.2632, 0.2644, 0.2654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:12:44,066 [Process: 0] Synchronize training processes
2024-08-18 15:12:44,066 [Process: 0] Evaluating...
2024-08-18 15:12:44,068 [Process: 0] EPOCH 9:
2024-08-18 15:12:44,070 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2659, 0.2606, 0.2594,  ..., 0.2618, 0.2663, 0.2593],
         [0.2225, 0.2215, 0.2273,  ..., 0.2222, 0.2250, 0.2214],
         [0.2473, 0.2566, 0.2488,  ..., 0.2532, 0.2463, 0.2528],
         [0.2642, 0.2613, 0.2644,  ..., 0.2627, 0.2624, 0.2665]],
        [[0.2635, 0.2656, 0.2574,  ..., 0.2646, 0.2651, 0.2562],
         [0.2199, 0.2231, 0.2207,  ..., 0.2218, 0.2280, 0.2187],
         [0.2499, 0.2488, 0.2624,  ..., 0.2487, 0.2467, 0.2642],
         [0.2667, 0.2625, 0.2595,  ..., 0.2650, 0.2602, 0.2609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2615, 0.2628, 0.2582,  ..., 0.2163, 0.2500, 0.2674],
         [0.2234, 0.2275, 0.2265,  ..., 0.2163, 0.2500, 0.2243],
         [0.2528, 0.2463, 0.2543,  ..., 0.3392, 0.2500, 0.2461],
         [0.2623, 0.2634, 0.2610,  ..., 0.2282, 0.2500, 0.2623]],
        [[0.2629, 0.2608, 0.2656,  ..., 0.2611, 0.2609, 0.2609],
         [0.2224, 0.2248, 0.2266,  ..., 0.2272, 0.2244, 0.2269],
         [0.2560, 0.2540, 0.2448,  ..., 0.2483, 0.2514, 0.2507],
         [0.2588, 0.2604, 0.2630,  ..., 0.2634, 0.2632, 0.2615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2672, 0.2654, 0.2601,  ..., 0.2630, 0.2761, 0.2668],
         [0.2200, 0.2154, 0.2191,  ..., 0.2217, 0.2140, 0.2192],
         [0.2443, 0.2547, 0.2523,  ..., 0.2440, 0.2494, 0.2480],
         [0.2685, 0.2645, 0.2685,  ..., 0.2714, 0.2606, 0.2660]],
        [[0.2663, 0.2606, 0.2672,  ..., 0.2575, 0.2678, 0.2700],
         [0.2199, 0.2143, 0.2110,  ..., 0.2212, 0.2110, 0.2143],
         [0.2521, 0.2605, 0.2618,  ..., 0.2555, 0.2563, 0.2546],
         [0.2616, 0.2646, 0.2600,  ..., 0.2658, 0.2649, 0.2610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2644, 0.2681, 0.2746,  ..., 0.2006, 0.2384, 0.2685],
         [0.2227, 0.2244, 0.2185,  ..., 0.1984, 0.2384, 0.2219],
         [0.2474, 0.2445, 0.2429,  ..., 0.3617, 0.2841, 0.2394],
         [0.2654, 0.2629, 0.2640,  ..., 0.2393, 0.2390, 0.2701]],
        [[0.2671, 0.2761, 0.2734,  ..., 0.2654, 0.2646, 0.2723],
         [0.2221, 0.2259, 0.2211,  ..., 0.2234, 0.2238, 0.2265],
         [0.2493, 0.2349, 0.2436,  ..., 0.2479, 0.2506, 0.2397],
         [0.2615, 0.2631, 0.2619,  ..., 0.2633, 0.2610, 0.2615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:12:45,126 [Process: 0] Synchronize training processes
2024-08-18 15:12:45,126 [Process: 0] Evaluating...
2024-08-18 15:12:45,129 [Process: 0] EPOCH 10:
2024-08-18 15:12:45,131 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:46,195 [Process: 0] Synchronize training processes
2024-08-18 15:12:46,195 [Process: 0] Evaluating...
2024-08-18 15:12:46,197 [Process: 0] EPOCH 11:
2024-08-18 15:12:46,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2687, 0.2769, 0.2753,  ..., 0.2705, 0.2727, 0.2678],
         [0.2198, 0.2144, 0.2174,  ..., 0.2179, 0.2199, 0.2120],
         [0.2487, 0.2418, 0.2385,  ..., 0.2458, 0.2408, 0.2527],
         [0.2629, 0.2668, 0.2689,  ..., 0.2658, 0.2665, 0.2675]],
        [[0.2777, 0.2639, 0.2691,  ..., 0.2776, 0.2632, 0.2684],
         [0.2219, 0.2131, 0.2150,  ..., 0.2181, 0.2104, 0.2181],
         [0.2395, 0.2518, 0.2534,  ..., 0.2417, 0.2670, 0.2475],
         [0.2609, 0.2712, 0.2626,  ..., 0.2627, 0.2595, 0.2660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2716, 0.2723, 0.2802,  ..., 0.2214, 0.2094, 0.2671],
         [0.2164, 0.2181, 0.2190,  ..., 0.2214, 0.2094, 0.2218],
         [0.2504, 0.2398, 0.2338,  ..., 0.3358, 0.3719, 0.2484],
         [0.2616, 0.2699, 0.2670,  ..., 0.2214, 0.2094, 0.2627]],
        [[0.2743, 0.2805, 0.2712,  ..., 0.2646, 0.2749, 0.2735],
         [0.2160, 0.2189, 0.2222,  ..., 0.2244, 0.2192, 0.2209],
         [0.2402, 0.2392, 0.2454,  ..., 0.2492, 0.2408, 0.2458],
         [0.2694, 0.2614, 0.2612,  ..., 0.2619, 0.2651, 0.2597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2927, 0.2765, 0.2801,  ..., 0.2772, 0.2851, 0.2690],
         [0.2192, 0.2090, 0.2155,  ..., 0.2148, 0.2052, 0.2291],
         [0.2216, 0.2455, 0.2361,  ..., 0.2380, 0.2396, 0.2431],
         [0.2665, 0.2689, 0.2683,  ..., 0.2701, 0.2701, 0.2588]],
        [[0.2884, 0.2813, 0.2838,  ..., 0.2802, 0.2864, 0.2762],
         [0.2181, 0.2125, 0.2261,  ..., 0.2038, 0.2102, 0.2195],
         [0.2295, 0.2281, 0.2229,  ..., 0.2465, 0.2402, 0.2314],
         [0.2640, 0.2780, 0.2673,  ..., 0.2695, 0.2632, 0.2729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2923, 0.2787, 0.2883,  ..., 0.1837, 0.2162, 0.2821],
         [0.2221, 0.2287, 0.2205,  ..., 0.1837, 0.2162, 0.2169],
         [0.2206, 0.2311, 0.2290,  ..., 0.4465, 0.3515, 0.2318],
         [0.2649, 0.2615, 0.2622,  ..., 0.1861, 0.2162, 0.2691]],
        [[0.2831, 0.2719, 0.2854,  ..., 0.2776, 0.2868, 0.2817],
         [0.2199, 0.2162, 0.2190,  ..., 0.2167, 0.2165, 0.2189],
         [0.2301, 0.2407, 0.2302,  ..., 0.2426, 0.2285, 0.2341],
         [0.2670, 0.2712, 0.2654,  ..., 0.2632, 0.2681, 0.2653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:12:47,257 [Process: 0] Synchronize training processes
2024-08-18 15:12:47,257 [Process: 0] Evaluating...
2024-08-18 15:12:47,262 [Process: 0] EPOCH 12:
2024-08-18 15:12:47,265 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:48,324 [Process: 0] Synchronize training processes
2024-08-18 15:12:48,325 [Process: 0] Evaluating...
2024-08-18 15:12:48,326 [Process: 0] EPOCH 13:
2024-08-18 15:12:48,328 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2857, 0.2996, 0.2788,  ..., 0.2809, 0.2925, 0.2751],
         [0.2073, 0.2073, 0.2137,  ..., 0.2127, 0.2075, 0.2072],
         [0.2308, 0.2305, 0.2340,  ..., 0.2307, 0.2314, 0.2549],
         [0.2762, 0.2626, 0.2736,  ..., 0.2757, 0.2686, 0.2628]],
        [[0.2841, 0.2950, 0.2874,  ..., 0.2889, 0.2871, 0.2862],
         [0.2058, 0.2144, 0.2076,  ..., 0.2144, 0.2122, 0.2112],
         [0.2378, 0.2211, 0.2288,  ..., 0.2223, 0.2240, 0.2299],
         [0.2724, 0.2695, 0.2761,  ..., 0.2744, 0.2768, 0.2727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2798, 0.2686, 0.2894,  ..., 0.2188, 0.1528, 0.2893],
         [0.2180, 0.2164, 0.2195,  ..., 0.2188, 0.1528, 0.2210],
         [0.2306, 0.2478, 0.2187,  ..., 0.3436, 0.5416, 0.2210],
         [0.2716, 0.2672, 0.2725,  ..., 0.2188, 0.1528, 0.2688]],
        [[0.2859, 0.2914, 0.2791,  ..., 0.2799, 0.2772, 0.2774],
         [0.2123, 0.2176, 0.2152,  ..., 0.2147, 0.2147, 0.2128],
         [0.2384, 0.2318, 0.2411,  ..., 0.2386, 0.2437, 0.2421],
         [0.2634, 0.2592, 0.2646,  ..., 0.2667, 0.2644, 0.2677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2825, 0.3044, 0.3011,  ..., 0.2996, 0.2945, 0.2961],
         [0.2074, 0.2008, 0.1978,  ..., 0.2115, 0.2105, 0.2107],
         [0.2453, 0.2305, 0.2272,  ..., 0.2295, 0.2175, 0.2185],
         [0.2648, 0.2643, 0.2739,  ..., 0.2594, 0.2776, 0.2748]],
        [[0.3093, 0.2933, 0.3013,  ..., 0.3065, 0.3015, 0.2938],
         [0.2106, 0.2095, 0.2026,  ..., 0.2096, 0.2163, 0.2096],
         [0.1999, 0.2148, 0.2272,  ..., 0.2101, 0.2039, 0.2259],
         [0.2802, 0.2825, 0.2689,  ..., 0.2739, 0.2782, 0.2707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:12:49,394 [Process: 0] Synchronize training processes
2024-08-18 15:12:49,394 [Process: 0] Evaluating...
2024-08-18 15:12:49,396 [Process: 0] EPOCH 14:
2024-08-18 15:12:49,398 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:50,460 [Process: 0] Synchronize training processes
2024-08-18 15:12:50,460 [Process: 0] Evaluating...
2024-08-18 15:12:50,462 [Process: 0] EPOCH 15:
2024-08-18 15:12:50,464 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2884, 0.3124, 0.2860,  ..., 0.0847, 0.1167, 0.3037],
         [0.2165, 0.2111, 0.2219,  ..., 0.0847, 0.1167, 0.2064],
         [0.2292, 0.2111, 0.2219,  ..., 0.7458, 0.6499, 0.2123],
         [0.2659, 0.2654, 0.2702,  ..., 0.0847, 0.1167, 0.2775]],
        [[0.3042, 0.2972, 0.2816,  ..., 0.2905, 0.2797, 0.3023],
         [0.2146, 0.2050, 0.2059,  ..., 0.2143, 0.2179, 0.2092],
         [0.2146, 0.2224, 0.2324,  ..., 0.2143, 0.2329, 0.2157],
         [0.2667, 0.2754, 0.2801,  ..., 0.2809, 0.2696, 0.2729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2891, 0.3005, 0.2951,  ..., 0.3152, 0.3001, 0.3144],
         [0.2052, 0.2015, 0.2038,  ..., 0.2014, 0.2154, 0.1983],
         [0.2267, 0.2272, 0.2309,  ..., 0.2047, 0.2255, 0.2172],
         [0.2791, 0.2708, 0.2702,  ..., 0.2788, 0.2589, 0.2700]],
        [[0.3128, 0.3231, 0.3130,  ..., 0.3044, 0.3012, 0.3279],
         [0.2025, 0.2056, 0.2067,  ..., 0.2058, 0.2093, 0.1994],
         [0.2006, 0.1924, 0.1966,  ..., 0.2031, 0.2093, 0.1986],
         [0.2841, 0.2790, 0.2836,  ..., 0.2867, 0.2803, 0.2741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3090, 0.3238, 0.3226,  ..., 0.1532, 0.1836, 0.3115],
         [0.2071, 0.2047, 0.2122,  ..., 0.1532, 0.1836, 0.2029],
         [0.2071, 0.2047, 0.2122,  ..., 0.5404, 0.4493, 0.2001],
         [0.2769, 0.2668, 0.2530,  ..., 0.1532, 0.1836, 0.2855]],
        [[0.2804, 0.2781, 0.2871,  ..., 0.3049, 0.2839, 0.2907],
         [0.2199, 0.2067, 0.2085,  ..., 0.2064, 0.2054, 0.2064],
         [0.2361, 0.2482, 0.2362,  ..., 0.2249, 0.2400, 0.2362],
         [0.2636, 0.2670, 0.2682,  ..., 0.2638, 0.2708, 0.2667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2945, 0.2898, 0.3312,  ..., 0.2921, 0.3039, 0.3052],
         [0.2101, 0.2027, 0.1980,  ..., 0.2075, 0.2084, 0.2119],
         [0.2168, 0.2440, 0.1980,  ..., 0.2234, 0.2157, 0.2119],
         [0.2786, 0.2635, 0.2729,  ..., 0.2770, 0.2720, 0.2711]],
        [[0.3279, 0.3515, 0.3388,  ..., 0.3311, 0.3413, 0.3126],
         [0.1937, 0.1884, 0.2012,  ..., 0.1999, 0.1961, 0.2111],
         [0.1937, 0.1818, 0.2012,  ..., 0.1851, 0.1961, 0.2111],
         [0.2846, 0.2783, 0.2588,  ..., 0.2839, 0.2666, 0.2651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:51,523 [Process: 0] Synchronize training processes
2024-08-18 15:12:51,524 [Process: 0] Evaluating...
2024-08-18 15:12:51,526 [Process: 0] EPOCH 16:
2024-08-18 15:12:51,528 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:52,592 [Process: 0] Synchronize training processes
2024-08-18 15:12:52,592 [Process: 0] Evaluating...
2024-08-18 15:12:52,594 [Process: 0] EPOCH 17:
2024-08-18 15:12:52,595 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3315, 0.3171, 0.3265,  ..., 0.0693, 0.0828, 0.3302],
         [0.2018, 0.2122, 0.2042,  ..., 0.0693, 0.0828, 0.1999],
         [0.2018, 0.2122, 0.2042,  ..., 0.7922, 0.7517, 0.1955],
         [0.2649, 0.2585, 0.2652,  ..., 0.0693, 0.0828, 0.2744]],
        [[0.3021, 0.2814, 0.2970,  ..., 0.2863, 0.2778, 0.2941],
         [0.2122, 0.2104, 0.2132,  ..., 0.2100, 0.2096, 0.2131],
         [0.2129, 0.2356, 0.2199,  ..., 0.2328, 0.2402, 0.2238],
         [0.2728, 0.2725, 0.2699,  ..., 0.2709, 0.2723, 0.2690]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2914, 0.3346, 0.2958,  ..., 0.3142, 0.3113, 0.3210],
         [0.2078, 0.1967, 0.2114,  ..., 0.2046, 0.2013, 0.2005],
         [0.2185, 0.1967, 0.2114,  ..., 0.2046, 0.2013, 0.2015],
         [0.2823, 0.2719, 0.2814,  ..., 0.2765, 0.2861, 0.2770]],
        [[0.3499, 0.3744, 0.3577,  ..., 0.3501, 0.3647, 0.2057],
         [0.1933, 0.1806, 0.1820,  ..., 0.1858, 0.1815, 0.1858],
         [0.1933, 0.1806, 0.1820,  ..., 0.1858, 0.1815, 0.3946],
         [0.2634, 0.2644, 0.2784,  ..., 0.2783, 0.2723, 0.2139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3155, 0.2727, 0.3824,  ..., 0.1846, 0.0434, 0.3521],
         [0.1985, 0.2048, 0.1749,  ..., 0.1846, 0.0434, 0.1827],
         [0.1985, 0.2482, 0.1749,  ..., 0.4463, 0.8699, 0.1827],
         [0.2876, 0.2743, 0.2679,  ..., 0.1846, 0.0434, 0.2825]],
        [[0.3222, 0.3081, 0.3355,  ..., 0.3021, 0.3082, 0.3263],
         [0.2000, 0.2014, 0.1927,  ..., 0.2140, 0.2142, 0.1955],
         [0.2000, 0.2014, 0.1927,  ..., 0.2140, 0.2142, 0.1955],
         [0.2777, 0.2891, 0.2790,  ..., 0.2699, 0.2633, 0.2827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3043, 0.3022, 0.3073,  ..., 0.2949, 0.3022, 0.3057],
         [0.2080, 0.2058, 0.2055,  ..., 0.2077, 0.2064, 0.2114],
         [0.2080, 0.2058, 0.2055,  ..., 0.2113, 0.2064, 0.2114],
         [0.2797, 0.2863, 0.2817,  ..., 0.2861, 0.2851, 0.2715]],
        [[0.3710, 0.3382, 0.3573,  ..., 0.3676, 0.3680, 0.1100],
         [0.1756, 0.1899, 0.1707,  ..., 0.1758, 0.1722, 0.1100],
         [0.1756, 0.1899, 0.1673,  ..., 0.1640, 0.1722, 0.6700],
         [0.2778, 0.2820, 0.3047,  ..., 0.2926, 0.2875, 0.1100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:53,653 [Process: 0] Synchronize training processes
2024-08-18 15:12:53,653 [Process: 0] Evaluating...
2024-08-18 15:12:53,655 [Process: 0] EPOCH 18:
2024-08-18 15:12:53,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3159, 0.3627, 0.3622,  ..., 0.0478, 0.0601, 0.3249],
         [0.2073, 0.1713, 0.1748,  ..., 0.0478, 0.0601, 0.1925],
         [0.2073, 0.1713, 0.1748,  ..., 0.8567, 0.8196, 0.1925],
         [0.2694, 0.2948, 0.2882,  ..., 0.0478, 0.0601, 0.2901]],
        [[0.3061, 0.2982, 0.2999,  ..., 0.3000, 0.2638, 0.2885],
         [0.2091, 0.2115, 0.2072,  ..., 0.2060, 0.1989, 0.2102],
         [0.2091, 0.2115, 0.2160,  ..., 0.2097, 0.2747, 0.2197],
         [0.2757, 0.2788, 0.2769,  ..., 0.2843, 0.2626, 0.2815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2622, 0.3063, 0.2851,  ..., 0.2897, 0.3012, 0.2966],
         [0.1929, 0.2008, 0.2128,  ..., 0.2113, 0.2046, 0.2127],
         [0.2693, 0.2058, 0.2264,  ..., 0.2113, 0.2046, 0.2127],
         [0.2756, 0.2872, 0.2757,  ..., 0.2876, 0.2897, 0.2779]],
        [[0.3605, 0.3451, 0.3504,  ..., 0.3625, 0.3501, 0.0320],
         [0.1684, 0.1731, 0.1806,  ..., 0.1652, 0.1774, 0.0320],
         [0.1684, 0.1731, 0.1806,  ..., 0.1633, 0.1774, 0.9041],
         [0.3026, 0.3087, 0.2884,  ..., 0.3090, 0.2951, 0.0320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3470, 0.3276, 0.3555,  ..., 0.1664, 0.0499, 0.3761],
         [0.1560, 0.1791, 0.1693,  ..., 0.1664, 0.0499, 0.1600],
         [0.1560, 0.1701, 0.1693,  ..., 0.5007, 0.8503, 0.1600],
         [0.3409, 0.3232, 0.3058,  ..., 0.1664, 0.0499, 0.3038]],
        [[0.2867, 0.2874, 0.2653,  ..., 0.2948, 0.2632, 0.2858],
         [0.2070, 0.2052, 0.2108,  ..., 0.2118, 0.2144, 0.2075],
         [0.2274, 0.2233, 0.2627,  ..., 0.2176, 0.2602, 0.2357],
         [0.2789, 0.2842, 0.2612,  ..., 0.2759, 0.2622, 0.2710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1717, 0.2983, 0.2942,  ..., 0.3031, 0.2953, 0.3087],
         [0.1717, 0.2081, 0.2074,  ..., 0.2058, 0.2059, 0.1950],
         [0.4848, 0.2081, 0.2074,  ..., 0.2058, 0.2059, 0.1950],
         [0.1717, 0.2855, 0.2910,  ..., 0.2854, 0.2930, 0.3012]],
        [[0.3491, 0.3273, 0.3358,  ..., 0.3575, 0.3806, 0.0746],
         [0.1604, 0.1799, 0.1540,  ..., 0.1642, 0.1458, 0.0746],
         [0.1604, 0.1799, 0.1540,  ..., 0.1493, 0.1263, 0.7762],
         [0.3302, 0.3128, 0.3561,  ..., 0.3290, 0.3473, 0.0746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
2024-08-18 15:12:54,715 [Process: 0] Synchronize training processes
2024-08-18 15:12:54,715 [Process: 0] Evaluating...
2024-08-18 15:12:54,718 [Process: 0] EPOCH 19:
2024-08-18 15:12:54,721 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:55,787 [Process: 0] Synchronize training processes
2024-08-18 15:12:55,787 [Process: 0] Evaluating...
2024-08-18 15:12:55,789 [Process: 0] EPOCH 20:
2024-08-18 15:12:55,791 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3252, 0.3418, 0.3465,  ..., 0.2123, 0.1521, 0.3880],
         [0.1728, 0.1771, 0.1634,  ..., 0.2123, 0.1521, 0.1375],
         [0.1657, 0.1771, 0.1599,  ..., 0.3630, 0.5438, 0.1375],
         [0.3362, 0.3040, 0.3301,  ..., 0.2123, 0.1521, 0.3369]],
        [[0.3061, 0.3087, 0.2951,  ..., 0.1043, 0.0402, 0.0432],
         [0.2035, 0.2048, 0.2049,  ..., 0.1043, 0.0402, 0.0432],
         [0.2035, 0.2048, 0.2052,  ..., 0.6871, 0.8794, 0.8703],
         [0.2869, 0.2818, 0.2948,  ..., 0.1043, 0.0402, 0.0432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1050, 0.3030, 0.3039,  ..., 0.3195, 0.2950, 0.2866],
         [0.1050, 0.2058, 0.1969,  ..., 0.1959, 0.2020, 0.2035],
         [0.6850, 0.2087, 0.1969,  ..., 0.1959, 0.2020, 0.2302],
         [0.1050, 0.2825, 0.3023,  ..., 0.2888, 0.3010, 0.2797]],
        [[0.3161, 0.3959, 0.3525,  ..., 0.3592, 0.3334, 0.0518],
         [0.1726, 0.1321, 0.1411,  ..., 0.1523, 0.1592, 0.0518],
         [0.1726, 0.1188, 0.1400,  ..., 0.1523, 0.1592, 0.8446],
         [0.3387, 0.3532, 0.3665,  ..., 0.3362, 0.3482, 0.0518]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3053, 0.3262, 0.3591,  ..., 0.2319, 0.2117, 0.3187],
         [0.1651, 0.1744, 0.1468,  ..., 0.2319, 0.2117, 0.1669],
         [0.1651, 0.1743, 0.1405,  ..., 0.3044, 0.3648, 0.1669],
         [0.3646, 0.3251, 0.3536,  ..., 0.2319, 0.2117, 0.3476]],
        [[0.2328, 0.3095, 0.3292,  ..., 0.0993, 0.1193, 0.0723],
         [0.2110, 0.1880, 0.1799,  ..., 0.1161, 0.1193, 0.0723],
         [0.3372, 0.1880, 0.1799,  ..., 0.6852, 0.6422, 0.7832],
         [0.2189, 0.3146, 0.3109,  ..., 0.0993, 0.1193, 0.0723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:12:56,857 [Process: 0] Synchronize training processes
2024-08-18 15:12:56,858 [Process: 0] Evaluating...
2024-08-18 15:12:56,859 [Process: 0] EPOCH 21:
2024-08-18 15:12:56,861 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:12:57,927 [Process: 0] Synchronize training processes
2024-08-18 15:12:57,928 [Process: 0] Evaluating...
2024-08-18 15:12:57,931 [Process: 0] EPOCH 22:
2024-08-18 15:12:57,933 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0490, 0.3237, 0.3345,  ..., 0.3076, 0.3002, 0.1908],
         [0.0490, 0.1685, 0.1665,  ..., 0.1828, 0.1894, 0.1908],
         [0.8529, 0.1685, 0.1665,  ..., 0.1828, 0.1894, 0.4275],
         [0.0490, 0.3394, 0.3326,  ..., 0.3269, 0.3211, 0.1908]],
        [[0.3368, 0.3723, 0.3793,  ..., 0.3499, 0.3457, 0.0504],
         [0.1561, 0.1351, 0.1219,  ..., 0.1451, 0.1489, 0.0504],
         [0.1561, 0.1088, 0.1193,  ..., 0.1451, 0.1245, 0.8487],
         [0.3510, 0.3838, 0.3795,  ..., 0.3600, 0.3809, 0.0504]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3321, 0.3098, 0.3159,  ..., 0.1248, 0.1349, 0.3427],
         [0.1634, 0.1840, 0.1568,  ..., 0.1248, 0.1349, 0.1424],
         [0.1634, 0.1840, 0.1568,  ..., 0.6256, 0.5954, 0.1294],
         [0.3411, 0.3222, 0.3705,  ..., 0.1248, 0.1349, 0.3855]],
        [[0.2335, 0.3373, 0.3153,  ..., 0.0979, 0.1568, 0.0821],
         [0.1927, 0.1764, 0.1778,  ..., 0.0979, 0.1568, 0.0821],
         [0.3416, 0.1764, 0.1778,  ..., 0.7063, 0.5297, 0.7537],
         [0.2321, 0.3099, 0.3290,  ..., 0.0979, 0.1568, 0.0821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1771, 0.3503, 0.3166,  ..., 0.3422, 0.1548, 0.1307],
         [0.1771, 0.1455, 0.1889,  ..., 0.1417, 0.1548, 0.1307],
         [0.4686, 0.1436, 0.1889,  ..., 0.1417, 0.5355, 0.6080],
         [0.1771, 0.3606, 0.3057,  ..., 0.3744, 0.1548, 0.1307]],
        [[0.3135, 0.3454, 0.3449,  ..., 0.3543, 0.3664, 0.1256],
         [0.1902, 0.1139, 0.1067,  ..., 0.1582, 0.1441, 0.1256],
         [0.1902, 0.0969, 0.0876,  ..., 0.1469, 0.1219, 0.6232],
         [0.3062, 0.4438, 0.4608,  ..., 0.3406, 0.3676, 0.1256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3613, 0.3173, 0.3355,  ..., 0.1765, 0.1024, 0.3401],
         [0.1468, 0.1878, 0.1351,  ..., 0.1765, 0.1024, 0.1406],
         [0.1468, 0.1751, 0.1351,  ..., 0.4704, 0.6929, 0.1406],
         [0.3452, 0.3198, 0.3944,  ..., 0.1765, 0.1024, 0.3786]],
        [[0.3143, 0.3120, 0.3512,  ..., 0.0390, 0.0584, 0.0996],
         [0.1679, 0.1788, 0.1508,  ..., 0.0390, 0.0584, 0.0996],
         [0.1679, 0.1788, 0.1496,  ..., 0.8829, 0.8247, 0.7012],
         [0.3499, 0.3304, 0.3484,  ..., 0.0390, 0.0584, 0.0996]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:12:58,998 [Process: 0] Synchronize training processes
2024-08-18 15:12:58,998 [Process: 0] Evaluating...
2024-08-18 15:12:59,000 [Process: 0] EPOCH 23:
2024-08-18 15:12:59,001 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:00,065 [Process: 0] Synchronize training processes
2024-08-18 15:13:00,066 [Process: 0] Evaluating...
2024-08-18 15:13:00,067 [Process: 0] EPOCH 24:
2024-08-18 15:13:00,069 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1636, 0.3420, 0.3219,  ..., 0.3375, 0.1830, 0.1674],
         [0.1636, 0.1563, 0.1543,  ..., 0.1685, 0.1830, 0.1674],
         [0.5091, 0.1563, 0.1477,  ..., 0.1685, 0.4509, 0.4977],
         [0.1636, 0.3455, 0.3761,  ..., 0.3256, 0.1830, 0.1674]],
        [[0.2396, 0.3247, 0.3295,  ..., 0.3697, 0.3425, 0.1200],
         [0.2119, 0.1574, 0.1471,  ..., 0.1240, 0.1632, 0.1200],
         [0.3306, 0.1392, 0.1465,  ..., 0.1131, 0.1632, 0.6400],
         [0.2179, 0.3787, 0.3768,  ..., 0.3931, 0.3312, 0.1200]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3521, 0.3295, 0.3557,  ..., 0.0562, 0.0336, 0.3295],
         [0.1601, 0.1646, 0.1290,  ..., 0.0562, 0.0336, 0.1592],
         [0.1515, 0.1601, 0.1134,  ..., 0.8315, 0.8992, 0.1348],
         [0.3363, 0.3458, 0.4019,  ..., 0.0562, 0.0336, 0.3765]],
        [[0.3348, 0.3231, 0.3160,  ..., 0.0825, 0.3084, 0.0673],
         [0.1719, 0.1705, 0.1776,  ..., 0.0825, 0.1850, 0.0673],
         [0.1719, 0.1687, 0.1776,  ..., 0.7526, 0.1850, 0.7980],
         [0.3215, 0.3377, 0.3289,  ..., 0.0825, 0.3217, 0.0673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1402, 0.3316, 0.3520,  ..., 0.3588, 0.2731, 0.2034],
         [0.1402, 0.1718, 0.1393,  ..., 0.1661, 0.2084, 0.2034],
         [0.5793, 0.1569, 0.1393,  ..., 0.1661, 0.2531, 0.3898],
         [0.1402, 0.3396, 0.3694,  ..., 0.3090, 0.2653, 0.2034]],
        [[0.2196, 0.3855, 0.3334,  ..., 0.3168, 0.3464, 0.0705],
         [0.2139, 0.1094, 0.1393,  ..., 0.1443, 0.1563, 0.0705],
         [0.3522, 0.1029, 0.1113,  ..., 0.1131, 0.1371, 0.7884],
         [0.2143, 0.4021, 0.4160,  ..., 0.4258, 0.3602, 0.0705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3291, 0.3508, 0.3656,  ..., 0.1303, 0.1848, 0.3607],
         [0.1473, 0.1546, 0.1517,  ..., 0.1303, 0.1848, 0.1180],
         [0.1320, 0.1516, 0.1182,  ..., 0.6090, 0.4455, 0.0982],
         [0.3917, 0.3430, 0.3645,  ..., 0.1303, 0.1848, 0.4232]],
        [[0.2331, 0.3243, 0.3422,  ..., 0.1353, 0.0828, 0.0701],
         [0.2183, 0.1737, 0.1527,  ..., 0.1353, 0.0828, 0.0701],
         [0.3290, 0.1737, 0.1513,  ..., 0.5941, 0.7517, 0.7897],
         [0.2196, 0.3283, 0.3538,  ..., 0.1353, 0.0828, 0.0701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:01,136 [Process: 0] Synchronize training processes
2024-08-18 15:13:01,137 [Process: 0] Evaluating...
2024-08-18 15:13:01,138 [Process: 0] EPOCH 25:
2024-08-18 15:13:01,140 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:02,201 [Process: 0] Synchronize training processes
2024-08-18 15:13:02,202 [Process: 0] Evaluating...
2024-08-18 15:13:02,203 [Process: 0] EPOCH 26:
2024-08-18 15:13:02,205 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0954, 0.3511, 0.3743,  ..., 0.3411, 0.3252, 0.1788],
         [0.0954, 0.1409, 0.1449,  ..., 0.1705, 0.1980, 0.1788],
         [0.7139, 0.1409, 0.1333,  ..., 0.1569, 0.1980, 0.4635],
         [0.0954, 0.3670, 0.3475,  ..., 0.3315, 0.2789, 0.1788]],
        [[0.1258, 0.3910, 0.3680,  ..., 0.4030, 0.3554, 0.0535],
         [0.1258, 0.1134, 0.1628,  ..., 0.1127, 0.1505, 0.0535],
         [0.6226, 0.1134, 0.1349,  ..., 0.0930, 0.1208, 0.8394],
         [0.1258, 0.3821, 0.3343,  ..., 0.3914, 0.3733, 0.0535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3595, 0.3548, 0.3805,  ..., 0.0897, 0.2065, 0.3533],
         [0.1219, 0.1552, 0.1290,  ..., 0.0897, 0.2065, 0.1291],
         [0.1170, 0.1515, 0.1176,  ..., 0.7310, 0.3806, 0.1134],
         [0.4016, 0.3386, 0.3730,  ..., 0.0897, 0.2065, 0.4042]],
        [[0.3212, 0.3597, 0.3133,  ..., 0.0935, 0.0896, 0.0686],
         [0.1870, 0.1353, 0.1842,  ..., 0.0935, 0.0896, 0.0686],
         [0.1870, 0.1336, 0.1842,  ..., 0.7196, 0.7312, 0.7943],
         [0.3048, 0.3714, 0.3182,  ..., 0.0935, 0.0896, 0.0686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1058, 0.3240, 0.3675,  ..., 0.3592, 0.3495, 0.1998],
         [0.1058, 0.1605, 0.1433,  ..., 0.1396, 0.1591, 0.1950],
         [0.6825, 0.1605, 0.1433,  ..., 0.1396, 0.1591, 0.4101],
         [0.1058, 0.3550, 0.3460,  ..., 0.3615, 0.3324, 0.1950]],
        [[0.0550, 0.3652, 0.3765,  ..., 0.3414, 0.3705, 0.0457],
         [0.0550, 0.1091, 0.1079,  ..., 0.1403, 0.1234, 0.0457],
         [0.8349, 0.1028, 0.0953,  ..., 0.1360, 0.1184, 0.8628],
         [0.0550, 0.4229, 0.4203,  ..., 0.3822, 0.3877, 0.0457]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3556, 0.3545, 0.3393,  ..., 0.0154, 0.1230, 0.3780],
         [0.1605, 0.1583, 0.1570,  ..., 0.0154, 0.1230, 0.1352],
         [0.1371, 0.1473, 0.1312,  ..., 0.9537, 0.6311, 0.1126],
         [0.3468, 0.3399, 0.3726,  ..., 0.0154, 0.1230, 0.3742]],
        [[0.3197, 0.3396, 0.3297,  ..., 0.0998, 0.1859, 0.1791],
         [0.1879, 0.1508, 0.1625,  ..., 0.0998, 0.1859, 0.1791],
         [0.1879, 0.1476, 0.1625,  ..., 0.7006, 0.4424, 0.4627],
         [0.3045, 0.3620, 0.3452,  ..., 0.0998, 0.1859, 0.1791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:03,265 [Process: 0] Synchronize training processes
2024-08-18 15:13:03,266 [Process: 0] Evaluating...
2024-08-18 15:13:03,267 [Process: 0] EPOCH 27:
2024-08-18 15:13:03,269 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:04,335 [Process: 0] Synchronize training processes
2024-08-18 15:13:04,335 [Process: 0] Evaluating...
2024-08-18 15:13:04,337 [Process: 0] EPOCH 28:
2024-08-18 15:13:04,339 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1078, 0.3765, 0.3523,  ..., 0.3658, 0.3375, 0.1404],
         [0.1078, 0.1268, 0.1561,  ..., 0.1568, 0.1723, 0.1404],
         [0.6766, 0.1123, 0.1561,  ..., 0.1568, 0.1723, 0.5789],
         [0.1078, 0.3844, 0.3354,  ..., 0.3206, 0.3180, 0.1404]],
        [[0.0369, 0.3504, 0.3701,  ..., 0.3460, 0.3653, 0.0501],
         [0.0369, 0.1057, 0.1262,  ..., 0.1261, 0.1178, 0.0501],
         [0.8894, 0.0949, 0.1220,  ..., 0.0956, 0.1178, 0.8496],
         [0.0369, 0.4490, 0.3817,  ..., 0.4323, 0.3991, 0.0501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3246, 0.3465, 0.3514,  ..., 0.0562, 0.1309, 0.3173],
         [0.1602, 0.1740, 0.1659,  ..., 0.0562, 0.1309, 0.1770],
         [0.1408, 0.1740, 0.1405,  ..., 0.8315, 0.6072, 0.1673],
         [0.3744, 0.3054, 0.3422,  ..., 0.0562, 0.1309, 0.3384]],
        [[0.3551, 0.3447, 0.3367,  ..., 0.1940, 0.2983, 0.2858],
         [0.1598, 0.1682, 0.1750,  ..., 0.1940, 0.2001, 0.2027],
         [0.1462, 0.1682, 0.1674,  ..., 0.4181, 0.2336, 0.2383],
         [0.3389, 0.3190, 0.3209,  ..., 0.1940, 0.2680, 0.2732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1284, 0.3440, 0.3581,  ..., 0.3416, 0.3419, 0.1492],
         [0.1284, 0.1517, 0.1484,  ..., 0.1669, 0.1719, 0.1492],
         [0.6148, 0.1517, 0.1484,  ..., 0.1669, 0.1719, 0.5523],
         [0.1284, 0.3527, 0.3452,  ..., 0.3246, 0.3142, 0.1492]],
        [[0.0862, 0.4003, 0.3729,  ..., 0.3822, 0.3720, 0.0662],
         [0.0862, 0.0883, 0.1202,  ..., 0.1311, 0.1213, 0.0662],
         [0.7413, 0.0763, 0.0959,  ..., 0.1116, 0.1081, 0.8013],
         [0.0862, 0.4351, 0.4110,  ..., 0.3751, 0.3987, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3718, 0.3491, 0.3802,  ..., 0.0483, 0.2042, 0.3341],
         [0.1504, 0.1638, 0.1251,  ..., 0.0483, 0.2042, 0.1520],
         [0.1504, 0.1638, 0.1078,  ..., 0.8552, 0.3874, 0.1520],
         [0.3274, 0.3233, 0.3869,  ..., 0.0483, 0.2042, 0.3620]],
        [[0.2832, 0.3333, 0.3796,  ..., 0.0836, 0.1860, 0.1875],
         [0.2039, 0.1626, 0.1463,  ..., 0.0836, 0.1860, 0.1875],
         [0.2601, 0.1626, 0.1463,  ..., 0.7491, 0.4421, 0.4374],
         [0.2529, 0.3416, 0.3278,  ..., 0.0836, 0.1860, 0.1875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:05,398 [Process: 0] Synchronize training processes
2024-08-18 15:13:05,398 [Process: 0] Evaluating...
2024-08-18 15:13:05,400 [Process: 0] EPOCH 29:
2024-08-18 15:13:05,402 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:06,473 [Process: 0] Synchronize training processes
2024-08-18 15:13:06,473 [Process: 0] Evaluating...
2024-08-18 15:13:06,475 [Process: 0] EPOCH 30:
2024-08-18 15:13:06,476 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0802, 0.3570, 0.3544,  ..., 0.3716, 0.3333, 0.1639],
         [0.0802, 0.1460, 0.1628,  ..., 0.1525, 0.1832, 0.1639],
         [0.7593, 0.1460, 0.1628,  ..., 0.1525, 0.1832, 0.5083],
         [0.0802, 0.3510, 0.3200,  ..., 0.3234, 0.3004, 0.1639]],
        [[0.0463, 0.4092, 0.3638,  ..., 0.3879, 0.3634, 0.0663],
         [0.0463, 0.0896, 0.1355,  ..., 0.0941, 0.1138, 0.0663],
         [0.8610, 0.0723, 0.1355,  ..., 0.0831, 0.0890, 0.8012],
         [0.0463, 0.4289, 0.3651,  ..., 0.4349, 0.4338, 0.0663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3570, 0.3237, 0.3588,  ..., 0.0725, 0.1728, 0.3768],
         [0.1618, 0.1833, 0.1264,  ..., 0.0725, 0.1728, 0.1441],
         [0.1618, 0.1833, 0.1264,  ..., 0.7824, 0.4815, 0.1441],
         [0.3194, 0.3096, 0.3884,  ..., 0.0725, 0.1728, 0.3351]],
        [[0.3357, 0.3492, 0.3414,  ..., 0.0892, 0.0777, 0.0757],
         [0.1892, 0.1576, 0.1376,  ..., 0.0892, 0.0777, 0.0757],
         [0.1892, 0.1576, 0.1376,  ..., 0.7325, 0.7670, 0.7729],
         [0.2858, 0.3356, 0.3834,  ..., 0.0892, 0.0777, 0.0757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1255, 0.3711, 0.3790,  ..., 0.3413, 0.3340, 0.1093],
         [0.1255, 0.1521, 0.1492,  ..., 0.1856, 0.1855, 0.1093],
         [0.6234, 0.1521, 0.1492,  ..., 0.1856, 0.1855, 0.6721],
         [0.1255, 0.3247, 0.3226,  ..., 0.2876, 0.2949, 0.1093]],
        [[0.0648, 0.3666, 0.3868,  ..., 0.3966, 0.3486, 0.1502],
         [0.0648, 0.1254, 0.1036,  ..., 0.0871, 0.1383, 0.1502],
         [0.8056, 0.1254, 0.0827,  ..., 0.0871, 0.1172, 0.5493],
         [0.0648, 0.3825, 0.4268,  ..., 0.4293, 0.3960, 0.1502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:07,540 [Process: 0] Synchronize training processes
2024-08-18 15:13:07,540 [Process: 0] Evaluating...
2024-08-18 15:13:07,542 [Process: 0] EPOCH 31:
2024-08-18 15:13:07,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:08,613 [Process: 0] Synchronize training processes
2024-08-18 15:13:08,613 [Process: 0] Evaluating...
2024-08-18 15:13:08,617 [Process: 0] EPOCH 32:
2024-08-18 15:13:08,619 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3836, 0.3539, 0.3905,  ..., 0.0758, 0.1323, 0.3623],
         [0.1338, 0.1455, 0.1375,  ..., 0.0758, 0.1323, 0.1518],
         [0.1338, 0.1455, 0.1375,  ..., 0.7725, 0.6032, 0.1515],
         [0.3488, 0.3552, 0.3345,  ..., 0.0758, 0.1323, 0.3344]],
        [[0.3358, 0.3721, 0.3699,  ..., 0.1355, 0.1905, 0.1589],
         [0.1616, 0.1433, 0.1356,  ..., 0.1355, 0.1905, 0.1589],
         [0.1616, 0.1433, 0.1356,  ..., 0.5934, 0.4284, 0.5234],
         [0.3410, 0.3413, 0.3590,  ..., 0.1355, 0.1905, 0.1589]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1473, 0.3842, 0.3608,  ..., 0.1778, 0.3388, 0.1177],
         [0.1473, 0.1296, 0.1494,  ..., 0.1778, 0.1965, 0.1177],
         [0.5582, 0.1279, 0.1494,  ..., 0.4667, 0.1965, 0.6468],
         [0.1473, 0.3583, 0.3404,  ..., 0.1778, 0.2683, 0.1177]],
        [[0.0363, 0.3711, 0.4056,  ..., 0.4432, 0.4074, 0.0771],
         [0.0363, 0.1157, 0.0679,  ..., 0.0936, 0.0650, 0.0771],
         [0.8911, 0.0954, 0.0528,  ..., 0.0844, 0.0650, 0.7688],
         [0.0363, 0.4178, 0.4738,  ..., 0.3788, 0.4627, 0.0771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3423, 0.3549, 0.3758,  ..., 0.2005, 0.2380, 0.3349],
         [0.1520, 0.1493, 0.1137,  ..., 0.2005, 0.2089, 0.1619],
         [0.1497, 0.1493, 0.1137,  ..., 0.3984, 0.2994, 0.1619],
         [0.3560, 0.3464, 0.3968,  ..., 0.2005, 0.2536, 0.3412]],
        [[0.3725, 0.3384, 0.3582,  ..., 0.0322, 0.2695, 0.1520],
         [0.1460, 0.1828, 0.1516,  ..., 0.0322, 0.2069, 0.1520],
         [0.1460, 0.1828, 0.1516,  ..., 0.9033, 0.2641, 0.5441],
         [0.3355, 0.2960, 0.3385,  ..., 0.0322, 0.2594, 0.1520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1030, 0.3874, 0.3711,  ..., 0.1156, 0.3972, 0.0839],
         [0.1030, 0.1358, 0.1516,  ..., 0.1156, 0.1451, 0.0839],
         [0.6909, 0.1358, 0.1516,  ..., 0.6531, 0.1451, 0.7482],
         [0.1030, 0.3409, 0.3256,  ..., 0.1156, 0.3126, 0.0839]],
        [[0.0735, 0.4206, 0.3520,  ..., 0.4302, 0.3679, 0.1105],
         [0.0735, 0.0683, 0.1368,  ..., 0.0749, 0.1204, 0.1105],
         [0.7794, 0.0683, 0.1368,  ..., 0.0743, 0.1204, 0.6684],
         [0.0735, 0.4428, 0.3744,  ..., 0.4206, 0.3912, 0.1105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:09,687 [Process: 0] Synchronize training processes
2024-08-18 15:13:09,688 [Process: 0] Evaluating...
2024-08-18 15:13:09,689 [Process: 0] EPOCH 33:
2024-08-18 15:13:09,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3588, 0.3467, 0.3679,  ..., 0.0965, 0.2117, 0.3201],
         [0.1345, 0.1419, 0.1074,  ..., 0.0965, 0.2117, 0.1918],
         [0.1345, 0.1419, 0.0898,  ..., 0.7105, 0.3649, 0.1918],
         [0.3722, 0.3695, 0.4349,  ..., 0.0965, 0.2117, 0.2964]],
        [[0.3374, 0.3820, 0.3901,  ..., 0.0599, 0.1716, 0.0632],
         [0.1761, 0.1481, 0.1313,  ..., 0.0599, 0.1716, 0.0646],
         [0.1761, 0.1340, 0.1313,  ..., 0.8203, 0.4853, 0.8089],
         [0.3104, 0.3359, 0.3473,  ..., 0.0599, 0.1716, 0.0632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1257, 0.3573, 0.3590,  ..., 0.1802, 0.3223, 0.1043],
         [0.1257, 0.1513, 0.1323,  ..., 0.1802, 0.1960, 0.1043],
         [0.6228, 0.1513, 0.1323,  ..., 0.4595, 0.1960, 0.6871],
         [0.1257, 0.3402, 0.3763,  ..., 0.1802, 0.2856, 0.1043]],
        [[0.0994, 0.4001, 0.3767,  ..., 0.4020, 0.3603, 0.1099],
         [0.0994, 0.0600, 0.1010,  ..., 0.0822, 0.1371, 0.1099],
         [0.7019, 0.0503, 0.1010,  ..., 0.0822, 0.1371, 0.6702],
         [0.0994, 0.4896, 0.4212,  ..., 0.4336, 0.3655, 0.1099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3985, 0.3575, 0.3659,  ..., 0.0557, 0.1361, 0.3197],
         [0.1152, 0.1627, 0.1450,  ..., 0.0557, 0.1361, 0.1963],
         [0.0981, 0.1627, 0.1450,  ..., 0.8329, 0.5916, 0.2103],
         [0.3882, 0.3172, 0.3441,  ..., 0.0557, 0.1361, 0.2737]],
        [[0.3606, 0.4145, 0.3265,  ..., 0.0315, 0.2027, 0.1335],
         [0.1645, 0.1228, 0.1828,  ..., 0.0315, 0.2027, 0.1335],
         [0.1645, 0.1228, 0.1828,  ..., 0.9054, 0.3919, 0.5996],
         [0.3105, 0.3398, 0.3079,  ..., 0.0315, 0.2027, 0.1335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1003, 0.3902, 0.4178,  ..., 0.1909, 0.3407, 0.1357],
         [0.1003, 0.1102, 0.1252,  ..., 0.1909, 0.1932, 0.1357],
         [0.6990, 0.1102, 0.1252,  ..., 0.4273, 0.2097, 0.5928],
         [0.1003, 0.3893, 0.3317,  ..., 0.1909, 0.2564, 0.1357]],
        [[0.0681, 0.3244, 0.4638,  ..., 0.3518, 0.3127, 0.1084],
         [0.0681, 0.0802, 0.0777,  ..., 0.1412, 0.1311, 0.1084],
         [0.7957, 0.0761, 0.0690,  ..., 0.1074, 0.1311, 0.6749],
         [0.0681, 0.5193, 0.3895,  ..., 0.3996, 0.4250, 0.1084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:10,758 [Process: 0] Synchronize training processes
2024-08-18 15:13:10,758 [Process: 0] Evaluating...
2024-08-18 15:13:10,760 [Process: 0] EPOCH 34:
2024-08-18 15:13:10,762 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:11,828 [Process: 0] Synchronize training processes
2024-08-18 15:13:11,828 [Process: 0] Evaluating...
2024-08-18 15:13:11,830 [Process: 0] EPOCH 35:
2024-08-18 15:13:11,832 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3721, 0.3738, 0.3626,  ..., 0.0333, 0.1263, 0.3627],
         [0.1037, 0.1326, 0.1217,  ..., 0.0333, 0.1263, 0.1561],
         [0.1037, 0.1270, 0.1086,  ..., 0.9001, 0.6212, 0.1561],
         [0.4204, 0.3665, 0.4071,  ..., 0.0333, 0.1263, 0.3251]],
        [[0.3395, 0.4055, 0.3622,  ..., 0.0516, 0.2405, 0.1199],
         [0.1747, 0.1380, 0.1661,  ..., 0.0516, 0.2017, 0.1199],
         [0.1747, 0.1380, 0.1661,  ..., 0.8452, 0.3389, 0.6404],
         [0.3111, 0.3185, 0.3057,  ..., 0.0516, 0.2189, 0.1199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0970, 0.3676, 0.4048,  ..., 0.1871, 0.3722, 0.1030],
         [0.0970, 0.1243, 0.1087,  ..., 0.1871, 0.1592, 0.1030],
         [0.7090, 0.1243, 0.0908,  ..., 0.4386, 0.1592, 0.6910],
         [0.0970, 0.3838, 0.3957,  ..., 0.1871, 0.3094, 0.1030]],
        [[0.1020, 0.4067, 0.3655,  ..., 0.3923, 0.4432, 0.0533],
         [0.1020, 0.1383, 0.1503,  ..., 0.1013, 0.1110, 0.0533],
         [0.6941, 0.0976, 0.1237,  ..., 0.0854, 0.1110, 0.8402],
         [0.1020, 0.3574, 0.3606,  ..., 0.4210, 0.3348, 0.0533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3856, 0.3755, 0.3911,  ..., 0.0249, 0.2022, 0.3184],
         [0.1307, 0.1068, 0.1227,  ..., 0.0249, 0.2022, 0.1910],
         [0.1304, 0.0837, 0.1200,  ..., 0.9253, 0.3935, 0.1934],
         [0.3532, 0.4340, 0.3662,  ..., 0.0249, 0.2022, 0.2973]],
        [[0.3334, 0.3937, 0.3638,  ..., 0.0485, 0.2594, 0.1109],
         [0.1851, 0.1486, 0.1462,  ..., 0.0485, 0.1990, 0.1109],
         [0.1851, 0.1486, 0.1462,  ..., 0.8546, 0.3259, 0.6672],
         [0.2963, 0.3091, 0.3438,  ..., 0.0485, 0.2157, 0.1109]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0788, 0.3973, 0.4188,  ..., 0.1401, 0.3972, 0.0845],
         [0.0788, 0.1461, 0.1325,  ..., 0.1401, 0.1369, 0.0845],
         [0.7635, 0.1367, 0.1325,  ..., 0.5798, 0.1369, 0.7465],
         [0.0788, 0.3199, 0.3162,  ..., 0.1401, 0.3289, 0.0845]],
        [[0.1023, 0.3526, 0.4047,  ..., 0.3998, 0.3809, 0.0715],
         [0.1023, 0.1063, 0.0956,  ..., 0.1280, 0.0977, 0.0715],
         [0.6930, 0.0788, 0.0696,  ..., 0.1169, 0.0945, 0.7855],
         [0.1023, 0.4623, 0.4300,  ..., 0.3552, 0.4269, 0.0715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:12,899 [Process: 0] Synchronize training processes
2024-08-18 15:13:12,899 [Process: 0] Evaluating...
2024-08-18 15:13:12,901 [Process: 0] EPOCH 36:
2024-08-18 15:13:12,902 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:13,964 [Process: 0] Synchronize training processes
2024-08-18 15:13:13,965 [Process: 0] Evaluating...
2024-08-18 15:13:13,966 [Process: 0] EPOCH 37:
2024-08-18 15:13:13,968 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3278, 0.3555, 0.3571,  ..., 0.0398, 0.1107, 0.3450],
         [0.1572, 0.1594, 0.1440,  ..., 0.0398, 0.1107, 0.1742],
         [0.1572, 0.1203, 0.1397,  ..., 0.8805, 0.6678, 0.1742],
         [0.3577, 0.3647, 0.3592,  ..., 0.0398, 0.1107, 0.3067]],
        [[0.3563, 0.3726, 0.3709,  ..., 0.0945, 0.3026, 0.0555],
         [0.1840, 0.1651, 0.1473,  ..., 0.0945, 0.1968, 0.0555],
         [0.1754, 0.1546, 0.1176,  ..., 0.7165, 0.2580, 0.8334],
         [0.2843, 0.3077, 0.3642,  ..., 0.0945, 0.2426, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0676, 0.3655, 0.4211,  ..., 0.1124, 0.4431, 0.0899],
         [0.0676, 0.1537, 0.0936,  ..., 0.1124, 0.1297, 0.0899],
         [0.7972, 0.1537, 0.0806,  ..., 0.6627, 0.1297, 0.7303],
         [0.0676, 0.3271, 0.4048,  ..., 0.1124, 0.2976, 0.0899]],
        [[0.0794, 0.3888, 0.3824,  ..., 0.3776, 0.3559, 0.0696],
         [0.0794, 0.0853, 0.0992,  ..., 0.0607, 0.1204, 0.0696],
         [0.7618, 0.0725, 0.0992,  ..., 0.0607, 0.1204, 0.7913],
         [0.0794, 0.4534, 0.4193,  ..., 0.5010, 0.4032, 0.0696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3521, 0.3379, 0.3656,  ..., 0.0656, 0.1809, 0.3405],
         [0.1624, 0.1430, 0.1139,  ..., 0.0656, 0.1809, 0.1797],
         [0.1624, 0.1052, 0.1139,  ..., 0.8032, 0.4574, 0.1797],
         [0.3231, 0.4139, 0.4065,  ..., 0.0656, 0.1809, 0.3000]],
        [[0.3465, 0.3578, 0.3903,  ..., 0.0573, 0.3219, 0.0510],
         [0.1903, 0.1434, 0.1301,  ..., 0.0573, 0.2045, 0.0510],
         [0.2015, 0.1359, 0.1301,  ..., 0.8280, 0.2045, 0.8469],
         [0.2616, 0.3629, 0.3495,  ..., 0.0573, 0.2691, 0.0510]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:15,033 [Process: 0] Synchronize training processes
2024-08-18 15:13:15,033 [Process: 0] Evaluating...
2024-08-18 15:13:15,035 [Process: 0] EPOCH 38:
2024-08-18 15:13:15,037 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:16,096 [Process: 0] Synchronize training processes
2024-08-18 15:13:16,096 [Process: 0] Evaluating...
2024-08-18 15:13:16,098 [Process: 0] EPOCH 39:
2024-08-18 15:13:16,100 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1068, 0.4360, 0.3867,  ..., 0.1101, 0.1395, 0.0990],
         [0.1068, 0.1066, 0.1073,  ..., 0.1101, 0.1395, 0.0990],
         [0.6797, 0.1066, 0.1073,  ..., 0.6698, 0.5816, 0.7029],
         [0.1068, 0.3508, 0.3987,  ..., 0.1101, 0.1395, 0.0990]],
        [[0.0345, 0.3752, 0.3799,  ..., 0.3447, 0.3711, 0.0663],
         [0.0345, 0.1213, 0.0653,  ..., 0.1074, 0.1448, 0.0663],
         [0.8966, 0.1213, 0.0632,  ..., 0.1074, 0.1448, 0.8012],
         [0.0345, 0.3822, 0.4915,  ..., 0.4405, 0.3393, 0.0663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3207, 0.3620, 0.3381,  ..., 0.1295, 0.0653, 0.3067],
         [0.1601, 0.0818, 0.1106,  ..., 0.1295, 0.0653, 0.1886],
         [0.1601, 0.0818, 0.1106,  ..., 0.6115, 0.8040, 0.2435],
         [0.3591, 0.4744, 0.4407,  ..., 0.1295, 0.0653, 0.2612]],
        [[0.4006, 0.3762, 0.3525,  ..., 0.0273, 0.3487, 0.2514],
         [0.1612, 0.1693, 0.1385,  ..., 0.0273, 0.1935, 0.2059],
         [0.1612, 0.1693, 0.1385,  ..., 0.9180, 0.2089, 0.3367],
         [0.2770, 0.2853, 0.3705,  ..., 0.0273, 0.2489, 0.2059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0685, 0.3990, 0.4090,  ..., 0.1561, 0.4155, 0.1359],
         [0.0685, 0.1149, 0.1272,  ..., 0.1561, 0.1064, 0.1359],
         [0.7946, 0.1149, 0.1272,  ..., 0.5318, 0.1064, 0.5923],
         [0.0685, 0.3711, 0.3366,  ..., 0.1561, 0.3718, 0.1359]],
        [[0.0373, 0.3914, 0.3519,  ..., 0.3770, 0.3905, 0.0439],
         [0.0455, 0.0798, 0.1175,  ..., 0.0988, 0.1323, 0.0439],
         [0.8799, 0.0798, 0.1175,  ..., 0.0973, 0.1323, 0.8683],
         [0.0373, 0.4490, 0.4131,  ..., 0.4270, 0.3449, 0.0439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3585, 0.2994, 0.3588,  ..., 0.1208, 0.2315, 0.3469],
         [0.1067, 0.1072, 0.0958,  ..., 0.1208, 0.2002, 0.1766],
         [0.1067, 0.1046, 0.0958,  ..., 0.6376, 0.3680, 0.1766],
         [0.4281, 0.4888, 0.4496,  ..., 0.1208, 0.2002, 0.3000]],
        [[0.4063, 0.3942, 0.4446,  ..., 0.0177, 0.2244, 0.1388],
         [0.1660, 0.1425, 0.0958,  ..., 0.0177, 0.1948, 0.1443],
         [0.1660, 0.1425, 0.0958,  ..., 0.9468, 0.3861, 0.5781],
         [0.2617, 0.3209, 0.3639,  ..., 0.0177, 0.1948, 0.1388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:17,160 [Process: 0] Synchronize training processes
2024-08-18 15:13:17,160 [Process: 0] Evaluating...
2024-08-18 15:13:17,162 [Process: 0] EPOCH 40:
2024-08-18 15:13:17,164 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:18,223 [Process: 0] Synchronize training processes
2024-08-18 15:13:18,223 [Process: 0] Evaluating...
2024-08-18 15:13:18,225 [Process: 0] EPOCH 41:
2024-08-18 15:13:18,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0806, 0.3667, 0.4060,  ..., 0.1175, 0.3731, 0.1196],
         [0.0882, 0.1748, 0.1289,  ..., 0.1175, 0.1620, 0.1196],
         [0.7505, 0.1748, 0.1289,  ..., 0.6476, 0.1620, 0.6413],
         [0.0806, 0.2837, 0.3362,  ..., 0.1175, 0.3029, 0.1196]],
        [[0.0725, 0.2958, 0.3814,  ..., 0.3326, 0.3610, 0.0586],
         [0.0725, 0.0752, 0.1187,  ..., 0.0764, 0.0863, 0.0919],
         [0.7825, 0.0752, 0.1187,  ..., 0.0657, 0.0863, 0.7910],
         [0.0725, 0.5538, 0.3811,  ..., 0.5254, 0.4664, 0.0586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3564, 0.2221, 0.3617,  ..., 0.1228, 0.1382, 0.3462],
         [0.1289, 0.0537, 0.1310,  ..., 0.1228, 0.1382, 0.1590],
         [0.1289, 0.0485, 0.1310,  ..., 0.6317, 0.5855, 0.1590],
         [0.3858, 0.6757, 0.3763,  ..., 0.1228, 0.1382, 0.3358]],
        [[0.2148, 0.3566, 0.3975,  ..., 0.0129, 0.1876, 0.1068],
         [0.1946, 0.1583, 0.1200,  ..., 0.0185, 0.1876, 0.1068],
         [0.3961, 0.1583, 0.1200,  ..., 0.9557, 0.4371, 0.6795],
         [0.1946, 0.3268, 0.3625,  ..., 0.0129, 0.1876, 0.1068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0954, 0.4267, 0.3917,  ..., 0.0770, 0.4269, 0.1229],
         [0.0954, 0.1516, 0.1092,  ..., 0.0885, 0.1286, 0.1229],
         [0.7139, 0.1516, 0.1092,  ..., 0.7575, 0.1286, 0.6312],
         [0.0954, 0.2700, 0.3899,  ..., 0.0770, 0.3159, 0.1229]],
        [[0.0742, 0.3206, 0.1971,  ..., 0.3221, 0.3085, 0.0681],
         [0.0742, 0.0668, 0.0395,  ..., 0.0668, 0.0895, 0.0736],
         [0.7774, 0.0668, 0.0344,  ..., 0.0663, 0.0800, 0.7903],
         [0.0742, 0.5459, 0.7290,  ..., 0.5448, 0.5220, 0.0681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3586, 0.3158, 0.3256,  ..., 0.0580, 0.0834, 0.3328],
         [0.1293, 0.1043, 0.1286,  ..., 0.0580, 0.0834, 0.1844],
         [0.1293, 0.1043, 0.1286,  ..., 0.8260, 0.7498, 0.1903],
         [0.3828, 0.4755, 0.4173,  ..., 0.0580, 0.0834, 0.2925]],
        [[0.3402, 0.3903, 0.3751,  ..., 0.0332, 0.3604, 0.0610],
         [0.1990, 0.1325, 0.1454,  ..., 0.0332, 0.1914, 0.0610],
         [0.2486, 0.1325, 0.1454,  ..., 0.9005, 0.1980, 0.8171],
         [0.2122, 0.3447, 0.3342,  ..., 0.0332, 0.2503, 0.0610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:19,319 [Process: 0] Synchronize training processes
2024-08-18 15:13:19,319 [Process: 0] Evaluating...
2024-08-18 15:13:19,323 [Process: 0] EPOCH 42:
2024-08-18 15:13:19,325 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:20,453 [Process: 0] Synchronize training processes
2024-08-18 15:13:20,453 [Process: 0] Evaluating...
2024-08-18 15:13:20,455 [Process: 0] EPOCH 43:
2024-08-18 15:13:20,457 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1031, 0.4076, 0.3993,  ..., 0.1032, 0.4856, 0.0772],
         [0.1031, 0.1641, 0.1364,  ..., 0.1032, 0.1181, 0.0772],
         [0.6906, 0.1641, 0.1364,  ..., 0.6903, 0.1181, 0.7685],
         [0.1031, 0.2642, 0.3279,  ..., 0.1032, 0.2783, 0.0772]],
        [[0.0442, 0.3511, 0.3283,  ..., 0.3632, 0.3419, 0.0534],
         [0.0442, 0.0722, 0.0727,  ..., 0.1182, 0.1067, 0.0534],
         [0.8674, 0.0722, 0.0727,  ..., 0.1182, 0.1067, 0.8399],
         [0.0442, 0.5046, 0.5263,  ..., 0.4004, 0.4447, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3309, 0.2797, 0.3161,  ..., 0.0582, 0.0521, 0.3243],
         [0.1739, 0.1157, 0.1433,  ..., 0.0582, 0.0521, 0.1970],
         [0.1790, 0.1157, 0.1433,  ..., 0.8255, 0.8437, 0.2287],
         [0.3162, 0.4890, 0.3973,  ..., 0.0582, 0.0521, 0.2500]],
        [[0.4132, 0.3475, 0.3805,  ..., 0.0364, 0.4139, 0.0120],
         [0.1908, 0.1507, 0.1515,  ..., 0.0364, 0.1856, 0.0120],
         [0.1908, 0.1507, 0.1515,  ..., 0.8908, 0.1856, 0.9640],
         [0.2052, 0.3512, 0.3164,  ..., 0.0364, 0.2148, 0.0120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1059, 0.4531, 0.3825,  ..., 0.0982, 0.4514, 0.0820],
         [0.1059, 0.1227, 0.0952,  ..., 0.0982, 0.1013, 0.0820],
         [0.6822, 0.1227, 0.0952,  ..., 0.7054, 0.1013, 0.7539],
         [0.1059, 0.3015, 0.4272,  ..., 0.0982, 0.3460, 0.0820]],
        [[0.0343, 0.0595, 0.1957,  ..., 0.2252, 0.2571, 0.0569],
         [0.0357, 0.0123, 0.0396,  ..., 0.0603, 0.0979, 0.0569],
         [0.8958, 0.0097, 0.0374,  ..., 0.0603, 0.0979, 0.8294],
         [0.0343, 0.9185, 0.7272,  ..., 0.6542, 0.5471, 0.0569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:13:21,585 [Process: 0] Synchronize training processes
2024-08-18 15:13:21,585 [Process: 0] Evaluating...
2024-08-18 15:13:21,587 [Process: 0] EPOCH 44:
2024-08-18 15:13:21,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3575, 0.1953, 0.3555,  ..., 0.0395, 0.0913, 0.3166],
         [0.1526, 0.0588, 0.1322,  ..., 0.0395, 0.0913, 0.1983],
         [0.1526, 0.0570, 0.1322,  ..., 0.8814, 0.7260, 0.2800],
         [0.3374, 0.6889, 0.3800,  ..., 0.0395, 0.0913, 0.2051]],
        [[0.4313, 0.3243, 0.3266,  ..., 0.0475, 0.4035, 0.0250],
         [0.1611, 0.1375, 0.1301,  ..., 0.0475, 0.1551, 0.0250],
         [0.1611, 0.1375, 0.1301,  ..., 0.8576, 0.1551, 0.9249],
         [0.2465, 0.4008, 0.4131,  ..., 0.0475, 0.2862, 0.0250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1102, 0.4842, 0.3434,  ..., 0.0811, 0.4449, 0.0558],
         [0.1102, 0.1407, 0.1037,  ..., 0.0811, 0.1332, 0.0558],
         [0.6695, 0.1407, 0.1037,  ..., 0.7568, 0.1332, 0.8325],
         [0.1102, 0.2345, 0.4491,  ..., 0.0811, 0.2887, 0.0558]],
        [[0.0241, 0.0550, 0.1583,  ..., 0.2096, 0.3838, 0.0448],
         [0.0241, 0.0084, 0.0581,  ..., 0.0743, 0.1181, 0.0448],
         [0.9276, 0.0084, 0.0541,  ..., 0.0743, 0.1181, 0.8655],
         [0.0241, 0.9282, 0.7295,  ..., 0.6418, 0.3799, 0.0448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4730, 0.1055, 0.5548,  ..., 0.0661, 0.1617, 0.4465],
         [0.1757, 0.0520, 0.1484,  ..., 0.0661, 0.1617, 0.1801],
         [0.1757, 0.0520, 0.1484,  ..., 0.8018, 0.5149, 0.1801],
         [0.1757, 0.7904, 0.1484,  ..., 0.0661, 0.1617, 0.1933]],
        [[0.4074, 0.1712, 0.2963,  ..., 0.0327, 0.4937, 0.0367],
         [0.1975, 0.0924, 0.1393,  ..., 0.0327, 0.1688, 0.0367],
         [0.1975, 0.0885, 0.1236,  ..., 0.9018, 0.1688, 0.8899],
         [0.1975, 0.6478, 0.4408,  ..., 0.0327, 0.1688, 0.0367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0532, 0.4728, 0.2064,  ..., 0.0526, 0.4306, 0.0721],
         [0.0532, 0.1706, 0.0754,  ..., 0.0526, 0.1839, 0.0721],
         [0.8405, 0.1706, 0.0747,  ..., 0.8422, 0.1839, 0.7836],
         [0.0532, 0.1861, 0.6435,  ..., 0.0526, 0.2016, 0.0721]],
        [[0.0090, 0.0492, 0.0865,  ..., 0.0818, 0.2695, 0.0486],
         [0.0090, 0.0234, 0.0465,  ..., 0.0432, 0.0869, 0.0486],
         [0.9729, 0.0234, 0.0465,  ..., 0.0432, 0.0869, 0.8543],
         [0.0090, 0.9040, 0.8206,  ..., 0.8318, 0.5568, 0.0486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:22,727 [Process: 0] Synchronize training processes
2024-08-18 15:13:22,727 [Process: 0] Evaluating...
2024-08-18 15:13:22,729 [Process: 0] EPOCH 45:
2024-08-18 15:13:22,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:23,867 [Process: 0] Synchronize training processes
2024-08-18 15:13:23,867 [Process: 0] Evaluating...
2024-08-18 15:13:23,869 [Process: 0] EPOCH 46:
2024-08-18 15:13:23,871 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4518, 0.0334, 0.3831,  ..., 0.0452, 0.1132, 0.2387],
         [0.1827, 0.0207, 0.1959,  ..., 0.0452, 0.1132, 0.1324],
         [0.1827, 0.0167, 0.2011,  ..., 0.8643, 0.6603, 0.1298],
         [0.1827, 0.9292, 0.2199,  ..., 0.0452, 0.1132, 0.4991]],
        [[0.4361, 0.4048, 0.2856,  ..., 0.0514, 0.4256, 0.0176],
         [0.1836, 0.1886, 0.1897,  ..., 0.0514, 0.1915, 0.0176],
         [0.1967, 0.1886, 0.3349,  ..., 0.8458, 0.1915, 0.9471],
         [0.1836, 0.2180, 0.1897,  ..., 0.0514, 0.1915, 0.0176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0447, 0.6121, 0.3174,  ..., 0.0793, 0.2094, 0.0938],
         [0.0447, 0.1293, 0.0954,  ..., 0.0793, 0.1731, 0.0938],
         [0.8658, 0.1293, 0.0954,  ..., 0.7620, 0.4445, 0.7186],
         [0.0447, 0.1293, 0.4918,  ..., 0.0793, 0.1731, 0.0938]],
        [[0.0354, 0.0187, 0.0824,  ..., 0.0263, 0.3626, 0.0230],
         [0.0354, 0.0176, 0.0443,  ..., 0.0207, 0.1414, 0.0230],
         [0.8938, 0.0176, 0.0443,  ..., 0.0207, 0.1414, 0.9311],
         [0.0354, 0.9462, 0.8289,  ..., 0.9323, 0.3546, 0.0230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4064, 0.0191, 0.4838,  ..., 0.0100, 0.0363, 0.3038],
         [0.1872, 0.0159, 0.1715,  ..., 0.0100, 0.0363, 0.1653],
         [0.1872, 0.0159, 0.1715,  ..., 0.9701, 0.8910, 0.1653],
         [0.2192, 0.9492, 0.1733,  ..., 0.0100, 0.0363, 0.3656]],
        [[0.3717, 0.4855, 0.4228,  ..., 0.0202, 0.3723, 0.0184],
         [0.1958, 0.1715, 0.1924,  ..., 0.0202, 0.1974, 0.0184],
         [0.2366, 0.1715, 0.1924,  ..., 0.9394, 0.2139, 0.9447],
         [0.1958, 0.1715, 0.1924,  ..., 0.0202, 0.2164, 0.0184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0405, 0.4174, 0.0927,  ..., 0.0921, 0.2760, 0.3006],
         [0.0405, 0.1933, 0.0652,  ..., 0.0921, 0.1187, 0.1893],
         [0.8784, 0.1959, 0.0652,  ..., 0.7237, 0.1187, 0.3208],
         [0.0405, 0.1933, 0.7768,  ..., 0.0921, 0.4865, 0.1893]],
        [[0.0027, 0.1585, 0.1901,  ..., 0.0420, 0.5608, 0.0495],
         [0.0027, 0.0870, 0.0899,  ..., 0.0365, 0.1329, 0.0495],
         [0.9920, 0.0870, 0.0899,  ..., 0.0365, 0.1329, 0.8515],
         [0.0027, 0.6675, 0.6300,  ..., 0.8850, 0.1734, 0.0495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:25,007 [Process: 0] Synchronize training processes
2024-08-18 15:13:25,007 [Process: 0] Evaluating...
2024-08-18 15:13:25,009 [Process: 0] EPOCH 47:
2024-08-18 15:13:25,011 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:26,144 [Process: 0] Synchronize training processes
2024-08-18 15:13:26,145 [Process: 0] Evaluating...
2024-08-18 15:13:26,146 [Process: 0] EPOCH 48:
2024-08-18 15:13:26,148 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4327, 0.0380, 0.4742,  ..., 0.0053, 0.0390, 0.4625],
         [0.1688, 0.0322, 0.1580,  ..., 0.0053, 0.0390, 0.1792],
         [0.1688, 0.0322, 0.1580,  ..., 0.9840, 0.8831, 0.1792],
         [0.2296, 0.8976, 0.2099,  ..., 0.0053, 0.0390, 0.1792]],
        [[0.3641, 0.4052, 0.3888,  ..., 0.0138, 0.2785, 0.0382],
         [0.1948, 0.1749, 0.1676,  ..., 0.0138, 0.1853, 0.0382],
         [0.2092, 0.1749, 0.1676,  ..., 0.9586, 0.3510, 0.8855],
         [0.2318, 0.2451, 0.2760,  ..., 0.0138, 0.1853, 0.0382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0900, 0.2338, 0.4257,  ..., 0.0537, 0.3980, 0.1356],
         [0.0900, 0.1720, 0.1593,  ..., 0.0537, 0.1426, 0.1356],
         [0.7300, 0.4222, 0.1593,  ..., 0.8389, 0.1426, 0.5932],
         [0.0900, 0.1720, 0.2557,  ..., 0.0537, 0.3167, 0.1356]],
        [[0.0396, 0.0091, 0.0167,  ..., 0.1936, 0.2528, 0.0544],
         [0.0396, 0.0091, 0.0167,  ..., 0.1381, 0.1143, 0.0544],
         [0.8598, 0.0091, 0.0167,  ..., 0.1381, 0.1132, 0.8368],
         [0.0611, 0.9726, 0.9500,  ..., 0.5303, 0.5197, 0.0544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3996, 0.0228, 0.3572,  ..., 0.0316, 0.0152, 0.4328],
         [0.1736, 0.0176, 0.1693,  ..., 0.0316, 0.0152, 0.1679],
         [0.1736, 0.0176, 0.1693,  ..., 0.9051, 0.9545, 0.1679],
         [0.2531, 0.9419, 0.3042,  ..., 0.0316, 0.0152, 0.2314]],
        [[0.2550, 0.1970, 0.2767,  ..., 0.0102, 0.1001, 0.0403],
         [0.1877, 0.1260, 0.1366,  ..., 0.0102, 0.1001, 0.0403],
         [0.3696, 0.1246, 0.1366,  ..., 0.9694, 0.6996, 0.8790],
         [0.1877, 0.5524, 0.4501,  ..., 0.0102, 0.1001, 0.0403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:27,283 [Process: 0] Synchronize training processes
2024-08-18 15:13:27,284 [Process: 0] Evaluating...
2024-08-18 15:13:27,285 [Process: 0] EPOCH 49:
2024-08-18 15:13:27,287 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:28,420 [Process: 0] Synchronize training processes
2024-08-18 15:13:28,421 [Process: 0] Evaluating...
2024-08-18 15:13:28,422 [Process: 0] EPOCH 50:
2024-08-18 15:13:28,424 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3077, 0.4632, 0.2508,  ..., 0.1337, 0.5080, 0.0597],
         [0.1883, 0.1524, 0.0987,  ..., 0.1337, 0.1604, 0.0597],
         [0.3158, 0.1524, 0.0987,  ..., 0.5988, 0.1604, 0.8209],
         [0.1883, 0.2320, 0.5517,  ..., 0.1337, 0.1712, 0.0597]],
        [[0.0068, 0.0365, 0.0223,  ..., 0.0116, 0.5047, 0.0598],
         [0.0068, 0.0365, 0.0223,  ..., 0.0116, 0.1323, 0.0598],
         [0.9796, 0.0365, 0.0223,  ..., 0.0116, 0.1323, 0.8206],
         [0.0068, 0.8904, 0.9332,  ..., 0.9653, 0.2307, 0.0598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3964, 0.1899, 0.3454,  ..., 0.0267, 0.0170, 0.3616],
         [0.1755, 0.1254, 0.1756,  ..., 0.0267, 0.0170, 0.1540],
         [0.1755, 0.1254, 0.1756,  ..., 0.9200, 0.9489, 0.1534],
         [0.2526, 0.5593, 0.3034,  ..., 0.0267, 0.0170, 0.3311]],
        [[0.3174, 0.1869, 0.2584,  ..., 0.0119, 0.3039, 0.1088],
         [0.1891, 0.1090, 0.1461,  ..., 0.0119, 0.1973, 0.1088],
         [0.2751, 0.1090, 0.1461,  ..., 0.9644, 0.3015, 0.6737],
         [0.2184, 0.5951, 0.4493,  ..., 0.0119, 0.1973, 0.1088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0323, 0.4902, 0.1057,  ..., 0.0716, 0.2788, 0.0992],
         [0.0323, 0.1699, 0.1057,  ..., 0.0716, 0.1406, 0.0992],
         [0.9031, 0.1699, 0.1057,  ..., 0.7852, 0.1406, 0.7024],
         [0.0323, 0.1699, 0.6830,  ..., 0.0716, 0.4400, 0.0992]],
        [[0.0162, 0.0139, 0.0484,  ..., 0.0691, 0.4476, 0.0511],
         [0.0162, 0.0139, 0.0484,  ..., 0.0691, 0.1490, 0.0511],
         [0.9515, 0.0139, 0.0484,  ..., 0.0691, 0.1490, 0.8466],
         [0.0162, 0.9583, 0.8548,  ..., 0.7928, 0.2545, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4318, 0.1800, 0.1698,  ..., 0.0626, 0.1012, 0.4207],
         [0.1625, 0.1074, 0.1174,  ..., 0.0626, 0.1012, 0.1711],
         [0.1625, 0.1074, 0.1174,  ..., 0.8122, 0.6965, 0.1699],
         [0.2431, 0.6052, 0.5953,  ..., 0.0626, 0.1012, 0.2383]],
        [[0.3709, 0.2011, 0.1205,  ..., 0.0137, 0.2198, 0.0188],
         [0.1929, 0.1316, 0.1044,  ..., 0.0137, 0.1742, 0.0188],
         [0.2434, 0.1316, 0.1044,  ..., 0.9589, 0.4318, 0.9437],
         [0.1929, 0.5357, 0.6707,  ..., 0.0137, 0.1742, 0.0188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:29,565 [Process: 0] Synchronize training processes
2024-08-18 15:13:29,565 [Process: 0] Evaluating...
2024-08-18 15:13:29,567 [Process: 0] EPOCH 51:
2024-08-18 15:13:29,569 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0195, 0.4428, 0.3251,  ..., 0.0707, 0.1309, 0.0582],
         [0.0195, 0.1737, 0.1551,  ..., 0.0707, 0.1309, 0.0582],
         [0.9416, 0.1737, 0.1551,  ..., 0.7878, 0.6073, 0.8254],
         [0.0195, 0.2099, 0.3647,  ..., 0.0707, 0.1309, 0.0582]],
        [[0.0291, 0.0127, 0.4815,  ..., 0.0267, 0.4068, 0.3269],
         [0.0291, 0.0127, 0.1622,  ..., 0.0267, 0.1712, 0.1772],
         [0.9128, 0.0127, 0.1622,  ..., 0.0267, 0.1712, 0.3186],
         [0.0291, 0.9619, 0.1940,  ..., 0.9198, 0.2507, 0.1772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4533, 0.0303, 0.2383,  ..., 0.0719, 0.2553, 0.4257],
         [0.1586, 0.0303, 0.1416,  ..., 0.0719, 0.1701, 0.1621],
         [0.1577, 0.0303, 0.1416,  ..., 0.7842, 0.4075, 0.1489],
         [0.2305, 0.9091, 0.4786,  ..., 0.0719, 0.1671, 0.2633]],
        [[0.2818, 0.1709, 0.1575,  ..., 0.0117, 0.3000, 0.1841],
         [0.1778, 0.1337, 0.1429,  ..., 0.0117, 0.1768, 0.1540],
         [0.3627, 0.1337, 0.1546,  ..., 0.9649, 0.3480, 0.5080],
         [0.1778, 0.5617, 0.5450,  ..., 0.0117, 0.1753, 0.1540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0301, 0.5458, 0.0959,  ..., 0.1272, 0.2520, 0.0780],
         [0.0301, 0.1280, 0.0959,  ..., 0.1272, 0.1116, 0.0780],
         [0.9096, 0.1269, 0.0959,  ..., 0.6183, 0.1116, 0.7660],
         [0.0301, 0.1993, 0.7122,  ..., 0.1272, 0.5248, 0.0780]],
        [[0.0408, 0.0139, 0.2164,  ..., 0.0214, 0.0543, 0.0308],
         [0.0408, 0.0139, 0.1673,  ..., 0.0214, 0.0543, 0.0308],
         [0.8775, 0.0139, 0.4490,  ..., 0.0214, 0.8371, 0.9075],
         [0.0408, 0.9583, 0.1673,  ..., 0.9358, 0.0543, 0.0308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:30,701 [Process: 0] Synchronize training processes
2024-08-18 15:13:30,702 [Process: 0] Evaluating...
2024-08-18 15:13:30,705 [Process: 0] EPOCH 52:
2024-08-18 15:13:30,707 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:31,842 [Process: 0] Synchronize training processes
2024-08-18 15:13:31,842 [Process: 0] Evaluating...
2024-08-18 15:13:31,844 [Process: 0] EPOCH 53:
2024-08-18 15:13:31,846 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3639, 0.0808, 0.4034,  ..., 0.0772, 0.1054, 0.5379],
         [0.1629, 0.0808, 0.1987,  ..., 0.0772, 0.1054, 0.1486],
         [0.3104, 0.0808, 0.2026,  ..., 0.7685, 0.6839, 0.1451],
         [0.1629, 0.7575, 0.1953,  ..., 0.0772, 0.1054, 0.1684]],
        [[0.3161, 0.1659, 0.0637,  ..., 0.0161, 0.1691, 0.0611],
         [0.1786, 0.1318, 0.0637,  ..., 0.0161, 0.1458, 0.0611],
         [0.3267, 0.1318, 0.0637,  ..., 0.9517, 0.5393, 0.8168],
         [0.1786, 0.5705, 0.8090,  ..., 0.0161, 0.1458, 0.0611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0410, 0.4996, 0.1199,  ..., 0.1569, 0.1559, 0.0765],
         [0.0410, 0.1241, 0.1016,  ..., 0.1294, 0.1045, 0.0765],
         [0.8769, 0.1241, 0.1016,  ..., 0.5843, 0.1045, 0.7705],
         [0.0410, 0.2522, 0.6769,  ..., 0.1294, 0.6351, 0.0765]],
        [[0.1582, 0.0236, 0.1255,  ..., 0.0078, 0.1625, 0.0459],
         [0.1272, 0.0236, 0.1255,  ..., 0.0078, 0.0994, 0.0459],
         [0.5874, 0.0236, 0.6235,  ..., 0.0078, 0.0994, 0.8624],
         [0.1272, 0.9292, 0.1255,  ..., 0.9765, 0.6386, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5298, 0.0174, 0.5322,  ..., 0.0601, 0.0106, 0.3277],
         [0.1629, 0.0174, 0.1568,  ..., 0.0601, 0.0106, 0.1410],
         [0.1537, 0.0174, 0.1555,  ..., 0.8198, 0.9683, 0.1410],
         [0.1537, 0.9478, 0.1555,  ..., 0.0601, 0.0106, 0.3903]],
        [[0.4138, 0.3938, 0.3116,  ..., 0.0334, 0.0990, 0.0150],
         [0.1915, 0.1767, 0.1446,  ..., 0.0334, 0.0990, 0.0150],
         [0.2032, 0.1632, 0.1388,  ..., 0.8998, 0.7031, 0.9550],
         [0.1915, 0.2663, 0.4049,  ..., 0.0334, 0.0990, 0.0150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0071, 0.3030, 0.1249,  ..., 0.1027, 0.5483, 0.0789],
         [0.0071, 0.1470, 0.0994,  ..., 0.1015, 0.1506, 0.0789],
         [0.9786, 0.1470, 0.0994,  ..., 0.6943, 0.1506, 0.7634],
         [0.0071, 0.4030, 0.6762,  ..., 0.1015, 0.1506, 0.0789]],
        [[0.0351, 0.0314, 0.0389,  ..., 0.0136, 0.1495, 0.0833],
         [0.0351, 0.0314, 0.0389,  ..., 0.0136, 0.1008, 0.0833],
         [0.8948, 0.0314, 0.8832,  ..., 0.0136, 0.1008, 0.7501],
         [0.0351, 0.9058, 0.0389,  ..., 0.9593, 0.6489, 0.0833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:32,979 [Process: 0] Synchronize training processes
2024-08-18 15:13:32,979 [Process: 0] Evaluating...
2024-08-18 15:13:32,981 [Process: 0] EPOCH 54:
2024-08-18 15:13:32,983 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:34,110 [Process: 0] Synchronize training processes
2024-08-18 15:13:34,110 [Process: 0] Evaluating...
2024-08-18 15:13:34,113 [Process: 0] EPOCH 55:
2024-08-18 15:13:34,115 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3829, 0.0969, 0.3658,  ..., 0.0294, 0.0539, 0.2312],
         [0.1719, 0.0969, 0.1751,  ..., 0.0294, 0.0539, 0.1377],
         [0.1719, 0.0969, 0.1751,  ..., 0.9119, 0.8384, 0.1377],
         [0.2732, 0.7093, 0.2840,  ..., 0.0294, 0.0539, 0.4934]],
        [[0.5204, 0.3232, 0.0978,  ..., 0.0211, 0.0780, 0.0091],
         [0.1599, 0.1517, 0.0978,  ..., 0.0211, 0.0780, 0.0091],
         [0.1599, 0.1517, 0.0978,  ..., 0.9367, 0.7661, 0.9728],
         [0.1599, 0.3734, 0.7066,  ..., 0.0211, 0.0780, 0.0091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0585, 0.4203, 0.0292,  ..., 0.1104, 0.0741, 0.0651],
         [0.0585, 0.1545, 0.0292,  ..., 0.1104, 0.0741, 0.0651],
         [0.8246, 0.1545, 0.0292,  ..., 0.6687, 0.0741, 0.8046],
         [0.0585, 0.2706, 0.9123,  ..., 0.1104, 0.7778, 0.0651]],
        [[0.0570, 0.0086, 0.2500,  ..., 0.0113, 0.4853, 0.1277],
         [0.0570, 0.0086, 0.2500,  ..., 0.0113, 0.1479, 0.1156],
         [0.8290, 0.0086, 0.2500,  ..., 0.0113, 0.1479, 0.6411],
         [0.0570, 0.9741, 0.2500,  ..., 0.9661, 0.2189, 0.1156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3666, 0.1106, 0.5038,  ..., 0.0227, 0.0233, 0.3345],
         [0.1817, 0.1019, 0.1654,  ..., 0.0227, 0.0233, 0.1466],
         [0.2700, 0.1019, 0.1654,  ..., 0.9319, 0.9302, 0.1465],
         [0.1817, 0.6856, 0.1654,  ..., 0.0227, 0.0233, 0.3724]],
        [[0.1614, 0.3987, 0.1419,  ..., 0.0353, 0.1880, 0.0514],
         [0.1295, 0.1653, 0.1372,  ..., 0.0353, 0.1403, 0.0514],
         [0.5797, 0.1653, 0.1372,  ..., 0.8940, 0.5314, 0.8459],
         [0.1295, 0.2707, 0.5837,  ..., 0.0353, 0.1403, 0.0514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:35,238 [Process: 0] Synchronize training processes
2024-08-18 15:13:35,238 [Process: 0] Evaluating...
2024-08-18 15:13:35,240 [Process: 0] EPOCH 56:
2024-08-18 15:13:35,242 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:36,374 [Process: 0] Synchronize training processes
2024-08-18 15:13:36,375 [Process: 0] Evaluating...
2024-08-18 15:13:36,376 [Process: 0] EPOCH 57:
2024-08-18 15:13:36,378 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0397, 0.3797, 0.0458,  ..., 0.0873, 0.1874, 0.1149],
         [0.0397, 0.1386, 0.0458,  ..., 0.0873, 0.1494, 0.1149],
         [0.8809, 0.1386, 0.0458,  ..., 0.7382, 0.5138, 0.6552],
         [0.0397, 0.3430, 0.8626,  ..., 0.0873, 0.1494, 0.1149]],
        [[0.0713, 0.0058, 0.0624,  ..., 0.0274, 0.5449, 0.1423],
         [0.0713, 0.0058, 0.0624,  ..., 0.0274, 0.1348, 0.1228],
         [0.7862, 0.0058, 0.0624,  ..., 0.0274, 0.1343, 0.6121],
         [0.0713, 0.9825, 0.8127,  ..., 0.9179, 0.1860, 0.1228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4732, 0.0701, 0.4165,  ..., 0.0504, 0.0066, 0.5529],
         [0.1727, 0.0701, 0.1810,  ..., 0.0504, 0.0066, 0.1490],
         [0.1815, 0.0701, 0.2288,  ..., 0.8488, 0.9802, 0.1490],
         [0.1727, 0.7896, 0.1737,  ..., 0.0504, 0.0066, 0.1490]],
        [[0.3532, 0.1033, 0.1206,  ..., 0.0211, 0.2845, 0.0138],
         [0.1757, 0.1033, 0.1125,  ..., 0.0211, 0.1670, 0.0138],
         [0.2954, 0.1033, 0.1125,  ..., 0.9366, 0.3816, 0.9586],
         [0.1757, 0.6901, 0.6543,  ..., 0.0211, 0.1670, 0.0138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0305, 0.4991, 0.0722,  ..., 0.0783, 0.0638, 0.0571],
         [0.0305, 0.1363, 0.0722,  ..., 0.0783, 0.0638, 0.0571],
         [0.9086, 0.1363, 0.0722,  ..., 0.7652, 0.0638, 0.8288],
         [0.0305, 0.2283, 0.7833,  ..., 0.0783, 0.8085, 0.0571]],
        [[0.0915, 0.0059, 0.2904,  ..., 0.0121, 0.5706, 0.0685],
         [0.0915, 0.0059, 0.2365,  ..., 0.0121, 0.1431, 0.0685],
         [0.7255, 0.0059, 0.2365,  ..., 0.0121, 0.1431, 0.7945],
         [0.0915, 0.9823, 0.2365,  ..., 0.9638, 0.1431, 0.0685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4799, 0.1332, 0.5066,  ..., 0.0433, 0.0338, 0.5926],
         [0.1695, 0.1332, 0.1645,  ..., 0.0433, 0.0338, 0.1358],
         [0.1812, 0.1356, 0.1645,  ..., 0.8700, 0.8987, 0.1358],
         [0.1695, 0.5980, 0.1645,  ..., 0.0433, 0.0338, 0.1358]],
        [[0.2688, 0.1563, 0.1053,  ..., 0.0209, 0.1772, 0.0178],
         [0.1683, 0.0991, 0.1053,  ..., 0.0209, 0.1472, 0.0178],
         [0.3947, 0.0991, 0.1053,  ..., 0.9373, 0.5284, 0.9465],
         [0.1683, 0.6456, 0.6842,  ..., 0.0209, 0.1472, 0.0178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:37,511 [Process: 0] Synchronize training processes
2024-08-18 15:13:37,511 [Process: 0] Evaluating...
2024-08-18 15:13:37,513 [Process: 0] EPOCH 58:
2024-08-18 15:13:37,515 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:38,647 [Process: 0] Synchronize training processes
2024-08-18 15:13:38,648 [Process: 0] Evaluating...
2024-08-18 15:13:38,649 [Process: 0] EPOCH 59:
2024-08-18 15:13:38,651 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0419, 0.3676, 0.5776,  ..., 0.1339, 0.0629, 0.0687],
         [0.0466, 0.1317, 0.1435,  ..., 0.1284, 0.0629, 0.0687],
         [0.8623, 0.1317, 0.1395,  ..., 0.6093, 0.0629, 0.7940],
         [0.0492, 0.3690, 0.1395,  ..., 0.1284, 0.8112, 0.0687]],
        [[0.0225, 0.0135, 0.0066,  ..., 0.0225, 0.7470, 0.0313],
         [0.0225, 0.0135, 0.0066,  ..., 0.0225, 0.0843, 0.0313],
         [0.9325, 0.0135, 0.0066,  ..., 0.0225, 0.0843, 0.9051],
         [0.0225, 0.9596, 0.9802,  ..., 0.9325, 0.0843, 0.0323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3900, 0.2318, 0.1703,  ..., 0.0128, 0.0308, 0.5752],
         [0.1803, 0.1508, 0.1233,  ..., 0.0128, 0.0308, 0.1416],
         [0.1803, 0.1508, 0.1233,  ..., 0.9615, 0.9075, 0.1416],
         [0.2493, 0.4666, 0.5831,  ..., 0.0128, 0.0308, 0.1416]],
        [[0.5242, 0.0743, 0.1030,  ..., 0.0320, 0.5512, 0.0177],
         [0.1586, 0.0743, 0.0969,  ..., 0.0320, 0.1496, 0.0177],
         [0.1586, 0.0743, 0.0969,  ..., 0.9041, 0.1496, 0.9468],
         [0.1586, 0.7770, 0.7031,  ..., 0.0320, 0.1496, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0664, 0.2459, 0.7369,  ..., 0.0413, 0.2636, 0.0569],
         [0.0664, 0.1517, 0.0877,  ..., 0.0413, 0.1661, 0.0569],
         [0.8009, 0.1517, 0.0877,  ..., 0.8760, 0.4043, 0.8293],
         [0.0664, 0.4507, 0.0877,  ..., 0.0413, 0.1661, 0.0569]],
        [[0.0431, 0.0117, 0.0452,  ..., 0.0441, 0.5444, 0.0115],
         [0.0431, 0.0117, 0.0452,  ..., 0.0441, 0.1519, 0.0115],
         [0.8707, 0.0117, 0.0452,  ..., 0.0441, 0.1519, 0.9656],
         [0.0431, 0.9649, 0.8644,  ..., 0.8676, 0.1519, 0.0115]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:39,792 [Process: 0] Synchronize training processes
2024-08-18 15:13:39,792 [Process: 0] Evaluating...
2024-08-18 15:13:39,794 [Process: 0] EPOCH 60:
2024-08-18 15:13:39,796 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3574, 0.1063, 0.1965,  ..., 0.0202, 0.0197, 0.5685],
         [0.1550, 0.1063, 0.1445,  ..., 0.0202, 0.0197, 0.1438],
         [0.1550, 0.1063, 0.1445,  ..., 0.9395, 0.9408, 0.1438],
         [0.3326, 0.6811, 0.5145,  ..., 0.0202, 0.0197, 0.1438]],
        [[0.6585, 0.0627, 0.1882,  ..., 0.0309, 0.5574, 0.0237],
         [0.1138, 0.0627, 0.1501,  ..., 0.0309, 0.1475, 0.0237],
         [0.1138, 0.0627, 0.1501,  ..., 0.9072, 0.1475, 0.9290],
         [0.1138, 0.8118, 0.5115,  ..., 0.0309, 0.1475, 0.0237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0746, 0.5425, 0.6047,  ..., 0.0577, 0.4259, 0.0663],
         [0.0746, 0.1415, 0.1318,  ..., 0.0577, 0.1712, 0.0663],
         [0.7763, 0.1415, 0.1318,  ..., 0.8268, 0.1712, 0.8011],
         [0.0746, 0.1744, 0.1318,  ..., 0.0577, 0.2317, 0.0663]],
        [[0.0183, 0.0454, 0.0016,  ..., 0.0126, 0.5804, 0.0360],
         [0.0183, 0.0454, 0.0016,  ..., 0.0126, 0.1399, 0.0360],
         [0.9452, 0.0454, 0.0016,  ..., 0.0126, 0.1399, 0.8920],
         [0.0183, 0.8639, 0.9951,  ..., 0.9621, 0.1399, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.6181, 0.0836, 0.3702,  ..., 0.0690, 0.0123, 0.6772],
         [0.1273, 0.0836, 0.1764,  ..., 0.0690, 0.0123, 0.1076],
         [0.1273, 0.0836, 0.1764,  ..., 0.7931, 0.9632, 0.1076],
         [0.1273, 0.7493, 0.2771,  ..., 0.0690, 0.0123, 0.1076]],
        [[0.5561, 0.1379, 0.1330,  ..., 0.1083, 0.0361, 0.0867],
         [0.1480, 0.1009, 0.1076,  ..., 0.1083, 0.0458, 0.0867],
         [0.1480, 0.1009, 0.1076,  ..., 0.6752, 0.8820, 0.7399],
         [0.1480, 0.6603, 0.6518,  ..., 0.1083, 0.0361, 0.0867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0374, 0.3556, 0.6584,  ..., 0.0508, 0.4695, 0.0633],
         [0.0374, 0.1736, 0.1139,  ..., 0.0508, 0.1599, 0.0633],
         [0.8877, 0.1736, 0.1139,  ..., 0.8476, 0.1599, 0.8101],
         [0.0374, 0.2973, 0.1139,  ..., 0.0509, 0.2108, 0.0633]],
        [[0.0070, 0.0031, 0.1012,  ..., 0.0167, 0.6072, 0.0687],
         [0.0070, 0.0031, 0.1012,  ..., 0.0167, 0.1309, 0.0687],
         [0.9790, 0.0031, 0.1012,  ..., 0.0167, 0.1309, 0.7940],
         [0.0070, 0.9907, 0.6963,  ..., 0.9498, 0.1309, 0.0687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:40,929 [Process: 0] Synchronize training processes
2024-08-18 15:13:40,930 [Process: 0] Evaluating...
2024-08-18 15:13:40,931 [Process: 0] EPOCH 61:
2024-08-18 15:13:40,933 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:42,066 [Process: 0] Synchronize training processes
2024-08-18 15:13:42,066 [Process: 0] Evaluating...
2024-08-18 15:13:42,070 [Process: 0] EPOCH 62:
2024-08-18 15:13:42,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5218, 0.0542, 0.3117,  ..., 0.0082, 0.0100, 0.7158],
         [0.1594, 0.0542, 0.1543,  ..., 0.0082, 0.0100, 0.0947],
         [0.1594, 0.0542, 0.1543,  ..., 0.9754, 0.9700, 0.0947],
         [0.1594, 0.8373, 0.3797,  ..., 0.0082, 0.0100, 0.0947]],
        [[0.4634, 0.0583, 0.0989,  ..., 0.0148, 0.1329, 0.0472],
         [0.1640, 0.0583, 0.0989,  ..., 0.0162, 0.1158, 0.0472],
         [0.2086, 0.0583, 0.1132,  ..., 0.9543, 0.6354, 0.8585],
         [0.1640, 0.8252, 0.6891,  ..., 0.0148, 0.1158, 0.0472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0897, 0.2372, 0.7184,  ..., 0.0632, 0.1079, 0.0600],
         [0.0897, 0.1325, 0.0939,  ..., 0.0632, 0.1079, 0.0600],
         [0.7309, 0.1325, 0.0939,  ..., 0.8105, 0.1079, 0.8200],
         [0.0897, 0.4978, 0.0939,  ..., 0.0632, 0.6764, 0.0600]],
        [[0.0126, 0.0574, 0.0902,  ..., 0.0095, 0.5303, 0.0286],
         [0.0126, 0.0574, 0.0902,  ..., 0.0095, 0.1531, 0.0286],
         [0.9622, 0.0574, 0.2673,  ..., 0.0095, 0.1531, 0.9142],
         [0.0126, 0.8279, 0.5523,  ..., 0.9715, 0.1634, 0.0286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.3598, 0.0454, 0.2634,  ..., 0.0067, 0.0210, 0.5461],
         [0.1738, 0.0454, 0.1637,  ..., 0.0067, 0.0210, 0.1513],
         [0.2926, 0.0454, 0.1637,  ..., 0.9800, 0.9371, 0.1513],
         [0.1738, 0.8639, 0.4092,  ..., 0.0067, 0.0210, 0.1513]],
        [[0.5221, 0.0843, 0.4222,  ..., 0.0566, 0.5281, 0.0843],
         [0.1591, 0.0843, 0.1658,  ..., 0.0566, 0.1573, 0.0843],
         [0.1597, 0.0843, 0.1658,  ..., 0.8301, 0.1573, 0.7470],
         [0.1591, 0.7470, 0.2462,  ..., 0.0566, 0.1573, 0.0843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 15:13:43,207 [Process: 0] Synchronize training processes
2024-08-18 15:13:43,207 [Process: 0] Evaluating...
2024-08-18 15:13:43,209 [Process: 0] EPOCH 63:
2024-08-18 15:13:43,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:44,336 [Process: 0] Synchronize training processes
2024-08-18 15:13:44,336 [Process: 0] Evaluating...
2024-08-18 15:13:44,338 [Process: 0] EPOCH 64:
2024-08-18 15:13:44,340 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0467, 0.0604, 0.6755,  ..., 0.0685, 0.1064, 0.1336],
         [0.0467, 0.0604, 0.1082,  ..., 0.0685, 0.1056, 0.1252],
         [0.8600, 0.0604, 0.1082,  ..., 0.7946, 0.6823, 0.6159],
         [0.0467, 0.8189, 0.1082,  ..., 0.0685, 0.1056, 0.1252]],
        [[0.0099, 0.0772, 0.1980,  ..., 0.0115, 0.6823, 0.0294],
         [0.0099, 0.0772, 0.1980,  ..., 0.0115, 0.1059, 0.0294],
         [0.9703, 0.0772, 0.1980,  ..., 0.0115, 0.1059, 0.9119],
         [0.0099, 0.7683, 0.4061,  ..., 0.9655, 0.1059, 0.0294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.4456, 0.0395, 0.3711,  ..., 0.0085, 0.0112, 0.5327],
         [0.1556, 0.0395, 0.1617,  ..., 0.0085, 0.0112, 0.1558],
         [0.2432, 0.0395, 0.1617,  ..., 0.9746, 0.9663, 0.1558],
         [0.1556, 0.8816, 0.3054,  ..., 0.0085, 0.0112, 0.1558]],
        [[0.5232, 0.0585, 0.0656,  ..., 0.0145, 0.2692, 0.0771],
         [0.1501, 0.0585, 0.0656,  ..., 0.0145, 0.1662, 0.0771],
         [0.1766, 0.0585, 0.0656,  ..., 0.9566, 0.3984, 0.7688],
         [0.1501, 0.8244, 0.8031,  ..., 0.0145, 0.1662, 0.0771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0434, 0.0838, 0.6160,  ..., 0.0774, 0.2062, 0.1142],
         [0.0434, 0.0838, 0.1280,  ..., 0.0774, 0.1365, 0.1070],
         [0.8699, 0.0838, 0.1280,  ..., 0.7678, 0.5207, 0.6732],
         [0.0434, 0.7487, 0.1280,  ..., 0.0774, 0.1365, 0.1055]],
        [[0.0123, 0.0068, 0.0011,  ..., 0.0106, 0.7864, 0.0762],
         [0.0123, 0.0068, 0.0011,  ..., 0.0106, 0.0712, 0.0762],
         [0.9630, 0.0068, 0.0011,  ..., 0.0106, 0.0712, 0.7715],
         [0.0123, 0.9795, 0.9968,  ..., 0.9681, 0.0712, 0.0762]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5271, 0.0333, 0.5115,  ..., 0.0175, 0.0077, 0.5590],
         [0.1543, 0.0333, 0.1426,  ..., 0.0175, 0.0079, 0.1470],
         [0.1642, 0.0333, 0.1426,  ..., 0.9475, 0.9767, 0.1470],
         [0.1543, 0.9000, 0.2033,  ..., 0.0175, 0.0077, 0.1470]],
        [[0.5609, 0.0741, 0.0813,  ..., 0.0264, 0.3405, 0.0521],
         [0.1464, 0.0741, 0.0813,  ..., 0.0264, 0.1721, 0.0521],
         [0.1464, 0.0741, 0.0813,  ..., 0.9209, 0.3153, 0.8436],
         [0.1464, 0.7778, 0.7562,  ..., 0.0264, 0.1721, 0.0521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:45,460 [Process: 0] Synchronize training processes
2024-08-18 15:13:45,460 [Process: 0] Evaluating...
2024-08-18 15:13:45,462 [Process: 0] EPOCH 65:
2024-08-18 15:13:45,464 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:46,597 [Process: 0] Synchronize training processes
2024-08-18 15:13:46,597 [Process: 0] Evaluating...
2024-08-18 15:13:46,599 [Process: 0] EPOCH 66:
2024-08-18 15:13:46,601 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0311e-02, 1.7046e-01, 6.8005e-01,  ..., 4.6931e-02,
          6.9736e-02, 4.7984e-02],
         [3.0311e-02, 1.2407e-01, 1.0665e-01,  ..., 4.6931e-02,
          6.9736e-02, 4.7984e-02],
         [9.0907e-01, 1.2407e-01, 1.0665e-01,  ..., 8.5921e-01,
          6.9736e-02, 8.5605e-01],
         [3.0311e-02, 5.8139e-01, 1.0665e-01,  ..., 4.6931e-02,
          7.9079e-01, 4.7984e-02]],
        [[1.8492e-02, 1.0159e-02, 9.9609e-04,  ..., 5.7837e-03,
          6.1447e-01, 5.6354e-02],
         [1.8492e-02, 1.0159e-02, 9.9609e-04,  ..., 5.7837e-03,
          1.2851e-01, 5.6354e-02],
         [9.4453e-01, 1.0159e-02, 9.9609e-04,  ..., 5.7837e-03,
          1.2851e-01, 8.3094e-01],
         [1.8492e-02, 9.6952e-01, 9.9701e-01,  ..., 9.8265e-01,
          1.2851e-01, 5.6354e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5057, 0.0383, 0.0498,  ..., 0.0652, 0.0450, 0.6643],
         [0.1474, 0.0383, 0.0498,  ..., 0.0652, 0.0450, 0.1119],
         [0.1474, 0.0383, 0.0582,  ..., 0.8045, 0.8650, 0.1119],
         [0.1995, 0.8850, 0.8421,  ..., 0.0652, 0.0450, 0.1119]],
        [[0.4350, 0.0831, 0.0924,  ..., 0.0328, 0.4307, 0.0245],
         [0.1786, 0.0831, 0.0924,  ..., 0.0328, 0.1740, 0.0245],
         [0.2079, 0.0831, 0.0924,  ..., 0.9017, 0.2213, 0.9266],
         [0.1786, 0.7507, 0.7227,  ..., 0.0328, 0.1740, 0.0245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2554e-02, 9.3106e-02, 6.6950e-01,  ..., 5.0458e-02,
          5.5386e-01, 7.8741e-02],
         [2.2554e-02, 9.2688e-02, 1.1017e-01,  ..., 5.0458e-02,
          1.4727e-01, 7.8741e-02],
         [9.3234e-01, 9.2688e-02, 1.1017e-01,  ..., 8.4862e-01,
          1.4727e-01, 7.6378e-01],
         [2.2554e-02, 7.2152e-01, 1.1017e-01,  ..., 5.0458e-02,
          1.5161e-01, 7.8741e-02]],
        [[2.3752e-02, 7.6255e-04, 7.9116e-02,  ..., 1.5545e-02,
          6.2024e-01, 2.7773e-02],
         [2.3752e-02, 7.6255e-04, 7.9116e-02,  ..., 1.5545e-02,
          1.2082e-01, 2.7773e-02],
         [9.2874e-01, 7.6255e-04, 4.8966e-01,  ..., 1.5545e-02,
          1.2082e-01, 9.1668e-01],
         [2.3752e-02, 9.9771e-01, 3.5211e-01,  ..., 9.5337e-01,
          1.3812e-01, 2.7773e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
2024-08-18 15:13:47,735 [Process: 0] Synchronize training processes
2024-08-18 15:13:47,736 [Process: 0] Evaluating...
2024-08-18 15:13:47,738 [Process: 0] EPOCH 67:
2024-08-18 15:13:47,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.6573, 0.1135, 0.0804,  ..., 0.0531, 0.0035, 0.6073],
         [0.1142, 0.1135, 0.0804,  ..., 0.0531, 0.0035, 0.1265],
         [0.1142, 0.1208, 0.1004,  ..., 0.8408, 0.9894, 0.1265],
         [0.1142, 0.6523, 0.7388,  ..., 0.0531, 0.0035, 0.1397]],
        [[0.4594, 0.0670, 0.1384,  ..., 0.0203, 0.3201, 0.0257],
         [0.1587, 0.0670, 0.1198,  ..., 0.0203, 0.1708, 0.0257],
         [0.2232, 0.0670, 0.1198,  ..., 0.9390, 0.3384, 0.9228],
         [0.1587, 0.7990, 0.6219,  ..., 0.0203, 0.1708, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0239, 0.2308, 0.3535,  ..., 0.0432, 0.3666, 0.0723],
         [0.0239, 0.1507, 0.1442,  ..., 0.0446, 0.1762, 0.0723],
         [0.9282, 0.1507, 0.1442,  ..., 0.8690, 0.2810, 0.7832],
         [0.0239, 0.4678, 0.3581,  ..., 0.0432, 0.1762, 0.0723]],
        [[0.0446, 0.0022, 0.0321,  ..., 0.0478, 0.4740, 0.0595],
         [0.0446, 0.0022, 0.0128,  ..., 0.0478, 0.1375, 0.0595],
         [0.8662, 0.0022, 0.0128,  ..., 0.0478, 0.1375, 0.8214],
         [0.0446, 0.9933, 0.9423,  ..., 0.8566, 0.2510, 0.0595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7085, 0.0521, 0.0475,  ..., 0.0768, 0.0788, 0.8654],
         [0.0972, 0.0521, 0.0475,  ..., 0.0768, 0.0788, 0.0449],
         [0.0972, 0.0521, 0.0475,  ..., 0.7695, 0.7635, 0.0449],
         [0.0972, 0.8437, 0.8576,  ..., 0.0768, 0.0788, 0.0449]],
        [[0.5679, 0.1006, 0.0696,  ..., 0.0131, 0.1002, 0.0120],
         [0.1440, 0.1006, 0.0696,  ..., 0.0187, 0.0992, 0.0120],
         [0.1440, 0.1006, 0.0696,  ..., 0.9552, 0.7015, 0.9640],
         [0.1440, 0.6983, 0.7912,  ..., 0.0131, 0.0992, 0.0120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0250, 0.1792, 0.0666,  ..., 0.0645, 0.5240, 0.0356],
         [0.0250, 0.1333, 0.0666,  ..., 0.0645, 0.1587, 0.0356],
         [0.9250, 0.1333, 0.0666,  ..., 0.8065, 0.1587, 0.8931],
         [0.0250, 0.5542, 0.8003,  ..., 0.0645, 0.1587, 0.0356]],
        [[0.0731, 0.0302, 0.0029,  ..., 0.0622, 0.3243, 0.0596],
         [0.0731, 0.0302, 0.0029,  ..., 0.0622, 0.1410, 0.0596],
         [0.7797, 0.0302, 0.0029,  ..., 0.0622, 0.1410, 0.8211],
         [0.0740, 0.9093, 0.9914,  ..., 0.8133, 0.3937, 0.0596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:48,875 [Process: 0] Synchronize training processes
2024-08-18 15:13:48,876 [Process: 0] Evaluating...
2024-08-18 15:13:48,877 [Process: 0] EPOCH 68:
2024-08-18 15:13:48,879 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:50,016 [Process: 0] Synchronize training processes
2024-08-18 15:13:50,016 [Process: 0] Evaluating...
2024-08-18 15:13:50,018 [Process: 0] EPOCH 69:
2024-08-18 15:13:50,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7020, 0.0601, 0.0604,  ..., 0.0575, 0.0076, 0.7525],
         [0.1007, 0.0601, 0.0604,  ..., 0.0575, 0.0076, 0.0825],
         [0.0986, 0.0601, 0.0604,  ..., 0.8274, 0.9773, 0.0825],
         [0.0986, 0.8198, 0.8189,  ..., 0.0575, 0.0076, 0.0825]],
        [[0.2737, 0.0416, 0.0408,  ..., 0.0049, 0.3278, 0.0315],
         [0.1753, 0.0416, 0.0408,  ..., 0.0049, 0.1748, 0.0315],
         [0.3758, 0.0416, 0.0408,  ..., 0.9854, 0.3227, 0.9056],
         [0.1753, 0.8752, 0.8777,  ..., 0.0049, 0.1748, 0.0315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0526, 0.1751, 0.0811,  ..., 0.1007, 0.5003, 0.0361],
         [0.0526, 0.1216, 0.0811,  ..., 0.1007, 0.1666, 0.0386],
         [0.8422, 0.1216, 0.0811,  ..., 0.6979, 0.1666, 0.8892],
         [0.0526, 0.5816, 0.7566,  ..., 0.1007, 0.1666, 0.0361]],
        [[0.0498, 0.0220, 0.0019,  ..., 0.0303, 0.7624, 0.0528],
         [0.0498, 0.0220, 0.0019,  ..., 0.0303, 0.0792, 0.0528],
         [0.8506, 0.0220, 0.0019,  ..., 0.0303, 0.0792, 0.8417],
         [0.0498, 0.9339, 0.9943,  ..., 0.9090, 0.0792, 0.0528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.6741, 0.0837, 0.1226,  ..., 0.0413, 0.0218, 0.0920],
         [0.1086, 0.0853, 0.1226,  ..., 0.0413, 0.0218, 0.0920],
         [0.1086, 0.0884, 0.1285,  ..., 0.8760, 0.9345, 0.0920],
         [0.1086, 0.7425, 0.6264,  ..., 0.0413, 0.0218, 0.7241]],
        [[0.6466, 0.0370, 0.1259,  ..., 0.0243, 0.3455, 0.0718],
         [0.1178, 0.0370, 0.1259,  ..., 0.0243, 0.1743, 0.0718],
         [0.1178, 0.0370, 0.1283,  ..., 0.9271, 0.3060, 0.7847],
         [0.1178, 0.8889, 0.6200,  ..., 0.0243, 0.1743, 0.0718]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0411, 0.0630, 0.1273,  ..., 0.0502, 0.2405, 0.0522],
         [0.0411, 0.0630, 0.1083,  ..., 0.0502, 0.1571, 0.0522],
         [0.8766, 0.0630, 0.1083,  ..., 0.8493, 0.4453, 0.8435],
         [0.0411, 0.8110, 0.6562,  ..., 0.0502, 0.1571, 0.0522]],
        [[0.0349, 0.0069, 0.0537,  ..., 0.0438, 0.7487, 0.0344],
         [0.0349, 0.0069, 0.0537,  ..., 0.0438, 0.0838, 0.0344],
         [0.8954, 0.0069, 0.0537,  ..., 0.0438, 0.0838, 0.8968],
         [0.0349, 0.9792, 0.8390,  ..., 0.8685, 0.0838, 0.0344]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:51,153 [Process: 0] Synchronize training processes
2024-08-18 15:13:51,153 [Process: 0] Evaluating...
2024-08-18 15:13:51,155 [Process: 0] EPOCH 70:
2024-08-18 15:13:51,157 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:52,290 [Process: 0] Synchronize training processes
2024-08-18 15:13:52,290 [Process: 0] Evaluating...
2024-08-18 15:13:52,292 [Process: 0] EPOCH 71:
2024-08-18 15:13:52,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.6613, 0.0758, 0.1050,  ..., 0.0241, 0.0166, 0.8038],
         [0.1129, 0.0758, 0.1050,  ..., 0.0241, 0.0166, 0.0654],
         [0.1129, 0.0865, 0.1226,  ..., 0.9278, 0.9502, 0.0654],
         [0.1129, 0.7619, 0.6673,  ..., 0.0241, 0.0166, 0.0654]],
        [[0.6126, 0.0467, 0.0728,  ..., 0.0053, 0.3976, 0.0342],
         [0.1291, 0.0467, 0.0728,  ..., 0.0053, 0.1747, 0.0342],
         [0.1291, 0.0467, 0.0728,  ..., 0.9842, 0.2529, 0.8974],
         [0.1291, 0.8599, 0.7816,  ..., 0.0053, 0.1747, 0.0342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0444, 0.0865, 0.0384,  ..., 0.0861, 0.2619, 0.0710],
         [0.0444, 0.0812, 0.0384,  ..., 0.0861, 0.1664, 0.0710],
         [0.8668, 0.0812, 0.0384,  ..., 0.7406, 0.3933, 0.7869],
         [0.0444, 0.7511, 0.8848,  ..., 0.0871, 0.1785, 0.0710]],
        [[0.0454, 0.0093, 0.0108,  ..., 0.0328, 0.8786, 0.0547],
         [0.0454, 0.0093, 0.0108,  ..., 0.0328, 0.0405, 0.0547],
         [0.8638, 0.0093, 0.0108,  ..., 0.0328, 0.0405, 0.8360],
         [0.0454, 0.9720, 0.9677,  ..., 0.9015, 0.0405, 0.0547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7417, 0.0431, 0.1017,  ..., 0.0113, 0.0442, 0.7097],
         [0.0861, 0.0431, 0.0868,  ..., 0.0113, 0.0442, 0.0968],
         [0.0861, 0.0431, 0.0868,  ..., 0.9661, 0.8673, 0.0968],
         [0.0861, 0.8706, 0.7247,  ..., 0.0113, 0.0442, 0.0968]],
        [[0.6180, 0.0338, 0.0936,  ..., 0.0090, 0.2386, 0.0314],
         [0.1299, 0.0338, 0.0863,  ..., 0.0090, 0.1711, 0.0314],
         [0.1261, 0.0338, 0.0863,  ..., 0.9731, 0.4191, 0.9058],
         [0.1261, 0.8987, 0.7339,  ..., 0.0090, 0.1711, 0.0314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:53,428 [Process: 0] Synchronize training processes
2024-08-18 15:13:53,428 [Process: 0] Evaluating...
2024-08-18 15:13:53,432 [Process: 0] EPOCH 72:
2024-08-18 15:13:53,434 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:54,558 [Process: 0] Synchronize training processes
2024-08-18 15:13:54,558 [Process: 0] Evaluating...
2024-08-18 15:13:54,560 [Process: 0] EPOCH 73:
2024-08-18 15:13:54,562 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0187, 0.6976, 0.0382,  ..., 0.0743, 0.6002, 0.0508],
         [0.0187, 0.1008, 0.0382,  ..., 0.0743, 0.1333, 0.0508],
         [0.9439, 0.1008, 0.0382,  ..., 0.7771, 0.1333, 0.8475],
         [0.0187, 0.1008, 0.8853,  ..., 0.0743, 0.1333, 0.0508]],
        [[0.0157, 0.0086, 0.0141,  ..., 0.0122, 0.6925, 0.0371],
         [0.0162, 0.0086, 0.0141,  ..., 0.0122, 0.1025, 0.0371],
         [0.9525, 0.0086, 0.0141,  ..., 0.0122, 0.1025, 0.8887],
         [0.0157, 0.9743, 0.9576,  ..., 0.9635, 0.1025, 0.0371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7130, 0.0637, 0.0681,  ..., 0.0025, 0.0235, 0.0754],
         [0.0957, 0.0637, 0.0681,  ..., 0.0025, 0.0235, 0.0754],
         [0.0957, 0.0637, 0.0681,  ..., 0.9926, 0.9295, 0.1013],
         [0.0957, 0.8090, 0.7957,  ..., 0.0025, 0.0235, 0.7479]],
        [[0.7560, 0.0640, 0.0976,  ..., 0.0101, 0.3978, 0.0100],
         [0.0813, 0.0640, 0.0976,  ..., 0.0101, 0.1640, 0.0100],
         [0.0813, 0.0653, 0.0986,  ..., 0.9698, 0.2743, 0.9700],
         [0.0813, 0.8067, 0.7062,  ..., 0.0101, 0.1640, 0.0100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0478, 0.5373, 0.0298,  ..., 0.0344, 0.4778, 0.0324],
         [0.0478, 0.1232, 0.0298,  ..., 0.0344, 0.1366, 0.0324],
         [0.8566, 0.1232, 0.0298,  ..., 0.8967, 0.1366, 0.9028],
         [0.0478, 0.2163, 0.9105,  ..., 0.0344, 0.2490, 0.0324]],
        [[0.0292, 0.0019, 0.2394,  ..., 0.0290, 0.6501, 0.0346],
         [0.0292, 0.0019, 0.2394,  ..., 0.0318, 0.1166, 0.0346],
         [0.9124, 0.0019, 0.2817,  ..., 0.0290, 0.1166, 0.8963],
         [0.0292, 0.9943, 0.2394,  ..., 0.9102, 0.1166, 0.0346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5267, 0.0413, 0.0596,  ..., 0.0242, 0.1447, 0.3739],
         [0.1490, 0.0413, 0.0596,  ..., 0.0242, 0.0759, 0.1292],
         [0.1752, 0.0413, 0.0596,  ..., 0.9274, 0.7035, 0.1292],
         [0.1490, 0.8762, 0.8211,  ..., 0.0242, 0.0759, 0.3678]],
        [[0.5368, 0.0155, 0.0676,  ..., 0.0041, 0.2731, 0.0088],
         [0.1541, 0.0155, 0.0676,  ..., 0.0044, 0.1800, 0.0111],
         [0.1550, 0.0155, 0.0676,  ..., 0.9873, 0.3507, 0.9714],
         [0.1541, 0.9534, 0.7973,  ..., 0.0041, 0.1961, 0.0088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:13:55,696 [Process: 0] Synchronize training processes
2024-08-18 15:13:55,696 [Process: 0] Evaluating...
2024-08-18 15:13:55,698 [Process: 0] EPOCH 74:
2024-08-18 15:13:55,700 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0394, 0.0561, 0.0239,  ..., 0.0757, 0.0241, 0.0663],
         [0.0394, 0.0561, 0.0239,  ..., 0.0757, 0.0241, 0.0663],
         [0.8818, 0.0561, 0.0239,  ..., 0.7730, 0.0241, 0.8010],
         [0.0394, 0.8316, 0.9283,  ..., 0.0757, 0.9278, 0.0663]],
        [[0.0786, 0.0049, 0.2572,  ..., 0.1270, 0.7406, 0.0265],
         [0.0786, 0.0049, 0.2476,  ..., 0.1060, 0.0888, 0.0265],
         [0.7643, 0.0049, 0.2476,  ..., 0.1060, 0.0853, 0.9205],
         [0.0786, 0.9853, 0.2476,  ..., 0.6610, 0.0853, 0.0265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5942, 0.0365, 0.0567,  ..., 0.0151, 0.0245, 0.8612],
         [0.1333, 0.0365, 0.0567,  ..., 0.0151, 0.0248, 0.0463],
         [0.1392, 0.0365, 0.0567,  ..., 0.9548, 0.9263, 0.0463],
         [0.1333, 0.8905, 0.8300,  ..., 0.0151, 0.0245, 0.0463]],
        [[0.4412, 0.0172, 0.0701,  ..., 0.0081, 0.3127, 0.0260],
         [0.1762, 0.0172, 0.0701,  ..., 0.0081, 0.1722, 0.0277],
         [0.2064, 0.0172, 0.0701,  ..., 0.9758, 0.2707, 0.9203],
         [0.1762, 0.9483, 0.7898,  ..., 0.0081, 0.2444, 0.0260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0515, 0.0682, 0.0282,  ..., 0.0398, 0.0438, 0.0371],
         [0.0515, 0.0682, 0.0282,  ..., 0.0398, 0.0438, 0.0371],
         [0.8455, 0.0682, 0.0282,  ..., 0.8805, 0.0438, 0.8886],
         [0.0515, 0.7955, 0.9155,  ..., 0.0398, 0.8685, 0.0371]],
        [[0.0193, 0.0047, 0.1645,  ..., 0.1103, 0.6558, 0.0221],
         [0.0193, 0.0047, 0.1645,  ..., 0.0944, 0.0959, 0.0221],
         [0.9421, 0.0047, 0.1645,  ..., 0.0944, 0.0956, 0.9336],
         [0.0193, 0.9859, 0.5065,  ..., 0.7009, 0.1527, 0.0221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:56,833 [Process: 0] Synchronize training processes
2024-08-18 15:13:56,833 [Process: 0] Evaluating...
2024-08-18 15:13:56,835 [Process: 0] EPOCH 75:
2024-08-18 15:13:56,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:57,973 [Process: 0] Synchronize training processes
2024-08-18 15:13:57,974 [Process: 0] Evaluating...
2024-08-18 15:13:57,975 [Process: 0] EPOCH 76:
2024-08-18 15:13:57,977 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7591, 0.0426, 0.0603,  ..., 0.0052, 0.0273, 0.8195],
         [0.0803, 0.0426, 0.0603,  ..., 0.0052, 0.0273, 0.0602],
         [0.0803, 0.0426, 0.0603,  ..., 0.9844, 0.9180, 0.0602],
         [0.0803, 0.8721, 0.8192,  ..., 0.0052, 0.0273, 0.0602]],
        [[0.7380, 0.0536, 0.0516,  ..., 0.0171, 0.2356, 0.0886],
         [0.0873, 0.0536, 0.0516,  ..., 0.0171, 0.1852, 0.0886],
         [0.0873, 0.0536, 0.0516,  ..., 0.9487, 0.2665, 0.7341],
         [0.0873, 0.8391, 0.8451,  ..., 0.0171, 0.3126, 0.0886]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0537e-02, 4.1665e-02, 2.2755e-02,  ..., 2.8675e-02,
          1.1926e-01, 3.2915e-02],
         [3.0537e-02, 4.1665e-02, 2.2755e-02,  ..., 2.8675e-02,
          1.1908e-01, 3.2915e-02],
         [9.0839e-01, 4.1665e-02, 2.2755e-02,  ..., 9.1398e-01,
          6.3612e-01, 9.0125e-01],
         [3.0537e-02, 8.7501e-01, 9.3173e-01,  ..., 2.8675e-02,
          1.2554e-01, 3.2915e-02]],
        [[9.9274e-03, 8.8846e-03, 3.0149e-04,  ..., 5.1767e-02,
          5.9928e-01, 5.0984e-02],
         [9.9274e-03, 8.8846e-03, 3.0149e-04,  ..., 5.1767e-02,
          1.1102e-01, 5.0984e-02],
         [9.7022e-01, 8.8846e-03, 3.0149e-04,  ..., 5.1767e-02,
          1.1102e-01, 8.4705e-01],
         [9.9274e-03, 9.7335e-01, 9.9910e-01,  ..., 8.4470e-01,
          1.7868e-01, 5.0984e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7883, 0.1058, 0.0606,  ..., 0.0210, 0.0072, 0.8067],
         [0.0706, 0.1058, 0.0606,  ..., 0.0210, 0.0072, 0.0644],
         [0.0706, 0.1058, 0.0606,  ..., 0.9369, 0.9783, 0.0644],
         [0.0706, 0.6825, 0.8182,  ..., 0.0210, 0.0072, 0.0644]],
        [[0.7398, 0.0527, 0.0323,  ..., 0.0360, 0.2010, 0.0273],
         [0.0867, 0.0527, 0.0323,  ..., 0.0360, 0.1718, 0.0273],
         [0.0867, 0.0527, 0.0323,  ..., 0.8921, 0.3433, 0.9181],
         [0.0867, 0.8420, 0.9030,  ..., 0.0360, 0.2838, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0337, 0.0498, 0.0151,  ..., 0.0421, 0.1790, 0.0376],
         [0.0391, 0.0498, 0.0151,  ..., 0.0421, 0.1396, 0.0376],
         [0.8935, 0.0498, 0.0151,  ..., 0.8737, 0.5419, 0.8872],
         [0.0337, 0.8505, 0.9547,  ..., 0.0421, 0.1396, 0.0376]],
        [[0.0052, 0.0014, 0.0170,  ..., 0.0122, 0.8321, 0.0259],
         [0.0052, 0.0014, 0.0170,  ..., 0.0122, 0.0563, 0.0259],
         [0.9845, 0.0014, 0.0170,  ..., 0.0122, 0.0558, 0.9223],
         [0.0052, 0.9959, 0.9489,  ..., 0.9634, 0.0558, 0.0259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:13:59,110 [Process: 0] Synchronize training processes
2024-08-18 15:13:59,110 [Process: 0] Evaluating...
2024-08-18 15:13:59,112 [Process: 0] EPOCH 77:
2024-08-18 15:13:59,114 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:00,242 [Process: 0] Synchronize training processes
2024-08-18 15:14:00,242 [Process: 0] Evaluating...
2024-08-18 15:14:00,244 [Process: 0] EPOCH 78:
2024-08-18 15:14:00,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.6531, 0.0521, 0.0724,  ..., 0.0102, 0.0418, 0.8091],
         [0.1155, 0.0521, 0.0724,  ..., 0.0102, 0.0418, 0.0700],
         [0.1155, 0.0521, 0.0724,  ..., 0.9695, 0.8747, 0.0604],
         [0.1158, 0.8436, 0.7829,  ..., 0.0102, 0.0418, 0.0604]],
        [[0.7907, 0.0738, 0.0426,  ..., 0.0081, 0.2061, 0.0129],
         [0.0698, 0.0738, 0.0426,  ..., 0.0081, 0.1850, 0.0129],
         [0.0698, 0.0738, 0.0426,  ..., 0.9758, 0.2245, 0.9612],
         [0.0698, 0.7786, 0.8723,  ..., 0.0081, 0.3845, 0.0129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.8198e-02, 1.5025e-02, 6.8466e-03,  ..., 4.7914e-02,
          1.7527e-01, 4.2422e-02],
         [4.8198e-02, 1.5025e-02, 6.8466e-03,  ..., 4.7914e-02,
          1.4641e-01, 4.2422e-02],
         [8.5541e-01, 1.5025e-02, 6.8466e-03,  ..., 8.5626e-01,
          5.0513e-01, 8.7273e-01],
         [4.8198e-02, 9.5492e-01, 9.7946e-01,  ..., 4.7914e-02,
          1.7318e-01, 4.2422e-02]],
        [[1.0937e-02, 8.7866e-03, 2.1680e-04,  ..., 4.7782e-02,
          6.2803e-01, 5.3416e-02],
         [1.0937e-02, 8.7866e-03, 2.1680e-04,  ..., 4.7782e-02,
          1.2190e-01, 5.3416e-02],
         [9.6719e-01, 8.7866e-03, 2.1680e-04,  ..., 4.7782e-02,
          1.2190e-01, 8.3975e-01],
         [1.0937e-02, 9.7364e-01, 9.9935e-01,  ..., 8.5665e-01,
          1.2818e-01, 5.3416e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8643, 0.0389, 0.0413,  ..., 0.0192, 0.0551, 0.8722],
         [0.0452, 0.0389, 0.0413,  ..., 0.0192, 0.0551, 0.0426],
         [0.0452, 0.0389, 0.0413,  ..., 0.9424, 0.8348, 0.0426],
         [0.0452, 0.8832, 0.8761,  ..., 0.0192, 0.0551, 0.0426]],
        [[0.8584, 0.0507, 0.0292,  ..., 0.0105, 0.2074, 0.0148],
         [0.0472, 0.0507, 0.0292,  ..., 0.0179, 0.1626, 0.0203],
         [0.0472, 0.0507, 0.0292,  ..., 0.9612, 0.3079, 0.9501],
         [0.0472, 0.8479, 0.9125,  ..., 0.0105, 0.3221, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:01,377 [Process: 0] Synchronize training processes
2024-08-18 15:14:01,377 [Process: 0] Evaluating...
2024-08-18 15:14:01,379 [Process: 0] EPOCH 79:
2024-08-18 15:14:01,381 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:02,520 [Process: 0] Synchronize training processes
2024-08-18 15:14:02,520 [Process: 0] Evaluating...
2024-08-18 15:14:02,522 [Process: 0] EPOCH 80:
2024-08-18 15:14:02,524 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4117e-02, 7.3013e-02, 6.9381e-03,  ..., 6.0514e-02,
          2.6488e-01, 6.4543e-02],
         [3.4117e-02, 7.3013e-02, 6.9381e-03,  ..., 6.0514e-02,
          1.8050e-01, 6.4543e-02],
         [8.9765e-01, 7.3013e-02, 6.9381e-03,  ..., 8.1846e-01,
          3.4920e-01, 8.0637e-01],
         [3.4117e-02, 7.8096e-01, 9.7919e-01,  ..., 6.0514e-02,
          2.0542e-01, 6.4543e-02]],
        [[8.6545e-03, 8.8204e-03, 3.1853e-04,  ..., 3.5641e-02,
          8.8531e-01, 2.5940e-02],
         [8.6545e-03, 8.8204e-03, 3.1853e-04,  ..., 3.5641e-02,
          3.8231e-02, 2.5940e-02],
         [9.7404e-01, 8.8204e-03, 3.1853e-04,  ..., 3.5641e-02,
          3.8231e-02, 9.2218e-01],
         [8.6545e-03, 9.7354e-01, 9.9904e-01,  ..., 8.9308e-01,
          3.8231e-02, 2.5940e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5850, 0.0530, 0.0584,  ..., 0.0460, 0.0272, 0.8717],
         [0.1362, 0.0530, 0.0584,  ..., 0.0460, 0.0272, 0.0428],
         [0.1426, 0.0530, 0.0584,  ..., 0.8620, 0.9184, 0.0428],
         [0.1362, 0.8411, 0.8249,  ..., 0.0460, 0.0272, 0.0428]],
        [[0.9027, 0.0344, 0.0810,  ..., 0.0047, 0.1663, 0.0310],
         [0.0324, 0.0344, 0.0810,  ..., 0.0081, 0.1663, 0.0310],
         [0.0324, 0.0344, 0.0810,  ..., 0.9825, 0.2017, 0.9070],
         [0.0324, 0.8969, 0.7570,  ..., 0.0047, 0.4656, 0.0310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.3775e-02, 3.2181e-02, 2.0834e-02,  ..., 4.4482e-02,
          4.2554e-01, 6.2879e-02],
         [5.3775e-02, 3.2181e-02, 2.0834e-02,  ..., 4.4482e-02,
          1.6965e-01, 6.2879e-02],
         [8.3276e-01, 3.2181e-02, 2.0834e-02,  ..., 8.6655e-01,
          2.0246e-01, 8.0838e-01],
         [5.9692e-02, 9.0346e-01, 9.3750e-01,  ..., 4.4482e-02,
          2.0235e-01, 6.5858e-02]],
        [[9.9036e-03, 2.5563e-03, 6.9080e-05,  ..., 9.7524e-03,
          8.1547e-01, 4.7784e-02],
         [9.9036e-03, 2.5563e-03, 6.9080e-05,  ..., 9.7524e-03,
          6.1510e-02, 4.7784e-02],
         [9.7029e-01, 2.5563e-03, 6.9080e-05,  ..., 9.7524e-03,
          6.1510e-02, 8.5650e-01],
         [9.9036e-03, 9.9233e-01, 9.9979e-01,  ..., 9.7074e-01,
          6.1510e-02, 4.7935e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8480, 0.0440, 0.0697,  ..., 0.0092, 0.0720, 0.7589],
         [0.0507, 0.0440, 0.0697,  ..., 0.0092, 0.0694, 0.0804],
         [0.0507, 0.0440, 0.0697,  ..., 0.9723, 0.7892, 0.0804],
         [0.0507, 0.8680, 0.7910,  ..., 0.0092, 0.0694, 0.0804]],
        [[0.8001, 0.0557, 0.0237,  ..., 0.0578, 0.2409, 0.0073],
         [0.0666, 0.0557, 0.0237,  ..., 0.0578, 0.1702, 0.0073],
         [0.0666, 0.0557, 0.0237,  ..., 0.8266, 0.1992, 0.9782],
         [0.0666, 0.8329, 0.9290,  ..., 0.0578, 0.3897, 0.0073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:03,650 [Process: 0] Synchronize training processes
2024-08-18 15:14:03,650 [Process: 0] Evaluating...
2024-08-18 15:14:03,652 [Process: 0] EPOCH 81:
2024-08-18 15:14:03,654 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0412, 0.0130, 0.0138,  ..., 0.0477, 0.1612, 0.0606],
         [0.0412, 0.0130, 0.0138,  ..., 0.0477, 0.1612, 0.0606],
         [0.8765, 0.0130, 0.0138,  ..., 0.8569, 0.1934, 0.8143],
         [0.0412, 0.9611, 0.9585,  ..., 0.0477, 0.4843, 0.0644]],
        [[0.0083, 0.0188, 0.0602,  ..., 0.0161, 0.6141, 0.0744],
         [0.0096, 0.0188, 0.0602,  ..., 0.0161, 0.1194, 0.0775],
         [0.9738, 0.0188, 0.0602,  ..., 0.0161, 0.1194, 0.7549],
         [0.0083, 0.9437, 0.8194,  ..., 0.9517, 0.1470, 0.0932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8050, 0.0694, 0.0961,  ..., 0.0438, 0.0294, 0.9308],
         [0.0650, 0.0694, 0.0961,  ..., 0.0438, 0.0294, 0.0231],
         [0.0650, 0.0694, 0.0961,  ..., 0.8686, 0.9117, 0.0231],
         [0.0650, 0.7917, 0.7116,  ..., 0.0438, 0.0294, 0.0231]],
        [[0.1407, 0.0480, 0.0301,  ..., 0.0028, 0.2340, 0.0385],
         [0.1407, 0.0480, 0.0301,  ..., 0.0032, 0.1672, 0.0385],
         [0.4800, 0.0480, 0.0301,  ..., 0.9911, 0.3864, 0.8845],
         [0.2386, 0.8560, 0.9096,  ..., 0.0028, 0.2123, 0.0385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0154, 0.0118, 0.0135,  ..., 0.0437, 0.2098, 0.0529],
         [0.0154, 0.0118, 0.0135,  ..., 0.0437, 0.1350, 0.0529],
         [0.9538, 0.0118, 0.0135,  ..., 0.8683, 0.1350, 0.8412],
         [0.0154, 0.9645, 0.9595,  ..., 0.0444, 0.5202, 0.0529]],
        [[0.0102, 0.0282, 0.0562,  ..., 0.0315, 0.8980, 0.0796],
         [0.0102, 0.0282, 0.0562,  ..., 0.0315, 0.0340, 0.0796],
         [0.9694, 0.0282, 0.0562,  ..., 0.0315, 0.0340, 0.7607],
         [0.0102, 0.9155, 0.8315,  ..., 0.9056, 0.0340, 0.0800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
2024-08-18 15:14:04,781 [Process: 0] Synchronize training processes
2024-08-18 15:14:04,781 [Process: 0] Evaluating...
2024-08-18 15:14:04,785 [Process: 0] EPOCH 82:
2024-08-18 15:14:04,788 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:05,911 [Process: 0] Synchronize training processes
2024-08-18 15:14:05,911 [Process: 0] Evaluating...
2024-08-18 15:14:05,913 [Process: 0] EPOCH 83:
2024-08-18 15:14:05,915 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8308, 0.0433, 0.0351,  ..., 0.0078, 0.0724, 0.8937],
         [0.0564, 0.0433, 0.0351,  ..., 0.0078, 0.0614, 0.0354],
         [0.0564, 0.0433, 0.0351,  ..., 0.9765, 0.8048, 0.0354],
         [0.0564, 0.8701, 0.8946,  ..., 0.0078, 0.0614, 0.0354]],
        [[0.7714, 0.0545, 0.0536,  ..., 0.0587, 0.1866, 0.0062],
         [0.0762, 0.0545, 0.0536,  ..., 0.0587, 0.1593, 0.0062],
         [0.0762, 0.0545, 0.0536,  ..., 0.8238, 0.3247, 0.9813],
         [0.0762, 0.8365, 0.8391,  ..., 0.0587, 0.3295, 0.0062]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0543, 0.0208, 0.0162,  ..., 0.0423, 0.1493, 0.0312],
         [0.0543, 0.0208, 0.0162,  ..., 0.0423, 0.1324, 0.0312],
         [0.8370, 0.0208, 0.0162,  ..., 0.8730, 0.1324, 0.9065],
         [0.0543, 0.9377, 0.9515,  ..., 0.0423, 0.5859, 0.0312]],
        [[0.0125, 0.0125, 0.0818,  ..., 0.0133, 0.9724, 0.0401],
         [0.0125, 0.0125, 0.0818,  ..., 0.0133, 0.0092, 0.0401],
         [0.9624, 0.0125, 0.0818,  ..., 0.0133, 0.0092, 0.8798],
         [0.0125, 0.9624, 0.7546,  ..., 0.9601, 0.0092, 0.0401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9179, 0.0367, 0.0324,  ..., 0.0048, 0.0136, 0.8651],
         [0.0274, 0.0367, 0.0324,  ..., 0.0048, 0.0175, 0.0450],
         [0.0274, 0.0367, 0.0324,  ..., 0.9855, 0.9552, 0.0450],
         [0.0274, 0.8898, 0.9029,  ..., 0.0048, 0.0136, 0.0450]],
        [[0.8910, 0.0456, 0.0428,  ..., 0.0097, 0.2031, 0.0130],
         [0.0363, 0.0456, 0.0530,  ..., 0.0097, 0.1761, 0.0130],
         [0.0363, 0.0456, 0.0428,  ..., 0.9710, 0.2054, 0.9610],
         [0.0363, 0.8633, 0.8614,  ..., 0.0097, 0.4154, 0.0130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0691, 0.0302, 0.0050,  ..., 0.0594, 0.1418, 0.0261],
         [0.0691, 0.0302, 0.0050,  ..., 0.0594, 0.1401, 0.0261],
         [0.7816, 0.0302, 0.0050,  ..., 0.8215, 0.1401, 0.9217],
         [0.0802, 0.9094, 0.9851,  ..., 0.0596, 0.5779, 0.0261]],
        [[0.0124, 0.0117, 0.0448,  ..., 0.0116, 0.8323, 0.0629],
         [0.0124, 0.0117, 0.0448,  ..., 0.0116, 0.0559, 0.0629],
         [0.9629, 0.0117, 0.0448,  ..., 0.0116, 0.0559, 0.8062],
         [0.0124, 0.9649, 0.8657,  ..., 0.9651, 0.0559, 0.0679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:07,046 [Process: 0] Synchronize training processes
2024-08-18 15:14:07,047 [Process: 0] Evaluating...
2024-08-18 15:14:07,048 [Process: 0] EPOCH 84:
2024-08-18 15:14:07,050 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:08,177 [Process: 0] Synchronize training processes
2024-08-18 15:14:08,178 [Process: 0] Evaluating...
2024-08-18 15:14:08,179 [Process: 0] EPOCH 85:
2024-08-18 15:14:08,181 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8643, 0.0328, 0.0440,  ..., 0.0099, 0.0099, 0.7568],
         [0.0452, 0.0328, 0.0440,  ..., 0.0099, 0.0113, 0.0808],
         [0.0452, 0.0328, 0.0440,  ..., 0.9702, 0.9688, 0.0815],
         [0.0452, 0.9015, 0.8679,  ..., 0.0099, 0.0099, 0.0808]],
        [[0.6834, 0.0257, 0.0489,  ..., 0.0220, 0.1469, 0.0050],
         [0.1049, 0.0257, 0.0489,  ..., 0.0220, 0.1469, 0.0050],
         [0.1068, 0.0257, 0.0489,  ..., 0.9340, 0.2653, 0.9851],
         [0.1049, 0.9230, 0.8533,  ..., 0.0220, 0.4409, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0628, 0.0121, 0.0137,  ..., 0.0267, 0.1408, 0.0335],
         [0.0628, 0.0121, 0.0137,  ..., 0.0267, 0.1142, 0.0335],
         [0.8105, 0.0121, 0.0137,  ..., 0.9199, 0.1142, 0.8994],
         [0.0639, 0.9636, 0.9589,  ..., 0.0267, 0.6308, 0.0335]],
        [[0.0062, 0.0123, 0.0432,  ..., 0.0068, 0.8723, 0.0528],
         [0.0062, 0.0123, 0.0432,  ..., 0.0068, 0.0426, 0.0528],
         [0.9813, 0.0123, 0.0432,  ..., 0.0068, 0.0426, 0.8416],
         [0.0062, 0.9630, 0.8703,  ..., 0.9796, 0.0426, 0.0528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9091, 0.0249, 0.0241,  ..., 0.0106, 0.0275, 0.9280],
         [0.0303, 0.0249, 0.0241,  ..., 0.0106, 0.0275, 0.0240],
         [0.0303, 0.0249, 0.0241,  ..., 0.9683, 0.9176, 0.0240],
         [0.0303, 0.9252, 0.9276,  ..., 0.0106, 0.0275, 0.0240]],
        [[0.9124, 0.0445, 0.0587,  ..., 0.0195, 0.1887, 0.0161],
         [0.0292, 0.0445, 0.0587,  ..., 0.0208, 0.1679, 0.0161],
         [0.0292, 0.0445, 0.0587,  ..., 0.9402, 0.2587, 0.9517],
         [0.0292, 0.8665, 0.8238,  ..., 0.0195, 0.3847, 0.0161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
2024-08-18 15:14:09,314 [Process: 0] Synchronize training processes
2024-08-18 15:14:09,314 [Process: 0] Evaluating...
2024-08-18 15:14:09,316 [Process: 0] EPOCH 86:
2024-08-18 15:14:09,318 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:10,452 [Process: 0] Synchronize training processes
2024-08-18 15:14:10,452 [Process: 0] Evaluating...
2024-08-18 15:14:10,454 [Process: 0] EPOCH 87:
2024-08-18 15:14:10,456 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.0464, 0.0206, 0.0064,  ..., 0.0523, 0.0532, 0.0403],
         [0.0464, 0.0206, 0.0064,  ..., 0.0523, 0.0532, 0.0403],
         [0.8609, 0.0206, 0.0064,  ..., 0.8432, 0.0532, 0.8791],
         [0.0464, 0.9382, 0.9807,  ..., 0.0523, 0.8403, 0.0403]],
        [[0.0030, 0.0241, 0.1423,  ..., 0.0324, 0.8202, 0.0244],
         [0.0030, 0.0241, 0.1423,  ..., 0.0324, 0.0599, 0.0244],
         [0.9910, 0.0241, 0.1423,  ..., 0.0324, 0.0599, 0.9269],
         [0.0030, 0.9277, 0.5731,  ..., 0.9028, 0.0599, 0.0244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8261, 0.0164, 0.0358,  ..., 0.0056, 0.0126, 0.9480],
         [0.0580, 0.0164, 0.0358,  ..., 0.0056, 0.0126, 0.0173],
         [0.0580, 0.0164, 0.0358,  ..., 0.9833, 0.9621, 0.0173],
         [0.0580, 0.9509, 0.8925,  ..., 0.0056, 0.0126, 0.0173]],
        [[0.6987, 0.0540, 0.0442,  ..., 0.0140, 0.1556, 0.0154],
         [0.0976, 0.0540, 0.0442,  ..., 0.0140, 0.1556, 0.0156],
         [0.0976, 0.0540, 0.0442,  ..., 0.9579, 0.3301, 0.9535],
         [0.1061, 0.8380, 0.8674,  ..., 0.0140, 0.3588, 0.0154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0271, 0.0447, 0.0102,  ..., 0.0552, 0.0340, 0.0401],
         [0.0271, 0.0447, 0.0107,  ..., 0.0552, 0.0340, 0.0401],
         [0.9187, 0.0447, 0.0102,  ..., 0.8343, 0.0340, 0.8796],
         [0.0271, 0.8658, 0.9688,  ..., 0.0552, 0.8979, 0.0401]],
        [[0.0040, 0.0073, 0.0065,  ..., 0.0108, 0.8919, 0.0313],
         [0.0045, 0.0073, 0.0065,  ..., 0.0108, 0.0360, 0.0313],
         [0.9875, 0.0073, 0.0065,  ..., 0.0108, 0.0360, 0.9060],
         [0.0040, 0.9780, 0.9804,  ..., 0.9675, 0.0360, 0.0313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8581, 0.0245, 0.0422,  ..., 0.0105, 0.0133, 0.7477],
         [0.0473, 0.0245, 0.0422,  ..., 0.0105, 0.0133, 0.0841],
         [0.0473, 0.0245, 0.0422,  ..., 0.9686, 0.9600, 0.0841],
         [0.0473, 0.9265, 0.8733,  ..., 0.0105, 0.0133, 0.0841]],
        [[0.7084, 0.0464, 0.0725,  ..., 0.0155, 0.1681, 0.0139],
         [0.0972, 0.0464, 0.0725,  ..., 0.0155, 0.1681, 0.0130],
         [0.0972, 0.0464, 0.0725,  ..., 0.9535, 0.2668, 0.9601],
         [0.0972, 0.8608, 0.7826,  ..., 0.0155, 0.3969, 0.0130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:11,582 [Process: 0] Synchronize training processes
2024-08-18 15:14:11,582 [Process: 0] Evaluating...
2024-08-18 15:14:11,584 [Process: 0] EPOCH 88:
2024-08-18 15:14:11,586 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:12,721 [Process: 0] Synchronize training processes
2024-08-18 15:14:12,721 [Process: 0] Evaluating...
2024-08-18 15:14:12,723 [Process: 0] EPOCH 89:
2024-08-18 15:14:12,725 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0988, 0.0595, 0.0178,  ..., 0.0601, 0.0595, 0.0343],
         [0.0988, 0.0595, 0.0178,  ..., 0.0601, 0.0595, 0.0343],
         [0.6803, 0.0595, 0.0178,  ..., 0.8197, 0.0595, 0.8972],
         [0.1221, 0.8214, 0.9467,  ..., 0.0601, 0.8214, 0.0343]],
        [[0.0075, 0.0099, 0.0034,  ..., 0.0146, 0.8298, 0.0131],
         [0.0075, 0.0099, 0.0034,  ..., 0.0146, 0.0558, 0.0131],
         [0.9776, 0.0099, 0.0034,  ..., 0.0146, 0.0558, 0.9606],
         [0.0075, 0.9702, 0.9897,  ..., 0.9563, 0.0585, 0.0131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7069, 0.0531, 0.0395,  ..., 0.0390, 0.0082, 0.9376],
         [0.0923, 0.0531, 0.0395,  ..., 0.0390, 0.0082, 0.0208],
         [0.1085, 0.0531, 0.0395,  ..., 0.8830, 0.9754, 0.0208],
         [0.0923, 0.8407, 0.8815,  ..., 0.0390, 0.0082, 0.0208]],
        [[0.8759, 0.0876, 0.0305,  ..., 0.0072, 0.2054, 0.0218],
         [0.0414, 0.0876, 0.0305,  ..., 0.0072, 0.1645, 0.0218],
         [0.0414, 0.0900, 0.0305,  ..., 0.9785, 0.2315, 0.9346],
         [0.0414, 0.7348, 0.9084,  ..., 0.0072, 0.3986, 0.0218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5245e-02, 1.6639e-02, 6.2447e-03,  ..., 2.8930e-02,
          4.9068e-02, 1.9715e-02],
         [3.5245e-02, 1.6639e-02, 6.2447e-03,  ..., 2.8930e-02,
          4.9068e-02, 1.9715e-02],
         [8.9426e-01, 1.6639e-02, 6.2447e-03,  ..., 9.1321e-01,
          4.9068e-02, 9.4085e-01],
         [3.5245e-02, 9.5008e-01, 9.8127e-01,  ..., 2.8930e-02,
          8.5280e-01, 1.9715e-02]],
        [[1.0632e-02, 4.5612e-02, 4.1313e-04,  ..., 1.0719e-02,
          8.8343e-01, 1.2582e-02],
         [1.0632e-02, 4.5612e-02, 4.1313e-04,  ..., 1.0719e-02,
          3.8855e-02, 1.2582e-02],
         [9.6810e-01, 4.5612e-02, 4.1313e-04,  ..., 1.0719e-02,
          3.8855e-02, 9.6225e-01],
         [1.0632e-02, 8.6316e-01, 9.9876e-01,  ..., 9.6784e-01,
          3.8855e-02, 1.2582e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8584, 0.0311, 0.0178,  ..., 0.0488, 0.0102, 0.9447],
         [0.0472, 0.0311, 0.0178,  ..., 0.0488, 0.0114, 0.0184],
         [0.0472, 0.0311, 0.0178,  ..., 0.8535, 0.9681, 0.0184],
         [0.0472, 0.9068, 0.9465,  ..., 0.0488, 0.0102, 0.0184]],
        [[0.6561, 0.0570, 0.0566,  ..., 0.0067, 0.1838, 0.0053],
         [0.1146, 0.0570, 0.0566,  ..., 0.0067, 0.1595, 0.0053],
         [0.1146, 0.0570, 0.0566,  ..., 0.9799, 0.3933, 0.9841],
         [0.1146, 0.8289, 0.8301,  ..., 0.0067, 0.2633, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:13,858 [Process: 0] Synchronize training processes
2024-08-18 15:14:13,858 [Process: 0] Evaluating...
2024-08-18 15:14:13,860 [Process: 0] EPOCH 90:
2024-08-18 15:14:13,862 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0376, 0.0295, 0.0043,  ..., 0.0276, 0.0289, 0.0582],
         [0.0376, 0.0295, 0.0043,  ..., 0.0276, 0.0289, 0.0582],
         [0.8872, 0.0295, 0.0043,  ..., 0.9173, 0.0289, 0.8253],
         [0.0376, 0.9114, 0.9872,  ..., 0.0276, 0.9132, 0.0582]],
        [[0.0235, 0.0173, 0.0015,  ..., 0.0133, 0.9668, 0.0547],
         [0.0235, 0.0173, 0.0015,  ..., 0.0133, 0.0111, 0.0547],
         [0.9296, 0.0173, 0.0015,  ..., 0.0133, 0.0111, 0.8358],
         [0.0235, 0.9480, 0.9954,  ..., 0.9602, 0.0111, 0.0547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9269, 0.0376, 0.0784,  ..., 0.0088, 0.0122, 0.9512],
         [0.0244, 0.0376, 0.0784,  ..., 0.0088, 0.0122, 0.0163],
         [0.0244, 0.0376, 0.0947,  ..., 0.9735, 0.9633, 0.0163],
         [0.0244, 0.8871, 0.7484,  ..., 0.0088, 0.0122, 0.0163]],
        [[0.7474, 0.0415, 0.0244,  ..., 0.0063, 0.2928, 0.0034],
         [0.0842, 0.0415, 0.0244,  ..., 0.0063, 0.1668, 0.0034],
         [0.0842, 0.0415, 0.0244,  ..., 0.9811, 0.2771, 0.9898],
         [0.0842, 0.8755, 0.9269,  ..., 0.0063, 0.2633, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0659, 0.0096, 0.0085,  ..., 0.0712, 0.0222, 0.0431],
         [0.0659, 0.0096, 0.0085,  ..., 0.0712, 0.0222, 0.0431],
         [0.8023, 0.0096, 0.0085,  ..., 0.7863, 0.0222, 0.8708],
         [0.0659, 0.9712, 0.9744,  ..., 0.0712, 0.9335, 0.0431]],
        [[0.0062, 0.0101, 0.0138,  ..., 0.0114, 0.9814, 0.0312],
         [0.0062, 0.0101, 0.0138,  ..., 0.0114, 0.0062, 0.0312],
         [0.9814, 0.0101, 0.0138,  ..., 0.0114, 0.0062, 0.9063],
         [0.0062, 0.9697, 0.9586,  ..., 0.9657, 0.0062, 0.0312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:14,988 [Process: 0] Synchronize training processes
2024-08-18 15:14:14,988 [Process: 0] Evaluating...
2024-08-18 15:14:14,990 [Process: 0] EPOCH 91:
2024-08-18 15:14:14,992 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:16,122 [Process: 0] Synchronize training processes
2024-08-18 15:14:16,122 [Process: 0] Evaluating...
2024-08-18 15:14:16,125 [Process: 0] EPOCH 92:
2024-08-18 15:14:16,127 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9261, 0.0304, 0.0348,  ..., 0.0041, 0.0094, 0.9232],
         [0.0246, 0.0304, 0.0348,  ..., 0.0041, 0.0094, 0.0256],
         [0.0246, 0.0304, 0.0348,  ..., 0.9878, 0.9719, 0.0256],
         [0.0246, 0.9087, 0.8957,  ..., 0.0041, 0.0094, 0.0256]],
        [[0.6946, 0.0269, 0.0512,  ..., 0.0034, 0.2473, 0.0301],
         [0.1018, 0.0269, 0.0512,  ..., 0.0034, 0.1872, 0.0257],
         [0.1018, 0.0269, 0.0512,  ..., 0.9899, 0.2564, 0.9186],
         [0.1018, 0.9193, 0.8464,  ..., 0.0034, 0.3092, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1092, 0.0178, 0.0057,  ..., 0.0772, 0.0545, 0.0443],
         [0.0876, 0.0178, 0.0057,  ..., 0.0578, 0.0545, 0.0443],
         [0.7156, 0.0178, 0.0057,  ..., 0.8072, 0.0545, 0.8672],
         [0.0876, 0.9467, 0.9828,  ..., 0.0578, 0.8365, 0.0443]],
        [[0.0116, 0.0132, 0.0645,  ..., 0.0278, 0.9589, 0.0165],
         [0.0116, 0.0132, 0.0645,  ..., 0.0278, 0.0137, 0.0165],
         [0.9652, 0.0132, 0.0645,  ..., 0.0278, 0.0137, 0.9506],
         [0.0116, 0.9604, 0.8064,  ..., 0.9166, 0.0137, 0.0165]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9422, 0.0377, 0.0809,  ..., 0.0089, 0.0110, 0.9407],
         [0.0193, 0.0377, 0.0809,  ..., 0.0089, 0.0110, 0.0198],
         [0.0193, 0.0377, 0.0865,  ..., 0.9732, 0.9670, 0.0198],
         [0.0193, 0.8870, 0.7517,  ..., 0.0089, 0.0110, 0.0198]],
        [[0.8111, 0.0295, 0.0469,  ..., 0.0071, 0.2629, 0.0315],
         [0.0630, 0.0295, 0.0469,  ..., 0.0074, 0.1704, 0.0292],
         [0.0630, 0.0295, 0.0469,  ..., 0.9784, 0.2400, 0.9101],
         [0.0630, 0.9116, 0.8592,  ..., 0.0071, 0.3266, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0495, 0.0333, 0.0026,  ..., 0.0330, 0.0077, 0.0199],
         [0.0495, 0.0333, 0.0029,  ..., 0.0330, 0.0077, 0.0199],
         [0.8516, 0.0333, 0.0026,  ..., 0.9009, 0.0077, 0.9402],
         [0.0495, 0.9000, 0.9919,  ..., 0.0330, 0.9769, 0.0199]],
        [[0.0057, 0.0150, 0.0320,  ..., 0.0470, 0.8073, 0.0348],
         [0.0057, 0.0150, 0.0320,  ..., 0.0470, 0.0642, 0.0348],
         [0.9830, 0.0150, 0.0320,  ..., 0.0470, 0.0642, 0.8955],
         [0.0057, 0.9551, 0.9040,  ..., 0.8589, 0.0642, 0.0348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:17,262 [Process: 0] Synchronize training processes
2024-08-18 15:14:17,262 [Process: 0] Evaluating...
2024-08-18 15:14:17,264 [Process: 0] EPOCH 93:
2024-08-18 15:14:17,266 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:18,400 [Process: 0] Synchronize training processes
2024-08-18 15:14:18,400 [Process: 0] Evaluating...
2024-08-18 15:14:18,402 [Process: 0] EPOCH 94:
2024-08-18 15:14:18,404 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8823, 0.0799, 0.0546,  ..., 0.0148, 0.0297, 0.8941],
         [0.0392, 0.0819, 0.0567,  ..., 0.0148, 0.0297, 0.0353],
         [0.0392, 0.0799, 0.0557,  ..., 0.9556, 0.9109, 0.0353],
         [0.0392, 0.7583, 0.8330,  ..., 0.0148, 0.0297, 0.0353]],
        [[0.7033, 0.0562, 0.0727,  ..., 0.0107, 0.1672, 0.0149],
         [0.0989, 0.0562, 0.0727,  ..., 0.0107, 0.1672, 0.0149],
         [0.0989, 0.0562, 0.0727,  ..., 0.9678, 0.2528, 0.9552],
         [0.0989, 0.8313, 0.7818,  ..., 0.0107, 0.4128, 0.0149]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0658, 0.0222, 0.0080,  ..., 0.0093, 0.1108, 0.0613],
         [0.0658, 0.0222, 0.0080,  ..., 0.0093, 0.1108, 0.0613],
         [0.7933, 0.0222, 0.0080,  ..., 0.9721, 0.6504, 0.8060],
         [0.0750, 0.9334, 0.9759,  ..., 0.0093, 0.1281, 0.0714]],
        [[0.0303, 0.0249, 0.0096,  ..., 0.0257, 0.2962, 0.0395],
         [0.0303, 0.0249, 0.0096,  ..., 0.0257, 0.1097, 0.0395],
         [0.9091, 0.0249, 0.0096,  ..., 0.0257, 0.1097, 0.8816],
         [0.0303, 0.9254, 0.9712,  ..., 0.9230, 0.4845, 0.0395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9296, 0.0330, 0.0836,  ..., 0.0169, 0.0178, 0.9826],
         [0.0235, 0.0330, 0.0836,  ..., 0.0169, 0.0178, 0.0058],
         [0.0235, 0.0330, 0.1019,  ..., 0.9492, 0.9465, 0.0058],
         [0.0235, 0.9010, 0.7308,  ..., 0.0169, 0.0178, 0.0058]],
        [[0.7567, 0.0542, 0.0304,  ..., 0.0097, 0.2347, 0.0216],
         [0.0811, 0.0542, 0.0304,  ..., 0.0097, 0.1836, 0.0216],
         [0.0811, 0.0542, 0.0304,  ..., 0.9708, 0.2161, 0.9353],
         [0.0811, 0.8374, 0.9089,  ..., 0.0097, 0.3656, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:19,538 [Process: 0] Synchronize training processes
2024-08-18 15:14:19,539 [Process: 0] Evaluating...
2024-08-18 15:14:19,540 [Process: 0] EPOCH 95:
2024-08-18 15:14:19,542 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:20,676 [Process: 0] Synchronize training processes
2024-08-18 15:14:20,676 [Process: 0] Evaluating...
2024-08-18 15:14:20,678 [Process: 0] EPOCH 96:
2024-08-18 15:14:20,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0411, 0.0124, 0.0033,  ..., 0.0583, 0.6880, 0.0659],
         [0.0411, 0.0124, 0.0033,  ..., 0.0583, 0.1040, 0.0659],
         [0.8766, 0.0124, 0.0033,  ..., 0.8250, 0.1040, 0.8009],
         [0.0411, 0.9628, 0.9902,  ..., 0.0583, 0.1040, 0.0673]],
        [[0.0101, 0.0095, 0.0013,  ..., 0.0077, 0.8917, 0.0799],
         [0.0101, 0.0095, 0.0013,  ..., 0.0077, 0.0361, 0.0799],
         [0.9698, 0.0095, 0.0013,  ..., 0.0077, 0.0361, 0.7296],
         [0.0101, 0.9714, 0.9962,  ..., 0.9769, 0.0361, 0.1106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8703, 0.0526, 0.0248,  ..., 0.0134, 0.0344, 0.9221],
         [0.0431, 0.0526, 0.0248,  ..., 0.0134, 0.0344, 0.0260],
         [0.0435, 0.0526, 0.0248,  ..., 0.9598, 0.8968, 0.0260],
         [0.0431, 0.8422, 0.9256,  ..., 0.0134, 0.0344, 0.0260]],
        [[0.7805, 0.0497, 0.0674,  ..., 0.0134, 0.1311, 0.0166],
         [0.0732, 0.0497, 0.0674,  ..., 0.0134, 0.1311, 0.0166],
         [0.0732, 0.0497, 0.0674,  ..., 0.9599, 0.3866, 0.9501],
         [0.0732, 0.8509, 0.7977,  ..., 0.0134, 0.3512, 0.0166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0206, 0.0187, 0.0023,  ..., 0.0522, 0.2881, 0.0402],
         [0.0206, 0.0187, 0.0023,  ..., 0.0522, 0.1800, 0.0402],
         [0.9383, 0.0187, 0.0023,  ..., 0.8434, 0.1800, 0.8795],
         [0.0206, 0.9439, 0.9932,  ..., 0.0522, 0.3518, 0.0402]],
        [[0.0033, 0.0028, 0.0089,  ..., 0.0309, 0.9850, 0.0138],
         [0.0033, 0.0028, 0.0089,  ..., 0.0309, 0.0050, 0.0138],
         [0.9901, 0.0028, 0.0089,  ..., 0.0309, 0.0050, 0.9586],
         [0.0033, 0.9916, 0.9732,  ..., 0.9074, 0.0050, 0.0138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9607, 0.0371, 0.0310,  ..., 0.0047, 0.0080, 0.9864],
         [0.0131, 0.0371, 0.0310,  ..., 0.0048, 0.0080, 0.0045],
         [0.0131, 0.0371, 0.0310,  ..., 0.9859, 0.9760, 0.0045],
         [0.0131, 0.8886, 0.9070,  ..., 0.0047, 0.0080, 0.0045]],
        [[0.7837, 0.0466, 0.0198,  ..., 0.0071, 0.2073, 0.0085],
         [0.0721, 0.0484, 0.0198,  ..., 0.0071, 0.1715, 0.0085],
         [0.0721, 0.0466, 0.0198,  ..., 0.9787, 0.1885, 0.9744],
         [0.0721, 0.8584, 0.9405,  ..., 0.0071, 0.4326, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:21,810 [Process: 0] Synchronize training processes
2024-08-18 15:14:21,811 [Process: 0] Evaluating...
2024-08-18 15:14:21,812 [Process: 0] EPOCH 97:
2024-08-18 15:14:21,814 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0144, 0.0444, 0.0086,  ..., 0.0605, 0.0297, 0.0344],
         [0.0144, 0.0444, 0.0086,  ..., 0.0605, 0.0297, 0.0344],
         [0.9568, 0.0444, 0.0086,  ..., 0.8184, 0.0297, 0.8968],
         [0.0144, 0.8667, 0.9742,  ..., 0.0605, 0.9109, 0.0344]],
        [[0.0205, 0.0064, 0.0077,  ..., 0.0150, 0.9727, 0.0323],
         [0.0205, 0.0064, 0.0077,  ..., 0.0150, 0.0091, 0.0323],
         [0.9386, 0.0064, 0.0397,  ..., 0.0150, 0.0091, 0.9030],
         [0.0205, 0.9809, 0.9449,  ..., 0.9550, 0.0091, 0.0323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9650, 0.0613, 0.0336,  ..., 0.0141, 0.0171, 0.9808],
         [0.0117, 0.0613, 0.0336,  ..., 0.0143, 0.0170, 0.0064],
         [0.0117, 0.0613, 0.0336,  ..., 0.9576, 0.9489, 0.0064],
         [0.0117, 0.8161, 0.8993,  ..., 0.0141, 0.0170, 0.0064]],
        [[0.4007, 0.0282, 0.0129,  ..., 0.0032, 0.1061, 0.0040],
         [0.1743, 0.0282, 0.0129,  ..., 0.0032, 0.1061, 0.0040],
         [0.2141, 0.0282, 0.0129,  ..., 0.9904, 0.6518, 0.9880],
         [0.2109, 0.9154, 0.9612,  ..., 0.0032, 0.1359, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3845e-02, 3.9707e-02, 8.0431e-03,  ..., 6.5292e-02,
          1.2093e-02, 4.1478e-02],
         [2.3845e-02, 3.9707e-02, 8.0431e-03,  ..., 6.5292e-02,
          1.2093e-02, 4.1478e-02],
         [9.2846e-01, 3.9707e-02, 8.0431e-03,  ..., 8.0412e-01,
          1.2093e-02, 8.7557e-01],
         [2.3845e-02, 8.8088e-01, 9.7587e-01,  ..., 6.5292e-02,
          9.6372e-01, 4.1478e-02]],
        [[9.2822e-03, 2.2241e-02, 5.9461e-04,  ..., 5.4769e-03,
          9.3990e-01, 4.9721e-02],
         [9.2822e-03, 2.2241e-02, 5.9461e-04,  ..., 5.4769e-03,
          2.0034e-02, 4.9721e-02],
         [9.7215e-01, 2.2241e-02, 5.9461e-04,  ..., 5.4769e-03,
          2.0034e-02, 8.5046e-01],
         [9.2822e-03, 9.3328e-01, 9.9822e-01,  ..., 9.8357e-01,
          2.0034e-02, 5.0098e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:22,941 [Process: 0] Synchronize training processes
2024-08-18 15:14:22,942 [Process: 0] Evaluating...
2024-08-18 15:14:22,943 [Process: 0] EPOCH 98:
2024-08-18 15:14:22,945 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:24,067 [Process: 0] Synchronize training processes
2024-08-18 15:14:24,068 [Process: 0] Evaluating...
2024-08-18 15:14:24,069 [Process: 0] EPOCH 99:
2024-08-18 15:14:24,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9222, 0.0211, 0.0214,  ..., 0.0079, 0.0051, 0.7216],
         [0.0259, 0.0211, 0.0214,  ..., 0.0079, 0.0051, 0.0928],
         [0.0259, 0.0211, 0.0214,  ..., 0.9762, 0.9848, 0.0928],
         [0.0259, 0.9366, 0.9358,  ..., 0.0079, 0.0051, 0.0928]],
        [[0.2714, 0.0228, 0.0184,  ..., 0.0019, 0.1744, 0.0037],
         [0.2100, 0.0228, 0.0184,  ..., 0.0019, 0.1744, 0.0037],
         [0.2100, 0.0228, 0.0184,  ..., 0.9943, 0.1744, 0.9889],
         [0.3086, 0.9315, 0.9448,  ..., 0.0019, 0.4768, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.3188e-03, 8.8010e-03, 3.3159e-02,  ..., 3.1993e-02,
          1.6210e-02, 3.2864e-02],
         [8.3188e-03, 8.8010e-03, 3.3159e-02,  ..., 3.1993e-02,
          1.6210e-02, 3.2864e-02],
         [9.7504e-01, 8.8010e-03, 3.3159e-02,  ..., 9.0402e-01,
          1.6210e-02, 9.0141e-01],
         [8.3188e-03, 9.7360e-01, 9.0052e-01,  ..., 3.1993e-02,
          9.5137e-01, 3.2864e-02]],
        [[2.0085e-03, 1.0004e-02, 2.2227e-04,  ..., 1.9721e-02,
          9.6301e-01, 5.6304e-02],
         [2.0085e-03, 1.0004e-02, 2.2227e-04,  ..., 1.9721e-02,
          1.2328e-02, 5.6304e-02],
         [9.9397e-01, 1.0004e-02, 2.2227e-04,  ..., 1.9721e-02,
          1.2328e-02, 8.2880e-01],
         [2.0085e-03, 9.6999e-01, 9.9933e-01,  ..., 9.4084e-01,
          1.2328e-02, 5.8592e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9518, 0.0196, 0.0140,  ..., 0.0099, 0.0117, 0.9446],
         [0.0160, 0.0196, 0.0140,  ..., 0.0099, 0.0117, 0.0185],
         [0.0160, 0.0196, 0.0140,  ..., 0.9702, 0.9648, 0.0185],
         [0.0160, 0.9413, 0.9579,  ..., 0.0099, 0.0117, 0.0185]],
        [[0.7662, 0.0289, 0.0398,  ..., 0.0114, 0.2069, 0.0182],
         [0.0779, 0.0289, 0.0398,  ..., 0.0107, 0.1832, 0.0182],
         [0.0779, 0.0289, 0.0398,  ..., 0.9673, 0.2872, 0.9454],
         [0.0779, 0.9133, 0.8807,  ..., 0.0107, 0.3227, 0.0182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0380, 0.0311, 0.0031,  ..., 0.0275, 0.0561, 0.0321],
         [0.0380, 0.0311, 0.0031,  ..., 0.0275, 0.0561, 0.0321],
         [0.8861, 0.0311, 0.0031,  ..., 0.9175, 0.0561, 0.9036],
         [0.0380, 0.9066, 0.9906,  ..., 0.0275, 0.8317, 0.0321]],
        [[0.0084, 0.0024, 0.0013,  ..., 0.0048, 0.8666, 0.0282],
         [0.0084, 0.0024, 0.0013,  ..., 0.0053, 0.0445, 0.0279],
         [0.9747, 0.0024, 0.0013,  ..., 0.0048, 0.0445, 0.9160],
         [0.0084, 0.9928, 0.9961,  ..., 0.9851, 0.0445, 0.0279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:25,206 [Process: 0] Synchronize training processes
2024-08-18 15:14:25,206 [Process: 0] Evaluating...
2024-08-18 15:14:25,208 [Process: 0] EPOCH 100:
2024-08-18 15:14:25,209 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:26,344 [Process: 0] Synchronize training processes
2024-08-18 15:14:26,344 [Process: 0] Evaluating...
2024-08-18 15:14:26,346 [Process: 0] EPOCH 101:
2024-08-18 15:14:26,348 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9725, 0.0231, 0.0419,  ..., 0.0075, 0.0124, 0.9793],
         [0.0092, 0.0231, 0.0419,  ..., 0.0097, 0.0124, 0.0069],
         [0.0092, 0.0231, 0.0419,  ..., 0.9754, 0.9627, 0.0069],
         [0.0092, 0.9306, 0.8742,  ..., 0.0075, 0.0124, 0.0069]],
        [[0.7048, 0.0669, 0.0284,  ..., 0.0099, 0.1521, 0.0017],
         [0.0984, 0.0669, 0.0284,  ..., 0.0099, 0.1521, 0.0017],
         [0.0984, 0.0689, 0.0284,  ..., 0.9704, 0.1936, 0.9950],
         [0.0984, 0.7972, 0.9147,  ..., 0.0099, 0.5021, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6870e-02, 3.1183e-02, 1.8036e-03,  ..., 4.3415e-02,
          4.2053e-02, 2.4728e-02],
         [2.6870e-02, 3.1183e-02, 1.8036e-03,  ..., 4.3415e-02,
          4.2053e-02, 2.4728e-02],
         [9.1939e-01, 3.1183e-02, 1.8036e-03,  ..., 8.6976e-01,
          4.2053e-02, 9.2582e-01],
         [2.6870e-02, 9.0645e-01, 9.9459e-01,  ..., 4.3415e-02,
          8.7384e-01, 2.4728e-02]],
        [[1.6840e-02, 4.5765e-04, 6.0157e-04,  ..., 5.3499e-03,
          8.1653e-01, 3.6324e-02],
         [1.6840e-02, 4.5765e-04, 6.0157e-04,  ..., 5.3499e-03,
          6.1155e-02, 3.6324e-02],
         [9.4948e-01, 4.5765e-04, 6.0157e-04,  ..., 5.3499e-03,
          6.1155e-02, 8.9103e-01],
         [1.6840e-02, 9.9863e-01, 9.9820e-01,  ..., 9.8395e-01,
          6.1155e-02, 3.6324e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9733, 0.0723, 0.0713,  ..., 0.0144, 0.0594, 0.9069],
         [0.0089, 0.0723, 0.0713,  ..., 0.0144, 0.0566, 0.0310],
         [0.0089, 0.0839, 0.0713,  ..., 0.9569, 0.8273, 0.0310],
         [0.0089, 0.7716, 0.7861,  ..., 0.0144, 0.0566, 0.0310]],
        [[0.8828, 0.0340, 0.0144,  ..., 0.0075, 0.1643, 0.0054],
         [0.0391, 0.0340, 0.0144,  ..., 0.0077, 0.1643, 0.0054],
         [0.0391, 0.0340, 0.0144,  ..., 0.9772, 0.1900, 0.9838],
         [0.0391, 0.8981, 0.9569,  ..., 0.0075, 0.4814, 0.0054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:14:27,483 [Process: 0] Synchronize training processes
2024-08-18 15:14:27,484 [Process: 0] Evaluating...
2024-08-18 15:14:27,487 [Process: 0] EPOCH 102:
2024-08-18 15:14:27,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:28,625 [Process: 0] Synchronize training processes
2024-08-18 15:14:28,625 [Process: 0] Evaluating...
2024-08-18 15:14:28,627 [Process: 0] EPOCH 103:
2024-08-18 15:14:28,629 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0117, 0.1072, 0.0019,  ..., 0.0165, 0.0239, 0.0253],
         [0.0117, 0.1072, 0.0019,  ..., 0.0165, 0.0239, 0.0253],
         [0.9649, 0.1072, 0.0019,  ..., 0.9506, 0.0239, 0.9242],
         [0.0117, 0.6785, 0.9944,  ..., 0.0165, 0.9283, 0.0253]],
        [[0.0044, 0.0295, 0.0212,  ..., 0.0042, 0.9599, 0.0137],
         [0.0044, 0.0295, 0.0212,  ..., 0.0042, 0.0134, 0.0168],
         [0.9867, 0.0295, 0.0212,  ..., 0.0042, 0.0134, 0.9557],
         [0.0044, 0.9116, 0.9364,  ..., 0.9873, 0.0134, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9767, 0.0351, 0.0250,  ..., 0.0113, 0.0101, 0.9600],
         [0.0079, 0.0351, 0.0250,  ..., 0.0113, 0.0101, 0.0142],
         [0.0077, 0.0351, 0.0250,  ..., 0.9662, 0.9697, 0.0129],
         [0.0077, 0.8947, 0.9250,  ..., 0.0113, 0.0101, 0.0129]],
        [[0.7089, 0.0410, 0.0183,  ..., 0.0183, 0.1990, 0.0038],
         [0.0874, 0.0410, 0.0183,  ..., 0.0183, 0.1990, 0.0038],
         [0.1163, 0.0410, 0.0183,  ..., 0.9450, 0.1998, 0.9887],
         [0.0874, 0.8770, 0.9452,  ..., 0.0183, 0.4022, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0256, 0.0049, 0.0090,  ..., 0.0151, 0.0087, 0.0198],
         [0.0284, 0.0049, 0.0090,  ..., 0.0151, 0.0087, 0.0198],
         [0.9203, 0.0049, 0.0090,  ..., 0.9547, 0.0087, 0.9407],
         [0.0256, 0.9854, 0.9731,  ..., 0.0151, 0.9738, 0.0198]],
        [[0.0123, 0.0015, 0.0137,  ..., 0.0252, 0.9599, 0.0335],
         [0.0144, 0.0015, 0.0137,  ..., 0.0252, 0.0134, 0.0336],
         [0.9611, 0.0015, 0.0137,  ..., 0.0252, 0.0134, 0.8994],
         [0.0123, 0.9954, 0.9590,  ..., 0.9243, 0.0134, 0.0335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9262, 0.0543, 0.0148,  ..., 0.0128, 0.0953, 0.9672],
         [0.0246, 0.0543, 0.0148,  ..., 0.0128, 0.0681, 0.0111],
         [0.0246, 0.0558, 0.0148,  ..., 0.9615, 0.7708, 0.0109],
         [0.0246, 0.8356, 0.9555,  ..., 0.0128, 0.0658, 0.0109]],
        [[0.8137, 0.0143, 0.0190,  ..., 0.0020, 0.1752, 0.0051],
         [0.0621, 0.0143, 0.0190,  ..., 0.0020, 0.1752, 0.0051],
         [0.0621, 0.0143, 0.0205,  ..., 0.9941, 0.1752, 0.9848],
         [0.0621, 0.9570, 0.9415,  ..., 0.0020, 0.4743, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:29,752 [Process: 0] Synchronize training processes
2024-08-18 15:14:29,752 [Process: 0] Evaluating...
2024-08-18 15:14:29,754 [Process: 0] EPOCH 104:
2024-08-18 15:14:29,756 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0165, 0.0191, 0.0133,  ..., 0.0304, 0.0061, 0.0132],
         [0.0165, 0.0191, 0.0133,  ..., 0.0304, 0.0061, 0.0132],
         [0.9506, 0.0191, 0.0133,  ..., 0.9088, 0.0061, 0.9604],
         [0.0165, 0.9426, 0.9600,  ..., 0.0304, 0.9817, 0.0132]],
        [[0.0071, 0.0060, 0.0025,  ..., 0.0357, 0.9678, 0.0360],
         [0.0079, 0.0060, 0.0025,  ..., 0.0357, 0.0107, 0.0360],
         [0.9778, 0.0060, 0.0025,  ..., 0.0357, 0.0107, 0.8921],
         [0.0071, 0.9820, 0.9926,  ..., 0.8929, 0.0107, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9688, 0.0292, 0.0446,  ..., 0.0123, 0.0234, 0.9719],
         [0.0104, 0.0292, 0.0446,  ..., 0.0123, 0.0234, 0.0094],
         [0.0104, 0.0292, 0.0538,  ..., 0.9632, 0.9299, 0.0094],
         [0.0104, 0.9123, 0.8570,  ..., 0.0123, 0.0234, 0.0094]],
        [[0.9153, 0.0437, 0.0227,  ..., 0.0071, 0.2267, 0.0092],
         [0.0282, 0.0437, 0.0227,  ..., 0.0071, 0.2267, 0.0092],
         [0.0282, 0.0437, 0.0227,  ..., 0.9787, 0.2267, 0.9723],
         [0.0282, 0.8690, 0.9318,  ..., 0.0071, 0.3198, 0.0092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4894e-02, 2.1195e-03, 1.3161e-02,  ..., 2.1803e-02,
          8.8794e-03, 7.1475e-03],
         [3.4894e-02, 2.0465e-03, 1.3161e-02,  ..., 2.1803e-02,
          8.8794e-03, 7.8243e-03],
         [8.9532e-01, 1.9508e-03, 1.3161e-02,  ..., 9.3459e-01,
          8.8794e-03, 9.7788e-01],
         [3.4894e-02, 9.9388e-01, 9.6052e-01,  ..., 2.1803e-02,
          9.7336e-01, 7.1475e-03]],
        [[1.5639e-02, 5.7567e-04, 1.0623e-03,  ..., 1.4715e-02,
          9.1595e-01, 1.8109e-02],
         [1.5639e-02, 5.7567e-04, 1.0623e-03,  ..., 1.6031e-02,
          2.8831e-02, 1.8109e-02],
         [9.5308e-01, 5.7567e-04, 1.0623e-03,  ..., 1.4715e-02,
          2.7612e-02, 9.4567e-01],
         [1.5639e-02, 9.9827e-01, 9.9681e-01,  ..., 9.5454e-01,
          2.7612e-02, 1.8109e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:14:30,894 [Process: 0] Synchronize training processes
2024-08-18 15:14:30,894 [Process: 0] Evaluating...
2024-08-18 15:14:30,896 [Process: 0] EPOCH 105:
2024-08-18 15:14:30,898 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:32,029 [Process: 0] Synchronize training processes
2024-08-18 15:14:32,029 [Process: 0] Evaluating...
2024-08-18 15:14:32,031 [Process: 0] EPOCH 106:
2024-08-18 15:14:32,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9455, 0.0516, 0.0309,  ..., 0.0178, 0.0065, 0.9231],
         [0.0182, 0.0516, 0.0309,  ..., 0.0178, 0.0065, 0.0256],
         [0.0182, 0.0516, 0.0309,  ..., 0.9467, 0.9806, 0.0256],
         [0.0182, 0.8452, 0.9072,  ..., 0.0178, 0.0065, 0.0256]],
        [[0.8769, 0.0714, 0.0093,  ..., 0.0048, 0.1350, 0.0036],
         [0.0410, 0.0714, 0.0093,  ..., 0.0048, 0.1350, 0.0036],
         [0.0410, 0.0774, 0.0093,  ..., 0.9856, 0.1350, 0.9892],
         [0.0410, 0.7798, 0.9721,  ..., 0.0048, 0.5950, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0270, 0.0043, 0.0019,  ..., 0.0287, 0.2046, 0.0433],
         [0.0270, 0.0043, 0.0019,  ..., 0.0287, 0.1922, 0.0433],
         [0.9190, 0.0043, 0.0019,  ..., 0.9138, 0.3877, 0.8702],
         [0.0270, 0.9870, 0.9943,  ..., 0.0287, 0.2155, 0.0433]],
        [[0.0082, 0.0019, 0.0025,  ..., 0.0041, 0.9656, 0.0079],
         [0.0082, 0.0019, 0.0025,  ..., 0.0041, 0.0115, 0.0079],
         [0.9753, 0.0018, 0.0025,  ..., 0.0041, 0.0115, 0.9762],
         [0.0082, 0.9944, 0.9925,  ..., 0.9877, 0.0115, 0.0079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9264, 0.0191, 0.0352,  ..., 0.0034, 0.0247, 0.9886],
         [0.0252, 0.0191, 0.0352,  ..., 0.0034, 0.0247, 0.0038],
         [0.0242, 0.0191, 0.0352,  ..., 0.9897, 0.9260, 0.0038],
         [0.0242, 0.9428, 0.8944,  ..., 0.0034, 0.0247, 0.0038]],
        [[0.7600, 0.0329, 0.0225,  ..., 0.0041, 0.1413, 0.0105],
         [0.0800, 0.0329, 0.0225,  ..., 0.0043, 0.1413, 0.0105],
         [0.0800, 0.0329, 0.0225,  ..., 0.9875, 0.1656, 0.9685],
         [0.0800, 0.9014, 0.9326,  ..., 0.0041, 0.5518, 0.0105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.9565e-02, 2.5001e-02, 1.7893e-03,  ..., 6.9448e-02,
          5.0413e-01, 3.2502e-02],
         [5.5027e-02, 1.8123e-02, 1.7893e-03,  ..., 6.9448e-02,
          1.6529e-01, 3.1108e-02],
         [8.3038e-01, 1.8123e-02, 1.7893e-03,  ..., 7.8199e-01,
          1.6529e-01, 9.0528e-01],
         [5.5027e-02, 9.3875e-01, 9.9463e-01,  ..., 7.9116e-02,
          1.6529e-01, 3.1108e-02]],
        [[3.7881e-03, 2.0881e-03, 1.4100e-04,  ..., 1.0824e-03,
          9.6281e-01, 4.2439e-02],
         [3.7881e-03, 2.0881e-03, 1.4100e-04,  ..., 1.0824e-03,
          1.2396e-02, 4.2439e-02],
         [9.8864e-01, 2.0881e-03, 1.4100e-04,  ..., 1.0824e-03,
          1.2396e-02, 8.7266e-01],
         [3.7881e-03, 9.9374e-01, 9.9958e-01,  ..., 9.9675e-01,
          1.2396e-02, 4.2457e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:33,170 [Process: 0] Synchronize training processes
2024-08-18 15:14:33,171 [Process: 0] Evaluating...
2024-08-18 15:14:33,172 [Process: 0] EPOCH 107:
2024-08-18 15:14:33,174 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:34,299 [Process: 0] Synchronize training processes
2024-08-18 15:14:34,300 [Process: 0] Evaluating...
2024-08-18 15:14:34,301 [Process: 0] EPOCH 108:
2024-08-18 15:14:34,303 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8007, 0.0646, 0.0174,  ..., 0.0037, 0.0097, 0.9899],
         [0.0664, 0.0646, 0.0160,  ..., 0.0037, 0.0097, 0.0034],
         [0.0664, 0.0646, 0.0160,  ..., 0.9889, 0.9709, 0.0034],
         [0.0664, 0.8063, 0.9506,  ..., 0.0037, 0.0097, 0.0034]],
        [[0.5611, 0.0221, 0.0510,  ..., 0.0082, 0.2339, 0.0024],
         [0.1441, 0.0221, 0.0510,  ..., 0.0082, 0.2339, 0.0024],
         [0.1441, 0.0221, 0.0510,  ..., 0.9753, 0.2339, 0.9928],
         [0.1507, 0.9336, 0.8471,  ..., 0.0082, 0.2982, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2021e-02, 1.8365e-03, 1.5494e-02,  ..., 2.2340e-02,
          3.4041e-01, 2.8496e-02],
         [3.2021e-02, 1.8365e-03, 1.5494e-02,  ..., 2.2340e-02,
          2.1986e-01, 2.8496e-02],
         [9.0394e-01, 1.8365e-03, 1.5494e-02,  ..., 9.3298e-01,
          2.1986e-01, 9.1451e-01],
         [3.2021e-02, 9.9449e-01, 9.5352e-01,  ..., 2.2340e-02,
          2.1986e-01, 2.8496e-02]],
        [[1.9256e-02, 8.5762e-04, 1.2548e-02,  ..., 2.5559e-03,
          8.8052e-01, 6.1625e-02],
         [1.7019e-02, 8.5762e-04, 3.8457e-03,  ..., 2.5559e-03,
          3.8860e-02, 6.1625e-02],
         [9.4671e-01, 8.5762e-04, 3.8457e-03,  ..., 2.5559e-03,
          3.8860e-02, 7.9863e-01],
         [1.7019e-02, 9.9743e-01, 9.7976e-01,  ..., 9.9233e-01,
          4.1756e-02, 7.8120e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8777, 0.0388, 0.0142,  ..., 0.0081, 0.0328, 0.9081],
         [0.0408, 0.0355, 0.0142,  ..., 0.0081, 0.0274, 0.0306],
         [0.0408, 0.0399, 0.0148,  ..., 0.9756, 0.9124, 0.0306],
         [0.0408, 0.8857, 0.9569,  ..., 0.0081, 0.0274, 0.0306]],
        [[0.8378, 0.0516, 0.0395,  ..., 0.0100, 0.1832, 0.0095],
         [0.0541, 0.0516, 0.0395,  ..., 0.0100, 0.1832, 0.0095],
         [0.0541, 0.0516, 0.0395,  ..., 0.9700, 0.1832, 0.9716],
         [0.0541, 0.8451, 0.8814,  ..., 0.0100, 0.4503, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6242e-02, 7.6758e-04, 1.0685e-03,  ..., 1.0829e-02,
          2.9396e-01, 2.8902e-02],
         [3.6242e-02, 7.6758e-04, 1.0685e-03,  ..., 1.0829e-02,
          2.3535e-01, 2.8902e-02],
         [8.9127e-01, 7.6758e-04, 1.0685e-03,  ..., 9.6751e-01,
          2.3535e-01, 9.1329e-01],
         [3.6242e-02, 9.9770e-01, 9.9679e-01,  ..., 1.0829e-02,
          2.3535e-01, 2.8902e-02]],
        [[1.6962e-02, 1.0721e-03, 6.6308e-03,  ..., 1.6570e-02,
          9.5830e-01, 1.4937e-02],
         [1.6962e-02, 1.0721e-03, 4.8877e-03,  ..., 1.6570e-02,
          1.3899e-02, 1.4937e-02],
         [9.4912e-01, 1.0721e-03, 4.8877e-03,  ..., 1.6570e-02,
          1.3899e-02, 9.5519e-01],
         [1.6962e-02, 9.9678e-01, 9.8359e-01,  ..., 9.5029e-01,
          1.3899e-02, 1.4937e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:35,432 [Process: 0] Synchronize training processes
2024-08-18 15:14:35,432 [Process: 0] Evaluating...
2024-08-18 15:14:35,434 [Process: 0] EPOCH 109:
2024-08-18 15:14:35,436 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:36,571 [Process: 0] Synchronize training processes
2024-08-18 15:14:36,571 [Process: 0] Evaluating...
2024-08-18 15:14:36,573 [Process: 0] EPOCH 110:
2024-08-18 15:14:36,575 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8155, 0.0297, 0.0638,  ..., 0.0140, 0.0101, 0.9728],
         [0.0615, 0.0297, 0.0638,  ..., 0.0140, 0.0094, 0.0091],
         [0.0615, 0.0297, 0.0638,  ..., 0.9581, 0.9711, 0.0091],
         [0.0615, 0.9109, 0.8085,  ..., 0.0140, 0.0094, 0.0091]],
        [[0.9511, 0.0506, 0.0184,  ..., 0.0104, 0.1610, 0.0021],
         [0.0163, 0.0506, 0.0184,  ..., 0.0090, 0.1610, 0.0021],
         [0.0163, 0.0506, 0.0184,  ..., 0.9717, 0.1610, 0.9937],
         [0.0163, 0.8483, 0.9448,  ..., 0.0090, 0.5171, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1381e-01, 8.7009e-04, 1.9041e-03,  ..., 3.1105e-02,
          4.1540e-01, 2.2351e-02],
         [1.0138e-01, 8.7009e-04, 1.9041e-03,  ..., 3.1105e-02,
          1.6690e-01, 2.2351e-02],
         [6.7880e-01, 8.7009e-04, 1.9041e-03,  ..., 9.0668e-01,
          1.6690e-01, 9.3295e-01],
         [1.0600e-01, 9.9739e-01, 9.9429e-01,  ..., 3.1105e-02,
          2.5080e-01, 2.2351e-02]],
        [[3.8967e-03, 2.9782e-03, 3.0302e-02,  ..., 6.6205e-03,
          8.9448e-01, 1.1781e-02],
         [3.8967e-03, 1.1660e-03, 3.0302e-02,  ..., 6.6205e-03,
          3.5172e-02, 1.1781e-02],
         [9.8831e-01, 1.0218e-03, 3.0302e-02,  ..., 6.6205e-03,
          3.5172e-02, 9.6466e-01],
         [3.8967e-03, 9.9483e-01, 9.0910e-01,  ..., 9.8014e-01,
          3.5172e-02, 1.1781e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9248, 0.0537, 0.0483,  ..., 0.0096, 0.0068, 0.8983],
         [0.0251, 0.0537, 0.0483,  ..., 0.0096, 0.0068, 0.0339],
         [0.0251, 0.0623, 0.0483,  ..., 0.9712, 0.9795, 0.0339],
         [0.0251, 0.8303, 0.8551,  ..., 0.0096, 0.0068, 0.0339]],
        [[0.7076, 0.0130, 0.0491,  ..., 0.0074, 0.2392, 0.0057],
         [0.0841, 0.0130, 0.0491,  ..., 0.0074, 0.2392, 0.0057],
         [0.1242, 0.0130, 0.0491,  ..., 0.9779, 0.2392, 0.9828],
         [0.0841, 0.9610, 0.8527,  ..., 0.0074, 0.2824, 0.0057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:37,710 [Process: 0] Synchronize training processes
2024-08-18 15:14:37,710 [Process: 0] Evaluating...
2024-08-18 15:14:37,712 [Process: 0] EPOCH 111:
2024-08-18 15:14:37,713 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0260, 0.0026, 0.0025,  ..., 0.0173, 0.2370, 0.0254],
         [0.0260, 0.0026, 0.0025,  ..., 0.0173, 0.2370, 0.0254],
         [0.9220, 0.0026, 0.0025,  ..., 0.9482, 0.2370, 0.9238],
         [0.0260, 0.9923, 0.9924,  ..., 0.0173, 0.2890, 0.0254]],
        [[0.0058, 0.0069, 0.0522,  ..., 0.3175, 0.9544, 0.0143],
         [0.0058, 0.0069, 0.0522,  ..., 0.2075, 0.0152, 0.0143],
         [0.9827, 0.0069, 0.0522,  ..., 0.2075, 0.0152, 0.9570],
         [0.0058, 0.9792, 0.8433,  ..., 0.2675, 0.0152, 0.0143]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9677, 0.0418, 0.0205,  ..., 0.0101, 0.0299, 0.9931],
         [0.0108, 0.0418, 0.0204,  ..., 0.0074, 0.0213, 0.0023],
         [0.0108, 0.0418, 0.0222,  ..., 0.9759, 0.9274, 0.0023],
         [0.0108, 0.8746, 0.9368,  ..., 0.0066, 0.0213, 0.0023]],
        [[0.2299, 0.0205, 0.0361,  ..., 0.0176, 0.1117, 0.0098],
         [0.2299, 0.0205, 0.0361,  ..., 0.0112, 0.1117, 0.0075],
         [0.2796, 0.0205, 0.0361,  ..., 0.9600, 0.4079, 0.9751],
         [0.2607, 0.9384, 0.8918,  ..., 0.0112, 0.3687, 0.0075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0269, 0.0025, 0.0016,  ..., 0.0219, 0.1905, 0.0113],
         [0.0269, 0.0025, 0.0016,  ..., 0.0219, 0.1905, 0.0113],
         [0.9193, 0.0025, 0.0016,  ..., 0.9342, 0.1905, 0.9662],
         [0.0269, 0.9925, 0.9951,  ..., 0.0219, 0.4285, 0.0113]],
        [[0.0307, 0.0246, 0.0221,  ..., 0.2089, 0.9773, 0.0295],
         [0.0302, 0.0226, 0.0221,  ..., 0.2089, 0.0076, 0.0276],
         [0.9090, 0.0226, 0.0221,  ..., 0.2089, 0.0076, 0.9154],
         [0.0302, 0.9301, 0.9337,  ..., 0.3733, 0.0076, 0.0276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8679, 0.0497, 0.0130,  ..., 0.0102, 0.0684, 0.9750],
         [0.0440, 0.0497, 0.0130,  ..., 0.0102, 0.0684, 0.0083],
         [0.0440, 0.0497, 0.0130,  ..., 0.9695, 0.7949, 0.0083],
         [0.0440, 0.8509, 0.9611,  ..., 0.0102, 0.0684, 0.0083]],
        [[0.2267, 0.0265, 0.0402,  ..., 0.0053, 0.0301, 0.0059],
         [0.2267, 0.0265, 0.0402,  ..., 0.0053, 0.0301, 0.0059],
         [0.2267, 0.0265, 0.0402,  ..., 0.9842, 0.9097, 0.9822],
         [0.3198, 0.9206, 0.8793,  ..., 0.0053, 0.0301, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:38,849 [Process: 0] Synchronize training processes
2024-08-18 15:14:38,850 [Process: 0] Evaluating...
2024-08-18 15:14:38,853 [Process: 0] EPOCH 112:
2024-08-18 15:14:38,855 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:39,991 [Process: 0] Synchronize training processes
2024-08-18 15:14:39,991 [Process: 0] Evaluating...
2024-08-18 15:14:39,993 [Process: 0] EPOCH 113:
2024-08-18 15:14:39,995 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1726e-02, 3.0553e-03, 5.4501e-04,  ..., 2.9201e-02,
          2.1256e-01, 5.7098e-03],
         [3.1726e-02, 2.6408e-03, 4.1948e-04,  ..., 2.7265e-02,
          2.1256e-01, 5.7098e-03],
         [9.0482e-01, 2.6408e-03, 4.1948e-04,  ..., 9.1627e-01,
          2.1256e-01, 9.8287e-01],
         [3.1726e-02, 9.9166e-01, 9.9862e-01,  ..., 2.7265e-02,
          3.6232e-01, 5.7098e-03]],
        [[4.7285e-02, 1.0327e-02, 6.9097e-03,  ..., 1.5139e-02,
          9.1696e-01, 1.1723e-02],
         [4.7285e-02, 9.9604e-03, 6.9097e-03,  ..., 8.3523e-03,
          2.7680e-02, 1.1723e-02],
         [8.5632e-01, 9.9604e-03, 6.9097e-03,  ..., 8.3523e-03,
          2.7680e-02, 9.6483e-01],
         [4.9113e-02, 9.6975e-01, 9.7927e-01,  ..., 9.6816e-01,
          2.7680e-02, 1.1723e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8393, 0.0371, 0.0213,  ..., 0.1919, 0.0033, 0.9858],
         [0.0544, 0.0371, 0.0213,  ..., 0.1919, 0.0033, 0.0047],
         [0.0532, 0.0371, 0.0213,  ..., 0.4242, 0.9900, 0.0047],
         [0.0532, 0.8888, 0.9362,  ..., 0.1919, 0.0033, 0.0047]],
        [[0.2365, 0.0141, 0.0194,  ..., 0.0082, 0.1359, 0.0048],
         [0.2365, 0.0141, 0.0194,  ..., 0.0082, 0.1359, 0.0048],
         [0.2365, 0.0141, 0.0194,  ..., 0.9755, 0.2678, 0.9857],
         [0.2905, 0.9578, 0.9418,  ..., 0.0082, 0.4604, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8057e-02, 8.7172e-03, 2.7147e-03,  ..., 2.1903e-02,
          1.6809e-01, 3.2959e-02],
         [3.8057e-02, 8.7172e-03, 2.7147e-03,  ..., 2.1903e-02,
          1.6809e-01, 3.2959e-02],
         [8.8583e-01, 8.7172e-03, 2.7147e-03,  ..., 9.3429e-01,
          1.6809e-01, 9.0112e-01],
         [3.8057e-02, 9.7385e-01, 9.9186e-01,  ..., 2.1903e-02,
          4.9573e-01, 3.2959e-02]],
        [[6.9846e-03, 3.2673e-03, 1.1727e-04,  ..., 7.2521e-03,
          9.7069e-01, 1.2223e-02],
         [6.9846e-03, 3.2673e-03, 1.1727e-04,  ..., 7.2521e-03,
          9.7685e-03, 1.2223e-02],
         [9.7905e-01, 3.2673e-03, 1.1727e-04,  ..., 7.2521e-03,
          9.7685e-03, 9.6333e-01],
         [6.9846e-03, 9.9020e-01, 9.9965e-01,  ..., 9.7824e-01,
          9.7685e-03, 1.2223e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:41,168 [Process: 0] Synchronize training processes
2024-08-18 15:14:41,169 [Process: 0] Evaluating...
2024-08-18 15:14:41,171 [Process: 0] EPOCH 114:
2024-08-18 15:14:41,172 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:42,322 [Process: 0] Synchronize training processes
2024-08-18 15:14:42,322 [Process: 0] Evaluating...
2024-08-18 15:14:42,324 [Process: 0] EPOCH 115:
2024-08-18 15:14:42,326 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9631, 0.0073, 0.0040,  ..., 0.0095, 0.0056, 0.9373],
         [0.0123, 0.0073, 0.0040,  ..., 0.0087, 0.0056, 0.0209],
         [0.0123, 0.0073, 0.0040,  ..., 0.9730, 0.9833, 0.0209],
         [0.0123, 0.9780, 0.9880,  ..., 0.0087, 0.0056, 0.0209]],
        [[0.8428, 0.0646, 0.0253,  ..., 0.0051, 0.1542, 0.0080],
         [0.0466, 0.0646, 0.0253,  ..., 0.0051, 0.1542, 0.0080],
         [0.0640, 0.0646, 0.0253,  ..., 0.9847, 0.3288, 0.9761],
         [0.0466, 0.8061, 0.9241,  ..., 0.0051, 0.3628, 0.0080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0240, 0.0045, 0.0144,  ..., 0.0250, 0.0336, 0.0292],
         [0.0240, 0.0021, 0.0144,  ..., 0.0250, 0.0336, 0.0292],
         [0.9280, 0.0021, 0.0144,  ..., 0.9250, 0.0336, 0.9124],
         [0.0240, 0.9913, 0.9568,  ..., 0.0250, 0.8992, 0.0292]],
        [[0.0066, 0.0024, 0.0012,  ..., 0.0106, 0.7662, 0.0583],
         [0.0066, 0.0024, 0.0012,  ..., 0.0106, 0.0779, 0.0583],
         [0.9803, 0.0024, 0.0012,  ..., 0.0106, 0.0779, 0.8213],
         [0.0066, 0.9927, 0.9964,  ..., 0.9681, 0.0779, 0.0620]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.8548, 0.0215, 0.0071,  ..., 0.0050, 0.0061, 0.7158],
         [0.0484, 0.0180, 0.0071,  ..., 0.0050, 0.0061, 0.0947],
         [0.0484, 0.0180, 0.0071,  ..., 0.9851, 0.9818, 0.0947],
         [0.0484, 0.9424, 0.9786,  ..., 0.0050, 0.0061, 0.0947]],
        [[0.1595, 0.0365, 0.0209,  ..., 0.0023, 0.1309, 0.0149],
         [0.1595, 0.0365, 0.0209,  ..., 0.0023, 0.1309, 0.0149],
         [0.5122, 0.0365, 0.0209,  ..., 0.9931, 0.6041, 0.9554],
         [0.1688, 0.8905, 0.9373,  ..., 0.0023, 0.1342, 0.0149]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7852e-02, 8.7524e-03, 2.4103e-03,  ..., 1.8485e-02,
          4.9497e-03, 3.2737e-02],
         [1.2972e-02, 8.7524e-03, 2.4103e-03,  ..., 1.8485e-02,
          4.2814e-03, 2.8857e-02],
         [9.5620e-01, 8.7524e-03, 2.4103e-03,  ..., 9.4454e-01,
          4.2814e-03, 9.0955e-01],
         [1.2972e-02, 9.7374e-01, 9.9277e-01,  ..., 1.8485e-02,
          9.8649e-01, 2.8857e-02]],
        [[5.7207e-02, 2.4261e-03, 3.1642e-04,  ..., 8.7377e-04,
          7.3953e-01, 1.9255e-02],
         [5.7207e-02, 2.4261e-03, 3.1642e-04,  ..., 8.7377e-04,
          8.6824e-02, 1.9255e-02],
         [8.1932e-01, 2.4261e-03, 3.1642e-04,  ..., 8.7377e-04,
          8.6824e-02, 9.4223e-01],
         [6.6269e-02, 9.9272e-01, 9.9905e-01,  ..., 9.9738e-01,
          8.6824e-02, 1.9255e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:43,474 [Process: 0] Synchronize training processes
2024-08-18 15:14:43,475 [Process: 0] Evaluating...
2024-08-18 15:14:43,477 [Process: 0] EPOCH 116:
2024-08-18 15:14:43,479 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:44,634 [Process: 0] Synchronize training processes
2024-08-18 15:14:44,635 [Process: 0] Evaluating...
2024-08-18 15:14:44,637 [Process: 0] EPOCH 117:
2024-08-18 15:14:44,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9772, 0.0260, 0.0212,  ..., 0.0070, 0.0152, 0.9827],
         [0.0076, 0.0260, 0.0212,  ..., 0.0070, 0.0152, 0.0058],
         [0.0076, 0.0260, 0.0212,  ..., 0.9790, 0.9543, 0.0058],
         [0.0076, 0.9219, 0.9364,  ..., 0.0070, 0.0152, 0.0058]],
        [[0.0732, 0.0325, 0.0121,  ..., 0.0189, 0.0394, 0.0127],
         [0.0732, 0.0325, 0.0121,  ..., 0.0189, 0.0394, 0.0130],
         [0.7803, 0.0325, 0.0121,  ..., 0.9433, 0.8817, 0.9617],
         [0.0732, 0.9025, 0.9638,  ..., 0.0189, 0.0394, 0.0127]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1954e-02, 5.9780e-04, 3.7344e-03,  ..., 2.0552e-02,
          2.2574e-01, 2.7412e-02],
         [4.1954e-02, 5.9780e-04, 3.7344e-03,  ..., 1.9348e-02,
          2.2574e-01, 2.7412e-02],
         [8.7414e-01, 5.9780e-04, 3.7344e-03,  ..., 9.4075e-01,
          2.2574e-01, 9.1776e-01],
         [4.1954e-02, 9.9821e-01, 9.8880e-01,  ..., 1.9348e-02,
          3.2279e-01, 2.7412e-02]],
        [[7.7125e-03, 3.1737e-03, 1.3439e-03,  ..., 3.2207e-03,
          5.4290e-01, 3.6846e-02],
         [7.2753e-03, 2.8849e-03, 1.2722e-03,  ..., 2.5397e-03,
          1.5237e-01, 3.6846e-02],
         [9.7774e-01, 2.8849e-03, 1.2722e-03,  ..., 2.5397e-03,
          1.5237e-01, 8.8946e-01],
         [7.2753e-03, 9.9106e-01, 9.9611e-01,  ..., 9.9170e-01,
          1.5237e-01, 3.6846e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9948, 0.0613, 0.0264,  ..., 0.0074, 0.0054, 0.9794],
         [0.0017, 0.0624, 0.0264,  ..., 0.0074, 0.0051, 0.0069],
         [0.0017, 0.0659, 0.0264,  ..., 0.9777, 0.9845, 0.0069],
         [0.0017, 0.8104, 0.9208,  ..., 0.0074, 0.0051, 0.0069]],
        [[0.9573, 0.0160, 0.0057,  ..., 0.0265, 0.2317, 0.1003],
         [0.0142, 0.0160, 0.0057,  ..., 0.0265, 0.2317, 0.1003],
         [0.0142, 0.0160, 0.0057,  ..., 0.9205, 0.2317, 0.6990],
         [0.0142, 0.9520, 0.9829,  ..., 0.0265, 0.3049, 0.1003]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:45,775 [Process: 0] Synchronize training processes
2024-08-18 15:14:45,776 [Process: 0] Evaluating...
2024-08-18 15:14:45,778 [Process: 0] EPOCH 118:
2024-08-18 15:14:45,780 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0744e-02, 5.4314e-04, 2.4373e-04,  ..., 1.0454e-02,
          2.6568e-01, 2.9942e-02],
         [3.0744e-02, 5.4314e-04, 2.4373e-04,  ..., 1.0892e-02,
          2.3703e-01, 2.9942e-02],
         [9.0462e-01, 5.4314e-04, 2.4373e-04,  ..., 9.6820e-01,
          2.3703e-01, 9.1017e-01],
         [3.3893e-02, 9.9837e-01, 9.9927e-01,  ..., 1.0454e-02,
          2.6027e-01, 2.9942e-02]],
        [[6.3623e-03, 1.3974e-03, 1.1870e-03,  ..., 2.9657e-04,
          9.7132e-01, 3.9642e-02],
         [6.3623e-03, 1.3974e-03, 1.1870e-03,  ..., 2.8566e-04,
          9.5599e-03, 3.9642e-02],
         [9.8091e-01, 1.3974e-03, 1.1870e-03,  ..., 2.8566e-04,
          9.5599e-03, 8.8107e-01],
         [6.3623e-03, 9.9581e-01, 9.9644e-01,  ..., 9.9913e-01,
          9.5599e-03, 3.9642e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9767, 0.0039, 0.0133,  ..., 0.0695, 0.0047, 0.9946],
         [0.0078, 0.0039, 0.0133,  ..., 0.0695, 0.0044, 0.0018],
         [0.0078, 0.0039, 0.0133,  ..., 0.7916, 0.9864, 0.0018],
         [0.0078, 0.9883, 0.9601,  ..., 0.0695, 0.0044, 0.0018]],
        [[0.9377, 0.0494, 0.0142,  ..., 0.0075, 0.2500, 0.0358],
         [0.0199, 0.0494, 0.0142,  ..., 0.0075, 0.2500, 0.0358],
         [0.0225, 0.0494, 0.0142,  ..., 0.9775, 0.2500, 0.8925],
         [0.0199, 0.8517, 0.9574,  ..., 0.0075, 0.2500, 0.0358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3015e-02, 2.9338e-03, 6.9293e-04,  ..., 3.9899e-02,
          2.4873e-01, 4.0409e-02],
         [3.3015e-02, 2.9338e-03, 6.9293e-04,  ..., 3.9899e-02,
          2.4873e-01, 4.0409e-02],
         [9.0096e-01, 2.9338e-03, 6.9293e-04,  ..., 8.8030e-01,
          2.4873e-01, 8.7877e-01],
         [3.3015e-02, 9.9120e-01, 9.9792e-01,  ..., 3.9899e-02,
          2.5381e-01, 4.0409e-02]],
        [[1.0484e-02, 6.1294e-04, 3.0161e-03,  ..., 2.1838e-04,
          9.4996e-01, 3.2604e-02],
         [1.0484e-02, 6.1294e-04, 3.0161e-03,  ..., 2.1838e-04,
          1.6681e-02, 3.2604e-02],
         [9.6855e-01, 6.1294e-04, 3.7424e-01,  ..., 2.1838e-04,
          1.6681e-02, 9.0219e-01],
         [1.0484e-02, 9.9816e-01, 6.1973e-01,  ..., 9.9934e-01,
          1.6681e-02, 3.2604e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9930, 0.0140, 0.0141,  ..., 0.2199, 0.0076, 0.9908],
         [0.0023, 0.0116, 0.0141,  ..., 0.2174, 0.0076, 0.0031],
         [0.0023, 0.0121, 0.0141,  ..., 0.3141, 0.9773, 0.0031],
         [0.0023, 0.9623, 0.9576,  ..., 0.2486, 0.0076, 0.0031]],
        [[0.8095, 0.0130, 0.0214,  ..., 0.0065, 0.2338, 0.0090],
         [0.0635, 0.0130, 0.0214,  ..., 0.0065, 0.2338, 0.0090],
         [0.0635, 0.0130, 0.0244,  ..., 0.9805, 0.2602, 0.9730],
         [0.0635, 0.9610, 0.9328,  ..., 0.0065, 0.2722, 0.0090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:46,915 [Process: 0] Synchronize training processes
2024-08-18 15:14:46,915 [Process: 0] Evaluating...
2024-08-18 15:14:46,917 [Process: 0] EPOCH 119:
2024-08-18 15:14:46,919 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:48,053 [Process: 0] Synchronize training processes
2024-08-18 15:14:48,053 [Process: 0] Evaluating...
2024-08-18 15:14:48,055 [Process: 0] EPOCH 120:
2024-08-18 15:14:48,056 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3565e-02, 8.9908e-03, 7.3470e-04,  ..., 3.3328e-02,
          1.2874e-01, 4.7927e-02],
         [3.3565e-02, 8.9908e-03, 7.3470e-04,  ..., 3.0147e-02,
          1.2874e-01, 4.7927e-02],
         [8.9931e-01, 8.9908e-03, 7.3470e-04,  ..., 9.0638e-01,
          1.2874e-01, 8.5622e-01],
         [3.3565e-02, 9.7303e-01, 9.9780e-01,  ..., 3.0147e-02,
          6.1378e-01, 4.7927e-02]],
        [[2.5867e-02, 6.3555e-04, 1.0597e-04,  ..., 3.2877e-03,
          9.8189e-01, 2.8460e-02],
         [2.3228e-02, 6.3555e-04, 1.0597e-04,  ..., 3.2877e-03,
          6.0376e-03, 2.8460e-02],
         [9.2768e-01, 6.3555e-04, 1.0597e-04,  ..., 3.2877e-03,
          6.0376e-03, 9.1462e-01],
         [2.3228e-02, 9.9809e-01, 9.9968e-01,  ..., 9.9014e-01,
          6.0376e-03, 2.8460e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7683e-01, 1.4570e-02, 3.0411e-02,  ..., 3.1777e-01,
          9.8017e-04, 9.7576e-01],
         [7.7229e-03, 1.4570e-02, 3.0411e-02,  ..., 2.1041e-01,
          9.8017e-04, 8.0792e-03],
         [7.7229e-03, 1.4570e-02, 3.0411e-02,  ..., 2.1041e-01,
          9.9706e-01, 8.0792e-03],
         [7.7229e-03, 9.5629e-01, 9.0877e-01,  ..., 2.6141e-01,
          9.8017e-04, 8.0792e-03]],
        [[9.5412e-01, 3.3669e-02, 4.8476e-02,  ..., 4.7772e-03,
          1.7377e-01, 6.4027e-03],
         [1.5293e-02, 3.3669e-02, 4.3705e-02,  ..., 4.7772e-03,
          1.7377e-01, 6.4027e-03],
         [1.5293e-02, 3.3669e-02, 4.3705e-02,  ..., 9.8567e-01,
          4.5702e-01, 9.8079e-01],
         [1.5293e-02, 8.9899e-01, 8.6411e-01,  ..., 4.7772e-03,
          1.9545e-01, 6.4027e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6752e-02, 7.2701e-03, 5.0963e-04,  ..., 9.8042e-03,
          3.8401e-02, 2.7399e-02],
         [3.0906e-02, 7.2701e-03, 5.0963e-04,  ..., 9.8042e-03,
          3.8401e-02, 2.7399e-02],
         [9.0144e-01, 7.2701e-03, 5.0963e-04,  ..., 9.7059e-01,
          3.8401e-02, 9.1780e-01],
         [3.0906e-02, 9.7819e-01, 9.9847e-01,  ..., 9.8042e-03,
          8.8480e-01, 2.7399e-02]],
        [[1.8134e-02, 6.3317e-03, 8.1232e-06,  ..., 2.6570e-03,
          9.4714e-01, 2.1678e-02],
         [1.8134e-02, 5.4087e-03, 8.1232e-06,  ..., 2.6570e-03,
          1.7621e-02, 2.1678e-02],
         [9.4560e-01, 5.4087e-03, 8.1232e-06,  ..., 2.6570e-03,
          1.7621e-02, 9.3497e-01],
         [1.8134e-02, 9.8285e-01, 9.9998e-01,  ..., 9.9203e-01,
          1.7621e-02, 2.1678e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:49,193 [Process: 0] Synchronize training processes
2024-08-18 15:14:49,193 [Process: 0] Evaluating...
2024-08-18 15:14:49,195 [Process: 0] EPOCH 121:
2024-08-18 15:14:49,197 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:50,329 [Process: 0] Synchronize training processes
2024-08-18 15:14:50,329 [Process: 0] Evaluating...
2024-08-18 15:14:50,333 [Process: 0] EPOCH 122:
2024-08-18 15:14:50,335 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6081e-01, 3.6860e-02, 1.2431e-02,  ..., 2.1584e-02,
          3.9355e-03, 9.6708e-01],
         [1.3062e-02, 3.6860e-02, 1.2431e-02,  ..., 2.1584e-02,
          3.9355e-03, 1.0829e-02],
         [1.3062e-02, 3.6860e-02, 1.2660e-02,  ..., 9.3525e-01,
          9.8819e-01, 1.1265e-02],
         [1.3062e-02, 8.8942e-01, 9.6248e-01,  ..., 2.1584e-02,
          3.9355e-03, 1.0829e-02]],
        [[8.3207e-01, 1.9951e-02, 5.3317e-02,  ..., 7.1958e-04,
          2.3044e-01, 7.1787e-03],
         [5.5976e-02, 1.9951e-02, 5.3317e-02,  ..., 7.1958e-04,
          2.3044e-01, 7.1787e-03],
         [5.5976e-02, 1.9951e-02, 5.3317e-02,  ..., 9.9784e-01,
          2.3044e-01, 9.7846e-01],
         [5.5976e-02, 9.4015e-01, 8.4005e-01,  ..., 7.1958e-04,
          3.0869e-01, 7.1787e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9799e-02, 2.7098e-03, 2.0075e-03,  ..., 2.1807e-02,
          7.0253e-02, 9.7486e-03],
         [2.9799e-02, 2.7098e-03, 2.0075e-03,  ..., 2.1807e-02,
          7.0253e-02, 9.7486e-03],
         [9.0839e-01, 2.7098e-03, 2.0075e-03,  ..., 9.3458e-01,
          7.0253e-02, 9.7075e-01],
         [3.2007e-02, 9.9187e-01, 9.9398e-01,  ..., 2.1807e-02,
          7.8924e-01, 9.7486e-03]],
        [[5.4193e-04, 4.8674e-04, 1.5426e-02,  ..., 1.3535e-02,
          9.9115e-01, 4.6175e-02],
         [5.4193e-04, 4.8674e-04, 1.5426e-02,  ..., 1.3535e-02,
          2.9507e-03, 4.6175e-02],
         [9.9837e-01, 4.8674e-04, 1.5426e-02,  ..., 1.3535e-02,
          2.9507e-03, 8.5432e-01],
         [5.4193e-04, 9.9854e-01, 9.5372e-01,  ..., 9.5939e-01,
          2.9507e-03, 5.3332e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9776, 0.0961, 0.0063,  ..., 0.0147, 0.0116, 0.9766],
         [0.0067, 0.0961, 0.0063,  ..., 0.0147, 0.0116, 0.0078],
         [0.0091, 0.1067, 0.0063,  ..., 0.9558, 0.9653, 0.0078],
         [0.0067, 0.7011, 0.9810,  ..., 0.0147, 0.0116, 0.0078]],
        [[0.9169, 0.0418, 0.0394,  ..., 0.0171, 0.2046, 0.0141],
         [0.0277, 0.0418, 0.0394,  ..., 0.0171, 0.2046, 0.0141],
         [0.0277, 0.0418, 0.0394,  ..., 0.9487, 0.2338, 0.9576],
         [0.0277, 0.8747, 0.8819,  ..., 0.0171, 0.3569, 0.0141]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4608e-02, 1.5743e-02, 6.0938e-03,  ..., 1.7921e-02,
          6.7852e-02, 1.6443e-02],
         [3.4608e-02, 1.5743e-02, 6.0938e-03,  ..., 1.7921e-02,
          6.7852e-02, 1.6443e-02],
         [8.9618e-01, 1.5743e-02, 6.0938e-03,  ..., 9.4624e-01,
          6.7852e-02, 9.5067e-01],
         [3.4608e-02, 9.5277e-01, 9.8172e-01,  ..., 1.7921e-02,
          7.9645e-01, 1.6443e-02]],
        [[2.6046e-03, 4.5589e-04, 6.6156e-06,  ..., 2.9214e-03,
          9.7101e-01, 2.4769e-02],
         [2.6046e-03, 4.5589e-04, 6.6156e-06,  ..., 2.9214e-03,
          9.6634e-03, 2.4769e-02],
         [9.9219e-01, 4.5589e-04, 6.6156e-06,  ..., 2.9214e-03,
          9.6634e-03, 9.2569e-01],
         [2.6046e-03, 9.9863e-01, 9.9998e-01,  ..., 9.9124e-01,
          9.6634e-03, 2.4769e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 15:14:51,471 [Process: 0] Synchronize training processes
2024-08-18 15:14:51,471 [Process: 0] Evaluating...
2024-08-18 15:14:51,473 [Process: 0] EPOCH 123:
2024-08-18 15:14:51,475 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:52,638 [Process: 0] Synchronize training processes
2024-08-18 15:14:52,639 [Process: 0] Evaluating...
2024-08-18 15:14:52,640 [Process: 0] EPOCH 124:
2024-08-18 15:14:52,642 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.1159e-01, 1.0838e-02, 1.6249e-02,  ..., 9.9477e-04,
          1.0642e-02, 9.9458e-01],
         [2.9469e-02, 1.0838e-02, 1.6249e-02,  ..., 9.9477e-04,
          1.0642e-02, 1.8052e-03],
         [2.9469e-02, 1.0838e-02, 1.6249e-02,  ..., 9.9702e-01,
          9.6808e-01, 1.8052e-03],
         [2.9469e-02, 9.6749e-01, 9.5125e-01,  ..., 9.9477e-04,
          1.0642e-02, 1.8052e-03]],
        [[9.4848e-01, 4.6368e-02, 7.2320e-02,  ..., 8.8671e-04,
          1.5092e-01, 3.0425e-03],
         [1.7173e-02, 4.6368e-02, 4.7220e-02,  ..., 8.8671e-04,
          1.5092e-01, 3.0425e-03],
         [1.7173e-02, 4.6368e-02, 5.5351e-02,  ..., 9.9734e-01,
          4.7651e-01, 9.9087e-01],
         [1.7173e-02, 8.6090e-01, 8.2511e-01,  ..., 8.8671e-04,
          2.2165e-01, 3.0425e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1473e-02, 2.4519e-03, 3.6966e-03,  ..., 1.9230e-02,
          1.0382e-01, 1.5680e-02],
         [4.1473e-02, 2.4519e-03, 3.6966e-03,  ..., 1.9230e-02,
          1.0382e-01, 1.5680e-02],
         [8.7461e-01, 2.4519e-03, 3.6966e-03,  ..., 9.4231e-01,
          1.0382e-01, 9.5296e-01],
         [4.2449e-02, 9.9264e-01, 9.8891e-01,  ..., 1.9230e-02,
          6.8854e-01, 1.5680e-02]],
        [[1.3128e-03, 1.4944e-03, 2.1645e-04,  ..., 2.8208e-03,
          9.7990e-01, 2.3968e-02],
         [1.3128e-03, 1.4944e-03, 2.1645e-04,  ..., 2.8208e-03,
          6.7005e-03, 2.3640e-02],
         [9.9606e-01, 1.4944e-03, 2.1645e-04,  ..., 2.8208e-03,
          6.7005e-03, 9.2853e-01],
         [1.3128e-03, 9.9552e-01, 9.9935e-01,  ..., 9.9154e-01,
          6.7005e-03, 2.3864e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9607, 0.0233, 0.0082,  ..., 0.0031, 0.0059, 0.9851],
         [0.0131, 0.0233, 0.0082,  ..., 0.0031, 0.0059, 0.0050],
         [0.0131, 0.0233, 0.0082,  ..., 0.9908, 0.9824, 0.0050],
         [0.0131, 0.9300, 0.9754,  ..., 0.0031, 0.0059, 0.0050]],
        [[0.9690, 0.0213, 0.0148,  ..., 0.0031, 0.1751, 0.0049],
         [0.0098, 0.0213, 0.0148,  ..., 0.0031, 0.1751, 0.0049],
         [0.0115, 0.0213, 0.0148,  ..., 0.9908, 0.1751, 0.9854],
         [0.0098, 0.9360, 0.9557,  ..., 0.0031, 0.4746, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:53,775 [Process: 0] Synchronize training processes
2024-08-18 15:14:53,775 [Process: 0] Evaluating...
2024-08-18 15:14:53,777 [Process: 0] EPOCH 125:
2024-08-18 15:14:53,779 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1417e-02, 2.7342e-03, 2.1339e-03,  ..., 4.6776e-02,
          4.0765e-02, 3.1846e-03],
         [1.1417e-02, 2.7342e-03, 2.1339e-03,  ..., 4.4893e-02,
          4.0765e-02, 3.1846e-03],
         [9.6575e-01, 2.7342e-03, 2.1339e-03,  ..., 8.5176e-01,
          4.0765e-02, 9.9045e-01],
         [1.1417e-02, 9.9180e-01, 9.9360e-01,  ..., 5.6570e-02,
          8.7770e-01, 3.1846e-03]],
        [[1.0444e-03, 3.5682e-03, 1.2358e-04,  ..., 6.9374e-04,
          9.6737e-01, 1.4737e-02],
         [1.0444e-03, 3.5682e-03, 1.2358e-04,  ..., 6.9374e-04,
          1.0876e-02, 1.4737e-02],
         [9.9687e-01, 3.5682e-03, 1.2358e-04,  ..., 6.9374e-04,
          1.0876e-02, 9.5579e-01],
         [1.0444e-03, 9.8930e-01, 9.9963e-01,  ..., 9.9792e-01,
          1.0876e-02, 1.4737e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9813, 0.0526, 0.0048,  ..., 0.0010, 0.0367, 0.9854],
         [0.0062, 0.0526, 0.0048,  ..., 0.0010, 0.0367, 0.0049],
         [0.0062, 0.0526, 0.0048,  ..., 0.9970, 0.8894, 0.0049],
         [0.0062, 0.8423, 0.9857,  ..., 0.0010, 0.0372, 0.0049]],
        [[0.9296, 0.0286, 0.0188,  ..., 0.0090, 0.1588, 0.0058],
         [0.0235, 0.0286, 0.0189,  ..., 0.0090, 0.1588, 0.0058],
         [0.0235, 0.0286, 0.0188,  ..., 0.9730, 0.1588, 0.9826],
         [0.0235, 0.9142, 0.9435,  ..., 0.0090, 0.5236, 0.0058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4756e-02, 7.8762e-03, 5.7428e-04,  ..., 1.2368e-02,
          3.4478e-02, 2.3595e-02],
         [1.4756e-02, 7.8762e-03, 5.7428e-04,  ..., 1.2368e-02,
          3.4478e-02, 2.3595e-02],
         [9.5573e-01, 7.8762e-03, 5.7428e-04,  ..., 9.6289e-01,
          3.4478e-02, 9.2922e-01],
         [1.4756e-02, 9.7637e-01, 9.9828e-01,  ..., 1.2368e-02,
          8.9657e-01, 2.3595e-02]],
        [[5.5737e-03, 2.3091e-03, 3.1874e-03,  ..., 1.1354e-03,
          9.9719e-01, 5.3904e-02],
         [5.5737e-03, 2.3091e-03, 2.7119e-03,  ..., 1.1354e-03,
          9.3748e-04, 4.8003e-02],
         [9.8328e-01, 2.3091e-03, 2.7119e-03,  ..., 1.1354e-03,
          9.3748e-04, 8.4228e-01],
         [5.5737e-03, 9.9307e-01, 9.9139e-01,  ..., 9.9659e-01,
          9.3748e-04, 5.5817e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9799, 0.0244, 0.0264,  ..., 0.0039, 0.0127, 0.7083],
         [0.0067, 0.0244, 0.0264,  ..., 0.0039, 0.0127, 0.0807],
         [0.0067, 0.0244, 0.0264,  ..., 0.9883, 0.9620, 0.0917],
         [0.0067, 0.9268, 0.9208,  ..., 0.0039, 0.0127, 0.1194]],
        [[0.9309, 0.0162, 0.0046,  ..., 0.0040, 0.1350, 0.0031],
         [0.0230, 0.0162, 0.0046,  ..., 0.0040, 0.1350, 0.0031],
         [0.0230, 0.0162, 0.0046,  ..., 0.9879, 0.1350, 0.9906],
         [0.0230, 0.9514, 0.9862,  ..., 0.0040, 0.5949, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:14:54,912 [Process: 0] Synchronize training processes
2024-08-18 15:14:54,913 [Process: 0] Evaluating...
2024-08-18 15:14:54,914 [Process: 0] EPOCH 126:
2024-08-18 15:14:54,916 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:56,051 [Process: 0] Synchronize training processes
2024-08-18 15:14:56,051 [Process: 0] Evaluating...
2024-08-18 15:14:56,053 [Process: 0] EPOCH 127:
2024-08-18 15:14:56,056 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4655e-03, 7.8879e-04, 1.0477e-03,  ..., 2.2922e-02,
          1.8472e-02, 3.0199e-02],
         [9.4655e-03, 7.8879e-04, 1.0477e-03,  ..., 2.2922e-02,
          1.8472e-02, 3.0199e-02],
         [9.7160e-01, 7.8879e-04, 1.0477e-03,  ..., 9.3123e-01,
          1.8472e-02, 9.0940e-01],
         [9.4655e-03, 9.9763e-01, 9.9686e-01,  ..., 2.2922e-02,
          9.4458e-01, 3.0199e-02]],
        [[3.1170e-03, 6.1799e-03, 8.9272e-05,  ..., 1.5212e-03,
          9.7705e-01, 1.8460e-02],
         [3.1170e-03, 6.1799e-03, 8.9272e-05,  ..., 1.5212e-03,
          7.6489e-03, 1.8460e-02],
         [9.9065e-01, 6.1799e-03, 8.9272e-05,  ..., 1.5212e-03,
          7.6489e-03, 9.4462e-01],
         [3.1170e-03, 9.8146e-01, 9.9973e-01,  ..., 9.9544e-01,
          7.6489e-03, 1.8460e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9457e-01, 3.4936e-02, 3.4181e-02,  ..., 8.8793e-04,
          1.3199e-02, 9.9585e-01],
         [1.8098e-03, 3.4936e-02, 3.4181e-02,  ..., 8.8793e-04,
          1.3199e-02, 1.3823e-03],
         [1.8098e-03, 3.4936e-02, 3.4181e-02,  ..., 9.9734e-01,
          9.6040e-01, 1.3823e-03],
         [1.8098e-03, 8.9519e-01, 8.9746e-01,  ..., 8.8793e-04,
          1.3199e-02, 1.3823e-03]],
        [[7.9165e-01, 2.6512e-02, 2.8042e-02,  ..., 6.1123e-03,
          1.5950e-01, 6.8878e-03],
         [6.9449e-02, 2.6512e-02, 2.8042e-02,  ..., 6.1123e-03,
          1.4599e-01, 5.9736e-03],
         [6.9449e-02, 2.6512e-02, 2.8042e-02,  ..., 9.8166e-01,
          1.5343e-01, 9.8117e-01],
         [6.9449e-02, 9.2046e-01, 9.1587e-01,  ..., 6.1123e-03,
          5.4108e-01, 5.9736e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3930e-02, 7.1693e-04, 3.5327e-03,  ..., 4.8396e-02,
          2.8813e-02, 1.5067e-02],
         [1.3930e-02, 7.1693e-04, 3.5327e-03,  ..., 4.6525e-02,
          2.8813e-02, 1.5067e-02],
         [9.5821e-01, 7.1693e-04, 3.5327e-03,  ..., 8.5813e-01,
          2.8813e-02, 9.5480e-01],
         [1.3930e-02, 9.9785e-01, 9.8940e-01,  ..., 4.6945e-02,
          9.1356e-01, 1.5067e-02]],
        [[8.9600e-03, 5.1410e-03, 9.2285e-07,  ..., 2.4006e-03,
          9.8982e-01, 4.5015e-02],
         [8.9600e-03, 5.1410e-03, 9.2285e-07,  ..., 2.4006e-03,
          3.3936e-03, 4.5015e-02],
         [9.7312e-01, 5.1410e-03, 9.2285e-07,  ..., 2.4006e-03,
          3.3936e-03, 8.5093e-01],
         [8.9600e-03, 9.8458e-01, 1.0000e+00,  ..., 9.9280e-01,
          3.3936e-03, 5.9037e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:57,191 [Process: 0] Synchronize training processes
2024-08-18 15:14:57,191 [Process: 0] Evaluating...
2024-08-18 15:14:57,193 [Process: 0] EPOCH 128:
2024-08-18 15:14:57,195 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:58,329 [Process: 0] Synchronize training processes
2024-08-18 15:14:58,329 [Process: 0] Evaluating...
2024-08-18 15:14:58,331 [Process: 0] EPOCH 129:
2024-08-18 15:14:58,333 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9730, 0.0443, 0.0469,  ..., 0.0206, 0.0228, 0.9954],
         [0.0090, 0.0442, 0.0469,  ..., 0.0206, 0.0228, 0.0015],
         [0.0090, 0.0615, 0.0469,  ..., 0.9381, 0.9316, 0.0015],
         [0.0090, 0.8501, 0.8592,  ..., 0.0206, 0.0228, 0.0015]],
        [[0.6344, 0.0174, 0.0121,  ..., 0.0053, 0.1792, 0.0029],
         [0.1219, 0.0174, 0.0121,  ..., 0.0053, 0.1792, 0.0029],
         [0.1219, 0.0174, 0.0121,  ..., 0.9840, 0.1792, 0.9912],
         [0.1219, 0.9479, 0.9636,  ..., 0.0053, 0.4623, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2902e-02, 7.5691e-03, 6.9333e-04,  ..., 3.4568e-02,
          3.6669e-02, 6.0295e-02],
         [2.2902e-02, 7.5691e-03, 6.9333e-04,  ..., 3.4568e-02,
          3.6669e-02, 5.0299e-02],
         [9.3099e-01, 7.5691e-03, 6.9333e-04,  ..., 8.9517e-01,
          3.6669e-02, 8.3404e-01],
         [2.3209e-02, 9.7729e-01, 9.9792e-01,  ..., 3.5692e-02,
          8.8999e-01, 5.5363e-02]],
        [[1.4369e-02, 6.9733e-03, 3.8373e-03,  ..., 2.8949e-03,
          9.9263e-01, 6.2436e-02],
         [1.4369e-02, 6.9733e-03, 3.8373e-03,  ..., 2.8949e-03,
          2.4562e-03, 6.2436e-02],
         [9.5689e-01, 6.9733e-03, 3.8373e-03,  ..., 2.8949e-03,
          2.4562e-03, 7.9165e-01],
         [1.4369e-02, 9.7908e-01, 9.8849e-01,  ..., 9.9132e-01,
          2.4562e-03, 8.3475e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9739, 0.0133, 0.0509,  ..., 0.0058, 0.0106, 0.9627],
         [0.0087, 0.0133, 0.0509,  ..., 0.0058, 0.0106, 0.0124],
         [0.0087, 0.0133, 0.0509,  ..., 0.9825, 0.9682, 0.0124],
         [0.0087, 0.9602, 0.8473,  ..., 0.0058, 0.0106, 0.0124]],
        [[0.8772, 0.0067, 0.0176,  ..., 0.0014, 0.1335, 0.0111],
         [0.0409, 0.0067, 0.0176,  ..., 0.0014, 0.1189, 0.0111],
         [0.0409, 0.0067, 0.0176,  ..., 0.9958, 0.1305, 0.9668],
         [0.0409, 0.9799, 0.9473,  ..., 0.0014, 0.6171, 0.0111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0047, 0.0015, 0.0068,  ..., 0.0539, 0.0082, 0.0160],
         [0.0047, 0.0015, 0.0068,  ..., 0.0539, 0.0082, 0.0160],
         [0.9858, 0.0015, 0.0068,  ..., 0.8380, 0.0082, 0.9520],
         [0.0047, 0.9954, 0.9795,  ..., 0.0542, 0.9755, 0.0160]],
        [[0.0063, 0.0247, 0.0039,  ..., 0.0148, 0.9600, 0.0233],
         [0.0063, 0.0247, 0.0039,  ..., 0.0111, 0.0133, 0.0233],
         [0.9810, 0.0247, 0.0039,  ..., 0.0111, 0.0133, 0.9300],
         [0.0063, 0.9258, 0.9884,  ..., 0.9629, 0.0133, 0.0233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:14:59,467 [Process: 0] Synchronize training processes
2024-08-18 15:14:59,468 [Process: 0] Evaluating...
2024-08-18 15:14:59,469 [Process: 0] EPOCH 130:
2024-08-18 15:14:59,471 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:00,603 [Process: 0] Synchronize training processes
2024-08-18 15:15:00,603 [Process: 0] Evaluating...
2024-08-18 15:15:00,605 [Process: 0] EPOCH 131:
2024-08-18 15:15:00,608 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9684, 0.0135, 0.0374,  ..., 0.0074, 0.0256, 0.9807],
         [0.0102, 0.0135, 0.0374,  ..., 0.0074, 0.0256, 0.0060],
         [0.0113, 0.0135, 0.0374,  ..., 0.9779, 0.9233, 0.0074],
         [0.0102, 0.9594, 0.8878,  ..., 0.0074, 0.0256, 0.0060]],
        [[0.9264, 0.0065, 0.0703,  ..., 0.0038, 0.1441, 0.0065],
         [0.0253, 0.0065, 0.0703,  ..., 0.0035, 0.1441, 0.0065],
         [0.0241, 0.0065, 0.0820,  ..., 0.9893, 0.2016, 0.9805],
         [0.0241, 0.9804, 0.7773,  ..., 0.0035, 0.5103, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0081, 0.0029, 0.0015,  ..., 0.0154, 0.0017, 0.0091],
         [0.0081, 0.0028, 0.0015,  ..., 0.0154, 0.0017, 0.0091],
         [0.9757, 0.0026, 0.0015,  ..., 0.9539, 0.0017, 0.9728],
         [0.0081, 0.9918, 0.9955,  ..., 0.0154, 0.9950, 0.0091]],
        [[0.0035, 0.0056, 0.0134,  ..., 0.0130, 0.9265, 0.0398],
         [0.0035, 0.0056, 0.0134,  ..., 0.0130, 0.0245, 0.0409],
         [0.9896, 0.0056, 0.0134,  ..., 0.0130, 0.0245, 0.8779],
         [0.0035, 0.9833, 0.9599,  ..., 0.9609, 0.0245, 0.0413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9838, 0.0674, 0.0126,  ..., 0.0042, 0.0098, 0.9952],
         [0.0054, 0.0674, 0.0126,  ..., 0.0042, 0.0098, 0.0016],
         [0.0054, 0.0674, 0.0126,  ..., 0.9875, 0.9707, 0.0016],
         [0.0054, 0.7978, 0.9621,  ..., 0.0042, 0.0098, 0.0016]],
        [[0.9645, 0.0229, 0.0288,  ..., 0.0031, 0.1231, 0.0042],
         [0.0118, 0.0229, 0.0256,  ..., 0.0031, 0.1231, 0.0042],
         [0.0118, 0.0229, 0.0256,  ..., 0.9908, 0.1796, 0.9874],
         [0.0118, 0.9314, 0.9200,  ..., 0.0031, 0.5743, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:01,746 [Process: 0] Synchronize training processes
2024-08-18 15:15:01,746 [Process: 0] Evaluating...
2024-08-18 15:15:01,750 [Process: 0] EPOCH 132:
2024-08-18 15:15:01,752 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0129, 0.0070, 0.0093,  ..., 0.0178, 0.0070, 0.0198],
         [0.0129, 0.0070, 0.0093,  ..., 0.0178, 0.0070, 0.0210],
         [0.9614, 0.0070, 0.0093,  ..., 0.9465, 0.0070, 0.9394],
         [0.0129, 0.9791, 0.9720,  ..., 0.0178, 0.9790, 0.0198]],
        [[0.0060, 0.0014, 0.0011,  ..., 0.0017, 0.6914, 0.0315],
         [0.0060, 0.0014, 0.0011,  ..., 0.0017, 0.1005, 0.0315],
         [0.9821, 0.0014, 0.0011,  ..., 0.0017, 0.1005, 0.8963],
         [0.0060, 0.9957, 0.9967,  ..., 0.9948, 0.1076, 0.0408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9888, 0.0109, 0.0330,  ..., 0.0049, 0.0090, 0.9730],
         [0.0037, 0.0109, 0.0330,  ..., 0.0049, 0.0090, 0.0090],
         [0.0037, 0.0109, 0.0330,  ..., 0.9854, 0.9730, 0.0090],
         [0.0037, 0.9674, 0.9009,  ..., 0.0049, 0.0090, 0.0090]],
        [[0.9967, 0.0096, 0.0088,  ..., 0.0100, 0.0184, 0.0055],
         [0.0011, 0.0096, 0.0088,  ..., 0.0100, 0.0184, 0.0055],
         [0.0011, 0.0096, 0.0088,  ..., 0.9700, 0.9448, 0.9836],
         [0.0011, 0.9712, 0.9735,  ..., 0.0100, 0.0184, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9516e-02, 1.0083e-02, 2.8383e-03,  ..., 1.7505e-02,
          8.2638e-03, 4.3265e-03],
         [1.9516e-02, 1.0083e-02, 2.8383e-03,  ..., 1.7505e-02,
          7.0621e-03, 4.3265e-03],
         [9.4145e-01, 1.0083e-02, 2.8383e-03,  ..., 9.4749e-01,
          7.0621e-03, 9.8702e-01],
         [1.9516e-02, 9.6975e-01, 9.9149e-01,  ..., 1.7505e-02,
          9.7761e-01, 4.3265e-03]],
        [[1.3266e-02, 3.5897e-04, 2.4468e-04,  ..., 5.0327e-03,
          5.1440e-01, 2.0930e-02],
         [1.3266e-02, 3.0475e-04, 2.4468e-04,  ..., 5.0327e-03,
          1.6187e-01, 2.0930e-02],
         [9.6020e-01, 3.0475e-04, 2.4468e-04,  ..., 5.0327e-03,
          1.6187e-01, 9.3721e-01],
         [1.3266e-02, 9.9903e-01, 9.9927e-01,  ..., 9.8490e-01,
          1.6187e-01, 2.0930e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9760, 0.0243, 0.0548,  ..., 0.0032, 0.0119, 0.9570],
         [0.0088, 0.0243, 0.0329,  ..., 0.0032, 0.0119, 0.0143],
         [0.0076, 0.0243, 0.0377,  ..., 0.9903, 0.9642, 0.0143],
         [0.0076, 0.9272, 0.8746,  ..., 0.0032, 0.0119, 0.0143]],
        [[0.9960, 0.0117, 0.0129,  ..., 0.0026, 0.2352, 0.0073],
         [0.0013, 0.0117, 0.0129,  ..., 0.0026, 0.2249, 0.0078],
         [0.0013, 0.0117, 0.0129,  ..., 0.9922, 0.2249, 0.9775],
         [0.0013, 0.9648, 0.9613,  ..., 0.0026, 0.3151, 0.0073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:02,886 [Process: 0] Synchronize training processes
2024-08-18 15:15:02,886 [Process: 0] Evaluating...
2024-08-18 15:15:02,888 [Process: 0] EPOCH 133:
2024-08-18 15:15:02,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:04,058 [Process: 0] Synchronize training processes
2024-08-18 15:15:04,058 [Process: 0] Evaluating...
2024-08-18 15:15:04,060 [Process: 0] EPOCH 134:
2024-08-18 15:15:04,062 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9413e-02, 8.8833e-03, 3.9263e-03,  ..., 1.1135e-01,
          4.1077e-03, 1.4925e-02],
         [1.9413e-02, 8.8833e-03, 3.9263e-03,  ..., 1.1135e-01,
          4.1077e-03, 1.4925e-02],
         [9.4176e-01, 8.8833e-03, 3.9263e-03,  ..., 6.0660e-01,
          4.1077e-03, 9.5522e-01],
         [1.9413e-02, 9.7335e-01, 9.8822e-01,  ..., 1.7071e-01,
          9.8768e-01, 1.4925e-02]],
        [[4.4749e-03, 7.9362e-03, 1.1410e-05,  ..., 6.0403e-03,
          9.4520e-01, 1.8107e-02],
         [4.4749e-03, 7.9362e-03, 1.1410e-05,  ..., 2.8401e-03,
          1.8268e-02, 1.8107e-02],
         [9.8658e-01, 7.9362e-03, 1.1410e-05,  ..., 2.8401e-03,
          1.8268e-02, 9.4568e-01],
         [4.4749e-03, 9.7619e-01, 9.9997e-01,  ..., 9.8828e-01,
          1.8268e-02, 1.8107e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9809, 0.0148, 0.0769,  ..., 0.0022, 0.0107, 0.9846],
         [0.0064, 0.0148, 0.0769,  ..., 0.0022, 0.0107, 0.0051],
         [0.0064, 0.0148, 0.0769,  ..., 0.9934, 0.9680, 0.0051],
         [0.0064, 0.9556, 0.7692,  ..., 0.0022, 0.0107, 0.0051]],
        [[0.9606, 0.0227, 0.0219,  ..., 0.0023, 0.1747, 0.0031],
         [0.0131, 0.0227, 0.0219,  ..., 0.0023, 0.1747, 0.0031],
         [0.0131, 0.0227, 0.0219,  ..., 0.9931, 0.3447, 0.9906],
         [0.0131, 0.9318, 0.9344,  ..., 0.0023, 0.3059, 0.0031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8316e-02, 1.5428e-03, 5.6157e-03,  ..., 3.2600e-02,
          5.0962e-03, 2.2938e-02],
         [1.7717e-02, 1.5428e-03, 5.6157e-03,  ..., 3.2600e-02,
          4.6241e-03, 2.2938e-02],
         [9.4625e-01, 1.5428e-03, 5.6157e-03,  ..., 9.0144e-01,
          4.6241e-03, 9.3119e-01],
         [1.7717e-02, 9.9537e-01, 9.8315e-01,  ..., 3.3363e-02,
          9.8566e-01, 2.2938e-02]],
        [[8.7165e-03, 2.4989e-03, 8.3176e-04,  ..., 5.9619e-03,
          9.6379e-01, 3.5128e-02],
         [8.7165e-03, 2.4989e-03, 8.3176e-04,  ..., 5.9619e-03,
          1.2069e-02, 3.5128e-02],
         [9.7385e-01, 2.4989e-03, 8.3176e-04,  ..., 5.9619e-03,
          1.2069e-02, 8.8046e-01],
         [8.7165e-03, 9.9250e-01, 9.9750e-01,  ..., 9.8211e-01,
          1.2069e-02, 4.9279e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 15:15:05,188 [Process: 0] Synchronize training processes
2024-08-18 15:15:05,188 [Process: 0] Evaluating...
2024-08-18 15:15:05,190 [Process: 0] EPOCH 135:
2024-08-18 15:15:05,192 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:06,318 [Process: 0] Synchronize training processes
2024-08-18 15:15:06,319 [Process: 0] Evaluating...
2024-08-18 15:15:06,321 [Process: 0] EPOCH 136:
2024-08-18 15:15:06,322 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7894e-01, 1.8907e-02, 2.5178e-02,  ..., 3.5685e-03,
          4.0846e-03, 9.9786e-01],
         [7.0210e-03, 1.8907e-02, 2.2654e-02,  ..., 3.5685e-03,
          4.0846e-03, 7.1326e-04],
         [7.0210e-03, 1.8907e-02, 2.8774e-02,  ..., 9.8929e-01,
          9.8775e-01, 7.1326e-04],
         [7.0210e-03, 9.4328e-01, 9.2339e-01,  ..., 3.5685e-03,
          4.0846e-03, 7.1326e-04]],
        [[6.5820e-01, 4.6036e-02, 5.0811e-02,  ..., 8.3486e-03,
          2.2468e-01, 4.9646e-02],
         [1.1393e-01, 4.6036e-02, 5.0811e-02,  ..., 8.3486e-03,
          2.2468e-01, 4.9646e-02],
         [1.1393e-01, 4.6036e-02, 5.0811e-02,  ..., 9.7495e-01,
          2.2468e-01, 8.1629e-01],
         [1.1393e-01, 8.6189e-01, 8.4757e-01,  ..., 8.3486e-03,
          3.2597e-01, 8.4420e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9787e-02, 1.1470e-02, 4.9523e-03,  ..., 1.4908e-02,
          5.0699e-02, 1.5924e-02],
         [1.9693e-02, 1.1470e-02, 4.9523e-03,  ..., 1.4908e-02,
          5.0699e-02, 1.5924e-02],
         [9.4083e-01, 1.1470e-02, 4.9523e-03,  ..., 9.5528e-01,
          5.0699e-02, 9.5223e-01],
         [1.9693e-02, 9.6559e-01, 9.8514e-01,  ..., 1.4908e-02,
          8.4790e-01, 1.5924e-02]],
        [[1.1166e-02, 4.3281e-03, 7.5471e-05,  ..., 4.3127e-03,
          9.9603e-01, 2.1561e-02],
         [1.1166e-02, 4.4802e-03, 7.5471e-05,  ..., 2.6906e-03,
          1.3225e-03, 2.1561e-02],
         [9.6650e-01, 4.3281e-03, 7.5471e-05,  ..., 2.6676e-03,
          1.3225e-03, 9.3291e-01],
         [1.1166e-02, 9.8686e-01, 9.9977e-01,  ..., 9.9033e-01,
          1.3225e-03, 2.3972e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9484, 0.0312, 0.0026,  ..., 0.0797, 0.0144, 0.9909],
         [0.0172, 0.0261, 0.0026,  ..., 0.0797, 0.0144, 0.0030],
         [0.0172, 0.0261, 0.0026,  ..., 0.5632, 0.9567, 0.0030],
         [0.0172, 0.9166, 0.9923,  ..., 0.2774, 0.0144, 0.0030]],
        [[0.3750, 0.0550, 0.0180,  ..., 0.0022, 0.1593, 0.0014],
         [0.1670, 0.0550, 0.0180,  ..., 0.0022, 0.1593, 0.0014],
         [0.2253, 0.0550, 0.0180,  ..., 0.9933, 0.1889, 0.9958],
         [0.2327, 0.8350, 0.9461,  ..., 0.0022, 0.4925, 0.0014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5534e-02, 3.1767e-03, 7.8136e-04,  ..., 9.7578e-03,
          3.6713e-02, 1.6880e-02],
         [2.5534e-02, 3.1767e-03, 7.8136e-04,  ..., 9.7578e-03,
          3.6713e-02, 1.6880e-02],
         [9.2340e-01, 3.1767e-03, 7.8136e-04,  ..., 9.7073e-01,
          3.6713e-02, 9.4936e-01],
         [2.5534e-02, 9.9047e-01, 9.9766e-01,  ..., 9.7578e-03,
          8.8986e-01, 1.6880e-02]],
        [[5.1775e-03, 1.6518e-03, 6.0641e-04,  ..., 4.9480e-04,
          9.8855e-01, 3.9455e-02],
         [5.1775e-03, 1.6518e-03, 6.0641e-04,  ..., 4.9480e-04,
          3.8175e-03, 3.6514e-02],
         [9.8447e-01, 1.6518e-03, 6.0641e-04,  ..., 4.9480e-04,
          3.8175e-03, 8.7862e-01],
         [5.1775e-03, 9.9504e-01, 9.9818e-01,  ..., 9.9852e-01,
          3.8175e-03, 4.5414e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:07,461 [Process: 0] Synchronize training processes
2024-08-18 15:15:07,461 [Process: 0] Evaluating...
2024-08-18 15:15:07,463 [Process: 0] EPOCH 137:
2024-08-18 15:15:07,465 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:08,602 [Process: 0] Synchronize training processes
2024-08-18 15:15:08,602 [Process: 0] Evaluating...
2024-08-18 15:15:08,604 [Process: 0] EPOCH 138:
2024-08-18 15:15:08,605 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9809, 0.0059, 0.0170,  ..., 0.0034, 0.1128, 0.9917],
         [0.0064, 0.0052, 0.0170,  ..., 0.0034, 0.1128, 0.0030],
         [0.0064, 0.0052, 0.0170,  ..., 0.9897, 0.6070, 0.0027],
         [0.0064, 0.9837, 0.9489,  ..., 0.0034, 0.1675, 0.0027]],
        [[0.3770, 0.0220, 0.0089,  ..., 0.0071, 0.1556, 0.0018],
         [0.1281, 0.0220, 0.0062,  ..., 0.0071, 0.1556, 0.0018],
         [0.2408, 0.0220, 0.0062,  ..., 0.9788, 0.1580, 0.9946],
         [0.2542, 0.9340, 0.9786,  ..., 0.0071, 0.5308, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4571e-03, 9.5789e-04, 5.4754e-04,  ..., 1.5384e-02,
          1.4851e-03, 1.1616e-02],
         [9.4571e-03, 9.5789e-04, 5.4754e-04,  ..., 1.5384e-02,
          1.4851e-03, 1.1616e-02],
         [9.7163e-01, 9.5789e-04, 5.4754e-04,  ..., 9.5385e-01,
          1.4851e-03, 9.6515e-01],
         [9.4571e-03, 9.9713e-01, 9.9836e-01,  ..., 1.5384e-02,
          9.9554e-01, 1.1616e-02]],
        [[1.6048e-02, 2.1760e-04, 3.0424e-04,  ..., 1.5786e-03,
          9.8743e-01, 1.0384e-02],
         [1.6048e-02, 2.1760e-04, 3.0424e-04,  ..., 1.5786e-03,
          4.1903e-03, 1.0384e-02],
         [9.5186e-01, 2.1760e-04, 3.0424e-04,  ..., 1.5786e-03,
          4.1903e-03, 9.6885e-01],
         [1.6048e-02, 9.9935e-01, 9.9909e-01,  ..., 9.9526e-01,
          4.1903e-03, 1.0384e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9834, 0.0230, 0.0180,  ..., 0.0029, 0.8635, 0.9634],
         [0.0055, 0.0230, 0.0180,  ..., 0.0029, 0.0371, 0.0122],
         [0.0055, 0.0230, 0.0180,  ..., 0.9914, 0.0623, 0.0122],
         [0.0055, 0.9311, 0.9461,  ..., 0.0029, 0.0371, 0.0122]],
        [[0.8003, 0.0096, 0.0170,  ..., 0.0049, 0.1613, 0.0069],
         [0.0666, 0.0096, 0.0170,  ..., 0.0049, 0.1613, 0.0069],
         [0.0666, 0.0096, 0.0170,  ..., 0.9852, 0.1848, 0.9793],
         [0.0666, 0.9711, 0.9490,  ..., 0.0049, 0.4927, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:15:09,741 [Process: 0] Synchronize training processes
2024-08-18 15:15:09,742 [Process: 0] Evaluating...
2024-08-18 15:15:09,744 [Process: 0] EPOCH 139:
2024-08-18 15:15:09,745 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9771e-02, 3.2775e-04, 1.4005e-03,  ..., 1.8617e-02,
          3.0466e-03, 1.3632e-02],
         [2.9319e-02, 3.2775e-04, 1.3920e-03,  ..., 1.8617e-02,
          3.0466e-03, 1.3632e-02],
         [9.1159e-01, 3.2775e-04, 1.3920e-03,  ..., 9.4415e-01,
          3.0466e-03, 9.5910e-01],
         [2.9319e-02, 9.9902e-01, 9.9582e-01,  ..., 1.8617e-02,
          9.9086e-01, 1.3632e-02]],
        [[1.2113e-02, 1.8240e-03, 1.7803e-04,  ..., 5.7901e-03,
          9.9398e-01, 4.0926e-02],
         [1.2113e-02, 1.8240e-03, 1.7803e-04,  ..., 5.7901e-03,
          2.0079e-03, 3.9540e-02],
         [9.6366e-01, 1.8240e-03, 1.7803e-04,  ..., 5.7901e-03,
          2.0079e-03, 8.7418e-01],
         [1.2113e-02, 9.9453e-01, 9.9947e-01,  ..., 9.8263e-01,
          2.0079e-03, 4.5355e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9847, 0.0211, 0.0132,  ..., 0.0185, 0.0059, 0.9936],
         [0.0051, 0.0211, 0.0132,  ..., 0.0151, 0.0059, 0.0021],
         [0.0051, 0.0211, 0.0132,  ..., 0.9513, 0.9823, 0.0021],
         [0.0051, 0.9367, 0.9605,  ..., 0.0151, 0.0059, 0.0021]],
        [[0.9671, 0.0154, 0.0084,  ..., 0.0021, 0.1265, 0.0136],
         [0.0110, 0.0154, 0.0084,  ..., 0.0021, 0.1265, 0.0136],
         [0.0110, 0.0154, 0.0084,  ..., 0.9936, 0.2039, 0.9592],
         [0.0110, 0.9539, 0.9748,  ..., 0.0021, 0.5431, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1138e-02, 1.2748e-02, 5.2053e-03,  ..., 1.8448e-02,
          3.8107e-03, 3.2337e-02],
         [4.1138e-02, 1.2748e-02, 5.2053e-03,  ..., 1.8448e-02,
          3.8107e-03, 3.2337e-02],
         [8.7659e-01, 1.2748e-02, 5.2053e-03,  ..., 9.4466e-01,
          3.8107e-03, 9.0299e-01],
         [4.1138e-02, 9.6175e-01, 9.8438e-01,  ..., 1.8448e-02,
          9.8857e-01, 3.2337e-02]],
        [[2.8472e-03, 3.3053e-03, 3.0997e-04,  ..., 1.3496e-03,
          4.1246e-01, 2.1208e-02],
         [2.8472e-03, 3.3053e-03, 3.0997e-04,  ..., 1.3496e-03,
          1.9585e-01, 1.9639e-02],
         [9.9146e-01, 3.3053e-03, 3.0997e-04,  ..., 1.3496e-03,
          1.9585e-01, 9.3951e-01],
         [2.8472e-03, 9.9008e-01, 9.9907e-01,  ..., 9.9595e-01,
          1.9585e-01, 1.9639e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9651, 0.0208, 0.0090,  ..., 0.0026, 0.0149, 0.9894],
         [0.0116, 0.0208, 0.0090,  ..., 0.0026, 0.0149, 0.0035],
         [0.0116, 0.0219, 0.0090,  ..., 0.9923, 0.9554, 0.0035],
         [0.0116, 0.9366, 0.9730,  ..., 0.0026, 0.0149, 0.0035]],
        [[0.9592, 0.0131, 0.0104,  ..., 0.0047, 0.1916, 0.0044],
         [0.0136, 0.0131, 0.0104,  ..., 0.0047, 0.1916, 0.0044],
         [0.0136, 0.0131, 0.0119,  ..., 0.9860, 0.2960, 0.9869],
         [0.0136, 0.9608, 0.9674,  ..., 0.0047, 0.3207, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:10,877 [Process: 0] Synchronize training processes
2024-08-18 15:15:10,877 [Process: 0] Evaluating...
2024-08-18 15:15:10,879 [Process: 0] EPOCH 140:
2024-08-18 15:15:10,880 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:12,011 [Process: 0] Synchronize training processes
2024-08-18 15:15:12,012 [Process: 0] Evaluating...
2024-08-18 15:15:12,014 [Process: 0] EPOCH 141:
2024-08-18 15:15:12,015 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3919e-02, 9.8905e-01, 3.2414e-03,  ..., 2.1436e-02,
          3.2844e-03, 2.0632e-02],
         [2.3919e-02, 3.6494e-03, 3.2414e-03,  ..., 2.1436e-02,
          3.2844e-03, 1.8258e-02],
         [9.2824e-01, 3.6494e-03, 3.2414e-03,  ..., 9.3569e-01,
          3.2844e-03, 9.4285e-01],
         [2.3919e-02, 3.6494e-03, 9.9028e-01,  ..., 2.1436e-02,
          9.9015e-01, 1.8258e-02]],
        [[7.2067e-03, 3.5993e-04, 5.2545e-03,  ..., 7.6383e-05,
          8.0735e-01, 2.4782e-02],
         [7.2067e-03, 3.5993e-04, 5.2545e-03,  ..., 6.7864e-05,
          6.4217e-02, 2.4782e-02],
         [9.7838e-01, 3.5993e-04, 5.2545e-03,  ..., 6.7864e-05,
          6.4217e-02, 9.2566e-01],
         [7.2067e-03, 9.9892e-01, 9.8424e-01,  ..., 9.9979e-01,
          6.4217e-02, 2.4782e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7058e-01, 9.5448e-03, 3.9578e-03,  ..., 1.1221e-01,
          1.0575e-02, 9.9831e-01],
         [9.8062e-03, 6.3423e-03, 3.9578e-03,  ..., 1.1221e-01,
          1.0575e-02, 5.6400e-04],
         [9.8062e-03, 6.3423e-03, 3.9578e-03,  ..., 6.3056e-01,
          9.6828e-01, 5.6400e-04],
         [9.8062e-03, 9.7777e-01, 9.8813e-01,  ..., 1.4502e-01,
          1.0575e-02, 5.6400e-04]],
        [[9.7911e-01, 6.4366e-03, 2.5314e-02,  ..., 3.3189e-03,
          1.8603e-01, 1.1459e-02],
         [6.9624e-03, 6.4366e-03, 2.5314e-02,  ..., 3.3189e-03,
          1.8603e-01, 1.1459e-02],
         [6.9624e-03, 6.6149e-03, 2.7850e-02,  ..., 9.9004e-01,
          1.9970e-01, 9.6562e-01],
         [6.9624e-03, 9.8051e-01, 9.2152e-01,  ..., 3.3189e-03,
          4.2823e-01, 1.1459e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7082e-02, 3.5655e-02, 5.3209e-04,  ..., 1.2565e-02,
          2.6062e-02, 2.8450e-02],
         [1.7082e-02, 3.3370e-02, 5.3209e-04,  ..., 1.2565e-02,
          2.6062e-02, 2.1564e-02],
         [9.4875e-01, 3.3370e-02, 5.3209e-04,  ..., 9.6231e-01,
          2.6062e-02, 9.2842e-01],
         [1.7082e-02, 8.9761e-01, 9.9840e-01,  ..., 1.2565e-02,
          9.2181e-01, 2.1564e-02]],
        [[1.2810e-02, 2.5600e-03, 2.2426e-02,  ..., 8.6130e-04,
          8.5644e-01, 3.6090e-02],
         [1.2810e-02, 2.5600e-03, 2.2426e-02,  ..., 6.9303e-04,
          4.6117e-02, 3.4352e-02],
         [9.6157e-01, 2.5600e-03, 2.2426e-02,  ..., 6.9303e-04,
          4.6117e-02, 8.9521e-01],
         [1.2810e-02, 9.9232e-01, 9.3272e-01,  ..., 9.9775e-01,
          5.1324e-02, 3.4352e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9369, 0.0087, 0.0187,  ..., 0.1451, 0.0203, 0.9456],
         [0.0196, 0.0087, 0.0187,  ..., 0.1451, 0.0203, 0.0181],
         [0.0238, 0.0087, 0.0187,  ..., 0.3773, 0.9390, 0.0181],
         [0.0196, 0.9738, 0.9438,  ..., 0.3324, 0.0203, 0.0181]],
        [[0.9712, 0.0226, 0.0510,  ..., 0.0096, 0.0082, 0.0061],
         [0.0096, 0.0226, 0.0510,  ..., 0.0096, 0.0082, 0.0061],
         [0.0096, 0.0226, 0.0523,  ..., 0.9712, 0.9753, 0.9816],
         [0.0096, 0.9322, 0.8458,  ..., 0.0096, 0.0082, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:13,150 [Process: 0] Synchronize training processes
2024-08-18 15:15:13,151 [Process: 0] Evaluating...
2024-08-18 15:15:13,154 [Process: 0] EPOCH 142:
2024-08-18 15:15:13,156 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:14,289 [Process: 0] Synchronize training processes
2024-08-18 15:15:14,289 [Process: 0] Evaluating...
2024-08-18 15:15:14,291 [Process: 0] EPOCH 143:
2024-08-18 15:15:14,293 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3925e-02, 3.7886e-03, 7.4558e-03,  ..., 6.5825e-02,
          2.2526e-01, 3.3379e-01],
         [2.3925e-02, 3.7886e-03, 5.0029e-03,  ..., 6.3941e-02,
          2.2526e-01, 1.0085e-01],
         [9.2822e-01, 3.7886e-03, 5.0029e-03,  ..., 7.9867e-01,
          2.2526e-01, 4.6451e-01],
         [2.3925e-02, 9.8863e-01, 9.8254e-01,  ..., 7.1560e-02,
          3.2422e-01, 1.0085e-01]],
        [[3.3280e-03, 6.7574e-04, 6.3630e-04,  ..., 5.0478e-03,
          7.2377e-01, 1.2074e-02],
         [3.3280e-03, 6.7574e-04, 6.3630e-04,  ..., 5.0478e-03,
          9.2075e-02, 1.2074e-02],
         [9.9002e-01, 6.7574e-04, 6.3630e-04,  ..., 5.0478e-03,
          9.2075e-02, 9.6378e-01],
         [3.3280e-03, 9.9797e-01, 9.9809e-01,  ..., 9.8486e-01,
          9.2075e-02, 1.2074e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9837, 0.0038, 0.0010,  ..., 0.0979, 0.0130, 0.9941],
         [0.0054, 0.0034, 0.0010,  ..., 0.0979, 0.0130, 0.0020],
         [0.0054, 0.0034, 0.0010,  ..., 0.6300, 0.9611, 0.0020],
         [0.0054, 0.9894, 0.9969,  ..., 0.1743, 0.0130, 0.0020]],
        [[0.9911, 0.0199, 0.0195,  ..., 0.0012, 0.2264, 0.0117],
         [0.0029, 0.0199, 0.0195,  ..., 0.0012, 0.2264, 0.0117],
         [0.0030, 0.0199, 0.0195,  ..., 0.9964, 0.2264, 0.9650],
         [0.0029, 0.9402, 0.9416,  ..., 0.0012, 0.3209, 0.0117]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3056e-02, 3.9821e-03, 3.8262e-04,  ..., 2.4747e-02,
          8.5229e-02, 9.0377e-03],
         [1.3056e-02, 3.9821e-03, 3.8262e-04,  ..., 2.4747e-02,
          8.5229e-02, 9.0377e-03],
         [9.6083e-01, 3.9821e-03, 3.8262e-04,  ..., 9.2576e-01,
          8.5229e-02, 9.7289e-01],
         [1.3056e-02, 9.8805e-01, 9.9885e-01,  ..., 2.4747e-02,
          7.4431e-01, 9.0377e-03]],
        [[4.6711e-03, 3.6966e-04, 2.2291e-02,  ..., 2.9045e-05,
          8.9797e-01, 5.3231e-03],
         [4.6711e-03, 3.6966e-04, 2.2291e-02,  ..., 2.9045e-05,
          2.9380e-02, 5.3231e-03],
         [9.8599e-01, 3.6966e-04, 9.3313e-01,  ..., 2.9045e-05,
          3.3077e-02, 9.8403e-01],
         [4.6711e-03, 9.9889e-01, 2.2291e-02,  ..., 9.9991e-01,
          3.9570e-02, 5.3231e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:15,428 [Process: 0] Synchronize training processes
2024-08-18 15:15:15,428 [Process: 0] Evaluating...
2024-08-18 15:15:15,430 [Process: 0] EPOCH 144:
2024-08-18 15:15:15,432 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:16,569 [Process: 0] Synchronize training processes
2024-08-18 15:15:16,569 [Process: 0] Evaluating...
2024-08-18 15:15:16,571 [Process: 0] EPOCH 145:
2024-08-18 15:15:16,573 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.9885e-01, 2.9713e-02, 8.8550e-03,  ..., 9.5228e-04,
          4.5606e-03, 9.8734e-01],
         [2.7724e-02, 2.9713e-02, 8.8550e-03,  ..., 9.5228e-04,
          4.5606e-03, 3.7562e-03],
         [4.5701e-02, 2.9713e-02, 8.8550e-03,  ..., 9.9714e-01,
          9.8632e-01, 5.1462e-03],
         [2.7724e-02, 9.1086e-01, 9.7343e-01,  ..., 9.5228e-04,
          4.5606e-03, 3.7562e-03]],
        [[9.4595e-01, 4.6613e-02, 1.7499e-02,  ..., 1.0115e-02,
          1.5511e-01, 3.6269e-02],
         [1.7525e-02, 4.6613e-02, 1.7499e-02,  ..., 1.0115e-02,
          1.5511e-01, 3.6269e-02],
         [1.9002e-02, 4.6613e-02, 1.7499e-02,  ..., 9.6966e-01,
          1.9518e-01, 8.9119e-01],
         [1.7525e-02, 8.6016e-01, 9.4750e-01,  ..., 1.0115e-02,
          4.9460e-01, 3.6269e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1086e-02, 1.2205e-02, 2.2847e-03,  ..., 1.8089e-02,
          5.7874e-02, 2.0930e-02],
         [1.1086e-02, 1.2205e-02, 2.2847e-03,  ..., 1.8089e-02,
          5.7874e-02, 2.2791e-02],
         [9.6674e-01, 1.2205e-02, 2.2847e-03,  ..., 9.4573e-01,
          5.7874e-02, 9.3535e-01],
         [1.1086e-02, 9.6338e-01, 9.9315e-01,  ..., 1.8089e-02,
          8.2638e-01, 2.0930e-02]],
        [[4.0062e-03, 5.5120e-04, 1.5873e-02,  ..., 7.2246e-04,
          9.0552e-01, 7.2672e-03],
         [4.0062e-03, 5.5120e-04, 1.5873e-02,  ..., 6.0174e-04,
          3.1494e-02, 7.2672e-03],
         [9.8798e-01, 5.5120e-04, 9.5238e-01,  ..., 6.0174e-04,
          3.1494e-02, 9.7820e-01],
         [4.0062e-03, 9.9835e-01, 1.5873e-02,  ..., 9.9807e-01,
          3.1494e-02, 7.2672e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6581e-01, 2.1036e-02, 1.0814e-02,  ..., 1.0321e-02,
          2.4971e-03, 9.9811e-01],
         [1.1397e-02, 2.1036e-02, 8.5916e-03,  ..., 1.0321e-02,
          2.5957e-03, 6.2934e-04],
         [1.1397e-02, 2.1036e-02, 1.0432e-02,  ..., 9.6904e-01,
          9.9241e-01, 6.2934e-04],
         [1.1397e-02, 9.3689e-01, 9.7016e-01,  ..., 1.0321e-02,
          2.4971e-03, 6.2934e-04]],
        [[9.2580e-01, 3.7329e-02, 1.6665e-02,  ..., 1.3547e-03,
          2.1909e-01, 8.6309e-04],
         [2.3640e-02, 3.7329e-02, 1.6665e-02,  ..., 1.3547e-03,
          2.1909e-01, 8.6309e-04],
         [2.6919e-02, 3.7329e-02, 1.6665e-02,  ..., 9.9594e-01,
          2.1909e-01, 9.9741e-01],
         [2.3640e-02, 8.8801e-01, 9.5001e-01,  ..., 1.3547e-03,
          3.4273e-01, 8.6309e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1471e-02, 2.0980e-03, 1.1714e-02,  ..., 3.4002e-02,
          1.0328e-02, 3.7140e-03],
         [1.1471e-02, 1.5621e-03, 6.3691e-03,  ..., 3.4002e-02,
          1.0328e-02, 3.7140e-03],
         [9.6559e-01, 1.5621e-03, 6.3691e-03,  ..., 8.9483e-01,
          1.0328e-02, 9.8886e-01],
         [1.1471e-02, 9.9478e-01, 9.7555e-01,  ..., 3.7162e-02,
          9.6902e-01, 3.7140e-03]],
        [[7.0903e-03, 4.9131e-03, 7.0330e-03,  ..., 9.7744e-04,
          9.8481e-01, 1.3727e-02],
         [6.7048e-03, 2.1953e-03, 7.0330e-03,  ..., 9.7744e-04,
          5.0621e-03, 1.3727e-02],
         [9.7950e-01, 2.1953e-03, 9.7890e-01,  ..., 9.7744e-04,
          5.0621e-03, 9.5882e-01],
         [6.7048e-03, 9.9070e-01, 7.0330e-03,  ..., 9.9707e-01,
          5.0621e-03, 1.3727e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:17,711 [Process: 0] Synchronize training processes
2024-08-18 15:15:17,711 [Process: 0] Evaluating...
2024-08-18 15:15:17,713 [Process: 0] EPOCH 146:
2024-08-18 15:15:17,715 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:18,850 [Process: 0] Synchronize training processes
2024-08-18 15:15:18,850 [Process: 0] Evaluating...
2024-08-18 15:15:18,852 [Process: 0] EPOCH 147:
2024-08-18 15:15:18,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.2455, 0.0210, 0.0076,  ..., 0.0062, 0.0033, 0.9904],
         [0.2455, 0.0210, 0.0076,  ..., 0.0062, 0.0033, 0.0032],
         [0.2636, 0.0210, 0.0076,  ..., 0.9813, 0.9901, 0.0032],
         [0.2455, 0.9370, 0.9771,  ..., 0.0062, 0.0033, 0.0032]],
        [[0.0152, 0.2500, 0.0164,  ..., 0.0434, 0.0160, 0.0464],
         [0.0152, 0.2500, 0.0164,  ..., 0.0434, 0.0160, 0.0464],
         [0.9545, 0.2500, 0.0164,  ..., 0.8698, 0.9520, 0.8609],
         [0.0152, 0.2500, 0.9509,  ..., 0.0434, 0.0160, 0.0464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7172e-03, 3.3221e-03, 1.4648e-03,  ..., 5.9660e-02,
          4.1639e-03, 1.0113e-02],
         [3.7172e-03, 3.3221e-03, 1.4648e-03,  ..., 5.9660e-02,
          4.1639e-03, 1.0113e-02],
         [9.8885e-01, 3.3221e-03, 1.4648e-03,  ..., 8.1302e-01,
          4.1639e-03, 9.6966e-01],
         [3.7172e-03, 9.9003e-01, 9.9561e-01,  ..., 6.7657e-02,
          9.8751e-01, 1.0113e-02]],
        [[2.7448e-03, 1.2657e-03, 3.9684e-02,  ..., 1.1874e-03,
          9.6812e-01, 1.3835e-02],
         [2.7448e-03, 9.1137e-04, 3.9684e-02,  ..., 5.3548e-04,
          1.0628e-02, 1.3835e-02],
         [9.9177e-01, 9.1137e-04, 8.7130e-01,  ..., 5.3548e-04,
          1.0628e-02, 9.5850e-01],
         [2.7448e-03, 9.9691e-01, 4.9329e-02,  ..., 9.9774e-01,
          1.0628e-02, 1.3835e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.1665e-02, 4.9942e-03, 4.9166e-03,  ..., 2.4501e-03,
          2.0739e-03, 9.9767e-01],
         [6.1665e-02, 4.9942e-03, 4.9166e-03,  ..., 2.4455e-03,
          2.0739e-03, 7.7736e-04],
         [7.1220e-01, 5.5593e-03, 4.9166e-03,  ..., 9.9266e-01,
          9.9378e-01, 7.7736e-04],
         [1.6447e-01, 9.8445e-01, 9.8525e-01,  ..., 2.4455e-03,
          2.0739e-03, 7.7736e-04]],
        [[9.7413e-01, 2.5000e-01, 1.2806e-02,  ..., 2.2819e-01,
          8.3781e-01, 1.6130e-01],
         [8.6241e-03, 2.5000e-01, 1.2806e-02,  ..., 1.6453e-01,
          4.5311e-02, 1.6130e-01],
         [8.6241e-03, 2.5000e-01, 1.2806e-02,  ..., 4.4275e-01,
          7.1568e-02, 5.1502e-01],
         [8.6241e-03, 2.5000e-01, 9.6158e-01,  ..., 1.6453e-01,
          4.5311e-02, 1.6237e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:19,991 [Process: 0] Synchronize training processes
2024-08-18 15:15:19,991 [Process: 0] Evaluating...
2024-08-18 15:15:19,993 [Process: 0] EPOCH 148:
2024-08-18 15:15:19,995 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0443e-02, 4.0163e-03, 1.0741e-03,  ..., 8.7236e-03,
          3.5127e-02, 6.6954e-03],
         [1.0443e-02, 2.4657e-03, 3.6194e-04,  ..., 8.7236e-03,
          3.5127e-02, 6.6954e-03],
         [9.6867e-01, 2.4657e-03, 3.6194e-04,  ..., 9.7383e-01,
          3.5127e-02, 9.7991e-01],
         [1.0443e-02, 9.9105e-01, 9.9820e-01,  ..., 8.7236e-03,
          8.9462e-01, 6.6954e-03]],
        [[6.0304e-03, 4.0055e-03, 3.3160e-02,  ..., 1.9817e-04,
          8.5805e-01, 6.1104e-03],
         [3.7117e-03, 3.4322e-03, 3.3160e-02,  ..., 1.9817e-04,
          4.7317e-02, 5.0741e-03],
         [9.8655e-01, 3.4322e-03, 8.9463e-01,  ..., 1.9817e-04,
          4.7317e-02, 9.8374e-01],
         [3.7117e-03, 9.8913e-01, 3.9046e-02,  ..., 9.9941e-01,
          4.7317e-02, 5.0741e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5954e-01, 1.2886e-02, 8.4027e-02,  ..., 8.7889e-05,
          4.1765e-04, 9.9796e-01],
         [1.5954e-01, 1.2886e-02, 6.1530e-02,  ..., 8.7889e-05,
          4.1765e-04, 6.7898e-04],
         [4.9996e-01, 1.2886e-02, 4.9711e-01,  ..., 9.9974e-01,
          9.9875e-01, 6.7898e-04],
         [1.8096e-01, 9.6134e-01, 3.5733e-01,  ..., 8.7889e-05,
          4.1765e-04, 6.7898e-04]],
        [[1.8471e-01, 9.9768e-01, 2.4389e-02,  ..., 1.0297e-01,
          1.7835e-01, 1.0990e-01],
         [1.8471e-01, 7.7464e-04, 1.7574e-02,  ..., 1.0297e-01,
          1.7835e-01, 1.0990e-01],
         [4.4586e-01, 7.7464e-04, 1.7574e-02,  ..., 6.9110e-01,
          4.6495e-01, 6.7030e-01],
         [1.8471e-01, 7.7464e-04, 9.4046e-01,  ..., 1.0297e-01,
          1.7835e-01, 1.0990e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.2287e-03, 4.1723e-03, 5.3129e-04,  ..., 1.4449e-02,
          2.3082e-01, 2.4522e-02],
         [6.2287e-03, 1.5214e-03, 2.5384e-04,  ..., 1.4449e-02,
          2.3082e-01, 2.4522e-02],
         [9.8131e-01, 1.5214e-03, 2.5384e-04,  ..., 9.5665e-01,
          2.3082e-01, 9.2643e-01],
         [6.2287e-03, 9.9278e-01, 9.9896e-01,  ..., 1.4449e-02,
          3.0754e-01, 2.4522e-02]],
        [[1.4207e-03, 5.6673e-03, 3.4439e-02,  ..., 6.4807e-05,
          2.5000e-01, 5.5305e-03],
         [9.6438e-04, 2.4303e-03, 3.4439e-02,  ..., 6.1772e-05,
          2.5000e-01, 4.6953e-03],
         [9.9665e-01, 2.4303e-03, 8.9085e-01,  ..., 6.1772e-05,
          2.5000e-01, 9.8508e-01],
         [9.6438e-04, 9.8947e-01, 4.0268e-02,  ..., 9.9981e-01,
          2.5000e-01, 4.6953e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:21,131 [Process: 0] Synchronize training processes
2024-08-18 15:15:21,132 [Process: 0] Evaluating...
2024-08-18 15:15:21,133 [Process: 0] EPOCH 149:
2024-08-18 15:15:21,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:22,269 [Process: 0] Synchronize training processes
2024-08-18 15:15:22,269 [Process: 0] Evaluating...
2024-08-18 15:15:22,271 [Process: 0] EPOCH 150:
2024-08-18 15:15:22,273 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.1985e-01, 1.9860e-03, 9.0848e-04,  ..., 3.7924e-03,
          4.4811e-03, 9.9536e-01],
         [1.0173e-01, 8.0430e-04, 2.5030e-04,  ..., 3.7924e-03,
          2.5850e-03, 1.5460e-03],
         [1.3171e-01, 8.0430e-04, 2.5030e-04,  ..., 9.8862e-01,
          9.9035e-01, 1.5460e-03],
         [1.4671e-01, 9.9641e-01, 9.9859e-01,  ..., 3.7924e-03,
          2.5850e-03, 1.5460e-03]],
        [[3.0866e-01, 9.8874e-01, 4.9012e-02,  ..., 1.0264e-02,
          1.2412e-02, 9.8863e-03],
         [2.3045e-01, 3.7524e-03, 4.9012e-02,  ..., 1.0264e-02,
          1.2412e-02, 9.8863e-03],
         [2.3045e-01, 3.7524e-03, 4.9012e-02,  ..., 9.6921e-01,
          9.6276e-01, 9.7034e-01],
         [2.3045e-01, 3.7524e-03, 8.5296e-01,  ..., 1.0264e-02,
          1.2412e-02, 9.8863e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4647e-01, 4.3266e-02, 2.9803e-03,  ..., 1.9730e-01,
          2.2156e-01, 8.8273e-02],
         [1.4647e-01, 2.4978e-02, 3.5755e-04,  ..., 1.9730e-01,
          2.2156e-01, 8.8273e-02],
         [4.7885e-01, 2.4978e-02, 3.5755e-04,  ..., 3.6735e-01,
          2.2156e-01, 7.1982e-01],
         [2.2821e-01, 9.0678e-01, 9.9630e-01,  ..., 2.3806e-01,
          3.3531e-01, 1.0363e-01]],
        [[1.1808e-04, 4.5515e-02, 1.0605e-01,  ..., 7.7420e-04,
          2.9359e-02, 3.6441e-04],
         [1.2777e-04, 2.3494e-03, 1.0605e-01,  ..., 1.6095e-04,
          2.1198e-02, 3.6441e-04],
         [9.9964e-01, 2.5442e-03, 6.1180e-01,  ..., 1.6095e-04,
          2.2542e-02, 9.9891e-01],
         [1.1808e-04, 9.4959e-01, 1.7609e-01,  ..., 9.9890e-01,
          9.2690e-01, 3.6441e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.7701e-01, 5.9489e-03, 2.0781e-04,  ..., 2.1563e-04,
          2.4999e-04, 9.6007e-01],
         [4.0998e-02, 5.9489e-03, 1.5334e-04,  ..., 1.6329e-04,
          1.6052e-04, 1.1692e-02],
         [4.0998e-02, 5.9489e-03, 1.5334e-04,  ..., 9.9946e-01,
          9.9943e-01, 1.6550e-02],
         [4.0998e-02, 9.8215e-01, 9.9949e-01,  ..., 1.6329e-04,
          1.6052e-04, 1.1692e-02]],
        [[9.9001e-01, 2.5000e-01, 3.4548e-02,  ..., 2.0631e-02,
          7.0701e-02, 5.9456e-02],
         [3.1555e-03, 2.5000e-01, 3.4548e-02,  ..., 2.0631e-02,
          7.0701e-02, 5.9456e-02],
         [3.8355e-03, 2.5000e-01, 3.4548e-02,  ..., 9.3811e-01,
          7.8790e-01, 8.2163e-01],
         [3.0038e-03, 2.5000e-01, 8.9636e-01,  ..., 2.0631e-02,
          7.0701e-02, 5.9456e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:23,404 [Process: 0] Synchronize training processes
2024-08-18 15:15:23,404 [Process: 0] Evaluating...
2024-08-18 15:15:23,406 [Process: 0] EPOCH 151:
2024-08-18 15:15:23,408 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:24,544 [Process: 0] Synchronize training processes
2024-08-18 15:15:24,544 [Process: 0] Evaluating...
2024-08-18 15:15:24,548 [Process: 0] EPOCH 152:
2024-08-18 15:15:24,550 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2123e-02, 9.7224e-03, 4.5155e-03,  ..., 3.9697e-02,
          2.4254e-01, 2.2055e-02],
         [1.2123e-02, 8.1644e-03, 4.5155e-03,  ..., 3.9697e-02,
          2.4254e-01, 2.2055e-02],
         [9.6363e-01, 8.1644e-03, 4.5155e-03,  ..., 8.7702e-01,
          2.4254e-01, 9.3092e-01],
         [1.2123e-02, 9.7395e-01, 9.8645e-01,  ..., 4.3587e-02,
          2.7237e-01, 2.4967e-02]],
        [[2.3757e-03, 2.4950e-04, 2.3384e-01,  ..., 4.0025e-04,
          1.5758e-01, 6.8870e-03],
         [2.4744e-03, 4.0379e-05, 2.2955e-01,  ..., 1.1793e-04,
          1.5758e-01, 4.5577e-03],
         [9.9279e-01, 4.0379e-05, 2.3997e-01,  ..., 1.1793e-04,
          1.5758e-01, 9.8400e-01],
         [2.3625e-03, 9.9967e-01, 2.9663e-01,  ..., 9.9936e-01,
          5.2727e-01, 4.5577e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.1623, 0.0046, 0.0051,  ..., 0.0059, 0.0045, 0.9888],
         [0.1606, 0.0035, 0.0026,  ..., 0.0054, 0.0045, 0.0037],
         [0.2388, 0.0035, 0.0026,  ..., 0.9832, 0.9866, 0.0037],
         [0.4383, 0.9885, 0.9898,  ..., 0.0054, 0.0045, 0.0037]],
        [[0.9823, 0.0740, 0.0262,  ..., 0.0216, 0.0981, 0.0400],
         [0.0059, 0.0740, 0.0247,  ..., 0.0216, 0.0981, 0.0400],
         [0.0059, 0.0740, 0.0247,  ..., 0.9352, 0.6980, 0.8799],
         [0.0059, 0.7779, 0.9244,  ..., 0.0216, 0.1059, 0.0400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.8401e-02, 1.5256e-02, 1.5002e-02,  ..., 1.0419e-01,
          2.0428e-02, 2.2086e-02],
         [7.8401e-02, 1.5256e-02, 1.5002e-02,  ..., 1.0419e-01,
          1.5190e-02, 2.2086e-02],
         [7.4753e-01, 1.5256e-02, 1.5002e-02,  ..., 6.8213e-01,
          1.4858e-02, 9.3372e-01],
         [9.5669e-02, 9.5423e-01, 9.5500e-01,  ..., 1.0949e-01,
          9.4952e-01, 2.2106e-02]],
        [[1.4425e-03, 1.0383e-03, 4.9272e-01,  ..., 3.0032e-04,
          7.0362e-01, 1.7102e-02],
         [1.4425e-03, 3.1594e-04, 1.6692e-01,  ..., 4.3165e-05,
          9.6883e-02, 1.1263e-02],
         [9.9567e-01, 3.1594e-04, 1.6692e-01,  ..., 4.3165e-05,
          9.6883e-02, 9.5949e-01],
         [1.4425e-03, 9.9833e-01, 1.7344e-01,  ..., 9.9961e-01,
          1.0262e-01, 1.2148e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2683e-01, 1.0201e-03, 4.9834e-02,  ..., 1.6126e-02,
          8.2684e-03, 9.8591e-01],
         [1.2683e-01, 6.3951e-04, 4.9834e-02,  ..., 1.3105e-02,
          7.3741e-03, 3.9905e-03],
         [1.2683e-01, 6.3951e-04, 5.0645e-02,  ..., 9.5766e-01,
          9.7698e-01, 6.3735e-03],
         [6.1951e-01, 9.9770e-01, 8.4969e-01,  ..., 1.3105e-02,
          7.3741e-03, 3.7266e-03]],
        [[9.8905e-01, 3.0896e-02, 2.9864e-02,  ..., 1.9558e-02,
          2.5000e-01, 2.2948e-01],
         [3.1334e-03, 3.1524e-02, 2.6269e-02,  ..., 1.7784e-02,
          2.5000e-01, 2.2948e-01],
         [5.3176e-03, 3.0896e-02, 2.6269e-02,  ..., 9.4487e-01,
          2.5000e-01, 3.1156e-01],
         [2.5040e-03, 9.0668e-01, 9.1760e-01,  ..., 1.7784e-02,
          2.5000e-01, 2.2948e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:25,686 [Process: 0] Synchronize training processes
2024-08-18 15:15:25,686 [Process: 0] Evaluating...
2024-08-18 15:15:25,688 [Process: 0] EPOCH 153:
2024-08-18 15:15:25,690 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:26,818 [Process: 0] Synchronize training processes
2024-08-18 15:15:26,818 [Process: 0] Evaluating...
2024-08-18 15:15:26,820 [Process: 0] EPOCH 154:
2024-08-18 15:15:26,822 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5024e-02, 1.2201e-02, 1.4375e-03,  ..., 1.4177e-02,
          8.1654e-03, 1.3025e-02],
         [1.5024e-02, 1.2201e-02, 1.4375e-03,  ..., 1.4177e-02,
          8.1654e-03, 9.6452e-03],
         [9.5489e-01, 1.2201e-02, 1.4375e-03,  ..., 9.5747e-01,
          8.1654e-03, 9.6858e-01],
         [1.5067e-02, 9.6340e-01, 9.9569e-01,  ..., 1.4177e-02,
          9.7550e-01, 8.7520e-03]],
        [[1.6160e-02, 3.1182e-03, 8.5872e-02,  ..., 2.0216e-04,
          4.5986e-01, 5.9699e-03],
         [1.3933e-02, 1.2077e-03, 8.5872e-02,  ..., 2.0216e-04,
          1.8005e-01, 4.6276e-03],
         [9.5597e-01, 1.2077e-03, 7.4071e-01,  ..., 2.0216e-04,
          1.8005e-01, 9.8477e-01],
         [1.3933e-02, 9.9447e-01, 8.7548e-02,  ..., 9.9939e-01,
          1.8005e-01, 4.6276e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.8316e-01, 6.2228e-03, 5.8375e-03,  ..., 1.6582e-03,
          2.2991e-04, 9.3938e-01],
         [5.9233e-02, 5.1417e-03, 5.8375e-03,  ..., 5.8012e-04,
          2.2991e-04, 1.6320e-02],
         [5.9233e-02, 5.1417e-03, 5.8375e-03,  ..., 9.9718e-01,
          9.9931e-01, 2.7977e-02],
         [9.8371e-02, 9.8349e-01, 9.8249e-01,  ..., 5.8012e-04,
          2.2991e-04, 1.6320e-02]],
        [[9.7939e-01, 1.4924e-02, 6.3140e-02,  ..., 7.5639e-02,
          2.4687e-01, 2.1416e-01],
         [5.8627e-03, 1.4924e-02, 6.3140e-02,  ..., 7.5639e-02,
          2.4687e-01, 2.1416e-01],
         [9.4770e-03, 1.4924e-02, 6.5814e-02,  ..., 7.7308e-01,
          2.4687e-01, 2.8609e-01],
         [5.2682e-03, 9.5523e-01, 8.0791e-01,  ..., 7.5639e-02,
          2.5938e-01, 2.8559e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7789e-02, 2.5334e-02, 9.2700e-05,  ..., 1.3876e-02,
          2.4691e-01, 1.3083e-02],
         [3.7789e-02, 2.5334e-02, 2.2652e-05,  ..., 1.3876e-02,
          2.4691e-01, 1.3083e-02],
         [8.8122e-01, 2.5334e-02, 2.2652e-05,  ..., 9.5837e-01,
          2.4691e-01, 9.6075e-01],
         [4.3196e-02, 9.2400e-01, 9.9986e-01,  ..., 1.3876e-02,
          2.5926e-01, 1.3083e-02]],
        [[5.8502e-03, 1.8612e-03, 9.5623e-02,  ..., 6.1694e-04,
          8.9245e-01, 2.9884e-02],
         [5.2872e-03, 5.4316e-04, 9.5623e-02,  ..., 2.8462e-04,
          3.5999e-02, 2.9884e-02],
         [9.8358e-01, 5.4316e-04, 1.5944e-01,  ..., 2.8462e-04,
          3.5776e-02, 9.1035e-01],
         [5.2872e-03, 9.9705e-01, 6.4931e-01,  ..., 9.9881e-01,
          3.5776e-02, 2.9884e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:15:27,950 [Process: 0] Synchronize training processes
2024-08-18 15:15:27,950 [Process: 0] Evaluating...
2024-08-18 15:15:27,952 [Process: 0] EPOCH 155:
2024-08-18 15:15:27,954 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.7378, 0.0051, 0.0040,  ..., 0.0053, 0.0055, 0.3067],
         [0.0874, 0.0051, 0.0040,  ..., 0.0057, 0.0018, 0.2281],
         [0.0874, 0.0051, 0.0040,  ..., 0.9838, 0.9910, 0.2371],
         [0.0874, 0.9848, 0.9880,  ..., 0.0053, 0.0018, 0.2281]],
        [[0.9719, 0.0542, 0.0904,  ..., 0.0419, 0.2211, 0.1819],
         [0.0114, 0.0542, 0.0904,  ..., 0.0419, 0.2211, 0.1819],
         [0.0087, 0.0542, 0.1029,  ..., 0.8743, 0.3366, 0.4542],
         [0.0080, 0.8373, 0.7163,  ..., 0.0419, 0.2211, 0.1819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6764e-02, 7.5795e-02, 1.5975e-04,  ..., 5.5948e-02,
          2.3127e-01, 2.5821e-02],
         [3.6764e-02, 7.5795e-02, 1.5975e-04,  ..., 5.5948e-02,
          2.3127e-01, 2.5821e-02],
         [8.8971e-01, 7.5795e-02, 1.5975e-04,  ..., 8.3216e-01,
          2.3127e-01, 9.2254e-01],
         [3.6764e-02, 7.7262e-01, 9.9952e-01,  ..., 5.5948e-02,
          3.0618e-01, 2.5821e-02]],
        [[6.6177e-03, 5.4526e-03, 1.6845e-02,  ..., 1.4292e-03,
          2.0094e-01, 9.5657e-03],
         [5.5669e-03, 5.4526e-03, 2.0736e-02,  ..., 1.4292e-03,
          2.0094e-01, 7.4230e-03],
         [9.8225e-01, 5.4526e-03, 9.4557e-01,  ..., 1.4292e-03,
          3.3533e-01, 9.7559e-01],
         [5.5669e-03, 9.8364e-01, 1.6845e-02,  ..., 9.9571e-01,
          2.6280e-01, 7.4230e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9521e-01, 6.1120e-03, 3.0267e-03,  ..., 8.7929e-04,
          1.5970e-03, 9.9957e-01],
         [9.3737e-04, 6.1120e-03, 3.0267e-03,  ..., 8.7555e-04,
          6.2069e-04, 1.4289e-04],
         [9.3737e-04, 6.1120e-03, 3.0267e-03,  ..., 9.9760e-01,
          9.9716e-01, 1.4289e-04],
         [2.9109e-03, 9.8166e-01, 9.9092e-01,  ..., 6.4520e-04,
          6.2069e-04, 1.4289e-04]],
        [[9.2349e-01, 2.5434e-02, 4.4823e-02,  ..., 7.0211e-02,
          1.5523e-01, 6.2206e-02],
         [2.5502e-02, 2.5434e-02, 4.4823e-02,  ..., 7.0211e-02,
          1.5523e-01, 6.2206e-02],
         [2.5502e-02, 2.5434e-02, 4.4823e-02,  ..., 7.8937e-01,
          5.3432e-01, 8.1338e-01],
         [2.5502e-02, 9.2370e-01, 8.6553e-01,  ..., 7.0211e-02,
          1.5523e-01, 6.2206e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6610e-02, 6.5005e-02, 1.2809e-03,  ..., 2.4135e-02,
          2.5000e-01, 2.4214e-02],
         [1.6610e-02, 6.5005e-02, 6.8542e-04,  ..., 2.4135e-02,
          2.5000e-01, 2.4214e-02],
         [9.5017e-01, 6.5005e-02, 6.8542e-04,  ..., 9.2759e-01,
          2.5000e-01, 9.2736e-01],
         [1.6610e-02, 8.0498e-01, 9.9735e-01,  ..., 2.4135e-02,
          2.5000e-01, 2.4214e-02]],
        [[2.4433e-02, 2.1210e-03, 8.8868e-02,  ..., 4.2663e-04,
          8.9723e-01, 1.5396e-02],
         [2.5328e-02, 2.1210e-03, 8.8868e-02,  ..., 2.4503e-04,
          3.2705e-02, 1.5396e-02],
         [9.2416e-01, 2.1210e-03, 7.3340e-01,  ..., 2.4503e-04,
          3.2705e-02, 9.5381e-01],
         [2.6078e-02, 9.9364e-01, 8.8868e-02,  ..., 9.9908e-01,
          3.7357e-02, 1.5396e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:29,086 [Process: 0] Synchronize training processes
2024-08-18 15:15:29,087 [Process: 0] Evaluating...
2024-08-18 15:15:29,088 [Process: 0] EPOCH 156:
2024-08-18 15:15:29,090 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:30,223 [Process: 0] Synchronize training processes
2024-08-18 15:15:30,223 [Process: 0] Evaluating...
2024-08-18 15:15:30,225 [Process: 0] EPOCH 157:
2024-08-18 15:15:30,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.2004e-01, 5.1429e-03, 1.7995e-02,  ..., 1.8301e-03,
          2.5497e-03, 9.9693e-01],
         [2.2739e-02, 5.1429e-03, 1.7995e-02,  ..., 1.4370e-03,
          2.0529e-03, 1.0243e-03],
         [2.2739e-02, 5.1429e-03, 1.7995e-02,  ..., 9.9578e-01,
          9.9386e-01, 1.0243e-03],
         [3.4481e-02, 9.8457e-01, 9.4601e-01,  ..., 9.5702e-04,
          1.5390e-03, 1.0243e-03]],
        [[9.5830e-01, 1.3196e-02, 1.1801e-02,  ..., 1.2960e-02,
          2.0866e-01, 9.3954e-02],
         [1.3130e-02, 1.2618e-02, 1.1128e-02,  ..., 1.0801e-02,
          2.0866e-01, 9.3954e-02],
         [1.5437e-02, 1.2618e-02, 1.1128e-02,  ..., 9.6825e-01,
          3.7402e-01, 7.1814e-01],
         [1.3130e-02, 9.6157e-01, 9.6594e-01,  ..., 7.9848e-03,
          2.0866e-01, 9.3954e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1211e-02, 5.0670e-02, 9.0163e-04,  ..., 1.5509e-02,
          2.0506e-01, 7.4377e-03],
         [1.1211e-02, 5.0156e-02, 9.0163e-04,  ..., 1.6243e-02,
          2.0506e-01, 5.2679e-03],
         [9.6637e-01, 5.0156e-02, 9.0163e-04,  ..., 9.5274e-01,
          2.5731e-01, 9.8203e-01],
         [1.1211e-02, 8.4902e-01, 9.9730e-01,  ..., 1.5509e-02,
          3.3256e-01, 5.2679e-03]],
        [[4.7265e-03, 3.5847e-04, 1.0764e-01,  ..., 1.2200e-04,
          9.1565e-01, 3.1698e-02],
         [4.7265e-03, 3.5847e-04, 1.0764e-01,  ..., 1.2200e-04,
          2.8116e-02, 3.1766e-02],
         [9.8582e-01, 3.5847e-04, 6.6400e-01,  ..., 1.2200e-04,
          2.8116e-02, 9.0341e-01],
         [4.7265e-03, 9.9892e-01, 1.2072e-01,  ..., 9.9963e-01,
          2.8116e-02, 3.3131e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.3906e-01, 2.2547e-02, 1.4259e-02,  ..., 1.7245e-03,
          1.2880e-03, 9.8768e-01],
         [1.8955e-02, 2.2547e-02, 1.4259e-02,  ..., 2.6260e-03,
          1.6222e-03, 3.7164e-03],
         [1.8955e-02, 2.2547e-02, 1.4259e-02,  ..., 9.9430e-01,
          9.9614e-01, 4.8870e-03],
         [2.3025e-02, 9.3236e-01, 9.5722e-01,  ..., 1.3514e-03,
          9.4611e-04, 3.7164e-03]],
        [[9.8818e-01, 6.0507e-03, 1.6503e-02,  ..., 1.4861e-03,
          2.2947e-01, 1.5882e-01],
         [3.1418e-03, 5.1594e-03, 1.4538e-02,  ..., 1.7553e-03,
          2.2947e-01, 1.5882e-01],
         [5.5347e-03, 5.4928e-03, 1.4990e-02,  ..., 9.9527e-01,
          3.1160e-01, 5.2353e-01],
         [3.1418e-03, 9.8330e-01, 9.5397e-01,  ..., 1.4861e-03,
          2.2947e-01, 1.5882e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3459e-03, 7.7543e-03, 3.0180e-04,  ..., 3.7446e-02,
          2.5000e-01, 5.4284e-03],
         [2.7401e-03, 7.7543e-03, 3.0180e-04,  ..., 3.7446e-02,
          2.5000e-01, 5.4207e-03],
         [9.9117e-01, 7.7543e-03, 3.0180e-04,  ..., 8.7952e-01,
          2.5000e-01, 9.8373e-01],
         [2.7401e-03, 9.7674e-01, 9.9909e-01,  ..., 4.5591e-02,
          2.5000e-01, 5.4207e-03]],
        [[1.0761e-02, 4.4180e-03, 2.3179e-01,  ..., 1.6359e-04,
          7.0099e-01, 1.7925e-02],
         [1.0754e-02, 4.4180e-03, 2.3179e-01,  ..., 1.6359e-04,
          9.4311e-02, 1.4750e-02],
         [9.6774e-01, 4.4180e-03, 2.3256e-01,  ..., 1.6359e-04,
          9.4311e-02, 9.5208e-01],
         [1.0741e-02, 9.8675e-01, 3.0385e-01,  ..., 9.9951e-01,
          1.1039e-01, 1.5243e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:31,354 [Process: 0] Synchronize training processes
2024-08-18 15:15:31,355 [Process: 0] Evaluating...
2024-08-18 15:15:31,356 [Process: 0] EPOCH 158:
2024-08-18 15:15:31,358 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:32,478 [Process: 0] Synchronize training processes
2024-08-18 15:15:32,478 [Process: 0] Evaluating...
2024-08-18 15:15:32,480 [Process: 0] EPOCH 159:
2024-08-18 15:15:32,482 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.0405e-01, 2.4644e-02, 4.4550e-02,  ..., 2.1214e-03,
          5.7699e-04, 9.7284e-01],
         [6.0291e-02, 2.4644e-02, 4.4550e-02,  ..., 2.0758e-03,
          8.8822e-04, 8.5704e-03],
         [6.0291e-02, 2.7109e-02, 4.6694e-02,  ..., 9.9373e-01,
          9.9796e-01, 1.0021e-02],
         [7.5373e-02, 9.2360e-01, 8.6421e-01,  ..., 2.0758e-03,
          5.7699e-04, 8.5704e-03]],
        [[9.9829e-01, 4.2625e-02, 8.0071e-03,  ..., 7.9708e-03,
          1.5838e-01, 5.0254e-02],
         [6.0403e-04, 4.2625e-02, 6.4618e-03,  ..., 9.1882e-03,
          1.5838e-01, 5.0254e-02],
         [5.5451e-04, 4.8398e-02, 8.4001e-03,  ..., 9.7487e-01,
          5.1244e-01, 8.4924e-01],
         [5.5451e-04, 8.6635e-01, 9.7713e-01,  ..., 7.9708e-03,
          1.7079e-01, 5.0254e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5971e-02, 3.6587e-02, 1.1216e-04,  ..., 1.5205e-02,
          2.0678e-01, 6.4518e-03],
         [1.5971e-02, 3.6587e-02, 1.1216e-04,  ..., 1.4485e-02,
          2.0678e-01, 6.4518e-03],
         [9.5028e-01, 3.6587e-02, 1.1216e-04,  ..., 9.5583e-01,
          2.0678e-01, 9.8064e-01],
         [1.7775e-02, 8.9024e-01, 9.9966e-01,  ..., 1.4485e-02,
          3.7966e-01, 6.4518e-03]],
        [[1.1286e-02, 1.8597e-04, 2.5931e-01,  ..., 4.8952e-05,
          7.3779e-01, 6.7786e-03],
         [1.0555e-02, 1.8597e-04, 2.4173e-01,  ..., 4.8952e-05,
          8.7404e-02, 6.7786e-03],
         [9.6683e-01, 1.8597e-04, 2.4173e-01,  ..., 4.8952e-05,
          8.7404e-02, 9.7966e-01],
         [1.1331e-02, 9.9944e-01, 2.5723e-01,  ..., 9.9985e-01,
          8.7404e-02, 6.7786e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.5136, 0.0061, 0.0123,  ..., 0.0068, 0.0032, 0.9953],
         [0.1621, 0.0061, 0.0123,  ..., 0.0073, 0.0027, 0.0016],
         [0.1621, 0.0061, 0.0136,  ..., 0.9792, 0.9913, 0.0016],
         [0.1621, 0.9816, 0.9618,  ..., 0.0068, 0.0027, 0.0016]],
        [[0.9928, 0.0114, 0.0138,  ..., 0.0025, 0.1547, 0.0258],
         [0.0024, 0.0114, 0.0138,  ..., 0.0036, 0.1547, 0.0351],
         [0.0024, 0.0114, 0.0148,  ..., 0.9915, 0.5359, 0.9132],
         [0.0024, 0.9657, 0.9575,  ..., 0.0024, 0.1547, 0.0258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:33,604 [Process: 0] Synchronize training processes
2024-08-18 15:15:33,604 [Process: 0] Evaluating...
2024-08-18 15:15:33,606 [Process: 0] EPOCH 160:
2024-08-18 15:15:33,608 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:34,741 [Process: 0] Synchronize training processes
2024-08-18 15:15:34,741 [Process: 0] Evaluating...
2024-08-18 15:15:34,743 [Process: 0] EPOCH 161:
2024-08-18 15:15:34,745 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.4696e-03, 5.3924e-02, 4.3595e-04,  ..., 3.2165e-02,
          3.8249e-03, 1.2132e-02],
         [8.4283e-03, 5.3924e-02, 4.3595e-04,  ..., 3.2165e-02,
          3.8249e-03, 1.0832e-02],
         [9.7663e-01, 5.3924e-02, 4.3595e-04,  ..., 9.0351e-01,
          3.8249e-03, 9.6735e-01],
         [7.4696e-03, 8.3823e-01, 9.9869e-01,  ..., 3.2165e-02,
          9.8853e-01, 9.6886e-03]],
        [[1.1393e-02, 2.5508e-04, 2.5000e-01,  ..., 1.3874e-04,
          2.7853e-01, 1.9154e-02],
         [1.1393e-02, 2.5508e-04, 2.5000e-01,  ..., 1.3874e-04,
          2.3324e-01, 1.9200e-02],
         [9.6582e-01, 2.5508e-04, 2.5000e-01,  ..., 1.3874e-04,
          2.3324e-01, 9.4302e-01],
         [1.1393e-02, 9.9923e-01, 2.5000e-01,  ..., 9.9958e-01,
          2.5499e-01, 1.8623e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.6278e-01, 1.4770e-02, 1.1843e-02,  ..., 1.6303e-03,
          7.4793e-03, 9.8931e-01],
         [9.2163e-02, 1.4770e-02, 1.1843e-02,  ..., 2.2461e-03,
          8.1403e-03, 4.2377e-03],
         [1.3270e-01, 1.4770e-02, 1.2708e-02,  ..., 9.9449e-01,
          9.7690e-01, 3.2241e-03],
         [1.1236e-01, 9.5569e-01, 9.6361e-01,  ..., 1.6303e-03,
          7.4793e-03, 3.2241e-03]],
        [[9.9882e-01, 1.2497e-02, 6.9002e-03,  ..., 1.2465e-03,
          1.3508e-01, 7.1753e-03],
         [3.9289e-04, 1.2497e-02, 6.9002e-03,  ..., 2.3643e-03,
          1.3508e-01, 1.0510e-02],
         [3.9289e-04, 1.5981e-02, 7.0874e-03,  ..., 9.9514e-01,
          5.9476e-01, 9.7514e-01],
         [3.9289e-04, 9.5902e-01, 9.7911e-01,  ..., 1.2465e-03,
          1.3508e-01, 7.1753e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3292e-02, 2.1801e-03, 1.3650e-05,  ..., 1.5287e-02,
          2.5000e-01, 3.4931e-03],
         [4.3292e-02, 2.1801e-03, 1.3650e-05,  ..., 1.5367e-02,
          2.5000e-01, 3.7338e-03],
         [8.6266e-01, 2.1801e-03, 1.3650e-05,  ..., 9.5325e-01,
          2.5000e-01, 9.8928e-01],
         [5.0755e-02, 9.9346e-01, 9.9996e-01,  ..., 1.6100e-02,
          2.5000e-01, 3.4931e-03]],
        [[1.6443e-02, 8.3158e-04, 2.2518e-01,  ..., 1.3367e-05,
          2.2932e-01, 4.8952e-03],
         [1.6443e-02, 8.3158e-04, 2.2518e-01,  ..., 1.3367e-05,
          2.2932e-01, 4.8952e-03],
         [9.5067e-01, 8.3158e-04, 2.7696e-01,  ..., 1.3367e-05,
          2.2932e-01, 9.8531e-01],
         [1.6443e-02, 9.9751e-01, 2.7268e-01,  ..., 9.9996e-01,
          3.1204e-01, 4.8952e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5366e-01, 9.0895e-03, 5.9232e-03,  ..., 8.9096e-04,
          5.0973e-03, 9.9031e-01],
         [1.8211e-01, 9.0895e-03, 5.9232e-03,  ..., 1.0542e-03,
          5.8890e-03, 2.7203e-03],
         [1.8211e-01, 9.8619e-03, 6.3660e-03,  ..., 9.9716e-01,
          9.8392e-01, 3.4489e-03],
         [1.8211e-01, 9.7196e-01, 9.8179e-01,  ..., 8.9096e-04,
          5.0973e-03, 3.5234e-03]],
        [[9.9915e-01, 2.0041e-02, 6.1309e-03,  ..., 2.3584e-03,
          2.9452e-01, 3.7669e-03],
         [2.8382e-04, 2.0041e-02, 6.1309e-03,  ..., 3.9147e-03,
          2.3516e-01, 4.3600e-03],
         [2.8382e-04, 2.5019e-02, 8.0969e-03,  ..., 9.9137e-01,
          2.3516e-01, 9.8811e-01],
         [2.8382e-04, 9.3490e-01, 9.7964e-01,  ..., 2.3584e-03,
          2.3516e-01, 3.7669e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:35,882 [Process: 0] Synchronize training processes
2024-08-18 15:15:35,882 [Process: 0] Evaluating...
2024-08-18 15:15:35,886 [Process: 0] EPOCH 162:
2024-08-18 15:15:35,888 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.1114e-02, 7.3221e-03, 2.4471e-04,  ..., 4.4731e-02,
          2.2375e-01, 4.2845e-02],
         [7.1114e-02, 7.3221e-03, 2.4471e-04,  ..., 4.4731e-02,
          2.2375e-01, 4.2845e-02],
         [7.8666e-01, 7.3221e-03, 2.4471e-04,  ..., 8.4863e-01,
          2.2375e-01, 8.6245e-01],
         [7.1114e-02, 9.7803e-01, 9.9927e-01,  ..., 6.1906e-02,
          3.2874e-01, 5.1858e-02]],
        [[1.2671e-02, 4.4020e-05, 1.6788e-01,  ..., 1.5488e-05,
          2.3584e-01, 2.9740e-03],
         [1.3234e-02, 4.4020e-05, 1.6788e-01,  ..., 1.5488e-05,
          2.3584e-01, 2.9740e-03],
         [9.6142e-01, 4.4020e-05, 3.9546e-01,  ..., 1.5488e-05,
          2.3584e-01, 9.9108e-01],
         [1.2671e-02, 9.9987e-01, 2.6877e-01,  ..., 9.9995e-01,
          2.9248e-01, 2.9740e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.6530e-01, 1.6542e-02, 1.1477e-02,  ..., 1.4485e-03,
          2.4600e-03, 9.7794e-01],
         [4.3653e-02, 1.6542e-02, 1.1477e-02,  ..., 2.3745e-03,
          2.4600e-03, 7.7021e-03],
         [4.7392e-02, 1.6542e-02, 1.1477e-02,  ..., 9.9473e-01,
          9.9262e-01, 7.1783e-03],
         [4.3653e-02, 9.5037e-01, 9.6557e-01,  ..., 1.4485e-03,
          2.4600e-03, 7.1783e-03]],
        [[9.9803e-01, 3.1591e-02, 9.9546e-03,  ..., 1.6922e-02,
          1.9627e-01, 6.4284e-04],
         [7.6164e-04, 3.1591e-02, 9.9546e-03,  ..., 1.6922e-02,
          1.9627e-01, 9.3331e-04],
         [6.0621e-04, 3.3022e-02, 1.2652e-02,  ..., 9.4923e-01,
          2.8412e-01, 9.9778e-01],
         [6.0621e-04, 9.0380e-01, 9.6744e-01,  ..., 1.6922e-02,
          3.2334e-01, 6.4284e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3959e-02, 1.5836e-02, 6.7685e-04,  ..., 4.2983e-02,
          2.2675e-01, 1.0218e-02],
         [4.3959e-02, 1.5836e-02, 6.7685e-04,  ..., 4.2983e-02,
          2.2675e-01, 1.1454e-02],
         [8.5550e-01, 1.5836e-02, 6.7685e-04,  ..., 8.6271e-01,
          2.2675e-01, 9.6811e-01],
         [5.6581e-02, 9.5249e-01, 9.9797e-01,  ..., 5.1320e-02,
          3.1976e-01, 1.0218e-02]],
        [[4.7167e-02, 5.5352e-03, 1.6321e-01,  ..., 9.0371e-05,
          2.5337e-01, 1.3845e-02],
         [3.7915e-02, 5.5352e-03, 1.6321e-01,  ..., 9.0371e-05,
          2.1143e-01, 1.3845e-02],
         [8.5928e-01, 5.5352e-03, 1.6321e-01,  ..., 9.0371e-05,
          2.1143e-01, 9.5846e-01],
         [5.5633e-02, 9.8339e-01, 5.1036e-01,  ..., 9.9973e-01,
          3.2378e-01, 1.3845e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:37,022 [Process: 0] Synchronize training processes
2024-08-18 15:15:37,022 [Process: 0] Evaluating...
2024-08-18 15:15:37,024 [Process: 0] EPOCH 163:
2024-08-18 15:15:37,026 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:38,164 [Process: 0] Synchronize training processes
2024-08-18 15:15:38,164 [Process: 0] Evaluating...
2024-08-18 15:15:38,166 [Process: 0] EPOCH 164:
2024-08-18 15:15:38,168 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9932, 0.0054, 0.0104,  ..., 0.0017, 0.0102, 0.9961],
         [0.0023, 0.0054, 0.0104,  ..., 0.0025, 0.0108, 0.0013],
         [0.0023, 0.0054, 0.0104,  ..., 0.9940, 0.9688, 0.0013],
         [0.0023, 0.9839, 0.9688,  ..., 0.0017, 0.0102, 0.0013]],
        [[0.9953, 0.0985, 0.0048,  ..., 0.0079, 0.2322, 0.0056],
         [0.0018, 0.0985, 0.0048,  ..., 0.0082, 0.2322, 0.0064],
         [0.0014, 0.1308, 0.0048,  ..., 0.9759, 0.2729, 0.9824],
         [0.0014, 0.6722, 0.9856,  ..., 0.0079, 0.2628, 0.0056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3492e-02, 2.0890e-02, 4.1293e-04,  ..., 1.2596e-02,
          2.0205e-01, 8.2003e-03],
         [2.3492e-02, 2.0890e-02, 4.1293e-04,  ..., 1.2596e-02,
          1.6948e-01, 8.2003e-03],
         [9.2907e-01, 2.0890e-02, 4.1293e-04,  ..., 9.6221e-01,
          2.4039e-01, 9.7540e-01],
         [2.3949e-02, 9.3733e-01, 9.9876e-01,  ..., 1.2596e-02,
          3.8808e-01, 8.2003e-03]],
        [[8.9084e-03, 3.1109e-05, 1.8033e-01,  ..., 9.6190e-04,
          4.9619e-01, 1.1344e-02],
         [8.9084e-03, 3.1109e-05, 1.8033e-01,  ..., 9.6190e-04,
          1.6794e-01, 1.1344e-02],
         [9.7327e-01, 3.1109e-05, 1.8033e-01,  ..., 9.6190e-04,
          1.6794e-01, 9.6597e-01],
         [8.9084e-03, 9.9991e-01, 4.5902e-01,  ..., 9.9711e-01,
          1.6794e-01, 1.1344e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6962e-01, 5.7264e-03, 8.1470e-03,  ..., 5.7970e-04,
          3.2421e-03, 9.9341e-01],
         [9.0075e-03, 5.7264e-03, 8.1470e-03,  ..., 5.7970e-04,
          3.5439e-03, 2.5361e-03],
         [1.2365e-02, 5.7264e-03, 8.1470e-03,  ..., 9.9826e-01,
          9.8997e-01, 2.0286e-03],
         [9.0075e-03, 9.8282e-01, 9.7556e-01,  ..., 5.7970e-04,
          3.2421e-03, 2.0286e-03]],
        [[9.9751e-01, 5.1578e-02, 7.5792e-03,  ..., 5.1209e-03,
          1.8672e-01, 8.3498e-03],
         [8.2897e-04, 5.1578e-02, 7.5792e-03,  ..., 8.2429e-03,
          1.8672e-01, 8.3498e-03],
         [8.2897e-04, 5.3286e-02, 7.5792e-03,  ..., 9.8152e-01,
          2.8107e-01, 9.7495e-01],
         [8.2897e-04, 8.4356e-01, 9.7726e-01,  ..., 5.1209e-03,
          3.4548e-01, 8.3498e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8742e-02, 3.3165e-02, 4.0174e-05,  ..., 2.5632e-02,
          2.3210e-01, 1.0433e-02],
         [2.8742e-02, 3.3165e-02, 4.0174e-05,  ..., 2.5632e-02,
          2.3210e-01, 1.1824e-02],
         [9.1377e-01, 3.3165e-02, 4.0174e-05,  ..., 9.2081e-01,
          2.3210e-01, 9.6746e-01],
         [2.8742e-02, 9.0051e-01, 9.9988e-01,  ..., 2.7929e-02,
          3.0370e-01, 1.0285e-02]],
        [[2.4292e-02, 1.3563e-04, 1.6528e-01,  ..., 7.4029e-05,
          4.4273e-01, 7.5613e-03],
         [2.4292e-02, 1.3563e-04, 1.6528e-01,  ..., 7.4029e-05,
          1.6866e-01, 7.5613e-03],
         [9.2712e-01, 1.3563e-04, 1.6528e-01,  ..., 7.4029e-05,
          1.6866e-01, 9.7732e-01],
         [2.4292e-02, 9.9959e-01, 5.0416e-01,  ..., 9.9978e-01,
          2.1995e-01, 7.5613e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 15:15:39,303 [Process: 0] Synchronize training processes
2024-08-18 15:15:39,303 [Process: 0] Evaluating...
2024-08-18 15:15:39,304 [Process: 0] EPOCH 165:
2024-08-18 15:15:39,306 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:40,444 [Process: 0] Synchronize training processes
2024-08-18 15:15:40,445 [Process: 0] Evaluating...
2024-08-18 15:15:40,446 [Process: 0] EPOCH 166:
2024-08-18 15:15:40,448 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.3434e-01, 5.1383e-03, 3.0353e-03,  ..., 2.2551e-03,
          4.1906e-03, 9.5530e-01],
         [5.9306e-02, 5.1383e-03, 3.0353e-03,  ..., 2.2551e-03,
          4.1906e-03, 1.6051e-02],
         [1.4705e-01, 5.1383e-03, 3.2409e-03,  ..., 9.9323e-01,
          9.8743e-01, 1.4322e-02],
         [5.9306e-02, 9.8458e-01, 9.9069e-01,  ..., 2.2551e-03,
          4.1906e-03, 1.4322e-02]],
        [[9.2507e-01, 1.0868e-01, 7.1873e-02,  ..., 7.1900e-03,
          1.4308e-01, 7.1750e-04],
         [2.4978e-02, 1.0868e-01, 7.1873e-02,  ..., 7.7516e-03,
          1.4308e-01, 7.1750e-04],
         [2.4978e-02, 1.1946e-01, 1.1852e-01,  ..., 9.7787e-01,
          4.5003e-01, 9.9785e-01],
         [2.4978e-02, 6.6319e-01, 7.3774e-01,  ..., 7.1900e-03,
          2.6381e-01, 7.1750e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4145e-03, 1.4740e-02, 4.3194e-04,  ..., 1.1085e-02,
          2.3352e-01, 1.7692e-02],
         [9.4145e-03, 1.4740e-02, 4.3194e-04,  ..., 1.1085e-02,
          2.3352e-01, 1.7944e-02],
         [9.7176e-01, 1.4740e-02, 4.3194e-04,  ..., 9.6675e-01,
          2.3352e-01, 9.4667e-01],
         [9.4145e-03, 9.5578e-01, 9.9870e-01,  ..., 1.1085e-02,
          2.9943e-01, 1.7692e-02]],
        [[8.3783e-03, 6.9737e-04, 1.3736e-01,  ..., 1.0536e-04,
          7.8159e-01, 1.7217e-02],
         [1.0174e-02, 6.9737e-04, 1.3736e-01,  ..., 1.0536e-04,
          6.7147e-02, 1.7217e-02],
         [9.7307e-01, 6.9737e-04, 1.3736e-01,  ..., 1.0536e-04,
          6.7147e-02, 9.4835e-01],
         [8.3783e-03, 9.9791e-01, 5.8791e-01,  ..., 9.9968e-01,
          8.4114e-02, 1.7217e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.7782e-01, 8.4574e-03, 4.5840e-03,  ..., 2.3428e-03,
          3.2035e-03, 9.2475e-01],
         [3.7372e-02, 8.4574e-03, 4.5840e-03,  ..., 2.3428e-03,
          3.2035e-03, 2.4739e-02],
         [5.3341e-02, 8.4574e-03, 4.5840e-03,  ..., 9.9297e-01,
          9.9039e-01, 3.0303e-02],
         [3.1467e-02, 9.7463e-01, 9.8625e-01,  ..., 2.3428e-03,
          3.2035e-03, 2.0213e-02]],
        [[9.8033e-01, 4.5457e-02, 7.9052e-03,  ..., 2.2029e-01,
          2.7203e-01, 3.7209e-04],
         [6.6681e-03, 4.5457e-02, 7.9052e-03,  ..., 2.2029e-01,
          2.0565e-01, 4.9303e-04],
         [6.6225e-03, 4.9778e-02, 7.9052e-03,  ..., 2.4007e-01,
          2.0565e-01, 9.9876e-01],
         [6.3827e-03, 8.5931e-01, 9.7628e-01,  ..., 3.1935e-01,
          3.1667e-01, 3.7209e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:41,578 [Process: 0] Synchronize training processes
2024-08-18 15:15:41,579 [Process: 0] Evaluating...
2024-08-18 15:15:41,581 [Process: 0] EPOCH 167:
2024-08-18 15:15:41,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:42,704 [Process: 0] Synchronize training processes
2024-08-18 15:15:42,704 [Process: 0] Evaluating...
2024-08-18 15:15:42,706 [Process: 0] EPOCH 168:
2024-08-18 15:15:42,707 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8264e-02, 7.5168e-03, 1.5909e-04,  ..., 2.8016e-02,
          1.3348e-01, 1.0823e-02],
         [1.8264e-02, 7.5168e-03, 1.5909e-04,  ..., 2.8016e-02,
          1.3348e-01, 1.3277e-02],
         [9.4521e-01, 7.5168e-03, 1.5909e-04,  ..., 9.1595e-01,
          1.3348e-01, 9.6508e-01],
         [1.8264e-02, 9.7745e-01, 9.9952e-01,  ..., 2.8016e-02,
          5.9957e-01, 1.0823e-02]],
        [[1.6040e-02, 7.6024e-04, 1.3283e-01,  ..., 4.2404e-04,
          7.1568e-01, 1.4403e-02],
         [1.6040e-02, 7.6024e-04, 1.2174e-01,  ..., 4.2404e-04,
          8.3070e-02, 1.4403e-02],
         [9.5188e-01, 7.6024e-04, 1.2174e-01,  ..., 4.2404e-04,
          8.3070e-02, 9.5679e-01],
         [1.6040e-02, 9.9772e-01, 6.2369e-01,  ..., 9.9873e-01,
          1.1818e-01, 1.4403e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9933, 0.0065, 0.0081,  ..., 0.0015, 0.0084, 0.9674],
         [0.0022, 0.0065, 0.0081,  ..., 0.0015, 0.0084, 0.0109],
         [0.0022, 0.0065, 0.0081,  ..., 0.9955, 0.9747, 0.0109],
         [0.0022, 0.9805, 0.9757,  ..., 0.0015, 0.0084, 0.0109]],
        [[0.9933, 0.0116, 0.0212,  ..., 0.0015, 0.0295, 0.0105],
         [0.0022, 0.0116, 0.0180,  ..., 0.0017, 0.0295, 0.0113],
         [0.0022, 0.0116, 0.0180,  ..., 0.9954, 0.9115, 0.9677],
         [0.0022, 0.9653, 0.9428,  ..., 0.0015, 0.0295, 0.0105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0911e-02, 1.9032e-03, 1.5265e-03,  ..., 4.1677e-02,
          1.1580e-01, 7.9359e-03],
         [1.2446e-02, 1.9032e-03, 1.5265e-03,  ..., 3.8617e-02,
          1.1580e-01, 7.9359e-03],
         [9.6573e-01, 1.9032e-03, 1.5265e-03,  ..., 8.7968e-01,
          1.1580e-01, 9.7619e-01],
         [1.0911e-02, 9.9429e-01, 9.9542e-01,  ..., 4.0026e-02,
          6.5261e-01, 7.9359e-03]],
        [[5.3003e-03, 8.2054e-04, 1.1801e-01,  ..., 5.9122e-04,
          6.9036e-01, 1.7950e-02],
         [5.3003e-03, 8.2054e-04, 1.1801e-01,  ..., 5.9122e-04,
          9.2288e-02, 1.7950e-02],
         [9.8410e-01, 8.2054e-04, 1.1801e-01,  ..., 5.9122e-04,
          9.2288e-02, 9.4615e-01],
         [5.3003e-03, 9.9754e-01, 6.4597e-01,  ..., 9.9823e-01,
          1.2506e-01, 1.7950e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7523e-01, 2.9929e-03, 2.0895e-02,  ..., 6.3514e-04,
          3.8206e-03, 9.9136e-01],
         [8.2555e-03, 2.9929e-03, 2.0895e-02,  ..., 1.1062e-03,
          3.9330e-03, 2.8743e-03],
         [8.2555e-03, 2.9929e-03, 2.0895e-02,  ..., 9.9762e-01,
          9.8843e-01, 2.8743e-03],
         [8.2555e-03, 9.9102e-01, 9.3731e-01,  ..., 6.3514e-04,
          3.8206e-03, 2.8943e-03]],
        [[9.9299e-01, 1.7042e-02, 9.2243e-03,  ..., 3.1262e-03,
          8.5628e-02, 1.0900e-02],
         [2.3830e-03, 1.7042e-02, 9.2243e-03,  ..., 3.1986e-03,
          6.2617e-02, 1.5534e-02],
         [2.3122e-03, 1.7042e-02, 9.2243e-03,  ..., 9.9055e-01,
          7.8914e-01, 9.6267e-01],
         [2.3122e-03, 9.4887e-01, 9.7233e-01,  ..., 3.1262e-03,
          6.2617e-02, 1.0900e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:43,828 [Process: 0] Synchronize training processes
2024-08-18 15:15:43,828 [Process: 0] Evaluating...
2024-08-18 15:15:43,830 [Process: 0] EPOCH 169:
2024-08-18 15:15:43,831 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4986e-02, 6.9373e-04, 1.0698e-03,  ..., 5.8349e-02,
          2.3790e-01, 1.6988e-02],
         [1.7679e-02, 6.9373e-04, 1.0698e-03,  ..., 5.8349e-02,
          2.3790e-01, 1.6988e-02],
         [9.5235e-01, 6.9373e-04, 1.0698e-03,  ..., 7.9889e-01,
          2.3790e-01, 9.4904e-01],
         [1.4986e-02, 9.9792e-01, 9.9679e-01,  ..., 8.4416e-02,
          2.8631e-01, 1.6988e-02]],
        [[2.6706e-02, 4.4750e-04, 1.6529e-01,  ..., 1.2801e-04,
          8.1534e-01, 5.2804e-03],
         [2.6706e-02, 4.4750e-04, 8.5479e-02,  ..., 1.2801e-04,
          5.9324e-02, 5.2804e-03],
         [9.1873e-01, 4.4750e-04, 8.5479e-02,  ..., 1.2801e-04,
          5.9324e-02, 9.8416e-01],
         [2.7859e-02, 9.9866e-01, 6.6376e-01,  ..., 9.9962e-01,
          6.6011e-02, 5.2804e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8714e-01, 3.8232e-03, 5.6813e-03,  ..., 7.5366e-04,
          9.8343e-04, 9.9803e-01],
         [4.2853e-03, 3.8232e-03, 5.6813e-03,  ..., 1.1671e-03,
          1.6535e-03, 7.1729e-04],
         [4.2853e-03, 3.8232e-03, 5.6813e-03,  ..., 9.9733e-01,
          9.9638e-01, 6.2707e-04],
         [4.2853e-03, 9.8853e-01, 9.8296e-01,  ..., 7.5366e-04,
          9.8343e-04, 6.2707e-04]],
        [[9.8027e-01, 5.3965e-03, 2.0010e-02,  ..., 1.8121e-03,
          3.0771e-01, 9.2830e-02],
         [6.5752e-03, 5.3965e-03, 2.0010e-02,  ..., 2.6460e-03,
          1.9354e-01, 8.5035e-02],
         [6.5752e-03, 5.3965e-03, 2.0010e-02,  ..., 9.9373e-01,
          1.9354e-01, 7.2329e-01],
         [6.5752e-03, 9.8381e-01, 9.3997e-01,  ..., 1.8121e-03,
          3.0520e-01, 9.8849e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7031e-02, 3.4894e-03, 2.0937e-04,  ..., 1.6824e-02,
          2.8451e-02, 1.9330e-02],
         [3.6942e-02, 3.4894e-03, 2.0937e-04,  ..., 1.6824e-02,
          2.8451e-02, 1.9330e-02],
         [8.8520e-01, 3.4894e-03, 2.0937e-04,  ..., 9.4953e-01,
          2.8451e-02, 9.4201e-01],
         [4.0827e-02, 9.8953e-01, 9.9937e-01,  ..., 1.6824e-02,
          9.1465e-01, 1.9330e-02]],
        [[1.6095e-02, 1.3461e-04, 1.3260e-01,  ..., 4.3336e-03,
          6.8414e-01, 5.9624e-03],
         [1.6667e-02, 1.3461e-04, 1.1870e-01,  ..., 4.3336e-03,
          1.0529e-01, 5.9624e-03],
         [9.5114e-01, 1.3461e-04, 1.1870e-01,  ..., 4.3336e-03,
          1.0529e-01, 9.8211e-01],
         [1.6095e-02, 9.9960e-01, 6.2999e-01,  ..., 9.8700e-01,
          1.0529e-01, 5.9624e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:44,976 [Process: 0] Synchronize training processes
2024-08-18 15:15:44,976 [Process: 0] Evaluating...
2024-08-18 15:15:44,978 [Process: 0] EPOCH 170:
2024-08-18 15:15:44,980 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:46,114 [Process: 0] Synchronize training processes
2024-08-18 15:15:46,115 [Process: 0] Evaluating...
2024-08-18 15:15:46,116 [Process: 0] EPOCH 171:
2024-08-18 15:15:46,118 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9170e-01, 6.8248e-03, 1.2367e-02,  ..., 9.2580e-03,
          7.3995e-03, 9.9859e-01],
         [2.8010e-03, 6.8248e-03, 1.2367e-02,  ..., 1.4330e-02,
          7.3995e-03, 4.7140e-04],
         [2.7510e-03, 6.8248e-03, 1.2367e-02,  ..., 9.6715e-01,
          9.7780e-01, 4.7140e-04],
         [2.7510e-03, 9.7953e-01, 9.6290e-01,  ..., 9.2580e-03,
          7.3995e-03, 4.7140e-04]],
        [[9.8192e-01, 1.2163e-02, 1.2203e-02,  ..., 4.0407e-03,
          1.6334e-01, 3.2264e-03],
         [6.8596e-03, 1.2163e-02, 1.2203e-02,  ..., 4.0407e-03,
          1.6334e-01, 3.2264e-03],
         [5.6083e-03, 1.2163e-02, 1.2203e-02,  ..., 9.8788e-01,
          2.8833e-01, 9.9032e-01],
         [5.6083e-03, 9.6351e-01, 9.6339e-01,  ..., 4.0407e-03,
          3.8498e-01, 3.2264e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.8661e-03, 1.1374e-02, 3.0560e-03,  ..., 1.4647e-02,
          4.0171e-03, 2.7604e-02],
         [8.8661e-03, 1.1374e-02, 3.0560e-03,  ..., 1.8421e-02,
          4.0171e-03, 2.5895e-02],
         [9.7340e-01, 1.1374e-02, 3.0560e-03,  ..., 9.5229e-01,
          4.0171e-03, 9.1337e-01],
         [8.8661e-03, 9.6588e-01, 9.9083e-01,  ..., 1.4647e-02,
          9.8795e-01, 3.3132e-02]],
        [[2.1682e-02, 5.1389e-04, 3.6898e-01,  ..., 5.4542e-04,
          7.1482e-01, 1.8402e-02],
         [2.5948e-02, 5.1389e-04, 8.4625e-02,  ..., 5.4542e-04,
          9.5060e-02, 1.8402e-02],
         [9.2894e-01, 5.1389e-04, 8.4625e-02,  ..., 5.4542e-04,
          9.5060e-02, 9.4424e-01],
         [2.3432e-02, 9.9846e-01, 4.6177e-01,  ..., 9.9836e-01,
          9.5060e-02, 1.8958e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5620e-01, 5.5784e-03, 7.1188e-03,  ..., 6.2780e-03,
          7.9405e-03, 9.9744e-01],
         [1.4600e-02, 5.5784e-03, 7.1188e-03,  ..., 1.0596e-02,
          7.9405e-03, 8.5290e-04],
         [1.4600e-02, 5.5784e-03, 7.1188e-03,  ..., 9.7685e-01,
          9.7618e-01, 8.5290e-04],
         [1.4600e-02, 9.8326e-01, 9.7864e-01,  ..., 6.2780e-03,
          7.9405e-03, 8.5290e-04]],
        [[9.9777e-01, 1.1964e-02, 1.3517e-02,  ..., 2.6933e-03,
          2.0033e-01, 2.9089e-03],
         [7.4280e-04, 1.1964e-02, 1.3517e-02,  ..., 4.9928e-03,
          2.0033e-01, 8.6115e-03],
         [7.4280e-04, 1.1964e-02, 1.3517e-02,  ..., 9.8962e-01,
          2.0033e-01, 9.8557e-01],
         [7.4280e-04, 9.6411e-01, 9.5945e-01,  ..., 2.6933e-03,
          3.9902e-01, 2.9089e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0138, 0.0011, 0.0040,  ..., 0.0017, 0.0057, 0.0318],
         [0.0127, 0.0011, 0.0040,  ..., 0.0018, 0.0057, 0.0318],
         [0.9609, 0.0011, 0.0040,  ..., 0.9948, 0.0057, 0.8994],
         [0.0127, 0.9966, 0.9881,  ..., 0.0017, 0.9828, 0.0370]],
        [[0.0100, 0.0016, 0.0416,  ..., 0.0098, 0.7120, 0.0196],
         [0.0100, 0.0016, 0.0416,  ..., 0.0098, 0.0960, 0.0182],
         [0.9701, 0.0016, 0.0416,  ..., 0.0098, 0.0960, 0.9426],
         [0.0100, 0.9952, 0.8751,  ..., 0.9706, 0.0960, 0.0196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:47,247 [Process: 0] Synchronize training processes
2024-08-18 15:15:47,247 [Process: 0] Evaluating...
2024-08-18 15:15:47,251 [Process: 0] EPOCH 172:
2024-08-18 15:15:47,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:48,382 [Process: 0] Synchronize training processes
2024-08-18 15:15:48,382 [Process: 0] Evaluating...
2024-08-18 15:15:48,384 [Process: 0] EPOCH 173:
2024-08-18 15:15:48,386 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6974e-01, 9.2377e-03, 1.0974e-02,  ..., 4.4073e-04,
          1.5428e-02, 9.6151e-01],
         [9.9667e-03, 9.2377e-03, 1.0974e-02,  ..., 4.6931e-04,
          1.8100e-02, 1.2858e-02],
         [1.0326e-02, 1.0327e-02, 1.0974e-02,  ..., 9.9865e-01,
          9.5104e-01, 1.2816e-02],
         [9.9667e-03, 9.7120e-01, 9.6708e-01,  ..., 4.4073e-04,
          1.5428e-02, 1.2816e-02]],
        [[9.9697e-01, 1.6073e-02, 4.0937e-03,  ..., 1.9420e-02,
          1.9026e-01, 2.0095e-03],
         [1.0087e-03, 1.6073e-02, 4.0937e-03,  ..., 1.9420e-02,
          1.9026e-01, 3.4954e-03],
         [1.0087e-03, 1.6583e-02, 4.0937e-03,  ..., 9.4174e-01,
          1.9026e-01, 9.9249e-01],
         [1.0087e-03, 9.5127e-01, 9.8772e-01,  ..., 1.9420e-02,
          4.2921e-01, 2.0095e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7513e-02, 3.3573e-03, 3.4865e-04,  ..., 3.7927e-03,
          1.2966e-02, 2.5236e-02],
         [2.0618e-02, 3.3573e-03, 3.4865e-04,  ..., 3.9912e-03,
          1.2966e-02, 2.6350e-02],
         [9.2754e-01, 3.3573e-03, 3.4865e-04,  ..., 9.8844e-01,
          1.2966e-02, 9.2139e-01],
         [2.4326e-02, 9.8993e-01, 9.9895e-01,  ..., 3.7795e-03,
          9.6110e-01, 2.7020e-02]],
        [[8.7238e-03, 2.7311e-03, 1.1233e-02,  ..., 1.4997e-03,
          8.0475e-01, 2.6727e-02],
         [1.0263e-02, 2.7311e-03, 1.1233e-02,  ..., 1.4997e-03,
          6.5084e-02, 2.2261e-02],
         [9.7270e-01, 2.7311e-03, 1.1233e-02,  ..., 1.4997e-03,
          6.5084e-02, 9.1665e-01],
         [8.3179e-03, 9.9181e-01, 9.6630e-01,  ..., 9.9550e-01,
          6.5084e-02, 3.4365e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6284e-01, 1.6525e-02, 7.8306e-03,  ..., 1.1050e-02,
          2.2119e-02, 9.7261e-01],
         [1.2385e-02, 1.6525e-02, 7.8306e-03,  ..., 1.1050e-02,
          1.9393e-02, 9.1304e-03],
         [1.2385e-02, 1.6525e-02, 7.8306e-03,  ..., 9.6685e-01,
          9.3910e-01, 9.1304e-03],
         [1.2385e-02, 9.5043e-01, 9.7651e-01,  ..., 1.1050e-02,
          1.9393e-02, 9.1304e-03]],
        [[9.9866e-01, 2.1018e-02, 6.1489e-03,  ..., 1.9530e-03,
          1.7279e-01, 2.6983e-03],
         [4.4649e-04, 2.1018e-02, 6.1489e-03,  ..., 2.8001e-03,
          1.7279e-01, 2.7194e-03],
         [4.4649e-04, 2.1018e-02, 6.1489e-03,  ..., 9.9329e-01,
          3.3292e-01, 9.9188e-01],
         [4.4649e-04, 9.3695e-01, 9.8155e-01,  ..., 1.9530e-03,
          3.2150e-01, 2.6983e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:15:49,523 [Process: 0] Synchronize training processes
2024-08-18 15:15:49,523 [Process: 0] Evaluating...
2024-08-18 15:15:49,526 [Process: 0] EPOCH 174:
2024-08-18 15:15:49,528 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:50,663 [Process: 0] Synchronize training processes
2024-08-18 15:15:50,663 [Process: 0] Evaluating...
2024-08-18 15:15:50,665 [Process: 0] EPOCH 175:
2024-08-18 15:15:50,666 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3014e-02, 6.2098e-03, 6.6201e-04,  ..., 2.7653e-02,
          2.0128e-02, 9.6330e-03],
         [1.3014e-02, 6.2098e-03, 6.6201e-04,  ..., 2.5567e-02,
          2.0128e-02, 9.6330e-03],
         [9.6096e-01, 6.2098e-03, 6.6201e-04,  ..., 9.2121e-01,
          2.0128e-02, 9.7110e-01],
         [1.3014e-02, 9.8137e-01, 9.9801e-01,  ..., 2.5567e-02,
          9.3962e-01, 9.6330e-03]],
        [[2.2096e-02, 1.7756e-03, 1.1691e-02,  ..., 1.7466e-03,
          9.4125e-01, 9.3993e-03],
         [2.2096e-02, 1.7756e-03, 1.1691e-02,  ..., 1.7466e-03,
          1.9584e-02, 9.6875e-03],
         [9.2646e-01, 1.7756e-03, 1.1691e-02,  ..., 1.7466e-03,
          1.9584e-02, 9.7168e-01],
         [2.9347e-02, 9.9467e-01, 9.6493e-01,  ..., 9.9476e-01,
          1.9584e-02, 9.2355e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.0458e-01, 1.6624e-02, 3.7297e-02,  ..., 6.9270e-03,
          6.8723e-02, 9.9750e-01],
         [5.2796e-02, 1.5330e-02, 3.7297e-02,  ..., 6.9270e-03,
          6.8723e-02, 8.3440e-04],
         [7.7026e-02, 1.7177e-02, 4.2725e-02,  ..., 9.7922e-01,
          7.4851e-01, 8.3440e-04],
         [6.5597e-02, 9.5087e-01, 8.8268e-01,  ..., 6.9270e-03,
          1.1405e-01, 8.3440e-04]],
        [[9.6178e-01, 1.3116e-02, 2.1991e-02,  ..., 2.9010e-03,
          3.5956e-02, 3.4510e-03],
         [1.2738e-02, 1.3116e-02, 2.1991e-02,  ..., 4.2421e-03,
          3.8735e-02, 4.1349e-03],
         [1.2738e-02, 1.3116e-02, 2.1991e-02,  ..., 9.8996e-01,
          8.8284e-01, 9.8896e-01],
         [1.2738e-02, 9.6065e-01, 9.3403e-01,  ..., 2.9010e-03,
          4.2464e-02, 3.4510e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5205e-02, 1.2064e-03, 3.9833e-03,  ..., 1.3649e-02,
          2.4278e-02, 3.5477e-03],
         [4.1613e-02, 1.2064e-03, 3.9833e-03,  ..., 1.2823e-02,
          2.4278e-02, 3.5477e-03],
         [8.3769e-01, 1.2064e-03, 3.9833e-03,  ..., 9.6071e-01,
          2.4278e-02, 9.8936e-01],
         [6.5494e-02, 9.9638e-01, 9.8805e-01,  ..., 1.2823e-02,
          9.2717e-01, 3.5477e-03]],
        [[7.7771e-03, 5.1831e-04, 3.2132e-03,  ..., 2.3161e-03,
          9.2273e-01, 2.3033e-02],
         [7.7771e-03, 5.1831e-04, 3.2132e-03,  ..., 2.3161e-03,
          2.5757e-02, 1.8382e-02],
         [9.7667e-01, 5.1831e-04, 3.2132e-03,  ..., 2.3161e-03,
          2.5757e-02, 9.3764e-01],
         [7.7771e-03, 9.9845e-01, 9.9036e-01,  ..., 9.9305e-01,
          2.5757e-02, 2.0943e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9593, 0.0104, 0.0027,  ..., 0.0016, 0.0090, 0.9470],
         [0.0124, 0.0104, 0.0027,  ..., 0.0029, 0.0090, 0.0207],
         [0.0168, 0.0104, 0.0027,  ..., 0.9939, 0.9731, 0.0161],
         [0.0114, 0.9687, 0.9918,  ..., 0.0016, 0.0090, 0.0161]],
        [[0.9689, 0.0209, 0.0020,  ..., 0.1179, 0.1888, 0.0035],
         [0.0089, 0.0209, 0.0020,  ..., 0.0917, 0.1888, 0.0040],
         [0.0142, 0.0209, 0.0020,  ..., 0.5187, 0.1888, 0.9891],
         [0.0080, 0.9372, 0.9941,  ..., 0.2717, 0.4336, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:51,805 [Process: 0] Synchronize training processes
2024-08-18 15:15:51,805 [Process: 0] Evaluating...
2024-08-18 15:15:51,807 [Process: 0] EPOCH 176:
2024-08-18 15:15:51,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6413e-03, 3.5700e-03, 3.6873e-03,  ..., 1.0756e-02,
          5.9810e-03, 3.9010e-03],
         [3.6413e-03, 3.5700e-03, 3.6873e-03,  ..., 1.2691e-02,
          5.9810e-03, 3.9010e-03],
         [9.8908e-01, 3.5700e-03, 3.6873e-03,  ..., 9.6580e-01,
          5.9810e-03, 9.8830e-01],
         [3.6413e-03, 9.8929e-01, 9.8894e-01,  ..., 1.0756e-02,
          9.8206e-01, 3.9010e-03]],
        [[8.1483e-03, 1.0549e-03, 3.8657e-04,  ..., 1.3767e-02,
          8.3847e-01, 1.1142e-02],
         [8.1483e-03, 1.0549e-03, 3.8657e-04,  ..., 1.3767e-02,
          5.3844e-02, 1.1142e-02],
         [9.7556e-01, 1.0549e-03, 3.8657e-04,  ..., 1.3767e-02,
          5.3844e-02, 9.6658e-01],
         [8.1483e-03, 9.9684e-01, 9.9884e-01,  ..., 9.5870e-01,
          5.3844e-02, 1.1142e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6418e-01, 1.2510e-02, 1.3922e-02,  ..., 8.6572e-04,
          2.9435e-02, 9.9316e-01],
         [1.4036e-02, 1.2510e-02, 1.3922e-02,  ..., 2.2551e-03,
          2.9435e-02, 2.2790e-03],
         [1.1247e-02, 1.2510e-02, 1.3922e-02,  ..., 9.9601e-01,
          9.0797e-01, 2.2790e-03],
         [1.0540e-02, 9.6247e-01, 9.5823e-01,  ..., 8.6572e-04,
          3.3162e-02, 2.2790e-03]],
        [[9.4421e-01, 7.7368e-03, 9.2207e-03,  ..., 2.9528e-02,
          1.4344e-01, 2.1993e-03],
         [1.9963e-02, 7.7368e-03, 9.2207e-03,  ..., 3.0757e-02,
          1.4344e-01, 2.8713e-03],
         [1.8179e-02, 7.9274e-03, 9.2207e-03,  ..., 9.1019e-01,
          2.0636e-01, 9.9273e-01],
         [1.7647e-02, 9.7660e-01, 9.7234e-01,  ..., 2.9528e-02,
          5.0676e-01, 2.1993e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1760e-02, 5.7569e-04, 4.0648e-03,  ..., 1.3598e-02,
          1.7898e-03, 2.2512e-02],
         [1.1760e-02, 5.7569e-04, 4.0648e-03,  ..., 1.3598e-02,
          1.7898e-03, 1.8552e-02],
         [9.6472e-01, 5.7569e-04, 4.0648e-03,  ..., 9.5920e-01,
          1.7898e-03, 9.4038e-01],
         [1.1760e-02, 9.9827e-01, 9.8781e-01,  ..., 1.3598e-02,
          9.9463e-01, 1.8552e-02]],
        [[2.6288e-02, 1.1837e-03, 3.7839e-04,  ..., 7.6129e-04,
          9.2321e-01, 1.9645e-02],
         [2.9053e-02, 1.1837e-03, 3.7839e-04,  ..., 7.6129e-04,
          2.5596e-02, 1.9645e-02],
         [9.1854e-01, 1.1837e-03, 3.7839e-04,  ..., 7.6129e-04,
          2.5596e-02, 9.3894e-01],
         [2.6121e-02, 9.9645e-01, 9.9886e-01,  ..., 9.9772e-01,
          2.5596e-02, 2.1767e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9762e-01, 2.8535e-02, 2.6257e-03,  ..., 1.5959e-02,
          8.8800e-02, 9.9715e-01],
         [8.7763e-04, 2.3877e-02, 2.6257e-03,  ..., 1.5959e-02,
          8.8800e-02, 1.0244e-03],
         [7.4905e-04, 2.5954e-02, 2.6257e-03,  ..., 9.5212e-01,
          4.9332e-01, 9.1517e-04],
         [7.4905e-04, 9.2163e-01, 9.9212e-01,  ..., 1.5959e-02,
          3.2908e-01, 9.1517e-04]],
        [[9.9123e-01, 2.6400e-02, 5.1745e-03,  ..., 1.0328e-03,
          2.3678e-01, 1.8081e-03],
         [3.3102e-03, 2.6400e-02, 5.1745e-03,  ..., 1.0328e-03,
          2.3678e-01, 1.9722e-03],
         [2.9861e-03, 3.2090e-02, 5.1745e-03,  ..., 9.9690e-01,
          2.3678e-01, 9.9441e-01],
         [2.4716e-03, 9.1511e-01, 9.8448e-01,  ..., 1.0328e-03,
          2.8967e-01, 1.8081e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:52,946 [Process: 0] Synchronize training processes
2024-08-18 15:15:52,947 [Process: 0] Evaluating...
2024-08-18 15:15:52,948 [Process: 0] EPOCH 177:
2024-08-18 15:15:52,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:54,088 [Process: 0] Synchronize training processes
2024-08-18 15:15:54,088 [Process: 0] Evaluating...
2024-08-18 15:15:54,090 [Process: 0] EPOCH 178:
2024-08-18 15:15:54,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6099e-02, 1.6435e-03, 4.4058e-04,  ..., 2.1155e-02,
          6.9416e-03, 1.2900e-02],
         [2.6099e-02, 1.6435e-03, 4.4058e-04,  ..., 2.1155e-02,
          6.9416e-03, 1.2900e-02],
         [9.2170e-01, 1.6435e-03, 4.4058e-04,  ..., 9.3653e-01,
          6.9416e-03, 9.6130e-01],
         [2.6099e-02, 9.9507e-01, 9.9868e-01,  ..., 2.1155e-02,
          9.7918e-01, 1.2900e-02]],
        [[2.6016e-02, 9.6063e-04, 5.7969e-04,  ..., 1.3589e-03,
          8.8109e-01, 1.0904e-02],
         [2.6016e-02, 9.6063e-04, 5.7969e-04,  ..., 1.3589e-03,
          3.9638e-02, 1.0904e-02],
         [9.2011e-01, 9.6063e-04, 5.7969e-04,  ..., 1.3589e-03,
          3.9638e-02, 9.6729e-01],
         [2.7858e-02, 9.9712e-01, 9.9826e-01,  ..., 9.9592e-01,
          3.9638e-02, 1.0904e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9947, 0.0057, 0.0296,  ..., 0.0016, 0.0205, 0.9411],
         [0.0018, 0.0057, 0.0296,  ..., 0.0021, 0.0205, 0.0186],
         [0.0017, 0.0057, 0.0296,  ..., 0.9946, 0.9386, 0.0179],
         [0.0017, 0.9830, 0.9111,  ..., 0.0016, 0.0205, 0.0224]],
        [[0.9962, 0.0091, 0.0161,  ..., 0.0014, 0.2595, 0.0119],
         [0.0014, 0.0091, 0.0161,  ..., 0.0023, 0.1573, 0.0128],
         [0.0012, 0.0091, 0.0161,  ..., 0.9949, 0.2605, 0.9634],
         [0.0012, 0.9728, 0.9516,  ..., 0.0014, 0.3227, 0.0119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.7283e-03, 3.4377e-03, 6.1678e-04,  ..., 1.2305e-02,
          2.1600e-02, 2.5713e-02],
         [8.7283e-03, 3.4377e-03, 6.1678e-04,  ..., 1.2305e-02,
          2.1600e-02, 2.2227e-02],
         [9.7382e-01, 3.4377e-03, 6.1678e-04,  ..., 9.6308e-01,
          2.1600e-02, 9.2997e-01],
         [8.7283e-03, 9.8969e-01, 9.9815e-01,  ..., 1.2305e-02,
          9.3520e-01, 2.2090e-02]],
        [[2.3835e-02, 1.6947e-03, 5.3873e-03,  ..., 1.0725e-03,
          9.3408e-01, 1.9725e-02],
         [2.3835e-02, 1.6947e-03, 5.3873e-03,  ..., 1.0725e-03,
          2.1973e-02, 1.9725e-02],
         [9.2694e-01, 1.6947e-03, 5.3873e-03,  ..., 1.0725e-03,
          2.1973e-02, 9.4082e-01],
         [2.5384e-02, 9.9492e-01, 9.8384e-01,  ..., 9.9678e-01,
          2.1973e-02, 1.9725e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:55,228 [Process: 0] Synchronize training processes
2024-08-18 15:15:55,228 [Process: 0] Evaluating...
2024-08-18 15:15:55,230 [Process: 0] EPOCH 179:
2024-08-18 15:15:55,232 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:56,367 [Process: 0] Synchronize training processes
2024-08-18 15:15:56,368 [Process: 0] Evaluating...
2024-08-18 15:15:56,370 [Process: 0] EPOCH 180:
2024-08-18 15:15:56,371 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.9153e-01, 7.9803e-03, 6.0070e-03,  ..., 3.2986e-03,
          1.6724e-02, 9.9803e-01],
         [3.9567e-02, 7.9803e-03, 6.0070e-03,  ..., 4.2806e-03,
          2.0933e-02, 7.1255e-04],
         [3.4451e-02, 7.9803e-03, 6.0070e-03,  ..., 9.8912e-01,
          9.4562e-01, 6.2758e-04],
         [3.4451e-02, 9.7606e-01, 9.8198e-01,  ..., 3.2986e-03,
          1.6724e-02, 6.2758e-04]],
        [[9.8949e-01, 7.1768e-03, 7.5515e-03,  ..., 3.1237e-03,
          1.2226e-01, 3.3308e-03],
         [3.5708e-03, 7.1768e-03, 6.8757e-03,  ..., 3.6236e-03,
          1.2226e-01, 4.2259e-03],
         [3.5991e-03, 7.1768e-03, 6.8757e-03,  ..., 9.9013e-01,
          1.4283e-01, 9.8911e-01],
         [3.3449e-03, 9.7847e-01, 9.7870e-01,  ..., 3.1237e-03,
          6.1266e-01, 3.3308e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0027, 0.0016, 0.0014,  ..., 0.0031, 0.0114, 0.0138],
         [0.0029, 0.0016, 0.0014,  ..., 0.0031, 0.0114, 0.0153],
         [0.9917, 0.0016, 0.0014,  ..., 0.9907, 0.0114, 0.9570],
         [0.0027, 0.9951, 0.9958,  ..., 0.0031, 0.9658, 0.0138]],
        [[0.0263, 0.0039, 0.0065,  ..., 0.0026, 0.9344, 0.0083],
         [0.0263, 0.0039, 0.0065,  ..., 0.0026, 0.0219, 0.0083],
         [0.9210, 0.0039, 0.0065,  ..., 0.0026, 0.0219, 0.9752],
         [0.0263, 0.9883, 0.9806,  ..., 0.9923, 0.0219, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9674e-01, 9.2687e-03, 6.6339e-03,  ..., 4.5841e-03,
          2.0334e-02, 9.9308e-01],
         [1.1119e-03, 9.2687e-03, 6.6207e-03,  ..., 5.3570e-03,
          2.0334e-02, 2.5585e-03],
         [1.0727e-03, 9.2687e-03, 6.6207e-03,  ..., 9.8547e-01,
          9.3318e-01, 2.1826e-03],
         [1.0727e-03, 9.7219e-01, 9.8012e-01,  ..., 4.5841e-03,
          2.6148e-02, 2.1826e-03]],
        [[6.5150e-01, 1.1042e-02, 5.4600e-03,  ..., 9.1818e-04,
          1.5709e-01, 2.5531e-02],
         [7.4002e-02, 1.1042e-02, 5.4600e-03,  ..., 9.1818e-04,
          1.5709e-01, 2.9686e-02],
         [2.0049e-01, 1.1042e-02, 5.4600e-03,  ..., 9.9725e-01,
          1.6808e-01, 9.1925e-01],
         [7.4002e-02, 9.6687e-01, 9.8362e-01,  ..., 9.1818e-04,
          5.1773e-01, 2.5531e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.7068e-03, 3.7501e-03, 1.6490e-03,  ..., 2.2994e-03,
          1.7047e-03, 7.6059e-03],
         [7.7068e-03, 2.6414e-03, 1.6490e-03,  ..., 2.5255e-03,
          1.7047e-03, 7.6059e-03],
         [9.7688e-01, 2.6414e-03, 1.6490e-03,  ..., 9.9288e-01,
          1.7047e-03, 9.7718e-01],
         [7.7068e-03, 9.9097e-01, 9.9505e-01,  ..., 2.2994e-03,
          9.9489e-01, 7.6059e-03]],
        [[2.3028e-02, 1.1994e-03, 1.7094e-02,  ..., 8.4608e-04,
          9.6598e-01, 1.4241e-02],
         [2.3028e-02, 1.1994e-03, 1.7094e-02,  ..., 8.4608e-04,
          1.1102e-02, 1.4241e-02],
         [9.3092e-01, 1.1994e-03, 1.7094e-02,  ..., 8.4608e-04,
          1.1102e-02, 9.5704e-01],
         [2.3028e-02, 9.9640e-01, 9.4872e-01,  ..., 9.9746e-01,
          1.1815e-02, 1.4480e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:57,497 [Process: 0] Synchronize training processes
2024-08-18 15:15:57,497 [Process: 0] Evaluating...
2024-08-18 15:15:57,499 [Process: 0] EPOCH 181:
2024-08-18 15:15:57,501 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:15:58,636 [Process: 0] Synchronize training processes
2024-08-18 15:15:58,636 [Process: 0] Evaluating...
2024-08-18 15:15:58,640 [Process: 0] EPOCH 182:
2024-08-18 15:15:58,642 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9233e-01, 4.0825e-02, 5.4701e-03,  ..., 1.2230e-03,
          1.3157e-02, 9.9734e-01],
         [2.5552e-03, 3.9564e-02, 5.4701e-03,  ..., 2.0860e-03,
          1.3157e-02, 9.0099e-04],
         [2.5552e-03, 5.7105e-02, 5.4701e-03,  ..., 9.9547e-01,
          9.5643e-01, 8.8171e-04],
         [2.5552e-03, 8.6251e-01, 9.8359e-01,  ..., 1.2230e-03,
          1.7256e-02, 8.8171e-04]],
        [[8.7629e-01, 3.0171e-02, 1.4268e-02,  ..., 1.4661e-03,
          2.1947e-01, 1.8250e-02],
         [2.5577e-02, 3.0171e-02, 1.4268e-02,  ..., 1.9660e-03,
          2.1947e-01, 1.8250e-02],
         [7.2585e-02, 3.0171e-02, 1.4620e-02,  ..., 9.9510e-01,
          2.1947e-01, 9.4525e-01],
         [2.5550e-02, 9.0949e-01, 9.5684e-01,  ..., 1.4661e-03,
          3.4159e-01, 1.8250e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0077, 0.0013, 0.0023,  ..., 0.0262, 0.2243, 0.0054],
         [0.0077, 0.0013, 0.0023,  ..., 0.0262, 0.2243, 0.0054],
         [0.9770, 0.0013, 0.0023,  ..., 0.9213, 0.2243, 0.9839],
         [0.0077, 0.9960, 0.9931,  ..., 0.0262, 0.3271, 0.0054]],
        [[0.0059, 0.0038, 0.0061,  ..., 0.0031, 0.9956, 0.0137],
         [0.0059, 0.0033, 0.0061,  ..., 0.0028, 0.0015, 0.0137],
         [0.9824, 0.0033, 0.0061,  ..., 0.0028, 0.0015, 0.9588],
         [0.0059, 0.9897, 0.9817,  ..., 0.9912, 0.0015, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9608, 0.0070, 0.0212,  ..., 0.0038, 0.0127, 0.9969],
         [0.0145, 0.0070, 0.0212,  ..., 0.0054, 0.0127, 0.0011],
         [0.0124, 0.0070, 0.0222,  ..., 0.9869, 0.9620, 0.0010],
         [0.0124, 0.9790, 0.9355,  ..., 0.0038, 0.0127, 0.0010]],
        [[0.9057, 0.0228, 0.0176,  ..., 0.0015, 0.1274, 0.0210],
         [0.0215, 0.0228, 0.0176,  ..., 0.0022, 0.1098, 0.0210],
         [0.0527, 0.0228, 0.0176,  ..., 0.9949, 0.1098, 0.9371],
         [0.0202, 0.9316, 0.9472,  ..., 0.0015, 0.6531, 0.0210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:15:59,767 [Process: 0] Synchronize training processes
2024-08-18 15:15:59,767 [Process: 0] Evaluating...
2024-08-18 15:15:59,769 [Process: 0] EPOCH 183:
2024-08-18 15:15:59,771 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:00,905 [Process: 0] Synchronize training processes
2024-08-18 15:16:00,905 [Process: 0] Evaluating...
2024-08-18 15:16:00,907 [Process: 0] EPOCH 184:
2024-08-18 15:16:00,909 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0172e-02, 4.7905e-04, 5.3278e-03,  ..., 2.9247e-02,
          2.2875e-01, 2.1783e-02],
         [1.0172e-02, 4.7905e-04, 5.3278e-03,  ..., 2.9247e-02,
          2.2875e-01, 2.1783e-02],
         [9.6948e-01, 4.7905e-04, 5.3278e-03,  ..., 9.0907e-01,
          2.2875e-01, 9.3429e-01],
         [1.0172e-02, 9.9856e-01, 9.8402e-01,  ..., 3.2439e-02,
          3.1374e-01, 2.2141e-02]],
        [[5.5943e-02, 6.5296e-04, 3.0042e-02,  ..., 3.3829e-04,
          9.8396e-01, 4.1969e-02],
         [5.2081e-02, 4.1340e-04, 3.0042e-02,  ..., 3.3829e-04,
          5.3482e-03, 4.1969e-02],
         [8.2400e-01, 4.1340e-04, 3.0042e-02,  ..., 3.3829e-04,
          5.3482e-03, 8.4907e-01],
         [6.7977e-02, 9.9852e-01, 9.0988e-01,  ..., 9.9899e-01,
          5.3482e-03, 6.6993e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8859e-01, 1.6386e-02, 3.4670e-02,  ..., 1.9138e-03,
          2.2671e-02, 9.9752e-01],
         [3.9872e-03, 1.6386e-02, 2.6914e-02,  ..., 1.9138e-03,
          2.2671e-02, 9.1628e-04],
         [3.7111e-03, 1.6386e-02, 3.9591e-02,  ..., 9.9426e-01,
          9.2207e-01, 7.8042e-04],
         [3.7111e-03, 9.5084e-01, 8.9883e-01,  ..., 1.9138e-03,
          3.2585e-02, 7.8042e-04]],
        [[9.0532e-01, 1.3472e-02, 1.1072e-02,  ..., 1.7293e-03,
          2.2502e-01, 5.9521e-02],
         [2.1417e-02, 1.3472e-02, 1.1072e-02,  ..., 2.3685e-03,
          1.6668e-01, 5.9521e-02],
         [5.0533e-02, 1.3472e-02, 1.1072e-02,  ..., 9.9417e-01,
          1.6668e-01, 8.2144e-01],
         [2.2733e-02, 9.5958e-01, 9.6679e-01,  ..., 1.7293e-03,
          4.4162e-01, 5.9521e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9114e-02, 1.7328e-03, 1.9264e-04,  ..., 2.4086e-02,
          4.7734e-04, 4.9041e-03],
         [2.7147e-02, 1.7328e-03, 1.9264e-04,  ..., 2.4086e-02,
          4.7734e-04, 4.9041e-03],
         [9.1659e-01, 1.7328e-03, 1.9264e-04,  ..., 9.2686e-01,
          4.7734e-04, 9.8529e-01],
         [2.7147e-02, 9.9480e-01, 9.9942e-01,  ..., 2.4968e-02,
          9.9857e-01, 4.9041e-03]],
        [[1.4887e-02, 2.3409e-03, 2.5279e-02,  ..., 1.7177e-03,
          9.7862e-01, 1.4931e-02],
         [1.4887e-02, 2.3409e-03, 2.0574e-02,  ..., 1.7177e-03,
          6.6952e-03, 1.4931e-02],
         [9.5534e-01, 2.3409e-03, 2.0574e-02,  ..., 1.7177e-03,
          6.6952e-03, 9.5521e-01],
         [1.4887e-02, 9.9298e-01, 9.3357e-01,  ..., 9.9485e-01,
          7.9929e-03, 1.4931e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9796, 0.0039, 0.0058,  ..., 0.0016, 0.0581, 0.9451],
         [0.0066, 0.0038, 0.0058,  ..., 0.0026, 0.0581, 0.0178],
         [0.0073, 0.0038, 0.0058,  ..., 0.9941, 0.7587, 0.0222],
         [0.0066, 0.9886, 0.9825,  ..., 0.0016, 0.1251, 0.0150]],
        [[0.9629, 0.0202, 0.0275,  ..., 0.0036, 0.1193, 0.0110],
         [0.0128, 0.0202, 0.0275,  ..., 0.0044, 0.1193, 0.0110],
         [0.0137, 0.0202, 0.0275,  ..., 0.9885, 0.1635, 0.9671],
         [0.0107, 0.9394, 0.9176,  ..., 0.0036, 0.5979, 0.0110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:02,038 [Process: 0] Synchronize training processes
2024-08-18 15:16:02,038 [Process: 0] Evaluating...
2024-08-18 15:16:02,040 [Process: 0] EPOCH 185:
2024-08-18 15:16:02,041 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1799e-02, 2.0865e-03, 1.6201e-03,  ..., 1.9848e-03,
          1.2295e-04, 2.9359e-02],
         [1.1833e-02, 2.0865e-03, 1.6201e-03,  ..., 2.0056e-03,
          1.2295e-04, 2.6238e-02],
         [9.6457e-01, 2.0865e-03, 1.6201e-03,  ..., 9.9402e-01,
          1.2295e-04, 9.1596e-01],
         [1.1799e-02, 9.9374e-01, 9.9514e-01,  ..., 1.9848e-03,
          9.9963e-01, 2.8444e-02]],
        [[1.4585e-02, 1.1008e-03, 6.3068e-02,  ..., 3.2624e-03,
          9.9876e-01, 1.7760e-02],
         [1.4585e-02, 8.3759e-04, 5.1212e-02,  ..., 3.2624e-03,
          4.3431e-04, 1.7760e-02],
         [9.5552e-01, 8.3759e-04, 5.1212e-02,  ..., 3.2624e-03,
          4.0231e-04, 9.4497e-01],
         [1.5310e-02, 9.9722e-01, 8.3451e-01,  ..., 9.9021e-01,
          4.0231e-04, 1.9506e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4148e-01, 2.4332e-03, 1.6152e-02,  ..., 9.9240e-04,
          5.4890e-03, 9.9585e-01],
         [1.9508e-02, 2.4332e-03, 1.1244e-02,  ..., 1.3631e-03,
          5.4890e-03, 1.4297e-03],
         [1.9508e-02, 2.4332e-03, 1.4027e-02,  ..., 9.9665e-01,
          9.8353e-01, 1.3626e-03],
         [1.9508e-02, 9.9270e-01, 9.5858e-01,  ..., 9.9240e-04,
          5.4890e-03, 1.3626e-03]],
        [[9.2407e-01, 6.5148e-03, 5.2854e-03,  ..., 2.5803e-04,
          3.5290e-01, 4.2384e-03],
         [2.5309e-02, 6.5148e-03, 5.2854e-03,  ..., 4.0614e-04,
          1.7301e-01, 5.2135e-03],
         [2.5309e-02, 6.5148e-03, 5.2854e-03,  ..., 9.9908e-01,
          2.8717e-01, 9.8631e-01],
         [2.5309e-02, 9.8046e-01, 9.8414e-01,  ..., 2.5803e-04,
          1.8692e-01, 4.2384e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1953e-02, 5.0767e-04, 2.8582e-04,  ..., 1.5996e-02,
          5.0540e-03, 7.5811e-03],
         [2.1953e-02, 5.0767e-04, 2.8582e-04,  ..., 1.5996e-02,
          5.0540e-03, 7.5811e-03],
         [9.3414e-01, 5.0767e-04, 2.8582e-04,  ..., 9.5201e-01,
          5.0540e-03, 9.7726e-01],
         [2.1953e-02, 9.9848e-01, 9.9914e-01,  ..., 1.5996e-02,
          9.8484e-01, 7.5811e-03]],
        [[7.1469e-03, 2.3220e-03, 1.0038e-01,  ..., 3.5907e-03,
          9.7145e-01, 2.1686e-02],
         [7.1469e-03, 2.3220e-03, 7.3161e-02,  ..., 3.5907e-03,
          9.5152e-03, 2.1686e-02],
         [9.7856e-01, 2.3220e-03, 7.3161e-02,  ..., 3.5907e-03,
          9.5152e-03, 9.2949e-01],
         [7.1469e-03, 9.9303e-01, 7.5330e-01,  ..., 9.8923e-01,
          9.5152e-03, 2.7139e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:03,176 [Process: 0] Synchronize training processes
2024-08-18 15:16:03,176 [Process: 0] Evaluating...
2024-08-18 15:16:03,178 [Process: 0] EPOCH 186:
2024-08-18 15:16:03,179 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:04,308 [Process: 0] Synchronize training processes
2024-08-18 15:16:04,308 [Process: 0] Evaluating...
2024-08-18 15:16:04,310 [Process: 0] EPOCH 187:
2024-08-18 15:16:04,312 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9392e-01, 1.8368e-02, 8.7062e-03,  ..., 8.5111e-04,
          6.6305e-03, 9.8984e-01],
         [2.0275e-03, 1.8368e-02, 8.7062e-03,  ..., 1.0439e-03,
          6.6305e-03, 3.3883e-03],
         [2.0275e-03, 1.8547e-02, 8.7062e-03,  ..., 9.9725e-01,
          9.8011e-01, 3.3883e-03],
         [2.0275e-03, 9.4472e-01, 9.7388e-01,  ..., 8.5111e-04,
          6.6305e-03, 3.3883e-03]],
        [[9.9057e-01, 8.8021e-03, 1.7120e-02,  ..., 6.3150e-03,
          2.6909e-01, 1.4216e-02],
         [3.2785e-03, 8.8021e-03, 1.7120e-02,  ..., 7.5616e-03,
          1.3121e-01, 1.7543e-02],
         [3.0775e-03, 8.8021e-03, 1.7120e-02,  ..., 9.7981e-01,
          3.0195e-01, 9.5402e-01],
         [3.0775e-03, 9.7359e-01, 9.4864e-01,  ..., 6.3150e-03,
          2.9775e-01, 1.4216e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1686e-02, 4.7152e-03, 5.1581e-04,  ..., 6.0632e-03,
          3.6187e-04, 2.8888e-02],
         [1.1686e-02, 4.7152e-03, 5.1581e-04,  ..., 6.4510e-03,
          3.6187e-04, 2.5220e-02],
         [9.6494e-01, 4.7152e-03, 5.1581e-04,  ..., 9.8142e-01,
          3.6187e-04, 9.1766e-01],
         [1.1686e-02, 9.8585e-01, 9.9845e-01,  ..., 6.0632e-03,
          9.9891e-01, 2.8232e-02]],
        [[7.9885e-03, 4.4503e-04, 1.0170e-01,  ..., 2.7657e-03,
          9.2672e-01, 7.9038e-03],
         [7.9885e-03, 4.4503e-04, 5.8885e-02,  ..., 2.7657e-03,
          2.1393e-02, 7.9038e-03],
         [9.7603e-01, 4.4503e-04, 7.6430e-02,  ..., 2.7657e-03,
          2.1393e-02, 9.7629e-01],
         [7.9885e-03, 9.9866e-01, 7.6299e-01,  ..., 9.9170e-01,
          3.0490e-02, 7.9038e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9967, 0.0038, 0.0100,  ..., 0.0036, 0.0048, 0.9752],
         [0.0011, 0.0038, 0.0100,  ..., 0.0036, 0.0048, 0.0091],
         [0.0011, 0.0038, 0.0100,  ..., 0.9891, 0.9857, 0.0078],
         [0.0011, 0.9887, 0.9699,  ..., 0.0036, 0.0048, 0.0078]],
        [[0.9923, 0.0085, 0.0109,  ..., 0.0031, 0.2089, 0.0044],
         [0.0027, 0.0085, 0.0109,  ..., 0.0031, 0.2089, 0.0068],
         [0.0025, 0.0085, 0.0109,  ..., 0.9908, 0.2089, 0.9844],
         [0.0025, 0.9745, 0.9674,  ..., 0.0031, 0.3732, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.2644e-03, 1.3570e-03, 1.8125e-03,  ..., 8.0634e-03,
          3.8148e-04, 6.9770e-03],
         [6.2644e-03, 1.3570e-03, 1.8125e-03,  ..., 8.0634e-03,
          3.8148e-04, 7.5927e-03],
         [9.8121e-01, 1.3570e-03, 1.8125e-03,  ..., 9.7581e-01,
          3.8148e-04, 9.7845e-01],
         [6.2644e-03, 9.9593e-01, 9.9456e-01,  ..., 8.0634e-03,
          9.9886e-01, 6.9770e-03]],
        [[5.2201e-03, 1.3612e-02, 8.9700e-03,  ..., 1.2185e-03,
          9.8623e-01, 4.8440e-02],
         [5.2201e-03, 1.1036e-02, 7.1343e-03,  ..., 1.2185e-03,
          4.9562e-03, 4.1600e-02],
         [9.8434e-01, 1.1036e-02, 7.1343e-03,  ..., 1.2185e-03,
          4.4047e-03, 8.4612e-01],
         [5.2201e-03, 9.6432e-01, 9.7676e-01,  ..., 9.9634e-01,
          4.4047e-03, 6.3838e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:05,454 [Process: 0] Synchronize training processes
2024-08-18 15:16:05,454 [Process: 0] Evaluating...
2024-08-18 15:16:05,456 [Process: 0] EPOCH 188:
2024-08-18 15:16:05,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:06,596 [Process: 0] Synchronize training processes
2024-08-18 15:16:06,596 [Process: 0] Evaluating...
2024-08-18 15:16:06,598 [Process: 0] EPOCH 189:
2024-08-18 15:16:06,600 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9707e-01, 7.1967e-03, 9.7173e-03,  ..., 6.5256e-04,
          4.1065e-03, 9.7162e-01],
         [9.7685e-04, 7.1967e-03, 7.6071e-03,  ..., 6.5256e-04,
          4.1065e-03, 1.0193e-02],
         [9.7685e-04, 7.1967e-03, 7.7803e-03,  ..., 9.9804e-01,
          9.8768e-01, 9.0931e-03],
         [9.7685e-04, 9.7841e-01, 9.7490e-01,  ..., 6.5256e-04,
          4.1065e-03, 9.0931e-03]],
        [[9.5941e-01, 8.7837e-03, 9.8986e-03,  ..., 4.9299e-03,
          1.4998e-01, 2.1118e-03],
         [1.3262e-02, 8.7837e-03, 8.1153e-03,  ..., 5.6382e-03,
          1.4998e-01, 2.1118e-03],
         [1.5496e-02, 8.7837e-03, 1.1091e-02,  ..., 9.8450e-01,
          1.4998e-01, 9.9366e-01],
         [1.1831e-02, 9.7365e-01, 9.7089e-01,  ..., 4.9299e-03,
          5.5005e-01, 2.1118e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.2439e-03, 1.3970e-03, 3.5352e-03,  ..., 7.8615e-03,
          7.1827e-04, 1.0944e-02],
         [7.2439e-03, 1.3970e-03, 3.5352e-03,  ..., 7.8615e-03,
          7.1827e-04, 1.0944e-02],
         [9.7827e-01, 1.3970e-03, 3.5352e-03,  ..., 9.7642e-01,
          7.1827e-04, 9.6717e-01],
         [7.2439e-03, 9.9581e-01, 9.8939e-01,  ..., 7.8615e-03,
          9.9785e-01, 1.0944e-02]],
        [[4.0824e-03, 9.1123e-03, 4.4885e-02,  ..., 2.6113e-03,
          9.7616e-01, 9.3954e-03],
         [4.0824e-03, 9.1123e-03, 1.9277e-02,  ..., 2.6113e-03,
          8.8765e-03, 9.3954e-03],
         [9.8775e-01, 9.1123e-03, 1.9277e-02,  ..., 2.6113e-03,
          7.4828e-03, 9.7181e-01],
         [4.0824e-03, 9.7266e-01, 9.1656e-01,  ..., 9.9217e-01,
          7.4828e-03, 9.3954e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8117e-01, 2.6456e-02, 9.5307e-03,  ..., 4.1259e-04,
          8.7265e-02, 9.9429e-01],
         [5.7800e-03, 2.6456e-02, 9.5307e-03,  ..., 4.1259e-04,
          8.7265e-02, 2.2989e-03],
         [7.2731e-03, 3.4824e-02, 9.7523e-03,  ..., 9.9876e-01,
          5.1981e-01, 1.7032e-03],
         [5.7800e-03, 9.1226e-01, 9.7119e-01,  ..., 4.1259e-04,
          3.0566e-01, 1.7032e-03]],
        [[9.9633e-01, 3.4501e-03, 1.0468e-02,  ..., 5.0886e-03,
          1.2121e-01, 9.3900e-03],
         [1.3421e-03, 3.4501e-03, 1.0468e-02,  ..., 5.3551e-03,
          1.1889e-01, 9.3900e-03],
         [1.1656e-03, 3.4501e-03, 1.1501e-02,  ..., 9.8447e-01,
          1.4730e-01, 9.7183e-01],
         [1.1656e-03, 9.8965e-01, 9.6756e-01,  ..., 5.0886e-03,
          6.1260e-01, 9.3900e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:07,735 [Process: 0] Synchronize training processes
2024-08-18 15:16:07,735 [Process: 0] Evaluating...
2024-08-18 15:16:07,737 [Process: 0] EPOCH 190:
2024-08-18 15:16:07,738 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:08,877 [Process: 0] Synchronize training processes
2024-08-18 15:16:08,877 [Process: 0] Evaluating...
2024-08-18 15:16:08,879 [Process: 0] EPOCH 191:
2024-08-18 15:16:08,881 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2919e-02, 1.0095e-02, 4.1527e-03,  ..., 1.4637e-02,
          7.3148e-04, 8.8669e-03],
         [2.2919e-02, 1.0095e-02, 4.1527e-03,  ..., 1.4637e-02,
          7.3148e-04, 8.8669e-03],
         [9.3124e-01, 1.0095e-02, 4.1527e-03,  ..., 9.5609e-01,
          7.3148e-04, 9.7340e-01],
         [2.2919e-02, 9.6971e-01, 9.8754e-01,  ..., 1.4637e-02,
          9.9781e-01, 8.8669e-03]],
        [[9.9756e-03, 1.2638e-03, 8.9074e-02,  ..., 7.6964e-04,
          9.5754e-01, 1.1291e-02],
         [9.9756e-03, 1.2638e-03, 6.1060e-02,  ..., 7.6964e-04,
          1.4154e-02, 1.1291e-02],
         [9.7007e-01, 1.2638e-03, 8.2598e-02,  ..., 7.6964e-04,
          1.4154e-02, 9.6406e-01],
         [9.9756e-03, 9.9621e-01, 7.6727e-01,  ..., 9.9769e-01,
          1.4154e-02, 1.3360e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8930e-01, 4.1640e-03, 1.8936e-03,  ..., 2.8082e-03,
          2.5762e-02, 9.9493e-01],
         [3.5650e-03, 4.1640e-03, 1.8936e-03,  ..., 2.8082e-03,
          2.5762e-02, 1.6914e-03],
         [3.5650e-03, 4.1640e-03, 1.8936e-03,  ..., 9.9158e-01,
          9.1425e-01, 1.6914e-03],
         [3.5650e-03, 9.8751e-01, 9.9432e-01,  ..., 2.8082e-03,
          3.4229e-02, 1.6914e-03]],
        [[9.9738e-01, 9.9945e-01, 9.9135e-01,  ..., 6.3565e-04,
          1.3477e-01, 3.2675e-02],
         [8.7484e-04, 1.8449e-04, 2.8825e-03,  ..., 6.3565e-04,
          1.4494e-01, 3.2675e-02],
         [8.7484e-04, 1.8449e-04, 2.8825e-03,  ..., 9.9809e-01,
          3.7000e-01, 9.0198e-01],
         [8.7484e-04, 1.8449e-04, 2.8825e-03,  ..., 6.3565e-04,
          3.5029e-01, 3.2675e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0146, 0.0057, 0.0032,  ..., 0.0279, 0.1094, 0.0062],
         [0.0146, 0.0057, 0.0032,  ..., 0.0279, 0.2778, 0.0062],
         [0.9563, 0.0057, 0.0032,  ..., 0.9136, 0.1094, 0.9813],
         [0.0146, 0.9828, 0.9904,  ..., 0.0306, 0.5034, 0.0062]],
        [[0.0117, 0.0051, 0.0086,  ..., 0.0051, 0.9967, 0.0034],
         [0.0117, 0.0051, 0.0054,  ..., 0.0051, 0.0011, 0.0034],
         [0.9647, 0.0051, 0.0054,  ..., 0.0051, 0.0011, 0.9897],
         [0.0119, 0.9847, 0.9805,  ..., 0.9847, 0.0011, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.2244e-01, 5.8908e-03, 1.5239e-02,  ..., 2.0671e-03,
          3.8021e-02, 9.6915e-01],
         [2.5852e-02, 5.8908e-03, 2.1498e-02,  ..., 2.0671e-03,
          3.8021e-02, 1.0282e-02],
         [2.5852e-02, 5.8908e-03, 1.5239e-02,  ..., 9.9380e-01,
          8.1950e-01, 1.0282e-02],
         [2.5852e-02, 9.8233e-01, 9.4803e-01,  ..., 2.0671e-03,
          1.0446e-01, 1.0282e-02]],
        [[9.7041e-01, 5.9151e-03, 6.2132e-03,  ..., 2.0724e-04,
          1.5085e-01, 1.5864e-03],
         [9.1975e-03, 5.9151e-03, 6.2132e-03,  ..., 2.0724e-04,
          1.7713e-01, 1.5864e-03],
         [1.1191e-02, 5.9151e-03, 6.5422e-03,  ..., 9.9938e-01,
          1.5085e-01, 9.9524e-01],
         [9.1975e-03, 9.8225e-01, 9.8103e-01,  ..., 2.0724e-04,
          5.2118e-01, 1.5864e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:10,018 [Process: 0] Synchronize training processes
2024-08-18 15:16:10,018 [Process: 0] Evaluating...
2024-08-18 15:16:10,021 [Process: 0] EPOCH 192:
2024-08-18 15:16:10,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1230e-02, 1.0875e-02, 4.0640e-03,  ..., 8.2565e-03,
          2.6324e-01, 4.4655e-02],
         [1.1230e-02, 9.0140e-03, 5.6095e-03,  ..., 8.2565e-03,
          2.3822e-01, 3.2399e-02],
         [9.6631e-01, 9.0140e-03, 4.0640e-03,  ..., 9.7523e-01,
          1.7552e-01, 8.7712e-01],
         [1.1230e-02, 9.7110e-01, 9.8626e-01,  ..., 8.2565e-03,
          3.2302e-01, 4.5827e-02]],
        [[4.8574e-03, 2.0970e-03, 6.5383e-02,  ..., 4.6567e-04,
          9.8938e-01, 2.1871e-02],
         [4.8574e-03, 2.0970e-03, 3.8425e-02,  ..., 4.6567e-04,
          3.5409e-03, 2.1871e-02],
         [9.8543e-01, 2.0970e-03, 3.8425e-02,  ..., 4.6567e-04,
          3.5409e-03, 9.3010e-01],
         [4.8574e-03, 9.9371e-01, 8.5777e-01,  ..., 9.9860e-01,
          3.5409e-03, 2.6159e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.7652e-01, 5.2843e-03, 8.6226e-03,  ..., 3.4785e-04,
          3.6882e-04, 9.8911e-01],
         [7.4495e-02, 5.2843e-03, 1.3150e-02,  ..., 3.4785e-04,
          3.6882e-04, 3.6297e-03],
         [7.4495e-02, 5.2843e-03, 8.6226e-03,  ..., 9.9896e-01,
          9.9889e-01, 3.6297e-03],
         [7.4495e-02, 9.8415e-01, 9.6960e-01,  ..., 3.4785e-04,
          3.6882e-04, 3.6297e-03]],
        [[9.8055e-01, 3.6175e-02, 6.8485e-03,  ..., 4.3022e-04,
          1.6606e-01, 9.7818e-04],
         [6.1830e-03, 3.6175e-02, 6.8485e-03,  ..., 4.3022e-04,
          1.8624e-01, 9.7818e-04],
         [7.0824e-03, 4.0065e-02, 6.8485e-03,  ..., 9.9871e-01,
          1.6606e-01, 9.9707e-01],
         [6.1830e-03, 8.8758e-01, 9.7945e-01,  ..., 4.3022e-04,
          4.8165e-01, 9.7818e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6925e-02, 5.7371e-03, 8.6798e-04,  ..., 1.4264e-02,
          1.6869e-01, 1.5990e-02],
         [3.6925e-02, 5.7371e-03, 8.6798e-04,  ..., 1.4264e-02,
          4.5569e-01, 1.5990e-02],
         [8.8858e-01, 5.7371e-03, 8.6798e-04,  ..., 9.5721e-01,
          1.6869e-01, 9.5203e-01],
         [3.7574e-02, 9.8279e-01, 9.9740e-01,  ..., 1.4264e-02,
          2.0694e-01, 1.5990e-02]],
        [[6.5514e-03, 1.9237e-03, 9.9498e-01,  ..., 8.2404e-04,
          9.9501e-01, 7.1474e-03],
         [6.5514e-03, 2.3937e-03, 1.1602e-03,  ..., 1.1357e-03,
          1.6631e-03, 7.1474e-03],
         [9.8035e-01, 1.9237e-03, 1.1602e-03,  ..., 8.2404e-04,
          1.6631e-03, 9.7856e-01],
         [6.5514e-03, 9.9376e-01, 2.6996e-03,  ..., 9.9722e-01,
          1.6631e-03, 7.1474e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:16:11,159 [Process: 0] Synchronize training processes
2024-08-18 15:16:11,159 [Process: 0] Evaluating...
2024-08-18 15:16:11,161 [Process: 0] EPOCH 193:
2024-08-18 15:16:11,163 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:12,297 [Process: 0] Synchronize training processes
2024-08-18 15:16:12,298 [Process: 0] Evaluating...
2024-08-18 15:16:12,299 [Process: 0] EPOCH 194:
2024-08-18 15:16:12,301 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9915, 0.0025, 0.0041,  ..., 0.0014, 0.0016, 0.9934],
         [0.0028, 0.0025, 0.0041,  ..., 0.0014, 0.0016, 0.0022],
         [0.0028, 0.0025, 0.0041,  ..., 0.9957, 0.9952, 0.0022],
         [0.0028, 0.9924, 0.9878,  ..., 0.0014, 0.0016, 0.0022]],
        [[0.9918, 0.0229, 0.0205,  ..., 0.0036, 0.2137, 0.0017],
         [0.0027, 0.0230, 0.0205,  ..., 0.0036, 0.2185, 0.0017],
         [0.0027, 0.0280, 0.0354,  ..., 0.9892, 0.1951, 0.9949],
         [0.0027, 0.9261, 0.9236,  ..., 0.0036, 0.3728, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6168e-03, 1.7118e-02, 7.6637e-03,  ..., 1.5993e-02,
          8.5101e-04, 5.6398e-03],
         [9.6168e-03, 1.7971e-02, 7.9738e-03,  ..., 1.5993e-02,
          1.3293e-03, 5.6398e-03],
         [9.7115e-01, 1.7118e-02, 7.6637e-03,  ..., 9.5202e-01,
          8.5101e-04, 9.8308e-01],
         [9.6168e-03, 9.4779e-01, 9.7670e-01,  ..., 1.5993e-02,
          9.9697e-01, 5.6398e-03]],
        [[5.7636e-03, 3.1169e-04, 9.9048e-01,  ..., 5.6371e-04,
          9.4154e-01, 7.2997e-03],
         [5.7636e-03, 3.1169e-04, 3.0197e-03,  ..., 5.6371e-04,
          1.9487e-02, 7.2997e-03],
         [9.8271e-01, 3.1169e-04, 3.2904e-03,  ..., 5.6371e-04,
          1.9487e-02, 9.7810e-01],
         [5.7636e-03, 9.9906e-01, 3.2092e-03,  ..., 9.9831e-01,
          1.9487e-02, 7.2997e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6196e-01, 3.8121e-03, 1.1332e-02,  ..., 1.8736e-03,
          1.2115e-03, 8.9065e-01],
         [1.2681e-02, 3.8121e-03, 1.1332e-02,  ..., 1.8736e-03,
          1.2115e-03, 3.4576e-02],
         [1.2681e-02, 3.8121e-03, 1.1575e-02,  ..., 9.9438e-01,
          9.9637e-01, 3.5609e-02],
         [1.2681e-02, 9.8856e-01, 9.6576e-01,  ..., 1.8736e-03,
          1.2115e-03, 3.9165e-02]],
        [[9.9301e-01, 3.7918e-02, 1.0901e-02,  ..., 3.9450e-03,
          2.2219e-01, 6.4021e-04],
         [2.1890e-03, 4.9719e-02, 1.0901e-02,  ..., 3.9450e-03,
          2.1086e-01, 6.4021e-04],
         [2.6156e-03, 4.7433e-02, 1.2921e-02,  ..., 9.8817e-01,
          1.6918e-01, 9.9808e-01],
         [2.1890e-03, 8.6493e-01, 9.6528e-01,  ..., 3.9450e-03,
          3.9777e-01, 6.4021e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2026e-02, 1.8159e-02, 4.1320e-04,  ..., 8.5316e-03,
          1.9892e-03, 4.9172e-03],
         [2.2026e-02, 2.8559e-02, 4.1320e-04,  ..., 8.5316e-03,
          1.9892e-03, 4.9172e-03],
         [9.3392e-01, 1.8159e-02, 4.1320e-04,  ..., 9.7441e-01,
          1.9892e-03, 9.8525e-01],
         [2.2026e-02, 9.3512e-01, 9.9876e-01,  ..., 8.5316e-03,
          9.9403e-01, 4.9172e-03]],
        [[2.3588e-02, 1.1473e-03, 8.9601e-03,  ..., 3.5365e-04,
          9.9683e-01, 2.7674e-02],
         [2.3588e-02, 1.1473e-03, 2.1663e-03,  ..., 3.7734e-04,
          1.0569e-03, 2.7674e-02],
         [9.2363e-01, 1.1473e-03, 2.1663e-03,  ..., 3.5365e-04,
          1.0569e-03, 9.0684e-01],
         [2.9198e-02, 9.9656e-01, 9.8671e-01,  ..., 9.9892e-01,
          1.0569e-03, 3.7812e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:13,438 [Process: 0] Synchronize training processes
2024-08-18 15:16:13,438 [Process: 0] Evaluating...
2024-08-18 15:16:13,440 [Process: 0] EPOCH 195:
2024-08-18 15:16:13,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:14,578 [Process: 0] Synchronize training processes
2024-08-18 15:16:14,578 [Process: 0] Evaluating...
2024-08-18 15:16:14,580 [Process: 0] EPOCH 196:
2024-08-18 15:16:14,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.6526, 0.0024, 0.0051,  ..., 0.0025, 0.0052, 0.9963],
         [0.0856, 0.0024, 0.0066,  ..., 0.0025, 0.0052, 0.0012],
         [0.0856, 0.0024, 0.0051,  ..., 0.9926, 0.9844, 0.0012],
         [0.1763, 0.9929, 0.9832,  ..., 0.0025, 0.0052, 0.0012]],
        [[0.9374, 0.0295, 0.0209,  ..., 0.0013, 0.0955, 0.0011],
         [0.0201, 0.0317, 0.0209,  ..., 0.0013, 0.0941, 0.0011],
         [0.0225, 0.0396, 0.0238,  ..., 0.9961, 0.6450, 0.9967],
         [0.0201, 0.8993, 0.9344,  ..., 0.0013, 0.1653, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0093, 0.0151, 0.0021,  ..., 0.0084, 0.0083, 0.0050],
         [0.0093, 0.0261, 0.0023,  ..., 0.0084, 0.0125, 0.0050],
         [0.9721, 0.0151, 0.0021,  ..., 0.9749, 0.0083, 0.9849],
         [0.0093, 0.9436, 0.9936,  ..., 0.0084, 0.9709, 0.0050]],
        [[0.0096, 0.0015, 0.0999,  ..., 0.0027, 0.9562, 0.0034],
         [0.0096, 0.0015, 0.0681,  ..., 0.0027, 0.0146, 0.0034],
         [0.9713, 0.0015, 0.0650,  ..., 0.0027, 0.0146, 0.9897],
         [0.0096, 0.9954, 0.7670,  ..., 0.9919, 0.0146, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.9414e-02, 1.0212e-03, 6.1084e-03,  ..., 4.1749e-02,
          4.7528e-04, 9.9052e-01],
         [3.3090e-02, 1.0212e-03, 6.1084e-03,  ..., 4.1749e-02,
          4.7528e-04, 3.1588e-03],
         [3.5383e-02, 1.0212e-03, 6.1084e-03,  ..., 8.5040e-01,
          9.9857e-01, 3.1588e-03],
         [8.8211e-01, 9.9694e-01, 9.8167e-01,  ..., 6.6104e-02,
          4.7528e-04, 3.1588e-03]],
        [[9.8432e-01, 6.2314e-02, 1.7780e-02,  ..., 1.4181e-01,
          7.9369e-01, 2.4755e-03],
         [5.2254e-03, 8.6645e-02, 1.7780e-02,  ..., 1.7229e-01,
          6.0410e-02, 2.4755e-03],
         [5.2254e-03, 9.2822e-02, 2.5253e-02,  ..., 3.7973e-01,
          8.2764e-02, 9.9257e-01],
         [5.2254e-03, 7.5822e-01, 9.3919e-01,  ..., 3.0617e-01,
          6.3134e-02, 2.4755e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:16:15,727 [Process: 0] Synchronize training processes
2024-08-18 15:16:15,728 [Process: 0] Evaluating...
2024-08-18 15:16:15,730 [Process: 0] EPOCH 197:
2024-08-18 15:16:15,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:16,871 [Process: 0] Synchronize training processes
2024-08-18 15:16:16,872 [Process: 0] Evaluating...
2024-08-18 15:16:16,874 [Process: 0] EPOCH 198:
2024-08-18 15:16:16,875 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.2729e-03, 1.9543e-02, 1.0301e-04,  ..., 1.4757e-02,
          2.2094e-03, 2.3039e-03],
         [6.2729e-03, 1.9854e-02, 1.0301e-04,  ..., 1.4757e-02,
          2.2094e-03, 2.3039e-03],
         [9.8118e-01, 1.9543e-02, 1.0301e-04,  ..., 9.5573e-01,
          2.2094e-03, 9.9309e-01],
         [6.2729e-03, 9.4106e-01, 9.9969e-01,  ..., 1.4757e-02,
          9.9337e-01, 2.3039e-03]],
        [[2.6293e-02, 8.6827e-04, 9.6483e-01,  ..., 6.5337e-04,
          9.9291e-01, 8.1373e-03],
         [2.6293e-02, 8.6827e-04, 8.9711e-03,  ..., 6.5337e-04,
          2.0087e-03, 8.1373e-03],
         [9.2112e-01, 8.6827e-04, 8.9711e-03,  ..., 6.5337e-04,
          2.0087e-03, 9.7559e-01],
         [2.6293e-02, 9.9740e-01, 1.7225e-02,  ..., 9.9804e-01,
          3.0684e-03, 8.1373e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 2.7583e-03, 1.5022e-03,  ..., 7.9817e-02,
          1.3850e-03, 9.4535e-01],
         [2.4920e-05, 2.7583e-03, 1.5022e-03,  ..., 7.2678e-02,
          1.3850e-03, 1.7527e-02],
         [2.4920e-05, 2.7583e-03, 1.5022e-03,  ..., 6.7854e-01,
          9.9585e-01, 1.9596e-02],
         [2.4920e-05, 9.9173e-01, 9.9549e-01,  ..., 1.6896e-01,
          1.3850e-03, 1.7527e-02]],
        [[9.9415e-01, 5.9092e-02, 1.5984e-02,  ..., 2.9992e-03,
          9.8976e-02, 4.4419e-04],
         [1.9513e-03, 7.1568e-02, 1.5984e-02,  ..., 2.9992e-03,
          1.0419e-01, 4.4419e-04],
         [1.9513e-03, 9.1633e-02, 1.7815e-02,  ..., 9.9100e-01,
          1.4859e-01, 9.9867e-01],
         [1.9513e-03, 7.7771e-01, 9.5022e-01,  ..., 2.9992e-03,
          6.4825e-01, 4.4419e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4415e-03, 6.7711e-03, 1.1451e-04,  ..., 1.1870e-02,
          7.1546e-03, 7.4666e-03],
         [2.4415e-03, 6.7711e-03, 1.1451e-04,  ..., 1.1870e-02,
          7.1546e-03, 7.4666e-03],
         [9.9268e-01, 6.7711e-03, 1.1451e-04,  ..., 9.6439e-01,
          7.1546e-03, 9.7760e-01],
         [2.4415e-03, 9.7969e-01, 9.9966e-01,  ..., 1.1870e-02,
          9.7854e-01, 7.4666e-03]],
        [[4.8298e-03, 2.3107e-03, 1.0060e-01,  ..., 7.0875e-05,
          1.3420e-01, 9.5913e-03],
         [4.8298e-03, 2.3107e-03, 4.2143e-02,  ..., 7.0875e-05,
          3.0404e-01, 9.5913e-03],
         [9.8551e-01, 2.3107e-03, 4.2143e-02,  ..., 7.0875e-05,
          1.3420e-01, 9.7123e-01],
         [4.8298e-03, 9.9307e-01, 8.1511e-01,  ..., 9.9979e-01,
          4.2756e-01, 9.5913e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9915e-01, 2.8746e-03, 8.3914e-03,  ..., 2.4725e-02,
          1.5113e-03, 9.2274e-01],
         [2.8455e-04, 2.8746e-03, 8.3914e-03,  ..., 2.4725e-02,
          1.5113e-03, 2.5315e-02],
         [2.8455e-04, 2.8746e-03, 8.3914e-03,  ..., 9.2582e-01,
          9.9547e-01, 2.6748e-02],
         [2.8455e-04, 9.9138e-01, 9.7483e-01,  ..., 2.4725e-02,
          1.5113e-03, 2.5199e-02]],
        [[9.4860e-01, 2.6561e-02, 1.3965e-02,  ..., 3.1559e-03,
          1.1208e-01, 4.5300e-05],
         [1.7134e-02, 2.7539e-02, 1.3965e-02,  ..., 3.1559e-03,
          1.3486e-01, 4.5300e-05],
         [1.7134e-02, 2.8885e-02, 1.3965e-02,  ..., 9.9053e-01,
          2.3948e-01, 9.9986e-01],
         [1.7134e-02, 9.1702e-01, 9.5811e-01,  ..., 3.1559e-03,
          5.1357e-01, 4.5300e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:18,011 [Process: 0] Synchronize training processes
2024-08-18 15:16:18,011 [Process: 0] Evaluating...
2024-08-18 15:16:18,013 [Process: 0] EPOCH 199:
2024-08-18 15:16:18,015 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5526e-03, 3.0531e-02, 4.0703e-04,  ..., 2.9356e-02,
          5.4812e-03, 7.7142e-03],
         [3.5526e-03, 3.9910e-02, 4.0703e-04,  ..., 2.9356e-02,
          5.4812e-03, 7.7142e-03],
         [9.8934e-01, 3.0531e-02, 4.0703e-04,  ..., 9.1193e-01,
          5.4812e-03, 9.7686e-01],
         [3.5526e-03, 8.9903e-01, 9.9878e-01,  ..., 2.9356e-02,
          9.8356e-01, 7.7142e-03]],
        [[7.7655e-03, 4.2820e-04, 9.2041e-03,  ..., 4.2119e-04,
          8.6927e-01, 2.1891e-03],
         [7.7655e-03, 4.2820e-04, 9.2041e-03,  ..., 4.2119e-04,
          3.8145e-02, 2.1891e-03],
         [9.7670e-01, 4.2820e-04, 9.7239e-01,  ..., 4.2119e-04,
          3.8145e-02, 9.9343e-01],
         [7.7655e-03, 9.9872e-01, 9.2041e-03,  ..., 9.9874e-01,
          5.4442e-02, 2.1891e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9995e-01, 2.9001e-03, 7.6904e-03,  ..., 1.1024e-03,
          9.1688e-04, 9.6175e-01],
         [1.7513e-05, 2.9001e-03, 7.6904e-03,  ..., 1.1024e-03,
          9.1688e-04, 1.4342e-02],
         [1.7513e-05, 2.9001e-03, 7.6904e-03,  ..., 9.9669e-01,
          9.9725e-01, 1.1953e-02],
         [1.7513e-05, 9.9130e-01, 9.7693e-01,  ..., 1.1024e-03,
          9.1688e-04, 1.1953e-02]],
        [[8.7058e-01, 2.9306e-02, 6.6502e-03,  ..., 1.7211e-03,
          1.1256e-01, 6.9955e-04],
         [3.8822e-02, 2.9306e-02, 6.6056e-03,  ..., 1.7211e-03,
          1.4141e-01, 6.9955e-04],
         [5.1778e-02, 2.9306e-02, 6.6056e-03,  ..., 9.9484e-01,
          1.9247e-01, 9.9790e-01],
         [3.8822e-02, 9.1208e-01, 9.8014e-01,  ..., 1.7211e-03,
          5.5355e-01, 6.9955e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1704e-02, 6.6491e-03, 8.5946e-04,  ..., 2.8925e-02,
          3.7844e-03, 1.6155e-02],
         [3.1704e-02, 6.6491e-03, 8.5946e-04,  ..., 2.8925e-02,
          3.7844e-03, 1.6155e-02],
         [9.0230e-01, 6.6491e-03, 8.5946e-04,  ..., 9.0896e-01,
          3.7844e-03, 9.5153e-01],
         [3.4297e-02, 9.8005e-01, 9.9742e-01,  ..., 3.3190e-02,
          9.8865e-01, 1.6155e-02]],
        [[5.0473e-03, 3.8447e-04, 9.7911e-03,  ..., 4.2436e-04,
          9.4718e-01, 8.4463e-03],
         [5.0473e-03, 3.8447e-04, 9.7911e-03,  ..., 4.2436e-04,
          1.5552e-02, 8.4463e-03],
         [9.8486e-01, 3.8447e-04, 9.7063e-01,  ..., 4.2436e-04,
          1.6582e-02, 9.7466e-01],
         [5.0473e-03, 9.9885e-01, 9.7911e-03,  ..., 9.9873e-01,
          2.0691e-02, 8.4463e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9956e-01, 1.5238e-03, 1.3563e-02,  ..., 1.4071e-03,
          6.3855e-04, 9.9172e-01],
         [1.4518e-04, 1.5238e-03, 1.3563e-02,  ..., 1.4071e-03,
          6.3855e-04, 3.5949e-03],
         [1.4518e-04, 1.5238e-03, 1.3563e-02,  ..., 9.9578e-01,
          9.9808e-01, 2.3409e-03],
         [1.4518e-04, 9.9543e-01, 9.5931e-01,  ..., 1.4071e-03,
          6.3855e-04, 2.3409e-03]],
        [[9.4470e-01, 9.8123e-03, 4.6417e-03,  ..., 2.5506e-03,
          1.4410e-01, 2.1664e-03],
         [1.5800e-02, 9.8123e-03, 4.6417e-03,  ..., 2.5506e-03,
          2.6437e-01, 2.1664e-03],
         [2.3705e-02, 9.9206e-03, 4.6417e-03,  ..., 9.9235e-01,
          2.3840e-01, 9.9350e-01],
         [1.5800e-02, 9.7045e-01, 9.8607e-01,  ..., 2.5506e-03,
          3.5314e-01, 2.1664e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:19,139 [Process: 0] Synchronize training processes
2024-08-18 15:16:19,139 [Process: 0] Evaluating...
2024-08-18 15:16:19,141 [Process: 0] EPOCH 200:
2024-08-18 15:16:19,142 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:20,277 [Process: 0] Synchronize training processes
2024-08-18 15:16:20,277 [Process: 0] Evaluating...
2024-08-18 15:16:20,279 [Process: 0] EPOCH 201:
2024-08-18 15:16:20,281 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4073e-02, 6.7208e-04, 1.0843e-03,  ..., 8.8014e-03,
          6.7681e-04, 2.0377e-02],
         [1.4073e-02, 6.7208e-04, 1.0843e-03,  ..., 8.8014e-03,
          6.7681e-04, 2.0377e-02],
         [9.5778e-01, 6.7208e-04, 1.0843e-03,  ..., 9.7360e-01,
          6.7681e-04, 9.3887e-01],
         [1.4073e-02, 9.9798e-01, 9.9675e-01,  ..., 8.8014e-03,
          9.9797e-01, 2.0377e-02]],
        [[3.0762e-03, 3.1093e-03, 3.1675e-02,  ..., 3.2537e-04,
          8.9030e-01, 6.5938e-03],
         [3.0762e-03, 3.1093e-03, 3.1675e-02,  ..., 3.2537e-04,
          2.7256e-02, 6.5938e-03],
         [9.9077e-01, 3.1093e-03, 8.8874e-01,  ..., 3.2537e-04,
          2.8079e-02, 9.8022e-01],
         [3.0762e-03, 9.9067e-01, 4.7908e-02,  ..., 9.9902e-01,
          5.4366e-02, 6.5938e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0000e+00, 2.5690e-02, 9.8558e-01,  ..., 1.4431e-03,
          8.8891e-04, 9.6844e-01],
         [1.3387e-06, 2.5690e-02, 5.9404e-03,  ..., 1.4431e-03,
          8.8891e-04, 1.1505e-02],
         [1.3387e-06, 2.5690e-02, 4.2415e-03,  ..., 9.9567e-01,
          9.9733e-01, 1.0026e-02],
         [1.3387e-06, 9.2293e-01, 4.2415e-03,  ..., 1.4431e-03,
          8.8891e-04, 1.0026e-02]],
        [[9.8232e-01, 6.9844e-03, 1.6059e-02,  ..., 3.1271e-03,
          1.5558e-01, 2.4477e-03],
         [5.8942e-03, 6.9844e-03, 1.6059e-02,  ..., 3.1271e-03,
          1.5803e-01, 2.4477e-03],
         [5.8942e-03, 6.9844e-03, 1.6059e-02,  ..., 9.9062e-01,
          3.5555e-01, 9.9266e-01],
         [5.8942e-03, 9.7905e-01, 9.5182e-01,  ..., 3.1271e-03,
          3.3084e-01, 2.4477e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0439e-02, 5.2041e-03, 1.5749e-03,  ..., 9.9190e-03,
          2.3596e-04, 1.1169e-02],
         [1.0439e-02, 5.2041e-03, 1.5749e-03,  ..., 9.9190e-03,
          2.3596e-04, 1.1169e-02],
         [9.6868e-01, 5.2041e-03, 1.5749e-03,  ..., 9.7024e-01,
          2.3596e-04, 9.6649e-01],
         [1.0439e-02, 9.8439e-01, 9.9528e-01,  ..., 9.9190e-03,
          9.9929e-01, 1.1169e-02]],
        [[5.2041e-03, 2.7031e-04, 6.8644e-03,  ..., 1.2567e-04,
          9.8693e-01, 1.7055e-02],
         [5.2041e-03, 2.7031e-04, 6.8644e-03,  ..., 1.2567e-04,
          4.3555e-03, 1.7055e-02],
         [9.8439e-01, 2.7031e-04, 9.7941e-01,  ..., 1.2567e-04,
          4.3555e-03, 9.4678e-01],
         [5.2041e-03, 9.9919e-01, 6.8644e-03,  ..., 9.9962e-01,
          4.3555e-03, 1.9114e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:21,416 [Process: 0] Synchronize training processes
2024-08-18 15:16:21,416 [Process: 0] Evaluating...
2024-08-18 15:16:21,420 [Process: 0] EPOCH 202:
2024-08-18 15:16:21,422 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:22,548 [Process: 0] Synchronize training processes
2024-08-18 15:16:22,548 [Process: 0] Evaluating...
2024-08-18 15:16:22,550 [Process: 0] EPOCH 203:
2024-08-18 15:16:22,552 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9940e-01, 1.0478e-02, 9.7738e-01,  ..., 6.1682e-04,
          4.6838e-04, 9.2618e-01],
         [2.0105e-04, 1.0478e-02, 9.2346e-03,  ..., 6.1682e-04,
          4.6838e-04, 2.1239e-02],
         [2.0105e-04, 1.0478e-02, 6.6910e-03,  ..., 9.9815e-01,
          9.9859e-01, 3.1340e-02],
         [2.0105e-04, 9.6857e-01, 6.6910e-03,  ..., 6.1682e-04,
          4.6838e-04, 2.1239e-02]],
        [[9.9098e-01, 8.9711e-03, 8.3705e-03,  ..., 5.1209e-03,
          1.2558e-01, 5.7810e-03],
         [3.0069e-03, 8.9711e-03, 8.3705e-03,  ..., 5.1209e-03,
          1.6906e-01, 5.7810e-03],
         [3.0069e-03, 8.9711e-03, 8.3705e-03,  ..., 9.8464e-01,
          2.8448e-01, 9.8266e-01],
         [3.0069e-03, 9.7309e-01, 9.7489e-01,  ..., 5.1209e-03,
          4.2087e-01, 5.7810e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3348e-02, 1.8244e-02, 3.6922e-04,  ..., 7.2065e-03,
          1.1775e-03, 1.3100e-02],
         [1.3348e-02, 2.5261e-02, 3.6922e-04,  ..., 7.2065e-03,
          1.1788e-03, 1.3100e-02],
         [9.5996e-01, 1.8244e-02, 3.6922e-04,  ..., 9.7838e-01,
          1.1775e-03, 9.6070e-01],
         [1.3348e-02, 9.3825e-01, 9.9889e-01,  ..., 7.2065e-03,
          9.9647e-01, 1.3100e-02]],
        [[1.7098e-02, 1.1630e-03, 1.2276e-02,  ..., 2.3601e-04,
          9.9631e-01, 6.4727e-03],
         [1.7098e-02, 1.1630e-03, 1.2276e-02,  ..., 2.3601e-04,
          1.2290e-03, 6.4727e-03],
         [9.4804e-01, 1.1630e-03, 9.6317e-01,  ..., 2.3601e-04,
          1.2290e-03, 9.8058e-01],
         [1.7768e-02, 9.9651e-01, 1.2276e-02,  ..., 9.9929e-01,
          1.2290e-03, 6.4727e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9919, 0.0142, 0.9934,  ..., 0.0011, 0.0027, 0.9918],
         [0.0027, 0.0187, 0.0023,  ..., 0.0011, 0.0027, 0.0027],
         [0.0027, 0.0142, 0.0022,  ..., 0.9966, 0.9918, 0.0027],
         [0.0027, 0.9529, 0.0022,  ..., 0.0011, 0.0027, 0.0027]],
        [[0.9031, 0.0160, 0.0081,  ..., 0.0048, 0.2003, 0.0011],
         [0.0152, 0.0160, 0.0081,  ..., 0.0048, 0.1215, 0.0011],
         [0.0666, 0.0160, 0.0081,  ..., 0.9855, 0.2839, 0.9967],
         [0.0152, 0.9521, 0.9756,  ..., 0.0048, 0.3943, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.2389e-03, 2.7250e-02, 1.6004e-03,  ..., 1.7661e-02,
          3.0618e-04, 1.0351e-02],
         [9.2389e-03, 6.2592e-02, 1.6004e-03,  ..., 1.7661e-02,
          3.0618e-04, 1.0351e-02],
         [9.7228e-01, 2.7250e-02, 1.6004e-03,  ..., 9.4602e-01,
          3.0618e-04, 9.6895e-01],
         [9.2389e-03, 8.8291e-01, 9.9520e-01,  ..., 1.8655e-02,
          9.9908e-01, 1.0351e-02]],
        [[1.2620e-02, 1.2977e-03, 8.1967e-03,  ..., 2.6105e-03,
          9.8056e-01, 4.0703e-03],
         [1.2620e-02, 1.2977e-03, 8.1967e-03,  ..., 2.6105e-03,
          6.4394e-03, 4.0703e-03],
         [9.6157e-01, 1.2977e-03, 9.7541e-01,  ..., 2.6105e-03,
          6.4394e-03, 9.8779e-01],
         [1.3192e-02, 9.9611e-01, 8.1967e-03,  ..., 9.9217e-01,
          6.5635e-03, 4.0703e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:23,691 [Process: 0] Synchronize training processes
2024-08-18 15:16:23,692 [Process: 0] Evaluating...
2024-08-18 15:16:23,693 [Process: 0] EPOCH 204:
2024-08-18 15:16:23,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:24,822 [Process: 0] Synchronize training processes
2024-08-18 15:16:24,822 [Process: 0] Evaluating...
2024-08-18 15:16:24,824 [Process: 0] EPOCH 205:
2024-08-18 15:16:24,826 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8968e-01, 7.5033e-03, 7.2326e-02,  ..., 2.0848e-03,
          2.1159e-03, 9.8411e-01],
         [3.4179e-03, 7.5033e-03, 7.2326e-02,  ..., 2.0848e-03,
          2.1159e-03, 5.2958e-03],
         [3.4179e-03, 7.5033e-03, 1.0759e-01,  ..., 9.9375e-01,
          9.9365e-01, 5.2958e-03],
         [3.4867e-03, 9.7749e-01, 7.4776e-01,  ..., 2.0848e-03,
          2.1159e-03, 5.2958e-03]],
        [[9.9685e-01, 6.7140e-03, 1.4430e-02,  ..., 1.0869e-02,
          3.0233e-01, 3.7899e-03],
         [8.3153e-04, 6.7140e-03, 1.4430e-02,  ..., 1.0869e-02,
          1.3425e-01, 3.7899e-03],
         [1.4910e-03, 6.7140e-03, 1.4430e-02,  ..., 9.6739e-01,
          3.0558e-01, 9.8863e-01],
         [8.3153e-04, 9.7986e-01, 9.5671e-01,  ..., 1.0869e-02,
          2.5784e-01, 3.7899e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8817e-02, 8.8274e-03, 4.7055e-03,  ..., 9.7863e-03,
          8.8915e-04, 1.1158e-02],
         [1.8817e-02, 8.8274e-03, 6.3831e-03,  ..., 9.7863e-03,
          8.8915e-04, 1.1158e-02],
         [9.4355e-01, 8.8274e-03, 4.7055e-03,  ..., 9.7064e-01,
          8.8915e-04, 9.6653e-01],
         [1.8817e-02, 9.7352e-01, 9.8421e-01,  ..., 9.7863e-03,
          9.9733e-01, 1.1158e-02]],
        [[5.4619e-03, 9.0225e-04, 1.8281e-02,  ..., 1.3523e-03,
          9.9341e-01, 6.2264e-03],
         [5.4619e-03, 9.0225e-04, 1.8281e-02,  ..., 1.3523e-03,
          2.1951e-03, 6.2264e-03],
         [9.8361e-01, 9.0225e-04, 9.3903e-01,  ..., 1.3523e-03,
          2.1951e-03, 9.8132e-01],
         [5.4619e-03, 9.9729e-01, 2.4413e-02,  ..., 9.9594e-01,
          2.1951e-03, 6.2264e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8579e-01, 4.2700e-03, 8.5548e-03,  ..., 1.7353e-04,
          2.4993e-03, 9.9596e-01],
         [4.0640e-03, 4.2700e-03, 8.5548e-03,  ..., 1.7353e-04,
          2.4993e-03, 1.3469e-03],
         [4.1663e-03, 4.2700e-03, 8.5548e-03,  ..., 9.9948e-01,
          9.9250e-01, 1.3469e-03],
         [5.9822e-03, 9.8719e-01, 9.7434e-01,  ..., 1.7353e-04,
          2.4993e-03, 1.3469e-03]],
        [[9.1375e-01, 1.8140e-02, 1.0212e-02,  ..., 1.9116e-03,
          1.2634e-01, 7.1978e-04],
         [1.7102e-02, 2.0976e-02, 1.0212e-02,  ..., 1.9116e-03,
          1.6770e-01, 7.1978e-04],
         [5.2044e-02, 1.8140e-02, 1.0212e-02,  ..., 9.9427e-01,
          2.4042e-01, 9.9784e-01],
         [1.7102e-02, 9.4274e-01, 9.6937e-01,  ..., 1.9116e-03,
          4.6553e-01, 7.1978e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:25,951 [Process: 0] Synchronize training processes
2024-08-18 15:16:25,952 [Process: 0] Evaluating...
2024-08-18 15:16:25,954 [Process: 0] EPOCH 206:
2024-08-18 15:16:25,955 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5911e-02, 8.1881e-03, 2.4455e-04,  ..., 3.4640e-02,
          2.5688e-03, 1.3032e-02],
         [1.5911e-02, 8.1881e-03, 2.4455e-04,  ..., 2.9010e-02,
          2.5688e-03, 1.3032e-02],
         [9.5227e-01, 8.1881e-03, 2.4455e-04,  ..., 9.0382e-01,
          2.5688e-03, 9.6090e-01],
         [1.5911e-02, 9.7544e-01, 9.9927e-01,  ..., 3.2528e-02,
          9.9229e-01, 1.3032e-02]],
        [[1.5440e-02, 1.2403e-03, 6.0032e-02,  ..., 4.3450e-04,
          9.7761e-01, 1.4358e-02],
         [1.5440e-02, 1.2403e-03, 6.0032e-02,  ..., 4.3450e-04,
          7.4644e-03, 1.4358e-02],
         [9.5368e-01, 1.2403e-03, 7.1684e-01,  ..., 4.3450e-04,
          7.4644e-03, 9.5693e-01],
         [1.5440e-02, 9.9628e-01, 1.6309e-01,  ..., 9.9870e-01,
          7.4644e-03, 1.4358e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.3590e-01, 1.9576e-03, 4.6176e-03,  ..., 4.2868e-04,
          1.2141e-03, 9.9575e-01],
         [3.8884e-02, 1.9576e-03, 4.6176e-03,  ..., 4.2868e-04,
          1.2141e-03, 1.4164e-03],
         [5.9006e-02, 1.9576e-03, 4.6176e-03,  ..., 9.9871e-01,
          9.9636e-01, 1.4164e-03],
         [6.6208e-02, 9.9413e-01, 9.8615e-01,  ..., 4.2868e-04,
          1.2141e-03, 1.4164e-03]],
        [[9.2645e-01, 8.4397e-03, 1.0346e-02,  ..., 1.9793e-03,
          1.2139e-01, 1.2919e-03],
         [2.1288e-02, 8.4397e-03, 1.0346e-02,  ..., 1.9793e-03,
          2.4466e-01, 1.2919e-03],
         [3.2609e-02, 8.4397e-03, 1.0346e-02,  ..., 9.9406e-01,
          2.4942e-01, 9.9612e-01],
         [1.9653e-02, 9.7468e-01, 9.6896e-01,  ..., 1.9793e-03,
          3.8453e-01, 1.2919e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3362e-02, 2.1572e-02, 3.8752e-04,  ..., 3.1183e-03,
          3.4490e-03, 1.0362e-02],
         [1.3362e-02, 2.1572e-02, 3.8752e-04,  ..., 3.1183e-03,
          3.4490e-03, 1.0362e-02],
         [9.5991e-01, 2.1572e-02, 3.8752e-04,  ..., 9.9065e-01,
          3.4490e-03, 9.6891e-01],
         [1.3362e-02, 9.3528e-01, 9.9884e-01,  ..., 3.1183e-03,
          9.8965e-01, 1.0362e-02]],
        [[9.2212e-03, 1.7881e-04, 9.2768e-02,  ..., 7.7630e-04,
          9.9790e-01, 7.3327e-03],
         [9.2212e-03, 1.7881e-04, 8.4936e-02,  ..., 7.7630e-04,
          7.0026e-04, 7.3327e-03],
         [9.7234e-01, 1.7881e-04, 5.1496e-01,  ..., 7.7630e-04,
          7.0026e-04, 9.7800e-01],
         [9.2212e-03, 9.9946e-01, 3.0733e-01,  ..., 9.9767e-01,
          7.0026e-04, 7.3327e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9754e-01, 7.6332e-03, 3.8320e-03,  ..., 1.6076e-03,
          2.8307e-03, 9.9825e-01],
         [8.2106e-04, 7.6332e-03, 3.8320e-03,  ..., 1.6076e-03,
          2.8307e-03, 5.8497e-04],
         [8.2106e-04, 7.6332e-03, 3.8320e-03,  ..., 9.9518e-01,
          9.9151e-01, 5.8497e-04],
         [8.2106e-04, 9.7710e-01, 9.8850e-01,  ..., 1.6076e-03,
          2.8307e-03, 5.8497e-04]],
        [[5.6262e-01, 2.2564e-02, 1.6847e-02,  ..., 1.2085e-03,
          1.5141e-01, 1.3251e-03],
         [7.6121e-02, 2.3472e-02, 1.6847e-02,  ..., 1.2085e-03,
          2.5261e-01, 1.3251e-03],
         [3.0280e-01, 2.2564e-02, 1.6847e-02,  ..., 9.9637e-01,
          2.2907e-01, 9.9602e-01],
         [5.8450e-02, 9.3140e-01, 9.4946e-01,  ..., 1.2085e-03,
          3.6690e-01, 1.3251e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:27,085 [Process: 0] Synchronize training processes
2024-08-18 15:16:27,085 [Process: 0] Evaluating...
2024-08-18 15:16:27,087 [Process: 0] EPOCH 207:
2024-08-18 15:16:27,089 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:28,223 [Process: 0] Synchronize training processes
2024-08-18 15:16:28,223 [Process: 0] Evaluating...
2024-08-18 15:16:28,225 [Process: 0] EPOCH 208:
2024-08-18 15:16:28,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3432e-02, 1.9672e-02, 4.5466e-04,  ..., 1.4450e-02,
          3.8059e-04, 2.0696e-02],
         [1.3432e-02, 1.9672e-02, 4.5466e-04,  ..., 1.4450e-02,
          3.8059e-04, 2.0696e-02],
         [9.5970e-01, 1.9672e-02, 4.5466e-04,  ..., 9.5665e-01,
          3.8059e-04, 9.3762e-01],
         [1.3432e-02, 9.4098e-01, 9.9864e-01,  ..., 1.4450e-02,
          9.9886e-01, 2.0987e-02]],
        [[6.5487e-03, 7.1776e-04, 1.0270e-02,  ..., 1.0871e-04,
          9.6975e-01, 1.3111e-02],
         [6.5487e-03, 7.1776e-04, 1.0270e-02,  ..., 1.0871e-04,
          1.0083e-02, 1.3111e-02],
         [9.8035e-01, 7.1776e-04, 9.6919e-01,  ..., 1.0871e-04,
          1.0083e-02, 9.6067e-01],
         [6.5487e-03, 9.9785e-01, 1.0270e-02,  ..., 9.9967e-01,
          1.0083e-02, 1.3111e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.7701e-01, 7.6047e-03, 6.1009e-03,  ..., 1.4711e-02,
          8.1132e-04, 9.9789e-01],
         [2.3809e-02, 7.6047e-03, 6.1009e-03,  ..., 1.4711e-02,
          8.1132e-04, 7.0259e-04],
         [2.3809e-02, 7.6047e-03, 6.1009e-03,  ..., 9.5587e-01,
          9.9757e-01, 7.0259e-04],
         [7.5373e-02, 9.7719e-01, 9.8170e-01,  ..., 1.4711e-02,
          8.1132e-04, 7.0259e-04]],
        [[7.3405e-01, 1.0019e-02, 1.0370e-02,  ..., 1.6235e-03,
          1.8043e-01, 7.4337e-03],
         [2.4612e-02, 1.0019e-02, 1.0370e-02,  ..., 1.6235e-03,
          1.6043e-01, 7.4337e-03],
         [2.1673e-01, 1.0019e-02, 1.0370e-02,  ..., 9.9513e-01,
          4.2171e-01, 9.7770e-01],
         [2.4612e-02, 9.6994e-01, 9.6889e-01,  ..., 1.6235e-03,
          2.3743e-01, 7.4337e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.0818e-03, 8.2944e-03, 2.1113e-03,  ..., 2.3176e-02,
          1.4475e-03, 1.9394e-02],
         [5.0818e-03, 8.2944e-03, 2.1113e-03,  ..., 2.0134e-02,
          1.4475e-03, 2.0483e-02],
         [9.8475e-01, 8.2944e-03, 2.1113e-03,  ..., 9.3656e-01,
          1.4475e-03, 9.4073e-01],
         [5.0818e-03, 9.7512e-01, 9.9367e-01,  ..., 2.0134e-02,
          9.9566e-01, 1.9394e-02]],
        [[7.0707e-03, 5.5145e-04, 3.9783e-02,  ..., 3.5750e-04,
          1.4524e-01, 1.0992e-02],
         [7.0707e-03, 5.5145e-04, 3.9783e-02,  ..., 3.5750e-04,
          6.4454e-01, 1.0992e-02],
         [9.7879e-01, 5.5145e-04, 8.1968e-01,  ..., 3.5750e-04,
          1.0511e-01, 9.6702e-01],
         [7.0707e-03, 9.9835e-01, 1.0075e-01,  ..., 9.9893e-01,
          1.0511e-01, 1.0992e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:29,353 [Process: 0] Synchronize training processes
2024-08-18 15:16:29,353 [Process: 0] Evaluating...
2024-08-18 15:16:29,355 [Process: 0] EPOCH 209:
2024-08-18 15:16:29,357 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:30,484 [Process: 0] Synchronize training processes
2024-08-18 15:16:30,484 [Process: 0] Evaluating...
2024-08-18 15:16:30,486 [Process: 0] EPOCH 210:
2024-08-18 15:16:30,488 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.3912e-01, 4.3802e-03, 2.0523e-03,  ..., 2.6679e-03,
          4.5192e-03, 9.8862e-01],
         [2.0294e-02, 4.3802e-03, 2.0523e-03,  ..., 2.6679e-03,
          4.5192e-03, 4.7697e-03],
         [2.0294e-02, 4.3802e-03, 2.0523e-03,  ..., 9.9200e-01,
          9.8644e-01, 3.3039e-03],
         [2.0294e-02, 9.8686e-01, 9.9384e-01,  ..., 2.6679e-03,
          4.5192e-03, 3.3039e-03]],
        [[4.3461e-01, 8.5895e-03, 1.8205e-02,  ..., 7.4057e-03,
          1.9232e-01, 5.2514e-04],
         [2.9479e-02, 8.5895e-03, 1.7258e-02,  ..., 7.4057e-03,
          2.4626e-01, 5.2514e-04],
         [5.0643e-01, 8.5895e-03, 2.0079e-02,  ..., 9.7778e-01,
          2.1480e-01, 9.9842e-01],
         [2.9479e-02, 9.7423e-01, 9.4446e-01,  ..., 7.4057e-03,
          3.4661e-01, 5.2514e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6189e-02, 7.0005e-04, 1.8221e-04,  ..., 2.1266e-02,
          2.7081e-02, 1.6943e-02],
         [1.6189e-02, 7.0005e-04, 1.8221e-04,  ..., 2.1266e-02,
          2.7081e-02, 1.6943e-02],
         [9.5143e-01, 7.0005e-04, 1.8221e-04,  ..., 9.3620e-01,
          2.7081e-02, 9.4917e-01],
         [1.6189e-02, 9.9790e-01, 9.9945e-01,  ..., 2.1266e-02,
          9.1876e-01, 1.6943e-02]],
        [[2.0636e-03, 1.0899e-03, 3.5957e-01,  ..., 9.2873e-04,
          9.9220e-02, 6.5676e-02],
         [2.0636e-03, 1.0899e-03, 7.0560e-02,  ..., 9.2873e-04,
          3.3055e-01, 5.0223e-02],
         [9.9381e-01, 1.0899e-03, 4.3321e-01,  ..., 9.2873e-04,
          9.9220e-02, 7.9890e-01],
         [2.0636e-03, 9.9673e-01, 1.3666e-01,  ..., 9.9721e-01,
          4.7101e-01, 8.5203e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9444e-01, 5.4717e-03, 1.4064e-02,  ..., 1.0901e-03,
          8.5355e-04, 9.0676e-01],
         [1.5387e-03, 5.4717e-03, 1.4064e-02,  ..., 1.0901e-03,
          8.5355e-04, 6.1873e-02],
         [1.5387e-03, 5.4717e-03, 1.4064e-02,  ..., 9.9673e-01,
          9.9744e-01, 1.5682e-02],
         [2.4786e-03, 9.8358e-01, 9.5781e-01,  ..., 1.0901e-03,
          8.5355e-04, 1.5682e-02]],
        [[9.8978e-01, 5.2843e-03, 1.7683e-02,  ..., 3.5167e-03,
          5.3371e-03, 9.9082e-04],
         [3.4059e-03, 5.2843e-03, 1.7683e-02,  ..., 3.5167e-03,
          5.3371e-03, 9.9082e-04],
         [3.4059e-03, 5.2843e-03, 2.0295e-02,  ..., 9.8945e-01,
          9.8399e-01, 9.9703e-01],
         [3.4059e-03, 9.8415e-01, 9.4434e-01,  ..., 3.5167e-03,
          5.3371e-03, 9.9082e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2093e-02, 1.2777e-03, 1.9053e-03,  ..., 6.5499e-03,
          2.5046e-02, 1.4350e-02],
         [1.2093e-02, 1.2777e-03, 1.9053e-03,  ..., 6.5499e-03,
          2.5046e-02, 1.4350e-02],
         [9.6372e-01, 1.2777e-03, 1.9053e-03,  ..., 9.8035e-01,
          2.5046e-02, 9.5695e-01],
         [1.2093e-02, 9.9617e-01, 9.9428e-01,  ..., 6.5499e-03,
          9.2486e-01, 1.4350e-02]],
        [[8.3306e-03, 3.2516e-03, 9.2058e-01,  ..., 8.9618e-04,
          9.6651e-01, 6.4004e-03],
         [8.3306e-03, 3.2516e-03, 2.3864e-02,  ..., 8.9618e-04,
          1.6723e-02, 6.4004e-03],
         [9.7501e-01, 3.2516e-03, 2.7356e-02,  ..., 8.9618e-04,
          8.3843e-03, 9.8080e-01],
         [8.3306e-03, 9.9025e-01, 2.8197e-02,  ..., 9.9731e-01,
          8.3843e-03, 6.4004e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:31,622 [Process: 0] Synchronize training processes
2024-08-18 15:16:31,622 [Process: 0] Evaluating...
2024-08-18 15:16:31,624 [Process: 0] EPOCH 211:
2024-08-18 15:16:31,626 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:32,759 [Process: 0] Synchronize training processes
2024-08-18 15:16:32,760 [Process: 0] Evaluating...
2024-08-18 15:16:32,764 [Process: 0] EPOCH 212:
2024-08-18 15:16:32,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.9279e-01, 2.7399e-02, 9.7707e-03,  ..., 8.3678e-04,
          1.2262e-03, 9.7880e-01],
         [3.5736e-02, 2.7399e-02, 9.7707e-03,  ..., 8.3678e-04,
          1.2262e-03, 7.0653e-03],
         [3.5736e-02, 3.2328e-02, 9.7707e-03,  ..., 9.9749e-01,
          9.9632e-01, 7.0653e-03],
         [3.5736e-02, 9.1287e-01, 9.7069e-01,  ..., 8.3678e-04,
          1.2262e-03, 7.0653e-03]],
        [[9.4218e-01, 1.2383e-02, 2.4763e-02,  ..., 1.1853e-01,
          4.6159e-02, 1.8631e-03],
         [1.0025e-02, 1.2383e-02, 2.4763e-02,  ..., 1.2705e-01,
          5.4739e-02, 1.8631e-03],
         [3.7769e-02, 1.3471e-02, 3.0445e-02,  ..., 3.2399e-01,
          4.6159e-02, 9.9441e-01],
         [1.0025e-02, 9.6176e-01, 9.2003e-01,  ..., 4.3043e-01,
          8.5294e-01, 1.8631e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.5970e-03, 2.5884e-03, 1.4779e-03,  ..., 1.0204e-02,
          3.5975e-03, 1.6163e-02],
         [7.5970e-03, 2.5884e-03, 1.4779e-03,  ..., 1.0204e-02,
          3.5975e-03, 1.6163e-02],
         [9.7721e-01, 2.5884e-03, 1.4779e-03,  ..., 9.6939e-01,
          3.5975e-03, 9.5151e-01],
         [7.5970e-03, 9.9223e-01, 9.9557e-01,  ..., 1.0204e-02,
          9.8921e-01, 1.6163e-02]],
        [[1.6305e-02, 4.9482e-04, 6.1578e-01,  ..., 1.0892e-03,
          9.7928e-01, 4.2731e-03],
         [1.4908e-02, 4.9482e-04, 6.9834e-02,  ..., 1.0892e-03,
          6.9069e-03, 4.2731e-03],
         [9.5388e-01, 4.9482e-04, 1.1251e-01,  ..., 1.0892e-03,
          6.9069e-03, 9.8718e-01],
         [1.4908e-02, 9.9852e-01, 2.0187e-01,  ..., 9.9673e-01,
          6.9069e-03, 4.2731e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7372e-01, 9.3487e-03, 2.2277e-02,  ..., 2.8263e-04,
          9.3299e-04, 9.8823e-01],
         [7.2994e-03, 9.3487e-03, 2.2277e-02,  ..., 2.8263e-04,
          9.3299e-04, 3.9239e-03],
         [7.2994e-03, 1.1065e-02, 2.3773e-02,  ..., 9.9915e-01,
          9.9720e-01, 3.9239e-03],
         [1.1685e-02, 9.7024e-01, 9.3167e-01,  ..., 2.8263e-04,
          9.3299e-04, 3.9239e-03]],
        [[9.1550e-01, 3.2363e-03, 9.7024e-03,  ..., 8.4867e-02,
          1.0040e-01, 1.1099e-03],
         [1.0456e-02, 3.2363e-03, 9.7024e-03,  ..., 8.4867e-02,
          8.6499e-02, 1.1099e-03],
         [6.3584e-02, 3.2363e-03, 1.1030e-02,  ..., 3.9749e-01,
          1.1644e-01, 9.9667e-01],
         [1.0456e-02, 9.9029e-01, 9.6956e-01,  ..., 4.3278e-01,
          6.9666e-01, 1.1099e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 15:16:33,898 [Process: 0] Synchronize training processes
2024-08-18 15:16:33,898 [Process: 0] Evaluating...
2024-08-18 15:16:33,900 [Process: 0] EPOCH 213:
2024-08-18 15:16:33,901 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7022e-03, 6.2781e-03, 1.6060e-03,  ..., 1.2872e-02,
          1.3566e-02, 8.9367e-03],
         [9.7022e-03, 6.2781e-03, 1.6060e-03,  ..., 1.2872e-02,
          1.3566e-02, 8.9367e-03],
         [9.7089e-01, 6.2781e-03, 1.6060e-03,  ..., 9.6138e-01,
          1.3566e-02, 9.7319e-01],
         [9.7022e-03, 9.8117e-01, 9.9518e-01,  ..., 1.2872e-02,
          9.5930e-01, 8.9367e-03]],
        [[7.0752e-03, 5.1992e-04, 2.0734e-01,  ..., 5.7063e-04,
          9.8238e-01, 3.3394e-02],
         [7.0752e-03, 5.1992e-04, 1.1765e-01,  ..., 5.7063e-04,
          5.2798e-03, 2.7949e-02],
         [9.7877e-01, 5.1992e-04, 2.4949e-01,  ..., 5.7063e-04,
          5.2798e-03, 9.1071e-01],
         [7.0752e-03, 9.9844e-01, 4.2553e-01,  ..., 9.9829e-01,
          7.0619e-03, 2.7949e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9052e-01, 6.2558e-03, 1.1291e-02,  ..., 6.5568e-04,
          2.0708e-03, 9.8877e-01],
         [3.1602e-03, 6.2558e-03, 1.0076e-02,  ..., 6.5568e-04,
          2.0708e-03, 4.3414e-03],
         [3.1602e-03, 6.2558e-03, 1.1015e-02,  ..., 9.9803e-01,
          9.9379e-01, 3.4443e-03],
         [3.1602e-03, 9.8123e-01, 9.6762e-01,  ..., 6.5568e-04,
          2.0708e-03, 3.4443e-03]],
        [[5.1881e-01, 1.2482e-02, 1.2605e-02,  ..., 1.3708e-03,
          2.6602e-01, 4.8048e-04],
         [1.8772e-02, 1.2482e-02, 1.2605e-02,  ..., 1.3708e-03,
          2.7762e-01, 4.8048e-04],
         [4.4365e-01, 1.2914e-02, 1.5559e-02,  ..., 9.9589e-01,
          1.4283e-01, 9.9856e-01],
         [1.8772e-02, 9.6212e-01, 9.5923e-01,  ..., 1.3708e-03,
          3.1353e-01, 4.8048e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5355e-02, 2.5867e-03, 8.6200e-04,  ..., 1.7512e-02,
          5.4525e-03, 1.1754e-02],
         [3.1199e-02, 2.5867e-03, 8.6200e-04,  ..., 1.7512e-02,
          5.4525e-03, 1.2531e-02],
         [9.1809e-01, 2.5867e-03, 8.6200e-04,  ..., 9.4746e-01,
          5.4525e-03, 9.6396e-01],
         [2.5355e-02, 9.9224e-01, 9.9741e-01,  ..., 1.7512e-02,
          9.8364e-01, 1.1754e-02]],
        [[1.3841e-02, 1.0826e-03, 2.3359e-01,  ..., 2.2852e-03,
          9.9284e-01, 1.1985e-02],
         [1.3841e-02, 1.0826e-03, 1.2127e-01,  ..., 2.2852e-03,
          2.4899e-03, 1.1985e-02],
         [9.5848e-01, 1.0826e-03, 2.1688e-01,  ..., 2.2852e-03,
          2.3365e-03, 9.6405e-01],
         [1.3841e-02, 9.9675e-01, 4.2826e-01,  ..., 9.9314e-01,
          2.3365e-03, 1.1985e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9923e-01, 8.5287e-03, 1.4624e-02,  ..., 7.1914e-04,
          1.6793e-03, 9.9935e-01],
         [2.5569e-04, 8.5287e-03, 1.4624e-02,  ..., 7.1914e-04,
          1.6793e-03, 2.1515e-04],
         [2.5569e-04, 8.5287e-03, 1.4624e-02,  ..., 9.9784e-01,
          9.9496e-01, 2.1515e-04],
         [2.5569e-04, 9.7441e-01, 9.5613e-01,  ..., 7.1914e-04,
          1.6793e-03, 2.1515e-04]],
        [[8.6257e-01, 4.2056e-03, 1.0354e-02,  ..., 8.2977e-04,
          1.3878e-01, 4.9949e-03],
         [1.0357e-02, 4.2056e-03, 1.0354e-02,  ..., 8.2977e-04,
          4.5987e-01, 4.9949e-03],
         [1.1672e-01, 4.2056e-03, 1.0354e-02,  ..., 9.9751e-01,
          1.7845e-01, 9.8502e-01],
         [1.0357e-02, 9.8738e-01, 9.6894e-01,  ..., 8.2977e-04,
          2.2290e-01, 4.9949e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:35,035 [Process: 0] Synchronize training processes
2024-08-18 15:16:35,035 [Process: 0] Evaluating...
2024-08-18 15:16:35,037 [Process: 0] EPOCH 214:
2024-08-18 15:16:35,039 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:36,166 [Process: 0] Synchronize training processes
2024-08-18 15:16:36,166 [Process: 0] Evaluating...
2024-08-18 15:16:36,168 [Process: 0] EPOCH 215:
2024-08-18 15:16:36,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2924e-02, 8.2928e-03, 1.4881e-03,  ..., 1.1554e-02,
          3.6459e-03, 2.1072e-02],
         [2.2924e-02, 8.2928e-03, 1.4881e-03,  ..., 1.1554e-02,
          3.6459e-03, 2.4442e-02],
         [9.3123e-01, 8.2928e-03, 1.4881e-03,  ..., 9.6534e-01,
          3.6459e-03, 9.3341e-01],
         [2.2924e-02, 9.7512e-01, 9.9554e-01,  ..., 1.1554e-02,
          9.8906e-01, 2.1072e-02]],
        [[1.4300e-02, 3.0967e-04, 1.8890e-01,  ..., 1.9448e-04,
          9.4884e-01, 4.0490e-02],
         [1.4300e-02, 3.0967e-04, 1.0313e-01,  ..., 1.9448e-04,
          2.6666e-02, 4.4342e-02],
         [9.5710e-01, 3.0967e-04, 3.8719e-01,  ..., 1.9448e-04,
          1.2245e-02, 8.6272e-01],
         [1.4300e-02, 9.9907e-01, 3.2078e-01,  ..., 9.9942e-01,
          1.2245e-02, 5.2446e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8773e-01, 2.0184e-03, 5.0452e-03,  ..., 3.1726e-04,
          5.2748e-04, 9.8881e-01],
         [4.0908e-03, 2.0184e-03, 5.0452e-03,  ..., 3.1726e-04,
          5.2748e-04, 3.7314e-03],
         [4.0908e-03, 2.0184e-03, 5.0452e-03,  ..., 9.9905e-01,
          9.9842e-01, 3.7314e-03],
         [4.0908e-03, 9.9394e-01, 9.8486e-01,  ..., 3.1726e-04,
          5.2748e-04, 3.7314e-03]],
        [[6.9668e-01, 5.3325e-03, 1.4008e-02,  ..., 1.1137e-01,
          1.2013e-01, 7.5689e-02],
         [1.3751e-02, 5.3325e-03, 1.4008e-02,  ..., 1.0371e-01,
          1.9503e-01, 2.7690e-02],
         [2.7582e-01, 5.3325e-03, 1.4973e-02,  ..., 6.0622e-01,
          3.6466e-01, 8.6893e-01],
         [1.3751e-02, 9.8400e-01, 9.5701e-01,  ..., 1.7871e-01,
          3.2018e-01, 2.7690e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4378e-03, 2.2656e-02, 6.8395e-04,  ..., 9.1896e-03,
          1.6744e-03, 3.6178e-03],
         [4.4378e-03, 2.5232e-02, 6.8395e-04,  ..., 9.1896e-03,
          1.6744e-03, 3.6178e-03],
         [9.8669e-01, 2.2656e-02, 6.8395e-04,  ..., 9.7243e-01,
          1.6744e-03, 9.8915e-01],
         [4.4378e-03, 9.2946e-01, 9.9795e-01,  ..., 9.1896e-03,
          9.9498e-01, 3.6178e-03]],
        [[1.9257e-02, 8.0059e-04, 2.5972e-01,  ..., 1.3640e-03,
          9.4217e-01, 5.7132e-03],
         [1.9257e-02, 8.0059e-04, 1.0114e-01,  ..., 1.3640e-03,
          1.9134e-02, 5.7132e-03],
         [9.4141e-01, 8.0059e-04, 1.0114e-01,  ..., 1.3640e-03,
          1.9134e-02, 9.8286e-01],
         [2.0078e-02, 9.9760e-01, 5.3799e-01,  ..., 9.9591e-01,
          1.9557e-02, 5.7132e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:16:37,299 [Process: 0] Synchronize training processes
2024-08-18 15:16:37,300 [Process: 0] Evaluating...
2024-08-18 15:16:37,302 [Process: 0] EPOCH 216:
2024-08-18 15:16:37,303 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:38,427 [Process: 0] Synchronize training processes
2024-08-18 15:16:38,427 [Process: 0] Evaluating...
2024-08-18 15:16:38,429 [Process: 0] EPOCH 217:
2024-08-18 15:16:38,431 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7696e-01, 1.7901e-03, 2.7948e-03,  ..., 4.4169e-04,
          4.5755e-04, 9.7301e-01],
         [7.6793e-03, 1.8033e-03, 3.3506e-03,  ..., 4.4169e-04,
          4.5755e-04, 1.2307e-02],
         [7.6793e-03, 1.7901e-03, 2.7948e-03,  ..., 9.9867e-01,
          9.9863e-01, 7.3423e-03],
         [7.6793e-03, 9.9462e-01, 9.9106e-01,  ..., 4.4169e-04,
          4.5755e-04, 7.3423e-03]],
        [[9.2934e-01, 3.2628e-03, 5.8700e-03,  ..., 6.2840e-03,
          3.8293e-02, 5.4129e-04],
         [2.2971e-02, 3.2628e-03, 5.8700e-03,  ..., 6.2840e-03,
          3.8293e-02, 5.4129e-04],
         [2.8909e-02, 3.2628e-03, 5.8700e-03,  ..., 9.8115e-01,
          8.8066e-01, 9.9838e-01],
         [1.8775e-02, 9.9021e-01, 9.8239e-01,  ..., 6.2840e-03,
          4.2757e-02, 5.4129e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.2323e-03, 2.0829e-03, 5.8043e-04,  ..., 1.0305e-02,
          7.3845e-03, 9.0195e-03],
         [8.2323e-03, 2.0829e-03, 5.8043e-04,  ..., 1.0093e-02,
          7.3845e-03, 9.0195e-03],
         [9.7530e-01, 2.0829e-03, 5.8043e-04,  ..., 9.6951e-01,
          7.3845e-03, 9.7294e-01],
         [8.2323e-03, 9.9375e-01, 9.9826e-01,  ..., 1.0093e-02,
          9.7785e-01, 9.0195e-03]],
        [[1.2520e-02, 2.9799e-04, 9.5344e-03,  ..., 1.5850e-03,
          9.7085e-01, 1.3384e-02],
         [1.2520e-02, 3.3836e-04, 9.5344e-03,  ..., 2.1679e-03,
          9.7181e-03, 1.3384e-02],
         [9.6244e-01, 2.9799e-04, 9.5344e-03,  ..., 1.5850e-03,
          9.7181e-03, 9.5985e-01],
         [1.2520e-02, 9.9907e-01, 9.7140e-01,  ..., 9.9466e-01,
          9.7181e-03, 1.3384e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8466e-01, 3.6670e-03, 1.4198e-03,  ..., 6.6549e-04,
          2.8128e-04, 9.9615e-01],
         [4.4424e-03, 3.6670e-03, 1.4198e-03,  ..., 6.6549e-04,
          2.8128e-04, 1.2820e-03],
         [4.4424e-03, 3.6670e-03, 1.4198e-03,  ..., 9.9800e-01,
          9.9916e-01, 1.2820e-03],
         [6.4531e-03, 9.8900e-01, 9.9574e-01,  ..., 6.6549e-04,
          2.8128e-04, 1.2820e-03]],
        [[9.7754e-01, 2.7660e-03, 2.2532e-02,  ..., 3.8902e-03,
          2.3770e-01, 5.8966e-03],
         [6.5319e-03, 2.7660e-03, 2.3037e-02,  ..., 3.8902e-03,
          7.4622e-02, 5.8966e-03],
         [9.3993e-03, 2.7660e-03, 2.3069e-02,  ..., 9.8833e-01,
          6.1305e-01, 9.8231e-01],
         [6.5319e-03, 9.9170e-01, 9.3136e-01,  ..., 3.8902e-03,
          7.4622e-02, 5.8966e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9893e-02, 2.2600e-03, 8.6580e-03,  ..., 8.1158e-03,
          9.2803e-04, 1.1594e-02],
         [1.8207e-02, 2.2600e-03, 1.3968e-02,  ..., 8.1158e-03,
          9.2803e-04, 1.1594e-02],
         [9.4369e-01, 2.2600e-03, 8.6580e-03,  ..., 9.7565e-01,
          9.2803e-04, 9.6522e-01],
         [1.8207e-02, 9.9322e-01, 9.6872e-01,  ..., 8.1158e-03,
          9.9722e-01, 1.1594e-02]],
        [[1.3734e-02, 3.6534e-03, 3.6680e-03,  ..., 6.8478e-04,
          9.7339e-01, 5.0779e-03],
         [1.3734e-02, 3.6534e-03, 3.6680e-03,  ..., 6.8478e-04,
          8.9068e-03, 5.0779e-03],
         [9.5880e-01, 3.6534e-03, 3.6680e-03,  ..., 6.8478e-04,
          8.8532e-03, 9.8477e-01],
         [1.3734e-02, 9.8904e-01, 9.8900e-01,  ..., 9.9795e-01,
          8.8532e-03, 5.0779e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:39,552 [Process: 0] Synchronize training processes
2024-08-18 15:16:39,552 [Process: 0] Evaluating...
2024-08-18 15:16:39,554 [Process: 0] EPOCH 218:
2024-08-18 15:16:39,556 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:40,718 [Process: 0] Synchronize training processes
2024-08-18 15:16:40,718 [Process: 0] Evaluating...
2024-08-18 15:16:40,720 [Process: 0] EPOCH 219:
2024-08-18 15:16:40,722 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9931, 0.0037, 0.0103,  ..., 0.0012, 0.0038, 0.9822],
         [0.0018, 0.0040, 0.0129,  ..., 0.0012, 0.0038, 0.0059],
         [0.0018, 0.0037, 0.0103,  ..., 0.9965, 0.9887, 0.0059],
         [0.0033, 0.9887, 0.9664,  ..., 0.0012, 0.0038, 0.0059]],
        [[0.9586, 0.0170, 0.0074,  ..., 0.0027, 0.1777, 0.0011],
         [0.0094, 0.0170, 0.0074,  ..., 0.0027, 0.0922, 0.0011],
         [0.0225, 0.0181, 0.0074,  ..., 0.9920, 0.5385, 0.9967],
         [0.0094, 0.9478, 0.9778,  ..., 0.0027, 0.1915, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.6149e-03, 5.2834e-03, 4.9431e-03,  ..., 2.1125e-02,
          4.4592e-04, 6.7760e-03],
         [4.6149e-03, 5.2834e-03, 5.9621e-03,  ..., 2.1125e-02,
          4.4592e-04, 6.7760e-03],
         [9.8616e-01, 5.2834e-03, 4.9431e-03,  ..., 9.3473e-01,
          4.4592e-04, 9.7967e-01],
         [4.6149e-03, 9.8415e-01, 9.8415e-01,  ..., 2.3023e-02,
          9.9866e-01, 6.7760e-03]],
        [[5.6542e-03, 8.9882e-04, 4.9201e-03,  ..., 9.6711e-04,
          5.5594e-02, 5.0212e-03],
         [5.6542e-03, 8.9882e-04, 4.9201e-03,  ..., 9.6711e-04,
          2.6202e-02, 5.0212e-03],
         [9.8304e-01, 8.9882e-04, 4.9201e-03,  ..., 9.6711e-04,
          2.6202e-02, 9.8494e-01],
         [5.6542e-03, 9.9730e-01, 9.8524e-01,  ..., 9.9710e-01,
          8.9200e-01, 5.0212e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9623e-01, 3.3509e-03, 1.6539e-03,  ..., 1.3858e-04,
          1.1094e-01, 9.9297e-01],
         [1.2563e-03, 3.3509e-03, 1.6863e-03,  ..., 1.3858e-04,
          8.2789e-02, 2.3450e-03],
         [1.2563e-03, 3.3509e-03, 1.6539e-03,  ..., 9.9958e-01,
          4.1076e-01, 2.3450e-03],
         [1.2563e-03, 9.8995e-01, 9.9501e-01,  ..., 1.3858e-04,
          3.9551e-01, 2.3450e-03]],
        [[7.4840e-01, 2.3124e-02, 4.9634e-03,  ..., 7.3626e-03,
          1.1409e-01, 2.2396e-04],
         [4.1533e-02, 2.3124e-02, 4.9634e-03,  ..., 7.3626e-03,
          9.1315e-02, 2.2396e-04],
         [1.7259e-01, 3.2769e-02, 4.9634e-03,  ..., 9.7791e-01,
          1.9050e-01, 9.9933e-01],
         [3.7472e-02, 9.2098e-01, 9.8511e-01,  ..., 7.3626e-03,
          6.0409e-01, 2.2396e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3637e-02, 3.5822e-03, 3.8946e-03,  ..., 1.3806e-02,
          3.2021e-03, 3.3382e-03],
         [2.0888e-02, 3.5822e-03, 3.9655e-03,  ..., 1.3806e-02,
          3.2021e-03, 3.3382e-03],
         [9.2932e-01, 3.5822e-03, 3.8946e-03,  ..., 9.5858e-01,
          3.2021e-03, 9.8999e-01],
         [2.6156e-02, 9.8925e-01, 9.8825e-01,  ..., 1.3806e-02,
          9.9039e-01, 3.3382e-03]],
        [[1.2855e-02, 3.0447e-04, 7.1574e-04,  ..., 5.8719e-04,
          5.4269e-02, 1.3518e-02],
         [1.2855e-02, 3.0447e-04, 7.1574e-04,  ..., 5.8719e-04,
          2.3278e-02, 1.3518e-02],
         [9.6143e-01, 3.0447e-04, 7.1574e-04,  ..., 5.8719e-04,
          2.3278e-02, 9.5794e-01],
         [1.2855e-02, 9.9909e-01, 9.9785e-01,  ..., 9.9824e-01,
          8.9918e-01, 1.5027e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:41,848 [Process: 0] Synchronize training processes
2024-08-18 15:16:41,848 [Process: 0] Evaluating...
2024-08-18 15:16:41,850 [Process: 0] EPOCH 220:
2024-08-18 15:16:41,851 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:42,972 [Process: 0] Synchronize training processes
2024-08-18 15:16:42,972 [Process: 0] Evaluating...
2024-08-18 15:16:42,974 [Process: 0] EPOCH 221:
2024-08-18 15:16:42,976 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.9895, 0.0068, 0.0022,  ..., 0.0065, 0.0236, 0.9950],
         [0.0035, 0.0068, 0.0022,  ..., 0.0065, 0.0236, 0.0016],
         [0.0035, 0.0068, 0.0022,  ..., 0.9805, 0.9251, 0.0018],
         [0.0035, 0.9797, 0.9934,  ..., 0.0065, 0.0278, 0.0016]],
        [[0.4767, 0.0117, 0.0056,  ..., 0.0015, 0.4763, 0.0044],
         [0.0578, 0.0126, 0.0056,  ..., 0.0015, 0.1029, 0.0044],
         [0.3995, 0.0117, 0.0056,  ..., 0.9955, 0.2115, 0.9867],
         [0.0660, 0.9640, 0.9833,  ..., 0.0015, 0.2093, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.1378e-03, 8.9402e-04, 1.9405e-04,  ..., 1.8713e-02,
          1.6207e-04, 8.3340e-03],
         [9.1378e-03, 8.9402e-04, 1.9405e-04,  ..., 1.8713e-02,
          1.6207e-04, 8.3340e-03],
         [9.7259e-01, 8.9402e-04, 1.9405e-04,  ..., 9.4386e-01,
          1.6207e-04, 9.7500e-01],
         [9.1378e-03, 9.9732e-01, 9.9942e-01,  ..., 1.8713e-02,
          9.9951e-01, 8.3340e-03]],
        [[3.9878e-02, 3.4963e-04, 1.7162e-03,  ..., 8.5469e-04,
          2.2381e-01, 1.1683e-02],
         [3.9878e-02, 3.4963e-04, 1.7162e-03,  ..., 8.5469e-04,
          8.2386e-02, 1.1683e-02],
         [8.6328e-01, 3.4963e-04, 1.7162e-03,  ..., 8.5469e-04,
          1.6580e-01, 9.6495e-01],
         [5.6966e-02, 9.9895e-01, 9.9485e-01,  ..., 9.9744e-01,
          5.2801e-01, 1.1683e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8706e-01, 5.0378e-03, 1.2338e-02,  ..., 4.2522e-04,
          2.6332e-02, 9.8821e-01],
         [3.8343e-03, 5.0378e-03, 1.0586e-02,  ..., 4.2522e-04,
          2.9069e-02, 3.9296e-03],
         [5.2676e-03, 5.0378e-03, 1.0586e-02,  ..., 9.9872e-01,
          9.1827e-01, 3.9296e-03],
         [3.8343e-03, 9.8489e-01, 9.6649e-01,  ..., 4.2522e-04,
          2.6332e-02, 3.9296e-03]],
        [[9.6771e-01, 5.8401e-03, 7.1762e-03,  ..., 1.0508e-03,
          1.7150e-01, 9.2871e-04],
         [1.3280e-02, 5.4359e-03, 7.1450e-03,  ..., 1.0508e-03,
          9.1098e-02, 9.2871e-04],
         [9.5065e-03, 5.4359e-03, 7.1450e-03,  ..., 9.9685e-01,
          5.3275e-01, 9.9721e-01],
         [9.5065e-03, 9.8329e-01, 9.7853e-01,  ..., 1.0508e-03,
          2.0466e-01, 9.2871e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:44,111 [Process: 0] Synchronize training processes
2024-08-18 15:16:44,112 [Process: 0] Evaluating...
2024-08-18 15:16:44,115 [Process: 0] EPOCH 222:
2024-08-18 15:16:44,117 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0792e-02, 1.9163e-01, 3.2246e-03,  ..., 7.7846e-03,
          3.4918e-04, 1.9200e-02],
         [2.0792e-02, 1.1101e-01, 3.2246e-03,  ..., 7.7846e-03,
          3.4918e-04, 1.9200e-02],
         [9.3660e-01, 9.0894e-02, 3.2246e-03,  ..., 9.7665e-01,
          3.4918e-04, 9.4240e-01],
         [2.1819e-02, 6.0647e-01, 9.9033e-01,  ..., 7.7846e-03,
          9.9895e-01, 1.9200e-02]],
        [[1.0500e-02, 1.2108e-04, 3.0535e-02,  ..., 6.6565e-04,
          1.8568e-01, 1.3464e-02],
         [1.0500e-02, 1.2108e-04, 2.4753e-02,  ..., 6.6565e-04,
          6.9685e-02, 1.3464e-02],
         [9.6850e-01, 1.2108e-04, 2.4753e-02,  ..., 6.6565e-04,
          1.1242e-01, 9.5961e-01],
         [1.0500e-02, 9.9964e-01, 9.1996e-01,  ..., 9.9800e-01,
          6.3221e-01, 1.3464e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9981e-01, 5.5762e-03, 1.0591e-02,  ..., 2.2331e-04,
          9.4610e-04, 9.9878e-01],
         [6.3907e-05, 5.1913e-03, 1.0591e-02,  ..., 2.2331e-04,
          9.4610e-04, 4.0566e-04],
         [6.3907e-05, 5.1913e-03, 1.0591e-02,  ..., 9.9933e-01,
          9.9716e-01, 4.0566e-04],
         [6.3907e-05, 9.8404e-01, 9.6823e-01,  ..., 2.2331e-04,
          9.4610e-04, 4.0566e-04]],
        [[9.9764e-01, 8.2532e-03, 9.9357e-03,  ..., 2.1635e-03,
          1.7448e-01, 6.5593e-04],
         [7.8531e-04, 8.2532e-03, 9.9357e-03,  ..., 2.1635e-03,
          9.2896e-02, 6.5593e-04],
         [7.8531e-04, 8.2532e-03, 9.9357e-03,  ..., 9.9351e-01,
          2.2309e-01, 9.9803e-01],
         [7.8531e-04, 9.7524e-01, 9.7019e-01,  ..., 2.1635e-03,
          5.0954e-01, 6.5593e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7044e-02, 1.6962e-02, 1.0049e-03,  ..., 8.0847e-03,
          2.2955e-04, 9.3838e-03],
         [1.7044e-02, 1.5504e-02, 1.0049e-03,  ..., 8.0847e-03,
          2.2955e-04, 9.3838e-03],
         [9.4887e-01, 1.5504e-02, 1.0049e-03,  ..., 9.7575e-01,
          2.2955e-04, 9.7185e-01],
         [1.7044e-02, 9.5203e-01, 9.9699e-01,  ..., 8.0847e-03,
          9.9931e-01, 9.3838e-03]],
        [[5.8920e-03, 2.3239e-03, 2.2839e-03,  ..., 4.2850e-04,
          1.9756e-01, 7.6202e-03],
         [5.8920e-03, 2.3239e-03, 2.2839e-03,  ..., 4.2850e-04,
          6.3181e-02, 7.6202e-03],
         [9.8232e-01, 2.3239e-03, 2.2839e-03,  ..., 4.2850e-04,
          7.3155e-02, 9.7714e-01],
         [5.8920e-03, 9.9303e-01, 9.9315e-01,  ..., 9.9871e-01,
          6.6611e-01, 7.6202e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9980e-01, 4.2491e-03, 7.1943e-03,  ..., 3.6842e-04,
          1.8681e-03, 9.8796e-01],
         [6.7646e-05, 4.2491e-03, 6.3344e-03,  ..., 3.6842e-04,
          1.8681e-03, 4.0145e-03],
         [6.7646e-05, 4.2491e-03, 6.3344e-03,  ..., 9.9889e-01,
          9.9440e-01, 4.0145e-03],
         [6.7646e-05, 9.8725e-01, 9.8014e-01,  ..., 3.6842e-04,
          1.8681e-03, 4.0145e-03]],
        [[9.8936e-01, 5.5374e-02, 2.6543e-02,  ..., 1.5674e-02,
          1.5522e-01, 3.3394e-03],
         [3.5464e-03, 4.0173e-02, 2.2627e-02,  ..., 1.5674e-02,
          8.9316e-02, 3.7873e-03],
         [3.5464e-03, 5.7480e-02, 2.4983e-02,  ..., 9.5298e-01,
          1.7638e-01, 9.8953e-01],
         [3.5464e-03, 8.4697e-01, 9.2585e-01,  ..., 1.5674e-02,
          5.7908e-01, 3.3394e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:45,242 [Process: 0] Synchronize training processes
2024-08-18 15:16:45,242 [Process: 0] Evaluating...
2024-08-18 15:16:45,244 [Process: 0] EPOCH 223:
2024-08-18 15:16:45,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:46,366 [Process: 0] Synchronize training processes
2024-08-18 15:16:46,366 [Process: 0] Evaluating...
2024-08-18 15:16:46,368 [Process: 0] EPOCH 224:
2024-08-18 15:16:46,370 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.8282e-03, 5.3073e-03, 4.1132e-04,  ..., 1.4881e-02,
          2.6956e-02, 1.6288e-02],
         [8.8554e-03, 5.3073e-03, 4.1132e-04,  ..., 1.4881e-02,
          2.2818e-02, 2.1193e-02],
         [9.7549e-01, 5.3073e-03, 4.1132e-04,  ..., 9.5536e-01,
          2.2818e-02, 9.4623e-01],
         [7.8282e-03, 9.8408e-01, 9.9877e-01,  ..., 1.4881e-02,
          9.2741e-01, 1.6288e-02]],
        [[1.7650e-02, 1.7564e-04, 1.1251e-02,  ..., 1.2680e-03,
          2.6478e-01, 1.1146e-02],
         [1.7650e-02, 1.7564e-04, 7.8283e-03,  ..., 1.2680e-03,
          7.0344e-02, 1.1146e-02],
         [9.4705e-01, 1.7564e-04, 7.8283e-03,  ..., 1.2680e-03,
          8.1112e-02, 9.6656e-01],
         [1.7650e-02, 9.9947e-01, 9.7309e-01,  ..., 9.9620e-01,
          5.8376e-01, 1.1146e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9692e-01, 5.8139e-03, 2.8812e-03,  ..., 1.0880e-04,
          3.9256e-02, 9.8853e-01],
         [1.0273e-03, 5.8139e-03, 2.8812e-03,  ..., 1.0880e-04,
          3.9256e-02, 3.5408e-03],
         [1.0273e-03, 5.8139e-03, 2.8812e-03,  ..., 9.9967e-01,
          8.5964e-01, 4.3931e-03],
         [1.0273e-03, 9.8256e-01, 9.9136e-01,  ..., 1.0880e-04,
          6.1846e-02, 3.5408e-03]],
        [[9.8368e-01, 1.2845e-02, 4.4664e-03,  ..., 6.9084e-02,
          2.3283e-01, 2.2043e-03],
         [6.9601e-03, 1.0204e-02, 4.4664e-03,  ..., 7.6893e-02,
          1.0231e-01, 2.2043e-03],
         [4.6795e-03, 1.1944e-02, 4.4664e-03,  ..., 7.7833e-01,
          1.9030e-01, 9.9339e-01],
         [4.6795e-03, 9.6501e-01, 9.8660e-01,  ..., 7.5690e-02,
          4.7456e-01, 2.2043e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0110e-02, 6.7323e-03, 3.3851e-04,  ..., 1.5012e-02,
          3.2481e-01, 7.3366e-03],
         [1.1384e-02, 6.7323e-03, 3.3851e-04,  ..., 1.5012e-02,
          8.6882e-02, 7.3366e-03],
         [9.6840e-01, 6.7323e-03, 3.3851e-04,  ..., 9.5496e-01,
          1.2296e-01, 9.7799e-01],
         [1.0110e-02, 9.7980e-01, 9.9898e-01,  ..., 1.5012e-02,
          4.6535e-01, 7.3366e-03]],
        [[4.2478e-03, 1.3031e-03, 1.6819e-03,  ..., 9.6213e-05,
          2.9234e-01, 5.0577e-03],
         [4.2478e-03, 1.3031e-03, 1.6819e-03,  ..., 9.6213e-05,
          6.7672e-02, 5.0577e-03],
         [9.8726e-01, 1.3031e-03, 1.6819e-03,  ..., 9.6213e-05,
          7.2101e-02, 9.8483e-01],
         [4.2478e-03, 9.9609e-01, 9.9495e-01,  ..., 9.9971e-01,
          5.6789e-01, 5.0577e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:47,493 [Process: 0] Synchronize training processes
2024-08-18 15:16:47,494 [Process: 0] Evaluating...
2024-08-18 15:16:47,495 [Process: 0] EPOCH 225:
2024-08-18 15:16:47,497 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:48,632 [Process: 0] Synchronize training processes
2024-08-18 15:16:48,632 [Process: 0] Evaluating...
2024-08-18 15:16:48,634 [Process: 0] EPOCH 226:
2024-08-18 15:16:48,636 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8819e-01, 3.9514e-03, 1.2492e-03,  ..., 5.8078e-04,
          1.0206e-01, 9.3730e-01],
         [3.9371e-03, 3.9514e-03, 1.2492e-03,  ..., 5.8078e-04,
          9.5564e-02, 2.0897e-02],
         [3.9371e-03, 3.9514e-03, 1.2492e-03,  ..., 9.9826e-01,
          1.1271e-01, 2.0911e-02],
         [3.9371e-03, 9.8815e-01, 9.9625e-01,  ..., 5.8078e-04,
          6.8967e-01, 2.0897e-02]],
        [[9.7348e-01, 1.0782e-02, 9.8666e-03,  ..., 1.0268e-02,
          2.1973e-01, 4.0057e-03],
         [1.0199e-02, 1.0020e-02, 9.8666e-03,  ..., 1.0268e-02,
          1.0502e-01, 4.0057e-03],
         [8.1615e-03, 1.0020e-02, 9.8666e-03,  ..., 9.6920e-01,
          2.7450e-01, 9.8798e-01],
         [8.1615e-03, 9.6918e-01, 9.7040e-01,  ..., 1.0268e-02,
          4.0075e-01, 4.0057e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4472e-02, 9.1626e-04, 2.6491e-04,  ..., 3.8779e-02,
          7.4254e-01, 2.5021e-02],
         [1.4472e-02, 9.1626e-04, 2.6491e-04,  ..., 3.3295e-02,
          7.8903e-02, 2.5021e-02],
         [9.5659e-01, 9.1626e-04, 2.6491e-04,  ..., 8.9355e-01,
          6.2599e-02, 9.2359e-01],
         [1.4472e-02, 9.9725e-01, 9.9921e-01,  ..., 3.4372e-02,
          1.1596e-01, 2.6366e-02]],
        [[1.2175e-02, 3.5378e-04, 3.4826e-03,  ..., 1.1032e-03,
          2.2464e-01, 1.9243e-02],
         [1.2175e-02, 3.5378e-04, 3.4826e-03,  ..., 1.1032e-03,
          6.8278e-02, 1.9243e-02],
         [9.6348e-01, 3.5378e-04, 3.4826e-03,  ..., 1.1032e-03,
          6.8278e-02, 9.4118e-01],
         [1.2175e-02, 9.9894e-01, 9.8955e-01,  ..., 9.9669e-01,
          6.3880e-01, 2.0336e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9881e-01, 1.3855e-03, 8.0964e-03,  ..., 1.2073e-03,
          5.5327e-02, 8.6140e-01],
         [3.9622e-04, 1.3855e-03, 8.0964e-03,  ..., 1.2073e-03,
          5.0563e-02, 4.7336e-02],
         [3.9622e-04, 1.3855e-03, 8.0964e-03,  ..., 9.9638e-01,
          5.0563e-02, 5.2240e-02],
         [3.9622e-04, 9.9584e-01, 9.7571e-01,  ..., 1.2073e-03,
          8.4355e-01, 3.9023e-02]],
        [[9.9046e-01, 6.7929e-03, 1.4922e-02,  ..., 3.1003e-04,
          2.4545e-01, 8.6398e-04],
         [3.1816e-03, 6.7929e-03, 1.4922e-02,  ..., 3.1003e-04,
          1.0819e-01, 8.6398e-04],
         [3.1816e-03, 6.7929e-03, 1.4922e-02,  ..., 9.9907e-01,
          2.6478e-01, 9.9741e-01],
         [3.1816e-03, 9.7962e-01, 9.5524e-01,  ..., 3.1003e-04,
          3.8158e-01, 8.6398e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6981e-02, 1.1902e-03, 1.4218e-04,  ..., 6.1867e-03,
          1.1847e-01, 2.4598e-02],
         [1.6981e-02, 1.1902e-03, 1.4218e-04,  ..., 6.1867e-03,
          1.9138e-01, 2.4598e-02],
         [9.4906e-01, 1.1902e-03, 1.4218e-04,  ..., 9.8144e-01,
          1.0372e-01, 9.2620e-01],
         [1.6981e-02, 9.9643e-01, 9.9957e-01,  ..., 6.1867e-03,
          5.8643e-01, 2.4598e-02]],
        [[9.8334e-03, 4.1853e-03, 4.3732e-04,  ..., 5.3380e-05,
          2.0749e-01, 4.0148e-03],
         [9.8334e-03, 4.1853e-03, 4.3732e-04,  ..., 5.3380e-05,
          7.6322e-02, 4.0148e-03],
         [9.7050e-01, 4.1853e-03, 4.3732e-04,  ..., 5.3380e-05,
          9.4666e-02, 9.8796e-01],
         [9.8334e-03, 9.8744e-01, 9.9869e-01,  ..., 9.9984e-01,
          6.2152e-01, 4.0148e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:49,766 [Process: 0] Synchronize training processes
2024-08-18 15:16:49,767 [Process: 0] Evaluating...
2024-08-18 15:16:49,769 [Process: 0] EPOCH 227:
2024-08-18 15:16:49,770 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:50,916 [Process: 0] Synchronize training processes
2024-08-18 15:16:50,916 [Process: 0] Evaluating...
2024-08-18 15:16:50,918 [Process: 0] EPOCH 228:
2024-08-18 15:16:50,920 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8845e-01, 7.7888e-03, 7.9254e-03,  ..., 6.5505e-04,
          9.6285e-02, 9.7012e-01],
         [3.6227e-03, 7.7888e-03, 7.9254e-03,  ..., 6.5505e-04,
          9.3479e-02, 1.0924e-02],
         [4.3076e-03, 7.7888e-03, 7.9254e-03,  ..., 9.9803e-01,
          1.0332e-01, 9.4763e-03],
         [3.6227e-03, 9.7663e-01, 9.7622e-01,  ..., 6.5505e-04,
          7.0691e-01, 9.4763e-03]],
        [[9.8749e-01, 2.0589e-02, 4.3236e-03,  ..., 4.9873e-03,
          2.1106e-01, 1.6227e-03],
         [4.1697e-03, 2.0589e-02, 4.3236e-03,  ..., 4.9873e-03,
          1.2525e-01, 1.6227e-03],
         [4.1697e-03, 2.8426e-02, 4.3236e-03,  ..., 9.8504e-01,
          2.3745e-01, 9.9513e-01],
         [4.1697e-03, 9.3040e-01, 9.8703e-01,  ..., 4.9873e-03,
          4.2624e-01, 1.6227e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1789e-02, 4.8114e-03, 4.7401e-04,  ..., 1.6482e-02,
          6.7597e-02, 5.3375e-03],
         [1.1789e-02, 4.9948e-03, 4.7401e-04,  ..., 1.6482e-02,
          1.4717e-01, 5.3375e-03],
         [9.6463e-01, 4.8114e-03, 4.7401e-04,  ..., 9.5055e-01,
          6.7597e-02, 9.8399e-01],
         [1.1789e-02, 9.8538e-01, 9.9858e-01,  ..., 1.6482e-02,
          7.1764e-01, 5.3375e-03]],
        [[7.1473e-03, 4.3786e-04, 2.2277e-03,  ..., 2.4871e-04,
          1.8717e-01, 7.7602e-03],
         [7.1473e-03, 4.3786e-04, 2.2277e-03,  ..., 2.4871e-04,
          8.2218e-02, 7.7602e-03],
         [9.7856e-01, 4.3786e-04, 2.2277e-03,  ..., 2.4871e-04,
          1.2159e-01, 9.7672e-01],
         [7.1473e-03, 9.9869e-01, 9.9332e-01,  ..., 9.9925e-01,
          6.0903e-01, 7.7602e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9936e-01, 2.0539e-03, 1.6877e-02,  ..., 5.8088e-03,
          2.9627e-01, 9.4446e-01],
         [2.1269e-04, 2.0539e-03, 1.5968e-02,  ..., 5.8088e-03,
          1.0204e-01, 2.3042e-02],
         [2.1269e-04, 2.0539e-03, 1.9529e-02,  ..., 9.8257e-01,
          2.7442e-01, 1.6247e-02],
         [2.1269e-04, 9.9384e-01, 9.4763e-01,  ..., 5.8088e-03,
          3.2727e-01, 1.6247e-02]],
        [[9.9401e-01, 6.4587e-03, 6.0349e-03,  ..., 2.7442e-03,
          2.2224e-01, 1.0042e-03],
         [1.9966e-03, 6.4587e-03, 6.0349e-03,  ..., 2.7442e-03,
          1.5576e-01, 1.0042e-03],
         [1.9966e-03, 6.4587e-03, 6.2351e-03,  ..., 9.9177e-01,
          3.0467e-01, 9.9699e-01],
         [1.9966e-03, 9.8062e-01, 9.8170e-01,  ..., 2.7442e-03,
          3.1733e-01, 1.0042e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:52,057 [Process: 0] Synchronize training processes
2024-08-18 15:16:52,057 [Process: 0] Evaluating...
2024-08-18 15:16:52,059 [Process: 0] EPOCH 229:
2024-08-18 15:16:52,061 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2041e-02, 1.0288e-02, 8.1047e-04,  ..., 9.0614e-03,
          2.2741e-02, 1.5167e-02],
         [2.7457e-02, 1.0288e-02, 8.1047e-04,  ..., 9.0614e-03,
          2.2741e-02, 1.5167e-02],
         [9.0522e-01, 1.0288e-02, 8.1047e-04,  ..., 9.7282e-01,
          2.2741e-02, 9.5450e-01],
         [3.5286e-02, 9.6913e-01, 9.9757e-01,  ..., 9.0614e-03,
          9.3178e-01, 1.5167e-02]],
        [[3.2856e-03, 2.3171e-03, 1.3604e-03,  ..., 2.3356e-04,
          1.3177e-01, 5.4228e-03],
         [3.2856e-03, 2.3171e-03, 1.3604e-03,  ..., 2.3356e-04,
          8.3139e-02, 5.4228e-03],
         [9.9014e-01, 2.3171e-03, 1.3604e-03,  ..., 2.3356e-04,
          1.2357e-01, 9.8373e-01],
         [3.2856e-03, 9.9305e-01, 9.9592e-01,  ..., 9.9930e-01,
          6.6152e-01, 5.4228e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9844e-01, 1.4183e-03, 7.5855e-03,  ..., 6.1647e-04,
          2.7174e-01, 9.9587e-01],
         [5.2134e-04, 1.4837e-03, 7.5855e-03,  ..., 6.1647e-04,
          8.1048e-02, 1.3778e-03],
         [5.2134e-04, 1.4183e-03, 7.5855e-03,  ..., 9.9815e-01,
          5.1772e-01, 1.3778e-03],
         [5.2134e-04, 9.9568e-01, 9.7724e-01,  ..., 6.1647e-04,
          1.2949e-01, 1.3778e-03]],
        [[9.7552e-01, 1.5069e-02, 5.7681e-03,  ..., 1.3526e-03,
          2.5073e-01, 1.6101e-03],
         [8.0159e-03, 1.5069e-02, 5.7681e-03,  ..., 1.3526e-03,
          1.2673e-01, 1.6101e-03],
         [8.4484e-03, 2.0079e-02, 5.7681e-03,  ..., 9.9594e-01,
          2.4807e-01, 9.9517e-01],
         [8.0159e-03, 9.4978e-01, 9.8270e-01,  ..., 1.3526e-03,
          3.7446e-01, 1.6101e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.2727e-03, 9.9796e-03, 1.1446e-03,  ..., 5.3380e-03,
          6.9715e-03, 2.9740e-02],
         [8.2727e-03, 9.9796e-03, 1.1446e-03,  ..., 5.3380e-03,
          6.9715e-03, 2.4586e-02],
         [9.7518e-01, 9.9796e-03, 1.1446e-03,  ..., 9.8399e-01,
          6.9715e-03, 9.2109e-01],
         [8.2727e-03, 9.7006e-01, 9.9657e-01,  ..., 5.3380e-03,
          9.7909e-01, 2.4586e-02]],
        [[2.3970e-03, 9.0187e-04, 2.5051e-03,  ..., 1.4279e-04,
          1.6184e-01, 1.6571e-02],
         [2.3970e-03, 9.0187e-04, 2.5051e-03,  ..., 1.4279e-04,
          8.5641e-02, 1.6331e-02],
         [9.9281e-01, 9.0187e-04, 2.5051e-03,  ..., 1.4279e-04,
          1.0887e-01, 9.4915e-01],
         [2.3970e-03, 9.9729e-01, 9.9248e-01,  ..., 9.9957e-01,
          6.4365e-01, 1.7951e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9911e-01, 9.2567e-03, 1.3278e-02,  ..., 1.3561e-03,
          1.4489e-02, 9.6397e-01],
         [2.9592e-04, 9.2567e-03, 1.3278e-02,  ..., 1.3561e-03,
          1.4489e-02, 1.1777e-02],
         [2.9592e-04, 9.2567e-03, 1.5657e-02,  ..., 9.9593e-01,
          9.5653e-01, 1.2476e-02],
         [2.9592e-04, 9.7223e-01, 9.5779e-01,  ..., 1.3561e-03,
          1.4489e-02, 1.1777e-02]],
        [[9.3928e-01, 4.1315e-03, 6.8466e-03,  ..., 3.2249e-03,
          1.7188e-01, 1.7514e-02],
         [1.8562e-02, 4.1315e-03, 6.8466e-03,  ..., 3.2249e-03,
          1.5578e-01, 1.3308e-02],
         [2.3598e-02, 4.1315e-03, 6.8466e-03,  ..., 9.9033e-01,
          2.5361e-01, 9.5587e-01],
         [1.8562e-02, 9.8761e-01, 9.7946e-01,  ..., 3.2249e-03,
          4.1873e-01, 1.3308e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:16:53,196 [Process: 0] Synchronize training processes
2024-08-18 15:16:53,196 [Process: 0] Evaluating...
2024-08-18 15:16:53,198 [Process: 0] EPOCH 230:
2024-08-18 15:16:53,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:54,334 [Process: 0] Synchronize training processes
2024-08-18 15:16:54,334 [Process: 0] Evaluating...
2024-08-18 15:16:54,336 [Process: 0] EPOCH 231:
2024-08-18 15:16:54,337 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0442e-02, 5.1723e-03, 1.9244e-03,  ..., 1.6891e-02,
          3.1160e-03, 1.0711e-02],
         [1.9787e-02, 5.1723e-03, 2.0456e-03,  ..., 1.6891e-02,
          3.1160e-03, 1.0711e-02],
         [9.3752e-01, 5.1723e-03, 1.9244e-03,  ..., 9.4933e-01,
          3.1160e-03, 9.6787e-01],
         [2.2256e-02, 9.8448e-01, 9.9411e-01,  ..., 1.6891e-02,
          9.9065e-01, 1.0711e-02]],
        [[3.7390e-02, 6.2140e-04, 2.5483e-02,  ..., 2.7796e-03,
          1.4419e-01, 4.0209e-03],
         [3.1454e-02, 6.2140e-04, 2.2697e-02,  ..., 2.9316e-03,
          7.8957e-02, 4.0209e-03],
         [8.7797e-01, 6.2140e-04, 2.2697e-02,  ..., 2.7796e-03,
          8.2225e-02, 9.8794e-01],
         [5.3190e-02, 9.9814e-01, 9.2912e-01,  ..., 9.9151e-01,
          6.9463e-01, 4.0209e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 2.6366e-03, 9.6960e-03,  ..., 8.5870e-04,
          1.7844e-01, 9.9103e-01],
         [9.2503e-06, 2.6366e-03, 9.6960e-03,  ..., 8.5870e-04,
          1.5247e-01, 3.8408e-03],
         [9.2503e-06, 2.6366e-03, 9.6960e-03,  ..., 9.9742e-01,
          1.5433e-01, 2.5660e-03],
         [9.2503e-06, 9.9209e-01, 9.7091e-01,  ..., 8.5870e-04,
          5.1476e-01, 2.5660e-03]],
        [[9.8751e-01, 9.2336e-03, 8.0221e-03,  ..., 1.1150e-03,
          4.5559e-01, 2.6052e-03],
         [3.9726e-03, 8.6011e-03, 8.0221e-03,  ..., 1.1150e-03,
          1.3145e-01, 2.6052e-03],
         [4.5468e-03, 8.6011e-03, 8.0221e-03,  ..., 9.9665e-01,
          2.2279e-01, 9.9218e-01],
         [3.9726e-03, 9.7356e-01, 9.7593e-01,  ..., 1.1150e-03,
          1.9017e-01, 2.6052e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.8936e-03, 2.5722e-03, 4.3139e-03,  ..., 6.7652e-03,
          2.0833e-03, 1.3744e-02],
         [7.8936e-03, 2.5722e-03, 5.3759e-03,  ..., 6.7652e-03,
          2.0833e-03, 1.3744e-02],
         [9.7632e-01, 2.5722e-03, 4.3139e-03,  ..., 9.7970e-01,
          2.0833e-03, 9.5877e-01],
         [7.8936e-03, 9.9228e-01, 9.8600e-01,  ..., 6.7652e-03,
          9.9375e-01, 1.3744e-02]],
        [[1.7237e-02, 9.2602e-04, 6.4595e-02,  ..., 2.2863e-03,
          1.3018e-01, 1.0075e-02],
         [1.7237e-02, 9.2602e-04, 4.1981e-02,  ..., 2.2863e-03,
          6.1189e-02, 1.0075e-02],
         [9.4344e-01, 9.2602e-04, 4.1981e-02,  ..., 2.2863e-03,
          6.1189e-02, 9.6978e-01],
         [2.2082e-02, 9.9722e-01, 8.5144e-01,  ..., 9.9314e-01,
          7.4744e-01, 1.0075e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:16:55,474 [Process: 0] Synchronize training processes
2024-08-18 15:16:55,475 [Process: 0] Evaluating...
2024-08-18 15:16:55,478 [Process: 0] EPOCH 232:
2024-08-18 15:16:55,480 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:56,615 [Process: 0] Synchronize training processes
2024-08-18 15:16:56,615 [Process: 0] Evaluating...
2024-08-18 15:16:56,617 [Process: 0] EPOCH 233:
2024-08-18 15:16:56,619 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9969e-01, 6.3559e-03, 1.1990e-02,  ..., 9.5095e-04,
          7.6452e-02, 9.7459e-01],
         [1.0196e-04, 5.6067e-03, 1.1990e-02,  ..., 9.5095e-04,
          6.9689e-02, 8.4708e-03],
         [1.0196e-04, 5.6067e-03, 1.1990e-02,  ..., 9.9715e-01,
          7.1322e-01, 8.4708e-03],
         [1.0196e-04, 9.8243e-01, 9.6403e-01,  ..., 9.5095e-04,
          1.4064e-01, 8.4708e-03]],
        [[9.8103e-01, 1.0141e-02, 6.1417e-03,  ..., 2.1985e-03,
          1.3835e-01, 5.7416e-04],
         [5.4504e-03, 1.0141e-02, 6.1417e-03,  ..., 2.1985e-03,
          1.9597e-01, 5.7416e-04],
         [8.0733e-03, 1.0141e-02, 6.1417e-03,  ..., 9.9340e-01,
          1.1029e-01, 9.9828e-01],
         [5.4504e-03, 9.6958e-01, 9.8157e-01,  ..., 2.1985e-03,
          5.5539e-01, 5.7416e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9304e-03, 8.2190e-04, 7.9354e-04,  ..., 1.3589e-02,
          1.8032e-03, 5.1212e-03],
         [1.9304e-03, 8.2190e-04, 7.9354e-04,  ..., 1.3589e-02,
          1.8032e-03, 5.1212e-03],
         [9.9421e-01, 8.2190e-04, 7.9354e-04,  ..., 9.5923e-01,
          1.8032e-03, 9.8464e-01],
         [1.9304e-03, 9.9753e-01, 9.9762e-01,  ..., 1.3589e-02,
          9.9459e-01, 5.1212e-03]],
        [[9.8385e-03, 5.9484e-04, 2.2954e-03,  ..., 1.2064e-04,
          1.3449e-01, 5.7046e-03],
         [9.8385e-03, 5.9484e-04, 2.2954e-03,  ..., 1.2064e-04,
          8.1254e-02, 5.7046e-03],
         [9.7048e-01, 5.9484e-04, 2.2954e-03,  ..., 1.2064e-04,
          8.1254e-02, 9.8289e-01],
         [9.8385e-03, 9.9822e-01, 9.9311e-01,  ..., 9.9964e-01,
          7.0300e-01, 5.7046e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9849e-01, 1.0351e-02, 5.3899e-03,  ..., 3.6911e-05,
          6.2227e-04, 9.9188e-01],
         [5.0413e-04, 1.0740e-02, 5.3899e-03,  ..., 3.6911e-05,
          6.2227e-04, 2.7059e-03],
         [5.0413e-04, 1.0351e-02, 5.3899e-03,  ..., 9.9989e-01,
          9.9813e-01, 2.7059e-03],
         [5.0413e-04, 9.6856e-01, 9.8383e-01,  ..., 3.6911e-05,
          6.2227e-04, 2.7059e-03]],
        [[9.6851e-01, 7.4922e-03, 4.4513e-03,  ..., 1.3656e-02,
          2.0058e-01, 1.6200e-03],
         [8.4520e-03, 7.4922e-03, 4.4513e-03,  ..., 1.3656e-02,
          2.1207e-01, 1.6200e-03],
         [1.4588e-02, 7.4922e-03, 4.4513e-03,  ..., 9.5903e-01,
          1.3061e-01, 9.9514e-01],
         [8.4520e-03, 9.7752e-01, 9.8665e-01,  ..., 1.3656e-02,
          4.5674e-01, 1.6200e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9928e-03, 1.7089e-02, 8.8781e-05,  ..., 1.5128e-02,
          9.4887e-03, 6.7831e-03],
         [6.9928e-03, 2.1964e-02, 8.8781e-05,  ..., 1.5128e-02,
          9.4887e-03, 6.7831e-03],
         [9.7902e-01, 1.6753e-02, 8.8781e-05,  ..., 9.5462e-01,
          9.4887e-03, 9.7965e-01],
         [6.9928e-03, 9.4419e-01, 9.9973e-01,  ..., 1.5128e-02,
          9.7153e-01, 6.7831e-03]],
        [[1.1153e-02, 9.9399e-04, 2.5610e-03,  ..., 2.4249e-04,
          1.5908e-01, 1.9653e-02],
         [1.1153e-02, 9.9399e-04, 2.5610e-03,  ..., 2.4249e-04,
          1.0345e-01, 1.9653e-02],
         [9.6654e-01, 9.9399e-04, 2.5610e-03,  ..., 2.4249e-04,
          9.5178e-02, 9.3650e-01],
         [1.1153e-02, 9.9702e-01, 9.9232e-01,  ..., 9.9927e-01,
          6.4229e-01, 2.4191e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:57,758 [Process: 0] Synchronize training processes
2024-08-18 15:16:57,758 [Process: 0] Evaluating...
2024-08-18 15:16:57,760 [Process: 0] EPOCH 234:
2024-08-18 15:16:57,761 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:16:58,895 [Process: 0] Synchronize training processes
2024-08-18 15:16:58,896 [Process: 0] Evaluating...
2024-08-18 15:16:58,897 [Process: 0] EPOCH 235:
2024-08-18 15:16:58,899 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9908e-01, 4.8040e-03, 4.5734e-03,  ..., 1.7945e-04,
          2.2015e-02, 9.9888e-01],
         [3.0768e-04, 4.8040e-03, 4.5734e-03,  ..., 1.7945e-04,
          1.4458e-02, 3.7447e-04],
         [3.0768e-04, 4.8040e-03, 4.5734e-03,  ..., 9.9946e-01,
          9.4907e-01, 3.7447e-04],
         [3.0768e-04, 9.8559e-01, 9.8628e-01,  ..., 1.7945e-04,
          1.4458e-02, 3.7447e-04]],
        [[9.2376e-01, 1.4664e-02, 1.4632e-02,  ..., 9.3289e-04,
          2.6844e-01, 1.9543e-04],
         [1.2359e-02, 1.5685e-02, 1.4632e-02,  ..., 9.3289e-04,
          1.1346e-01, 1.9543e-04],
         [5.1518e-02, 1.4664e-02, 1.4632e-02,  ..., 9.9720e-01,
          1.4619e-01, 9.9941e-01],
         [1.2359e-02, 9.5499e-01, 9.5611e-01,  ..., 9.3289e-04,
          4.7191e-01, 1.9543e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3160e-03, 2.7391e-02, 1.7257e-03,  ..., 1.2290e-02,
          9.0148e-03, 7.8199e-03],
         [4.3160e-03, 4.1261e-02, 1.7257e-03,  ..., 1.2290e-02,
          9.5030e-03, 7.8199e-03],
         [9.8705e-01, 2.7391e-02, 1.7257e-03,  ..., 9.6313e-01,
          9.0148e-03, 9.7654e-01],
         [4.3160e-03, 9.0396e-01, 9.9482e-01,  ..., 1.2290e-02,
          9.7247e-01, 7.8199e-03]],
        [[1.6880e-02, 3.2522e-04, 1.0037e-01,  ..., 2.5007e-03,
          1.5507e-01, 3.3104e-02],
         [1.6880e-02, 3.2522e-04, 5.6829e-02,  ..., 2.5007e-03,
          1.1291e-01, 3.2998e-02],
         [9.4670e-01, 3.2522e-04, 5.7273e-02,  ..., 2.5007e-03,
          9.8641e-02, 8.8251e-01],
         [1.9544e-02, 9.9902e-01, 7.8553e-01,  ..., 9.9250e-01,
          6.3338e-01, 5.1393e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9759e-01, 2.0326e-02, 6.1575e-03,  ..., 1.9145e-04,
          1.0586e-02, 9.9938e-01],
         [8.0397e-04, 1.5045e-02, 6.1575e-03,  ..., 1.9145e-04,
          4.8840e-03, 2.0677e-04],
         [8.0397e-04, 1.5045e-02, 6.1575e-03,  ..., 9.9943e-01,
          9.7965e-01, 2.0677e-04],
         [8.0397e-04, 9.4958e-01, 9.8153e-01,  ..., 1.9145e-04,
          4.8840e-03, 2.0677e-04]],
        [[9.2214e-01, 4.7000e-03, 8.6695e-03,  ..., 3.4367e-03,
          1.7773e-01, 1.8661e-03],
         [2.1806e-02, 4.7000e-03, 8.6695e-03,  ..., 3.4367e-03,
          1.3765e-01, 1.8661e-03],
         [3.4767e-02, 4.7000e-03, 8.6695e-03,  ..., 9.8969e-01,
          2.5211e-01, 9.9440e-01],
         [2.1291e-02, 9.8590e-01, 9.7399e-01,  ..., 3.4367e-03,
          4.3252e-01, 1.8661e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:17:00,038 [Process: 0] Synchronize training processes
2024-08-18 15:17:00,038 [Process: 0] Evaluating...
2024-08-18 15:17:00,040 [Process: 0] EPOCH 236:
2024-08-18 15:17:00,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2726e-02, 3.8083e-03, 1.0017e-03,  ..., 4.6408e-03,
          2.1188e-03, 1.5795e-02],
         [1.2726e-02, 3.8083e-03, 1.0017e-03,  ..., 4.6408e-03,
          2.1188e-03, 1.5795e-02],
         [9.6182e-01, 3.8083e-03, 1.0017e-03,  ..., 9.8608e-01,
          2.1188e-03, 9.5262e-01],
         [1.2726e-02, 9.8858e-01, 9.9699e-01,  ..., 4.6408e-03,
          9.9364e-01, 1.5795e-02]],
        [[1.4438e-02, 1.8078e-04, 4.5083e-02,  ..., 4.2241e-05,
          2.1829e-01, 6.6208e-03],
         [1.4438e-02, 1.8078e-04, 4.3175e-02,  ..., 4.2241e-05,
          9.0997e-02, 6.6208e-03],
         [9.5595e-01, 1.8078e-04, 8.3158e-01,  ..., 4.2241e-05,
          9.2640e-02, 9.8014e-01],
         [1.5171e-02, 9.9946e-01, 8.0157e-02,  ..., 9.9987e-01,
          5.9807e-01, 6.6208e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8719e-01, 4.4313e-02, 2.5683e-03,  ..., 2.2321e-03,
          3.1240e-03, 9.9818e-01],
         [4.2691e-03, 4.4531e-02, 2.5683e-03,  ..., 2.2321e-03,
          3.1240e-03, 6.0747e-04],
         [4.2691e-03, 4.8483e-02, 2.5683e-03,  ..., 9.9330e-01,
          9.9063e-01, 6.0747e-04],
         [4.2691e-03, 8.6267e-01, 9.9230e-01,  ..., 2.2321e-03,
          3.1240e-03, 6.0747e-04]],
        [[9.9335e-01, 3.4158e-03, 1.4230e-02,  ..., 3.8985e-03,
          2.3465e-01, 5.6318e-03],
         [2.2180e-03, 3.4158e-03, 1.2623e-02,  ..., 3.8985e-03,
          2.9551e-01, 5.6318e-03],
         [2.2180e-03, 3.4158e-03, 1.2623e-02,  ..., 9.8830e-01,
          1.8069e-01, 9.8310e-01],
         [2.2180e-03, 9.8975e-01, 9.6052e-01,  ..., 3.8985e-03,
          2.8915e-01, 5.6318e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.0978e-03, 1.7416e-03, 2.1062e-03,  ..., 1.8385e-02,
          4.4902e-03, 8.0848e-03],
         [6.0978e-03, 1.7416e-03, 2.1062e-03,  ..., 1.8385e-02,
          4.4902e-03, 8.0848e-03],
         [9.8171e-01, 1.7416e-03, 2.1062e-03,  ..., 9.4485e-01,
          4.4902e-03, 9.7575e-01],
         [6.0978e-03, 9.9478e-01, 9.9368e-01,  ..., 1.8385e-02,
          9.8653e-01, 8.0848e-03]],
        [[7.8415e-03, 7.2262e-05, 8.9930e-03,  ..., 1.3582e-03,
          1.6692e-01, 1.7774e-02],
         [7.8415e-03, 7.2262e-05, 8.9930e-03,  ..., 1.3582e-03,
          8.7182e-02, 1.7774e-02],
         [9.7648e-01, 7.2262e-05, 8.9930e-03,  ..., 1.3582e-03,
          8.7182e-02, 9.4417e-01],
         [7.8415e-03, 9.9978e-01, 9.7302e-01,  ..., 9.9593e-01,
          6.5871e-01, 2.0281e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9880e-01, 1.1986e-02, 1.2824e-03,  ..., 7.6586e-04,
          1.0139e-03, 6.0392e-03],
         [3.9885e-04, 1.1986e-02, 1.2824e-03,  ..., 7.6586e-04,
          1.0139e-03, 6.0392e-03],
         [3.9885e-04, 1.1986e-02, 1.2824e-03,  ..., 9.9770e-01,
          9.9696e-01, 6.0392e-03],
         [3.9885e-04, 9.6404e-01, 9.9615e-01,  ..., 7.6586e-04,
          1.0139e-03, 9.8188e-01]],
        [[9.4521e-01, 1.7612e-02, 2.3117e-03,  ..., 2.0891e-02,
          1.4029e-01, 1.8009e-03],
         [2.5549e-02, 2.3998e-02, 2.3117e-03,  ..., 2.4074e-02,
          1.9786e-01, 1.8009e-03],
         [1.4896e-02, 1.7612e-02, 2.3117e-03,  ..., 9.3515e-01,
          1.2227e-01, 9.9460e-01],
         [1.4340e-02, 9.4078e-01, 9.9306e-01,  ..., 1.9883e-02,
          5.3959e-01, 1.8009e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:01,179 [Process: 0] Synchronize training processes
2024-08-18 15:17:01,180 [Process: 0] Evaluating...
2024-08-18 15:17:01,181 [Process: 0] EPOCH 237:
2024-08-18 15:17:01,183 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:02,321 [Process: 0] Synchronize training processes
2024-08-18 15:17:02,321 [Process: 0] Evaluating...
2024-08-18 15:17:02,323 [Process: 0] EPOCH 238:
2024-08-18 15:17:02,324 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4960e-02, 5.8757e-03, 4.7126e-04,  ..., 7.6522e-03,
          8.9946e-04, 3.2044e-02],
         [1.4960e-02, 8.8272e-03, 4.7126e-04,  ..., 7.6522e-03,
          8.9946e-04, 3.0488e-02],
         [9.5512e-01, 5.8757e-03, 4.7126e-04,  ..., 9.7704e-01,
          8.9946e-04, 8.8988e-01],
         [1.4960e-02, 9.7942e-01, 9.9859e-01,  ..., 7.6522e-03,
          9.9730e-01, 4.7584e-02]],
        [[1.9951e-02, 3.0272e-03, 5.6522e-04,  ..., 1.5603e-04,
          3.6063e-01, 1.5898e-02],
         [1.9951e-02, 3.0272e-03, 5.6522e-04,  ..., 1.5603e-04,
          9.7828e-02, 1.5898e-02],
         [9.3630e-01, 3.0272e-03, 5.6522e-04,  ..., 1.5603e-04,
          8.7423e-02, 9.5231e-01],
         [2.3795e-02, 9.9092e-01, 9.9830e-01,  ..., 9.9953e-01,
          4.5412e-01, 1.5898e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9603e-01, 6.4413e-03, 6.6138e-03,  ..., 3.0901e-04,
          2.2152e-03, 3.3617e-03],
         [1.3248e-03, 6.4413e-03, 6.6138e-03,  ..., 3.0901e-04,
          2.1151e-03, 3.3617e-03],
         [1.3248e-03, 6.4413e-03, 6.6138e-03,  ..., 9.9907e-01,
          9.9355e-01, 3.3617e-03],
         [1.3248e-03, 9.8068e-01, 9.8016e-01,  ..., 3.0901e-04,
          2.1151e-03, 9.8992e-01]],
        [[9.8383e-01, 4.0239e-03, 4.9014e-03,  ..., 8.7197e-04,
          5.6701e-02, 1.0608e-03],
         [5.3899e-03, 4.0239e-03, 4.9014e-03,  ..., 8.7197e-04,
          1.4209e-01, 1.0608e-03],
         [5.3899e-03, 4.0239e-03, 4.9014e-03,  ..., 9.9738e-01,
          7.4450e-01, 9.9682e-01],
         [5.3899e-03, 9.8793e-01, 9.8530e-01,  ..., 8.7197e-04,
          5.6701e-02, 1.0608e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7245e-03, 5.8157e-03, 6.6015e-04,  ..., 1.5221e-02,
          9.2061e-04, 1.7965e-02],
         [6.7245e-03, 7.6914e-03, 6.6015e-04,  ..., 1.5221e-02,
          9.2061e-04, 1.7965e-02],
         [9.7983e-01, 5.8157e-03, 6.6015e-04,  ..., 9.5434e-01,
          9.2061e-04, 9.4610e-01],
         [6.7245e-03, 9.8068e-01, 9.9802e-01,  ..., 1.5221e-02,
          9.9724e-01, 1.7965e-02]],
        [[1.7625e-02, 3.0987e-04, 1.2433e-03,  ..., 6.9973e-04,
          9.5313e-01, 1.3229e-02],
         [1.7625e-02, 3.0987e-04, 1.2433e-03,  ..., 6.9973e-04,
          1.0925e-02, 1.3229e-02],
         [9.4526e-01, 3.0987e-04, 1.2433e-03,  ..., 6.9973e-04,
          1.0925e-02, 9.6031e-01],
         [1.9496e-02, 9.9907e-01, 9.9627e-01,  ..., 9.9790e-01,
          2.5020e-02, 1.3229e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 8.7406e-03, 1.4602e-02,  ..., 4.5648e-04,
          1.7103e-02, 8.6447e-03],
         [4.9318e-05, 8.7406e-03, 1.4602e-02,  ..., 4.5648e-04,
          7.8013e-03, 8.6447e-03],
         [4.9318e-05, 8.7406e-03, 1.4602e-02,  ..., 9.9863e-01,
          9.6729e-01, 8.6447e-03],
         [4.9318e-05, 9.7378e-01, 9.5619e-01,  ..., 4.5648e-04,
          7.8013e-03, 9.7407e-01]],
        [[9.9159e-01, 5.6079e-03, 9.7802e-03,  ..., 8.7028e-04,
          9.9154e-02, 6.1091e-04],
         [4.2831e-03, 6.6774e-03, 1.9170e-02,  ..., 8.7028e-04,
          1.1204e-01, 6.1091e-04],
         [2.0629e-03, 5.6079e-03, 9.7802e-03,  ..., 9.9739e-01,
          2.0137e-01, 9.9817e-01],
         [2.0629e-03, 9.8211e-01, 9.6127e-01,  ..., 8.7028e-04,
          5.8744e-01, 6.1091e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:03,454 [Process: 0] Synchronize training processes
2024-08-18 15:17:03,454 [Process: 0] Evaluating...
2024-08-18 15:17:03,456 [Process: 0] EPOCH 239:
2024-08-18 15:17:03,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:04,600 [Process: 0] Synchronize training processes
2024-08-18 15:17:04,600 [Process: 0] Evaluating...
2024-08-18 15:17:04,602 [Process: 0] EPOCH 240:
2024-08-18 15:17:04,604 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.0193e-03, 4.8135e-04, 7.5472e-04,  ..., 8.1364e-03,
          2.3864e-02, 2.7600e-02],
         [9.0193e-03, 4.8135e-04, 7.5472e-04,  ..., 8.1364e-03,
          2.2304e-02, 2.0134e-02],
         [9.7294e-01, 4.8135e-04, 7.5472e-04,  ..., 9.7559e-01,
          2.2304e-02, 9.3213e-01],
         [9.0193e-03, 9.9856e-01, 9.9774e-01,  ..., 8.1364e-03,
          9.3153e-01, 2.0134e-02]],
        [[1.0781e-02, 2.3765e-04, 2.0475e-03,  ..., 5.7846e-04,
          9.9368e-01, 2.1249e-02],
         [1.0781e-02, 2.3765e-04, 2.0475e-03,  ..., 5.7846e-04,
          2.1068e-03, 2.1249e-02],
         [9.6766e-01, 2.3765e-04, 2.0475e-03,  ..., 5.7846e-04,
          2.1068e-03, 9.3482e-01],
         [1.0781e-02, 9.9929e-01, 9.9386e-01,  ..., 9.9826e-01,
          2.1068e-03, 2.2679e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9259e-01, 1.4200e-02, 6.0475e-03,  ..., 1.8207e-03,
          2.3905e-01, 6.7558e-03],
         [2.6769e-03, 1.4200e-02, 6.0475e-03,  ..., 1.8207e-03,
          1.6003e-02, 8.0992e-03],
         [2.3649e-03, 1.4200e-02, 6.0475e-03,  ..., 9.9454e-01,
          7.2895e-01, 6.7558e-03],
         [2.3649e-03, 9.5740e-01, 9.8186e-01,  ..., 1.8207e-03,
          1.6003e-02, 9.7839e-01]],
        [[9.9198e-01, 8.2036e-03, 6.5298e-03,  ..., 2.5793e-03,
          1.3513e-01, 2.6664e-04],
         [3.0645e-03, 8.2036e-03, 6.5298e-03,  ..., 2.5793e-03,
          1.3524e-01, 2.6664e-04],
         [2.4791e-03, 8.2036e-03, 6.5298e-03,  ..., 9.9226e-01,
          2.0278e-01, 9.9920e-01],
         [2.4791e-03, 9.7539e-01, 9.8041e-01,  ..., 2.5793e-03,
          5.2685e-01, 2.6664e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0411e-02, 9.1581e-04, 1.3165e-03,  ..., 6.8287e-03,
          2.1555e-02, 1.1312e-02],
         [2.0411e-02, 9.4064e-04, 1.3165e-03,  ..., 6.8287e-03,
          2.9620e-02, 1.1312e-02],
         [9.3814e-01, 9.1581e-04, 1.3165e-03,  ..., 9.7951e-01,
          2.1555e-02, 9.6606e-01],
         [2.1042e-02, 9.9723e-01, 9.9605e-01,  ..., 6.8287e-03,
          9.2727e-01, 1.1312e-02]],
        [[1.7188e-02, 5.5890e-04, 1.3391e-03,  ..., 6.0619e-05,
          9.9785e-01, 6.4716e-03],
         [1.7188e-02, 5.5890e-04, 1.3391e-03,  ..., 6.3779e-05,
          7.1677e-04, 6.4716e-03],
         [9.4844e-01, 5.5890e-04, 1.3391e-03,  ..., 6.0619e-05,
          7.1677e-04, 9.8059e-01],
         [1.7188e-02, 9.9832e-01, 9.9598e-01,  ..., 9.9982e-01,
          7.1677e-04, 6.4716e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:05,738 [Process: 0] Synchronize training processes
2024-08-18 15:17:05,738 [Process: 0] Evaluating...
2024-08-18 15:17:05,740 [Process: 0] EPOCH 241:
2024-08-18 15:17:05,742 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:06,875 [Process: 0] Synchronize training processes
2024-08-18 15:17:06,875 [Process: 0] Evaluating...
2024-08-18 15:17:06,879 [Process: 0] EPOCH 242:
2024-08-18 15:17:06,881 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9805e-01, 7.8928e-03, 1.6760e-03,  ..., 1.6489e-03,
          8.7404e-03, 2.3989e-03],
         [6.4840e-04, 7.8928e-03, 1.6760e-03,  ..., 1.6489e-03,
          2.4354e-03, 2.3989e-03],
         [6.4840e-04, 7.8928e-03, 1.6760e-03,  ..., 9.9505e-01,
          9.8639e-01, 2.3989e-03],
         [6.4840e-04, 9.7632e-01, 9.9497e-01,  ..., 1.6489e-03,
          2.4354e-03, 9.9280e-01]],
        [[8.4154e-01, 1.1536e-02, 1.5599e-02,  ..., 1.5902e-04,
          9.1934e-02, 2.4683e-04],
         [9.5591e-02, 2.2200e-02, 3.0879e-02,  ..., 1.5902e-04,
          1.3955e-01, 2.4683e-04],
         [3.3288e-02, 1.1536e-02, 1.5599e-02,  ..., 9.9952e-01,
          1.7857e-01, 9.9926e-01],
         [2.9585e-02, 9.5473e-01, 9.3792e-01,  ..., 1.5902e-04,
          5.8995e-01, 2.4683e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.7875e-03, 5.9517e-04, 2.2206e-03,  ..., 5.5680e-03,
          3.5316e-03, 2.6441e-03],
         [4.7875e-03, 6.5373e-04, 3.4843e-03,  ..., 5.5680e-03,
          3.5316e-03, 2.6441e-03],
         [9.8564e-01, 5.9517e-04, 2.2206e-03,  ..., 9.8330e-01,
          3.5316e-03, 9.9207e-01],
         [4.7875e-03, 9.9816e-01, 9.9207e-01,  ..., 5.5680e-03,
          9.8941e-01, 2.6441e-03]],
        [[9.3191e-03, 1.2620e-03, 9.7762e-04,  ..., 1.0772e-04,
          9.0572e-01, 1.0422e-02],
         [9.3191e-03, 1.2620e-03, 9.7762e-04,  ..., 1.0772e-04,
          2.3156e-02, 1.0422e-02],
         [9.7204e-01, 1.2620e-03, 9.7762e-04,  ..., 1.0772e-04,
          2.3156e-02, 9.6873e-01],
         [9.3191e-03, 9.9621e-01, 9.9707e-01,  ..., 9.9968e-01,
          4.7969e-02, 1.0422e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9429e-01, 8.9395e-03, 3.9062e-03,  ..., 3.9376e-04,
          2.5956e-03, 9.9463e-01],
         [1.7639e-03, 8.9395e-03, 3.9062e-03,  ..., 3.9376e-04,
          2.1004e-03, 1.8582e-03],
         [1.7639e-03, 8.9395e-03, 3.9062e-03,  ..., 9.9882e-01,
          9.9320e-01, 1.7540e-03],
         [2.1832e-03, 9.7318e-01, 9.8828e-01,  ..., 3.9376e-04,
          2.1004e-03, 1.7540e-03]],
        [[9.3043e-01, 4.7835e-03, 6.6548e-03,  ..., 3.2805e-03,
          1.7624e-01, 3.3435e-04],
         [1.7685e-02, 1.0635e-02, 6.6548e-03,  ..., 3.2805e-03,
          9.3801e-02, 3.3435e-04],
         [3.4198e-02, 4.7835e-03, 6.6548e-03,  ..., 9.9016e-01,
          4.3967e-01, 9.9900e-01],
         [1.7685e-02, 9.7980e-01, 9.8004e-01,  ..., 3.2805e-03,
          2.9029e-01, 3.3435e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5379e-03, 9.7112e-04, 1.4531e-03,  ..., 7.0226e-03,
          6.5096e-04, 2.0191e-03],
         [2.5379e-03, 9.7112e-04, 1.6116e-03,  ..., 7.0226e-03,
          6.5096e-04, 2.0191e-03],
         [9.9239e-01, 9.7112e-04, 1.4531e-03,  ..., 9.7893e-01,
          6.5096e-04, 9.9394e-01],
         [2.5379e-03, 9.9709e-01, 9.9548e-01,  ..., 7.0226e-03,
          9.9805e-01, 2.0191e-03]],
        [[2.7732e-02, 1.5244e-03, 3.3068e-04,  ..., 6.0895e-04,
          2.2705e-01, 9.4842e-03],
         [2.7732e-02, 1.7504e-03, 3.3068e-04,  ..., 6.0895e-04,
          9.7267e-02, 9.4842e-03],
         [9.0762e-01, 1.5244e-03, 3.3068e-04,  ..., 6.0895e-04,
          1.8879e-01, 9.7155e-01],
         [3.6916e-02, 9.9520e-01, 9.9901e-01,  ..., 9.9817e-01,
          4.8689e-01, 9.4842e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:08,014 [Process: 0] Synchronize training processes
2024-08-18 15:17:08,014 [Process: 0] Evaluating...
2024-08-18 15:17:08,016 [Process: 0] EPOCH 243:
2024-08-18 15:17:08,018 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.7241e-01, 1.5090e-02, 7.7515e-03,  ..., 4.3663e-04,
          1.4461e-02, 9.9590e-01],
         [2.7686e-02, 1.5090e-02, 7.7515e-03,  ..., 4.3663e-04,
          1.1750e-02, 1.3652e-03],
         [4.4765e-02, 1.5090e-02, 7.7515e-03,  ..., 9.9869e-01,
          9.6204e-01, 1.3652e-03],
         [5.5134e-02, 9.5473e-01, 9.7675e-01,  ..., 4.3663e-04,
          1.1750e-02, 1.3652e-03]],
        [[9.8265e-01, 7.1769e-03, 3.2083e-03,  ..., 1.4546e-03,
          1.5277e-01, 1.5240e-03],
         [5.1418e-03, 7.1769e-03, 5.0369e-03,  ..., 1.4546e-03,
          2.0387e-01, 1.5240e-03],
         [7.0700e-03, 7.1769e-03, 3.2083e-03,  ..., 9.9564e-01,
          1.9075e-01, 9.9543e-01],
         [5.1418e-03, 9.7847e-01, 9.8855e-01,  ..., 1.4546e-03,
          4.5261e-01, 1.5240e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0151e-02, 3.7583e-03, 6.5524e-04,  ..., 1.4187e-02,
          1.8022e-03, 2.4978e-02],
         [1.0151e-02, 3.7583e-03, 7.0226e-04,  ..., 1.4187e-02,
          2.7095e-03, 2.3600e-02],
         [9.6955e-01, 3.7583e-03, 6.5524e-04,  ..., 9.5744e-01,
          1.8022e-03, 9.2645e-01],
         [1.0151e-02, 9.8873e-01, 9.9799e-01,  ..., 1.4187e-02,
          9.9369e-01, 2.4975e-02]],
        [[4.9297e-03, 2.4643e-03, 1.9810e-03,  ..., 4.4845e-04,
          3.1950e-01, 9.5600e-03],
         [4.9297e-03, 2.4643e-03, 2.8097e-03,  ..., 4.4845e-04,
          9.4863e-02, 9.5600e-03],
         [9.8521e-01, 2.4643e-03, 1.9810e-03,  ..., 4.4845e-04,
          1.9550e-01, 9.7132e-01],
         [4.9297e-03, 9.9261e-01, 9.9323e-01,  ..., 9.9865e-01,
          3.9013e-01, 9.5600e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9799e-01, 1.1462e-02, 4.4842e-03,  ..., 8.7440e-05,
          2.3476e-03, 9.9819e-01],
         [6.7021e-04, 1.0530e-02, 4.4842e-03,  ..., 8.7440e-05,
          2.3476e-03, 6.0283e-04],
         [6.7021e-04, 1.0530e-02, 4.4842e-03,  ..., 9.9974e-01,
          9.9296e-01, 6.0283e-04],
         [6.7021e-04, 9.6748e-01, 9.8655e-01,  ..., 8.7440e-05,
          2.3476e-03, 6.0283e-04]],
        [[9.9110e-01, 1.2180e-02, 5.2535e-03,  ..., 2.2508e-03,
          2.2479e-01, 6.2021e-04],
         [2.7273e-03, 1.8766e-02, 1.4484e-02,  ..., 2.5754e-03,
          1.1164e-01, 6.2021e-04],
         [3.4462e-03, 1.2180e-02, 5.2535e-03,  ..., 9.9292e-01,
          2.5081e-01, 9.9814e-01],
         [2.7273e-03, 9.5687e-01, 9.7501e-01,  ..., 2.2508e-03,
          4.1277e-01, 6.2021e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:09,151 [Process: 0] Synchronize training processes
2024-08-18 15:17:09,152 [Process: 0] Evaluating...
2024-08-18 15:17:09,153 [Process: 0] EPOCH 244:
2024-08-18 15:17:09,155 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:10,291 [Process: 0] Synchronize training processes
2024-08-18 15:17:10,292 [Process: 0] Evaluating...
2024-08-18 15:17:10,293 [Process: 0] EPOCH 245:
2024-08-18 15:17:10,295 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1236e-02, 8.5708e-04, 2.4014e-03,  ..., 8.1601e-03,
          1.4025e-01, 1.0391e-02],
         [1.1236e-02, 8.5708e-04, 2.4014e-03,  ..., 8.1601e-03,
          1.1592e-01, 1.0391e-02],
         [9.6629e-01, 8.5708e-04, 2.4014e-03,  ..., 9.7552e-01,
          1.4921e-01, 9.6883e-01],
         [1.1236e-02, 9.9743e-01, 9.9280e-01,  ..., 8.1601e-03,
          5.9462e-01, 1.0391e-02]],
        [[5.5056e-03, 1.6131e-03, 1.1613e-03,  ..., 6.8223e-04,
          2.6901e-01, 1.0328e-02],
         [5.5056e-03, 1.8229e-03, 1.1613e-03,  ..., 6.8223e-04,
          9.4659e-02, 1.0328e-02],
         [9.8348e-01, 1.6131e-03, 1.1613e-03,  ..., 6.8223e-04,
          1.0550e-01, 9.6901e-01],
         [5.5056e-03, 9.9495e-01, 9.9652e-01,  ..., 9.9795e-01,
          5.3083e-01, 1.0328e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9542e-01, 6.6355e-03, 1.7338e-02,  ..., 3.3695e-03,
          7.1672e-03, 9.9792e-01],
         [1.5268e-03, 6.6355e-03, 1.7338e-02,  ..., 3.3695e-03,
          6.6296e-03, 6.9315e-04],
         [1.5268e-03, 6.6355e-03, 1.7338e-02,  ..., 9.8989e-01,
          9.7957e-01, 6.9315e-04],
         [1.5268e-03, 9.8009e-01, 9.4799e-01,  ..., 3.3695e-03,
          6.6296e-03, 6.9315e-04]],
        [[7.6597e-01, 6.2764e-03, 5.6619e-03,  ..., 5.6429e-03,
          2.0228e-01, 4.5974e-03],
         [5.0446e-02, 6.2764e-03, 5.6619e-03,  ..., 5.8511e-03,
          1.3399e-01, 4.5974e-03],
         [1.4813e-01, 6.2764e-03, 5.6619e-03,  ..., 9.8286e-01,
          2.8858e-01, 9.8621e-01],
         [3.5459e-02, 9.8117e-01, 9.8301e-01,  ..., 5.6429e-03,
          3.7515e-01, 4.5974e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3159e-02, 3.1783e-04, 1.9711e-03,  ..., 1.4283e-02,
          3.1484e-01, 2.4101e-02],
         [1.3159e-02, 3.1783e-04, 1.9711e-03,  ..., 1.4283e-02,
          9.7954e-02, 2.1710e-02],
         [9.6052e-01, 3.1783e-04, 1.9711e-03,  ..., 9.5715e-01,
          1.7761e-01, 9.2882e-01],
         [1.3159e-02, 9.9905e-01, 9.9409e-01,  ..., 1.4283e-02,
          4.0959e-01, 2.5367e-02]],
        [[1.0135e-02, 4.5980e-03, 5.3964e-04,  ..., 1.5535e-04,
          3.6554e-01, 1.2561e-02],
         [1.0135e-02, 4.5980e-03, 5.3964e-04,  ..., 1.5535e-04,
          9.1089e-02, 1.2561e-02],
         [9.6960e-01, 4.5980e-03, 5.3964e-04,  ..., 1.5535e-04,
          1.9966e-01, 9.6232e-01],
         [1.0135e-02, 9.8621e-01, 9.9838e-01,  ..., 9.9953e-01,
          3.4371e-01, 1.2561e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9475e-01, 1.9543e-02, 4.3710e-03,  ..., 1.2894e-04,
          4.0627e-04, 9.9690e-01],
         [1.7503e-03, 1.9543e-02, 4.3710e-03,  ..., 1.2894e-04,
          4.0627e-04, 1.0328e-03],
         [1.7503e-03, 2.1450e-02, 4.3710e-03,  ..., 9.9961e-01,
          9.9878e-01, 1.0328e-03],
         [1.7503e-03, 9.3946e-01, 9.8689e-01,  ..., 1.2894e-04,
          4.0627e-04, 1.0328e-03]],
        [[7.1687e-01, 4.9164e-03, 5.9750e-03,  ..., 8.0895e-03,
          1.7252e-01, 5.8739e-03],
         [2.2594e-02, 4.9236e-03, 5.9750e-03,  ..., 1.1135e-02,
          9.0973e-02, 1.1431e-02],
         [2.3794e-01, 4.9164e-03, 5.9750e-03,  ..., 9.7269e-01,
          1.8154e-01, 9.7682e-01],
         [2.2594e-02, 9.8524e-01, 9.8208e-01,  ..., 8.0895e-03,
          5.5497e-01, 5.8739e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:11,427 [Process: 0] Synchronize training processes
2024-08-18 15:17:11,428 [Process: 0] Evaluating...
2024-08-18 15:17:11,429 [Process: 0] EPOCH 246:
2024-08-18 15:17:11,431 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:12,561 [Process: 0] Synchronize training processes
2024-08-18 15:17:12,561 [Process: 0] Evaluating...
2024-08-18 15:17:12,563 [Process: 0] EPOCH 247:
2024-08-18 15:17:12,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3905e-02, 8.1738e-04, 2.3093e-03,  ..., 6.0573e-03,
          2.4712e-01, 1.5726e-02],
         [1.3905e-02, 8.1738e-04, 2.3093e-03,  ..., 6.0573e-03,
          9.6669e-02, 1.5726e-02],
         [9.5748e-01, 8.1738e-04, 2.3093e-03,  ..., 9.8183e-01,
          1.6644e-01, 9.5117e-01],
         [1.4710e-02, 9.9755e-01, 9.9307e-01,  ..., 6.0573e-03,
          4.8976e-01, 1.7377e-02]],
        [[5.6736e-03, 4.1638e-04, 1.6798e-03,  ..., 1.0855e-03,
          2.5134e-01, 1.1115e-02],
         [5.6736e-03, 4.1638e-04, 1.6798e-03,  ..., 1.0855e-03,
          9.8221e-02, 1.1115e-02],
         [9.8298e-01, 4.1638e-04, 1.6798e-03,  ..., 1.0855e-03,
          1.2622e-01, 9.6666e-01],
         [5.6736e-03, 9.9875e-01, 9.9496e-01,  ..., 9.9674e-01,
          5.2422e-01, 1.1115e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9654e-01, 1.0640e-02, 3.6862e-03,  ..., 2.0259e-03,
          3.8025e-03, 9.9523e-01],
         [1.1519e-03, 9.3907e-03, 3.6862e-03,  ..., 2.0259e-03,
          3.8025e-03, 1.5907e-03],
         [1.1519e-03, 9.3907e-03, 3.6862e-03,  ..., 9.9392e-01,
          9.8859e-01, 1.5907e-03],
         [1.1519e-03, 9.7058e-01, 9.8894e-01,  ..., 2.0259e-03,
          3.8025e-03, 1.5907e-03]],
        [[9.7424e-01, 1.2960e-03, 3.3700e-03,  ..., 1.1111e-03,
          2.4345e-01, 5.3902e-04],
         [5.3355e-03, 1.2960e-03, 3.3700e-03,  ..., 1.1111e-03,
          9.5385e-02, 5.3902e-04],
         [1.5092e-02, 1.2960e-03, 3.3700e-03,  ..., 9.9667e-01,
          2.4648e-01, 9.9838e-01],
         [5.3355e-03, 9.9611e-01, 9.8989e-01,  ..., 1.1111e-03,
          4.1468e-01, 5.3902e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9297e-03, 7.7021e-03, 3.9414e-04,  ..., 5.8798e-03,
          3.5995e-02, 1.1913e-02],
         [9.9297e-03, 7.7021e-03, 3.9414e-04,  ..., 5.8798e-03,
          3.7684e-02, 1.1913e-02],
         [9.7021e-01, 7.7021e-03, 3.9414e-04,  ..., 9.8236e-01,
          3.5995e-02, 9.6426e-01],
         [9.9297e-03, 9.7689e-01, 9.9882e-01,  ..., 5.8798e-03,
          8.9033e-01, 1.1913e-02]],
        [[9.4319e-03, 1.8116e-03, 7.4376e-04,  ..., 6.7738e-04,
          2.2600e-01, 1.1269e-02],
         [9.4319e-03, 1.8116e-03, 7.4376e-04,  ..., 6.7738e-04,
          8.8241e-02, 1.1269e-02],
         [9.7170e-01, 1.8116e-03, 7.4376e-04,  ..., 6.7738e-04,
          8.8241e-02, 9.6619e-01],
         [9.4319e-03, 9.9457e-01, 9.9777e-01,  ..., 9.9797e-01,
          5.9751e-01, 1.1269e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:13,687 [Process: 0] Synchronize training processes
2024-08-18 15:17:13,687 [Process: 0] Evaluating...
2024-08-18 15:17:13,689 [Process: 0] EPOCH 248:
2024-08-18 15:17:13,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:14,826 [Process: 0] Synchronize training processes
2024-08-18 15:17:14,827 [Process: 0] Evaluating...
2024-08-18 15:17:14,828 [Process: 0] EPOCH 249:
2024-08-18 15:17:14,830 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9357e-01, 9.5177e-03, 1.4478e-02,  ..., 2.0823e-04,
          6.5568e-03, 9.9548e-01],
         [2.1434e-03, 9.5177e-03, 1.4478e-02,  ..., 2.0823e-04,
          4.6773e-03, 1.5078e-03],
         [2.1434e-03, 9.5177e-03, 1.8641e-02,  ..., 9.9938e-01,
          9.8409e-01, 1.5078e-03],
         [2.1434e-03, 9.7145e-01, 9.5240e-01,  ..., 2.0823e-04,
          4.6773e-03, 1.5078e-03]],
        [[9.8656e-01, 4.9077e-03, 2.7902e-03,  ..., 1.6375e-02,
          8.2842e-02, 6.9258e-03],
         [3.4490e-03, 4.9077e-03, 2.7902e-03,  ..., 1.6375e-02,
          7.5672e-02, 1.1153e-02],
         [6.5462e-03, 4.9077e-03, 2.7902e-03,  ..., 9.5016e-01,
          7.5672e-02, 9.7500e-01],
         [3.4490e-03, 9.8528e-01, 9.9163e-01,  ..., 1.7093e-02,
          7.6581e-01, 6.9258e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.2388e-03, 3.8611e-04, 4.9659e-04,  ..., 2.0873e-02,
          1.7268e-03, 1.0621e-02],
         [5.2388e-03, 3.8611e-04, 4.9659e-04,  ..., 1.8887e-02,
          1.7268e-03, 1.0621e-02],
         [9.8428e-01, 3.8611e-04, 4.9659e-04,  ..., 9.3907e-01,
          1.7268e-03, 9.6814e-01],
         [5.2388e-03, 9.9884e-01, 9.9851e-01,  ..., 2.1168e-02,
          9.9482e-01, 1.0621e-02]],
        [[9.3307e-03, 1.2892e-03, 3.0899e-04,  ..., 1.1502e-03,
          2.6779e-01, 4.0212e-03],
         [9.3307e-03, 1.2892e-03, 3.0899e-04,  ..., 1.1502e-03,
          9.4898e-02, 4.0212e-03],
         [9.7201e-01, 1.2892e-03, 3.0899e-04,  ..., 1.1502e-03,
          1.5498e-01, 9.8794e-01],
         [9.3307e-03, 9.9613e-01, 9.9907e-01,  ..., 9.9655e-01,
          4.8233e-01, 4.0212e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8833e-01, 1.2936e-02, 1.1323e-02,  ..., 1.0183e-04,
          1.9665e-01, 9.9216e-01],
         [3.8888e-03, 1.2936e-02, 1.1323e-02,  ..., 1.0183e-04,
          1.9327e-02, 2.6120e-03],
         [3.8888e-03, 1.2936e-02, 1.3650e-02,  ..., 9.9969e-01,
          7.6469e-01, 2.6120e-03],
         [3.8888e-03, 9.6119e-01, 9.6370e-01,  ..., 1.0183e-04,
          1.9327e-02, 2.6120e-03]],
        [[9.8967e-01, 3.8619e-03, 3.4306e-03,  ..., 6.0363e-03,
          8.9003e-02, 5.0675e-03],
         [3.4444e-03, 3.8619e-03, 3.4306e-03,  ..., 6.0363e-03,
          7.7894e-02, 5.0675e-03],
         [3.4444e-03, 3.8619e-03, 3.4306e-03,  ..., 9.8189e-01,
          1.2130e-01, 9.8480e-01],
         [3.4444e-03, 9.8841e-01, 9.8971e-01,  ..., 6.0363e-03,
          7.1180e-01, 5.0675e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.7143e-03, 3.0612e-03, 1.0088e-02,  ..., 7.5017e-03,
          4.9152e-04, 1.7386e-02],
         [8.7143e-03, 3.0612e-03, 1.0088e-02,  ..., 7.4069e-03,
          4.9152e-04, 1.7108e-02],
         [9.7386e-01, 3.0612e-03, 1.0088e-02,  ..., 9.7768e-01,
          4.9152e-04, 9.4791e-01],
         [8.7143e-03, 9.9082e-01, 9.6974e-01,  ..., 7.4069e-03,
          9.9853e-01, 1.7594e-02]],
        [[6.4630e-03, 8.9705e-04, 8.8783e-04,  ..., 5.4899e-04,
          1.9478e-01, 3.0379e-03],
         [6.4630e-03, 8.9705e-04, 8.8783e-04,  ..., 5.4899e-04,
          8.4135e-02, 3.0379e-03],
         [9.8061e-01, 8.9705e-04, 8.8783e-04,  ..., 5.4899e-04,
          8.4135e-02, 9.9089e-01],
         [6.4630e-03, 9.9731e-01, 9.9734e-01,  ..., 9.9835e-01,
          6.3695e-01, 3.0379e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:15,966 [Process: 0] Synchronize training processes
2024-08-18 15:17:15,966 [Process: 0] Evaluating...
2024-08-18 15:17:15,968 [Process: 0] EPOCH 250:
2024-08-18 15:17:15,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8117e-01, 1.9541e-02, 1.5626e-02,  ..., 4.9031e-05,
          7.8514e-01, 9.9296e-01],
         [6.2757e-03, 1.8780e-02, 1.5626e-02,  ..., 4.9031e-05,
          2.1590e-02, 2.6326e-03],
         [6.2757e-03, 2.3001e-02, 1.8862e-02,  ..., 9.9985e-01,
          1.7168e-01, 2.2027e-03],
         [6.2757e-03, 9.3868e-01, 9.4989e-01,  ..., 4.9031e-05,
          2.1590e-02, 2.2027e-03]],
        [[9.7965e-01, 3.7826e-03, 5.3764e-03,  ..., 1.1756e-04,
          1.3551e-01, 1.2835e-04],
         [7.3762e-03, 3.7826e-03, 5.3764e-03,  ..., 1.1756e-04,
          7.8044e-02, 1.2835e-04],
         [6.4892e-03, 3.7826e-03, 5.3764e-03,  ..., 9.9965e-01,
          1.2615e-01, 9.9961e-01],
         [6.4892e-03, 9.8865e-01, 9.8387e-01,  ..., 1.1756e-04,
          6.6029e-01, 1.2835e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.9268e-03, 9.0181e-04, 9.1492e-04,  ..., 1.4896e-02,
          3.9269e-03, 1.1121e-02],
         [4.9268e-03, 9.0181e-04, 9.1492e-04,  ..., 1.4669e-02,
          3.9269e-03, 1.1121e-02],
         [9.8522e-01, 9.0181e-04, 9.1492e-04,  ..., 9.5577e-01,
          3.9269e-03, 9.6664e-01],
         [4.9268e-03, 9.9729e-01, 9.9726e-01,  ..., 1.4669e-02,
          9.8822e-01, 1.1121e-02]],
        [[1.2686e-03, 9.7202e-04, 3.8364e-04,  ..., 1.0702e-04,
          2.6220e-01, 1.7729e-02],
         [1.2686e-03, 9.7202e-04, 3.8364e-04,  ..., 1.0702e-04,
          9.6965e-02, 1.7729e-02],
         [9.9619e-01, 9.7202e-04, 3.8364e-04,  ..., 1.0702e-04,
          1.9344e-01, 9.4382e-01],
         [1.2686e-03, 9.9708e-01, 9.9885e-01,  ..., 9.9968e-01,
          4.4740e-01, 2.0724e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8903e-01, 3.1588e-02, 1.1001e-03,  ..., 4.3571e-03,
          5.0879e-01, 9.9225e-01],
         [3.6573e-03, 2.7569e-02, 1.1001e-03,  ..., 4.3571e-03,
          3.9631e-02, 2.5836e-03],
         [3.6573e-03, 3.8504e-02, 1.1001e-03,  ..., 9.8693e-01,
          4.1195e-01, 2.5836e-03],
         [3.6573e-03, 9.0234e-01, 9.9670e-01,  ..., 4.3571e-03,
          3.9631e-02, 2.5836e-03]],
        [[9.9548e-01, 9.7081e-03, 1.4052e-03,  ..., 7.6922e-04,
          2.1130e-01, 3.9530e-04],
         [1.5081e-03, 1.0045e-02, 1.4052e-03,  ..., 7.6922e-04,
          1.2905e-01, 3.9530e-04],
         [1.5081e-03, 9.7081e-03, 1.4052e-03,  ..., 9.9769e-01,
          2.8623e-01, 9.9881e-01],
         [1.5081e-03, 9.7054e-01, 9.9578e-01,  ..., 7.6922e-04,
          3.7342e-01, 3.9530e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:17,107 [Process: 0] Synchronize training processes
2024-08-18 15:17:17,107 [Process: 0] Evaluating...
2024-08-18 15:17:17,108 [Process: 0] EPOCH 251:
2024-08-18 15:17:17,110 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:18,245 [Process: 0] Synchronize training processes
2024-08-18 15:17:18,245 [Process: 0] Evaluating...
2024-08-18 15:17:18,249 [Process: 0] EPOCH 252:
2024-08-18 15:17:18,251 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.9671e-03, 1.1510e-03, 3.3917e-04,  ..., 8.9292e-03,
          6.0153e-03, 2.9058e-02],
         [5.9671e-03, 1.1510e-03, 3.3917e-04,  ..., 8.9292e-03,
          6.0153e-03, 1.9407e-02],
         [9.8210e-01, 1.1510e-03, 3.3917e-04,  ..., 9.7321e-01,
          6.0153e-03, 9.3213e-01],
         [5.9671e-03, 9.9655e-01, 9.9898e-01,  ..., 8.9292e-03,
          9.8195e-01, 1.9407e-02]],
        [[5.3209e-03, 8.1894e-04, 4.4014e-03,  ..., 2.3612e-03,
          2.8887e-01, 4.5296e-03],
         [5.3209e-03, 8.1894e-04, 4.4014e-03,  ..., 2.3612e-03,
          1.0783e-01, 4.5296e-03],
         [9.8404e-01, 8.1894e-04, 4.4014e-03,  ..., 2.3612e-03,
          1.6697e-01, 9.8641e-01],
         [5.3209e-03, 9.9754e-01, 9.8680e-01,  ..., 9.9292e-01,
          4.3633e-01, 4.5296e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9894e-01, 4.1506e-03, 5.6581e-03,  ..., 9.8918e-05,
          5.3498e-02, 9.7262e-01],
         [3.4586e-04, 4.1506e-03, 5.6581e-03,  ..., 9.8918e-05,
          2.1433e-02, 9.1258e-03],
         [3.4586e-04, 4.1506e-03, 5.6581e-03,  ..., 9.9970e-01,
          9.0364e-01, 9.1258e-03],
         [3.6824e-04, 9.8755e-01, 9.8303e-01,  ..., 9.8918e-05,
          2.1433e-02, 9.1258e-03]],
        [[9.8026e-01, 4.0531e-03, 5.4777e-03,  ..., 2.4304e-03,
          1.7082e-01, 3.7622e-04],
         [6.5800e-03, 4.0531e-03, 5.6122e-03,  ..., 2.4304e-03,
          1.6589e-01, 3.7622e-04],
         [6.5800e-03, 4.0531e-03, 5.4777e-03,  ..., 9.9271e-01,
          2.8114e-01, 9.9887e-01],
         [6.5800e-03, 9.8784e-01, 9.8343e-01,  ..., 2.4304e-03,
          3.8215e-01, 3.7622e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0643e-02, 7.3121e-04, 2.3651e-03,  ..., 2.1656e-02,
          1.5181e-04, 1.8971e-02],
         [2.0643e-02, 7.3121e-04, 2.3651e-03,  ..., 2.0188e-02,
          1.5181e-04, 1.7939e-02],
         [9.3679e-01, 7.3121e-04, 2.3651e-03,  ..., 9.3740e-01,
          1.5181e-04, 9.4515e-01],
         [2.1920e-02, 9.9781e-01, 9.9290e-01,  ..., 2.0756e-02,
          9.9954e-01, 1.7939e-02]],
        [[4.2654e-03, 1.9073e-04, 6.3853e-04,  ..., 1.0052e-04,
          2.5115e-01, 6.5001e-03],
         [4.2654e-03, 1.9073e-04, 6.3853e-04,  ..., 1.0052e-04,
          1.0691e-01, 6.5001e-03],
         [9.8720e-01, 1.9073e-04, 6.3853e-04,  ..., 1.0052e-04,
          2.2223e-01, 9.8050e-01],
         [4.2654e-03, 9.9943e-01, 9.9808e-01,  ..., 9.9970e-01,
          4.1971e-01, 6.5001e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9956e-01, 1.1701e-02, 5.1522e-03,  ..., 2.7460e-04,
          2.9844e-03, 9.9488e-01],
         [1.4619e-04, 1.0288e-02, 5.1522e-03,  ..., 2.7460e-04,
          2.8329e-03, 1.7074e-03],
         [1.4619e-04, 1.1605e-02, 5.1522e-03,  ..., 9.9918e-01,
          9.9135e-01, 1.7074e-03],
         [1.4619e-04, 9.6641e-01, 9.8454e-01,  ..., 2.7460e-04,
          2.8329e-03, 1.7074e-03]],
        [[9.9626e-01, 2.5268e-03, 8.5747e-03,  ..., 6.0413e-04,
          2.1963e-01, 2.0660e-03],
         [1.2458e-03, 2.5268e-03, 1.0202e-02,  ..., 6.0413e-04,
          1.5735e-01, 2.0660e-03],
         [1.2458e-03, 2.5268e-03, 8.5747e-03,  ..., 9.9819e-01,
          2.7922e-01, 9.9380e-01],
         [1.2458e-03, 9.9242e-01, 9.7265e-01,  ..., 6.0413e-04,
          3.4381e-01, 2.0660e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:19,388 [Process: 0] Synchronize training processes
2024-08-18 15:17:19,388 [Process: 0] Evaluating...
2024-08-18 15:17:19,390 [Process: 0] EPOCH 253:
2024-08-18 15:17:19,391 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:20,527 [Process: 0] Synchronize training processes
2024-08-18 15:17:20,527 [Process: 0] Evaluating...
2024-08-18 15:17:20,529 [Process: 0] EPOCH 254:
2024-08-18 15:17:20,531 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4291e-02, 1.7191e-03, 1.0692e-03,  ..., 1.7526e-02,
          9.0104e-04, 4.9388e-03],
         [1.4291e-02, 1.7191e-03, 1.0692e-03,  ..., 1.6405e-02,
          9.0104e-04, 4.9388e-03],
         [9.5713e-01, 1.7191e-03, 1.0692e-03,  ..., 9.4966e-01,
          9.0104e-04, 9.8518e-01],
         [1.4291e-02, 9.9484e-01, 9.9679e-01,  ..., 1.6405e-02,
          9.9730e-01, 4.9388e-03]],
        [[1.0332e-02, 1.5239e-03, 1.1188e-03,  ..., 1.7473e-03,
          2.6007e-01, 2.2643e-03],
         [1.0332e-02, 1.5239e-03, 1.1188e-03,  ..., 1.7473e-03,
          1.0137e-01, 2.2643e-03],
         [9.6900e-01, 1.5239e-03, 1.1188e-03,  ..., 1.7473e-03,
          1.7972e-01, 9.9321e-01],
         [1.0332e-02, 9.9543e-01, 9.9664e-01,  ..., 9.9476e-01,
          4.5884e-01, 2.2643e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6314e-01, 1.0311e-02, 4.2247e-03,  ..., 9.6754e-03,
          2.1227e-03, 9.9854e-01],
         [1.2287e-02, 1.0055e-02, 4.2247e-03,  ..., 9.6754e-03,
          2.1227e-03, 4.8540e-04],
         [1.2287e-02, 1.0055e-02, 4.2247e-03,  ..., 9.7097e-01,
          9.9363e-01, 4.8540e-04],
         [1.2287e-02, 9.6958e-01, 9.8733e-01,  ..., 9.6754e-03,
          2.1227e-03, 4.8540e-04]],
        [[9.9504e-01, 3.8648e-03, 6.7414e-03,  ..., 9.7050e-04,
          2.0099e-01, 3.2209e-03],
         [1.6525e-03, 3.8648e-03, 6.7414e-03,  ..., 9.7050e-04,
          1.4054e-01, 3.2209e-03],
         [1.6525e-03, 3.8648e-03, 6.7414e-03,  ..., 9.9709e-01,
          3.3739e-01, 9.9034e-01],
         [1.6525e-03, 9.8841e-01, 9.7978e-01,  ..., 9.7050e-04,
          3.2108e-01, 3.2209e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7606e-03, 2.4251e-03, 2.9154e-04,  ..., 8.5201e-03,
          1.3731e-03, 6.2699e-03],
         [6.7606e-03, 2.4251e-03, 2.9154e-04,  ..., 8.5201e-03,
          1.3731e-03, 6.2699e-03],
         [9.7972e-01, 2.4251e-03, 2.9154e-04,  ..., 9.7444e-01,
          1.3731e-03, 9.8119e-01],
         [6.7606e-03, 9.9272e-01, 9.9913e-01,  ..., 8.5201e-03,
          9.9588e-01, 6.2699e-03]],
        [[4.1658e-02, 9.5644e-04, 2.3703e-03,  ..., 2.2610e-03,
          3.2968e-01, 7.7393e-03],
         [3.9919e-02, 9.5644e-04, 2.3703e-03,  ..., 2.2610e-03,
          9.2948e-02, 7.7393e-03],
         [8.5849e-01, 9.5644e-04, 2.3703e-03,  ..., 2.2610e-03,
          1.0867e-01, 9.7678e-01],
         [5.9938e-02, 9.9713e-01, 9.9289e-01,  ..., 9.9322e-01,
          4.6871e-01, 7.7393e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:17:21,655 [Process: 0] Synchronize training processes
2024-08-18 15:17:21,656 [Process: 0] Evaluating...
2024-08-18 15:17:21,657 [Process: 0] EPOCH 255:
2024-08-18 15:17:21,659 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:22,780 [Process: 0] Synchronize training processes
2024-08-18 15:17:22,780 [Process: 0] Evaluating...
2024-08-18 15:17:22,782 [Process: 0] EPOCH 256:
2024-08-18 15:17:22,784 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9878e-01, 8.2381e-03, 1.1633e-03,  ..., 8.4128e-04,
          4.3703e-03, 9.9527e-01],
         [4.0616e-04, 8.2381e-03, 1.1633e-03,  ..., 8.4128e-04,
          4.1070e-03, 1.5763e-03],
         [4.0616e-04, 8.2381e-03, 1.1633e-03,  ..., 9.9748e-01,
          9.8742e-01, 1.5763e-03],
         [4.0616e-04, 9.7529e-01, 9.9651e-01,  ..., 8.4128e-04,
          4.1070e-03, 1.5763e-03]],
        [[1.4709e-01, 1.7863e-02, 2.2749e-03,  ..., 2.6761e-04,
          2.2745e-01, 9.8924e-04],
         [1.3146e-02, 1.5844e-02, 2.2749e-03,  ..., 2.6761e-04,
          1.4981e-01, 9.8924e-04],
         [8.2662e-01, 1.8724e-02, 2.2749e-03,  ..., 9.9920e-01,
          2.2539e-01, 9.9703e-01],
         [1.3146e-02, 9.4757e-01, 9.9318e-01,  ..., 2.6761e-04,
          3.9735e-01, 9.8924e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0123e-02, 2.5562e-04, 3.1533e-03,  ..., 3.3197e-03,
          5.2840e-04, 4.2212e-03],
         [2.0123e-02, 2.5562e-04, 3.1533e-03,  ..., 3.3197e-03,
          5.2840e-04, 4.2212e-03],
         [9.3604e-01, 2.5562e-04, 3.1533e-03,  ..., 9.9004e-01,
          5.2840e-04, 9.8734e-01],
         [2.3719e-02, 9.9923e-01, 9.9054e-01,  ..., 3.3197e-03,
          9.9841e-01, 4.2212e-03]],
        [[7.5299e-03, 4.7180e-04, 2.3871e-04,  ..., 2.6011e-04,
          3.3145e-01, 3.9110e-03],
         [7.5299e-03, 4.7180e-04, 2.3871e-04,  ..., 2.6011e-04,
          8.9372e-02, 3.9110e-03],
         [9.7741e-01, 4.7180e-04, 2.3871e-04,  ..., 2.6011e-04,
          8.9372e-02, 9.8827e-01],
         [7.5299e-03, 9.9858e-01, 9.9928e-01,  ..., 9.9922e-01,
          4.8981e-01, 3.9110e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8465e-01, 1.2990e-02, 2.4534e-03,  ..., 9.4492e-04,
          1.1712e-03, 9.9199e-01],
         [5.1178e-03, 1.1809e-02, 2.4534e-03,  ..., 9.4492e-04,
          1.1712e-03, 2.6702e-03],
         [5.1178e-03, 1.1809e-02, 2.4534e-03,  ..., 9.9717e-01,
          9.9649e-01, 2.6702e-03],
         [5.1178e-03, 9.6339e-01, 9.9264e-01,  ..., 9.4492e-04,
          1.1712e-03, 2.6702e-03]],
        [[9.9457e-01, 1.0259e-02, 5.0890e-03,  ..., 7.1824e-04,
          1.7723e-01, 1.7717e-04],
         [1.8116e-03, 1.0306e-02, 5.0890e-03,  ..., 7.1824e-04,
          1.5478e-01, 1.7717e-04],
         [1.8116e-03, 1.0259e-02, 5.0890e-03,  ..., 9.9785e-01,
          3.1641e-01, 9.9947e-01],
         [1.8116e-03, 9.6918e-01, 9.8473e-01,  ..., 7.1824e-04,
          3.5158e-01, 1.7717e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.8325e-03, 1.9238e-04, 2.0454e-03,  ..., 8.2507e-03,
          5.8282e-03, 9.3435e-03],
         [7.8325e-03, 1.9238e-04, 2.0454e-03,  ..., 8.2507e-03,
          5.8282e-03, 9.3435e-03],
         [9.7650e-01, 1.9238e-04, 2.0454e-03,  ..., 9.7525e-01,
          5.8282e-03, 9.7197e-01],
         [7.8325e-03, 9.9942e-01, 9.9386e-01,  ..., 8.2507e-03,
          9.8252e-01, 9.3435e-03]],
        [[5.2035e-03, 1.3992e-03, 1.6308e-03,  ..., 2.9128e-04,
          2.6225e-01, 2.8556e-02],
         [5.2035e-03, 1.3992e-03, 1.6308e-03,  ..., 2.9128e-04,
          9.7549e-02, 2.8556e-02],
         [9.8439e-01, 1.3992e-03, 1.6308e-03,  ..., 2.9128e-04,
          1.3579e-01, 9.0024e-01],
         [5.2035e-03, 9.9580e-01, 9.9511e-01,  ..., 9.9913e-01,
          5.0440e-01, 4.2647e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:23,914 [Process: 0] Synchronize training processes
2024-08-18 15:17:23,915 [Process: 0] Evaluating...
2024-08-18 15:17:23,916 [Process: 0] EPOCH 257:
2024-08-18 15:17:23,918 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:25,046 [Process: 0] Synchronize training processes
2024-08-18 15:17:25,046 [Process: 0] Evaluating...
2024-08-18 15:17:25,048 [Process: 0] EPOCH 258:
2024-08-18 15:17:25,050 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9589e-01, 6.2731e-03, 5.4045e-03,  ..., 1.8162e-04,
          4.7531e-03, 9.9308e-01],
         [1.3704e-03, 6.2731e-03, 5.4045e-03,  ..., 1.8162e-04,
          4.7285e-03, 2.3079e-03],
         [1.3704e-03, 6.2731e-03, 5.4045e-03,  ..., 9.9946e-01,
          9.8579e-01, 2.3079e-03],
         [1.3704e-03, 9.8118e-01, 9.8379e-01,  ..., 1.8162e-04,
          4.7285e-03, 2.3079e-03]],
        [[9.7302e-01, 6.5808e-03, 1.2067e-02,  ..., 1.7361e-03,
          1.6177e-01, 4.7310e-04],
         [1.1018e-02, 6.6563e-03, 1.2067e-02,  ..., 1.7361e-03,
          1.6677e-01, 4.7310e-04],
         [7.9823e-03, 6.5808e-03, 1.2067e-02,  ..., 9.9479e-01,
          2.2373e-01, 9.9858e-01],
         [7.9823e-03, 9.8018e-01, 9.6380e-01,  ..., 1.7361e-03,
          4.4773e-01, 4.7310e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5068e-03, 5.8768e-04, 1.7803e-03,  ..., 1.9404e-02,
          3.3076e-02, 6.1756e-03],
         [5.5068e-03, 5.8768e-04, 1.7803e-03,  ..., 1.9404e-02,
          2.9174e-02, 6.1756e-03],
         [9.8348e-01, 5.8768e-04, 1.7803e-03,  ..., 9.3941e-01,
          2.9174e-02, 9.8147e-01],
         [5.5068e-03, 9.9824e-01, 9.9466e-01,  ..., 2.1784e-02,
          9.0858e-01, 6.1756e-03]],
        [[3.6132e-03, 1.9913e-04, 5.7141e-04,  ..., 4.1216e-04,
          2.1197e-01, 6.9063e-03],
         [3.6132e-03, 1.9913e-04, 5.7141e-04,  ..., 4.1216e-04,
          8.0678e-02, 6.9063e-03],
         [9.8916e-01, 1.9913e-04, 5.7141e-04,  ..., 4.1216e-04,
          8.0678e-02, 9.7928e-01],
         [3.6132e-03, 9.9940e-01, 9.9829e-01,  ..., 9.9876e-01,
          6.2667e-01, 6.9063e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9654e-01, 3.8338e-03, 8.7282e-04,  ..., 2.0176e-03,
          1.3136e-03, 9.8796e-01],
         [1.1532e-03, 3.8338e-03, 8.7282e-04,  ..., 2.0176e-03,
          1.3136e-03, 4.0118e-03],
         [1.1532e-03, 3.8338e-03, 8.7282e-04,  ..., 9.9395e-01,
          9.9606e-01, 4.0118e-03],
         [1.1532e-03, 9.8850e-01, 9.9738e-01,  ..., 2.0176e-03,
          1.3136e-03, 4.0118e-03]],
        [[9.9821e-01, 8.8267e-03, 9.9559e-03,  ..., 3.7342e-03,
          1.6586e-01, 1.8637e-03],
         [5.9545e-04, 8.8267e-03, 9.9559e-03,  ..., 3.7342e-03,
          1.0653e-01, 1.8637e-03],
         [5.9545e-04, 8.8267e-03, 1.1547e-02,  ..., 9.8880e-01,
          1.5656e-01, 9.9441e-01],
         [5.9545e-04, 9.7352e-01, 9.6854e-01,  ..., 3.7342e-03,
          5.7104e-01, 1.8637e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1136e-02, 2.1777e-04, 3.8787e-04,  ..., 1.0633e-02,
          2.2017e-02, 1.6520e-02],
         [1.1136e-02, 2.1777e-04, 3.8787e-04,  ..., 1.0633e-02,
          2.0206e-02, 1.5043e-02],
         [9.6659e-01, 2.1777e-04, 3.8787e-04,  ..., 9.6810e-01,
          2.0206e-02, 9.5339e-01],
         [1.1136e-02, 9.9935e-01, 9.9884e-01,  ..., 1.0633e-02,
          9.3757e-01, 1.5043e-02]],
        [[1.3116e-02, 8.0766e-04, 4.4054e-04,  ..., 1.6529e-04,
          1.5386e-01, 9.5164e-03],
         [1.3116e-02, 8.0766e-04, 4.4054e-04,  ..., 1.6529e-04,
          7.0734e-02, 9.5164e-03],
         [9.6007e-01, 8.0766e-04, 4.4054e-04,  ..., 1.6529e-04,
          7.8902e-02, 9.7128e-01],
         [1.3696e-02, 9.9758e-01, 9.9868e-01,  ..., 9.9950e-01,
          6.9651e-01, 9.6882e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:26,175 [Process: 0] Synchronize training processes
2024-08-18 15:17:26,176 [Process: 0] Evaluating...
2024-08-18 15:17:26,177 [Process: 0] EPOCH 259:
2024-08-18 15:17:26,179 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7077e-01, 7.4953e-03, 1.5869e-03,  ..., 6.0001e-04,
          1.4218e-03, 9.7770e-01],
         [9.7420e-03, 7.4953e-03, 1.5869e-03,  ..., 6.0001e-04,
          1.4218e-03, 7.4335e-03],
         [9.7420e-03, 7.4953e-03, 1.5869e-03,  ..., 9.9820e-01,
          9.9573e-01, 7.4335e-03],
         [9.7420e-03, 9.7751e-01, 9.9524e-01,  ..., 6.0001e-04,
          1.4218e-03, 7.4335e-03]],
        [[9.9940e-01, 2.6989e-03, 8.4502e-03,  ..., 3.1867e-03,
          1.2977e-01, 5.1218e-04],
         [1.9870e-04, 2.6989e-03, 8.4502e-03,  ..., 3.1867e-03,
          1.5706e-01, 5.1218e-04],
         [1.9870e-04, 2.6989e-03, 8.4502e-03,  ..., 9.9044e-01,
          2.6305e-01, 9.9846e-01],
         [1.9870e-04, 9.9190e-01, 9.7465e-01,  ..., 3.1867e-03,
          4.5012e-01, 5.1218e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3632e-02, 8.1612e-04, 5.9399e-04,  ..., 8.1736e-03,
          3.6325e-02, 6.8741e-03],
         [1.3632e-02, 8.1612e-04, 5.9399e-04,  ..., 8.1736e-03,
          3.1810e-02, 6.8741e-03],
         [9.5911e-01, 8.1612e-04, 5.9399e-04,  ..., 9.7548e-01,
          3.1810e-02, 9.7938e-01],
         [1.3632e-02, 9.9755e-01, 9.9822e-01,  ..., 8.1736e-03,
          9.0005e-01, 6.8741e-03]],
        [[6.9991e-03, 8.6070e-04, 4.8124e-04,  ..., 3.1897e-04,
          1.1625e-01, 7.8326e-03],
         [6.9991e-03, 8.6070e-04, 4.8124e-04,  ..., 3.1897e-04,
          6.2946e-02, 7.8326e-03],
         [9.7900e-01, 8.6070e-04, 4.8124e-04,  ..., 3.1897e-04,
          6.2946e-02, 9.7650e-01],
         [6.9991e-03, 9.9742e-01, 9.9856e-01,  ..., 9.9904e-01,
          7.5786e-01, 7.8326e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9915e-01, 3.4994e-03, 4.3215e-03,  ..., 5.0134e-04,
          1.2301e-03, 9.8749e-01],
         [2.8169e-04, 3.4994e-03, 4.3215e-03,  ..., 5.0134e-04,
          1.2301e-03, 4.1699e-03],
         [2.8169e-04, 3.4994e-03, 4.3215e-03,  ..., 9.9850e-01,
          9.9631e-01, 4.1699e-03],
         [2.8169e-04, 9.8950e-01, 9.8704e-01,  ..., 5.0134e-04,
          1.2301e-03, 4.1699e-03]],
        [[9.8531e-01, 1.7413e-02, 8.6486e-03,  ..., 5.0318e-04,
          1.3863e-01, 4.2744e-04],
         [4.8957e-03, 1.8984e-02, 8.6486e-03,  ..., 5.0318e-04,
          1.4430e-01, 4.2744e-04],
         [4.8957e-03, 1.7413e-02, 8.6486e-03,  ..., 9.9849e-01,
          1.4821e-01, 9.9872e-01],
         [4.8957e-03, 9.4619e-01, 9.7405e-01,  ..., 5.0318e-04,
          5.6886e-01, 4.2744e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:27,307 [Process: 0] Synchronize training processes
2024-08-18 15:17:27,307 [Process: 0] Evaluating...
2024-08-18 15:17:27,309 [Process: 0] EPOCH 260:
2024-08-18 15:17:27,311 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:28,437 [Process: 0] Synchronize training processes
2024-08-18 15:17:28,437 [Process: 0] Evaluating...
2024-08-18 15:17:28,439 [Process: 0] EPOCH 261:
2024-08-18 15:17:28,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1814e-02, 7.2165e-04, 7.5512e-04,  ..., 8.0696e-03,
          2.3048e-01, 4.9790e-03],
         [1.1814e-02, 7.2165e-04, 7.5512e-04,  ..., 8.0696e-03,
          9.5801e-02, 4.9790e-03],
         [9.6456e-01, 7.2165e-04, 7.5512e-04,  ..., 9.7579e-01,
          9.5801e-02, 9.8506e-01],
         [1.1814e-02, 9.9784e-01, 9.9773e-01,  ..., 8.0696e-03,
          5.7792e-01, 4.9790e-03]],
        [[4.3705e-02, 1.5514e-04, 4.9091e-04,  ..., 6.2331e-05,
          1.2948e-01, 3.3598e-03],
         [3.9733e-02, 1.5514e-04, 4.9091e-04,  ..., 6.2331e-05,
          6.4345e-02, 3.3598e-03],
         [8.4959e-01, 1.5514e-04, 4.9091e-04,  ..., 6.2331e-05,
          6.4345e-02, 9.8992e-01],
         [6.6976e-02, 9.9953e-01, 9.9853e-01,  ..., 9.9981e-01,
          7.4183e-01, 3.3598e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9125e-01, 7.4691e-03, 4.2491e-03,  ..., 3.5321e-04,
          2.5647e-03, 9.9853e-01],
         [2.9155e-03, 7.4691e-03, 4.2491e-03,  ..., 3.5321e-04,
          2.5647e-03, 4.9039e-04],
         [2.9155e-03, 7.4691e-03, 4.2491e-03,  ..., 9.9894e-01,
          9.9231e-01, 4.9039e-04],
         [2.9155e-03, 9.7759e-01, 9.8725e-01,  ..., 3.5321e-04,
          2.5647e-03, 4.9039e-04]],
        [[9.7793e-01, 8.4579e-03, 6.7221e-03,  ..., 4.1281e-04,
          1.3296e-01, 2.6621e-03],
         [7.3581e-03, 1.0205e-02, 6.7221e-03,  ..., 4.1281e-04,
          1.5358e-01, 2.6621e-03],
         [7.3581e-03, 8.4579e-03, 6.7221e-03,  ..., 9.9876e-01,
          2.0135e-01, 9.9201e-01],
         [7.3581e-03, 9.7288e-01, 9.7983e-01,  ..., 4.1281e-04,
          5.1212e-01, 2.6621e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5358e-02, 3.8408e-04, 3.9014e-04,  ..., 1.4024e-02,
          1.4189e-01, 1.5461e-02],
         [1.5358e-02, 3.8408e-04, 3.9014e-04,  ..., 1.4024e-02,
          1.0201e-01, 1.5461e-02],
         [9.5197e-01, 3.8408e-04, 3.9014e-04,  ..., 9.5568e-01,
          8.6597e-02, 9.5154e-01],
         [1.7310e-02, 9.9885e-01, 9.9883e-01,  ..., 1.6276e-02,
          6.6950e-01, 1.7533e-02]],
        [[2.9367e-02, 1.1023e-04, 7.5165e-04,  ..., 3.2085e-04,
          1.0886e-01, 2.7016e-02],
         [2.8309e-02, 1.1023e-04, 7.5165e-04,  ..., 3.2085e-04,
          6.8714e-02, 2.7016e-02],
         [9.0006e-01, 1.1023e-04, 7.5165e-04,  ..., 3.2085e-04,
          6.8714e-02, 9.0287e-01],
         [4.2265e-02, 9.9967e-01, 9.9775e-01,  ..., 9.9904e-01,
          7.5371e-01, 4.3100e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9518e-01, 4.9104e-03, 9.9596e-03,  ..., 1.1891e-04,
          2.0870e-03, 9.8718e-01],
         [1.6059e-03, 4.9104e-03, 9.9596e-03,  ..., 1.1891e-04,
          2.0870e-03, 4.0262e-03],
         [1.6059e-03, 4.9104e-03, 9.9596e-03,  ..., 9.9964e-01,
          9.9374e-01, 4.7687e-03],
         [1.6059e-03, 9.8527e-01, 9.7012e-01,  ..., 1.1891e-04,
          2.0870e-03, 4.0262e-03]],
        [[9.9199e-01, 8.7177e-03, 7.2741e-03,  ..., 1.1254e-03,
          1.2131e-01, 1.2516e-03],
         [2.6708e-03, 8.7177e-03, 7.2741e-03,  ..., 1.1254e-03,
          1.8489e-01, 1.2516e-03],
         [2.6708e-03, 8.7177e-03, 7.2741e-03,  ..., 9.9662e-01,
          1.2321e-01, 9.9625e-01],
         [2.6708e-03, 9.7385e-01, 9.7818e-01,  ..., 1.1254e-03,
          5.7059e-01, 1.2516e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:29,558 [Process: 0] Synchronize training processes
2024-08-18 15:17:29,558 [Process: 0] Evaluating...
2024-08-18 15:17:29,562 [Process: 0] EPOCH 262:
2024-08-18 15:17:29,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:30,692 [Process: 0] Synchronize training processes
2024-08-18 15:17:30,693 [Process: 0] Evaluating...
2024-08-18 15:17:30,694 [Process: 0] EPOCH 263:
2024-08-18 15:17:30,696 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9877e-02, 2.3300e-04, 1.3345e-03,  ..., 5.4609e-03,
          1.6022e-01, 1.3752e-02],
         [1.9877e-02, 2.3300e-04, 1.3345e-03,  ..., 5.4609e-03,
          9.7862e-02, 1.3752e-02],
         [9.3626e-01, 2.3300e-04, 1.3345e-03,  ..., 9.8362e-01,
          8.1432e-02, 9.5723e-01],
         [2.3983e-02, 9.9930e-01, 9.9600e-01,  ..., 5.4609e-03,
          6.6049e-01, 1.5267e-02]],
        [[1.8171e-02, 3.1959e-04, 9.6634e-04,  ..., 1.9313e-04,
          1.2055e-01, 2.6608e-02],
         [1.8171e-02, 3.1959e-04, 9.6634e-04,  ..., 1.9313e-04,
          6.7261e-02, 2.6608e-02],
         [9.4138e-01, 3.1959e-04, 9.6634e-04,  ..., 1.9313e-04,
          6.7261e-02, 8.9989e-01],
         [2.2279e-02, 9.9904e-01, 9.9710e-01,  ..., 9.9942e-01,
          7.4493e-01, 4.6892e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9180e-01, 1.8681e-03, 3.3225e-03,  ..., 1.8302e-04,
          6.5596e-03, 9.9756e-01],
         [2.7337e-03, 1.8681e-03, 3.3225e-03,  ..., 1.8302e-04,
          6.5596e-03, 8.1474e-04],
         [2.7337e-03, 1.8681e-03, 3.3225e-03,  ..., 9.9945e-01,
          9.8032e-01, 8.1474e-04],
         [2.7337e-03, 9.9440e-01, 9.9003e-01,  ..., 1.8302e-04,
          6.5596e-03, 8.1474e-04]],
        [[9.9901e-01, 2.0953e-02, 1.1061e-02,  ..., 1.2353e-03,
          9.7780e-02, 2.3120e-03],
         [3.2829e-04, 2.4804e-02, 1.1067e-02,  ..., 1.2353e-03,
          1.3599e-01, 2.3120e-03],
         [3.2829e-04, 2.0953e-02, 1.1061e-02,  ..., 9.9629e-01,
          5.1754e-01, 9.9306e-01],
         [3.2829e-04, 9.3329e-01, 9.6681e-01,  ..., 1.2353e-03,
          2.4869e-01, 2.3120e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0999e-02, 2.9239e-03, 8.6577e-05,  ..., 8.8980e-03,
          1.1321e-01, 1.6235e-02],
         [2.0999e-02, 2.9239e-03, 8.6577e-05,  ..., 8.8980e-03,
          7.9206e-02, 1.5908e-02],
         [9.2924e-01, 2.9239e-03, 8.6577e-05,  ..., 9.7331e-01,
          6.2474e-02, 9.5195e-01],
         [2.8760e-02, 9.9123e-01, 9.9974e-01,  ..., 8.8980e-03,
          7.4511e-01, 1.5908e-02]],
        [[3.5718e-03, 5.3546e-04, 3.6374e-04,  ..., 1.0846e-04,
          2.8289e-01, 4.4032e-03],
         [3.5718e-03, 5.3546e-04, 3.6374e-04,  ..., 1.0846e-04,
          1.0085e-01, 4.4032e-03],
         [9.8928e-01, 5.3546e-04, 3.6374e-04,  ..., 1.0846e-04,
          8.2542e-02, 9.8679e-01],
         [3.5718e-03, 9.9839e-01, 9.9891e-01,  ..., 9.9967e-01,
          5.3371e-01, 4.4032e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:31,842 [Process: 0] Synchronize training processes
2024-08-18 15:17:31,842 [Process: 0] Evaluating...
2024-08-18 15:17:31,844 [Process: 0] EPOCH 264:
2024-08-18 15:17:31,846 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:32,967 [Process: 0] Synchronize training processes
2024-08-18 15:17:32,967 [Process: 0] Evaluating...
2024-08-18 15:17:32,969 [Process: 0] EPOCH 265:
2024-08-18 15:17:32,971 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6956e-01, 3.2214e-03, 6.5537e-03,  ..., 2.0728e-03,
          7.4999e-04, 9.9565e-01],
         [9.3225e-03, 3.2214e-03, 6.5537e-03,  ..., 2.0728e-03,
          7.4999e-04, 1.4500e-03],
         [9.3225e-03, 3.2214e-03, 6.5537e-03,  ..., 9.9378e-01,
          9.9775e-01, 1.4500e-03],
         [1.1794e-02, 9.9034e-01, 9.8034e-01,  ..., 2.0728e-03,
          7.4999e-04, 1.4500e-03]],
        [[9.9068e-01, 1.2453e-02, 8.3150e-03,  ..., 5.0155e-03,
          1.5539e-01, 4.2263e-04],
         [3.0982e-03, 1.2519e-02, 8.3150e-03,  ..., 5.0155e-03,
          1.9030e-01, 4.2263e-04],
         [3.1268e-03, 1.2453e-02, 8.3150e-03,  ..., 9.8495e-01,
          1.4688e-01, 9.9873e-01],
         [3.0982e-03, 9.6258e-01, 9.7505e-01,  ..., 5.0155e-03,
          5.0743e-01, 4.2263e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5572e-02, 7.6376e-03, 1.2200e-03,  ..., 8.3251e-03,
          1.9234e-01, 1.6656e-02],
         [2.5572e-02, 7.6376e-03, 1.2200e-03,  ..., 8.3251e-03,
          1.0297e-01, 1.6656e-02],
         [9.0563e-01, 7.6376e-03, 1.2200e-03,  ..., 9.7502e-01,
          7.9404e-02, 9.4580e-01],
         [4.3229e-02, 9.7709e-01, 9.9634e-01,  ..., 8.3251e-03,
          6.2528e-01, 2.0884e-02]],
        [[1.0898e-02, 9.8691e-05, 9.4770e-04,  ..., 3.1477e-04,
          7.3275e-01, 6.8220e-03],
         [1.0898e-02, 9.8691e-05, 9.4770e-04,  ..., 3.1477e-04,
          5.5545e-02, 6.8220e-03],
         [9.6689e-01, 9.8691e-05, 9.4770e-04,  ..., 3.1477e-04,
          5.5545e-02, 9.7953e-01],
         [1.1317e-02, 9.9970e-01, 9.9716e-01,  ..., 9.9906e-01,
          1.5616e-01, 6.8220e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8450e-01, 2.5221e-03, 1.2766e-03,  ..., 1.6907e-03,
          2.1023e-03, 9.9742e-01],
         [5.1652e-03, 2.5221e-03, 1.2766e-03,  ..., 1.6907e-03,
          2.1023e-03, 8.2440e-04],
         [5.1652e-03, 2.5221e-03, 1.2766e-03,  ..., 9.9493e-01,
          9.9369e-01, 9.3383e-04],
         [5.1652e-03, 9.9243e-01, 9.9617e-01,  ..., 1.6907e-03,
          2.1023e-03, 8.2440e-04]],
        [[9.9874e-01, 1.1873e-02, 6.4903e-03,  ..., 9.6048e-03,
          1.5070e-01, 1.2268e-04],
         [4.2013e-04, 1.1873e-02, 6.4903e-03,  ..., 9.6048e-03,
          3.2929e-01, 1.2268e-04],
         [4.2013e-04, 1.1873e-02, 6.4903e-03,  ..., 9.7119e-01,
          2.0867e-01, 9.9963e-01],
         [4.2013e-04, 9.6438e-01, 9.8053e-01,  ..., 9.6048e-03,
          3.1134e-01, 1.2268e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9955e-02, 1.4568e-03, 1.9990e-03,  ..., 3.4935e-03,
          1.2483e-01, 9.8550e-03],
         [1.9955e-02, 1.4568e-03, 1.9990e-03,  ..., 3.4935e-03,
          1.2059e-01, 9.8550e-03],
         [9.3163e-01, 1.4568e-03, 1.9990e-03,  ..., 9.8952e-01,
          7.1090e-02, 9.7043e-01],
         [2.8456e-02, 9.9563e-01, 9.9400e-01,  ..., 3.4935e-03,
          6.8349e-01, 9.8550e-03]],
        [[5.7546e-03, 1.5289e-04, 2.3226e-03,  ..., 3.7947e-04,
          7.8643e-01, 1.0010e-02],
         [5.7546e-03, 1.5289e-04, 2.3226e-03,  ..., 3.7947e-04,
          4.8356e-02, 1.0010e-02],
         [9.8274e-01, 1.5289e-04, 2.3226e-03,  ..., 3.7947e-04,
          4.8356e-02, 9.6915e-01],
         [5.7546e-03, 9.9954e-01, 9.9303e-01,  ..., 9.9886e-01,
          1.1686e-01, 1.0831e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:34,089 [Process: 0] Synchronize training processes
2024-08-18 15:17:34,089 [Process: 0] Evaluating...
2024-08-18 15:17:34,091 [Process: 0] EPOCH 266:
2024-08-18 15:17:34,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4583e-01, 1.8552e-03, 5.3136e-03,  ..., 1.9060e-02,
          3.1368e-04, 9.6348e-01],
         [1.6126e-02, 1.8552e-03, 5.3136e-03,  ..., 1.9060e-02,
          3.1368e-04, 1.1696e-02],
         [1.6126e-02, 1.8552e-03, 5.3136e-03,  ..., 9.4282e-01,
          9.9906e-01, 1.3132e-02],
         [2.1920e-02, 9.9443e-01, 9.8406e-01,  ..., 1.9060e-02,
          3.1368e-04, 1.1696e-02]],
        [[9.8914e-01, 1.2607e-02, 6.9405e-03,  ..., 3.0715e-03,
          1.8372e-01, 8.0191e-04],
         [3.6210e-03, 1.2607e-02, 6.9405e-03,  ..., 3.0715e-03,
          5.0306e-01, 8.0191e-04],
         [3.6210e-03, 1.2607e-02, 6.9405e-03,  ..., 9.9079e-01,
          1.5404e-01, 9.9759e-01],
         [3.6210e-03, 9.6218e-01, 9.7918e-01,  ..., 3.0715e-03,
          1.5918e-01, 8.0191e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1682e-02, 4.7754e-04, 2.1700e-04,  ..., 1.2693e-02,
          1.7164e-01, 1.2898e-02],
         [2.1731e-02, 4.7754e-04, 2.1700e-04,  ..., 1.2693e-02,
          1.1425e-01, 1.2898e-02],
         [9.2991e-01, 4.7754e-04, 2.1700e-04,  ..., 9.6192e-01,
          7.9114e-02, 9.6131e-01],
         [2.6675e-02, 9.9857e-01, 9.9935e-01,  ..., 1.2693e-02,
          6.3500e-01, 1.2898e-02]],
        [[4.1294e-03, 1.9833e-04, 3.4928e-04,  ..., 4.8614e-04,
          9.2777e-01, 1.4873e-02],
         [4.1294e-03, 1.9833e-04, 3.4928e-04,  ..., 4.8614e-04,
          1.3704e-02, 1.4873e-02],
         [9.8761e-01, 1.9833e-04, 3.4928e-04,  ..., 4.8614e-04,
          1.3704e-02, 9.5240e-01],
         [4.1294e-03, 9.9941e-01, 9.9895e-01,  ..., 9.9854e-01,
          4.4822e-02, 1.7849e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9739e-01, 3.1705e-03, 5.9142e-03,  ..., 9.3868e-04,
          1.0860e-03, 9.9491e-01],
         [8.6860e-04, 3.1705e-03, 5.9142e-03,  ..., 9.3868e-04,
          1.0860e-03, 1.6983e-03],
         [8.6860e-04, 3.1705e-03, 5.9142e-03,  ..., 9.9718e-01,
          9.9674e-01, 1.6983e-03],
         [8.6860e-04, 9.9049e-01, 9.8226e-01,  ..., 9.3868e-04,
          1.0860e-03, 1.6983e-03]],
        [[9.9457e-01, 1.0277e-02, 5.0529e-03,  ..., 9.3487e-04,
          1.2678e-01, 1.3943e-03],
         [1.8100e-03, 1.0277e-02, 5.0529e-03,  ..., 9.3487e-04,
          1.8228e-01, 1.3943e-03],
         [1.8100e-03, 1.0277e-02, 5.0529e-03,  ..., 9.9720e-01,
          3.3879e-01, 9.9582e-01],
         [1.8100e-03, 9.6917e-01, 9.8484e-01,  ..., 9.3487e-04,
          3.5215e-01, 1.3943e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:17:35,219 [Process: 0] Synchronize training processes
2024-08-18 15:17:35,219 [Process: 0] Evaluating...
2024-08-18 15:17:35,221 [Process: 0] EPOCH 267:
2024-08-18 15:17:35,223 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:36,338 [Process: 0] Synchronize training processes
2024-08-18 15:17:36,338 [Process: 0] Evaluating...
2024-08-18 15:17:36,340 [Process: 0] EPOCH 268:
2024-08-18 15:17:36,342 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3530e-03, 7.1463e-03, 1.7727e-03,  ..., 4.0140e-03,
          1.4478e-01, 1.1062e-02],
         [3.3530e-03, 6.3385e-03, 1.7727e-03,  ..., 4.0140e-03,
          6.1369e-02, 1.1062e-02],
         [9.8994e-01, 6.3385e-03, 1.7727e-03,  ..., 9.8796e-01,
          6.1369e-02, 9.6681e-01],
         [3.3530e-03, 9.8018e-01, 9.9468e-01,  ..., 4.0140e-03,
          7.3249e-01, 1.1062e-02]],
        [[9.6641e-03, 5.5491e-04, 7.8382e-04,  ..., 2.4402e-05,
          9.3504e-01, 5.2346e-03],
         [9.6641e-03, 5.5491e-04, 7.8382e-04,  ..., 2.4402e-05,
          1.4799e-02, 5.2346e-03],
         [9.7101e-01, 5.5491e-04, 7.8382e-04,  ..., 2.4402e-05,
          1.4799e-02, 9.8430e-01],
         [9.6641e-03, 9.9834e-01, 9.9765e-01,  ..., 9.9993e-01,
          3.5364e-02, 5.2346e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8925e-01, 1.5549e-03, 3.8603e-03,  ..., 6.0962e-05,
          1.2025e-03, 6.9899e-01],
         [3.5830e-03, 1.5549e-03, 3.8603e-03,  ..., 6.0962e-05,
          1.2025e-03, 4.2752e-02],
         [3.5830e-03, 1.5549e-03, 3.8603e-03,  ..., 9.9982e-01,
          9.9639e-01, 2.1551e-01],
         [3.5830e-03, 9.9534e-01, 9.8842e-01,  ..., 6.0962e-05,
          1.2025e-03, 4.2752e-02]],
        [[9.9291e-01, 9.7621e-03, 1.3942e-02,  ..., 1.4380e-01,
          2.1841e-01, 2.5599e-03],
         [2.0007e-03, 9.7621e-03, 1.3942e-02,  ..., 1.2322e-01,
          2.7147e-01, 2.5599e-03],
         [3.0918e-03, 9.7621e-03, 1.5540e-02,  ..., 9.2702e-02,
          1.0880e-01, 9.9232e-01],
         [2.0007e-03, 9.7071e-01, 9.5658e-01,  ..., 6.4027e-01,
          4.0131e-01, 2.5599e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.1475e-03, 1.3129e-03, 5.8230e-04,  ..., 1.3596e-02,
          1.3181e-01, 1.1435e-02],
         [6.1475e-03, 1.3129e-03, 5.8230e-04,  ..., 1.3596e-02,
          8.1848e-02, 1.1435e-02],
         [9.8156e-01, 1.3129e-03, 5.8230e-04,  ..., 9.5868e-01,
          6.7415e-02, 9.6570e-01],
         [6.1475e-03, 9.9606e-01, 9.9825e-01,  ..., 1.4125e-02,
          7.1893e-01, 1.1435e-02]],
        [[4.0108e-03, 3.0538e-04, 4.5331e-04,  ..., 9.2989e-05,
          9.6614e-01, 5.8339e-03],
         [4.0108e-03, 3.0538e-04, 4.5331e-04,  ..., 9.2989e-05,
          9.3586e-03, 5.8339e-03],
         [9.8797e-01, 3.0538e-04, 4.5331e-04,  ..., 9.2989e-05,
          9.3586e-03, 9.8250e-01],
         [4.0108e-03, 9.9908e-01, 9.9864e-01,  ..., 9.9972e-01,
          1.5147e-02, 5.8339e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7064e-01, 8.8492e-03, 8.0960e-03,  ..., 2.7763e-04,
          5.9940e-04, 9.8924e-01],
         [1.2243e-02, 8.8048e-03, 8.0960e-03,  ..., 2.7763e-04,
          5.9940e-04, 3.5858e-03],
         [8.5579e-03, 9.9230e-03, 8.2250e-03,  ..., 9.9917e-01,
          9.9820e-01, 3.5858e-03],
         [8.5579e-03, 9.7242e-01, 9.7558e-01,  ..., 2.7763e-04,
          5.9940e-04, 3.5858e-03]],
        [[9.9649e-01, 3.7726e-03, 1.1717e-02,  ..., 8.8605e-02,
          2.0939e-01, 1.5092e-03],
         [1.1712e-03, 3.7726e-03, 1.1717e-02,  ..., 8.2993e-02,
          1.6286e-01, 1.5092e-03],
         [1.1712e-03, 3.7726e-03, 1.5456e-02,  ..., 4.2530e-01,
          1.0483e-01, 9.9547e-01],
         [1.1712e-03, 9.8868e-01, 9.6111e-01,  ..., 4.0311e-01,
          5.2292e-01, 1.5092e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:37,469 [Process: 0] Synchronize training processes
2024-08-18 15:17:37,469 [Process: 0] Evaluating...
2024-08-18 15:17:37,471 [Process: 0] EPOCH 269:
2024-08-18 15:17:37,473 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:38,603 [Process: 0] Synchronize training processes
2024-08-18 15:17:38,603 [Process: 0] Evaluating...
2024-08-18 15:17:38,605 [Process: 0] EPOCH 270:
2024-08-18 15:17:38,607 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7162e-03, 3.1659e-03, 2.2789e-03,  ..., 1.5646e-02,
          1.7913e-01, 1.9241e-02],
         [6.7162e-03, 3.1659e-03, 2.2789e-03,  ..., 1.5646e-02,
          7.2685e-02, 1.9241e-02],
         [9.7985e-01, 3.1659e-03, 2.2789e-03,  ..., 9.5232e-01,
          7.4007e-02, 9.3867e-01],
         [6.7162e-03, 9.9050e-01, 9.9316e-01,  ..., 1.6387e-02,
          6.7418e-01, 2.2847e-02]],
        [[5.1463e-03, 3.1426e-04, 6.9689e-04,  ..., 5.6732e-05,
          9.2931e-01, 6.9421e-03],
         [5.1463e-03, 3.1426e-04, 6.9689e-04,  ..., 5.6732e-05,
          1.7542e-02, 6.9421e-03],
         [9.8456e-01, 3.1426e-04, 6.9689e-04,  ..., 5.6732e-05,
          1.7542e-02, 9.7917e-01],
         [5.1463e-03, 9.9906e-01, 9.9791e-01,  ..., 9.9983e-01,
          3.5604e-02, 6.9421e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9680e-01, 9.6414e-04, 2.3242e-03,  ..., 1.3372e-02,
          5.9106e-02, 9.7861e-01],
         [1.0681e-03, 9.6414e-04, 2.3242e-03,  ..., 1.3372e-02,
          2.1023e-02, 7.1304e-03],
         [1.0681e-03, 9.6414e-04, 2.3242e-03,  ..., 9.5988e-01,
          8.9885e-01, 7.1304e-03],
         [1.0681e-03, 9.9711e-01, 9.9303e-01,  ..., 1.3372e-02,
          2.1023e-02, 7.1304e-03]],
        [[9.8869e-01, 4.1197e-03, 2.5486e-03,  ..., 1.1235e-03,
          2.3390e-01, 6.0518e-04],
         [3.3673e-03, 4.1197e-03, 2.5486e-03,  ..., 1.1235e-03,
          1.2599e-01, 6.0518e-04],
         [4.5767e-03, 4.1197e-03, 2.5486e-03,  ..., 9.9663e-01,
          9.5698e-02, 9.9818e-01],
         [3.3673e-03, 9.8764e-01, 9.9235e-01,  ..., 1.1235e-03,
          5.4441e-01, 6.0518e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.9997e-03, 7.0662e-03, 8.5274e-04,  ..., 8.3288e-03,
          2.1361e-01, 3.1351e-03],
         [5.9997e-03, 7.0662e-03, 8.5274e-04,  ..., 8.3288e-03,
          6.9215e-02, 3.1351e-03],
         [9.8200e-01, 7.0662e-03, 8.5274e-04,  ..., 9.7501e-01,
          6.9215e-02, 9.9059e-01],
         [5.9997e-03, 9.7880e-01, 9.9744e-01,  ..., 8.3288e-03,
          6.4796e-01, 3.1351e-03]],
        [[1.2525e-02, 4.6624e-04, 6.5262e-04,  ..., 8.5800e-05,
          9.6235e-01, 8.5161e-03],
         [1.2525e-02, 4.6624e-04, 6.5262e-04,  ..., 8.5800e-05,
          9.7756e-03, 8.5161e-03],
         [9.6242e-01, 4.6624e-04, 6.5262e-04,  ..., 8.5800e-05,
          9.7756e-03, 9.7445e-01],
         [1.2525e-02, 9.9860e-01, 9.9804e-01,  ..., 9.9974e-01,
          1.8096e-02, 8.5161e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:39,736 [Process: 0] Synchronize training processes
2024-08-18 15:17:39,737 [Process: 0] Evaluating...
2024-08-18 15:17:39,738 [Process: 0] EPOCH 271:
2024-08-18 15:17:39,740 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:40,871 [Process: 0] Synchronize training processes
2024-08-18 15:17:40,871 [Process: 0] Evaluating...
2024-08-18 15:17:40,875 [Process: 0] EPOCH 272:
2024-08-18 15:17:40,877 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9954e-01, 1.0961e-02, 3.1232e-03,  ..., 6.6360e-02,
          3.5782e-03, 9.9270e-01],
         [1.5314e-04, 1.0961e-02, 3.1232e-03,  ..., 6.6360e-02,
          3.5782e-03, 2.4320e-03],
         [1.5314e-04, 1.0961e-02, 3.1232e-03,  ..., 4.1345e-01,
          9.8927e-01, 2.4320e-03],
         [1.5314e-04, 9.6712e-01, 9.9063e-01,  ..., 4.5383e-01,
          3.5782e-03, 2.4320e-03]],
        [[9.7875e-01, 2.7158e-03, 4.6114e-03,  ..., 1.2836e-03,
          1.9508e-01, 3.1698e-04],
         [7.0832e-03, 2.7158e-03, 4.6114e-03,  ..., 1.2836e-03,
          1.3724e-01, 3.1698e-04],
         [7.0832e-03, 2.7158e-03, 4.6114e-03,  ..., 9.9615e-01,
          1.7530e-01, 9.9905e-01],
         [7.0832e-03, 9.9185e-01, 9.8617e-01,  ..., 1.2836e-03,
          4.9238e-01, 3.1698e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1918e-03, 1.6276e-03, 2.0392e-04,  ..., 4.6856e-03,
          2.2449e-01, 1.6093e-02],
         [3.1918e-03, 1.6276e-03, 2.0392e-04,  ..., 4.6856e-03,
          6.9824e-02, 1.6093e-02],
         [9.9042e-01, 1.6276e-03, 2.0392e-04,  ..., 9.8594e-01,
          6.9824e-02, 9.4693e-01],
         [3.1918e-03, 9.9512e-01, 9.9939e-01,  ..., 4.6856e-03,
          6.3586e-01, 2.0886e-02]],
        [[5.3572e-03, 4.0504e-05, 4.0152e-04,  ..., 6.9810e-04,
          9.8150e-01, 6.1314e-03],
         [5.3572e-03, 4.0504e-05, 4.0152e-04,  ..., 6.9810e-04,
          6.1665e-03, 6.1314e-03],
         [9.8393e-01, 4.0504e-05, 4.0152e-04,  ..., 6.9810e-04,
          6.1665e-03, 9.8161e-01],
         [5.3572e-03, 9.9988e-01, 9.9880e-01,  ..., 9.9791e-01,
          6.1665e-03, 6.1314e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8788e-01, 6.5174e-03, 3.0944e-03,  ..., 1.2930e-02,
          1.6407e-03, 9.7655e-01],
         [4.0399e-03, 6.5174e-03, 3.0944e-03,  ..., 1.2930e-02,
          1.6407e-03, 7.8153e-03],
         [4.0399e-03, 6.5174e-03, 3.0944e-03,  ..., 9.5991e-01,
          9.9508e-01, 7.8153e-03],
         [4.0399e-03, 9.8045e-01, 9.9072e-01,  ..., 1.4231e-02,
          1.6407e-03, 7.8153e-03]],
        [[9.9770e-01, 3.9315e-03, 1.8956e-03,  ..., 3.3892e-04,
          2.2669e-01, 8.8426e-04],
         [7.6537e-04, 3.9315e-03, 1.8956e-03,  ..., 3.3892e-04,
          1.6895e-01, 8.8426e-04],
         [7.6537e-04, 3.9744e-03, 1.8956e-03,  ..., 9.9898e-01,
          1.6647e-01, 9.9735e-01],
         [7.6537e-04, 9.8816e-01, 9.9431e-01,  ..., 3.3892e-04,
          4.3789e-01, 8.8426e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:42,006 [Process: 0] Synchronize training processes
2024-08-18 15:17:42,006 [Process: 0] Evaluating...
2024-08-18 15:17:42,008 [Process: 0] EPOCH 273:
2024-08-18 15:17:42,010 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6823e-03, 1.0124e-03, 3.7807e-04,  ..., 6.8007e-03,
          3.9665e-03, 8.2646e-03],
         [9.6823e-03, 1.0124e-03, 3.7807e-04,  ..., 6.8007e-03,
          3.9665e-03, 8.2646e-03],
         [9.7095e-01, 1.0124e-03, 3.7807e-04,  ..., 9.7960e-01,
          3.9665e-03, 9.7521e-01],
         [9.6823e-03, 9.9696e-01, 9.9887e-01,  ..., 6.8007e-03,
          9.8810e-01, 8.2646e-03]],
        [[8.4942e-03, 1.4394e-04, 4.3304e-04,  ..., 9.3330e-05,
          9.8006e-01, 4.8299e-03],
         [8.4942e-03, 1.4394e-04, 4.3304e-04,  ..., 9.3330e-05,
          5.5880e-03, 4.8299e-03],
         [9.7394e-01, 1.4394e-04, 4.3304e-04,  ..., 9.3330e-05,
          5.5880e-03, 9.8551e-01],
         [9.0691e-03, 9.9957e-01, 9.9870e-01,  ..., 9.9972e-01,
          8.7675e-03, 4.8299e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6411e-01, 7.9057e-04, 2.3767e-03,  ..., 6.8709e-03,
          1.1382e-03, 9.9924e-01],
         [8.7981e-03, 7.9057e-04, 2.3767e-03,  ..., 6.8709e-03,
          1.1382e-03, 2.5427e-04],
         [8.7981e-03, 7.9057e-04, 2.3767e-03,  ..., 9.7939e-01,
          9.9659e-01, 2.5427e-04],
         [1.8295e-02, 9.9763e-01, 9.9287e-01,  ..., 6.8709e-03,
          1.1382e-03, 2.5427e-04]],
        [[9.1885e-01, 1.0531e-02, 1.4833e-03,  ..., 2.0353e-04,
          2.7776e-01, 1.3980e-03],
         [3.9067e-02, 1.0531e-02, 1.4833e-03,  ..., 2.0353e-04,
          2.1243e-01, 1.3980e-03],
         [2.1042e-02, 1.1040e-02, 1.4833e-03,  ..., 9.9939e-01,
          1.7514e-01, 9.9581e-01],
         [2.1042e-02, 9.6790e-01, 9.9555e-01,  ..., 2.0353e-04,
          3.3467e-01, 1.3980e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4312e-03, 1.9442e-03, 7.6279e-04,  ..., 3.4757e-03,
          6.8000e-04, 6.0374e-03],
         [9.4312e-03, 1.9442e-03, 7.6279e-04,  ..., 3.4757e-03,
          6.8000e-04, 6.0374e-03],
         [9.7171e-01, 1.9442e-03, 7.6279e-04,  ..., 9.8957e-01,
          6.8000e-04, 9.8189e-01],
         [9.4312e-03, 9.9417e-01, 9.9771e-01,  ..., 3.4757e-03,
          9.9796e-01, 6.0374e-03]],
        [[1.8226e-02, 1.2164e-03, 2.2873e-04,  ..., 2.0805e-04,
          9.6497e-01, 2.7100e-03],
         [1.5824e-02, 1.2164e-03, 2.2873e-04,  ..., 2.0805e-04,
          9.6871e-03, 2.7100e-03],
         [9.4832e-01, 1.2164e-03, 2.2873e-04,  ..., 2.0805e-04,
          9.6871e-03, 9.9187e-01],
         [1.7632e-02, 9.9635e-01, 9.9931e-01,  ..., 9.9938e-01,
          1.5652e-02, 2.7100e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9837e-01, 2.2209e-03, 1.9132e-03,  ..., 5.2299e-04,
          1.9847e-03, 9.8751e-01],
         [5.4459e-04, 2.2209e-03, 1.9132e-03,  ..., 5.2299e-04,
          1.9847e-03, 4.1625e-03],
         [5.4459e-04, 2.2209e-03, 1.9132e-03,  ..., 9.9843e-01,
          9.9405e-01, 4.1625e-03],
         [5.4459e-04, 9.9334e-01, 9.9426e-01,  ..., 5.2299e-04,
          1.9847e-03, 4.1625e-03]],
        [[9.8499e-01, 9.7785e-03, 7.5707e-03,  ..., 2.6382e-04,
          1.9718e-01, 1.0758e-04],
         [5.0036e-03, 1.1238e-02, 7.5707e-03,  ..., 2.6382e-04,
          2.2976e-01, 1.0758e-04],
         [5.0036e-03, 9.7785e-03, 7.5707e-03,  ..., 9.9921e-01,
          1.9273e-01, 9.9968e-01],
         [5.0036e-03, 9.6920e-01, 9.7729e-01,  ..., 2.6382e-04,
          3.8032e-01, 1.0758e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:43,130 [Process: 0] Synchronize training processes
2024-08-18 15:17:43,131 [Process: 0] Evaluating...
2024-08-18 15:17:43,132 [Process: 0] EPOCH 274:
2024-08-18 15:17:43,134 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:44,257 [Process: 0] Synchronize training processes
2024-08-18 15:17:44,258 [Process: 0] Evaluating...
2024-08-18 15:17:44,259 [Process: 0] EPOCH 275:
2024-08-18 15:17:44,261 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.6425e-03, 1.1358e-03, 4.7438e-03,  ..., 1.1364e-02,
          1.0386e-03, 1.8311e-02],
         [6.6425e-03, 1.1358e-03, 5.2371e-03,  ..., 1.1364e-02,
          1.0386e-03, 1.8311e-02],
         [9.8007e-01, 1.1358e-03, 4.7438e-03,  ..., 9.6537e-01,
          1.0386e-03, 9.3988e-01],
         [6.6425e-03, 9.9659e-01, 9.8528e-01,  ..., 1.1897e-02,
          9.9688e-01, 2.3500e-02]],
        [[1.6914e-02, 4.5971e-04, 2.7337e-03,  ..., 3.8196e-04,
          9.3784e-01, 5.6379e-03],
         [1.6914e-02, 4.5971e-04, 2.7337e-03,  ..., 3.8196e-04,
          1.7134e-02, 5.6379e-03],
         [9.4359e-01, 4.5971e-04, 2.7337e-03,  ..., 3.8196e-04,
          1.7134e-02, 9.8309e-01],
         [2.2578e-02, 9.9862e-01, 9.9180e-01,  ..., 9.9885e-01,
          2.7891e-02, 5.6379e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9521e-01, 2.5356e-03, 1.0195e-02,  ..., 8.1822e-04,
          1.7818e-03, 9.9524e-01],
         [1.5969e-03, 2.5356e-03, 1.0195e-02,  ..., 8.1822e-04,
          1.7818e-03, 1.5860e-03],
         [1.5969e-03, 2.5356e-03, 1.0195e-02,  ..., 9.9755e-01,
          9.9465e-01, 1.5860e-03],
         [1.5969e-03, 9.9239e-01, 9.6941e-01,  ..., 8.1822e-04,
          1.7818e-03, 1.5860e-03]],
        [[9.9731e-01, 5.5273e-03, 2.7321e-03,  ..., 8.3528e-04,
          1.1352e-01, 2.3434e-04],
         [8.9725e-04, 5.5273e-03, 2.7321e-03,  ..., 8.3528e-04,
          1.4685e-01, 2.3434e-04],
         [8.9725e-04, 5.5273e-03, 2.7321e-03,  ..., 9.9749e-01,
          2.9349e-01, 9.9930e-01],
         [8.9725e-04, 9.8342e-01, 9.9180e-01,  ..., 8.3528e-04,
          4.4614e-01, 2.3434e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5953e-03, 3.6387e-04, 2.2496e-03,  ..., 1.8488e-02,
          1.1366e-03, 5.9377e-03],
         [5.5953e-03, 3.6387e-04, 2.2496e-03,  ..., 1.8488e-02,
          1.1366e-03, 5.9377e-03],
         [9.8321e-01, 3.6387e-04, 2.2496e-03,  ..., 9.3792e-01,
          1.1366e-03, 9.8219e-01],
         [5.5953e-03, 9.9891e-01, 9.9325e-01,  ..., 2.5100e-02,
          9.9659e-01, 5.9377e-03]],
        [[1.3246e-02, 7.0311e-04, 8.7171e-04,  ..., 5.7048e-04,
          9.0390e-01, 4.7090e-03],
         [1.3246e-02, 7.0311e-04, 8.7171e-04,  ..., 5.7048e-04,
          2.5121e-02, 4.7090e-03],
         [9.5876e-01, 7.0311e-04, 8.7171e-04,  ..., 5.7048e-04,
          2.5121e-02, 9.8587e-01],
         [1.4750e-02, 9.9789e-01, 9.9738e-01,  ..., 9.9829e-01,
          4.5862e-02, 4.7090e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:45,386 [Process: 0] Synchronize training processes
2024-08-18 15:17:45,386 [Process: 0] Evaluating...
2024-08-18 15:17:45,388 [Process: 0] EPOCH 276:
2024-08-18 15:17:45,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:46,512 [Process: 0] Synchronize training processes
2024-08-18 15:17:46,513 [Process: 0] Evaluating...
2024-08-18 15:17:46,514 [Process: 0] EPOCH 277:
2024-08-18 15:17:46,516 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9655e-01, 1.0646e-03, 1.2147e-02,  ..., 8.0006e-05,
          1.1383e-03, 9.9822e-01],
         [1.1513e-03, 1.0646e-03, 1.2147e-02,  ..., 8.0006e-05,
          1.1383e-03, 5.9347e-04],
         [1.1513e-03, 1.0646e-03, 1.3586e-02,  ..., 9.9976e-01,
          9.9659e-01, 5.9347e-04],
         [1.1513e-03, 9.9681e-01, 9.6212e-01,  ..., 8.0006e-05,
          1.1383e-03, 5.9347e-04]],
        [[9.9531e-01, 2.6122e-03, 2.6188e-03,  ..., 6.5537e-04,
          1.3601e-01, 6.9068e-04],
         [1.5638e-03, 2.6122e-03, 2.6188e-03,  ..., 6.5537e-04,
          1.1365e-01, 6.9068e-04],
         [1.5638e-03, 2.6122e-03, 2.6188e-03,  ..., 9.9803e-01,
          2.8828e-01, 9.9793e-01],
         [1.5638e-03, 9.9216e-01, 9.9214e-01,  ..., 6.5537e-04,
          4.6206e-01, 6.9068e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.6055e-03, 2.4567e-03, 3.1324e-03,  ..., 9.9103e-03,
          3.7798e-03, 3.3458e-03],
         [6.6055e-03, 2.4567e-03, 3.1324e-03,  ..., 9.9103e-03,
          3.7798e-03, 3.3458e-03],
         [9.8018e-01, 2.4567e-03, 3.1324e-03,  ..., 9.7027e-01,
          3.7798e-03, 9.8996e-01],
         [6.6055e-03, 9.9263e-01, 9.9060e-01,  ..., 9.9103e-03,
          9.8866e-01, 3.3458e-03]],
        [[4.5128e-03, 1.8906e-03, 3.1680e-03,  ..., 5.4633e-04,
          9.3993e-01, 4.8484e-03],
         [4.5128e-03, 1.8906e-03, 3.1680e-03,  ..., 5.4633e-04,
          1.6524e-02, 4.8484e-03],
         [9.8646e-01, 1.8906e-03, 3.1680e-03,  ..., 5.4633e-04,
          1.6524e-02, 9.8545e-01],
         [4.5128e-03, 9.9433e-01, 9.9050e-01,  ..., 9.9836e-01,
          2.7019e-02, 4.8484e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9780e-01, 1.8800e-03, 2.6566e-03,  ..., 5.1238e-05,
          5.2140e-04, 9.7932e-01],
         [7.3294e-04, 1.8800e-03, 2.6566e-03,  ..., 5.1238e-05,
          5.2140e-04, 6.2645e-03],
         [7.3294e-04, 1.8800e-03, 2.6566e-03,  ..., 9.9985e-01,
          9.9844e-01, 8.1502e-03],
         [7.3294e-04, 9.9436e-01, 9.9203e-01,  ..., 5.1238e-05,
          5.2140e-04, 6.2645e-03]],
        [[9.9684e-01, 2.4055e-03, 4.3160e-03,  ..., 1.2481e-03,
          1.4402e-01, 2.3506e-04],
         [1.0550e-03, 2.4055e-03, 4.3160e-03,  ..., 1.2481e-03,
          1.2600e-01, 2.3506e-04],
         [1.0550e-03, 2.4055e-03, 4.3160e-03,  ..., 9.9626e-01,
          3.1042e-01, 9.9929e-01],
         [1.0550e-03, 9.9278e-01, 9.8705e-01,  ..., 1.2481e-03,
          4.1956e-01, 2.3506e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7988e-02, 1.9941e-03, 4.0046e-03,  ..., 5.9273e-03,
          1.3070e-03, 7.4733e-03],
         [1.7988e-02, 1.9941e-03, 4.0046e-03,  ..., 5.9273e-03,
          1.3070e-03, 7.4733e-03],
         [9.3945e-01, 1.9941e-03, 4.0046e-03,  ..., 9.8222e-01,
          1.3070e-03, 9.7758e-01],
         [2.4575e-02, 9.9402e-01, 9.8799e-01,  ..., 5.9273e-03,
          9.9608e-01, 7.4733e-03]],
        [[3.4209e-03, 3.0008e-04, 3.5161e-03,  ..., 4.1836e-03,
          4.7406e-01, 8.3996e-03],
         [3.4209e-03, 3.0008e-04, 3.5161e-03,  ..., 4.1836e-03,
          9.5511e-02, 8.3996e-03],
         [9.8974e-01, 3.0008e-04, 3.5161e-03,  ..., 4.1836e-03,
          1.3036e-01, 9.7480e-01],
         [3.4209e-03, 9.9910e-01, 9.8945e-01,  ..., 9.8745e-01,
          3.0007e-01, 8.3996e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:47,648 [Process: 0] Synchronize training processes
2024-08-18 15:17:47,648 [Process: 0] Evaluating...
2024-08-18 15:17:47,650 [Process: 0] EPOCH 278:
2024-08-18 15:17:47,651 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:48,772 [Process: 0] Synchronize training processes
2024-08-18 15:17:48,772 [Process: 0] Evaluating...
2024-08-18 15:17:48,774 [Process: 0] EPOCH 279:
2024-08-18 15:17:48,776 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8853e-01, 8.4088e-03, 2.5880e-03,  ..., 4.1121e-04,
          1.0173e-04, 9.9666e-01],
         [3.8232e-03, 8.4088e-03, 2.5880e-03,  ..., 4.1121e-04,
          1.0173e-04, 1.1149e-03],
         [3.8232e-03, 8.4088e-03, 2.5880e-03,  ..., 9.9877e-01,
          9.9969e-01, 1.1149e-03],
         [3.8232e-03, 9.7477e-01, 9.9224e-01,  ..., 4.1121e-04,
          1.0173e-04, 1.1149e-03]],
        [[9.9384e-01, 6.0328e-03, 8.3524e-03,  ..., 2.1508e-04,
          1.1095e-01, 1.7848e-04],
         [2.5396e-03, 6.0328e-03, 8.3524e-03,  ..., 2.1508e-04,
          1.2200e-01, 1.7848e-04],
         [1.8097e-03, 6.0328e-03, 8.3524e-03,  ..., 9.9935e-01,
          2.6400e-01, 9.9946e-01],
         [1.8097e-03, 9.8190e-01, 9.7494e-01,  ..., 2.1508e-04,
          5.0305e-01, 1.7848e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0191e-02, 1.7334e-03, 3.9235e-03,  ..., 1.1729e-02,
          8.4382e-02, 2.0913e-02],
         [1.0191e-02, 1.7334e-03, 3.9235e-03,  ..., 1.1123e-02,
          7.9409e-02, 2.0766e-02],
         [9.6813e-01, 1.7334e-03, 3.9235e-03,  ..., 9.6602e-01,
          1.3154e-01, 9.2669e-01],
         [1.1492e-02, 9.9480e-01, 9.8823e-01,  ..., 1.1123e-02,
          7.0467e-01, 3.1627e-02]],
        [[1.3409e-02, 1.3752e-03, 6.6954e-04,  ..., 2.3731e-03,
          9.5748e-01, 1.4220e-02],
         [1.3409e-02, 1.3752e-03, 6.6954e-04,  ..., 2.3731e-03,
          1.4175e-02, 1.4220e-02],
         [9.5702e-01, 1.3752e-03, 6.6954e-04,  ..., 2.3731e-03,
          1.4175e-02, 9.5257e-01],
         [1.6164e-02, 9.9587e-01, 9.9799e-01,  ..., 9.9288e-01,
          1.4175e-02, 1.8992e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9794e-01, 2.3923e-03, 4.2512e-03,  ..., 1.6675e-04,
          1.7857e-04, 9.9532e-01],
         [6.8736e-04, 2.3923e-03, 4.2512e-03,  ..., 1.6675e-04,
          1.7857e-04, 1.6330e-03],
         [6.8736e-04, 2.3923e-03, 4.2512e-03,  ..., 9.9950e-01,
          9.9946e-01, 1.5247e-03],
         [6.8736e-04, 9.9282e-01, 9.8725e-01,  ..., 1.6675e-04,
          1.7857e-04, 1.5247e-03]],
        [[9.9679e-01, 2.1985e-03, 4.3882e-03,  ..., 1.6456e-03,
          1.2781e-01, 1.2458e-03],
         [1.0709e-03, 2.1985e-03, 4.3882e-03,  ..., 1.6456e-03,
          1.2089e-01, 1.2458e-03],
         [1.0709e-03, 2.1985e-03, 4.3882e-03,  ..., 9.9506e-01,
          2.2911e-01, 9.9626e-01],
         [1.0709e-03, 9.9340e-01, 9.8684e-01,  ..., 1.6456e-03,
          5.2219e-01, 1.2458e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
2024-08-18 15:17:49,895 [Process: 0] Synchronize training processes
2024-08-18 15:17:49,895 [Process: 0] Evaluating...
2024-08-18 15:17:49,897 [Process: 0] EPOCH 280:
2024-08-18 15:17:49,899 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:51,016 [Process: 0] Synchronize training processes
2024-08-18 15:17:51,017 [Process: 0] Evaluating...
2024-08-18 15:17:51,018 [Process: 0] EPOCH 281:
2024-08-18 15:17:51,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.9416e-03, 6.6347e-05, 6.9189e-04,  ..., 6.9961e-03,
          3.6025e-02, 4.2047e-03],
         [3.9416e-03, 6.6347e-05, 6.9189e-04,  ..., 6.9961e-03,
          3.1900e-02, 4.2047e-03],
         [9.8818e-01, 6.6347e-05, 6.9189e-04,  ..., 9.7901e-01,
          3.1900e-02, 9.8739e-01],
         [3.9416e-03, 9.9980e-01, 9.9792e-01,  ..., 6.9961e-03,
          9.0018e-01, 4.2047e-03]],
        [[7.2234e-03, 6.6749e-04, 7.2513e-03,  ..., 1.1562e-03,
          9.0767e-01, 2.2632e-02],
         [7.2234e-03, 6.6749e-04, 7.2513e-03,  ..., 1.1562e-03,
          3.3956e-02, 2.2632e-02],
         [9.7833e-01, 6.6749e-04, 7.2513e-03,  ..., 1.1562e-03,
          2.7862e-02, 9.1988e-01],
         [7.2234e-03, 9.9800e-01, 9.7825e-01,  ..., 9.9653e-01,
          3.0509e-02, 3.4852e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9390e-01, 4.6436e-03, 4.2734e-03,  ..., 2.7795e-04,
          3.3853e-04, 9.9774e-01],
         [2.0342e-03, 4.6436e-03, 4.2734e-03,  ..., 2.7795e-04,
          3.3853e-04, 7.5467e-04],
         [2.0342e-03, 4.6436e-03, 4.2734e-03,  ..., 9.9917e-01,
          9.9898e-01, 7.5467e-04],
         [2.0342e-03, 9.8607e-01, 9.8718e-01,  ..., 2.7795e-04,
          3.3853e-04, 7.5467e-04]],
        [[9.8711e-01, 9.1842e-03, 3.2498e-03,  ..., 4.0336e-04,
          1.1042e-01, 1.5099e-03],
         [5.2583e-03, 9.1842e-03, 3.2498e-03,  ..., 4.0336e-04,
          1.1071e-01, 1.5099e-03],
         [3.8172e-03, 9.1842e-03, 3.2498e-03,  ..., 9.9879e-01,
          2.2471e-01, 9.9547e-01],
         [3.8172e-03, 9.7245e-01, 9.9025e-01,  ..., 4.0336e-04,
          5.5416e-01, 1.5099e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.4904e-03, 1.4850e-04, 3.0821e-03,  ..., 5.2265e-03,
          1.4081e-01, 6.2727e-03],
         [5.4904e-03, 1.4850e-04, 3.0821e-03,  ..., 5.2265e-03,
          6.8161e-02, 6.2727e-03],
         [9.8353e-01, 1.4850e-04, 3.0821e-03,  ..., 9.8432e-01,
          6.8161e-02, 9.8118e-01],
         [5.4904e-03, 9.9955e-01, 9.9075e-01,  ..., 5.2265e-03,
          7.2287e-01, 6.2727e-03]],
        [[3.9256e-03, 1.6936e-04, 5.9274e-04,  ..., 1.0679e-03,
          9.5199e-01, 1.9285e-02],
         [3.9256e-03, 1.6936e-04, 5.9274e-04,  ..., 1.0679e-03,
          1.4268e-02, 1.9285e-02],
         [9.8822e-01, 1.6936e-04, 5.9274e-04,  ..., 1.0679e-03,
          1.4268e-02, 9.3650e-01],
         [3.9256e-03, 9.9949e-01, 9.9822e-01,  ..., 9.9680e-01,
          1.9479e-02, 2.4931e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9797e-01, 1.3162e-02, 3.0526e-03,  ..., 3.2397e-02,
          7.1040e-04, 9.9487e-01],
         [6.7592e-04, 1.3162e-02, 3.0526e-03,  ..., 3.2397e-02,
          7.1040e-04, 1.7107e-03],
         [6.7592e-04, 1.3162e-02, 3.0526e-03,  ..., 8.4694e-01,
          9.9787e-01, 1.7107e-03],
         [6.7592e-04, 9.6051e-01, 9.9084e-01,  ..., 8.8268e-02,
          7.1040e-04, 1.7107e-03]],
        [[9.8465e-01, 4.9868e-03, 9.5021e-04,  ..., 7.7818e-04,
          1.2999e-01, 3.4622e-04],
         [3.8067e-03, 4.9868e-03, 9.5021e-04,  ..., 7.7818e-04,
          1.4042e-01, 3.4622e-04],
         [7.7375e-03, 4.9868e-03, 9.5021e-04,  ..., 9.9767e-01,
          2.6898e-01, 9.9896e-01],
         [3.8067e-03, 9.8504e-01, 9.9715e-01,  ..., 7.7818e-04,
          4.6062e-01, 3.4622e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:52,152 [Process: 0] Synchronize training processes
2024-08-18 15:17:52,152 [Process: 0] Evaluating...
2024-08-18 15:17:52,156 [Process: 0] EPOCH 282:
2024-08-18 15:17:52,158 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.9350e-03, 1.9997e-03, 2.1195e-04,  ..., 8.3509e-03,
          1.6577e-01, 1.0219e-02],
         [4.9350e-03, 1.9997e-03, 2.1195e-04,  ..., 8.3509e-03,
          6.8464e-02, 1.0219e-02],
         [9.8519e-01, 1.9997e-03, 2.1195e-04,  ..., 9.7495e-01,
          6.8464e-02, 9.6904e-01],
         [4.9350e-03, 9.9400e-01, 9.9936e-01,  ..., 8.3509e-03,
          6.9730e-01, 1.0518e-02]],
        [[1.6359e-02, 7.1582e-04, 3.0921e-03,  ..., 6.2925e-04,
          9.9105e-01, 3.2974e-03],
         [1.6359e-02, 7.1582e-04, 3.0921e-03,  ..., 6.2925e-04,
          2.9371e-03, 3.2974e-03],
         [9.4364e-01, 7.1582e-04, 3.0921e-03,  ..., 6.2925e-04,
          2.9371e-03, 9.9011e-01],
         [2.3641e-02, 9.9785e-01, 9.9072e-01,  ..., 9.9811e-01,
          3.0727e-03, 3.2974e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 6.6987e-03, 8.2243e-03,  ..., 4.2830e-02,
          2.8484e-03, 9.9969e-01],
         [3.6697e-05, 6.6987e-03, 8.2243e-03,  ..., 4.2830e-02,
          2.8484e-03, 1.0347e-04],
         [3.6697e-05, 6.6987e-03, 8.2243e-03,  ..., 8.1377e-01,
          9.9145e-01, 1.0347e-04],
         [3.6697e-05, 9.7990e-01, 9.7533e-01,  ..., 1.0057e-01,
          2.8484e-03, 1.0347e-04]],
        [[9.7489e-01, 1.2994e-02, 9.3219e-03,  ..., 7.2095e-04,
          2.0793e-01, 4.2350e-04],
         [7.7542e-03, 1.2994e-02, 9.3219e-03,  ..., 7.2095e-04,
          1.7447e-01, 4.2350e-04],
         [9.5991e-03, 1.2994e-02, 9.3219e-03,  ..., 9.9784e-01,
          2.7483e-01, 9.9873e-01],
         [7.7542e-03, 9.6102e-01, 9.7203e-01,  ..., 7.2095e-04,
          3.4277e-01, 4.2350e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4353e-02, 3.3966e-04, 2.2119e-03,  ..., 4.0079e-03,
          3.7352e-02, 9.4400e-03],
         [1.4353e-02, 3.3966e-04, 2.2119e-03,  ..., 4.0079e-03,
          3.3569e-02, 9.4400e-03],
         [9.5362e-01, 3.3966e-04, 2.2119e-03,  ..., 9.8798e-01,
          3.3569e-02, 9.7057e-01],
         [1.7676e-02, 9.9898e-01, 9.9336e-01,  ..., 4.0079e-03,
          8.9551e-01, 1.0551e-02]],
        [[1.6036e-02, 3.2699e-03, 3.6890e-03,  ..., 6.9552e-04,
          9.9140e-01, 4.7653e-03],
         [1.6036e-02, 3.2699e-03, 3.6890e-03,  ..., 6.9552e-04,
          2.7225e-03, 4.7653e-03],
         [9.4692e-01, 3.2699e-03, 3.6890e-03,  ..., 6.9552e-04,
          2.7225e-03, 9.8570e-01],
         [2.1013e-02, 9.9019e-01, 9.8893e-01,  ..., 9.9791e-01,
          3.1542e-03, 4.7653e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9988e-01, 1.7272e-03, 1.7696e-03,  ..., 7.8442e-04,
          7.0840e-01, 9.9511e-01],
         [4.1580e-05, 1.7272e-03, 1.7696e-03,  ..., 7.8442e-04,
          4.6427e-02, 1.6305e-03],
         [4.1580e-05, 1.7272e-03, 1.7696e-03,  ..., 9.9765e-01,
          1.9720e-01, 1.6305e-03],
         [4.1580e-05, 9.9482e-01, 9.9469e-01,  ..., 7.8442e-04,
          4.7973e-02, 1.6305e-03]],
        [[9.9697e-01, 5.5999e-03, 8.5213e-03,  ..., 1.3371e-03,
          4.5068e-01, 3.1126e-03],
         [1.0088e-03, 5.5999e-03, 8.5213e-03,  ..., 1.3371e-03,
          2.8327e-01, 3.1126e-03],
         [1.0088e-03, 5.5999e-03, 8.5213e-03,  ..., 9.9599e-01,
          1.5313e-01, 9.9066e-01],
         [1.0088e-03, 9.8320e-01, 9.7444e-01,  ..., 1.3371e-03,
          1.1293e-01, 3.1126e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:17:53,286 [Process: 0] Synchronize training processes
2024-08-18 15:17:53,287 [Process: 0] Evaluating...
2024-08-18 15:17:53,288 [Process: 0] EPOCH 283:
2024-08-18 15:17:53,290 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:54,418 [Process: 0] Synchronize training processes
2024-08-18 15:17:54,419 [Process: 0] Evaluating...
2024-08-18 15:17:54,420 [Process: 0] EPOCH 284:
2024-08-18 15:17:54,422 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4313e-02, 9.0302e-04, 9.5270e-04,  ..., 5.7491e-03,
          2.7542e-02, 7.0132e-03],
         [1.4313e-02, 9.0302e-04, 9.5270e-04,  ..., 5.7491e-03,
          1.8663e-02, 7.0132e-03],
         [9.5346e-01, 9.0302e-04, 9.5270e-04,  ..., 9.8275e-01,
          1.8663e-02, 9.7896e-01],
         [1.7919e-02, 9.9729e-01, 9.9714e-01,  ..., 5.7491e-03,
          9.3513e-01, 7.0132e-03]],
        [[8.0250e-03, 2.5282e-03, 3.3963e-03,  ..., 3.5853e-04,
          9.9498e-01, 1.3981e-02],
         [8.0250e-03, 2.5282e-03, 3.3963e-03,  ..., 3.5853e-04,
          1.6745e-03, 1.3981e-02],
         [9.7593e-01, 2.5282e-03, 3.3963e-03,  ..., 3.5853e-04,
          1.6745e-03, 9.5413e-01],
         [8.0250e-03, 9.9242e-01, 9.8981e-01,  ..., 9.9892e-01,
          1.6745e-03, 1.7904e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9849e-01, 2.6465e-03, 4.4905e-03,  ..., 1.8340e-04,
          1.5870e-03, 9.5015e-01],
         [5.0412e-04, 2.6465e-03, 4.4905e-03,  ..., 1.8340e-04,
          1.5870e-03, 1.3896e-02],
         [5.0412e-04, 2.6465e-03, 4.4905e-03,  ..., 9.9945e-01,
          9.9524e-01, 2.2059e-02],
         [5.0412e-04, 9.9206e-01, 9.8653e-01,  ..., 1.8340e-04,
          1.5870e-03, 1.3896e-02]],
        [[9.7459e-01, 5.2403e-03, 8.4056e-03,  ..., 3.1973e-04,
          2.1568e-01, 7.2532e-04],
         [7.6301e-03, 5.2403e-03, 8.4056e-03,  ..., 3.1973e-04,
          1.5346e-01, 7.2532e-04],
         [1.0153e-02, 5.2403e-03, 8.4056e-03,  ..., 9.9904e-01,
          1.9149e-01, 9.9782e-01],
         [7.6301e-03, 9.8428e-01, 9.7478e-01,  ..., 3.1973e-04,
          4.3937e-01, 7.2532e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1037e-02, 8.8785e-04, 4.5976e-04,  ..., 3.0026e-03,
          3.3704e-02, 5.3292e-03],
         [1.1037e-02, 8.8785e-04, 4.5976e-04,  ..., 3.0026e-03,
          2.7722e-02, 5.3292e-03],
         [9.6518e-01, 8.8785e-04, 4.5976e-04,  ..., 9.9099e-01,
          2.7722e-02, 9.8401e-01],
         [1.2751e-02, 9.9734e-01, 9.9862e-01,  ..., 3.0026e-03,
          9.1085e-01, 5.3292e-03]],
        [[3.8008e-03, 3.5173e-04, 1.0603e-03,  ..., 1.4313e-03,
          9.8847e-01, 5.0125e-03],
         [3.8008e-03, 3.5173e-04, 1.0603e-03,  ..., 1.4313e-03,
          3.8449e-03, 5.0125e-03],
         [9.8860e-01, 3.5173e-04, 1.0603e-03,  ..., 1.4313e-03,
          3.8449e-03, 9.8496e-01],
         [3.8008e-03, 9.9894e-01, 9.9682e-01,  ..., 9.9571e-01,
          3.8449e-03, 5.0125e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:55,552 [Process: 0] Synchronize training processes
2024-08-18 15:17:55,552 [Process: 0] Evaluating...
2024-08-18 15:17:55,554 [Process: 0] EPOCH 285:
2024-08-18 15:17:55,556 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:56,688 [Process: 0] Synchronize training processes
2024-08-18 15:17:56,689 [Process: 0] Evaluating...
2024-08-18 15:17:56,690 [Process: 0] EPOCH 286:
2024-08-18 15:17:56,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9936e-01, 1.0850e-02, 5.0485e-03,  ..., 1.5916e-03,
          8.3284e-04, 9.9699e-01],
         [2.1359e-04, 1.0850e-02, 5.0485e-03,  ..., 1.5916e-03,
          8.3284e-04, 1.0025e-03],
         [2.1359e-04, 1.0850e-02, 5.0485e-03,  ..., 9.9523e-01,
          9.9750e-01, 1.0025e-03],
         [2.1359e-04, 9.6745e-01, 9.8485e-01,  ..., 1.5916e-03,
          8.3284e-04, 1.0025e-03]],
        [[9.9456e-01, 7.5107e-03, 2.4652e-02,  ..., 2.9806e-04,
          1.7152e-01, 2.4811e-03],
         [1.8145e-03, 7.5107e-03, 2.4652e-02,  ..., 2.9806e-04,
          8.8687e-02, 2.4811e-03],
         [1.8145e-03, 7.5107e-03, 2.9562e-02,  ..., 9.9911e-01,
          1.9655e-01, 9.9256e-01],
         [1.8145e-03, 9.7747e-01, 9.2113e-01,  ..., 2.9806e-04,
          5.4325e-01, 2.4811e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.0608e-03, 6.8724e-04, 4.9034e-03,  ..., 3.7777e-03,
          1.8222e-01, 4.0283e-03],
         [5.0608e-03, 6.8724e-04, 4.9034e-03,  ..., 3.7777e-03,
          6.5319e-02, 4.0283e-03],
         [9.8482e-01, 6.8724e-04, 4.9034e-03,  ..., 9.8867e-01,
          6.5319e-02, 9.8792e-01],
         [5.0608e-03, 9.9794e-01, 9.8529e-01,  ..., 3.7777e-03,
          6.8715e-01, 4.0283e-03]],
        [[6.0009e-03, 1.2685e-03, 7.4428e-04,  ..., 9.1139e-04,
          9.8382e-01, 1.0572e-02],
         [6.0009e-03, 1.2685e-03, 7.4428e-04,  ..., 9.1139e-04,
          5.3917e-03, 1.0572e-02],
         [9.8200e-01, 1.2685e-03, 7.4428e-04,  ..., 9.1139e-04,
          5.3917e-03, 9.6828e-01],
         [6.0009e-03, 9.9619e-01, 9.9777e-01,  ..., 9.9727e-01,
          5.3917e-03, 1.0572e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9925e-01, 5.4328e-03, 4.0483e-03,  ..., 1.6965e-03,
          2.6177e-04, 9.8094e-01],
         [2.5019e-04, 5.4328e-03, 4.0483e-03,  ..., 1.6965e-03,
          2.6177e-04, 8.1766e-03],
         [2.5019e-04, 5.4328e-03, 4.0483e-03,  ..., 9.9491e-01,
          9.9921e-01, 5.4429e-03],
         [2.5019e-04, 9.8370e-01, 9.8786e-01,  ..., 1.6965e-03,
          2.6177e-04, 5.4429e-03]],
        [[9.9385e-01, 1.3188e-02, 1.1617e-02,  ..., 5.2167e-04,
          1.4266e-01, 1.2481e-03],
         [2.0484e-03, 1.3188e-02, 1.1617e-02,  ..., 5.2167e-04,
          1.3015e-01, 1.2481e-03],
         [2.0484e-03, 1.3188e-02, 1.1617e-02,  ..., 9.9843e-01,
          2.0930e-01, 9.9626e-01],
         [2.0484e-03, 9.6044e-01, 9.6515e-01,  ..., 5.2167e-04,
          5.1789e-01, 1.2481e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0777e-02, 1.8278e-03, 2.4528e-03,  ..., 2.2138e-03,
          3.7412e-01, 5.6886e-03],
         [1.0777e-02, 1.8278e-03, 2.4528e-03,  ..., 2.2138e-03,
          1.4713e-01, 5.6886e-03],
         [9.6700e-01, 1.8278e-03, 2.4528e-03,  ..., 9.9336e-01,
          9.0999e-02, 9.8293e-01],
         [1.1447e-02, 9.9452e-01, 9.9264e-01,  ..., 2.2138e-03,
          3.8776e-01, 5.6886e-03]],
        [[5.6813e-03, 2.6326e-04, 1.7093e-03,  ..., 2.0683e-04,
          9.9596e-01, 7.5614e-03],
         [5.6813e-03, 2.6326e-04, 1.7093e-03,  ..., 2.0683e-04,
          1.3459e-03, 7.5614e-03],
         [9.8296e-01, 2.6326e-04, 1.7093e-03,  ..., 2.0683e-04,
          1.3459e-03, 9.7732e-01],
         [5.6813e-03, 9.9921e-01, 9.9487e-01,  ..., 9.9938e-01,
          1.3459e-03, 7.5614e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:57,808 [Process: 0] Synchronize training processes
2024-08-18 15:17:57,808 [Process: 0] Evaluating...
2024-08-18 15:17:57,810 [Process: 0] EPOCH 287:
2024-08-18 15:17:57,812 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:17:58,934 [Process: 0] Synchronize training processes
2024-08-18 15:17:58,934 [Process: 0] Evaluating...
2024-08-18 15:17:58,936 [Process: 0] EPOCH 288:
2024-08-18 15:17:58,938 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9983e-01, 3.3746e-03, 2.1707e-03,  ..., 1.6106e-02,
          1.6034e-03, 9.9600e-01],
         [5.8330e-05, 3.3746e-03, 2.1707e-03,  ..., 1.6106e-02,
          1.6034e-03, 1.3335e-03],
         [5.8330e-05, 3.3746e-03, 2.1707e-03,  ..., 9.4904e-01,
          9.9519e-01, 1.3335e-03],
         [5.8330e-05, 9.8988e-01, 9.9349e-01,  ..., 1.8750e-02,
          1.6034e-03, 1.3335e-03]],
        [[9.9696e-01, 5.2678e-03, 5.2362e-03,  ..., 6.6457e-04,
          1.4233e-01, 9.7077e-04],
         [1.0119e-03, 5.2678e-03, 5.2362e-03,  ..., 6.6457e-04,
          1.2570e-01, 9.7077e-04],
         [1.0119e-03, 5.2678e-03, 5.2362e-03,  ..., 9.9801e-01,
          3.0090e-01, 9.9709e-01],
         [1.0119e-03, 9.8420e-01, 9.8429e-01,  ..., 6.6457e-04,
          4.3107e-01, 9.7077e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.5380e-03, 1.2879e-03, 2.7125e-03,  ..., 1.7677e-02,
          3.1450e-01, 6.6006e-03],
         [7.5380e-03, 1.2879e-03, 2.7125e-03,  ..., 1.4814e-02,
          1.1086e-01, 6.6006e-03],
         [9.7739e-01, 1.2879e-03, 2.7125e-03,  ..., 9.5269e-01,
          8.4510e-02, 9.8020e-01],
         [7.5380e-03, 9.9614e-01, 9.9186e-01,  ..., 1.4814e-02,
          4.9012e-01, 6.6006e-03]],
        [[1.2967e-02, 1.0452e-03, 4.2916e-04,  ..., 6.9788e-04,
          9.9421e-01, 2.9898e-03],
         [1.2967e-02, 1.0452e-03, 4.2916e-04,  ..., 6.9788e-04,
          1.8547e-03, 2.9898e-03],
         [9.6110e-01, 1.0452e-03, 4.2916e-04,  ..., 6.9788e-04,
          1.8547e-03, 9.9103e-01],
         [1.2967e-02, 9.9686e-01, 9.9871e-01,  ..., 9.9791e-01,
          2.0793e-03, 2.9898e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 5.3733e-03, 3.8144e-03,  ..., 1.7422e-03,
          9.5092e-04, 9.9852e-01],
         [6.1346e-05, 5.3733e-03, 3.8144e-03,  ..., 1.7422e-03,
          9.5092e-04, 4.9220e-04],
         [6.1346e-05, 5.3733e-03, 3.8144e-03,  ..., 9.9477e-01,
          9.9715e-01, 4.9220e-04],
         [6.1346e-05, 9.8388e-01, 9.8856e-01,  ..., 1.7422e-03,
          9.5092e-04, 4.9220e-04]],
        [[9.9959e-01, 2.0483e-02, 4.4821e-03,  ..., 7.5049e-04,
          1.1866e-01, 7.3166e-04],
         [1.3715e-04, 2.0483e-02, 4.4821e-03,  ..., 7.5049e-04,
          4.0658e-01, 7.3166e-04],
         [1.3715e-04, 2.7533e-02, 4.4821e-03,  ..., 9.9775e-01,
          2.6423e-01, 9.9781e-01],
         [1.3715e-04, 9.3150e-01, 9.8655e-01,  ..., 7.5049e-04,
          2.1053e-01, 7.3166e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:00,066 [Process: 0] Synchronize training processes
2024-08-18 15:18:00,067 [Process: 0] Evaluating...
2024-08-18 15:18:00,068 [Process: 0] EPOCH 289:
2024-08-18 15:18:00,070 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.8939e-03, 1.8641e-04, 1.8263e-03,  ..., 1.0275e-02,
          1.9380e-01, 1.5496e-02],
         [5.8939e-03, 1.8641e-04, 1.8263e-03,  ..., 1.0275e-02,
          1.4933e-01, 1.5496e-02],
         [9.8232e-01, 1.8641e-04, 1.8263e-03,  ..., 9.6918e-01,
          8.7430e-02, 9.5067e-01],
         [5.8939e-03, 9.9944e-01, 9.9452e-01,  ..., 1.0275e-02,
          5.6944e-01, 1.8341e-02]],
        [[2.7624e-03, 2.0556e-04, 4.5527e-04,  ..., 4.9332e-03,
          8.5443e-01, 6.4833e-03],
         [2.7624e-03, 2.0556e-04, 4.5527e-04,  ..., 4.9332e-03,
          3.3298e-02, 6.4833e-03],
         [9.9171e-01, 2.0556e-04, 4.5527e-04,  ..., 4.9332e-03,
          3.3298e-02, 9.8055e-01],
         [2.7624e-03, 9.9938e-01, 9.9863e-01,  ..., 9.8520e-01,
          7.8972e-02, 6.4833e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9940e-01, 5.9615e-03, 2.5449e-03,  ..., 1.0113e-03,
          2.4434e-04, 9.8818e-01],
         [1.9847e-04, 5.9615e-03, 2.5449e-03,  ..., 1.0113e-03,
          2.4434e-04, 5.7235e-03],
         [1.9847e-04, 5.9615e-03, 2.5449e-03,  ..., 9.9697e-01,
          9.9927e-01, 3.0462e-03],
         [1.9847e-04, 9.8212e-01, 9.9237e-01,  ..., 1.0113e-03,
          2.4434e-04, 3.0462e-03]],
        [[9.8346e-01, 7.4237e-03, 1.3385e-02,  ..., 6.2431e-04,
          1.9433e-01, 3.0055e-04],
         [5.5146e-03, 7.4237e-03, 1.3385e-02,  ..., 6.2431e-04,
          3.5891e-01, 3.0055e-04],
         [5.5146e-03, 7.4237e-03, 1.3980e-02,  ..., 9.9813e-01,
          1.7432e-01, 9.9910e-01],
         [5.5146e-03, 9.7773e-01, 9.5925e-01,  ..., 6.2431e-04,
          2.7244e-01, 3.0055e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.9019e-03, 3.2684e-04, 1.9897e-03,  ..., 6.0853e-03,
          7.3778e-02, 6.2469e-03],
         [8.9019e-03, 3.2684e-04, 1.9897e-03,  ..., 6.0853e-03,
          8.3343e-02, 5.8813e-03],
         [9.7329e-01, 3.2684e-04, 1.9897e-03,  ..., 9.8174e-01,
          5.5331e-02, 9.8199e-01],
         [8.9019e-03, 9.9902e-01, 9.9403e-01,  ..., 6.0853e-03,
          7.8755e-01, 5.8813e-03]],
        [[3.2768e-03, 1.5364e-03, 1.4376e-03,  ..., 8.4116e-04,
          2.5694e-02, 1.9289e-02],
         [3.2768e-03, 1.5364e-03, 1.4376e-03,  ..., 8.4116e-04,
          1.7132e-02, 1.7207e-02],
         [9.9017e-01, 1.5364e-03, 1.4376e-03,  ..., 8.4116e-04,
          9.4004e-01, 9.4256e-01],
         [3.2768e-03, 9.9539e-01, 9.9569e-01,  ..., 9.9748e-01,
          1.7132e-02, 2.0942e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9821e-01, 1.8435e-02, 1.1278e-02,  ..., 3.7081e-03,
          1.8248e-04, 9.9450e-01],
         [5.9764e-04, 1.8435e-02, 1.1278e-02,  ..., 3.7081e-03,
          1.8248e-04, 1.8320e-03],
         [5.9764e-04, 1.9389e-02, 1.3000e-02,  ..., 9.8888e-01,
          9.9945e-01, 1.8320e-03],
         [5.9764e-04, 9.4374e-01, 9.6444e-01,  ..., 3.7081e-03,
          1.8248e-04, 1.8320e-03]],
        [[9.9685e-01, 1.4638e-02, 3.6626e-03,  ..., 1.3591e-03,
          1.3382e-01, 1.3118e-03],
         [1.0495e-03, 1.4638e-02, 3.6626e-03,  ..., 1.3591e-03,
          1.0547e-01, 1.3118e-03],
         [1.0495e-03, 1.5908e-02, 3.7250e-03,  ..., 9.9592e-01,
          1.8331e-01, 9.9606e-01],
         [1.0495e-03, 9.5482e-01, 9.8895e-01,  ..., 1.3591e-03,
          5.7740e-01, 1.3118e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:01,197 [Process: 0] Synchronize training processes
2024-08-18 15:18:01,197 [Process: 0] Evaluating...
2024-08-18 15:18:01,199 [Process: 0] EPOCH 290:
2024-08-18 15:18:01,201 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:02,324 [Process: 0] Synchronize training processes
2024-08-18 15:18:02,324 [Process: 0] Evaluating...
2024-08-18 15:18:02,326 [Process: 0] EPOCH 291:
2024-08-18 15:18:02,328 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3185e-02, 3.8185e-04, 7.4222e-03,  ..., 6.3829e-03,
          2.6864e-02, 4.6428e-03],
         [1.3185e-02, 3.8185e-04, 7.4222e-03,  ..., 6.3474e-03,
          2.8932e-02, 4.6428e-03],
         [9.6009e-01, 3.8185e-04, 7.4222e-03,  ..., 9.8092e-01,
          2.6864e-02, 9.8607e-01],
         [1.3543e-02, 9.9885e-01, 9.7773e-01,  ..., 6.3474e-03,
          9.1734e-01, 4.6428e-03]],
        [[4.7989e-03, 1.3235e-03, 8.4538e-04,  ..., 9.9514e-04,
          6.2136e-03, 5.5015e-03],
         [4.3848e-03, 1.3235e-03, 8.4538e-04,  ..., 9.9514e-04,
          5.9013e-03, 5.5015e-03],
         [9.8643e-01, 1.3235e-03, 8.4538e-04,  ..., 9.9514e-04,
          9.8198e-01, 9.8350e-01],
         [4.3848e-03, 9.9603e-01, 9.9746e-01,  ..., 9.9701e-01,
          5.9013e-03, 5.5015e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9628e-01, 1.6021e-02, 3.8699e-03,  ..., 2.7819e-03,
          3.7046e-04, 9.9601e-01],
         [1.2387e-03, 1.6021e-02, 3.8699e-03,  ..., 2.7819e-03,
          3.7046e-04, 1.3307e-03],
         [1.2387e-03, 1.9692e-02, 3.8699e-03,  ..., 9.9165e-01,
          9.9889e-01, 1.3307e-03],
         [1.2387e-03, 9.4827e-01, 9.8839e-01,  ..., 2.7819e-03,
          3.7046e-04, 1.3307e-03]],
        [[9.9655e-01, 6.3952e-03, 1.1391e-02,  ..., 1.3168e-03,
          1.7777e-01, 4.3098e-04],
         [1.1464e-03, 6.3952e-03, 1.1391e-02,  ..., 1.3168e-03,
          1.2366e-01, 4.3098e-04],
         [1.1581e-03, 6.3952e-03, 1.1391e-02,  ..., 9.9605e-01,
          2.2709e-01, 9.9871e-01],
         [1.1464e-03, 9.8081e-01, 9.6583e-01,  ..., 1.3168e-03,
          4.7148e-01, 4.3098e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.8705e-03, 1.2269e-04, 5.8370e-03,  ..., 4.1048e-03,
          1.5795e-02, 4.7671e-03],
         [4.8705e-03, 1.2269e-04, 5.8370e-03,  ..., 4.1048e-03,
          1.5795e-02, 4.7671e-03],
         [9.8539e-01, 1.2269e-04, 5.8370e-03,  ..., 9.8769e-01,
          1.5795e-02, 9.8570e-01],
         [4.8705e-03, 9.9963e-01, 9.8249e-01,  ..., 4.1048e-03,
          9.5261e-01, 4.7671e-03]],
        [[8.7850e-03, 2.5952e-04, 4.1310e-04,  ..., 1.1743e-03,
          6.6177e-03, 6.6987e-03],
         [8.7147e-03, 2.5952e-04, 4.1310e-04,  ..., 1.1743e-03,
          6.6177e-03, 6.6987e-03],
         [9.7379e-01, 2.5952e-04, 4.1310e-04,  ..., 1.1743e-03,
          9.8015e-01, 9.7990e-01],
         [8.7147e-03, 9.9922e-01, 9.9876e-01,  ..., 9.9648e-01,
          6.6177e-03, 6.6987e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:18:03,456 [Process: 0] Synchronize training processes
2024-08-18 15:18:03,457 [Process: 0] Evaluating...
2024-08-18 15:18:03,460 [Process: 0] EPOCH 292:
2024-08-18 15:18:03,462 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:04,590 [Process: 0] Synchronize training processes
2024-08-18 15:18:04,590 [Process: 0] Evaluating...
2024-08-18 15:18:04,592 [Process: 0] EPOCH 293:
2024-08-18 15:18:04,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5724e-01, 6.3820e-03, 5.5865e-03,  ..., 6.2724e-03,
          1.1919e-04, 9.9476e-01],
         [1.4554e-02, 6.3820e-03, 5.5865e-03,  ..., 6.2724e-03,
          1.1919e-04, 1.7474e-03],
         [1.4101e-02, 8.4136e-03, 5.5865e-03,  ..., 9.8118e-01,
          9.9964e-01, 1.7474e-03],
         [1.4101e-02, 9.7882e-01, 9.8324e-01,  ..., 6.2724e-03,
          1.1919e-04, 1.7474e-03]],
        [[9.9671e-01, 8.5697e-03, 3.4245e-03,  ..., 9.6031e-04,
          2.1098e-01, 2.5414e-03],
         [1.0979e-03, 8.5697e-03, 3.4245e-03,  ..., 9.6031e-04,
          1.3898e-01, 2.4125e-03],
         [1.0979e-03, 1.0045e-02, 3.4245e-03,  ..., 9.9712e-01,
          2.0147e-01, 9.9263e-01],
         [1.0979e-03, 9.7282e-01, 9.8973e-01,  ..., 9.6031e-04,
          4.4857e-01, 2.4125e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.5931e-03, 1.0055e-03, 2.6007e-03,  ..., 1.3313e-02,
          1.2196e-02, 3.4713e-03],
         [7.9893e-03, 1.0055e-03, 2.6007e-03,  ..., 1.3101e-02,
          1.5360e-02, 3.4713e-03],
         [9.7543e-01, 1.0055e-03, 2.6007e-03,  ..., 9.6048e-01,
          1.2196e-02, 9.8959e-01],
         [7.9893e-03, 9.9698e-01, 9.9220e-01,  ..., 1.3101e-02,
          9.6025e-01, 3.4713e-03]],
        [[1.9030e-03, 4.7143e-04, 1.9814e-04,  ..., 8.0199e-05,
          2.0760e-03, 7.6880e-03],
         [1.9030e-03, 4.7143e-04, 1.9814e-04,  ..., 8.0199e-05,
          2.0760e-03, 7.6878e-03],
         [9.9429e-01, 4.7143e-04, 1.9814e-04,  ..., 8.0199e-05,
          9.9377e-01, 9.7694e-01],
         [1.9030e-03, 9.9859e-01, 9.9941e-01,  ..., 9.9976e-01,
          2.0760e-03, 7.6878e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9988e-01, 7.5410e-03, 9.8128e-03,  ..., 5.5798e-03,
          1.0140e-03, 9.9332e-01],
         [4.0651e-05, 7.5410e-03, 9.8128e-03,  ..., 5.5798e-03,
          1.0140e-03, 2.2266e-03],
         [4.0651e-05, 7.5410e-03, 1.0394e-02,  ..., 9.8326e-01,
          9.9696e-01, 2.2266e-03],
         [4.0651e-05, 9.7738e-01, 9.6998e-01,  ..., 5.5798e-03,
          1.0140e-03, 2.2266e-03]],
        [[9.8999e-01, 2.5821e-03, 7.0154e-03,  ..., 1.3457e-03,
          1.9467e-01, 4.1261e-03],
         [3.3382e-03, 2.5821e-03, 7.0154e-03,  ..., 1.3457e-03,
          2.2764e-01, 4.1261e-03],
         [3.3382e-03, 2.5821e-03, 7.4089e-03,  ..., 9.9596e-01,
          2.0205e-01, 9.8762e-01],
         [3.3382e-03, 9.9225e-01, 9.7856e-01,  ..., 1.3457e-03,
          3.7563e-01, 4.1261e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6777e-03, 1.6100e-04, 3.4493e-04,  ..., 4.3697e-03,
          2.0328e-03, 1.3477e-02],
         [3.6777e-03, 1.6100e-04, 3.4493e-04,  ..., 4.3697e-03,
          2.0328e-03, 1.2270e-02],
         [9.8897e-01, 1.6100e-04, 3.4493e-04,  ..., 9.8689e-01,
          2.0328e-03, 9.6198e-01],
         [3.6777e-03, 9.9952e-01, 9.9897e-01,  ..., 4.3697e-03,
          9.9390e-01, 1.2270e-02]],
        [[9.7981e-03, 7.3610e-04, 1.6519e-04,  ..., 4.9673e-04,
          1.7502e-02, 3.4660e-03],
         [9.7981e-03, 7.3610e-04, 1.6519e-04,  ..., 4.9673e-04,
          1.5010e-02, 3.4660e-03],
         [9.7061e-01, 7.3610e-04, 1.6519e-04,  ..., 4.9673e-04,
          9.5206e-01, 9.8960e-01],
         [9.7981e-03, 9.9779e-01, 9.9950e-01,  ..., 9.9851e-01,
          1.5430e-02, 3.4660e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:05,719 [Process: 0] Synchronize training processes
2024-08-18 15:18:05,720 [Process: 0] Evaluating...
2024-08-18 15:18:05,722 [Process: 0] EPOCH 294:
2024-08-18 15:18:05,723 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:06,846 [Process: 0] Synchronize training processes
2024-08-18 15:18:06,847 [Process: 0] Evaluating...
2024-08-18 15:18:06,849 [Process: 0] EPOCH 295:
2024-08-18 15:18:06,851 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9516e-01, 1.0381e-02, 1.5825e-02,  ..., 9.1594e-04,
          6.9282e-05, 9.8871e-01],
         [1.6132e-03, 1.0381e-02, 1.5825e-02,  ..., 9.1594e-04,
          6.9282e-05, 3.7648e-03],
         [1.6132e-03, 1.0381e-02, 1.7954e-02,  ..., 9.9725e-01,
          9.9979e-01, 3.7648e-03],
         [1.6132e-03, 9.6886e-01, 9.5040e-01,  ..., 9.1594e-04,
          6.9282e-05, 3.7648e-03]],
        [[9.6723e-01, 7.2880e-03, 2.6899e-03,  ..., 5.9493e-04,
          2.5717e-01, 1.3086e-03],
         [9.4033e-03, 7.2880e-03, 2.6899e-03,  ..., 5.9493e-04,
          3.2283e-01, 1.3086e-03],
         [1.3961e-02, 7.6685e-03, 2.6899e-03,  ..., 9.9822e-01,
          1.6945e-01, 9.9607e-01],
         [9.4033e-03, 9.7776e-01, 9.9193e-01,  ..., 5.9493e-04,
          2.5054e-01, 1.3086e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7413e-03, 2.2278e-04, 5.6952e-04,  ..., 4.0193e-03,
          1.2223e-03, 5.9432e-03],
         [1.7413e-03, 2.2278e-04, 5.6952e-04,  ..., 4.0193e-03,
          1.2223e-03, 5.9432e-03],
         [9.9478e-01, 2.2278e-04, 5.6952e-04,  ..., 9.8794e-01,
          1.2223e-03, 9.8217e-01],
         [1.7413e-03, 9.9933e-01, 9.9829e-01,  ..., 4.0193e-03,
          9.9633e-01, 5.9432e-03]],
        [[8.9227e-03, 2.9884e-04, 8.3024e-03,  ..., 2.1139e-03,
          4.9928e-03, 1.3822e-02],
         [8.9227e-03, 2.9884e-04, 8.3024e-03,  ..., 2.1139e-03,
          4.9928e-03, 1.3822e-02],
         [9.7323e-01, 2.9884e-04, 8.3024e-03,  ..., 2.1139e-03,
          9.8502e-01, 9.5748e-01],
         [8.9227e-03, 9.9910e-01, 9.7509e-01,  ..., 9.9366e-01,
          4.9928e-03, 1.4872e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9895e-01, 1.5506e-01, 1.6194e-02,  ..., 2.5338e-02,
          1.6439e-03, 9.9160e-01],
         [3.4992e-04, 7.5924e-02, 1.6194e-02,  ..., 1.8544e-02,
          1.6439e-03, 2.8001e-03],
         [3.4992e-04, 1.2077e-01, 1.8105e-02,  ..., 9.3726e-01,
          9.9507e-01, 2.8001e-03],
         [3.4992e-04, 6.4824e-01, 9.4951e-01,  ..., 1.8860e-02,
          1.6439e-03, 2.8001e-03]],
        [[9.7740e-01, 1.3431e-03, 4.5209e-03,  ..., 5.3392e-04,
          2.0825e-01, 1.9719e-03],
         [5.8467e-03, 1.3431e-03, 4.5209e-03,  ..., 5.3392e-04,
          1.3219e-01, 1.9719e-03],
         [1.0905e-02, 1.3431e-03, 4.5209e-03,  ..., 9.9840e-01,
          2.4315e-01, 9.9408e-01],
         [5.8467e-03, 9.9597e-01, 9.8644e-01,  ..., 5.3392e-04,
          4.1641e-01, 1.9719e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6018e-02, 1.8901e-03, 6.1284e-03,  ..., 4.3065e-03,
          5.8586e-04, 1.3869e-02],
         [1.5756e-02, 1.9282e-03, 6.1284e-03,  ..., 4.3065e-03,
          5.8586e-04, 1.0445e-02],
         [9.5202e-01, 1.8901e-03, 6.1284e-03,  ..., 9.8708e-01,
          5.8586e-04, 9.6524e-01],
         [1.6203e-02, 9.9429e-01, 9.8161e-01,  ..., 4.3065e-03,
          9.9824e-01, 1.0445e-02]],
        [[1.2081e-03, 6.3444e-04, 1.5612e-03,  ..., 3.2970e-03,
          6.3726e-03, 3.7967e-03],
         [1.2081e-03, 6.3444e-04, 1.5612e-03,  ..., 3.2970e-03,
          6.3726e-03, 3.7967e-03],
         [9.9638e-01, 6.3444e-04, 1.5612e-03,  ..., 3.2970e-03,
          9.8088e-01, 9.8861e-01],
         [1.2081e-03, 9.9810e-01, 9.9532e-01,  ..., 9.9011e-01,
          6.3726e-03, 3.7967e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:07,981 [Process: 0] Synchronize training processes
2024-08-18 15:18:07,981 [Process: 0] Evaluating...
2024-08-18 15:18:07,983 [Process: 0] EPOCH 296:
2024-08-18 15:18:07,985 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:09,105 [Process: 0] Synchronize training processes
2024-08-18 15:18:09,105 [Process: 0] Evaluating...
2024-08-18 15:18:09,106 [Process: 0] EPOCH 297:
2024-08-18 15:18:09,108 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6846e-01, 2.7056e-02, 9.0230e-03,  ..., 1.5965e-02,
          1.1174e-03, 9.9008e-01],
         [1.0580e-02, 2.3925e-02, 9.0230e-03,  ..., 1.5965e-02,
          1.1174e-03, 3.3068e-03],
         [1.0480e-02, 4.3888e-02, 1.1448e-02,  ..., 9.5068e-01,
          9.9665e-01, 3.3068e-03],
         [1.0480e-02, 9.0513e-01, 9.7051e-01,  ..., 1.7387e-02,
          1.1174e-03, 3.3068e-03]],
        [[9.7901e-01, 3.5129e-03, 3.6618e-03,  ..., 1.1773e-03,
          2.2799e-01, 4.6098e-04],
         [6.0739e-03, 3.5129e-03, 3.6618e-03,  ..., 1.1773e-03,
          1.3560e-01, 4.6098e-04],
         [8.8379e-03, 3.5129e-03, 3.6618e-03,  ..., 9.9647e-01,
          2.8725e-01, 9.9862e-01],
         [6.0739e-03, 9.8946e-01, 9.8901e-01,  ..., 1.1773e-03,
          3.4916e-01, 4.6098e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0674e-02, 1.4733e-03, 6.0161e-04,  ..., 5.9347e-03,
          1.3429e-04, 4.2571e-03],
         [2.0272e-02, 1.4733e-03, 6.0161e-04,  ..., 5.9347e-03,
          1.3429e-04, 4.2571e-03],
         [9.3181e-01, 1.4733e-03, 6.0161e-04,  ..., 9.8220e-01,
          1.3429e-04, 9.8723e-01],
         [2.7243e-02, 9.9558e-01, 9.9820e-01,  ..., 5.9347e-03,
          9.9960e-01, 4.2571e-03]],
        [[3.2282e-03, 5.3526e-04, 1.3882e-03,  ..., 8.3144e-05,
          5.7660e-03, 3.1757e-03],
         [3.2282e-03, 5.3526e-04, 1.3882e-03,  ..., 8.3144e-05,
          5.7660e-03, 3.1757e-03],
         [9.9032e-01, 5.3526e-04, 1.3882e-03,  ..., 8.3144e-05,
          9.8270e-01, 9.9047e-01],
         [3.2282e-03, 9.9839e-01, 9.9584e-01,  ..., 9.9975e-01,
          5.7660e-03, 3.1757e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9563e-01, 1.0804e-02, 1.7657e-02,  ..., 4.5702e-03,
          6.1132e-04, 9.9971e-01],
         [1.4575e-03, 1.0804e-02, 1.4745e-02,  ..., 4.5702e-03,
          6.1132e-04, 9.6267e-05],
         [1.4575e-03, 1.2162e-02, 1.9891e-02,  ..., 9.8629e-01,
          9.9817e-01, 9.6267e-05],
         [1.4575e-03, 9.6623e-01, 9.4771e-01,  ..., 4.5702e-03,
          6.1132e-04, 9.6267e-05]],
        [[9.3614e-01, 2.5641e-02, 3.9225e-03,  ..., 6.6291e-04,
          2.3056e-01, 2.1387e-03],
         [1.6124e-02, 2.1701e-02, 3.9225e-03,  ..., 6.6291e-04,
          1.5468e-01, 2.1387e-03],
         [3.1608e-02, 3.3088e-02, 3.9225e-03,  ..., 9.9801e-01,
          2.4278e-01, 9.9358e-01],
         [1.6124e-02, 9.1957e-01, 9.8823e-01,  ..., 6.6291e-04,
          3.7197e-01, 2.1387e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:10,223 [Process: 0] Synchronize training processes
2024-08-18 15:18:10,224 [Process: 0] Evaluating...
2024-08-18 15:18:10,225 [Process: 0] EPOCH 298:
2024-08-18 15:18:10,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1498e-03, 9.9701e-01, 1.2714e-03,  ..., 6.0796e-03,
          9.0156e-04, 5.0039e-03],
         [4.1498e-03, 9.9746e-04, 1.2714e-03,  ..., 6.0796e-03,
          9.0156e-04, 5.0039e-03],
         [9.8755e-01, 9.9746e-04, 1.2714e-03,  ..., 9.8176e-01,
          9.0156e-04, 9.8499e-01],
         [4.1498e-03, 9.9746e-04, 9.9619e-01,  ..., 6.0796e-03,
          9.9730e-01, 5.0039e-03]],
        [[5.6634e-03, 9.9492e-04, 1.7038e-03,  ..., 3.5085e-03,
          6.6272e-03, 2.8458e-03],
         [5.6634e-03, 9.9492e-04, 1.7038e-03,  ..., 3.5085e-03,
          6.6272e-03, 2.8458e-03],
         [9.8301e-01, 9.9492e-04, 1.7038e-03,  ..., 3.5085e-03,
          9.8012e-01, 9.9146e-01],
         [5.6634e-03, 9.9702e-01, 9.9489e-01,  ..., 9.8947e-01,
          6.6272e-03, 2.8458e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9753e-01, 8.3192e-03, 6.1545e-03,  ..., 1.8562e-01,
          3.0830e-04, 9.8402e-01],
         [8.2226e-04, 8.3192e-03, 6.1545e-03,  ..., 1.0567e-01,
          3.0830e-04, 5.0842e-03],
         [8.2226e-04, 8.7315e-03, 6.1545e-03,  ..., 1.9088e-01,
          9.9908e-01, 5.8095e-03],
         [8.2226e-04, 9.7463e-01, 9.8154e-01,  ..., 5.1783e-01,
          3.0830e-04, 5.0842e-03]],
        [[9.4948e-01, 2.2932e-03, 9.0511e-04,  ..., 5.7822e-04,
          2.9521e-02, 2.4929e-04],
         [1.3198e-02, 2.2932e-03, 9.0511e-04,  ..., 5.7822e-04,
          2.6775e-02, 2.4929e-04],
         [2.4127e-02, 2.2932e-03, 9.0511e-04,  ..., 9.9827e-01,
          9.1693e-01, 9.9925e-01],
         [1.3198e-02, 9.9312e-01, 9.9728e-01,  ..., 5.7822e-04,
          2.6775e-02, 2.4929e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7656e-03, 9.9935e-01, 7.4789e-04,  ..., 3.8853e-02,
          8.9638e-04, 4.2532e-03],
         [9.7656e-03, 2.1777e-04, 7.4789e-04,  ..., 3.2919e-02,
          8.9638e-04, 4.2532e-03],
         [9.7070e-01, 2.1777e-04, 7.4789e-04,  ..., 8.8109e-01,
          8.9638e-04, 9.8724e-01],
         [9.7656e-03, 2.1777e-04, 9.9776e-01,  ..., 4.7142e-02,
          9.9731e-01, 4.2532e-03]],
        [[3.2619e-03, 6.3816e-04, 4.6271e-04,  ..., 1.1764e-03,
          6.1954e-03, 8.5916e-03],
         [3.2619e-03, 6.3816e-04, 4.6271e-04,  ..., 1.1764e-03,
          6.1954e-03, 8.5916e-03],
         [9.9021e-01, 6.3816e-04, 4.6271e-04,  ..., 1.1764e-03,
          9.8141e-01, 9.7423e-01],
         [3.2619e-03, 9.9809e-01, 9.9861e-01,  ..., 9.9647e-01,
          6.1954e-03, 8.5916e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9667e-01, 1.9667e-02, 1.1309e-02,  ..., 1.5195e-02,
          3.7516e-05, 9.8683e-01],
         [1.1109e-03, 1.9253e-02, 1.1309e-02,  ..., 1.5195e-02,
          3.7516e-05, 4.3916e-03],
         [1.1109e-03, 2.4545e-02, 1.1309e-02,  ..., 9.5442e-01,
          9.9989e-01, 4.3916e-03],
         [1.1109e-03, 9.3654e-01, 9.6607e-01,  ..., 1.5195e-02,
          3.7516e-05, 4.3916e-03]],
        [[9.4979e-01, 5.8736e-03, 6.4995e-03,  ..., 6.3845e-04,
          6.6974e-02, 1.6183e-04],
         [8.6740e-03, 5.8736e-03, 6.4995e-03,  ..., 6.3845e-04,
          4.1787e-02, 1.6183e-04],
         [3.2865e-02, 5.8736e-03, 6.4995e-03,  ..., 9.9808e-01,
          8.4013e-01, 9.9951e-01],
         [8.6740e-03, 9.8238e-01, 9.8050e-01,  ..., 6.3845e-04,
          5.1113e-02, 1.6183e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:11,340 [Process: 0] Synchronize training processes
2024-08-18 15:18:11,340 [Process: 0] Evaluating...
2024-08-18 15:18:11,342 [Process: 0] EPOCH 299:
2024-08-18 15:18:11,343 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:12,470 [Process: 0] Synchronize training processes
2024-08-18 15:18:12,471 [Process: 0] Evaluating...
2024-08-18 15:18:12,473 [Process: 0] EPOCH 300:
2024-08-18 15:18:12,474 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9516e-03, 9.9809e-01, 5.2807e-04,  ..., 2.2044e-01,
          1.9775e-03, 8.6233e-04],
         [1.9516e-03, 6.3632e-04, 5.2807e-04,  ..., 7.4771e-02,
          1.9775e-03, 8.6233e-04],
         [9.9415e-01, 6.3632e-04, 5.2807e-04,  ..., 7.4771e-02,
          1.9775e-03, 9.9741e-01],
         [1.9516e-03, 6.3632e-04, 9.9842e-01,  ..., 6.3001e-01,
          9.9407e-01, 8.6233e-04]],
        [[2.6487e-03, 4.7271e-04, 6.9175e-04,  ..., 2.1523e-03,
          6.6994e-03, 6.8716e-04],
         [2.6487e-03, 4.7271e-04, 6.9175e-04,  ..., 2.1523e-03,
          6.6994e-03, 6.8716e-04],
         [9.9205e-01, 4.7271e-04, 6.9175e-04,  ..., 2.1523e-03,
          9.7990e-01, 9.9794e-01],
         [2.6487e-03, 9.9858e-01, 9.9792e-01,  ..., 9.9354e-01,
          6.6994e-03, 6.8716e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8887e-01, 5.4813e-03, 2.8040e-02,  ..., 1.9398e-03,
          2.6837e-05, 9.9852e-01],
         [3.5826e-03, 5.4813e-03, 2.6407e-02,  ..., 1.9398e-03,
          2.6837e-05, 4.9305e-04],
         [3.5826e-03, 5.4813e-03, 3.4739e-02,  ..., 9.9418e-01,
          9.9992e-01, 4.9305e-04],
         [3.9691e-03, 9.8356e-01, 9.1081e-01,  ..., 1.9398e-03,
          2.6837e-05, 4.9305e-04]],
        [[7.0779e-01, 7.6685e-03, 3.9276e-03,  ..., 6.4539e-04,
          1.9793e-01, 3.0857e-03],
         [1.7597e-02, 7.6685e-03, 3.9276e-03,  ..., 6.4539e-04,
          1.2964e-01, 3.0857e-03],
         [2.5702e-01, 8.9199e-03, 3.9276e-03,  ..., 9.9806e-01,
          2.0074e-01, 9.9074e-01],
         [1.7597e-02, 9.7574e-01, 9.8822e-01,  ..., 6.4539e-04,
          4.7170e-01, 3.0857e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4517e-02, 9.9852e-01, 2.0600e-03,  ..., 2.1659e-03,
          4.2060e-02, 9.2542e-03],
         [2.3579e-02, 5.9919e-04, 2.0600e-03,  ..., 2.1659e-03,
          3.3515e-02, 9.2542e-03],
         [9.2131e-01, 4.4153e-04, 2.0600e-03,  ..., 9.9350e-01,
          8.6845e-01, 9.7224e-01],
         [3.0592e-02, 4.4153e-04, 9.9382e-01,  ..., 2.1659e-03,
          5.5976e-02, 9.2542e-03]],
        [[6.8811e-03, 9.9570e-01, 1.3964e-03,  ..., 2.2634e-04,
          1.7258e-01, 2.5266e-03],
         [6.8811e-03, 1.4348e-03, 1.3964e-03,  ..., 2.2634e-04,
          8.1813e-02, 2.5266e-03],
         [9.7936e-01, 1.4348e-03, 1.3964e-03,  ..., 2.2634e-04,
          8.0886e-02, 9.9242e-01],
         [6.8811e-03, 1.4348e-03, 9.9581e-01,  ..., 9.9932e-01,
          6.6472e-01, 2.5266e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:13,602 [Process: 0] Synchronize training processes
2024-08-18 15:18:13,602 [Process: 0] Evaluating...
2024-08-18 15:18:13,604 [Process: 0] EPOCH 301:
2024-08-18 15:18:13,605 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:14,731 [Process: 0] Synchronize training processes
2024-08-18 15:18:14,731 [Process: 0] Evaluating...
2024-08-18 15:18:14,736 [Process: 0] EPOCH 302:
2024-08-18 15:18:14,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6891e-01, 6.1194e-03, 9.1794e-03,  ..., 5.2965e-03,
          2.4935e-04, 9.9915e-01],
         [1.0142e-02, 6.1194e-03, 8.8448e-03,  ..., 5.2965e-03,
          2.4935e-04, 2.8409e-04],
         [1.0803e-02, 6.1194e-03, 9.5507e-03,  ..., 9.8411e-01,
          9.9925e-01, 2.8409e-04],
         [1.0142e-02, 9.8164e-01, 9.7243e-01,  ..., 5.2965e-03,
          2.4935e-04, 2.8409e-04]],
        [[8.2861e-01, 7.5817e-03, 3.5111e-03,  ..., 1.1162e-03,
          2.0255e-01, 2.1712e-03],
         [1.3760e-02, 7.5817e-03, 3.5111e-03,  ..., 1.1162e-03,
          1.9177e-01, 2.1712e-03],
         [1.4388e-01, 7.5817e-03, 3.5111e-03,  ..., 9.9665e-01,
          2.4560e-01, 9.9349e-01],
         [1.3760e-02, 9.7725e-01, 9.8947e-01,  ..., 1.1162e-03,
          3.6008e-01, 2.1712e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5803e-02, 9.8858e-01, 1.5130e-03,  ..., 1.3961e-02,
          4.1777e-02, 7.6243e-03],
         [1.2427e-02, 3.5900e-03, 1.5130e-03,  ..., 1.1883e-02,
          2.4977e-02, 5.9138e-03],
         [9.5934e-01, 3.5900e-03, 1.5130e-03,  ..., 9.6227e-01,
          9.0613e-01, 9.8055e-01],
         [1.2427e-02, 4.2394e-03, 9.9546e-01,  ..., 1.1883e-02,
          2.7114e-02, 5.9138e-03]],
        [[2.1693e-02, 9.9917e-01, 3.6794e-03,  ..., 7.3457e-03,
          8.0128e-03, 4.7056e-03],
         [1.5871e-02, 3.2912e-04, 3.6794e-03,  ..., 7.3457e-03,
          7.6053e-03, 4.7056e-03],
         [9.4615e-01, 2.4899e-04, 3.6794e-03,  ..., 7.3457e-03,
          7.6053e-03, 9.8588e-01],
         [1.6290e-02, 2.4899e-04, 9.8896e-01,  ..., 9.7796e-01,
          9.7678e-01, 4.7056e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9461e-01, 9.1644e-03, 1.1010e-02,  ..., 1.3753e-01,
          1.6979e-04, 9.9108e-01],
         [2.1221e-03, 9.1644e-03, 1.1010e-02,  ..., 6.6811e-02,
          1.6979e-04, 3.0329e-03],
         [1.6350e-03, 9.1644e-03, 1.1624e-02,  ..., 6.8118e-01,
          9.9949e-01, 2.9425e-03],
         [1.6350e-03, 9.7251e-01, 9.6636e-01,  ..., 1.1448e-01,
          1.6979e-04, 2.9425e-03]],
        [[9.9220e-01, 5.3861e-03, 8.8210e-03,  ..., 4.3497e-04,
          1.9042e-01, 3.2997e-04],
         [2.1274e-03, 5.3861e-03, 8.8210e-03,  ..., 4.3497e-04,
          2.8268e-01, 3.2997e-04],
         [3.5470e-03, 5.3861e-03, 1.1089e-02,  ..., 9.9870e-01,
          2.0137e-01, 9.9901e-01],
         [2.1274e-03, 9.8384e-01, 9.7127e-01,  ..., 4.3497e-04,
          3.2552e-01, 3.2997e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3894e-02, 3.1458e-04, 7.2291e-04,  ..., 1.1175e-02,
          2.1463e-01, 1.7762e-02],
         [2.0798e-02, 3.1458e-04, 7.2291e-04,  ..., 9.3018e-03,
          1.1761e-01, 1.4825e-02],
         [9.2266e-01, 3.1458e-04, 7.2291e-04,  ..., 9.7022e-01,
          5.9678e-01, 9.5033e-01],
         [2.2645e-02, 9.9906e-01, 9.9783e-01,  ..., 9.3018e-03,
          7.0980e-02, 1.7085e-02]],
        [[2.4385e-03, 9.9922e-01, 7.5948e-04,  ..., 3.0085e-04,
          9.1959e-04, 7.1820e-03],
         [2.4385e-03, 4.3048e-04, 7.5948e-04,  ..., 3.0085e-04,
          9.1959e-04, 5.0813e-03],
         [9.9268e-01, 1.7256e-04, 7.5948e-04,  ..., 3.0085e-04,
          9.1959e-04, 9.8266e-01],
         [2.4385e-03, 1.7256e-04, 9.9772e-01,  ..., 9.9910e-01,
          9.9724e-01, 5.0813e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:15,867 [Process: 0] Synchronize training processes
2024-08-18 15:18:15,867 [Process: 0] Evaluating...
2024-08-18 15:18:15,869 [Process: 0] EPOCH 303:
2024-08-18 15:18:15,870 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:16,998 [Process: 0] Synchronize training processes
2024-08-18 15:18:16,998 [Process: 0] Evaluating...
2024-08-18 15:18:17,000 [Process: 0] EPOCH 304:
2024-08-18 15:18:17,001 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9812e-01, 3.7007e-03, 1.1585e-02,  ..., 3.7536e-02,
          2.7466e-04, 9.9671e-01],
         [8.7431e-04, 3.7007e-03, 1.1585e-02,  ..., 1.4161e-02,
          2.7466e-04, 1.4267e-03],
         [5.0171e-04, 3.7007e-03, 1.3242e-02,  ..., 9.3414e-01,
          9.9918e-01, 9.3237e-04],
         [5.0171e-04, 9.8890e-01, 9.6359e-01,  ..., 1.4161e-02,
          2.7466e-04, 9.3237e-04]],
        [[9.9540e-01, 3.5429e-03, 6.7530e-03,  ..., 8.7245e-04,
          2.2276e-01, 7.5547e-04],
         [1.5333e-03, 3.5429e-03, 6.7530e-03,  ..., 8.7245e-04,
          1.4460e-01, 7.5547e-04],
         [1.5333e-03, 3.5429e-03, 7.9847e-03,  ..., 9.9738e-01,
          3.0295e-01, 9.9773e-01],
         [1.5333e-03, 9.8937e-01, 9.7851e-01,  ..., 8.7245e-04,
          3.2969e-01, 7.5547e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7385e-03, 9.9843e-01, 8.8224e-04,  ..., 4.4548e-03,
          2.3462e-01, 8.7852e-03],
         [6.0226e-03, 6.5376e-04, 8.8224e-04,  ..., 3.6805e-03,
          1.2397e-01, 8.7852e-03],
         [9.8122e-01, 4.6034e-04, 8.8224e-04,  ..., 9.8818e-01,
          4.0044e-01, 9.7364e-01],
         [6.0226e-03, 4.6034e-04, 9.9735e-01,  ..., 3.6805e-03,
          2.4097e-01, 8.7852e-03]],
        [[9.9685e-03, 8.1045e-01, 2.0860e-03,  ..., 5.9359e-03,
          2.8873e-04, 5.8894e-03],
         [8.2793e-03, 1.3245e-01, 2.0860e-03,  ..., 5.9359e-03,
          2.8873e-04, 5.2415e-03],
         [9.7347e-01, 2.8552e-02, 2.0860e-03,  ..., 5.9359e-03,
          2.8873e-04, 9.8363e-01],
         [8.2793e-03, 2.8552e-02, 9.9374e-01,  ..., 9.8219e-01,
          9.9913e-01, 5.2415e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7445e-01, 8.3099e-03, 8.3861e-03,  ..., 3.8666e-04,
          3.1895e-04, 9.8844e-01],
         [1.2811e-02, 8.3099e-03, 8.3861e-03,  ..., 3.8666e-04,
          3.1895e-04, 6.1043e-03],
         [6.3692e-03, 9.5952e-03, 1.0487e-02,  ..., 9.9884e-01,
          9.9904e-01, 2.7257e-03],
         [6.3692e-03, 9.7379e-01, 9.7274e-01,  ..., 3.8666e-04,
          3.1895e-04, 2.7257e-03]],
        [[9.9861e-01, 1.9369e-02, 2.2979e-03,  ..., 1.9516e-03,
          1.7770e-01, 1.2590e-04],
         [8.2429e-04, 1.9369e-02, 2.2979e-03,  ..., 1.9516e-03,
          9.9928e-02, 1.2590e-04],
         [2.8345e-04, 3.0567e-02, 2.2979e-03,  ..., 9.9415e-01,
          2.3926e-01, 9.9962e-01],
         [2.8345e-04, 9.3069e-01, 9.9311e-01,  ..., 1.9516e-03,
          4.8311e-01, 1.2590e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:18:18,133 [Process: 0] Synchronize training processes
2024-08-18 15:18:18,134 [Process: 0] Evaluating...
2024-08-18 15:18:18,135 [Process: 0] EPOCH 305:
2024-08-18 15:18:18,137 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.4027e-03, 9.9543e-01, 1.2779e-03,  ..., 1.4784e-03,
          2.6138e-01, 7.9725e-03],
         [7.3582e-03, 1.8197e-03, 1.2779e-03,  ..., 1.4784e-03,
          6.2365e-01, 7.2366e-03],
         [9.7688e-01, 1.3753e-03, 1.2779e-03,  ..., 9.9556e-01,
          5.7483e-02, 9.7755e-01],
         [7.3582e-03, 1.3753e-03, 9.9617e-01,  ..., 1.4784e-03,
          5.7483e-02, 7.2366e-03]],
        [[7.7432e-02, 1.3792e-03, 7.3892e-04,  ..., 2.8383e-04,
          4.1014e-04, 8.4134e-03],
         [3.8917e-02, 1.3792e-03, 7.3892e-04,  ..., 2.8383e-04,
          4.1014e-04, 7.6639e-03],
         [8.2012e-01, 1.3792e-03, 7.3892e-04,  ..., 2.8383e-04,
          4.1014e-04, 9.7626e-01],
         [6.3526e-02, 9.9586e-01, 9.9778e-01,  ..., 9.9915e-01,
          9.9877e-01, 7.6639e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9310e-01, 5.4272e-03, 7.0156e-03,  ..., 5.1480e-04,
          3.0940e-04, 9.9558e-01],
         [2.7593e-03, 5.4272e-03, 7.0156e-03,  ..., 5.1480e-04,
          3.0940e-04, 2.6915e-03],
         [2.0697e-03, 5.9970e-03, 7.0156e-03,  ..., 9.9846e-01,
          9.9907e-01, 8.6651e-04],
         [2.0697e-03, 9.8315e-01, 9.7895e-01,  ..., 5.1480e-04,
          3.0940e-04, 8.6651e-04]],
        [[9.9893e-01, 3.3011e-03, 5.8492e-03,  ..., 2.1767e-03,
          1.6288e-01, 5.2206e-04],
         [5.6552e-04, 3.3011e-03, 5.8492e-03,  ..., 2.1767e-03,
          8.7271e-02, 5.2206e-04],
         [2.5300e-04, 3.3011e-03, 6.0001e-03,  ..., 9.9347e-01,
          2.1991e-01, 9.9843e-01],
         [2.5300e-04, 9.9010e-01, 9.8230e-01,  ..., 2.1767e-03,
          5.2994e-01, 5.2206e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0324e-02, 9.9842e-01, 5.6033e-03,  ..., 1.9764e-03,
          6.9075e-01, 7.6932e-03],
         [1.0324e-02, 9.0613e-04, 5.6033e-03,  ..., 1.9764e-03,
          1.8245e-01, 6.7406e-03],
         [9.6855e-01, 3.3470e-04, 5.6033e-03,  ..., 9.9407e-01,
          5.7964e-02, 9.7883e-01],
         [1.0799e-02, 3.3470e-04, 9.8319e-01,  ..., 1.9764e-03,
          6.8832e-02, 6.7406e-03]],
        [[1.9772e-02, 2.6802e-03, 1.6299e-03,  ..., 9.5530e-04,
          8.2488e-04, 1.2596e-02],
         [1.9772e-02, 2.6802e-03, 1.6299e-03,  ..., 9.5530e-04,
          8.2488e-04, 1.2596e-02],
         [9.3330e-01, 2.6802e-03, 1.6299e-03,  ..., 9.5530e-04,
          8.2488e-04, 9.5920e-01],
         [2.7156e-02, 9.9196e-01, 9.9511e-01,  ..., 9.9713e-01,
          9.9753e-01, 1.5607e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9126e-01, 5.1521e-03, 3.1674e-03,  ..., 8.8697e-05,
          3.8382e-04, 9.9191e-01],
         [4.0463e-03, 5.1521e-03, 3.1674e-03,  ..., 8.8697e-05,
          3.8382e-04, 5.0246e-03],
         [2.3468e-03, 5.6238e-03, 3.1674e-03,  ..., 9.9973e-01,
          9.9885e-01, 1.5342e-03],
         [2.3468e-03, 9.8407e-01, 9.9050e-01,  ..., 8.8697e-05,
          3.8382e-04, 1.5342e-03]],
        [[9.9333e-01, 3.7409e-03, 1.5216e-03,  ..., 1.5227e-04,
          1.5738e-01, 4.2549e-04],
         [3.6742e-03, 3.7409e-03, 1.5216e-03,  ..., 1.5227e-04,
          1.2773e-01, 4.2549e-04],
         [1.4962e-03, 3.9750e-03, 1.5216e-03,  ..., 9.9954e-01,
          1.7286e-01, 9.9872e-01],
         [1.4962e-03, 9.8854e-01, 9.9544e-01,  ..., 1.5227e-04,
          5.4203e-01, 4.2549e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:19,262 [Process: 0] Synchronize training processes
2024-08-18 15:18:19,263 [Process: 0] Evaluating...
2024-08-18 15:18:19,264 [Process: 0] EPOCH 306:
2024-08-18 15:18:19,266 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:20,396 [Process: 0] Synchronize training processes
2024-08-18 15:18:20,397 [Process: 0] Evaluating...
2024-08-18 15:18:20,398 [Process: 0] EPOCH 307:
2024-08-18 15:18:20,400 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4993e-02, 9.9840e-01, 2.2722e-03,  ..., 2.4252e-03,
          4.8642e-01, 8.3792e-03],
         [1.4160e-02, 1.0780e-03, 2.2722e-03,  ..., 2.4252e-03,
          3.2358e-01, 7.2931e-03],
         [9.5353e-01, 2.5890e-04, 2.2722e-03,  ..., 9.9272e-01,
          8.8358e-02, 9.7703e-01],
         [1.7314e-02, 2.5890e-04, 9.9318e-01,  ..., 2.4252e-03,
          1.0165e-01, 7.2931e-03]],
        [[7.7705e-03, 1.0041e-03, 7.9055e-03,  ..., 2.5282e-03,
          1.1954e-03, 4.9692e-03],
         [7.7705e-03, 1.0041e-03, 7.9055e-03,  ..., 2.5282e-03,
          1.1954e-03, 4.9692e-03],
         [9.7669e-01, 1.0041e-03, 7.9055e-03,  ..., 2.5282e-03,
          1.1954e-03, 9.8509e-01],
         [7.7705e-03, 9.9699e-01, 9.7628e-01,  ..., 9.9242e-01,
          9.9641e-01, 4.9692e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9910e-01, 5.5133e-03, 5.0845e-03,  ..., 8.8989e-05,
          6.9692e-03, 9.7908e-01],
         [4.2126e-04, 5.5133e-03, 5.0845e-03,  ..., 8.8989e-05,
          6.8024e-03, 1.1272e-02],
         [2.4119e-04, 5.5133e-03, 5.0845e-03,  ..., 9.9973e-01,
          9.7943e-01, 4.8260e-03],
         [2.4119e-04, 9.8346e-01, 9.8475e-01,  ..., 8.8989e-05,
          6.8024e-03, 4.8260e-03]],
        [[9.9868e-01, 1.2202e-02, 3.8093e-03,  ..., 1.5296e-03,
          1.5295e-01, 8.1567e-05],
         [8.1909e-04, 1.2202e-02, 3.8093e-03,  ..., 1.5296e-03,
          8.5670e-02, 8.1567e-05],
         [2.5165e-04, 1.2202e-02, 4.7723e-03,  ..., 9.9541e-01,
          1.4015e-01, 9.9976e-01],
         [2.5165e-04, 9.6339e-01, 9.8761e-01,  ..., 1.5296e-03,
          6.2123e-01, 8.1567e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.3325e-03, 1.7240e-01, 1.8319e-02,  ..., 2.7030e-03,
          2.0390e-01, 1.3533e-02],
         [8.3325e-03, 6.3460e-01, 1.3572e-02,  ..., 2.7030e-03,
          9.0128e-02, 1.3533e-02],
         [9.7346e-01, 9.2002e-02, 1.3572e-02,  ..., 9.9189e-01,
          1.2986e-01, 9.5642e-01],
         [9.8713e-03, 1.0100e-01, 9.5454e-01,  ..., 2.7030e-03,
          5.7611e-01, 1.6514e-02]],
        [[1.5226e-02, 9.8995e-04, 1.2080e-03,  ..., 3.0804e-03,
          1.6928e-03, 6.8959e-03],
         [1.5226e-02, 9.8995e-04, 1.2080e-03,  ..., 3.0804e-03,
          1.6928e-03, 6.8959e-03],
         [9.4934e-01, 9.8995e-04, 1.2080e-03,  ..., 3.0804e-03,
          1.6928e-03, 9.7881e-01],
         [2.0203e-02, 9.9703e-01, 9.9638e-01,  ..., 9.9076e-01,
          9.9492e-01, 7.4017e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9421e-01, 6.4494e-03, 7.7833e-03,  ..., 2.0839e-03,
          3.9570e-04, 9.8626e-01],
         [3.3088e-03, 6.4494e-03, 7.6173e-03,  ..., 2.0839e-03,
          3.9570e-04, 5.9778e-03],
         [1.2422e-03, 6.4494e-03, 7.6173e-03,  ..., 9.9375e-01,
          9.9881e-01, 3.8828e-03],
         [1.2422e-03, 9.8065e-01, 9.7698e-01,  ..., 2.0839e-03,
          3.9570e-04, 3.8828e-03]],
        [[9.9956e-01, 2.7293e-01, 5.7813e-03,  ..., 1.0928e-03,
          2.2000e-01, 5.9757e-04],
         [3.1115e-04, 4.3980e-01, 5.7813e-03,  ..., 1.0928e-03,
          9.9252e-02, 5.9757e-04],
         [6.4175e-05, 1.4560e-01, 5.7813e-03,  ..., 9.9672e-01,
          2.5620e-01, 9.9821e-01],
         [6.4175e-05, 1.4167e-01, 9.8266e-01,  ..., 1.0928e-03,
          4.2454e-01, 5.9757e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:21,525 [Process: 0] Synchronize training processes
2024-08-18 15:18:21,526 [Process: 0] Evaluating...
2024-08-18 15:18:21,527 [Process: 0] EPOCH 308:
2024-08-18 15:18:21,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:22,661 [Process: 0] Synchronize training processes
2024-08-18 15:18:22,661 [Process: 0] Evaluating...
2024-08-18 15:18:22,662 [Process: 0] EPOCH 309:
2024-08-18 15:18:22,664 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.7045e-03, 1.1091e-01, 5.0272e-04,  ..., 3.2771e-03,
          2.0048e-01, 3.5358e-03],
         [7.7045e-03, 6.1714e-01, 5.0272e-04,  ..., 3.2771e-03,
          7.2094e-02, 3.5358e-03],
         [9.7474e-01, 1.1091e-01, 5.0272e-04,  ..., 9.9017e-01,
          9.1334e-02, 9.8939e-01],
         [9.8473e-03, 1.6104e-01, 9.9849e-01,  ..., 3.2771e-03,
          6.3609e-01, 3.5358e-03]],
        [[2.6914e-03, 1.4983e-03, 1.6000e-03,  ..., 6.1829e-03,
          6.1500e-04, 2.9659e-03],
         [2.6914e-03, 1.4983e-03, 1.6000e-03,  ..., 4.4351e-03,
          6.1500e-04, 2.9659e-03],
         [9.9193e-01, 1.4983e-03, 1.6000e-03,  ..., 4.4351e-03,
          6.1500e-04, 9.9110e-01],
         [2.6914e-03, 9.9551e-01, 9.9520e-01,  ..., 9.8495e-01,
          9.9816e-01, 2.9659e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7082e-01, 1.6661e-02, 3.5959e-02,  ..., 1.9078e-04,
          2.6355e-04, 9.7194e-01],
         [1.3417e-02, 1.1776e-02, 1.8075e-02,  ..., 1.9078e-04,
          2.6355e-04, 1.3335e-02],
         [7.8809e-03, 1.1776e-02, 2.5391e-02,  ..., 9.9943e-01,
          9.9921e-01, 7.3615e-03],
         [7.8809e-03, 9.5979e-01, 9.2058e-01,  ..., 1.9078e-04,
          2.6355e-04, 7.3615e-03]],
        [[9.9372e-01, 1.8752e-01, 3.8306e-02,  ..., 8.4581e-05,
          3.5905e-01, 3.6446e-04],
         [3.8130e-03, 2.8000e-01, 2.2330e-02,  ..., 8.4581e-05,
          9.8698e-02, 3.6446e-04],
         [1.2332e-03, 1.5272e-01, 2.2330e-02,  ..., 9.9975e-01,
          3.0298e-01, 9.9891e-01],
         [1.2332e-03, 3.7976e-01, 9.1703e-01,  ..., 8.4581e-05,
          2.3927e-01, 3.6446e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9425e-03, 2.3929e-01, 7.0951e-04,  ..., 1.6480e-03,
          1.8263e-01, 2.6941e-03],
         [6.9425e-03, 3.4305e-01, 7.0951e-04,  ..., 1.6480e-03,
          5.8475e-02, 2.6941e-03],
         [9.7853e-01, 1.2677e-01, 7.0951e-04,  ..., 9.9506e-01,
          6.8704e-02, 9.9192e-01],
         [7.5864e-03, 2.9089e-01, 9.9787e-01,  ..., 1.6480e-03,
          6.9019e-01, 2.6941e-03]],
        [[7.8105e-03, 1.9266e-03, 5.3418e-03,  ..., 1.4872e-03,
          5.6234e-04, 7.0017e-03],
         [7.8105e-03, 1.8837e-03, 4.9464e-03,  ..., 1.4872e-03,
          5.6234e-04, 7.0017e-03],
         [9.7506e-01, 1.8837e-03, 4.9464e-03,  ..., 1.4872e-03,
          5.6234e-04, 9.7842e-01],
         [9.3200e-03, 9.9431e-01, 9.8477e-01,  ..., 9.9554e-01,
          9.9831e-01, 7.5792e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:23,786 [Process: 0] Synchronize training processes
2024-08-18 15:18:23,786 [Process: 0] Evaluating...
2024-08-18 15:18:23,788 [Process: 0] EPOCH 310:
2024-08-18 15:18:23,790 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:24,907 [Process: 0] Synchronize training processes
2024-08-18 15:18:24,908 [Process: 0] Evaluating...
2024-08-18 15:18:24,909 [Process: 0] EPOCH 311:
2024-08-18 15:18:24,911 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9961e-01, 1.5620e-02, 1.0621e-02,  ..., 7.8880e-04,
          1.0715e-04, 9.8359e-01],
         [2.3414e-04, 1.3135e-02, 1.0095e-02,  ..., 7.8880e-04,
          1.0715e-04, 8.6481e-03],
         [7.8936e-05, 1.7439e-02, 1.2786e-02,  ..., 9.9763e-01,
          9.9968e-01, 3.8825e-03],
         [7.8936e-05, 9.5381e-01, 9.6650e-01,  ..., 7.8880e-04,
          1.0715e-04, 3.8825e-03]],
        [[9.8981e-01, 9.1589e-03, 9.6775e-03,  ..., 1.0141e-03,
          1.5152e-01, 9.7030e-03],
         [6.7979e-03, 8.1729e-03, 7.9863e-03,  ..., 1.0141e-03,
          8.0223e-02, 9.7030e-03],
         [1.6963e-03, 1.1679e-02, 9.7704e-03,  ..., 9.9696e-01,
          1.2564e-01, 9.7089e-01],
         [1.6963e-03, 9.7099e-01, 9.7257e-01,  ..., 1.0141e-03,
          6.4262e-01, 9.7030e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6361e-03, 2.3647e-01, 2.6141e-03,  ..., 2.2981e-02,
          1.3592e-01, 6.1757e-03],
         [9.6361e-03, 1.3753e-01, 2.6141e-03,  ..., 1.9857e-02,
          5.0354e-02, 6.1757e-03],
         [9.6804e-01, 9.4331e-02, 2.6141e-03,  ..., 9.2562e-01,
          6.6068e-02, 9.8147e-01],
         [1.2690e-02, 5.3166e-01, 9.9216e-01,  ..., 3.1539e-02,
          7.4766e-01, 6.1757e-03]],
        [[8.0107e-03, 8.5584e-04, 6.0175e-04,  ..., 1.9221e-03,
          1.3701e-04, 7.4966e-03],
         [8.0107e-03, 8.5584e-04, 6.0175e-04,  ..., 1.9221e-03,
          1.3701e-04, 7.4966e-03],
         [9.7347e-01, 8.5584e-04, 6.0175e-04,  ..., 1.9221e-03,
          1.3701e-04, 9.7618e-01],
         [1.0510e-02, 9.9743e-01, 9.9819e-01,  ..., 9.9423e-01,
          9.9959e-01, 8.8264e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9318e-01, 4.0265e-03, 1.0285e-02,  ..., 4.2052e-05,
          1.2457e-04, 9.9592e-01],
         [3.1971e-03, 4.0265e-03, 1.0285e-02,  ..., 4.2052e-05,
          1.2457e-04, 2.0381e-03],
         [1.8104e-03, 4.0265e-03, 1.4693e-02,  ..., 9.9987e-01,
          9.9963e-01, 1.0210e-03],
         [1.8104e-03, 9.8792e-01, 9.6474e-01,  ..., 4.2052e-05,
          1.2457e-04, 1.0210e-03]],
        [[9.9476e-01, 8.3293e-03, 5.2084e-03,  ..., 1.7720e-04,
          1.7743e-01, 1.3025e-02],
         [3.3345e-03, 5.5945e-03, 5.1389e-03,  ..., 1.7720e-04,
          7.9552e-02, 1.3025e-02],
         [9.5249e-04, 6.0423e-03, 5.1389e-03,  ..., 9.9947e-01,
          1.6516e-01, 9.6092e-01],
         [9.5249e-04, 9.8003e-01, 9.8451e-01,  ..., 1.7720e-04,
          5.7786e-01, 1.3025e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5517e-02, 1.1617e-01, 1.2164e-02,  ..., 7.0663e-03,
          7.0629e-02, 3.5435e-03],
         [1.5517e-02, 5.5579e-02, 9.4057e-03,  ..., 7.0663e-03,
          3.5797e-02, 3.5435e-03],
         [9.4735e-01, 5.3010e-02, 9.4057e-03,  ..., 9.7862e-01,
          3.5797e-02, 9.8937e-01],
         [2.1613e-02, 7.7524e-01, 9.6902e-01,  ..., 7.2430e-03,
          8.5778e-01, 3.5435e-03]],
        [[4.0177e-03, 6.7387e-04, 1.2496e-03,  ..., 7.4194e-04,
          1.3005e-03, 1.8087e-02],
         [4.0177e-03, 6.7387e-04, 1.2871e-03,  ..., 7.4194e-04,
          1.3005e-03, 1.6927e-02],
         [9.8795e-01, 6.7387e-04, 1.2496e-03,  ..., 7.4194e-04,
          1.3005e-03, 9.4282e-01],
         [4.0177e-03, 9.9798e-01, 9.9621e-01,  ..., 9.9777e-01,
          9.9610e-01, 2.2167e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:26,032 [Process: 0] Synchronize training processes
2024-08-18 15:18:26,033 [Process: 0] Evaluating...
2024-08-18 15:18:26,036 [Process: 0] EPOCH 312:
2024-08-18 15:18:26,038 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:27,165 [Process: 0] Synchronize training processes
2024-08-18 15:18:27,166 [Process: 0] Evaluating...
2024-08-18 15:18:27,167 [Process: 0] EPOCH 313:
2024-08-18 15:18:27,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9900e-01, 2.9299e-03, 2.6233e-03,  ..., 6.0157e-05,
          8.1009e-05, 9.7460e-01],
         [5.6347e-04, 2.9299e-03, 2.6233e-03,  ..., 6.0157e-05,
          8.1009e-05, 1.5071e-02],
         [2.1874e-04, 2.9299e-03, 2.6233e-03,  ..., 9.9982e-01,
          9.9976e-01, 5.1664e-03],
         [2.1874e-04, 9.9121e-01, 9.9213e-01,  ..., 6.0157e-05,
          8.1009e-05, 5.1664e-03]],
        [[9.5222e-01, 5.4903e-03, 5.6101e-03,  ..., 3.2494e-04,
          2.8452e-01, 8.4936e-03],
         [2.3849e-02, 5.4903e-03, 5.6101e-03,  ..., 3.2494e-04,
          9.9351e-02, 8.4936e-03],
         [1.1964e-02, 6.0266e-03, 5.7989e-03,  ..., 9.9903e-01,
          3.7875e-01, 9.7452e-01],
         [1.1964e-02, 9.8299e-01, 9.8298e-01,  ..., 3.2494e-04,
          2.3738e-01, 8.4936e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7573e-02, 2.6154e-02, 7.1852e-01,  ..., 1.8844e-02,
          6.4181e-02, 1.1713e-02],
         [1.7573e-02, 2.1434e-02, 1.0602e-01,  ..., 1.5599e-02,
          3.6034e-02, 1.1713e-02],
         [9.3747e-01, 2.1434e-02, 7.4242e-02,  ..., 9.4581e-01,
          3.6034e-02, 9.6355e-01],
         [2.7385e-02, 9.3098e-01, 1.0122e-01,  ..., 1.9743e-02,
          8.6375e-01, 1.3027e-02]],
        [[7.6371e-03, 6.6172e-04, 1.0704e-03,  ..., 1.6214e-03,
          8.5837e-04, 4.9940e-03],
         [7.6371e-03, 7.2888e-04, 1.0704e-03,  ..., 1.6214e-03,
          8.5837e-04, 4.9940e-03],
         [9.7546e-01, 6.6172e-04, 1.0704e-03,  ..., 1.6214e-03,
          8.5837e-04, 9.8497e-01],
         [9.2664e-03, 9.9795e-01, 9.9679e-01,  ..., 9.9514e-01,
          9.9742e-01, 5.0464e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9821e-01, 1.5804e-03, 3.1479e-03,  ..., 5.0009e-04,
          1.6225e-04, 9.9182e-01],
         [9.7173e-04, 1.5804e-03, 3.1479e-03,  ..., 5.0009e-04,
          1.6225e-04, 4.4657e-03],
         [4.1025e-04, 1.5804e-03, 3.1479e-03,  ..., 9.9850e-01,
          9.9951e-01, 1.8550e-03],
         [4.1025e-04, 9.9526e-01, 9.9056e-01,  ..., 5.0009e-04,
          1.6225e-04, 1.8550e-03]],
        [[9.8263e-01, 2.4020e-03, 3.6431e-03,  ..., 5.1036e-04,
          1.9222e-01, 1.2865e-03],
         [1.1069e-02, 2.4020e-03, 3.6431e-03,  ..., 5.1036e-04,
          8.1439e-02, 1.2865e-03],
         [3.1481e-03, 2.4020e-03, 3.6431e-03,  ..., 9.9847e-01,
          5.7240e-01, 9.9614e-01],
         [3.1481e-03, 9.9279e-01, 9.8907e-01,  ..., 5.1036e-04,
          1.5394e-01, 1.2865e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:28,292 [Process: 0] Synchronize training processes
2024-08-18 15:18:28,292 [Process: 0] Evaluating...
2024-08-18 15:18:28,294 [Process: 0] EPOCH 314:
2024-08-18 15:18:28,295 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5944e-02, 1.0391e-02, 1.9265e-03,  ..., 1.5021e-02,
          2.3947e-02, 8.4850e-03],
         [1.5944e-02, 1.0391e-02, 1.9265e-03,  ..., 1.5021e-02,
          2.0351e-02, 8.4850e-03],
         [9.4283e-01, 1.0391e-02, 1.9265e-03,  ..., 9.4803e-01,
          2.0351e-02, 9.7185e-01],
         [2.5287e-02, 9.6883e-01, 9.9422e-01,  ..., 2.1925e-02,
          9.3535e-01, 1.1181e-02]],
        [[3.2545e-03, 1.1283e-03, 6.3082e-04,  ..., 6.9151e-04,
          4.6463e-04, 5.9357e-03],
         [3.2545e-03, 1.2397e-03, 6.3082e-04,  ..., 6.9151e-04,
          4.9642e-04, 5.9357e-03],
         [9.9024e-01, 1.1283e-03, 6.3082e-04,  ..., 6.9151e-04,
          4.6463e-04, 9.8219e-01],
         [3.2545e-03, 9.9650e-01, 9.9811e-01,  ..., 9.9793e-01,
          9.9857e-01, 5.9357e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 4.8567e-03, 1.7109e-03,  ..., 1.8965e-04,
          1.5397e-04, 9.9899e-01],
         [1.1519e-04, 4.8567e-03, 1.7109e-03,  ..., 1.8965e-04,
          1.5397e-04, 4.8757e-04],
         [3.3759e-05, 5.3749e-03, 1.7109e-03,  ..., 9.9943e-01,
          9.9954e-01, 2.6275e-04],
         [3.3759e-05, 9.8491e-01, 9.9487e-01,  ..., 1.8965e-04,
          1.5397e-04, 2.6275e-04]],
        [[9.9825e-01, 3.0564e-03, 5.8763e-03,  ..., 1.6051e-03,
          1.4782e-01, 2.8880e-04],
         [1.3620e-03, 3.0564e-03, 5.8763e-03,  ..., 1.6051e-03,
          7.7761e-02, 2.8880e-04],
         [1.9174e-04, 3.0564e-03, 6.4407e-03,  ..., 9.9518e-01,
          6.2922e-01, 9.9913e-01],
         [1.9174e-04, 9.9083e-01, 9.8181e-01,  ..., 1.6051e-03,
          1.4521e-01, 2.8880e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.5479e-03, 7.6924e-02, 1.5030e-03,  ..., 1.7836e-02,
          2.9970e-02, 6.5554e-03],
         [7.5479e-03, 7.8195e-02, 1.8004e-03,  ..., 1.7836e-02,
          2.7112e-02, 6.5554e-03],
         [9.7700e-01, 5.3840e-02, 1.5030e-03,  ..., 9.3839e-01,
          2.7112e-02, 9.7916e-01],
         [7.9047e-03, 7.9104e-01, 9.9519e-01,  ..., 2.5934e-02,
          9.1581e-01, 7.7247e-03]],
        [[9.6693e-03, 2.5676e-03, 7.8192e-03,  ..., 2.0493e-04,
          5.1549e-04, 2.3662e-03],
         [9.6693e-03, 2.6769e-03, 7.8192e-03,  ..., 2.0493e-04,
          5.1549e-04, 2.3662e-03],
         [9.6932e-01, 2.5676e-03, 7.8192e-03,  ..., 2.0493e-04,
          5.1549e-04, 9.9290e-01],
         [1.1337e-02, 9.9219e-01, 9.7654e-01,  ..., 9.9939e-01,
          9.9845e-01, 2.3662e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9960e-01, 6.8298e-03, 2.0272e-03,  ..., 4.6107e-04,
          1.7507e-04, 9.9848e-01],
         [3.0278e-04, 6.8298e-03, 2.0272e-03,  ..., 4.6107e-04,
          1.7507e-04, 8.5711e-04],
         [4.6758e-05, 6.9051e-03, 2.0272e-03,  ..., 9.9862e-01,
          9.9947e-01, 3.3116e-04],
         [4.6758e-05, 9.7944e-01, 9.9392e-01,  ..., 4.6107e-04,
          1.7507e-04, 3.3116e-04]],
        [[9.8752e-01, 1.1620e-02, 1.1370e-02,  ..., 1.3087e-03,
          1.6535e-01, 8.6144e-05],
         [7.3348e-03, 1.1620e-02, 1.1370e-02,  ..., 1.3087e-03,
          7.8511e-02, 8.6144e-05],
         [2.5718e-03, 1.2303e-02, 1.2522e-02,  ..., 9.9607e-01,
          5.9518e-01, 9.9974e-01],
         [2.5718e-03, 9.6446e-01, 9.6474e-01,  ..., 1.3087e-03,
          1.6095e-01, 8.6144e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:29,419 [Process: 0] Synchronize training processes
2024-08-18 15:18:29,419 [Process: 0] Evaluating...
2024-08-18 15:18:29,421 [Process: 0] EPOCH 315:
2024-08-18 15:18:29,422 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:30,547 [Process: 0] Synchronize training processes
2024-08-18 15:18:30,547 [Process: 0] Evaluating...
2024-08-18 15:18:30,549 [Process: 0] EPOCH 316:
2024-08-18 15:18:30,550 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0427e-03, 8.6431e-02, 2.1609e-04,  ..., 4.6677e-03,
          5.6347e-02, 5.4236e-03],
         [4.0427e-03, 3.4063e-01, 2.1609e-04,  ..., 4.6677e-03,
          4.1301e-02, 5.4236e-03],
         [9.8729e-01, 8.6431e-02, 2.1609e-04,  ..., 9.8600e-01,
          5.4762e-02, 9.8339e-01],
         [4.6210e-03, 4.8651e-01, 9.9935e-01,  ..., 4.6677e-03,
          8.4759e-01, 5.7587e-03]],
        [[7.0810e-03, 1.7408e-03, 2.6908e-03,  ..., 3.5169e-04,
          5.1599e-04, 1.7920e-03],
         [7.0810e-03, 1.7408e-03, 2.6908e-03,  ..., 3.5169e-04,
          5.1599e-04, 1.7920e-03],
         [9.7788e-01, 1.7408e-03, 2.6908e-03,  ..., 3.5169e-04,
          5.1599e-04, 9.9462e-01],
         [7.9565e-03, 9.9478e-01, 9.9193e-01,  ..., 9.9894e-01,
          9.9845e-01, 1.7920e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9808e-01, 3.9666e-03, 6.9025e-03,  ..., 3.1973e-05,
          2.7466e-04, 9.9878e-01],
         [8.7142e-04, 3.9666e-03, 6.9025e-03,  ..., 3.1973e-05,
          2.7466e-04, 6.4992e-04],
         [5.2519e-04, 3.9666e-03, 6.9025e-03,  ..., 9.9990e-01,
          9.9918e-01, 2.8276e-04],
         [5.2519e-04, 9.8810e-01, 9.7929e-01,  ..., 3.1973e-05,
          2.7466e-04, 2.8276e-04]],
        [[9.7845e-01, 3.0386e-03, 1.1174e-02,  ..., 5.1038e-04,
          1.8484e-01, 1.5342e-04],
         [8.0180e-03, 3.0386e-03, 1.1174e-02,  ..., 5.1038e-04,
          1.0398e-01, 1.5342e-04],
         [8.1438e-03, 3.0386e-03, 1.2017e-02,  ..., 9.9847e-01,
          4.3342e-01, 9.9954e-01],
         [5.3929e-03, 9.9088e-01, 9.6563e-01,  ..., 5.1038e-04,
          2.7776e-01, 1.5342e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4111e-03, 1.5738e-04, 1.3152e-04,  ..., 3.5751e-03,
          2.3958e-02, 2.0108e-03],
         [3.4111e-03, 1.5738e-04, 1.3152e-04,  ..., 3.4545e-03,
          1.8160e-02, 2.0108e-03],
         [9.8977e-01, 1.5738e-04, 1.3152e-04,  ..., 9.8952e-01,
          1.8160e-02, 9.9397e-01],
         [3.4111e-03, 9.9953e-01, 9.9961e-01,  ..., 3.4545e-03,
          9.3972e-01, 2.0108e-03]],
        [[4.9708e-03, 1.9065e-04, 5.2530e-02,  ..., 3.5673e-05,
          2.2262e-03, 4.9957e-03],
         [4.9708e-03, 1.9863e-04, 3.9714e-02,  ..., 3.5673e-05,
          2.2262e-03, 4.8648e-03],
         [9.8509e-01, 1.9065e-04, 3.9995e-02,  ..., 3.5673e-05,
          2.2262e-03, 9.8527e-01],
         [4.9708e-03, 9.9942e-01, 8.6776e-01,  ..., 9.9989e-01,
          9.9332e-01, 4.8648e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:18:31,670 [Process: 0] Synchronize training processes
2024-08-18 15:18:31,670 [Process: 0] Evaluating...
2024-08-18 15:18:31,672 [Process: 0] EPOCH 317:
2024-08-18 15:18:31,673 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:32,806 [Process: 0] Synchronize training processes
2024-08-18 15:18:32,806 [Process: 0] Evaluating...
2024-08-18 15:18:32,808 [Process: 0] EPOCH 318:
2024-08-18 15:18:32,809 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9591e-01, 3.0219e-03, 5.5135e-03,  ..., 1.8559e-04,
          2.7411e-04, 9.9914e-01],
         [2.5687e-03, 3.0219e-03, 5.5135e-03,  ..., 1.8559e-04,
          2.7411e-04, 3.5341e-04],
         [7.6130e-04, 3.0219e-03, 5.5135e-03,  ..., 9.9944e-01,
          9.9918e-01, 2.5462e-04],
         [7.6130e-04, 9.9093e-01, 9.8346e-01,  ..., 1.8559e-04,
          2.7411e-04, 2.5462e-04]],
        [[9.5936e-01, 4.1358e-03, 4.9841e-03,  ..., 3.0502e-04,
          1.5532e-01, 3.0316e-04],
         [1.7044e-02, 4.1358e-03, 4.9841e-03,  ..., 3.0502e-04,
          1.0149e-01, 3.0316e-04],
         [1.2675e-02, 4.1358e-03, 4.9841e-03,  ..., 9.9908e-01,
          2.5263e-01, 9.9909e-01],
         [1.0922e-02, 9.8759e-01, 9.8505e-01,  ..., 3.0502e-04,
          4.9056e-01, 3.0316e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.8547e-03, 4.2347e-04, 1.0027e-03,  ..., 2.6808e-03,
          6.4706e-03, 4.6062e-03],
         [6.8547e-03, 4.2347e-04, 1.0027e-03,  ..., 2.6808e-03,
          6.4706e-03, 4.4000e-03],
         [9.7944e-01, 4.2347e-04, 1.0027e-03,  ..., 9.9196e-01,
          6.4706e-03, 9.8659e-01],
         [6.8547e-03, 9.9873e-01, 9.9699e-01,  ..., 2.6808e-03,
          9.8059e-01, 4.4000e-03]],
        [[1.2212e-02, 3.6198e-04, 2.9278e-01,  ..., 1.5812e-03,
          1.1471e-03, 8.9099e-03],
         [1.1254e-02, 3.6198e-04, 7.5935e-02,  ..., 1.5812e-03,
          1.1471e-03, 8.9099e-03],
         [9.6493e-01, 3.6198e-04, 7.5956e-02,  ..., 1.5812e-03,
          1.1471e-03, 9.7327e-01],
         [1.1606e-02, 9.9891e-01, 5.5533e-01,  ..., 9.9526e-01,
          9.9656e-01, 8.9099e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9814e-01, 5.8323e-03, 2.8194e-02,  ..., 1.2778e-04,
          5.7398e-04, 9.9549e-01],
         [1.3398e-03, 5.8323e-03, 2.4004e-02,  ..., 1.2778e-04,
          5.7398e-04, 1.4365e-03],
         [2.5955e-04, 5.8323e-03, 4.7129e-02,  ..., 9.9962e-01,
          9.9828e-01, 1.6348e-03],
         [2.5955e-04, 9.8250e-01, 9.0067e-01,  ..., 1.2778e-04,
          5.7398e-04, 1.4365e-03]],
        [[9.7424e-01, 1.4013e-03, 1.3247e-03,  ..., 1.1819e-03,
          1.1273e-01, 2.2706e-03],
         [1.6151e-02, 1.4013e-03, 1.3247e-03,  ..., 1.1819e-03,
          9.0331e-02, 2.2706e-03],
         [4.8057e-03, 1.4013e-03, 1.3247e-03,  ..., 9.9645e-01,
          2.2943e-01, 9.9319e-01],
         [4.8057e-03, 9.9580e-01, 9.9603e-01,  ..., 1.1819e-03,
          5.6751e-01, 2.2706e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5962e-03, 5.7311e-05, 2.7588e-03,  ..., 5.9447e-03,
          2.6721e-02, 1.7155e-03],
         [3.5962e-03, 5.7311e-05, 2.7588e-03,  ..., 5.9447e-03,
          2.2981e-02, 1.7155e-03],
         [9.8921e-01, 5.7311e-05, 2.7588e-03,  ..., 9.8217e-01,
          2.2981e-02, 9.9485e-01],
         [3.5962e-03, 9.9983e-01, 9.9172e-01,  ..., 5.9447e-03,
          9.2732e-01, 1.7155e-03]],
        [[4.6187e-03, 1.9425e-03, 7.8384e-03,  ..., 3.8275e-04,
          8.9553e-04, 1.8420e-03],
         [4.6187e-03, 1.9425e-03, 7.8384e-03,  ..., 3.8275e-04,
          8.9553e-04, 1.8420e-03],
         [9.8614e-01, 1.9425e-03, 7.8384e-03,  ..., 3.8275e-04,
          8.9553e-04, 9.9447e-01],
         [4.6187e-03, 9.9417e-01, 9.7648e-01,  ..., 9.9885e-01,
          9.9731e-01, 1.8420e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:33,939 [Process: 0] Synchronize training processes
2024-08-18 15:18:33,939 [Process: 0] Evaluating...
2024-08-18 15:18:33,941 [Process: 0] EPOCH 319:
2024-08-18 15:18:33,942 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:35,072 [Process: 0] Synchronize training processes
2024-08-18 15:18:35,072 [Process: 0] Evaluating...
2024-08-18 15:18:35,074 [Process: 0] EPOCH 320:
2024-08-18 15:18:35,076 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9348e-01, 1.5300e-02, 3.4007e-03,  ..., 1.0808e-04,
          6.9311e-04, 9.9895e-01],
         [2.6316e-03, 1.5300e-02, 3.4007e-03,  ..., 1.0808e-04,
          6.9311e-04, 4.6990e-04],
         [1.9438e-03, 1.9077e-02, 3.4007e-03,  ..., 9.9968e-01,
          9.9792e-01, 2.9124e-04],
         [1.9438e-03, 9.5032e-01, 9.8980e-01,  ..., 1.0808e-04,
          6.9311e-04, 2.9124e-04]],
        [[9.8651e-01, 5.6875e-03, 1.2814e-02,  ..., 3.7760e-04,
          1.8417e-01, 3.7279e-04],
         [7.2231e-03, 5.6875e-03, 1.2814e-02,  ..., 3.7760e-04,
          1.1143e-01, 3.7279e-04],
         [3.1351e-03, 5.6875e-03, 1.5427e-02,  ..., 9.9887e-01,
          2.8926e-01, 9.9888e-01],
         [3.1351e-03, 9.8294e-01, 9.5895e-01,  ..., 3.7760e-04,
          4.1514e-01, 3.7279e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6183e-02, 4.5850e-04, 1.0556e-03,  ..., 1.6287e-03,
          1.8800e-02, 7.1944e-03],
         [1.2612e-02, 4.5850e-04, 1.0556e-03,  ..., 1.6287e-03,
          1.5518e-02, 7.1944e-03],
         [9.5859e-01, 4.5850e-04, 1.0556e-03,  ..., 9.9511e-01,
          1.5518e-02, 9.7842e-01],
         [1.2612e-02, 9.9862e-01, 9.9683e-01,  ..., 1.6287e-03,
          9.5016e-01, 7.1944e-03]],
        [[5.3477e-03, 2.3527e-03, 1.3153e-02,  ..., 1.8270e-04,
          5.7868e-04, 7.0560e-03],
         [5.3477e-03, 2.3527e-03, 1.3153e-02,  ..., 1.8270e-04,
          5.7868e-04, 7.0560e-03],
         [9.8396e-01, 2.3527e-03, 1.3153e-02,  ..., 1.8270e-04,
          5.7868e-04, 9.7883e-01],
         [5.3477e-03, 9.9294e-01, 9.6054e-01,  ..., 9.9945e-01,
          9.9826e-01, 7.0560e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9892e-01, 1.1315e-02, 5.8605e-03,  ..., 3.9120e-04,
          8.3785e-04, 9.9820e-01],
         [3.6017e-04, 1.1315e-02, 5.8605e-03,  ..., 3.9120e-04,
          8.3785e-04, 6.6944e-04],
         [3.6017e-04, 1.2064e-02, 5.8605e-03,  ..., 9.9883e-01,
          9.9749e-01, 5.6778e-04],
         [3.6017e-04, 9.6531e-01, 9.8242e-01,  ..., 3.9120e-04,
          8.3785e-04, 5.6778e-04]],
        [[9.8317e-01, 2.5971e-03, 1.4557e-03,  ..., 4.4076e-04,
          1.4697e-01, 2.2982e-04],
         [9.5389e-03, 2.5971e-03, 1.4557e-03,  ..., 4.4076e-04,
          1.2032e-01, 2.2982e-04],
         [3.6458e-03, 2.5971e-03, 1.4557e-03,  ..., 9.9868e-01,
          2.5594e-01, 9.9931e-01],
         [3.6458e-03, 9.9221e-01, 9.9563e-01,  ..., 4.4076e-04,
          4.7677e-01, 2.2982e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0382e-02, 1.4548e-04, 3.0900e-04,  ..., 2.0275e-03,
          8.0771e-03, 3.4664e-03],
         [1.8640e-02, 1.4548e-04, 3.0900e-04,  ..., 2.0275e-03,
          7.5924e-03, 3.4664e-03],
         [9.4141e-01, 1.4548e-04, 3.0900e-04,  ..., 9.9392e-01,
          7.5924e-03, 9.8960e-01],
         [1.9564e-02, 9.9956e-01, 9.9907e-01,  ..., 2.0275e-03,
          9.7674e-01, 3.4664e-03]],
        [[5.2727e-03, 7.4098e-04, 1.2497e-03,  ..., 4.8218e-04,
          2.0795e-04, 4.3570e-03],
         [5.2727e-03, 7.4098e-04, 1.2497e-03,  ..., 4.8218e-04,
          2.0795e-04, 4.3570e-03],
         [9.8418e-01, 7.4098e-04, 1.2497e-03,  ..., 4.8218e-04,
          2.0795e-04, 9.8693e-01],
         [5.2727e-03, 9.9778e-01, 9.9625e-01,  ..., 9.9855e-01,
          9.9938e-01, 4.3570e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:36,201 [Process: 0] Synchronize training processes
2024-08-18 15:18:36,202 [Process: 0] Evaluating...
2024-08-18 15:18:36,203 [Process: 0] EPOCH 321:
2024-08-18 15:18:36,205 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9760e-01, 4.2228e-03, 2.3186e-02,  ..., 6.5902e-03,
          1.9265e-04, 9.9940e-01],
         [8.0119e-04, 4.2228e-03, 2.3186e-02,  ..., 6.5902e-03,
          1.9265e-04, 1.9848e-04],
         [8.0119e-04, 4.2228e-03, 3.0236e-02,  ..., 9.8023e-01,
          9.9942e-01, 1.9848e-04],
         [8.0119e-04, 9.8733e-01, 9.2339e-01,  ..., 6.5902e-03,
          1.9265e-04, 1.9848e-04]],
        [[9.9458e-01, 9.0862e-03, 1.8381e-03,  ..., 3.6079e-04,
          1.9998e-01, 2.6517e-03],
         [2.0353e-03, 9.0862e-03, 1.8381e-03,  ..., 3.6079e-04,
          1.3903e-01, 2.6517e-03],
         [1.6932e-03, 9.0862e-03, 1.8381e-03,  ..., 9.9892e-01,
          3.0517e-01, 9.9205e-01],
         [1.6932e-03, 9.7274e-01, 9.9449e-01,  ..., 3.6079e-04,
          3.5582e-01, 2.6517e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.4501e-03, 1.9130e-04, 2.7700e-04,  ..., 2.6741e-03,
          2.0389e-03, 4.6081e-03],
         [8.4501e-03, 1.9130e-04, 2.7700e-04,  ..., 2.6741e-03,
          2.0389e-03, 4.6081e-03],
         [9.7465e-01, 1.9130e-04, 2.7700e-04,  ..., 9.9198e-01,
          2.0389e-03, 9.8618e-01],
         [8.4501e-03, 9.9943e-01, 9.9917e-01,  ..., 2.6741e-03,
          9.9388e-01, 4.6081e-03]],
        [[1.7190e-02, 7.1919e-04, 1.2333e-03,  ..., 2.0741e-03,
          1.6375e-03, 1.1800e-02],
         [1.6299e-02, 7.1919e-04, 1.2333e-03,  ..., 2.0741e-03,
          1.6375e-03, 1.1800e-02],
         [9.5021e-01, 7.1919e-04, 1.2333e-03,  ..., 2.0741e-03,
          1.6375e-03, 9.6460e-01],
         [1.6299e-02, 9.9784e-01, 9.9630e-01,  ..., 9.9378e-01,
          9.9509e-01, 1.1800e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9975e-01, 7.3764e-03, 1.9656e-03,  ..., 2.5851e-04,
          1.3950e-04, 9.9774e-01],
         [8.8236e-05, 7.3764e-03, 1.9656e-03,  ..., 2.5851e-04,
          1.3950e-04, 7.5287e-04],
         [8.1526e-05, 7.3764e-03, 1.9656e-03,  ..., 9.9922e-01,
          9.9958e-01, 7.5287e-04],
         [8.1526e-05, 9.7787e-01, 9.9410e-01,  ..., 2.5851e-04,
          1.3950e-04, 7.5287e-04]],
        [[9.9720e-01, 5.4855e-03, 8.8645e-03,  ..., 6.8298e-04,
          2.2912e-01, 1.7182e-04],
         [1.1846e-03, 5.4855e-03, 8.8645e-03,  ..., 6.8298e-04,
          1.1974e-01, 1.7182e-04],
         [8.0973e-04, 5.4855e-03, 8.8645e-03,  ..., 9.9795e-01,
          3.9264e-01, 9.9948e-01],
         [8.0973e-04, 9.8354e-01, 9.7341e-01,  ..., 6.8298e-04,
          2.5850e-01, 1.7182e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:37,330 [Process: 0] Synchronize training processes
2024-08-18 15:18:37,331 [Process: 0] Evaluating...
2024-08-18 15:18:37,335 [Process: 0] EPOCH 322:
2024-08-18 15:18:37,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:38,463 [Process: 0] Synchronize training processes
2024-08-18 15:18:38,463 [Process: 0] Evaluating...
2024-08-18 15:18:38,465 [Process: 0] EPOCH 323:
2024-08-18 15:18:38,466 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.6990e-03, 6.5817e-04, 8.8138e-04,  ..., 4.3372e-03,
          4.0532e-03, 1.1479e-02],
         [5.6990e-03, 6.5817e-04, 8.8138e-04,  ..., 4.3372e-03,
          4.0532e-03, 1.1479e-02],
         [9.8290e-01, 6.5817e-04, 8.8138e-04,  ..., 9.8699e-01,
          4.0532e-03, 9.6556e-01],
         [5.6990e-03, 9.9803e-01, 9.9736e-01,  ..., 4.3372e-03,
          9.8784e-01, 1.1479e-02]],
        [[4.5420e-03, 1.0921e-03, 4.7802e-03,  ..., 7.3015e-04,
          2.0268e-03, 6.3184e-03],
         [4.5420e-03, 1.0921e-03, 4.7802e-03,  ..., 7.3015e-04,
          2.0268e-03, 6.3184e-03],
         [9.8637e-01, 1.0921e-03, 4.7802e-03,  ..., 7.3015e-04,
          2.0268e-03, 9.8104e-01],
         [4.5420e-03, 9.9672e-01, 9.8566e-01,  ..., 9.9781e-01,
          9.9392e-01, 6.3184e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9788e-01, 6.9914e-03, 9.4541e-03,  ..., 7.8581e-05,
          3.0006e-03, 9.9166e-01],
         [7.0630e-04, 6.9914e-03, 9.4541e-03,  ..., 7.8581e-05,
          3.0006e-03, 2.4496e-03],
         [7.0630e-04, 6.9914e-03, 9.4541e-03,  ..., 9.9976e-01,
          9.9100e-01, 3.4394e-03],
         [7.0630e-04, 9.7903e-01, 9.7164e-01,  ..., 7.8581e-05,
          3.0006e-03, 2.4496e-03]],
        [[9.9023e-01, 1.1707e-03, 1.7404e-03,  ..., 3.3870e-04,
          2.0264e-01, 3.2246e-04],
         [2.7935e-03, 1.1707e-03, 1.7404e-03,  ..., 3.3870e-04,
          1.4299e-01, 3.2246e-04],
         [4.1834e-03, 1.1707e-03, 1.7404e-03,  ..., 9.9898e-01,
          3.8946e-01, 9.9903e-01],
         [2.7935e-03, 9.9649e-01, 9.9478e-01,  ..., 3.3870e-04,
          2.6491e-01, 3.2246e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.2699e-03, 1.9459e-04, 2.4504e-03,  ..., 4.2355e-03,
          6.2062e-04, 3.1180e-03],
         [5.2699e-03, 1.9459e-04, 2.4504e-03,  ..., 4.2355e-03,
          6.2062e-04, 3.1180e-03],
         [9.8419e-01, 1.9459e-04, 2.4504e-03,  ..., 9.8729e-01,
          6.2062e-04, 9.9065e-01],
         [5.2699e-03, 9.9942e-01, 9.9265e-01,  ..., 4.2355e-03,
          9.9814e-01, 3.1180e-03]],
        [[1.2610e-03, 1.1943e-03, 5.2414e-04,  ..., 2.8900e-04,
          8.4075e-04, 2.7844e-03],
         [1.2610e-03, 1.1943e-03, 5.2414e-04,  ..., 2.8900e-04,
          8.4075e-04, 2.7844e-03],
         [9.9622e-01, 1.1943e-03, 5.2414e-04,  ..., 2.8900e-04,
          8.4075e-04, 9.9165e-01],
         [1.2610e-03, 9.9642e-01, 9.9843e-01,  ..., 9.9913e-01,
          9.9748e-01, 2.7844e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9828e-01, 3.3076e-03, 3.5897e-03,  ..., 3.7688e-04,
          1.1433e-04, 9.9982e-01],
         [5.7248e-04, 3.3076e-03, 3.5897e-03,  ..., 3.7688e-04,
          1.1433e-04, 6.0939e-05],
         [5.7248e-04, 3.3076e-03, 3.5897e-03,  ..., 9.9887e-01,
          9.9966e-01, 6.0939e-05],
         [5.7248e-04, 9.9008e-01, 9.8923e-01,  ..., 3.7688e-04,
          1.1433e-04, 6.0939e-05]],
        [[9.8918e-01, 1.9756e-03, 1.3864e-03,  ..., 1.3800e-03,
          2.1138e-01, 1.9013e-03],
         [4.6703e-03, 1.9756e-03, 1.3864e-03,  ..., 1.3800e-03,
          1.2133e-01, 1.9013e-03],
         [3.0759e-03, 1.9756e-03, 1.3864e-03,  ..., 9.9586e-01,
          4.2943e-01, 9.9430e-01],
         [3.0759e-03, 9.9407e-01, 9.9584e-01,  ..., 1.3800e-03,
          2.3785e-01, 1.9013e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:39,595 [Process: 0] Synchronize training processes
2024-08-18 15:18:39,595 [Process: 0] Evaluating...
2024-08-18 15:18:39,597 [Process: 0] EPOCH 324:
2024-08-18 15:18:39,599 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:40,728 [Process: 0] Synchronize training processes
2024-08-18 15:18:40,728 [Process: 0] Evaluating...
2024-08-18 15:18:40,730 [Process: 0] EPOCH 325:
2024-08-18 15:18:40,732 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.2794e-03, 2.0738e-04, 8.7018e-04,  ..., 1.6958e-02,
          3.5723e-03, 4.7390e-02],
         [6.2794e-03, 2.0738e-04, 8.7018e-04,  ..., 1.6958e-02,
          3.5723e-03, 3.7549e-02],
         [9.8116e-01, 2.0738e-04, 8.7018e-04,  ..., 9.4826e-01,
          3.5723e-03, 8.6444e-01],
         [6.2794e-03, 9.9938e-01, 9.9739e-01,  ..., 1.7822e-02,
          9.8928e-01, 5.0623e-02]],
        [[1.9022e-03, 9.7596e-04, 6.9161e-04,  ..., 8.6425e-04,
          8.4596e-04, 1.7871e-03],
         [1.9022e-03, 9.7596e-04, 6.9161e-04,  ..., 8.6425e-04,
          8.4596e-04, 1.7871e-03],
         [9.9429e-01, 9.7596e-04, 6.9161e-04,  ..., 8.6425e-04,
          8.4596e-04, 9.9464e-01],
         [1.9022e-03, 9.9707e-01, 9.9793e-01,  ..., 9.9741e-01,
          9.9746e-01, 1.7871e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9916e-01, 4.6819e-03, 4.0535e-03,  ..., 1.0349e-04,
          5.8283e-04, 9.9897e-01],
         [2.7996e-04, 4.6819e-03, 4.0535e-03,  ..., 1.0349e-04,
          5.8283e-04, 3.4260e-04],
         [2.7996e-04, 4.6819e-03, 4.0535e-03,  ..., 9.9969e-01,
          9.9825e-01, 3.4260e-04],
         [2.7996e-04, 9.8595e-01, 9.8784e-01,  ..., 1.0349e-04,
          5.8283e-04, 3.4260e-04]],
        [[9.9914e-01, 2.9402e-03, 8.8949e-04,  ..., 1.7056e-04,
          2.4254e-01, 5.3911e-04],
         [2.9576e-04, 2.9402e-03, 8.8949e-04,  ..., 1.7056e-04,
          1.0817e-01, 5.3911e-04],
         [2.8091e-04, 2.9402e-03, 8.8949e-04,  ..., 9.9949e-01,
          4.6665e-01, 9.9838e-01],
         [2.8091e-04, 9.9118e-01, 9.9733e-01,  ..., 1.7056e-04,
          1.8264e-01, 5.3911e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8936e-03, 6.7366e-04, 2.4900e-03,  ..., 5.7646e-03,
          5.7372e-03, 3.8491e-03],
         [2.8936e-03, 6.7366e-04, 2.4900e-03,  ..., 5.7646e-03,
          5.7372e-03, 3.8491e-03],
         [9.9132e-01, 6.7366e-04, 2.4900e-03,  ..., 9.8271e-01,
          5.7372e-03, 9.8845e-01],
         [2.8936e-03, 9.9798e-01, 9.9253e-01,  ..., 5.7646e-03,
          9.8279e-01, 3.8491e-03]],
        [[9.4269e-03, 5.9574e-04, 2.6931e-03,  ..., 1.8577e-03,
          5.7347e-04, 4.3040e-03],
         [9.4269e-03, 5.9574e-04, 2.6931e-03,  ..., 1.8577e-03,
          5.7347e-04, 4.3040e-03],
         [9.7172e-01, 5.9574e-04, 2.6931e-03,  ..., 1.8577e-03,
          5.7347e-04, 9.8709e-01],
         [9.4269e-03, 9.9821e-01, 9.9192e-01,  ..., 9.9443e-01,
          9.9828e-01, 4.3040e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:41,862 [Process: 0] Synchronize training processes
2024-08-18 15:18:41,862 [Process: 0] Evaluating...
2024-08-18 15:18:41,864 [Process: 0] EPOCH 326:
2024-08-18 15:18:41,866 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:42,987 [Process: 0] Synchronize training processes
2024-08-18 15:18:42,987 [Process: 0] Evaluating...
2024-08-18 15:18:42,989 [Process: 0] EPOCH 327:
2024-08-18 15:18:42,991 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9133e-01, 6.6077e-03, 2.3678e-03,  ..., 1.2103e-04,
          3.0839e-04, 9.9058e-01],
         [2.9962e-03, 6.6077e-03, 2.3678e-03,  ..., 1.2103e-04,
          3.0839e-04, 3.1405e-03],
         [2.8374e-03, 6.6077e-03, 2.3678e-03,  ..., 9.9964e-01,
          9.9907e-01, 3.1405e-03],
         [2.8374e-03, 9.8018e-01, 9.9290e-01,  ..., 1.2103e-04,
          3.0839e-04, 3.1405e-03]],
        [[9.8583e-01, 7.0107e-03, 4.3319e-03,  ..., 1.0616e-03,
          2.1875e-01, 2.0875e-04],
         [5.9411e-03, 7.0107e-03, 4.3319e-03,  ..., 1.0616e-03,
          1.2570e-01, 2.0875e-04],
         [4.1124e-03, 7.0107e-03, 4.3319e-03,  ..., 9.9682e-01,
          4.2326e-01, 9.9937e-01],
         [4.1124e-03, 9.7897e-01, 9.8700e-01,  ..., 1.0616e-03,
          2.3229e-01, 2.0875e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5391e-03, 6.2027e-04, 4.1237e-03,  ..., 3.8744e-03,
          4.2900e-04, 1.0180e-02],
         [4.5391e-03, 6.2027e-04, 4.1237e-03,  ..., 3.8744e-03,
          4.2900e-04, 1.0180e-02],
         [9.8638e-01, 6.2027e-04, 4.1237e-03,  ..., 9.8838e-01,
          4.2900e-04, 9.6946e-01],
         [4.5391e-03, 9.9814e-01, 9.8763e-01,  ..., 3.8744e-03,
          9.9871e-01, 1.0180e-02]],
        [[4.2327e-03, 1.5373e-03, 1.8398e-04,  ..., 1.5521e-03,
          1.2783e-03, 3.5879e-03],
         [4.2327e-03, 1.5373e-03, 1.8398e-04,  ..., 1.5521e-03,
          1.2783e-03, 3.5879e-03],
         [9.8730e-01, 1.5373e-03, 1.8398e-04,  ..., 1.5521e-03,
          1.2783e-03, 9.8924e-01],
         [4.2327e-03, 9.9539e-01, 9.9945e-01,  ..., 9.9534e-01,
          9.9617e-01, 3.5879e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9319e-01, 1.1946e-02, 1.1605e-02,  ..., 2.0091e-04,
          3.3571e-04, 9.9093e-01],
         [2.2689e-03, 1.1946e-02, 1.1605e-02,  ..., 2.0091e-04,
          3.3571e-04, 3.0242e-03],
         [2.2689e-03, 1.1946e-02, 1.1605e-02,  ..., 9.9940e-01,
          9.9899e-01, 3.0242e-03],
         [2.2689e-03, 9.6416e-01, 9.6519e-01,  ..., 2.0091e-04,
          3.3571e-04, 3.0242e-03]],
        [[9.9386e-01, 1.1941e-02, 1.8737e-02,  ..., 7.2284e-04,
          1.8186e-01, 1.8326e-03],
         [2.0473e-03, 9.9606e-03, 1.3223e-02,  ..., 7.2284e-04,
          1.2971e-01, 1.8326e-03],
         [2.0473e-03, 9.9606e-03, 1.4309e-02,  ..., 9.9783e-01,
          3.0637e-01, 9.9450e-01],
         [2.0473e-03, 9.6814e-01, 9.5373e-01,  ..., 7.2284e-04,
          3.8205e-01, 1.8326e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[0.0060, 0.0018, 0.0011,  ..., 0.0031, 0.0038, 0.0070],
         [0.0060, 0.0018, 0.0011,  ..., 0.0031, 0.0038, 0.0070],
         [0.9819, 0.0018, 0.0011,  ..., 0.9907, 0.0038, 0.9789],
         [0.0060, 0.9947, 0.9968,  ..., 0.0031, 0.9885, 0.0070]],
        [[0.0070, 0.0014, 0.0015,  ..., 0.0018, 0.0018, 0.0025],
         [0.0070, 0.0014, 0.0015,  ..., 0.0018, 0.0018, 0.0025],
         [0.9790, 0.0014, 0.0015,  ..., 0.0018, 0.0018, 0.9924],
         [0.0070, 0.9959, 0.9954,  ..., 0.9945, 0.9945, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:44,117 [Process: 0] Synchronize training processes
2024-08-18 15:18:44,117 [Process: 0] Evaluating...
2024-08-18 15:18:44,119 [Process: 0] EPOCH 328:
2024-08-18 15:18:44,121 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9935e-01, 9.8858e-03, 2.1931e-02,  ..., 2.2005e-03,
          2.3697e-04, 9.9852e-01],
         [2.1503e-04, 9.8858e-03, 2.0537e-02,  ..., 2.2005e-03,
          2.3697e-04, 4.9397e-04],
         [2.1503e-04, 9.8858e-03, 2.2805e-02,  ..., 9.9340e-01,
          9.9929e-01, 4.9397e-04],
         [2.1503e-04, 9.7034e-01, 9.3473e-01,  ..., 2.2005e-03,
          2.3697e-04, 4.9397e-04]],
        [[9.8859e-01, 4.1530e-03, 2.8344e-03,  ..., 1.2535e-03,
          2.7751e-02, 1.2231e-03],
         [3.4646e-03, 4.1530e-03, 2.8344e-03,  ..., 1.2535e-03,
          2.2106e-02, 1.2231e-03],
         [4.4795e-03, 4.1530e-03, 2.8344e-03,  ..., 9.9624e-01,
          9.2804e-01, 9.9633e-01],
         [3.4646e-03, 9.8754e-01, 9.9150e-01,  ..., 1.2535e-03,
          2.2106e-02, 1.2231e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4900e-03, 1.2812e-01, 9.3258e-04,  ..., 7.2905e-04,
          7.5069e-04, 3.2305e-03],
         [9.4900e-03, 3.6342e-01, 9.3258e-04,  ..., 7.2905e-04,
          7.5069e-04, 3.2305e-03],
         [9.7153e-01, 9.5297e-02, 9.3258e-04,  ..., 9.9781e-01,
          7.5069e-04, 9.9031e-01],
         [9.4900e-03, 4.1316e-01, 9.9720e-01,  ..., 7.2905e-04,
          9.9775e-01, 3.2305e-03]],
        [[2.0726e-02, 3.3496e-03, 5.0352e-04,  ..., 2.2668e-03,
          1.2797e-03, 7.5684e-03],
         [2.0159e-02, 3.3496e-03, 5.0352e-04,  ..., 2.1785e-03,
          1.2797e-03, 7.5684e-03],
         [9.3492e-01, 3.3496e-03, 5.0352e-04,  ..., 2.1785e-03,
          1.2797e-03, 9.7729e-01],
         [2.4193e-02, 9.8995e-01, 9.9849e-01,  ..., 9.9338e-01,
          9.9616e-01, 7.5684e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9927e-01, 6.6758e-03, 1.4709e-02,  ..., 3.2399e-04,
          2.3437e-03, 9.9932e-01],
         [2.4323e-04, 6.6758e-03, 1.4709e-02,  ..., 3.2399e-04,
          2.3437e-03, 2.2541e-04],
         [2.4323e-04, 6.6758e-03, 1.6016e-02,  ..., 9.9903e-01,
          9.9297e-01, 2.2541e-04],
         [2.4323e-04, 9.7997e-01, 9.5457e-01,  ..., 3.2399e-04,
          2.3437e-03, 2.2541e-04]],
        [[9.7728e-01, 1.1894e-02, 3.9564e-03,  ..., 5.2686e-04,
          2.1543e-01, 2.5315e-03],
         [8.9679e-03, 1.0994e-02, 3.9564e-03,  ..., 5.2686e-04,
          1.4669e-01, 2.5315e-03],
         [6.8780e-03, 1.0994e-02, 3.9564e-03,  ..., 9.9842e-01,
          2.8668e-01, 9.9241e-01],
         [6.8780e-03, 9.6612e-01, 9.8813e-01,  ..., 5.2686e-04,
          3.5121e-01, 2.5315e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:18:45,247 [Process: 0] Synchronize training processes
2024-08-18 15:18:45,247 [Process: 0] Evaluating...
2024-08-18 15:18:45,249 [Process: 0] EPOCH 329:
2024-08-18 15:18:45,251 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:46,372 [Process: 0] Synchronize training processes
2024-08-18 15:18:46,373 [Process: 0] Evaluating...
2024-08-18 15:18:46,374 [Process: 0] EPOCH 330:
2024-08-18 15:18:46,376 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.0467e-03, 2.2916e-03, 1.7486e-03,  ..., 3.3280e-03,
          8.3948e-04, 7.6438e-03],
         [7.0661e-03, 2.2916e-03, 1.7486e-03,  ..., 3.3280e-03,
          8.3948e-04, 7.6438e-03],
         [9.7782e-01, 2.2916e-03, 1.7486e-03,  ..., 9.9002e-01,
          8.3948e-04, 9.7707e-01],
         [7.0661e-03, 9.9313e-01, 9.9475e-01,  ..., 3.3280e-03,
          9.9748e-01, 7.6438e-03]],
        [[1.0176e-02, 2.3891e-03, 5.4012e-04,  ..., 1.8094e-03,
          7.9639e-04, 9.9493e-03],
         [9.5855e-03, 2.3891e-03, 5.4012e-04,  ..., 1.8094e-03,
          7.9639e-04, 9.9493e-03],
         [9.7065e-01, 2.3891e-03, 5.4012e-04,  ..., 1.8094e-03,
          7.9639e-04, 9.7015e-01],
         [9.5855e-03, 9.9283e-01, 9.9838e-01,  ..., 9.9457e-01,
          9.9761e-01, 9.9493e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9944e-01, 7.1370e-03, 4.3618e-03,  ..., 1.3818e-04,
          1.9885e-03, 9.9952e-01],
         [1.8552e-04, 7.1370e-03, 4.3618e-03,  ..., 1.3818e-04,
          1.9885e-03, 1.5885e-04],
         [1.8552e-04, 7.1370e-03, 4.3618e-03,  ..., 9.9959e-01,
          9.9403e-01, 1.5885e-04],
         [1.8552e-04, 9.7859e-01, 9.8691e-01,  ..., 1.3818e-04,
          1.9885e-03, 1.5885e-04]],
        [[9.9685e-01, 1.9441e-03, 5.4561e-03,  ..., 1.1917e-03,
          1.5394e-01, 4.9080e-04],
         [1.0495e-03, 1.9441e-03, 5.4561e-03,  ..., 1.1917e-03,
          1.5332e-01, 4.9080e-04],
         [1.0495e-03, 1.9441e-03, 5.4561e-03,  ..., 9.9642e-01,
          2.7726e-01, 9.9853e-01],
         [1.0495e-03, 9.9417e-01, 9.8363e-01,  ..., 1.1917e-03,
          4.1548e-01, 4.9080e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8866e-03, 4.9762e-04, 5.7056e-03,  ..., 1.2216e-02,
          4.6271e-04, 2.5118e-02],
         [1.8866e-03, 4.9762e-04, 5.7056e-03,  ..., 1.2216e-02,
          4.6271e-04, 1.9368e-02],
         [9.9434e-01, 4.9762e-04, 5.7056e-03,  ..., 9.6335e-01,
          4.6271e-04, 9.3615e-01],
         [1.8866e-03, 9.9851e-01, 9.8288e-01,  ..., 1.2216e-02,
          9.9861e-01, 1.9368e-02]],
        [[1.8874e-02, 5.5836e-04, 5.3542e-04,  ..., 6.2686e-04,
          9.1043e-04, 4.7276e-03],
         [1.8754e-02, 5.5836e-04, 5.3542e-04,  ..., 6.2686e-04,
          9.1043e-04, 4.7276e-03],
         [9.4362e-01, 5.5836e-04, 5.3542e-04,  ..., 6.2686e-04,
          9.1043e-04, 9.8582e-01],
         [1.8754e-02, 9.9832e-01, 9.9839e-01,  ..., 9.9812e-01,
          9.9727e-01, 4.7276e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9916e-01, 1.4394e-02, 2.6586e-03,  ..., 5.9478e-04,
          2.3990e-03, 9.9851e-01],
         [2.8156e-04, 1.4394e-02, 2.6586e-03,  ..., 5.9478e-04,
          2.3990e-03, 4.9824e-04],
         [2.8156e-04, 1.7587e-02, 2.6586e-03,  ..., 9.9822e-01,
          9.9280e-01, 4.9824e-04],
         [2.8156e-04, 9.5362e-01, 9.9202e-01,  ..., 5.9478e-04,
          2.3990e-03, 4.9824e-04]],
        [[9.9594e-01, 3.0719e-03, 2.5168e-02,  ..., 6.7827e-04,
          2.1941e-01, 8.5342e-04],
         [1.3542e-03, 3.0719e-03, 2.5168e-02,  ..., 6.7827e-04,
          1.1277e-01, 8.5342e-04],
         [1.3542e-03, 3.0719e-03, 2.8357e-02,  ..., 9.9797e-01,
          5.0953e-01, 9.9744e-01],
         [1.3542e-03, 9.9078e-01, 9.2131e-01,  ..., 6.7827e-04,
          1.5829e-01, 8.5342e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:47,501 [Process: 0] Synchronize training processes
2024-08-18 15:18:47,501 [Process: 0] Evaluating...
2024-08-18 15:18:47,503 [Process: 0] EPOCH 331:
2024-08-18 15:18:47,505 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:48,620 [Process: 0] Synchronize training processes
2024-08-18 15:18:48,620 [Process: 0] Evaluating...
2024-08-18 15:18:48,624 [Process: 0] EPOCH 332:
2024-08-18 15:18:48,626 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6467e-02, 3.9423e-04, 1.5814e-03,  ..., 3.0339e-03,
          8.6339e-05, 1.4073e-02],
         [1.5452e-02, 3.9423e-04, 1.5814e-03,  ..., 3.0339e-03,
          8.6339e-05, 1.1849e-02],
         [9.5263e-01, 3.9423e-04, 1.5814e-03,  ..., 9.9090e-01,
          8.6339e-05, 9.6223e-01],
         [1.5452e-02, 9.9882e-01, 9.9526e-01,  ..., 3.0339e-03,
          9.9974e-01, 1.1849e-02]],
        [[4.3569e-03, 2.9818e-03, 2.1027e-03,  ..., 1.9544e-03,
          1.9318e-04, 5.7696e-03],
         [4.3569e-03, 2.9818e-03, 2.1027e-03,  ..., 1.9544e-03,
          1.9318e-04, 5.7696e-03],
         [9.8693e-01, 2.9818e-03, 2.1027e-03,  ..., 1.9544e-03,
          1.9318e-04, 9.8269e-01],
         [4.3569e-03, 9.9105e-01, 9.9369e-01,  ..., 9.9414e-01,
          9.9942e-01, 5.7696e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9745e-01, 9.4136e-03, 7.4360e-03,  ..., 4.6403e-04,
          2.7821e-03, 9.9868e-01],
         [8.5035e-04, 9.4136e-03, 7.4360e-03,  ..., 4.6403e-04,
          2.7821e-03, 4.3869e-04],
         [8.5035e-04, 9.4136e-03, 7.4360e-03,  ..., 9.9861e-01,
          9.9165e-01, 4.3869e-04],
         [8.5035e-04, 9.7176e-01, 9.7769e-01,  ..., 4.6403e-04,
          2.7821e-03, 4.3869e-04]],
        [[9.9197e-01, 2.9171e-03, 6.9488e-03,  ..., 1.1287e-03,
          1.5697e-01, 3.1675e-03],
         [2.6757e-03, 2.9171e-03, 6.9488e-03,  ..., 1.1287e-03,
          1.5276e-01, 3.1675e-03],
         [2.6757e-03, 2.9171e-03, 6.9488e-03,  ..., 9.9661e-01,
          2.9375e-01, 9.9050e-01],
         [2.6757e-03, 9.9125e-01, 9.7915e-01,  ..., 1.1287e-03,
          3.9652e-01, 3.1675e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4309e-03, 8.6360e-04, 6.8712e-03,  ..., 4.2774e-03,
          1.4257e-04, 8.2878e-03],
         [1.4309e-03, 8.6360e-04, 6.1926e-03,  ..., 4.2774e-03,
          1.4257e-04, 8.2878e-03],
         [9.9571e-01, 8.6360e-04, 6.1926e-03,  ..., 9.8717e-01,
          1.4257e-04, 9.7514e-01],
         [1.4309e-03, 9.9741e-01, 9.8074e-01,  ..., 4.2774e-03,
          9.9957e-01, 8.2878e-03]],
        [[1.1526e-02, 2.1124e-03, 1.9606e-03,  ..., 8.3523e-04,
          1.5450e-03, 7.6597e-03],
         [1.1526e-02, 2.1124e-03, 1.9606e-03,  ..., 8.3523e-04,
          1.5450e-03, 7.6597e-03],
         [9.6542e-01, 2.1124e-03, 1.9606e-03,  ..., 8.3523e-04,
          1.5450e-03, 9.7702e-01],
         [1.1526e-02, 9.9366e-01, 9.9412e-01,  ..., 9.9749e-01,
          9.9537e-01, 7.6597e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9908e-01, 9.7805e-03, 1.2255e-03,  ..., 1.3514e-04,
          1.2049e-04, 9.9598e-01],
         [3.0534e-04, 9.7805e-03, 1.2255e-03,  ..., 1.3514e-04,
          1.2049e-04, 1.3403e-03],
         [3.0534e-04, 1.1622e-02, 1.2255e-03,  ..., 9.9959e-01,
          9.9964e-01, 1.3403e-03],
         [3.0534e-04, 9.6882e-01, 9.9632e-01,  ..., 1.3514e-04,
          1.2049e-04, 1.3403e-03]],
        [[9.9583e-01, 5.2332e-03, 4.3013e-03,  ..., 5.1699e-04,
          1.1075e-01, 3.8715e-03],
         [1.4738e-03, 5.2332e-03, 4.3013e-03,  ..., 5.1699e-04,
          1.0736e-01, 3.8715e-03],
         [1.3489e-03, 5.2332e-03, 4.3013e-03,  ..., 9.9845e-01,
          1.7731e-01, 9.8839e-01],
         [1.3489e-03, 9.8430e-01, 9.8710e-01,  ..., 5.1699e-04,
          6.0458e-01, 3.8715e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:49,741 [Process: 0] Synchronize training processes
2024-08-18 15:18:49,741 [Process: 0] Evaluating...
2024-08-18 15:18:49,743 [Process: 0] EPOCH 333:
2024-08-18 15:18:49,744 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:50,872 [Process: 0] Synchronize training processes
2024-08-18 15:18:50,872 [Process: 0] Evaluating...
2024-08-18 15:18:50,873 [Process: 0] EPOCH 334:
2024-08-18 15:18:50,875 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0523e-03, 6.3535e-05, 1.3649e-03,  ..., 4.7819e-03,
          2.6264e-03, 4.6272e-03],
         [3.0523e-03, 6.3535e-05, 1.3649e-03,  ..., 4.7819e-03,
          2.6264e-03, 4.6272e-03],
         [9.9084e-01, 6.3535e-05, 1.3649e-03,  ..., 9.8565e-01,
          2.6264e-03, 9.8612e-01],
         [3.0523e-03, 9.9981e-01, 9.9591e-01,  ..., 4.7819e-03,
          9.9212e-01, 4.6272e-03]],
        [[8.5411e-03, 6.9798e-04, 2.2448e-03,  ..., 9.5813e-04,
          9.3464e-04, 4.1122e-02],
         [8.5411e-03, 6.9798e-04, 2.2448e-03,  ..., 9.5813e-04,
          9.3464e-04, 3.4170e-02],
         [9.7438e-01, 6.9798e-04, 2.2448e-03,  ..., 9.5813e-04,
          9.3464e-04, 8.7204e-01],
         [8.5411e-03, 9.9791e-01, 9.9327e-01,  ..., 9.9713e-01,
          9.9720e-01, 5.2665e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9622e-01, 4.1268e-03, 6.7430e-03,  ..., 6.0240e-04,
          1.2092e-04, 9.9912e-01],
         [1.2603e-03, 4.1268e-03, 6.7430e-03,  ..., 6.0240e-04,
          1.2092e-04, 2.9200e-04],
         [1.2603e-03, 4.1268e-03, 6.7430e-03,  ..., 9.9819e-01,
          9.9964e-01, 2.9200e-04],
         [1.2603e-03, 9.8762e-01, 9.7977e-01,  ..., 6.0240e-04,
          1.2092e-04, 2.9200e-04]],
        [[9.9328e-01, 3.7516e-03, 7.2262e-03,  ..., 1.8213e-03,
          1.9377e-01, 1.0948e-03],
         [2.3120e-03, 3.7516e-03, 7.2262e-03,  ..., 1.8213e-03,
          6.1203e-02, 1.0948e-03],
         [2.2050e-03, 3.7516e-03, 7.2262e-03,  ..., 9.9454e-01,
          6.8836e-01, 9.9672e-01],
         [2.2050e-03, 9.8875e-01, 9.7832e-01,  ..., 1.8213e-03,
          5.6664e-02, 1.0948e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2515e-03, 7.2377e-04, 1.8470e-03,  ..., 2.4624e-03,
          2.5692e-04, 7.8287e-03],
         [4.2515e-03, 7.2377e-04, 1.8470e-03,  ..., 2.4624e-03,
          2.5692e-04, 7.8287e-03],
         [9.8725e-01, 7.2377e-04, 1.8470e-03,  ..., 9.9261e-01,
          2.5692e-04, 9.7651e-01],
         [4.2515e-03, 9.9783e-01, 9.9446e-01,  ..., 2.4624e-03,
          9.9923e-01, 7.8287e-03]],
        [[6.0754e-03, 9.1333e-04, 1.6460e-03,  ..., 2.0048e-04,
          7.0177e-04, 1.9294e-02],
         [6.0754e-03, 9.1333e-04, 1.6460e-03,  ..., 2.0048e-04,
          7.0177e-04, 1.7863e-02],
         [9.8177e-01, 9.1333e-04, 1.6460e-03,  ..., 2.0048e-04,
          7.0177e-04, 9.4334e-01],
         [6.0754e-03, 9.9726e-01, 9.9506e-01,  ..., 9.9940e-01,
          9.9789e-01, 1.9506e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:51,994 [Process: 0] Synchronize training processes
2024-08-18 15:18:51,994 [Process: 0] Evaluating...
2024-08-18 15:18:51,996 [Process: 0] EPOCH 335:
2024-08-18 15:18:51,998 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:53,121 [Process: 0] Synchronize training processes
2024-08-18 15:18:53,121 [Process: 0] Evaluating...
2024-08-18 15:18:53,123 [Process: 0] EPOCH 336:
2024-08-18 15:18:53,125 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9805e-01, 2.3575e-02, 4.8305e-03,  ..., 9.4475e-05,
          1.7822e-03, 9.9813e-01],
         [6.4995e-04, 2.3575e-02, 4.8305e-03,  ..., 9.4475e-05,
          1.7822e-03, 6.2480e-04],
         [6.4995e-04, 3.9913e-02, 4.8305e-03,  ..., 9.9972e-01,
          9.9465e-01, 6.2480e-04],
         [6.4995e-04, 9.1294e-01, 9.8551e-01,  ..., 9.4475e-05,
          1.7822e-03, 6.2480e-04]],
        [[9.9785e-01, 5.4371e-03, 4.4955e-03,  ..., 4.4365e-04,
          3.2596e-01, 7.3347e-04],
         [7.1625e-04, 5.4371e-03, 4.4955e-03,  ..., 4.4365e-04,
          1.2916e-01, 7.3347e-04],
         [7.1625e-04, 5.4371e-03, 4.4955e-03,  ..., 9.9867e-01,
          3.9166e-01, 9.9780e-01],
         [7.1625e-04, 9.8369e-01, 9.8651e-01,  ..., 4.4365e-04,
          1.5321e-01, 7.3347e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4445e-03, 2.5587e-04, 5.6189e-04,  ..., 2.0219e-02,
          1.6293e-03, 9.2356e-03],
         [3.4445e-03, 2.5587e-04, 5.6189e-04,  ..., 2.0219e-02,
          1.6293e-03, 8.8286e-03],
         [9.8967e-01, 2.5587e-04, 5.6189e-04,  ..., 9.3395e-01,
          1.6293e-03, 9.7311e-01],
         [3.4445e-03, 9.9923e-01, 9.9831e-01,  ..., 2.5611e-02,
          9.9511e-01, 8.8286e-03]],
        [[8.6590e-03, 3.4945e-03, 3.0669e-04,  ..., 1.8276e-03,
          7.1385e-04, 1.0674e-02],
         [8.6590e-03, 3.4945e-03, 3.0669e-04,  ..., 1.8276e-03,
          7.1385e-04, 1.0674e-02],
         [9.7402e-01, 3.4945e-03, 3.0669e-04,  ..., 1.8276e-03,
          7.1385e-04, 9.6798e-01],
         [8.6590e-03, 9.8952e-01, 9.9908e-01,  ..., 9.9452e-01,
          9.9786e-01, 1.0674e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9974e-01, 1.4696e-02, 1.4468e-02,  ..., 2.0747e-03,
          3.8754e-04, 9.9975e-01],
         [8.7496e-05, 1.4696e-02, 1.4468e-02,  ..., 2.0747e-03,
          3.8754e-04, 8.4795e-05],
         [8.7496e-05, 1.4696e-02, 1.4468e-02,  ..., 9.9378e-01,
          9.9884e-01, 8.4795e-05],
         [8.7496e-05, 9.5591e-01, 9.5660e-01,  ..., 2.0747e-03,
          3.8754e-04, 8.4795e-05]],
        [[9.9416e-01, 3.2449e-03, 5.2073e-03,  ..., 2.5896e-04,
          2.7531e-01, 1.0167e-04],
         [1.9468e-03, 3.2449e-03, 5.2073e-03,  ..., 2.5896e-04,
          1.1995e-01, 1.0167e-04],
         [1.9468e-03, 3.2449e-03, 5.2073e-03,  ..., 9.9922e-01,
          4.5321e-01, 9.9970e-01],
         [1.9468e-03, 9.9027e-01, 9.8438e-01,  ..., 2.5896e-04,
          1.5153e-01, 1.0167e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9487e-02, 2.3433e-03, 2.9544e-04,  ..., 8.2090e-03,
          5.0664e-04, 6.3468e-03],
         [1.5994e-02, 2.3433e-03, 2.9544e-04,  ..., 8.2090e-03,
          5.0664e-04, 6.3468e-03],
         [9.4760e-01, 2.3433e-03, 2.9544e-04,  ..., 9.7537e-01,
          5.0664e-04, 9.8096e-01],
         [1.6920e-02, 9.9297e-01, 9.9911e-01,  ..., 8.2090e-03,
          9.9848e-01, 6.3468e-03]],
        [[7.4561e-03, 2.7405e-03, 1.0292e-03,  ..., 1.2475e-03,
          2.6022e-03, 1.6865e-02],
         [7.1403e-03, 2.7405e-03, 1.0292e-03,  ..., 1.2475e-03,
          2.6022e-03, 1.6865e-02],
         [9.7826e-01, 2.7405e-03, 1.0292e-03,  ..., 1.2475e-03,
          2.6022e-03, 9.4904e-01],
         [7.1403e-03, 9.9178e-01, 9.9691e-01,  ..., 9.9626e-01,
          9.9219e-01, 1.7231e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 15:18:54,260 [Process: 0] Synchronize training processes
2024-08-18 15:18:54,260 [Process: 0] Evaluating...
2024-08-18 15:18:54,262 [Process: 0] EPOCH 337:
2024-08-18 15:18:54,263 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9897e-01, 6.1464e-03, 4.4603e-03,  ..., 1.0835e-04,
          4.4479e-04, 9.9850e-01],
         [3.4248e-04, 6.1464e-03, 4.4603e-03,  ..., 1.0835e-04,
          4.4479e-04, 5.0092e-04],
         [3.4248e-04, 6.1464e-03, 4.4603e-03,  ..., 9.9968e-01,
          9.9867e-01, 5.0092e-04],
         [3.4248e-04, 9.8156e-01, 9.8662e-01,  ..., 1.0835e-04,
          4.4479e-04, 5.0092e-04]],
        [[9.9651e-01, 7.8161e-03, 6.6280e-03,  ..., 1.9750e-03,
          5.5192e-03, 5.6691e-04],
         [1.1633e-03, 7.8161e-03, 6.6280e-03,  ..., 1.9750e-03,
          5.5192e-03, 5.6691e-04],
         [1.1633e-03, 8.2670e-03, 6.6280e-03,  ..., 9.9408e-01,
          9.8344e-01, 9.9830e-01],
         [1.1633e-03, 9.7610e-01, 9.8012e-01,  ..., 1.9750e-03,
          5.5192e-03, 5.6691e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0956e-02, 1.0185e-03, 3.9461e-03,  ..., 3.9660e-03,
          1.9063e-03, 2.4432e-03],
         [1.0956e-02, 1.0185e-03, 3.9461e-03,  ..., 3.9660e-03,
          1.9063e-03, 2.4432e-03],
         [9.6713e-01, 1.0185e-03, 3.9461e-03,  ..., 9.8810e-01,
          1.9063e-03, 9.9267e-01],
         [1.0956e-02, 9.9694e-01, 9.8816e-01,  ..., 3.9660e-03,
          9.9428e-01, 2.4432e-03]],
        [[3.9008e-03, 2.9448e-04, 9.2008e-04,  ..., 2.1333e-03,
          4.6567e-04, 1.0997e-02],
         [3.9008e-03, 2.9448e-04, 9.2008e-04,  ..., 2.1333e-03,
          4.6567e-04, 1.0997e-02],
         [9.8830e-01, 2.9448e-04, 9.2008e-04,  ..., 2.1333e-03,
          4.6567e-04, 9.6658e-01],
         [3.9008e-03, 9.9912e-01, 9.9724e-01,  ..., 9.9360e-01,
          9.9860e-01, 1.1426e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9379e-01, 8.0787e-03, 5.8113e-03,  ..., 3.4332e-04,
          1.5624e-04, 9.9064e-01],
         [2.0686e-03, 8.0787e-03, 5.8113e-03,  ..., 3.4332e-04,
          1.5624e-04, 3.1211e-03],
         [2.0686e-03, 8.4150e-03, 5.8113e-03,  ..., 9.9897e-01,
          9.9953e-01, 3.1211e-03],
         [2.0686e-03, 9.7543e-01, 9.8257e-01,  ..., 3.4332e-04,
          1.5624e-04, 3.1211e-03]],
        [[9.9336e-01, 3.5988e-03, 1.2316e-02,  ..., 2.5729e-03,
          2.4270e-02, 7.1491e-04],
         [2.2135e-03, 3.5988e-03, 1.3426e-02,  ..., 2.5729e-03,
          2.7312e-02, 7.1491e-04],
         [2.2135e-03, 3.5988e-03, 1.2316e-02,  ..., 9.9228e-01,
          9.2517e-01, 9.9786e-01],
         [2.2135e-03, 9.8920e-01, 9.6194e-01,  ..., 2.5729e-03,
          2.3244e-02, 7.1491e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:55,383 [Process: 0] Synchronize training processes
2024-08-18 15:18:55,383 [Process: 0] Evaluating...
2024-08-18 15:18:55,385 [Process: 0] EPOCH 338:
2024-08-18 15:18:55,387 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:56,516 [Process: 0] Synchronize training processes
2024-08-18 15:18:56,516 [Process: 0] Evaluating...
2024-08-18 15:18:56,518 [Process: 0] EPOCH 339:
2024-08-18 15:18:56,520 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0605e-03, 2.2667e-04, 4.9990e-03,  ..., 6.7459e-03,
          1.2425e-04, 4.7762e-03],
         [2.0605e-03, 2.2667e-04, 4.9990e-03,  ..., 6.4525e-03,
          1.2425e-04, 4.7762e-03],
         [9.9382e-01, 2.2667e-04, 4.9990e-03,  ..., 9.8035e-01,
          1.2425e-04, 9.8567e-01],
         [2.0605e-03, 9.9932e-01, 9.8500e-01,  ..., 6.4525e-03,
          9.9963e-01, 4.7762e-03]],
        [[9.8643e-03, 4.3783e-03, 7.0969e-04,  ..., 5.8490e-03,
          9.2840e-04, 2.6385e-02],
         [9.9227e-03, 4.3783e-03, 7.0969e-04,  ..., 5.8490e-03,
          9.2840e-04, 2.3006e-02],
         [9.7035e-01, 4.3783e-03, 7.0969e-04,  ..., 5.8490e-03,
          9.2840e-04, 9.1855e-01],
         [9.8643e-03, 9.8686e-01, 9.9787e-01,  ..., 9.8245e-01,
          9.9721e-01, 3.2063e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9977e-01, 7.7350e-03, 9.6068e-03,  ..., 7.5376e-05,
          8.9864e-04, 9.9831e-01],
         [7.5345e-05, 7.7350e-03, 9.6068e-03,  ..., 7.5376e-05,
          8.9864e-04, 5.6492e-04],
         [7.5345e-05, 8.0850e-03, 9.7276e-03,  ..., 9.9977e-01,
          9.9730e-01, 5.6492e-04],
         [7.5345e-05, 9.7645e-01, 9.7106e-01,  ..., 7.5376e-05,
          8.9864e-04, 5.6492e-04]],
        [[9.8915e-01, 6.2004e-03, 5.4582e-03,  ..., 1.5313e-03,
          1.1269e-02, 4.8310e-04],
         [3.6166e-03, 6.2004e-03, 5.4582e-03,  ..., 1.5313e-03,
          1.0146e-02, 4.8310e-04],
         [3.6166e-03, 6.2004e-03, 5.4582e-03,  ..., 9.9541e-01,
          9.6844e-01, 9.9855e-01],
         [3.6166e-03, 9.8140e-01, 9.8363e-01,  ..., 1.5313e-03,
          1.0146e-02, 4.8310e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7732e-03, 2.6537e-04, 5.2618e-03,  ..., 2.9012e-03,
          1.7587e-04, 4.3730e-03],
         [3.7732e-03, 2.6537e-04, 5.2618e-03,  ..., 2.9012e-03,
          1.7587e-04, 4.3730e-03],
         [9.8868e-01, 2.6537e-04, 5.2618e-03,  ..., 9.9130e-01,
          1.7587e-04, 9.8688e-01],
         [3.7732e-03, 9.9920e-01, 9.8421e-01,  ..., 2.9012e-03,
          9.9947e-01, 4.3730e-03]],
        [[3.2238e-03, 1.9506e-03, 6.3685e-04,  ..., 1.3731e-03,
          6.7686e-04, 9.6588e-03],
         [3.2238e-03, 1.9506e-03, 6.3685e-04,  ..., 1.3731e-03,
          6.7686e-04, 9.6588e-03],
         [9.9033e-01, 1.9506e-03, 6.3685e-04,  ..., 1.3731e-03,
          6.7686e-04, 9.7102e-01],
         [3.2238e-03, 9.9415e-01, 9.9809e-01,  ..., 9.9588e-01,
          9.9797e-01, 9.6588e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9928e-01, 5.1833e-03, 4.0424e-03,  ..., 3.6765e-04,
          5.7210e-04, 9.8951e-01],
         [2.3976e-04, 5.1833e-03, 4.0424e-03,  ..., 3.6765e-04,
          5.7210e-04, 3.4969e-03],
         [2.3976e-04, 5.1833e-03, 4.0424e-03,  ..., 9.9890e-01,
          9.9828e-01, 3.4969e-03],
         [2.3976e-04, 9.8445e-01, 9.8787e-01,  ..., 3.6765e-04,
          5.7210e-04, 3.4969e-03]],
        [[9.9877e-01, 2.4250e-03, 2.3113e-02,  ..., 9.3463e-04,
          1.5142e-02, 9.5102e-04],
         [4.0842e-04, 2.4250e-03, 1.8961e-02,  ..., 9.3463e-04,
          1.1746e-02, 9.5102e-04],
         [4.0842e-04, 2.4250e-03, 2.3572e-02,  ..., 9.9720e-01,
          9.6137e-01, 9.9715e-01],
         [4.0842e-04, 9.9273e-01, 9.3435e-01,  ..., 9.3463e-04,
          1.1746e-02, 9.5102e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:18:57,639 [Process: 0] Synchronize training processes
2024-08-18 15:18:57,639 [Process: 0] Evaluating...
2024-08-18 15:18:57,641 [Process: 0] EPOCH 340:
2024-08-18 15:18:57,643 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:18:58,762 [Process: 0] Synchronize training processes
2024-08-18 15:18:58,762 [Process: 0] Evaluating...
2024-08-18 15:18:58,764 [Process: 0] EPOCH 341:
2024-08-18 15:18:58,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.1373e-03, 8.6742e-04, 5.3101e-03,  ..., 2.9346e-03,
          8.0759e-04, 2.1250e-02],
         [5.1373e-03, 8.6742e-04, 5.3101e-03,  ..., 2.9346e-03,
          8.0759e-04, 2.1250e-02],
         [9.8459e-01, 8.6742e-04, 5.3101e-03,  ..., 9.9120e-01,
          8.0759e-04, 9.3054e-01],
         [5.1373e-03, 9.9740e-01, 9.8407e-01,  ..., 2.9346e-03,
          9.9758e-01, 2.6962e-02]],
        [[6.7270e-03, 7.3991e-04, 1.1991e-03,  ..., 8.6598e-04,
          1.2678e-03, 7.4702e-03],
         [6.7270e-03, 7.3991e-04, 1.1991e-03,  ..., 8.6598e-04,
          1.2678e-03, 7.4702e-03],
         [9.7982e-01, 7.3991e-04, 1.1991e-03,  ..., 8.6598e-04,
          1.2678e-03, 9.7759e-01],
         [6.7270e-03, 9.9778e-01, 9.9640e-01,  ..., 9.9740e-01,
          9.9620e-01, 7.4702e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9902e-01, 1.1096e-02, 3.2310e-03,  ..., 8.1411e-04,
          1.2257e-03, 9.9600e-01],
         [3.2714e-04, 1.1096e-02, 3.2310e-03,  ..., 8.1411e-04,
          1.2257e-03, 1.3341e-03],
         [3.2714e-04, 1.1096e-02, 3.2310e-03,  ..., 9.9756e-01,
          9.9632e-01, 1.3341e-03],
         [3.2714e-04, 9.6671e-01, 9.9031e-01,  ..., 8.1411e-04,
          1.2257e-03, 1.3341e-03]],
        [[9.1059e-01, 9.2575e-03, 4.5313e-03,  ..., 9.9789e-04,
          1.9701e-01, 1.4055e-03],
         [2.7735e-02, 9.2575e-03, 4.5313e-03,  ..., 9.9789e-04,
          5.8866e-02, 1.4055e-03],
         [3.9485e-02, 9.2575e-03, 4.5313e-03,  ..., 9.9701e-01,
          6.6816e-01, 9.9578e-01],
         [2.2188e-02, 9.7223e-01, 9.8641e-01,  ..., 9.9789e-04,
          7.5970e-02, 1.4055e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2277e-03, 1.7458e-04, 6.4652e-03,  ..., 3.8739e-03,
          2.6848e-04, 3.9805e-03],
         [2.2277e-03, 1.7458e-04, 6.4652e-03,  ..., 3.8739e-03,
          2.6848e-04, 3.9805e-03],
         [9.9332e-01, 1.7458e-04, 6.4652e-03,  ..., 9.8838e-01,
          2.6848e-04, 9.8806e-01],
         [2.2277e-03, 9.9948e-01, 9.8060e-01,  ..., 3.8739e-03,
          9.9919e-01, 3.9805e-03]],
        [[3.4248e-03, 4.7333e-04, 2.2478e-03,  ..., 1.4772e-03,
          2.6152e-03, 1.1979e-02],
         [3.4248e-03, 4.7333e-04, 2.2478e-03,  ..., 1.4772e-03,
          2.6152e-03, 1.1979e-02],
         [9.8973e-01, 4.7333e-04, 2.2478e-03,  ..., 1.4772e-03,
          2.6152e-03, 9.6406e-01],
         [3.4248e-03, 9.9858e-01, 9.9326e-01,  ..., 9.9557e-01,
          9.9215e-01, 1.1979e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:18:59,891 [Process: 0] Synchronize training processes
2024-08-18 15:18:59,891 [Process: 0] Evaluating...
2024-08-18 15:18:59,895 [Process: 0] EPOCH 342:
2024-08-18 15:18:59,897 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:01,026 [Process: 0] Synchronize training processes
2024-08-18 15:19:01,026 [Process: 0] Evaluating...
2024-08-18 15:19:01,028 [Process: 0] EPOCH 343:
2024-08-18 15:19:01,029 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9927e-01, 3.2944e-03, 4.9649e-03,  ..., 9.3280e-05,
          2.5247e-03, 9.9904e-01],
         [2.4333e-04, 3.2944e-03, 4.9649e-03,  ..., 9.3280e-05,
          2.5247e-03, 3.2022e-04],
         [2.4333e-04, 3.2944e-03, 4.9649e-03,  ..., 9.9972e-01,
          9.9243e-01, 3.2022e-04],
         [2.4333e-04, 9.9012e-01, 9.8511e-01,  ..., 9.3280e-05,
          2.5247e-03, 3.2022e-04]],
        [[9.9891e-01, 5.5156e-03, 5.9794e-03,  ..., 5.6220e-04,
          6.1233e-01, 1.6002e-03],
         [3.6245e-04, 5.5156e-03, 5.9794e-03,  ..., 5.6220e-04,
          5.9592e-02, 1.6002e-03],
         [3.6245e-04, 5.5156e-03, 5.9794e-03,  ..., 9.9831e-01,
          2.5846e-01, 9.9520e-01],
         [3.6245e-04, 9.8345e-01, 9.8206e-01,  ..., 5.6220e-04,
          6.9623e-02, 1.6002e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4499e-03, 1.2540e-03, 4.8049e-03,  ..., 6.1811e-03,
          2.3075e-04, 7.3170e-03],
         [1.4499e-03, 1.2540e-03, 4.8049e-03,  ..., 6.1811e-03,
          2.3075e-04, 7.3170e-03],
         [9.9565e-01, 1.2540e-03, 4.8049e-03,  ..., 9.8146e-01,
          2.3075e-04, 9.7805e-01],
         [1.4499e-03, 9.9624e-01, 9.8559e-01,  ..., 6.1811e-03,
          9.9931e-01, 7.3170e-03]],
        [[7.5544e-03, 8.8574e-04, 2.5900e-03,  ..., 1.5643e-03,
          2.2864e-03, 7.2912e-03],
         [7.5544e-03, 8.8574e-04, 2.5900e-03,  ..., 1.5643e-03,
          2.2864e-03, 7.2912e-03],
         [9.7734e-01, 8.8574e-04, 2.5900e-03,  ..., 1.5643e-03,
          2.2864e-03, 9.7813e-01],
         [7.5544e-03, 9.9734e-01, 9.9223e-01,  ..., 9.9531e-01,
          9.9314e-01, 7.2912e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9970e-01, 4.4988e-03, 5.6202e-03,  ..., 2.2854e-04,
          2.2565e-04, 9.9679e-01],
         [1.0058e-04, 4.4988e-03, 5.6202e-03,  ..., 2.2854e-04,
          2.2565e-04, 1.0706e-03],
         [1.0058e-04, 4.4988e-03, 5.6202e-03,  ..., 9.9931e-01,
          9.9932e-01, 1.0706e-03],
         [1.0058e-04, 9.8650e-01, 9.8314e-01,  ..., 2.2854e-04,
          2.2565e-04, 1.0706e-03]],
        [[9.9891e-01, 2.6155e-02, 3.9688e-03,  ..., 2.9694e-04,
          4.5779e-01, 9.5890e-04],
         [3.6460e-04, 2.5863e-02, 3.9688e-03,  ..., 2.9694e-04,
          7.2493e-02, 9.5890e-04],
         [3.6460e-04, 3.0857e-02, 3.9688e-03,  ..., 9.9911e-01,
          3.8997e-01, 9.9712e-01],
         [3.6460e-04, 9.1712e-01, 9.8809e-01,  ..., 2.9694e-04,
          7.9751e-02, 9.5890e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.0651e-03, 1.0480e-03, 7.1367e-03,  ..., 6.3139e-03,
          3.5320e-04, 1.8636e-02],
         [5.0651e-03, 1.0480e-03, 7.5797e-03,  ..., 6.3139e-03,
          3.5320e-04, 1.0673e-02],
         [9.8480e-01, 1.0480e-03, 7.1367e-03,  ..., 9.8106e-01,
          3.5320e-04, 9.6002e-01],
         [5.0651e-03, 9.9686e-01, 9.7815e-01,  ..., 6.3139e-03,
          9.9894e-01, 1.0673e-02]],
        [[4.0007e-03, 3.2941e-03, 4.3746e-03,  ..., 1.5809e-03,
          2.2675e-04, 8.7674e-03],
         [4.0007e-03, 3.2941e-03, 4.3746e-03,  ..., 1.5809e-03,
          2.2675e-04, 8.7674e-03],
         [9.8800e-01, 3.2941e-03, 4.3746e-03,  ..., 1.5809e-03,
          2.2675e-04, 9.7370e-01],
         [4.0007e-03, 9.9012e-01, 9.8688e-01,  ..., 9.9526e-01,
          9.9932e-01, 8.7674e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:02,158 [Process: 0] Synchronize training processes
2024-08-18 15:19:02,158 [Process: 0] Evaluating...
2024-08-18 15:19:02,160 [Process: 0] EPOCH 344:
2024-08-18 15:19:02,162 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9621e-01, 7.8303e-03, 9.3579e-03,  ..., 6.6380e-04,
          8.1470e-04, 9.9609e-01],
         [1.2629e-03, 7.8303e-03, 9.3579e-03,  ..., 6.6380e-04,
          8.1470e-04, 1.3045e-03],
         [1.2629e-03, 7.8303e-03, 9.5348e-03,  ..., 9.9801e-01,
          9.9756e-01, 1.3045e-03],
         [1.2629e-03, 9.7651e-01, 9.7175e-01,  ..., 6.6380e-04,
          8.1470e-04, 1.3045e-03]],
        [[9.9953e-01, 5.3342e-03, 7.2495e-03,  ..., 1.5488e-03,
          1.5857e-01, 2.6712e-03],
         [1.5791e-04, 5.3342e-03, 7.2495e-03,  ..., 1.5488e-03,
          7.1057e-02, 2.6712e-03],
         [1.5791e-04, 5.3342e-03, 7.2495e-03,  ..., 9.9535e-01,
          6.9018e-01, 9.9199e-01],
         [1.5791e-04, 9.8400e-01, 9.7825e-01,  ..., 1.5488e-03,
          8.0202e-02, 2.6712e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.1598e-03, 7.1054e-04, 3.9035e-03,  ..., 6.0605e-03,
          1.8589e-04, 6.9184e-03],
         [7.1598e-03, 7.1054e-04, 3.9035e-03,  ..., 6.0605e-03,
          1.8589e-04, 6.9184e-03],
         [9.7852e-01, 7.1054e-04, 3.9035e-03,  ..., 9.8182e-01,
          1.8589e-04, 9.7924e-01],
         [7.1598e-03, 9.9787e-01, 9.8829e-01,  ..., 6.0605e-03,
          9.9944e-01, 6.9184e-03]],
        [[9.0540e-03, 1.8341e-04, 2.8960e-03,  ..., 3.1607e-04,
          2.2517e-03, 9.8650e-03],
         [9.0540e-03, 1.8341e-04, 2.8960e-03,  ..., 3.1607e-04,
          2.2517e-03, 9.8650e-03],
         [9.7284e-01, 1.8341e-04, 2.8960e-03,  ..., 3.1607e-04,
          2.2517e-03, 9.7041e-01],
         [9.0540e-03, 9.9945e-01, 9.9131e-01,  ..., 9.9905e-01,
          9.9325e-01, 9.8650e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9875e-01, 8.2289e-03, 3.2761e-03,  ..., 2.4436e-03,
          1.0355e-03, 9.9833e-01],
         [4.1768e-04, 8.2289e-03, 3.2761e-03,  ..., 2.4436e-03,
          1.0355e-03, 5.5793e-04],
         [4.1768e-04, 8.2289e-03, 3.2761e-03,  ..., 9.9267e-01,
          9.9689e-01, 5.5793e-04],
         [4.1768e-04, 9.7531e-01, 9.9017e-01,  ..., 2.4436e-03,
          1.0355e-03, 5.5793e-04]],
        [[9.9775e-01, 8.3678e-03, 5.1509e-03,  ..., 2.1411e-04,
          1.9358e-01, 5.3618e-04],
         [7.5058e-04, 8.3678e-03, 5.1509e-03,  ..., 2.1411e-04,
          1.0698e-01, 5.3618e-04],
         [7.5058e-04, 8.3678e-03, 5.1509e-03,  ..., 9.9936e-01,
          5.2658e-01, 9.9839e-01],
         [7.5058e-04, 9.7490e-01, 9.8455e-01,  ..., 2.1411e-04,
          1.7285e-01, 5.3618e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8844e-03, 3.3887e-03, 3.1406e-03,  ..., 2.1371e-02,
          7.8570e-05, 7.8517e-03],
         [3.8844e-03, 3.3887e-03, 3.1406e-03,  ..., 1.5971e-02,
          7.8570e-05, 7.8517e-03],
         [9.8835e-01, 3.3887e-03, 3.1406e-03,  ..., 9.4576e-01,
          7.8570e-05, 9.7644e-01],
         [3.8844e-03, 9.8983e-01, 9.9058e-01,  ..., 1.6899e-02,
          9.9976e-01, 7.8517e-03]],
        [[2.0880e-02, 2.2077e-03, 1.2117e-03,  ..., 8.0339e-04,
          8.5732e-05, 8.1940e-03],
         [2.0880e-02, 2.2077e-03, 1.2117e-03,  ..., 8.0339e-04,
          8.5732e-05, 8.1940e-03],
         [9.3104e-01, 2.2077e-03, 1.2117e-03,  ..., 8.0339e-04,
          8.5732e-05, 9.7542e-01],
         [2.7196e-02, 9.9338e-01, 9.9637e-01,  ..., 9.9759e-01,
          9.9974e-01, 8.1940e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:03,290 [Process: 0] Synchronize training processes
2024-08-18 15:19:03,290 [Process: 0] Evaluating...
2024-08-18 15:19:03,292 [Process: 0] EPOCH 345:
2024-08-18 15:19:03,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:04,423 [Process: 0] Synchronize training processes
2024-08-18 15:19:04,423 [Process: 0] Evaluating...
2024-08-18 15:19:04,425 [Process: 0] EPOCH 346:
2024-08-18 15:19:04,427 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9538e-01, 6.3749e-03, 1.7119e-02,  ..., 1.8060e-03,
          1.6689e-03, 9.9986e-01],
         [1.5390e-03, 6.3749e-03, 1.4346e-02,  ..., 1.8060e-03,
          1.6689e-03, 4.7761e-05],
         [1.5390e-03, 6.3749e-03, 1.6923e-02,  ..., 9.9458e-01,
          9.9499e-01, 4.7761e-05],
         [1.5390e-03, 9.8088e-01, 9.5161e-01,  ..., 1.8060e-03,
          1.6689e-03, 4.7761e-05]],
        [[9.9900e-01, 8.5272e-03, 1.1906e-02,  ..., 3.2549e-04,
          1.2794e-01, 5.8253e-04],
         [3.3503e-04, 8.5272e-03, 1.1906e-02,  ..., 3.2549e-04,
          7.3363e-02, 5.8253e-04],
         [3.3503e-04, 8.5272e-03, 1.1906e-02,  ..., 9.9902e-01,
          7.0702e-01, 9.9825e-01],
         [3.3503e-04, 9.7442e-01, 9.6428e-01,  ..., 3.2549e-04,
          9.1673e-02, 5.8253e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2637e-03, 6.1025e-03, 3.4438e-03,  ..., 3.9988e-03,
          3.1591e-04, 5.9177e-03],
         [4.2637e-03, 6.1025e-03, 3.4438e-03,  ..., 3.9988e-03,
          3.1591e-04, 5.9177e-03],
         [9.8721e-01, 6.1025e-03, 3.4438e-03,  ..., 9.8800e-01,
          3.1591e-04, 9.8225e-01],
         [4.2637e-03, 9.8169e-01, 9.8967e-01,  ..., 3.9988e-03,
          9.9905e-01, 5.9177e-03]],
        [[5.1218e-03, 8.9912e-04, 2.2040e-03,  ..., 8.9167e-04,
          4.0906e-04, 8.5473e-03],
         [5.1218e-03, 8.9912e-04, 2.2040e-03,  ..., 8.9167e-04,
          4.0906e-04, 8.5473e-03],
         [9.8463e-01, 8.9912e-04, 2.2040e-03,  ..., 8.9167e-04,
          4.0906e-04, 9.7436e-01],
         [5.1218e-03, 9.9730e-01, 9.9339e-01,  ..., 9.9732e-01,
          9.9877e-01, 8.5473e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9912e-01, 1.8179e-02, 2.8433e-03,  ..., 2.9252e-04,
          1.6640e-03, 9.7820e-01],
         [2.9237e-04, 1.5011e-02, 2.8433e-03,  ..., 2.9252e-04,
          1.6640e-03, 6.8581e-03],
         [2.9237e-04, 1.5315e-02, 2.8433e-03,  ..., 9.9912e-01,
          9.9501e-01, 8.0875e-03],
         [2.9237e-04, 9.5149e-01, 9.9147e-01,  ..., 2.9252e-04,
          1.6640e-03, 6.8581e-03]],
        [[9.9738e-01, 5.0529e-03, 6.3044e-03,  ..., 1.7685e-04,
          2.0263e-01, 3.8150e-04],
         [8.7196e-04, 5.0529e-03, 6.3044e-03,  ..., 1.7685e-04,
          1.3049e-01, 3.8150e-04],
         [8.7196e-04, 5.0529e-03, 6.3044e-03,  ..., 9.9947e-01,
          3.4515e-01, 9.9886e-01],
         [8.7196e-04, 9.8484e-01, 9.8109e-01,  ..., 1.7685e-04,
          3.2172e-01, 3.8150e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:05,555 [Process: 0] Synchronize training processes
2024-08-18 15:19:05,555 [Process: 0] Evaluating...
2024-08-18 15:19:05,557 [Process: 0] EPOCH 347:
2024-08-18 15:19:05,560 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:06,679 [Process: 0] Synchronize training processes
2024-08-18 15:19:06,680 [Process: 0] Evaluating...
2024-08-18 15:19:06,681 [Process: 0] EPOCH 348:
2024-08-18 15:19:06,683 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8348e-03, 1.6548e-03, 1.7628e-03,  ..., 4.4532e-03,
          2.7134e-04, 1.5027e-02],
         [2.8348e-03, 1.6548e-03, 1.7628e-03,  ..., 4.4532e-03,
          2.7134e-04, 1.3498e-02],
         [9.9150e-01, 1.6548e-03, 1.7628e-03,  ..., 9.8664e-01,
          2.7134e-04, 9.5798e-01],
         [2.8348e-03, 9.9504e-01, 9.9471e-01,  ..., 4.4532e-03,
          9.9919e-01, 1.3498e-02]],
        [[3.3691e-03, 3.5547e-03, 1.8157e-03,  ..., 6.1961e-03,
          5.9681e-04, 8.0671e-03],
         [3.3691e-03, 3.5547e-03, 1.8157e-03,  ..., 6.1961e-03,
          5.9681e-04, 8.0671e-03],
         [9.8989e-01, 3.5547e-03, 1.8157e-03,  ..., 6.1961e-03,
          5.9681e-04, 9.7580e-01],
         [3.3691e-03, 9.8934e-01, 9.9455e-01,  ..., 9.8141e-01,
          9.9821e-01, 8.0671e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9411e-01, 6.3325e-03, 1.0304e-02,  ..., 2.3656e-04,
          5.9992e-04, 9.7449e-01],
         [1.9366e-03, 6.3325e-03, 1.0304e-02,  ..., 2.3656e-04,
          5.9992e-04, 8.4460e-03],
         [2.0187e-03, 6.3325e-03, 1.0304e-02,  ..., 9.9929e-01,
          9.9820e-01, 8.6147e-03],
         [1.9366e-03, 9.8100e-01, 9.6909e-01,  ..., 2.3656e-04,
          5.9992e-04, 8.4460e-03]],
        [[9.9666e-01, 1.8196e-03, 7.0472e-03,  ..., 1.2188e-03,
          2.6570e-01, 6.5860e-04],
         [1.1122e-03, 1.8196e-03, 7.0472e-03,  ..., 1.2188e-03,
          1.3789e-01, 6.5860e-04],
         [1.1122e-03, 1.8196e-03, 7.0472e-03,  ..., 9.9634e-01,
          4.5438e-01, 9.9802e-01],
         [1.1122e-03, 9.9454e-01, 9.7886e-01,  ..., 1.2188e-03,
          1.4202e-01, 6.5860e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8463e-03, 1.5078e-03, 5.0228e-03,  ..., 6.8030e-03,
          1.6883e-04, 1.0582e-02],
         [3.8463e-03, 1.5078e-03, 5.0228e-03,  ..., 6.8030e-03,
          1.6883e-04, 9.4350e-03],
         [9.8846e-01, 1.5078e-03, 5.0228e-03,  ..., 9.7959e-01,
          1.6883e-04, 9.7055e-01],
         [3.8463e-03, 9.9548e-01, 9.8493e-01,  ..., 6.8030e-03,
          9.9949e-01, 9.4350e-03]],
        [[3.7068e-03, 1.4010e-03, 1.0600e-02,  ..., 1.5305e-03,
          7.1699e-04, 9.9062e-03],
         [3.7068e-03, 1.4010e-03, 1.0600e-02,  ..., 1.5305e-03,
          7.1699e-04, 9.9062e-03],
         [9.8888e-01, 1.4010e-03, 1.0600e-02,  ..., 1.5305e-03,
          7.1699e-04, 9.7012e-01],
         [3.7068e-03, 9.9580e-01, 9.6820e-01,  ..., 9.9541e-01,
          9.9785e-01, 1.0068e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9827e-01, 1.0330e-02, 1.8711e-02,  ..., 2.1492e-04,
          2.9930e-04, 9.9542e-01],
         [5.7806e-04, 8.0325e-03, 1.2955e-02,  ..., 2.1492e-04,
          2.9930e-04, 1.5263e-03],
         [5.7806e-04, 8.0325e-03, 1.2955e-02,  ..., 9.9936e-01,
          9.9910e-01, 1.5263e-03],
         [5.7806e-04, 9.7361e-01, 9.5538e-01,  ..., 2.1492e-04,
          2.9930e-04, 1.5263e-03]],
        [[9.8469e-01, 2.6315e-02, 1.2080e-02,  ..., 1.0676e-03,
          3.5977e-01, 4.6276e-04],
         [5.1022e-03, 2.5136e-02, 1.2080e-02,  ..., 1.0676e-03,
          1.0346e-01, 4.6276e-04],
         [5.1022e-03, 2.7645e-02, 1.2080e-02,  ..., 9.9680e-01,
          4.1559e-01, 9.9861e-01],
         [5.1022e-03, 9.2090e-01, 9.6376e-01,  ..., 1.0676e-03,
          1.2119e-01, 4.6276e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:07,799 [Process: 0] Synchronize training processes
2024-08-18 15:19:07,799 [Process: 0] Evaluating...
2024-08-18 15:19:07,801 [Process: 0] EPOCH 349:
2024-08-18 15:19:07,803 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:08,932 [Process: 0] Synchronize training processes
2024-08-18 15:19:08,933 [Process: 0] Evaluating...
2024-08-18 15:19:08,934 [Process: 0] EPOCH 350:
2024-08-18 15:19:08,936 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0572e-02, 2.9659e-03, 1.4568e-03,  ..., 9.8285e-03,
          2.5756e-04, 3.9967e-03],
         [1.0572e-02, 2.9659e-03, 1.4568e-03,  ..., 9.8285e-03,
          2.5756e-04, 3.9967e-03],
         [9.6829e-01, 2.9659e-03, 1.4568e-03,  ..., 9.7051e-01,
          2.5756e-04, 9.8801e-01],
         [1.0572e-02, 9.9110e-01, 9.9563e-01,  ..., 9.8285e-03,
          9.9923e-01, 3.9967e-03]],
        [[2.3809e-03, 2.3515e-03, 4.1341e-04,  ..., 2.7422e-03,
          1.1746e-03, 4.9057e-03],
         [2.3809e-03, 2.3515e-03, 4.1341e-04,  ..., 2.8607e-03,
          1.1746e-03, 4.9057e-03],
         [9.9286e-01, 2.3515e-03, 4.1341e-04,  ..., 2.7422e-03,
          1.1746e-03, 9.8528e-01],
         [2.3809e-03, 9.9295e-01, 9.9876e-01,  ..., 9.9165e-01,
          9.9648e-01, 4.9057e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8638e-01, 3.1212e-03, 1.0187e-02,  ..., 5.4862e-04,
          1.5931e-04, 9.9615e-01],
         [4.5405e-03, 3.1212e-03, 1.0187e-02,  ..., 5.4862e-04,
          1.5931e-04, 1.2837e-03],
         [4.5405e-03, 3.1212e-03, 1.0187e-02,  ..., 9.9835e-01,
          9.9952e-01, 1.2837e-03],
         [4.5405e-03, 9.9064e-01, 9.6944e-01,  ..., 5.4862e-04,
          1.5931e-04, 1.2837e-03]],
        [[9.5178e-01, 2.3743e-03, 6.4308e-03,  ..., 3.3198e-04,
          2.4874e-01, 4.0498e-03],
         [2.4975e-02, 2.3743e-03, 6.4308e-03,  ..., 3.3198e-04,
          1.5823e-01, 4.0498e-03],
         [1.2213e-02, 2.3743e-03, 6.4308e-03,  ..., 9.9900e-01,
          3.4800e-01, 9.8785e-01],
         [1.1029e-02, 9.9288e-01, 9.8071e-01,  ..., 3.3198e-04,
          2.4502e-01, 4.0498e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4986e-03, 5.9851e-04, 5.2216e-03,  ..., 2.3052e-03,
          7.0369e-04, 7.7038e-03],
         [4.4986e-03, 5.9851e-04, 5.0512e-03,  ..., 2.3052e-03,
          4.9899e-04, 7.7038e-03],
         [9.8650e-01, 5.9851e-04, 5.0512e-03,  ..., 9.9308e-01,
          4.9899e-04, 9.7689e-01],
         [4.4986e-03, 9.9820e-01, 9.8468e-01,  ..., 2.3052e-03,
          9.9830e-01, 7.7038e-03]],
        [[4.6121e-03, 2.3330e-04, 1.4754e-04,  ..., 3.4626e-03,
          6.4385e-04, 4.3035e-03],
         [4.6121e-03, 2.3330e-04, 1.4754e-04,  ..., 3.4626e-03,
          6.4385e-04, 4.3035e-03],
         [9.8616e-01, 2.3330e-04, 1.4754e-04,  ..., 3.4626e-03,
          6.4385e-04, 9.8709e-01],
         [4.6121e-03, 9.9930e-01, 9.9956e-01,  ..., 9.8961e-01,
          9.9807e-01, 4.3035e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:10,060 [Process: 0] Synchronize training processes
2024-08-18 15:19:10,061 [Process: 0] Evaluating...
2024-08-18 15:19:10,062 [Process: 0] EPOCH 351:
2024-08-18 15:19:10,064 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:11,187 [Process: 0] Synchronize training processes
2024-08-18 15:19:11,187 [Process: 0] Evaluating...
2024-08-18 15:19:11,191 [Process: 0] EPOCH 352:
2024-08-18 15:19:11,193 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8551e-01, 3.4166e-02, 8.6269e-03,  ..., 6.1586e-04,
          1.4905e-04, 9.9718e-01],
         [4.3457e-03, 3.1702e-02, 7.5892e-03,  ..., 6.1586e-04,
          1.4905e-04, 9.3858e-04],
         [5.8031e-03, 4.6649e-02, 7.5892e-03,  ..., 9.9815e-01,
          9.9955e-01, 9.3858e-04],
         [4.3457e-03, 8.8748e-01, 9.7619e-01,  ..., 6.1586e-04,
          1.4905e-04, 9.3858e-04]],
        [[9.8064e-01, 2.2897e-03, 3.8363e-03,  ..., 1.1017e-03,
          5.6609e-01, 2.9554e-04],
         [7.6479e-03, 2.2897e-03, 3.8363e-03,  ..., 1.1017e-03,
          1.0749e-01, 2.9554e-04],
         [5.8578e-03, 2.2897e-03, 3.8363e-03,  ..., 9.9669e-01,
          2.3070e-01, 9.9911e-01],
         [5.8578e-03, 9.9313e-01, 9.8849e-01,  ..., 1.1017e-03,
          9.5718e-02, 2.9554e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6839e-03, 1.9231e-03, 1.3411e-03,  ..., 8.2686e-03,
          1.8711e-03, 9.1522e-03],
         [2.6839e-03, 1.9231e-03, 1.3411e-03,  ..., 7.7114e-03,
          1.8711e-03, 9.1522e-03],
         [9.9195e-01, 1.9231e-03, 1.3411e-03,  ..., 9.7631e-01,
          1.8711e-03, 9.7254e-01],
         [2.6839e-03, 9.9423e-01, 9.9598e-01,  ..., 7.7114e-03,
          9.9439e-01, 9.1522e-03]],
        [[2.9878e-03, 2.0359e-03, 1.0780e-03,  ..., 2.1892e-04,
          9.5471e-04, 8.8288e-03],
         [2.9878e-03, 2.0359e-03, 1.0230e-03,  ..., 2.1892e-04,
          9.5471e-04, 8.8288e-03],
         [9.9104e-01, 2.0359e-03, 1.0230e-03,  ..., 2.1892e-04,
          9.5471e-04, 9.7351e-01],
         [2.9878e-03, 9.9389e-01, 9.9688e-01,  ..., 9.9934e-01,
          9.9714e-01, 8.8288e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9764e-01, 3.7752e-03, 1.5772e-02,  ..., 4.7195e-04,
          4.8841e-04, 9.9791e-01],
         [7.8821e-04, 3.7752e-03, 1.4355e-02,  ..., 4.7195e-04,
          4.8841e-04, 6.9646e-04],
         [7.8821e-04, 3.7752e-03, 1.6810e-02,  ..., 9.9858e-01,
          9.9853e-01, 6.9646e-04],
         [7.8821e-04, 9.8867e-01, 9.5306e-01,  ..., 4.7195e-04,
          4.8841e-04, 6.9646e-04]],
        [[9.9844e-01, 7.6827e-03, 2.7361e-03,  ..., 1.6966e-03,
          2.9508e-01, 6.8935e-04],
         [5.2104e-04, 7.6827e-03, 2.7361e-03,  ..., 1.6966e-03,
          1.3128e-01, 6.8935e-04],
         [5.2104e-04, 7.6827e-03, 2.7361e-03,  ..., 9.9491e-01,
          3.5010e-01, 9.9793e-01],
         [5.2104e-04, 9.7695e-01, 9.9179e-01,  ..., 1.6966e-03,
          2.2354e-01, 6.8935e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3412e-02, 2.7052e-03, 8.8118e-04,  ..., 7.0932e-03,
          2.0138e-04, 1.5928e-03],
         [2.2637e-02, 2.7052e-03, 8.8118e-04,  ..., 7.0932e-03,
          2.0138e-04, 1.5928e-03],
         [9.2350e-01, 2.7052e-03, 8.8118e-04,  ..., 9.7872e-01,
          2.0138e-04, 9.9522e-01],
         [3.0456e-02, 9.9188e-01, 9.9736e-01,  ..., 7.0932e-03,
          9.9940e-01, 1.5928e-03]],
        [[5.2553e-03, 1.7692e-03, 6.4130e-04,  ..., 1.0238e-03,
          1.6053e-04, 5.6489e-03],
         [5.2553e-03, 1.7692e-03, 6.4130e-04,  ..., 1.0238e-03,
          1.6053e-04, 5.6489e-03],
         [9.8423e-01, 1.7692e-03, 6.4130e-04,  ..., 1.0238e-03,
          1.6053e-04, 9.8305e-01],
         [5.2553e-03, 9.9469e-01, 9.9808e-01,  ..., 9.9693e-01,
          9.9952e-01, 5.6489e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:12,318 [Process: 0] Synchronize training processes
2024-08-18 15:19:12,318 [Process: 0] Evaluating...
2024-08-18 15:19:12,320 [Process: 0] EPOCH 353:
2024-08-18 15:19:12,322 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9854e-01, 1.7191e-02, 4.0633e-03,  ..., 2.1260e-04,
          1.0400e-04, 9.9768e-01],
         [4.8782e-04, 1.6965e-02, 4.0633e-03,  ..., 2.1260e-04,
          1.0400e-04, 7.7365e-04],
         [4.8782e-04, 2.3198e-02, 4.0633e-03,  ..., 9.9936e-01,
          9.9969e-01, 7.7365e-04],
         [4.8782e-04, 9.4265e-01, 9.8781e-01,  ..., 2.1260e-04,
          1.0400e-04, 7.7365e-04]],
        [[9.9606e-01, 4.7060e-03, 1.2566e-02,  ..., 5.5939e-04,
          1.1212e-01, 8.1307e-04],
         [1.3149e-03, 4.7060e-03, 1.1489e-02,  ..., 5.5939e-04,
          7.2250e-02, 8.1307e-04],
         [1.3149e-03, 4.7060e-03, 1.6442e-02,  ..., 9.9832e-01,
          1.5833e-01, 9.9756e-01],
         [1.3149e-03, 9.8588e-01, 9.5950e-01,  ..., 5.5939e-04,
          6.5730e-01, 8.1307e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4333e-02, 7.4067e-04, 3.7899e-03,  ..., 5.0419e-03,
          4.7143e-04, 7.8045e-03],
         [1.4333e-02, 7.4067e-04, 3.7899e-03,  ..., 5.0419e-03,
          4.7143e-04, 7.8045e-03],
         [9.5404e-01, 7.4067e-04, 3.7899e-03,  ..., 9.8487e-01,
          4.7143e-04, 9.7659e-01],
         [1.7298e-02, 9.9778e-01, 9.8863e-01,  ..., 5.0419e-03,
          9.9859e-01, 7.8045e-03]],
        [[1.6707e-03, 2.5073e-03, 2.7239e-03,  ..., 1.1660e-03,
          1.3774e-03, 1.9597e-03],
         [1.6707e-03, 2.5073e-03, 2.7239e-03,  ..., 1.1660e-03,
          1.3774e-03, 1.9597e-03],
         [9.9499e-01, 2.5073e-03, 2.7239e-03,  ..., 1.1660e-03,
          1.3774e-03, 9.9412e-01],
         [1.6707e-03, 9.9248e-01, 9.9183e-01,  ..., 9.9650e-01,
          9.9587e-01, 1.9597e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9840e-01, 1.4766e-03, 2.4433e-02,  ..., 6.3252e-04,
          5.6783e-04, 9.9468e-01],
         [5.3441e-04, 1.4766e-03, 2.0080e-02,  ..., 6.3252e-04,
          5.6783e-04, 1.7748e-03],
         [5.3441e-04, 1.4766e-03, 2.8380e-02,  ..., 9.9810e-01,
          9.9830e-01, 1.7748e-03],
         [5.3441e-04, 9.9557e-01, 9.2711e-01,  ..., 6.3252e-04,
          5.6783e-04, 1.7748e-03]],
        [[9.9400e-01, 1.0543e-02, 5.2018e-03,  ..., 7.0534e-04,
          5.9678e-02, 1.2065e-03],
         [2.0015e-03, 1.0543e-02, 5.2018e-03,  ..., 7.0534e-04,
          3.6291e-02, 1.2065e-03],
         [2.0015e-03, 1.0749e-02, 5.2018e-03,  ..., 9.9788e-01,
          8.8226e-01, 9.9638e-01],
         [2.0015e-03, 9.6816e-01, 9.8439e-01,  ..., 7.0534e-04,
          2.1767e-02, 1.2065e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:19:13,451 [Process: 0] Synchronize training processes
2024-08-18 15:19:13,451 [Process: 0] Evaluating...
2024-08-18 15:19:13,453 [Process: 0] EPOCH 354:
2024-08-18 15:19:13,455 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:14,579 [Process: 0] Synchronize training processes
2024-08-18 15:19:14,580 [Process: 0] Evaluating...
2024-08-18 15:19:14,581 [Process: 0] EPOCH 355:
2024-08-18 15:19:14,583 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4771e-03, 1.5822e-03, 3.2953e-02,  ..., 1.1095e-02,
          5.8264e-03, 2.7126e-03],
         [4.4771e-03, 1.5822e-03, 5.5177e-02,  ..., 9.9433e-03,
          3.8952e-03, 2.7126e-03],
         [9.8657e-01, 1.5822e-03, 3.2953e-02,  ..., 9.6902e-01,
          3.8952e-03, 9.9186e-01],
         [4.4771e-03, 9.9525e-01, 8.7892e-01,  ..., 9.9433e-03,
          9.8638e-01, 2.7126e-03]],
        [[7.1912e-03, 9.5583e-04, 8.3619e-04,  ..., 2.1767e-04,
          3.3202e-04, 1.3873e-02],
         [7.1912e-03, 9.5583e-04, 8.3619e-04,  ..., 2.1767e-04,
          3.3202e-04, 1.3873e-02],
         [9.7843e-01, 9.5583e-04, 8.3619e-04,  ..., 2.1767e-04,
          3.3202e-04, 9.5493e-01],
         [7.1912e-03, 9.9713e-01, 9.9749e-01,  ..., 9.9935e-01,
          9.9900e-01, 1.7326e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9656e-01, 4.2235e-03, 6.0894e-03,  ..., 1.8028e-04,
          1.5483e-04, 9.9964e-01],
         [1.1464e-03, 4.2235e-03, 6.0894e-03,  ..., 1.8028e-04,
          1.5483e-04, 1.1863e-04],
         [1.1464e-03, 4.2235e-03, 6.0894e-03,  ..., 9.9946e-01,
          9.9954e-01, 1.1863e-04],
         [1.1464e-03, 9.8733e-01, 9.8173e-01,  ..., 1.8028e-04,
          1.5483e-04, 1.1863e-04]],
        [[9.8679e-01, 7.2056e-03, 8.8989e-03,  ..., 3.2365e-04,
          1.0278e-01, 4.8075e-04],
         [4.3159e-03, 7.2056e-03, 8.8989e-03,  ..., 3.2365e-04,
          6.8273e-02, 4.8075e-04],
         [4.5781e-03, 8.3126e-03, 1.2825e-02,  ..., 9.9903e-01,
          7.8251e-01, 9.9856e-01],
         [4.3159e-03, 9.7728e-01, 9.6938e-01,  ..., 3.2365e-04,
          4.6439e-02, 4.8075e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1966e-02, 2.5481e-03, 2.0164e-02,  ..., 4.9439e-02,
          1.8451e-03, 1.8162e-03],
         [9.2111e-03, 2.5481e-03, 2.7198e-02,  ..., 3.2451e-02,
          1.8451e-03, 1.8162e-03],
         [9.6961e-01, 2.5481e-03, 2.0164e-02,  ..., 8.7156e-01,
          1.8451e-03, 9.9455e-01],
         [9.2111e-03, 9.9236e-01, 9.3247e-01,  ..., 4.6554e-02,
          9.9446e-01, 1.8162e-03]],
        [[3.6439e-03, 6.9844e-04, 6.5187e-04,  ..., 8.8034e-05,
          7.3537e-05, 4.4515e-03],
         [3.6439e-03, 6.9844e-04, 6.5187e-04,  ..., 8.8034e-05,
          7.3537e-05, 4.4515e-03],
         [9.8907e-01, 6.9844e-04, 6.5187e-04,  ..., 8.8034e-05,
          7.3537e-05, 9.8665e-01],
         [3.6439e-03, 9.9790e-01, 9.9804e-01,  ..., 9.9974e-01,
          9.9978e-01, 4.4515e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9817e-01, 7.3011e-03, 3.9621e-03,  ..., 2.1197e-04,
          2.9507e-03, 9.9923e-01],
         [6.1051e-04, 7.3011e-03, 3.9621e-03,  ..., 2.1197e-04,
          2.9507e-03, 2.5549e-04],
         [6.1051e-04, 8.5375e-03, 4.2869e-03,  ..., 9.9936e-01,
          9.9115e-01, 2.5549e-04],
         [6.1051e-04, 9.7686e-01, 9.8779e-01,  ..., 2.1197e-04,
          2.9507e-03, 2.5549e-04]],
        [[9.7926e-01, 7.1007e-03, 1.2394e-02,  ..., 6.0962e-03,
          2.0362e-01, 1.1386e-03],
         [5.7641e-03, 7.1007e-03, 1.2394e-02,  ..., 6.0962e-03,
          1.6609e-01, 1.1386e-03],
         [9.2167e-03, 7.1007e-03, 1.7530e-02,  ..., 9.8171e-01,
          4.0073e-01, 9.9658e-01],
         [5.7641e-03, 9.7870e-01, 9.5768e-01,  ..., 6.0962e-03,
          2.2955e-01, 1.1386e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:15,708 [Process: 0] Synchronize training processes
2024-08-18 15:19:15,708 [Process: 0] Evaluating...
2024-08-18 15:19:15,710 [Process: 0] EPOCH 356:
2024-08-18 15:19:15,712 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:16,836 [Process: 0] Synchronize training processes
2024-08-18 15:19:16,837 [Process: 0] Evaluating...
2024-08-18 15:19:16,838 [Process: 0] EPOCH 357:
2024-08-18 15:19:16,840 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2775e-02, 1.5294e-03, 1.1232e-02,  ..., 5.5187e-03,
          4.2415e-04, 3.1811e-03],
         [1.2775e-02, 1.5294e-03, 1.1232e-02,  ..., 5.5187e-03,
          4.2415e-04, 3.1811e-03],
         [9.6167e-01, 1.5294e-03, 1.1232e-02,  ..., 9.8344e-01,
          4.2415e-04, 9.9046e-01],
         [1.2775e-02, 9.9541e-01, 9.6630e-01,  ..., 5.5187e-03,
          9.9873e-01, 3.1811e-03]],
        [[7.2782e-03, 2.8731e-04, 8.0800e-04,  ..., 1.3715e-03,
          4.4640e-03, 2.4523e-03],
         [7.2782e-03, 2.8731e-04, 8.0800e-04,  ..., 1.3715e-03,
          4.4640e-03, 2.4523e-03],
         [9.7817e-01, 2.8731e-04, 8.0800e-04,  ..., 1.3715e-03,
          4.4640e-03, 9.9264e-01],
         [7.2782e-03, 9.9914e-01, 9.9758e-01,  ..., 9.9589e-01,
          9.8661e-01, 2.4523e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9164e-01, 1.7805e-03, 5.5024e-03,  ..., 4.5326e-04,
          2.5210e-04, 9.8128e-01],
         [2.7858e-03, 1.7805e-03, 5.5024e-03,  ..., 4.5326e-04,
          2.5210e-04, 6.0091e-03],
         [2.7858e-03, 1.7805e-03, 5.5024e-03,  ..., 9.9864e-01,
          9.9924e-01, 6.6975e-03],
         [2.7858e-03, 9.9466e-01, 9.8349e-01,  ..., 4.5326e-04,
          2.5210e-04, 6.0091e-03]],
        [[9.8646e-01, 1.1030e-02, 7.7368e-03,  ..., 3.2552e-04,
          1.9007e-01, 2.9959e-04],
         [4.5134e-03, 1.1030e-02, 7.7368e-03,  ..., 3.2552e-04,
          7.4017e-02, 2.9959e-04],
         [4.5134e-03, 1.1281e-02, 9.7497e-03,  ..., 9.9902e-01,
          6.8176e-01, 9.9910e-01],
         [4.5134e-03, 9.6666e-01, 9.7478e-01,  ..., 3.2552e-04,
          5.4158e-02, 2.9959e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0947e-02, 4.7792e-04, 1.6322e-03,  ..., 9.6099e-03,
          2.1199e-03, 6.9123e-03],
         [1.0947e-02, 4.7792e-04, 1.6322e-03,  ..., 9.6099e-03,
          2.1199e-03, 6.7434e-03],
         [9.6711e-01, 4.7792e-04, 1.6322e-03,  ..., 9.7117e-01,
          2.1199e-03, 9.7960e-01],
         [1.0993e-02, 9.9857e-01, 9.9510e-01,  ..., 9.6099e-03,
          9.9364e-01, 6.7434e-03]],
        [[3.2337e-03, 5.4278e-04, 5.2283e-05,  ..., 9.2966e-04,
          1.2711e-03, 5.7927e-03],
         [3.2337e-03, 5.4278e-04, 5.2283e-05,  ..., 9.2966e-04,
          1.2711e-03, 5.7927e-03],
         [9.9030e-01, 5.4278e-04, 5.2283e-05,  ..., 9.2966e-04,
          1.2711e-03, 9.8262e-01],
         [3.2337e-03, 9.9837e-01, 9.9984e-01,  ..., 9.9721e-01,
          9.9619e-01, 5.7927e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9950e-01, 2.6102e-03, 5.0964e-03,  ..., 2.1505e-04,
          3.0995e-04, 9.9768e-01],
         [1.6795e-04, 2.6102e-03, 5.0964e-03,  ..., 2.1505e-04,
          3.0995e-04, 7.7359e-04],
         [1.6795e-04, 2.6102e-03, 5.8896e-03,  ..., 9.9935e-01,
          9.9907e-01, 7.7359e-04],
         [1.6795e-04, 9.9217e-01, 9.8392e-01,  ..., 2.1505e-04,
          3.0995e-04, 7.7359e-04]],
        [[9.8881e-01, 4.2973e-03, 4.7516e-03,  ..., 1.9077e-03,
          2.0261e-01, 2.4227e-04],
         [4.3349e-03, 4.2973e-03, 4.7516e-03,  ..., 1.9077e-03,
          4.7647e-02, 2.4227e-04],
         [3.4272e-03, 4.2973e-03, 4.7516e-03,  ..., 9.9428e-01,
          7.0340e-01, 9.9927e-01],
         [3.4272e-03, 9.8711e-01, 9.8575e-01,  ..., 1.9077e-03,
          4.6337e-02, 2.4227e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:17,963 [Process: 0] Synchronize training processes
2024-08-18 15:19:17,963 [Process: 0] Evaluating...
2024-08-18 15:19:17,965 [Process: 0] EPOCH 358:
2024-08-18 15:19:17,966 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:19,094 [Process: 0] Synchronize training processes
2024-08-18 15:19:19,094 [Process: 0] Evaluating...
2024-08-18 15:19:19,096 [Process: 0] EPOCH 359:
2024-08-18 15:19:19,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.2062e-03, 2.5986e-04, 6.1104e-03,  ..., 2.3683e-03,
          1.5950e-03, 2.0214e-03],
         [7.9362e-03, 2.5986e-04, 6.1104e-03,  ..., 2.3683e-03,
          1.5950e-03, 2.0214e-03],
         [9.7492e-01, 2.5986e-04, 6.1104e-03,  ..., 9.9290e-01,
          1.5950e-03, 9.9394e-01],
         [7.9362e-03, 9.9922e-01, 9.8167e-01,  ..., 2.3683e-03,
          9.9522e-01, 2.0214e-03]],
        [[6.6853e-03, 3.9071e-04, 2.6724e-04,  ..., 4.9235e-04,
          1.4870e-03, 1.0597e-02],
         [6.6853e-03, 3.9071e-04, 2.6724e-04,  ..., 4.9235e-04,
          1.4870e-03, 1.0597e-02],
         [9.7994e-01, 3.9071e-04, 2.6724e-04,  ..., 4.9235e-04,
          1.4870e-03, 9.6821e-01],
         [6.6853e-03, 9.9883e-01, 9.9920e-01,  ..., 9.9852e-01,
          9.9554e-01, 1.0597e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9196e-01, 4.6609e-03, 1.3966e-02,  ..., 1.0329e-04,
          2.9246e-04, 9.9980e-01],
         [2.6812e-03, 4.6609e-03, 1.4934e-02,  ..., 1.0329e-04,
          2.9246e-04, 6.7913e-05],
         [2.6812e-03, 4.6609e-03, 1.7457e-02,  ..., 9.9969e-01,
          9.9912e-01, 6.7913e-05],
         [2.6812e-03, 9.8602e-01, 9.5364e-01,  ..., 1.0329e-04,
          2.9246e-04, 6.7913e-05]],
        [[9.9476e-01, 1.0275e-02, 3.3403e-03,  ..., 1.3261e-02,
          3.2583e-01, 2.8867e-04],
         [1.7462e-03, 1.0275e-02, 3.3403e-03,  ..., 1.4028e-02,
          2.6846e-01, 2.8867e-04],
         [1.7462e-03, 1.2683e-02, 3.3403e-03,  ..., 9.5945e-01,
          2.7412e-01, 9.9913e-01],
         [1.7462e-03, 9.6677e-01, 9.8998e-01,  ..., 1.3261e-02,
          1.3159e-01, 2.8867e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6940e-03, 2.9769e-04, 3.0920e-03,  ..., 1.2329e-02,
          5.6446e-04, 6.5575e-03],
         [3.6940e-03, 2.9769e-04, 3.0920e-03,  ..., 9.9896e-03,
          5.6446e-04, 5.6635e-03],
         [9.8892e-01, 2.9769e-04, 3.0920e-03,  ..., 9.6769e-01,
          5.6446e-04, 9.8212e-01],
         [3.6940e-03, 9.9911e-01, 9.9072e-01,  ..., 9.9896e-03,
          9.9831e-01, 5.6635e-03]],
        [[1.1653e-03, 1.2080e-03, 1.8114e-04,  ..., 1.2852e-03,
          3.0649e-03, 1.0930e-02],
         [1.1653e-03, 1.2080e-03, 1.8114e-04,  ..., 1.2852e-03,
          3.0649e-03, 1.0804e-02],
         [9.9650e-01, 1.2080e-03, 1.8114e-04,  ..., 1.2852e-03,
          3.0649e-03, 9.6746e-01],
         [1.1653e-03, 9.9638e-01, 9.9946e-01,  ..., 9.9614e-01,
          9.9081e-01, 1.0804e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:20,223 [Process: 0] Synchronize training processes
2024-08-18 15:19:20,223 [Process: 0] Evaluating...
2024-08-18 15:19:20,225 [Process: 0] EPOCH 360:
2024-08-18 15:19:20,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9941e-01, 1.9201e-03, 5.0082e-03,  ..., 2.6989e-04,
          5.2923e-04, 9.8362e-01],
         [1.9759e-04, 1.9201e-03, 5.0082e-03,  ..., 2.6989e-04,
          5.2923e-04, 5.3757e-03],
         [1.9759e-04, 1.9201e-03, 5.5203e-03,  ..., 9.9919e-01,
          9.9841e-01, 5.6266e-03],
         [1.9759e-04, 9.9424e-01, 9.8446e-01,  ..., 2.6989e-04,
          5.2923e-04, 5.3757e-03]],
        [[9.9880e-01, 6.5649e-03, 2.6080e-03,  ..., 6.1453e-03,
          2.1619e-01, 3.1433e-04],
         [3.9856e-04, 6.5649e-03, 2.6080e-03,  ..., 6.1453e-03,
          2.1989e-01, 3.1433e-04],
         [3.9856e-04, 8.0413e-03, 2.6080e-03,  ..., 9.8156e-01,
          3.4541e-01, 9.9906e-01],
         [3.9856e-04, 9.7883e-01, 9.9218e-01,  ..., 6.1453e-03,
          2.1851e-01, 3.1433e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.3043e-03, 1.1535e-03, 7.8907e-03,  ..., 5.1295e-03,
          1.1417e-03, 5.0130e-03],
         [5.3043e-03, 1.1535e-03, 7.8907e-03,  ..., 5.1295e-03,
          1.1417e-03, 5.0130e-03],
         [9.8409e-01, 1.1535e-03, 7.8907e-03,  ..., 9.8461e-01,
          1.1417e-03, 9.8496e-01],
         [5.3043e-03, 9.9654e-01, 9.7633e-01,  ..., 5.1295e-03,
          9.9657e-01, 5.0130e-03]],
        [[1.6901e-02, 4.4433e-04, 4.2376e-04,  ..., 8.1698e-04,
          5.5751e-04, 3.6933e-03],
         [1.3197e-02, 4.4433e-04, 4.2376e-04,  ..., 8.1698e-04,
          5.5751e-04, 3.6933e-03],
         [9.5668e-01, 4.4433e-04, 4.2376e-04,  ..., 8.1698e-04,
          5.5751e-04, 9.8892e-01],
         [1.3225e-02, 9.9867e-01, 9.9873e-01,  ..., 9.9755e-01,
          9.9833e-01, 3.6933e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9960e-01, 9.8356e-03, 7.8285e-03,  ..., 1.5978e-04,
          1.2824e-04, 9.9787e-01],
         [1.3461e-04, 9.8356e-03, 8.1446e-03,  ..., 1.5978e-04,
          1.2824e-04, 7.1022e-04],
         [1.3461e-04, 1.2425e-02, 7.8849e-03,  ..., 9.9952e-01,
          9.9962e-01, 7.1022e-04],
         [1.3461e-04, 9.6790e-01, 9.7614e-01,  ..., 1.5978e-04,
          1.2824e-04, 7.1022e-04]],
        [[9.9092e-01, 3.5777e-02, 1.1609e-02,  ..., 1.5276e-04,
          1.9631e-01, 2.2309e-04],
         [3.0282e-03, 3.4220e-02, 1.1609e-02,  ..., 1.5276e-04,
          2.3127e-01, 2.2309e-04],
         [3.0282e-03, 6.4602e-02, 1.4567e-02,  ..., 9.9954e-01,
          4.0227e-01, 9.9933e-01],
         [3.0282e-03, 8.6540e-01, 9.6222e-01,  ..., 1.5276e-04,
          1.7016e-01, 2.2309e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5940e-02, 1.5227e-03, 5.4562e-03,  ..., 3.8297e-03,
          2.0907e-02, 4.0212e-03],
         [2.2676e-02, 1.5227e-03, 5.4562e-03,  ..., 3.3861e-03,
          1.9633e-02, 4.0212e-03],
         [9.1993e-01, 1.5227e-03, 5.4562e-03,  ..., 9.8940e-01,
          1.9633e-02, 9.8794e-01],
         [3.1452e-02, 9.9543e-01, 9.8363e-01,  ..., 3.3861e-03,
          9.3983e-01, 4.0212e-03]],
        [[9.9712e-03, 4.9153e-04, 1.4097e-03,  ..., 2.5556e-03,
          1.9858e-03, 5.4044e-03],
         [9.9712e-03, 4.9153e-04, 1.4097e-03,  ..., 2.5556e-03,
          1.9858e-03, 5.4044e-03],
         [9.7009e-01, 4.9153e-04, 1.4097e-03,  ..., 2.5556e-03,
          1.9858e-03, 9.8379e-01],
         [9.9712e-03, 9.9853e-01, 9.9577e-01,  ..., 9.9233e-01,
          9.9404e-01, 5.4044e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:21,353 [Process: 0] Synchronize training processes
2024-08-18 15:19:21,354 [Process: 0] Evaluating...
2024-08-18 15:19:21,355 [Process: 0] EPOCH 361:
2024-08-18 15:19:21,357 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:22,483 [Process: 0] Synchronize training processes
2024-08-18 15:19:22,483 [Process: 0] Evaluating...
2024-08-18 15:19:22,487 [Process: 0] EPOCH 362:
2024-08-18 15:19:22,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9296e-01, 6.9783e-03, 2.1808e-03,  ..., 2.6174e-04,
          1.6284e-04, 9.9068e-01],
         [2.3479e-03, 6.9783e-03, 2.1808e-03,  ..., 2.6174e-04,
          1.6284e-04, 3.1067e-03],
         [2.3479e-03, 6.9783e-03, 2.1808e-03,  ..., 9.9921e-01,
          9.9951e-01, 3.1067e-03],
         [2.3479e-03, 9.7906e-01, 9.9346e-01,  ..., 2.6174e-04,
          1.6284e-04, 3.1067e-03]],
        [[9.9864e-01, 1.0768e-02, 2.9688e-03,  ..., 1.1347e-03,
          3.1211e-01, 3.2633e-04],
         [4.5418e-04, 1.0768e-02, 2.9688e-03,  ..., 1.1347e-03,
          1.9141e-01, 3.2633e-04],
         [4.5418e-04, 1.0768e-02, 2.9688e-03,  ..., 9.9660e-01,
          3.5575e-01, 9.9902e-01],
         [4.5418e-04, 9.6770e-01, 9.9109e-01,  ..., 1.1347e-03,
          1.4073e-01, 3.2633e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.4246e-03, 7.2777e-05, 1.9401e-03,  ..., 7.7348e-03,
          1.1747e-02, 3.0999e-03],
         [7.1604e-03, 7.2777e-05, 1.9401e-03,  ..., 7.3101e-03,
          1.1744e-02, 3.0999e-03],
         [9.7825e-01, 7.2777e-05, 1.9401e-03,  ..., 9.7764e-01,
          1.1744e-02, 9.9070e-01],
         [7.1604e-03, 9.9978e-01, 9.9418e-01,  ..., 7.3101e-03,
          9.6476e-01, 3.0999e-03]],
        [[7.8744e-03, 4.3485e-04, 2.8387e-03,  ..., 1.7930e-03,
          1.3496e-03, 4.1793e-03],
         [7.8744e-03, 4.3485e-04, 2.8387e-03,  ..., 1.7930e-03,
          1.3496e-03, 4.1793e-03],
         [9.7638e-01, 4.3485e-04, 2.8387e-03,  ..., 1.7930e-03,
          1.3496e-03, 9.8746e-01],
         [7.8744e-03, 9.9870e-01, 9.9148e-01,  ..., 9.9462e-01,
          9.9595e-01, 4.1793e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9733e-01, 9.3968e-03, 4.2893e-03,  ..., 9.6158e-04,
          5.7636e-04, 9.9661e-01],
         [8.8965e-04, 9.3968e-03, 4.2893e-03,  ..., 9.6158e-04,
          5.7636e-04, 1.1294e-03],
         [8.8965e-04, 9.5384e-03, 4.2893e-03,  ..., 9.9712e-01,
          9.9827e-01, 1.1294e-03],
         [8.8965e-04, 9.7167e-01, 9.8713e-01,  ..., 9.6158e-04,
          5.7636e-04, 1.1294e-03]],
        [[9.8939e-01, 2.4115e-03, 2.3006e-03,  ..., 2.8090e-04,
          4.3788e-01, 5.8602e-04],
         [3.7367e-03, 2.4115e-03, 2.3006e-03,  ..., 2.8090e-04,
          1.4476e-01, 5.8602e-04],
         [3.4383e-03, 2.4115e-03, 2.3006e-03,  ..., 9.9916e-01,
          2.9001e-01, 9.9824e-01],
         [3.4383e-03, 9.9277e-01, 9.9310e-01,  ..., 2.8090e-04,
          1.2735e-01, 5.8602e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:23,618 [Process: 0] Synchronize training processes
2024-08-18 15:19:23,619 [Process: 0] Evaluating...
2024-08-18 15:19:23,620 [Process: 0] EPOCH 363:
2024-08-18 15:19:23,622 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:24,740 [Process: 0] Synchronize training processes
2024-08-18 15:19:24,741 [Process: 0] Evaluating...
2024-08-18 15:19:24,742 [Process: 0] EPOCH 364:
2024-08-18 15:19:24,744 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1898e-03, 2.8326e-03, 1.4639e-03,  ..., 1.5074e-02,
          3.3733e-03, 1.1996e-03],
         [2.1898e-03, 2.8326e-03, 1.4639e-03,  ..., 1.3526e-02,
          3.3733e-03, 1.1996e-03],
         [9.9343e-01, 2.8326e-03, 1.4639e-03,  ..., 9.5594e-01,
          3.3733e-03, 9.9640e-01],
         [2.1898e-03, 9.9150e-01, 9.9561e-01,  ..., 1.5461e-02,
          9.8988e-01, 1.1996e-03]],
        [[5.2063e-03, 7.5083e-04, 6.1521e-04,  ..., 9.9392e-04,
          4.1799e-04, 4.9463e-03],
         [5.2063e-03, 7.5083e-04, 6.1521e-04,  ..., 9.9392e-04,
          4.1799e-04, 4.9463e-03],
         [9.8438e-01, 7.5083e-04, 6.1521e-04,  ..., 9.9392e-04,
          4.1799e-04, 9.8516e-01],
         [5.2063e-03, 9.9775e-01, 9.9815e-01,  ..., 9.9702e-01,
          9.9875e-01, 4.9463e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9887e-01, 2.1726e-03, 4.2365e-03,  ..., 4.6930e-04,
          2.8090e-04, 9.9694e-01],
         [3.7722e-04, 2.1726e-03, 4.2365e-03,  ..., 4.6930e-04,
          2.8090e-04, 1.0188e-03],
         [3.7722e-04, 2.1726e-03, 4.2365e-03,  ..., 9.9859e-01,
          9.9916e-01, 1.0188e-03],
         [3.7722e-04, 9.9348e-01, 9.8729e-01,  ..., 4.6930e-04,
          2.8090e-04, 1.0188e-03]],
        [[9.8009e-01, 1.4443e-02, 6.3350e-04,  ..., 5.1638e-04,
          4.1803e-01, 1.4374e-04],
         [6.6359e-03, 1.4443e-02, 6.3350e-04,  ..., 5.1638e-04,
          2.4776e-01, 1.4374e-04],
         [6.6359e-03, 1.7451e-02, 6.3350e-04,  ..., 9.9845e-01,
          2.2054e-01, 9.9957e-01],
         [6.6359e-03, 9.5366e-01, 9.9810e-01,  ..., 5.1638e-04,
          1.1368e-01, 1.4374e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0952e-02, 1.3003e-03, 6.0787e-03,  ..., 2.4857e-03,
          3.9303e-02, 7.7931e-03],
         [1.0952e-02, 1.3003e-03, 6.0787e-03,  ..., 2.4857e-03,
          3.0912e-02, 7.7931e-03],
         [9.6616e-01, 1.3003e-03, 6.0787e-03,  ..., 9.9254e-01,
          2.8581e-02, 9.7626e-01],
         [1.1936e-02, 9.9610e-01, 9.8176e-01,  ..., 2.4857e-03,
          9.0120e-01, 8.1539e-03]],
        [[2.3496e-03, 1.1491e-03, 3.3497e-04,  ..., 6.3582e-04,
          2.5190e-04, 3.4293e-03],
         [2.3496e-03, 1.1491e-03, 3.3497e-04,  ..., 6.3582e-04,
          2.5190e-04, 3.4293e-03],
         [9.9295e-01, 1.1491e-03, 3.3497e-04,  ..., 6.3582e-04,
          2.5190e-04, 9.8971e-01],
         [2.3496e-03, 9.9655e-01, 9.9900e-01,  ..., 9.9809e-01,
          9.9924e-01, 3.4293e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9964e-01, 1.6795e-03, 1.3254e-02,  ..., 3.0372e-04,
          5.1806e-04, 9.9558e-01],
         [1.2012e-04, 1.6795e-03, 1.1473e-02,  ..., 3.0372e-04,
          5.1806e-04, 1.4726e-03],
         [1.2012e-04, 1.6795e-03, 1.1473e-02,  ..., 9.9909e-01,
          9.9845e-01, 1.4726e-03],
         [1.2012e-04, 9.9496e-01, 9.6380e-01,  ..., 3.0372e-04,
          5.1806e-04, 1.4726e-03]],
        [[9.9753e-01, 7.6373e-03, 1.2013e-03,  ..., 2.8837e-04,
          3.8427e-01, 2.1471e-03],
         [8.2432e-04, 7.6373e-03, 1.2013e-03,  ..., 2.8837e-04,
          2.6051e-01, 2.1471e-03],
         [8.2432e-04, 8.0277e-03, 1.2013e-03,  ..., 9.9913e-01,
          2.4301e-01, 9.9356e-01],
         [8.2432e-04, 9.7670e-01, 9.9640e-01,  ..., 2.8837e-04,
          1.1221e-01, 2.1471e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:25,862 [Process: 0] Synchronize training processes
2024-08-18 15:19:25,863 [Process: 0] Evaluating...
2024-08-18 15:19:25,864 [Process: 0] EPOCH 365:
2024-08-18 15:19:25,866 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:26,995 [Process: 0] Synchronize training processes
2024-08-18 15:19:26,995 [Process: 0] Evaluating...
2024-08-18 15:19:26,997 [Process: 0] EPOCH 366:
2024-08-18 15:19:26,998 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3817e-03, 4.3885e-03, 5.5725e-03,  ..., 8.4943e-03,
          2.0468e-02, 3.9003e-03],
         [3.3817e-03, 4.3885e-03, 5.5725e-03,  ..., 8.4943e-03,
          1.2313e-02, 3.9003e-03],
         [9.8985e-01, 4.3885e-03, 5.5725e-03,  ..., 9.7371e-01,
          1.2313e-02, 9.8830e-01],
         [3.3817e-03, 9.8683e-01, 9.8328e-01,  ..., 9.3054e-03,
          9.5491e-01, 3.9003e-03]],
        [[5.2791e-03, 3.5981e-04, 4.3323e-04,  ..., 1.5641e-04,
          9.1038e-04, 3.5343e-03],
         [5.2791e-03, 3.5981e-04, 4.3323e-04,  ..., 1.5641e-04,
          9.1038e-04, 3.5343e-03],
         [9.8416e-01, 3.5981e-04, 4.3323e-04,  ..., 1.5641e-04,
          9.1038e-04, 9.8940e-01],
         [5.2791e-03, 9.9892e-01, 9.9870e-01,  ..., 9.9953e-01,
          9.9727e-01, 3.5343e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9692e-01, 3.5745e-03, 2.1239e-02,  ..., 3.1132e-04,
          2.1710e-04, 9.9644e-01],
         [1.0279e-03, 3.5745e-03, 1.8176e-02,  ..., 3.1132e-04,
          2.1710e-04, 1.1860e-03],
         [1.0279e-03, 3.5745e-03, 2.1395e-02,  ..., 9.9907e-01,
          9.9935e-01, 1.1860e-03],
         [1.0279e-03, 9.8928e-01, 9.3919e-01,  ..., 3.1132e-04,
          2.1710e-04, 1.1860e-03]],
        [[9.9708e-01, 8.9361e-03, 1.8768e-03,  ..., 4.0307e-05,
          5.0665e-01, 4.5593e-04],
         [9.7301e-04, 8.9361e-03, 1.8768e-03,  ..., 4.0307e-05,
          1.8785e-01, 4.5593e-04],
         [9.7301e-04, 8.9361e-03, 1.8768e-03,  ..., 9.9988e-01,
          2.2216e-01, 9.9863e-01],
         [9.7301e-04, 9.7319e-01, 9.9437e-01,  ..., 4.0307e-05,
          8.3335e-02, 4.5593e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0125e-03, 1.3867e-03, 1.5744e-03,  ..., 2.0837e-03,
          8.3458e-03, 5.5710e-03],
         [4.0125e-03, 1.3867e-03, 1.5744e-03,  ..., 2.0837e-03,
          6.1496e-03, 5.5710e-03],
         [9.8796e-01, 1.3867e-03, 1.5744e-03,  ..., 9.9375e-01,
          6.1496e-03, 9.8329e-01],
         [4.0125e-03, 9.9584e-01, 9.9528e-01,  ..., 2.0837e-03,
          9.7935e-01, 5.5710e-03]],
        [[3.4744e-03, 1.2256e-03, 1.1090e-03,  ..., 4.3492e-04,
          6.6549e-04, 5.7441e-03],
         [3.4744e-03, 1.2256e-03, 1.1090e-03,  ..., 4.3492e-04,
          6.6549e-04, 5.7441e-03],
         [9.8958e-01, 1.2256e-03, 1.1090e-03,  ..., 4.3492e-04,
          6.6549e-04, 9.8277e-01],
         [3.4744e-03, 9.9632e-01, 9.9667e-01,  ..., 9.9870e-01,
          9.9800e-01, 5.7441e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:19:28,119 [Process: 0] Synchronize training processes
2024-08-18 15:19:28,119 [Process: 0] Evaluating...
2024-08-18 15:19:28,121 [Process: 0] EPOCH 367:
2024-08-18 15:19:28,123 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:29,239 [Process: 0] Synchronize training processes
2024-08-18 15:19:29,240 [Process: 0] Evaluating...
2024-08-18 15:19:29,241 [Process: 0] EPOCH 368:
2024-08-18 15:19:29,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9603e-01, 8.3608e-03, 4.1941e-03,  ..., 2.5619e-05,
          2.9274e-03, 9.9614e-01],
         [1.3248e-03, 8.3608e-03, 4.1941e-03,  ..., 2.5619e-05,
          2.9274e-03, 1.2860e-03],
         [1.3248e-03, 8.3608e-03, 4.1941e-03,  ..., 9.9992e-01,
          9.9122e-01, 1.2860e-03],
         [1.3248e-03, 9.7492e-01, 9.8742e-01,  ..., 2.5619e-05,
          2.9274e-03, 1.2860e-03]],
        [[9.9886e-01, 3.2961e-03, 3.3974e-03,  ..., 1.3364e-03,
          2.7756e-01, 3.3576e-04],
         [3.7992e-04, 3.2961e-03, 3.3974e-03,  ..., 1.3364e-03,
          2.5954e-01, 3.3576e-04],
         [3.7992e-04, 3.2961e-03, 3.3974e-03,  ..., 9.9599e-01,
          3.7592e-01, 9.9899e-01],
         [3.7992e-04, 9.9011e-01, 9.8981e-01,  ..., 1.3364e-03,
          8.6980e-02, 3.3576e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0841e-03, 4.8961e-04, 7.1852e-04,  ..., 9.9705e-03,
          1.4911e-03, 1.7792e-03],
         [4.0841e-03, 4.8961e-04, 7.1852e-04,  ..., 9.9705e-03,
          1.4911e-03, 1.7792e-03],
         [9.8775e-01, 4.8961e-04, 7.1852e-04,  ..., 9.6951e-01,
          1.4911e-03, 9.9466e-01],
         [4.0841e-03, 9.9853e-01, 9.9784e-01,  ..., 1.0545e-02,
          9.9553e-01, 1.7792e-03]],
        [[1.8612e-03, 5.6850e-04, 3.9071e-04,  ..., 5.6849e-04,
          3.4071e-05, 3.1303e-03],
         [1.8612e-03, 5.6850e-04, 3.9071e-04,  ..., 5.6849e-04,
          3.4071e-05, 3.1303e-03],
         [9.9442e-01, 5.6850e-04, 3.9071e-04,  ..., 5.6849e-04,
          3.4071e-05, 9.9061e-01],
         [1.8612e-03, 9.9829e-01, 9.9883e-01,  ..., 9.9829e-01,
          9.9990e-01, 3.1303e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9884e-01, 7.6289e-03, 2.3447e-03,  ..., 3.5086e-04,
          7.9082e-03, 9.9479e-01],
         [3.8654e-04, 7.6289e-03, 2.3447e-03,  ..., 3.5086e-04,
          7.9082e-03, 1.7357e-03],
         [3.8654e-04, 7.6289e-03, 2.3447e-03,  ..., 9.9895e-01,
          9.7628e-01, 1.7357e-03],
         [3.8654e-04, 9.7711e-01, 9.9297e-01,  ..., 3.5086e-04,
          7.9082e-03, 1.7357e-03]],
        [[9.9682e-01, 7.8023e-03, 2.0427e-03,  ..., 1.7703e-04,
          1.7635e-01, 2.7571e-04],
         [1.0600e-03, 7.8023e-03, 2.0427e-03,  ..., 1.7703e-04,
          3.3392e-01, 2.7571e-04],
         [1.0600e-03, 7.8023e-03, 2.0427e-03,  ..., 9.9947e-01,
          3.6006e-01, 9.9917e-01],
         [1.0600e-03, 9.7659e-01, 9.9387e-01,  ..., 1.7703e-04,
          1.2967e-01, 2.7571e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3683e-03, 2.0790e-03, 4.2106e-04,  ..., 3.5882e-03,
          6.4815e-04, 1.5124e-03],
         [3.3683e-03, 2.0790e-03, 4.2106e-04,  ..., 3.5882e-03,
          6.4815e-04, 1.5124e-03],
         [9.8990e-01, 2.0790e-03, 4.2106e-04,  ..., 9.8924e-01,
          6.4815e-04, 9.9546e-01],
         [3.3683e-03, 9.9376e-01, 9.9874e-01,  ..., 3.5882e-03,
          9.9806e-01, 1.5124e-03]],
        [[5.7336e-03, 1.2046e-03, 1.9659e-03,  ..., 8.2669e-04,
          2.3069e-04, 9.4583e-03],
         [5.7336e-03, 1.2046e-03, 1.9659e-03,  ..., 8.2669e-04,
          2.3069e-04, 7.5882e-03],
         [9.8280e-01, 1.2046e-03, 1.9659e-03,  ..., 8.2669e-04,
          2.3069e-04, 9.7537e-01],
         [5.7336e-03, 9.9639e-01, 9.9410e-01,  ..., 9.9752e-01,
          9.9931e-01, 7.5882e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:30,362 [Process: 0] Synchronize training processes
2024-08-18 15:19:30,363 [Process: 0] Evaluating...
2024-08-18 15:19:30,364 [Process: 0] EPOCH 369:
2024-08-18 15:19:30,366 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9805e-01, 3.7278e-03, 5.7966e-03,  ..., 1.6125e-04,
          1.1055e-03, 9.9707e-01],
         [6.5153e-04, 3.7278e-03, 5.7966e-03,  ..., 1.6125e-04,
          1.1055e-03, 9.7775e-04],
         [6.5153e-04, 3.7278e-03, 5.7966e-03,  ..., 9.9952e-01,
          9.9668e-01, 9.7775e-04],
         [6.5153e-04, 9.8882e-01, 9.8261e-01,  ..., 1.6125e-04,
          1.1055e-03, 9.7775e-04]],
        [[9.9769e-01, 1.1737e-02, 1.3438e-02,  ..., 6.2792e-04,
          1.8580e-01, 1.6913e-04],
         [7.6840e-04, 1.0630e-02, 1.3413e-02,  ..., 6.2792e-04,
          4.9814e-01, 1.6913e-04],
         [7.6840e-04, 1.1301e-02, 1.4222e-02,  ..., 9.9812e-01,
          1.9652e-01, 9.9949e-01],
         [7.6840e-04, 9.6633e-01, 9.5893e-01,  ..., 6.2792e-04,
          1.1954e-01, 1.6913e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5819e-03, 1.6417e-02, 1.0277e-03,  ..., 8.4072e-03,
          7.1922e-05, 6.0087e-03],
         [4.5819e-03, 1.4848e-02, 1.0277e-03,  ..., 8.4072e-03,
          7.1922e-05, 6.0087e-03],
         [9.8625e-01, 1.4848e-02, 1.0277e-03,  ..., 9.7430e-01,
          7.1922e-05, 9.8197e-01],
         [4.5819e-03, 9.5389e-01, 9.9692e-01,  ..., 8.8815e-03,
          9.9978e-01, 6.0087e-03]],
        [[1.9354e-02, 3.0280e-04, 1.8803e-03,  ..., 2.6528e-04,
          1.7218e-04, 7.8285e-03],
         [1.5872e-02, 3.0280e-04, 1.8803e-03,  ..., 2.6528e-04,
          1.7218e-04, 6.8384e-03],
         [9.4564e-01, 3.0280e-04, 1.8803e-03,  ..., 2.6528e-04,
          1.7218e-04, 9.7849e-01],
         [1.9130e-02, 9.9909e-01, 9.9436e-01,  ..., 9.9920e-01,
          9.9948e-01, 6.8384e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9834e-01, 7.0699e-03, 1.3425e-03,  ..., 1.0424e-04,
          7.5259e-04, 9.9696e-01],
         [5.5185e-04, 7.0699e-03, 1.3425e-03,  ..., 1.0424e-04,
          7.5259e-04, 1.0119e-03],
         [5.5185e-04, 7.0699e-03, 1.3425e-03,  ..., 9.9969e-01,
          9.9774e-01, 1.0119e-03],
         [5.5185e-04, 9.7879e-01, 9.9597e-01,  ..., 1.0424e-04,
          7.5259e-04, 1.0119e-03]],
        [[9.9632e-01, 9.7211e-03, 1.7779e-02,  ..., 5.0724e-04,
          1.0356e-01, 5.8618e-04],
         [1.2266e-03, 9.7211e-03, 1.7779e-02,  ..., 5.0724e-04,
          7.3167e-01, 5.8618e-04],
         [1.2266e-03, 9.7211e-03, 1.7779e-02,  ..., 9.9848e-01,
          1.0955e-01, 9.9824e-01],
         [1.2266e-03, 9.7084e-01, 9.4666e-01,  ..., 5.0724e-04,
          5.5218e-02, 5.8618e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3995e-02, 1.9453e-04, 1.5157e-03,  ..., 2.8144e-03,
          1.1246e-03, 5.8574e-03],
         [1.3995e-02, 1.9453e-04, 1.5157e-03,  ..., 2.8144e-03,
          1.1246e-03, 5.5901e-03],
         [9.5534e-01, 1.9453e-04, 1.5157e-03,  ..., 9.9156e-01,
          1.1246e-03, 9.8296e-01],
         [1.6671e-02, 9.9942e-01, 9.9545e-01,  ..., 2.8144e-03,
          9.9663e-01, 5.5901e-03]],
        [[4.0231e-03, 1.4581e-04, 6.0462e-04,  ..., 3.2749e-05,
          1.1417e-04, 6.2525e-03],
         [4.0231e-03, 1.4581e-04, 6.0462e-04,  ..., 3.2749e-05,
          1.1417e-04, 5.7050e-03],
         [9.8793e-01, 1.4581e-04, 6.0462e-04,  ..., 3.2749e-05,
          1.1417e-04, 9.8234e-01],
         [4.0231e-03, 9.9956e-01, 9.9819e-01,  ..., 9.9990e-01,
          9.9966e-01, 5.7050e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:31,496 [Process: 0] Synchronize training processes
2024-08-18 15:19:31,496 [Process: 0] Evaluating...
2024-08-18 15:19:31,498 [Process: 0] EPOCH 370:
2024-08-18 15:19:31,500 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:32,629 [Process: 0] Synchronize training processes
2024-08-18 15:19:32,630 [Process: 0] Evaluating...
2024-08-18 15:19:32,632 [Process: 0] EPOCH 371:
2024-08-18 15:19:32,633 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9896e-01, 5.4967e-03, 7.4320e-03,  ..., 2.8707e-04,
          8.3005e-04, 9.9986e-01],
         [3.4519e-04, 5.4967e-03, 7.4320e-03,  ..., 2.8707e-04,
          8.3005e-04, 4.8024e-05],
         [3.4519e-04, 5.4967e-03, 7.4320e-03,  ..., 9.9914e-01,
          9.9751e-01, 4.8024e-05],
         [3.4519e-04, 9.8351e-01, 9.7770e-01,  ..., 2.8707e-04,
          8.3005e-04, 4.8024e-05]],
        [[9.9914e-01, 2.1453e-03, 1.9189e-02,  ..., 2.3314e-04,
          2.9097e-01, 1.0271e-03],
         [2.8732e-04, 2.1453e-03, 1.5487e-02,  ..., 2.3314e-04,
          3.2387e-01, 1.0271e-03],
         [2.8732e-04, 2.1453e-03, 2.1765e-02,  ..., 9.9930e-01,
          2.5941e-01, 9.9692e-01],
         [2.8732e-04, 9.9356e-01, 9.4356e-01,  ..., 2.3314e-04,
          1.2576e-01, 1.0271e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8097e-03, 2.3179e-04, 6.8797e-04,  ..., 3.3421e-03,
          7.9024e-05, 3.4578e-02],
         [2.8097e-03, 2.3179e-04, 6.8797e-04,  ..., 3.3421e-03,
          7.9024e-05, 2.6244e-02],
         [9.9157e-01, 2.3179e-04, 6.8797e-04,  ..., 9.8997e-01,
          7.9024e-05, 9.0464e-01],
         [2.8097e-03, 9.9930e-01, 9.9794e-01,  ..., 3.3421e-03,
          9.9976e-01, 3.4534e-02]],
        [[2.8134e-03, 9.5734e-04, 7.3661e-05,  ..., 9.1704e-04,
          2.7259e-03, 4.5914e-03],
         [2.8134e-03, 9.5734e-04, 7.3661e-05,  ..., 9.1704e-04,
          2.7259e-03, 4.5914e-03],
         [9.9156e-01, 9.5734e-04, 7.3661e-05,  ..., 9.1704e-04,
          2.7259e-03, 9.8623e-01],
         [2.8134e-03, 9.9713e-01, 9.9978e-01,  ..., 9.9725e-01,
          9.9182e-01, 4.5914e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9726e-01, 1.2534e-02, 1.5413e-02,  ..., 1.7039e-03,
          3.1631e-04, 9.9715e-01],
         [9.1258e-04, 1.1988e-02, 1.2261e-02,  ..., 1.7039e-03,
          3.1631e-04, 9.5034e-04],
         [9.1258e-04, 1.6437e-02, 1.2261e-02,  ..., 9.9489e-01,
          9.9905e-01, 9.5034e-04],
         [9.1258e-04, 9.5904e-01, 9.6007e-01,  ..., 1.7039e-03,
          3.1631e-04, 9.5034e-04]],
        [[9.9632e-01, 3.7346e-03, 1.9407e-03,  ..., 1.7838e-03,
          1.9921e-01, 1.3300e-04],
         [1.2261e-03, 3.7346e-03, 1.9407e-03,  ..., 1.7838e-03,
          3.8264e-01, 1.3300e-04],
         [1.2261e-03, 3.7346e-03, 1.9407e-03,  ..., 9.9465e-01,
          2.2803e-01, 9.9960e-01],
         [1.2261e-03, 9.8880e-01, 9.9418e-01,  ..., 1.7838e-03,
          1.9013e-01, 1.3300e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:33,754 [Process: 0] Synchronize training processes
2024-08-18 15:19:33,754 [Process: 0] Evaluating...
2024-08-18 15:19:33,757 [Process: 0] EPOCH 372:
2024-08-18 15:19:33,759 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:34,874 [Process: 0] Synchronize training processes
2024-08-18 15:19:34,874 [Process: 0] Evaluating...
2024-08-18 15:19:34,876 [Process: 0] EPOCH 373:
2024-08-18 15:19:34,878 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.9818e-03, 5.3778e-04, 7.1268e-04,  ..., 4.6017e-03,
          5.8996e-04, 1.3768e-02],
         [3.9818e-03, 5.3778e-04, 7.1268e-04,  ..., 4.6017e-03,
          5.8996e-04, 1.2406e-02],
         [9.8805e-01, 5.3778e-04, 7.1268e-04,  ..., 9.8619e-01,
          5.8996e-04, 9.6142e-01],
         [3.9818e-03, 9.9839e-01, 9.9786e-01,  ..., 4.6017e-03,
          9.9823e-01, 1.2406e-02]],
        [[5.4304e-03, 2.4465e-04, 1.5652e-04,  ..., 8.1304e-05,
          3.8717e-04, 2.8381e-03],
         [5.4304e-03, 2.4465e-04, 1.5652e-04,  ..., 8.1304e-05,
          3.8717e-04, 2.8381e-03],
         [9.8371e-01, 2.4465e-04, 1.5652e-04,  ..., 8.1304e-05,
          3.8717e-04, 9.9149e-01],
         [5.4304e-03, 9.9927e-01, 9.9953e-01,  ..., 9.9976e-01,
          9.9884e-01, 2.8381e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9981e-01, 3.0929e-03, 8.4618e-03,  ..., 7.1772e-04,
          3.5434e-03, 9.9968e-01],
         [6.1820e-05, 3.0929e-03, 8.4618e-03,  ..., 7.1772e-04,
          3.5434e-03, 1.0540e-04],
         [6.1820e-05, 3.0929e-03, 8.4618e-03,  ..., 9.9785e-01,
          9.8937e-01, 1.0540e-04],
         [6.1820e-05, 9.9072e-01, 9.7461e-01,  ..., 7.1772e-04,
          3.5434e-03, 1.0540e-04]],
        [[9.9544e-01, 8.9412e-03, 6.3735e-03,  ..., 8.4751e-04,
          1.7889e-01, 3.2995e-04],
         [1.5196e-03, 8.9412e-03, 6.3735e-03,  ..., 8.4751e-04,
          5.2345e-01, 3.2995e-04],
         [1.5196e-03, 8.9412e-03, 6.3735e-03,  ..., 9.9746e-01,
          2.3496e-01, 9.9901e-01],
         [1.5196e-03, 9.7318e-01, 9.8088e-01,  ..., 8.4751e-04,
          6.2692e-02, 3.2995e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.8538e-03, 2.2026e-03, 1.0366e-03,  ..., 2.3718e-03,
          8.4072e-04, 3.0714e-03],
         [6.8538e-03, 2.2026e-03, 1.0366e-03,  ..., 2.3718e-03,
          8.4072e-04, 3.0714e-03],
         [9.7944e-01, 2.2026e-03, 1.0366e-03,  ..., 9.9288e-01,
          8.4072e-04, 9.9079e-01],
         [6.8538e-03, 9.9339e-01, 9.9689e-01,  ..., 2.3718e-03,
          9.9748e-01, 3.0714e-03]],
        [[3.1684e-03, 4.2003e-04, 4.6800e-04,  ..., 2.6940e-04,
          5.1456e-05, 2.3635e-03],
         [3.1684e-03, 4.2003e-04, 4.6800e-04,  ..., 2.6940e-04,
          5.1456e-05, 2.3635e-03],
         [9.9049e-01, 4.2003e-04, 4.6800e-04,  ..., 2.6940e-04,
          5.1456e-05, 9.9291e-01],
         [3.1684e-03, 9.9874e-01, 9.9860e-01,  ..., 9.9919e-01,
          9.9985e-01, 2.3635e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8063e-01, 7.7081e-03, 6.5019e-03,  ..., 5.2111e-04,
          1.1243e-03, 9.9615e-01],
         [7.7612e-03, 7.7081e-03, 6.5019e-03,  ..., 5.2111e-04,
          1.1243e-03, 1.3645e-03],
         [5.8040e-03, 7.7081e-03, 6.5019e-03,  ..., 9.9844e-01,
          9.9663e-01, 1.2448e-03],
         [5.8040e-03, 9.7688e-01, 9.8049e-01,  ..., 5.2111e-04,
          1.1243e-03, 1.2448e-03]],
        [[9.9763e-01, 8.3800e-03, 5.6684e-03,  ..., 9.3424e-05,
          1.5688e-01, 9.1481e-04],
         [8.7040e-04, 8.3800e-03, 5.6314e-03,  ..., 9.3424e-05,
          4.7970e-01, 9.1481e-04],
         [7.4959e-04, 8.3800e-03, 5.6314e-03,  ..., 9.9972e-01,
          3.0107e-01, 9.9726e-01],
         [7.4959e-04, 9.7486e-01, 9.8307e-01,  ..., 9.3424e-05,
          6.2354e-02, 9.1481e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:36,009 [Process: 0] Synchronize training processes
2024-08-18 15:19:36,010 [Process: 0] Evaluating...
2024-08-18 15:19:36,011 [Process: 0] EPOCH 374:
2024-08-18 15:19:36,013 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:37,147 [Process: 0] Synchronize training processes
2024-08-18 15:19:37,147 [Process: 0] Evaluating...
2024-08-18 15:19:37,149 [Process: 0] EPOCH 375:
2024-08-18 15:19:37,151 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7644e-03, 3.3835e-04, 8.3135e-04,  ..., 6.0874e-03,
          1.2365e-03, 3.9946e-03],
         [6.7644e-03, 3.3835e-04, 8.3135e-04,  ..., 6.0874e-03,
          1.2365e-03, 3.9946e-03],
         [9.7971e-01, 3.3835e-04, 8.3135e-04,  ..., 9.8174e-01,
          1.2365e-03, 9.8802e-01],
         [6.7644e-03, 9.9898e-01, 9.9751e-01,  ..., 6.0874e-03,
          9.9629e-01, 3.9946e-03]],
        [[4.1081e-03, 1.1654e-03, 7.0393e-04,  ..., 2.0724e-04,
          4.3241e-04, 9.5523e-03],
         [4.1081e-03, 1.1654e-03, 7.0393e-04,  ..., 2.0724e-04,
          4.3241e-04, 9.5148e-03],
         [9.8768e-01, 1.1654e-03, 7.0393e-04,  ..., 2.0724e-04,
          4.3241e-04, 9.7055e-01],
         [4.1081e-03, 9.9650e-01, 9.9789e-01,  ..., 9.9938e-01,
          9.9870e-01, 1.0380e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9949e-01, 4.6977e-03, 3.7753e-03,  ..., 1.1770e-04,
          6.4097e-04, 9.9724e-01],
         [1.6998e-04, 4.6977e-03, 3.7753e-03,  ..., 1.1770e-04,
          6.4097e-04, 9.2080e-04],
         [1.6998e-04, 4.6977e-03, 3.7753e-03,  ..., 9.9965e-01,
          9.9808e-01, 9.2080e-04],
         [1.6998e-04, 9.8591e-01, 9.8867e-01,  ..., 1.1770e-04,
          6.4097e-04, 9.2080e-04]],
        [[9.9819e-01, 2.5880e-03, 1.1676e-03,  ..., 1.3349e-04,
          3.2857e-01, 3.1930e-04],
         [6.0309e-04, 2.5880e-03, 1.1676e-03,  ..., 1.3349e-04,
          3.0403e-01, 3.1930e-04],
         [6.0309e-04, 2.5880e-03, 1.1676e-03,  ..., 9.9960e-01,
          2.3462e-01, 9.9904e-01],
         [6.0309e-04, 9.9224e-01, 9.9650e-01,  ..., 1.3349e-04,
          1.3278e-01, 3.1930e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4155e-03, 3.6576e-04, 7.1595e-04,  ..., 4.0970e-03,
          9.3792e-04, 3.7638e-03],
         [2.4155e-03, 3.6576e-04, 7.1595e-04,  ..., 4.0970e-03,
          9.3792e-04, 3.7638e-03],
         [9.9275e-01, 3.6576e-04, 7.1595e-04,  ..., 9.8771e-01,
          9.3792e-04, 9.8871e-01],
         [2.4155e-03, 9.9890e-01, 9.9785e-01,  ..., 4.0970e-03,
          9.9719e-01, 3.7638e-03]],
        [[1.1949e-03, 1.4985e-03, 1.7852e-04,  ..., 3.3774e-05,
          2.6501e-04, 7.4758e-03],
         [1.1949e-03, 1.4985e-03, 1.7852e-04,  ..., 3.3774e-05,
          2.6501e-04, 6.0783e-03],
         [9.9642e-01, 1.4985e-03, 1.7852e-04,  ..., 3.3774e-05,
          2.6501e-04, 9.8037e-01],
         [1.1949e-03, 9.9550e-01, 9.9946e-01,  ..., 9.9990e-01,
          9.9920e-01, 6.0783e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:38,278 [Process: 0] Synchronize training processes
2024-08-18 15:19:38,278 [Process: 0] Evaluating...
2024-08-18 15:19:38,280 [Process: 0] EPOCH 376:
2024-08-18 15:19:38,281 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9900e-01, 4.6499e-03, 1.0850e-02,  ..., 8.2712e-04,
          5.6910e-04, 9.9785e-01],
         [3.3316e-04, 4.6499e-03, 1.0850e-02,  ..., 8.2712e-04,
          5.6910e-04, 7.1516e-04],
         [3.3316e-04, 4.6499e-03, 1.2493e-02,  ..., 9.9752e-01,
          9.9829e-01, 7.1516e-04],
         [3.3316e-04, 9.8605e-01, 9.6581e-01,  ..., 8.2712e-04,
          5.6910e-04, 7.1516e-04]],
        [[9.9777e-01, 3.4705e-03, 7.7446e-03,  ..., 9.8060e-04,
          1.5674e-01, 9.1727e-04],
         [7.4489e-04, 3.4705e-03, 7.3781e-03,  ..., 9.8060e-04,
          6.7634e-01, 9.1727e-04],
         [7.4489e-04, 3.4705e-03, 7.3781e-03,  ..., 9.9706e-01,
          1.0253e-01, 9.9725e-01],
         [7.4489e-04, 9.8959e-01, 9.7750e-01,  ..., 9.8060e-04,
          6.4397e-02, 9.1727e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.4645e-03, 2.5760e-04, 3.4442e-03,  ..., 8.4238e-03,
          1.0714e-03, 3.8115e-03],
         [6.4645e-03, 2.5760e-04, 3.4442e-03,  ..., 7.6544e-03,
          1.0714e-03, 3.8115e-03],
         [9.8061e-01, 2.5760e-04, 3.4442e-03,  ..., 9.7627e-01,
          1.0714e-03, 9.8857e-01],
         [6.4645e-03, 9.9923e-01, 9.8967e-01,  ..., 7.6544e-03,
          9.9679e-01, 3.8115e-03]],
        [[7.1108e-03, 6.1886e-04, 3.1417e-04,  ..., 2.6513e-04,
          9.3227e-04, 3.2394e-03],
         [7.1108e-03, 6.1886e-04, 3.1417e-04,  ..., 2.6513e-04,
          9.3227e-04, 3.2394e-03],
         [9.7867e-01, 6.1886e-04, 3.1417e-04,  ..., 2.6513e-04,
          9.3227e-04, 9.9028e-01],
         [7.1108e-03, 9.9814e-01, 9.9906e-01,  ..., 9.9920e-01,
          9.9720e-01, 3.2394e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9961e-01, 4.3672e-03, 6.1020e-03,  ..., 2.6729e-03,
          1.5518e-04, 9.9654e-01],
         [1.2886e-04, 4.3672e-03, 6.1020e-03,  ..., 2.6729e-03,
          1.5518e-04, 1.1543e-03],
         [1.2886e-04, 4.3672e-03, 6.1020e-03,  ..., 9.9198e-01,
          9.9953e-01, 1.1543e-03],
         [1.2886e-04, 9.8690e-01, 9.8169e-01,  ..., 2.6729e-03,
          1.5518e-04, 1.1543e-03]],
        [[9.9762e-01, 1.5043e-03, 1.8109e-03,  ..., 3.3225e-04,
          4.9054e-01, 7.8190e-04],
         [7.9333e-04, 1.5043e-03, 1.8109e-03,  ..., 3.3225e-04,
          3.2715e-01, 7.8190e-04],
         [7.9333e-04, 1.5043e-03, 1.8109e-03,  ..., 9.9900e-01,
          1.1385e-01, 9.9765e-01],
         [7.9333e-04, 9.9549e-01, 9.9457e-01,  ..., 3.3225e-04,
          6.8464e-02, 7.8190e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9704e-02, 6.3887e-05, 1.4330e-03,  ..., 4.9562e-03,
          9.9996e-04, 3.3427e-03],
         [1.4613e-02, 6.3887e-05, 1.4330e-03,  ..., 4.9562e-03,
          9.9996e-04, 3.3427e-03],
         [9.5107e-01, 6.3887e-05, 1.4330e-03,  ..., 9.8513e-01,
          9.9996e-04, 9.8997e-01],
         [1.4613e-02, 9.9981e-01, 9.9570e-01,  ..., 4.9562e-03,
          9.9700e-01, 3.3427e-03]],
        [[7.6215e-03, 1.1160e-03, 6.0518e-04,  ..., 6.8704e-04,
          1.0946e-04, 8.0219e-03],
         [7.6215e-03, 1.1160e-03, 6.0518e-04,  ..., 6.8704e-04,
          1.0946e-04, 8.0219e-03],
         [9.7714e-01, 1.1160e-03, 6.0518e-04,  ..., 6.8704e-04,
          1.0946e-04, 9.7593e-01],
         [7.6215e-03, 9.9665e-01, 9.9818e-01,  ..., 9.9794e-01,
          9.9967e-01, 8.0219e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:39,408 [Process: 0] Synchronize training processes
2024-08-18 15:19:39,408 [Process: 0] Evaluating...
2024-08-18 15:19:39,410 [Process: 0] EPOCH 377:
2024-08-18 15:19:39,411 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:40,539 [Process: 0] Synchronize training processes
2024-08-18 15:19:40,539 [Process: 0] Evaluating...
2024-08-18 15:19:40,541 [Process: 0] EPOCH 378:
2024-08-18 15:19:40,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9606e-01, 5.6652e-03, 8.3951e-03,  ..., 1.7748e-04,
          1.1831e-03, 9.9723e-01],
         [1.3140e-03, 5.6652e-03, 8.1437e-03,  ..., 1.7748e-04,
          1.1831e-03, 9.2306e-04],
         [1.3140e-03, 5.6652e-03, 8.1437e-03,  ..., 9.9947e-01,
          9.9645e-01, 9.2306e-04],
         [1.3140e-03, 9.8300e-01, 9.7532e-01,  ..., 1.7748e-04,
          1.1831e-03, 9.2306e-04]],
        [[9.9677e-01, 2.4005e-03, 9.9136e-03,  ..., 2.0202e-03,
          4.5849e-01, 3.0596e-04],
         [1.0762e-03, 2.4005e-03, 9.1915e-03,  ..., 2.0202e-03,
          3.0153e-01, 3.0596e-04],
         [1.0762e-03, 2.4005e-03, 9.1915e-03,  ..., 9.9394e-01,
          1.3630e-01, 9.9908e-01],
         [1.0762e-03, 9.9280e-01, 9.7170e-01,  ..., 2.0202e-03,
          1.0368e-01, 3.0596e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2756e-03, 8.5887e-04, 5.9016e-04,  ..., 2.1562e-03,
          2.2239e-04, 4.6580e-03],
         [3.2756e-03, 8.5887e-04, 5.9016e-04,  ..., 2.1562e-03,
          2.2239e-04, 4.6580e-03],
         [9.9017e-01, 8.5887e-04, 5.9016e-04,  ..., 9.9353e-01,
          2.2239e-04, 9.8603e-01],
         [3.2756e-03, 9.9742e-01, 9.9823e-01,  ..., 2.1562e-03,
          9.9933e-01, 4.6580e-03]],
        [[2.3574e-03, 7.0294e-03, 4.7170e-04,  ..., 8.9071e-05,
          8.1512e-04, 2.8493e-02],
         [2.3574e-03, 7.0294e-03, 4.7170e-04,  ..., 8.9071e-05,
          8.1512e-04, 1.9062e-02],
         [9.9293e-01, 7.0294e-03, 4.7170e-04,  ..., 8.9071e-05,
          8.1512e-04, 9.2990e-01],
         [2.3574e-03, 9.7891e-01, 9.9858e-01,  ..., 9.9973e-01,
          9.9755e-01, 2.2544e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9882e-01, 9.2451e-03, 5.2466e-03,  ..., 8.3054e-04,
          3.0077e-03, 9.9951e-01],
         [3.9173e-04, 8.4926e-03, 5.2466e-03,  ..., 8.3054e-04,
          3.0077e-03, 1.6369e-04],
         [3.9173e-04, 8.4926e-03, 5.2466e-03,  ..., 9.9751e-01,
          9.9098e-01, 1.6369e-04],
         [3.9173e-04, 9.7377e-01, 9.8426e-01,  ..., 8.3054e-04,
          3.0077e-03, 1.6369e-04]],
        [[9.8313e-01, 9.8523e-03, 5.9185e-03,  ..., 6.6728e-04,
          1.0955e-01, 3.6590e-04],
         [6.3623e-03, 9.8523e-03, 5.9185e-03,  ..., 6.6728e-04,
          8.3671e-01, 3.6590e-04],
         [5.2531e-03, 9.8523e-03, 5.9185e-03,  ..., 9.9800e-01,
          2.6867e-02, 9.9890e-01],
         [5.2531e-03, 9.7044e-01, 9.8224e-01,  ..., 6.6728e-04,
          2.6867e-02, 3.6590e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:19:41,671 [Process: 0] Synchronize training processes
2024-08-18 15:19:41,671 [Process: 0] Evaluating...
2024-08-18 15:19:41,673 [Process: 0] EPOCH 379:
2024-08-18 15:19:41,675 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:42,801 [Process: 0] Synchronize training processes
2024-08-18 15:19:42,802 [Process: 0] Evaluating...
2024-08-18 15:19:42,803 [Process: 0] EPOCH 380:
2024-08-18 15:19:42,805 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.8817e-03, 3.8883e-04, 1.0418e-03,  ..., 5.1069e-03,
          1.3794e-03, 7.4696e-03],
         [4.8817e-03, 3.8883e-04, 1.0418e-03,  ..., 5.1069e-03,
          1.3794e-03, 7.4696e-03],
         [9.8535e-01, 3.8883e-04, 1.0418e-03,  ..., 9.8468e-01,
          1.3794e-03, 9.7759e-01],
         [4.8817e-03, 9.9883e-01, 9.9687e-01,  ..., 5.1069e-03,
          9.9586e-01, 7.4696e-03]],
        [[2.6938e-03, 2.9266e-03, 8.6202e-04,  ..., 1.9085e-04,
          4.0011e-04, 4.8442e-03],
         [2.6938e-03, 2.9266e-03, 8.6202e-04,  ..., 1.9085e-04,
          4.0011e-04, 4.8442e-03],
         [9.9192e-01, 2.9266e-03, 8.6202e-04,  ..., 1.9085e-04,
          4.0011e-04, 9.8547e-01],
         [2.6938e-03, 9.9122e-01, 9.9741e-01,  ..., 9.9943e-01,
          9.9880e-01, 4.8442e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9543e-01, 1.8450e-02, 3.2221e-03,  ..., 7.3323e-04,
          5.3748e-04, 9.9804e-01],
         [1.5238e-03, 1.7747e-02, 3.2221e-03,  ..., 7.3323e-04,
          5.3748e-04, 6.5498e-04],
         [1.5238e-03, 1.9721e-02, 3.2221e-03,  ..., 9.9780e-01,
          9.9839e-01, 6.5498e-04],
         [1.5238e-03, 9.4408e-01, 9.9033e-01,  ..., 7.3323e-04,
          5.3748e-04, 6.5498e-04]],
        [[9.9757e-01, 5.2578e-03, 1.1864e-02,  ..., 4.3961e-04,
          2.7102e-01, 2.4975e-03],
         [8.4714e-04, 5.2578e-03, 1.2482e-02,  ..., 4.3961e-04,
          6.0218e-01, 2.4975e-03],
         [7.9239e-04, 5.2578e-03, 1.1864e-02,  ..., 9.9868e-01,
          7.8919e-02, 9.9251e-01],
         [7.9239e-04, 9.8423e-01, 9.6379e-01,  ..., 4.3961e-04,
          4.7879e-02, 2.4975e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0050e-02, 3.7128e-04, 1.5248e-03,  ..., 3.0101e-03,
          3.7282e-04, 4.0730e-03],
         [9.6358e-03, 3.7128e-04, 1.5248e-03,  ..., 3.0101e-03,
          3.7282e-04, 4.0730e-03],
         [9.7068e-01, 3.7128e-04, 1.5248e-03,  ..., 9.9097e-01,
          3.7282e-04, 9.8778e-01],
         [9.6358e-03, 9.9889e-01, 9.9543e-01,  ..., 3.0101e-03,
          9.9888e-01, 4.0730e-03]],
        [[1.3968e-03, 2.1761e-03, 3.1468e-03,  ..., 8.1506e-05,
          6.2942e-04, 6.9820e-03],
         [1.3968e-03, 2.1761e-03, 3.1468e-03,  ..., 8.1506e-05,
          6.2942e-04, 6.4281e-03],
         [9.9581e-01, 2.1761e-03, 3.1468e-03,  ..., 8.1506e-05,
          6.2942e-04, 9.8016e-01],
         [1.3968e-03, 9.9347e-01, 9.9056e-01,  ..., 9.9976e-01,
          9.9811e-01, 6.4281e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9649e-01, 4.5955e-03, 1.2270e-02,  ..., 9.6313e-05,
          5.1441e-04, 9.9819e-01],
         [1.1688e-03, 4.5955e-03, 1.1288e-02,  ..., 9.6313e-05,
          5.1441e-04, 6.0435e-04],
         [1.1688e-03, 4.5955e-03, 1.1288e-02,  ..., 9.9971e-01,
          9.9846e-01, 6.0435e-04],
         [1.1688e-03, 9.8621e-01, 9.6516e-01,  ..., 9.6313e-05,
          5.1441e-04, 6.0435e-04]],
        [[9.9869e-01, 6.2285e-03, 2.2849e-03,  ..., 6.9556e-04,
          3.2932e-01, 6.9993e-05],
         [4.5620e-04, 6.2285e-03, 2.2849e-03,  ..., 6.9556e-04,
          4.6851e-01, 6.9993e-05],
         [4.2603e-04, 6.2285e-03, 2.2849e-03,  ..., 9.9791e-01,
          1.2919e-01, 9.9979e-01],
         [4.2603e-04, 9.8131e-01, 9.9315e-01,  ..., 6.9556e-04,
          7.2982e-02, 6.9993e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:43,942 [Process: 0] Synchronize training processes
2024-08-18 15:19:43,943 [Process: 0] Evaluating...
2024-08-18 15:19:43,944 [Process: 0] EPOCH 381:
2024-08-18 15:19:43,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:45,082 [Process: 0] Synchronize training processes
2024-08-18 15:19:45,082 [Process: 0] Evaluating...
2024-08-18 15:19:45,087 [Process: 0] EPOCH 382:
2024-08-18 15:19:45,089 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7027e-03, 3.0051e-03, 4.2806e-04,  ..., 1.7366e-03,
          6.2372e-04, 5.0770e-03],
         [1.7027e-03, 3.0051e-03, 4.2806e-04,  ..., 1.7366e-03,
          6.2372e-04, 5.0770e-03],
         [9.9489e-01, 3.0051e-03, 4.2806e-04,  ..., 9.9479e-01,
          6.2372e-04, 9.8477e-01],
         [1.7027e-03, 9.9098e-01, 9.9872e-01,  ..., 1.7366e-03,
          9.9813e-01, 5.0770e-03]],
        [[8.1144e-03, 4.7014e-04, 2.8472e-04,  ..., 7.2487e-04,
          4.1929e-03, 9.7812e-03],
         [7.5413e-03, 4.7014e-04, 2.8472e-04,  ..., 7.2487e-04,
          4.1929e-03, 9.7812e-03],
         [9.7680e-01, 4.7014e-04, 2.8472e-04,  ..., 7.2487e-04,
          4.1929e-03, 9.7066e-01],
         [7.5413e-03, 9.9859e-01, 9.9915e-01,  ..., 9.9783e-01,
          9.8742e-01, 9.7812e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9416e-01, 1.1189e-02, 5.1393e-03,  ..., 3.1231e-04,
          6.8948e-04, 9.8115e-01],
         [1.9480e-03, 9.8134e-03, 5.1393e-03,  ..., 3.1231e-04,
          6.8948e-04, 6.0777e-03],
         [1.9480e-03, 9.8134e-03, 5.1393e-03,  ..., 9.9906e-01,
          9.9793e-01, 6.6940e-03],
         [1.9480e-03, 9.6918e-01, 9.8458e-01,  ..., 3.1231e-04,
          6.8948e-04, 6.0777e-03]],
        [[9.8997e-01, 2.2574e-03, 1.9161e-03,  ..., 2.4249e-04,
          2.1143e-01, 7.0524e-05],
         [3.3425e-03, 2.2574e-03, 1.9161e-03,  ..., 2.4249e-04,
          6.1963e-01, 7.0524e-05],
         [3.3425e-03, 2.2574e-03, 1.9161e-03,  ..., 9.9927e-01,
          8.0961e-02, 9.9979e-01],
         [3.3425e-03, 9.9323e-01, 9.9425e-01,  ..., 2.4249e-04,
          8.7977e-02, 7.0524e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5772e-03, 5.3231e-04, 1.0489e-03,  ..., 2.8242e-03,
          3.3182e-04, 1.8380e-03],
         [2.5772e-03, 5.3231e-04, 1.0489e-03,  ..., 2.8242e-03,
          3.3182e-04, 1.8380e-03],
         [9.9227e-01, 5.3231e-04, 1.0489e-03,  ..., 9.9153e-01,
          3.3182e-04, 9.9449e-01],
         [2.5772e-03, 9.9840e-01, 9.9685e-01,  ..., 2.8242e-03,
          9.9900e-01, 1.8380e-03]],
        [[5.8300e-03, 8.7002e-04, 1.4868e-03,  ..., 1.6985e-04,
          5.0847e-04, 1.8556e-03],
         [5.8300e-03, 8.7002e-04, 1.4868e-03,  ..., 1.6985e-04,
          5.0847e-04, 1.8556e-03],
         [9.8251e-01, 8.7002e-04, 1.4868e-03,  ..., 1.6985e-04,
          5.0847e-04, 9.9443e-01],
         [5.8300e-03, 9.9739e-01, 9.9554e-01,  ..., 9.9949e-01,
          9.9847e-01, 1.8556e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 383:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
2024-08-18 15:19:46,216 [Process: 0] Synchronize training processes
2024-08-18 15:19:46,217 [Process: 0] Evaluating...
2024-08-18 15:19:46,218 [Process: 0] EPOCH 383:
2024-08-18 15:19:46,220 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[9.8847e-01, 4.0227e-03, 1.8303e-02,  ..., 1.6848e-04,
          3.7179e-04, 9.9661e-01],
         [3.8441e-03, 4.0227e-03, 1.3231e-02,  ..., 1.6848e-04,
          3.7179e-04, 1.1309e-03],
         [3.8441e-03, 4.0227e-03, 1.3231e-02,  ..., 9.9949e-01,
          9.9888e-01, 1.1309e-03],
         [3.8441e-03, 9.8793e-01, 9.5523e-01,  ..., 1.6848e-04,
          3.7179e-04, 1.1309e-03]],
        [[9.9638e-01, 4.3844e-03, 5.9643e-03,  ..., 4.6448e-04,
          2.3923e-01, 2.7791e-04],
         [1.2063e-03, 4.3844e-03, 5.9643e-03,  ..., 4.6448e-04,
          5.8826e-01, 2.7791e-04],
         [1.2063e-03, 4.3844e-03, 5.9643e-03,  ..., 9.9861e-01,
          1.0018e-01, 9.9917e-01],
         [1.2063e-03, 9.8685e-01, 9.8211e-01,  ..., 4.6448e-04,
          7.2328e-02, 2.7791e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0037e-03, 1.3534e-03, 2.3499e-03,  ..., 1.4979e-02,
          4.7738e-04, 2.0927e-03],
         [2.0037e-03, 1.3534e-03, 2.3499e-03,  ..., 1.0251e-02,
          4.7738e-04, 2.0927e-03],
         [9.9399e-01, 1.3534e-03, 2.3499e-03,  ..., 9.6452e-01,
          4.7738e-04, 9.9372e-01],
         [2.0037e-03, 9.9594e-01, 9.9295e-01,  ..., 1.0251e-02,
          9.9857e-01, 2.0927e-03]],
        [[4.6264e-03, 1.0688e-03, 3.5167e-03,  ..., 8.0930e-05,
          3.0652e-04, 3.9121e-03],
         [4.6264e-03, 1.0688e-03, 3.5167e-03,  ..., 8.0930e-05,
          3.0652e-04, 3.9121e-03],
         [9.8612e-01, 1.0688e-03, 3.5167e-03,  ..., 8.0930e-05,
          3.0652e-04, 9.8826e-01],
         [4.6264e-03, 9.9679e-01, 9.8945e-01,  ..., 9.9976e-01,
          9.9908e-01, 3.9121e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 384:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9902e-01, 9.2144e-03, 4.3849e-03,  ..., 2.3699e-04,
          4.4122e-03, 9.9505e-01],
         [3.2697e-04, 9.2144e-03, 4.3849e-03,  ..., 2.3699e-04,
          4.4122e-03, 1.6486e-03],
         [3.2697e-04, 9.5040e-03, 4.3849e-03,  ..., 9.9929e-01,
          9.8676e-01, 1.6486e-03],
         [3.2697e-04, 9.7207e-01, 9.8685e-01,  ..., 2.3699e-04,
          4.4122e-03, 1.6486e-03]],
        [[9.9917e-01, 2.0464e-02, 3.5211e-03,  ..., 5.3526e-04,
          2.0597e-01, 1.6623e-03],
         [2.7500e-04, 1.5658e-02, 3.5211e-03,  ..., 5.3526e-04,
          7.1655e-01, 1.6623e-03],
         [2.7500e-04, 1.7737e-02, 3.5211e-03,  ..., 9.9839e-01,
          4.3810e-02, 9.9501e-01],
         [2.7500e-04, 9.4614e-01, 9.8944e-01,  ..., 5.3526e-04,
          3.3671e-02, 1.6623e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9527e-03, 1.0418e-03, 1.5729e-03,  ..., 2.7748e-03,
          4.5658e-04, 2.0195e-02],
         [1.9527e-03, 1.0418e-03, 1.5729e-03,  ..., 2.7748e-03,
          4.5658e-04, 1.5194e-02],
         [9.9414e-01, 1.0418e-03, 1.5729e-03,  ..., 9.9168e-01,
          4.5658e-04, 9.4822e-01],
         [1.9527e-03, 9.9687e-01, 9.9528e-01,  ..., 2.7748e-03,
          9.9863e-01, 1.6392e-02]],
        [[1.1850e-03, 3.4558e-03, 5.2516e-03,  ..., 9.8386e-04,
          1.0570e-03, 3.1944e-03],
         [1.1850e-03, 3.4558e-03, 4.7179e-03,  ..., 9.8386e-04,
          1.0570e-03, 3.1944e-03],
         [9.9645e-01, 3.4558e-03, 4.7179e-03,  ..., 9.8386e-04,
          1.0570e-03, 9.9042e-01],
         [1.1850e-03, 9.8963e-01, 9.8531e-01,  ..., 9.9705e-01,
          9.9683e-01, 3.1944e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 385:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:47,341 [Process: 0] Synchronize training processes
2024-08-18 15:19:47,341 [Process: 0] Evaluating...
2024-08-18 15:19:47,343 [Process: 0] EPOCH 384:
2024-08-18 15:19:47,345 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:48,466 [Process: 0] Synchronize training processes
2024-08-18 15:19:48,466 [Process: 0] Evaluating...
2024-08-18 15:19:48,468 [Process: 0] EPOCH 385:
2024-08-18 15:19:48,470 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9626e-01, 9.3151e-03, 7.1217e-03,  ..., 2.2341e-04,
          1.3584e-03, 9.9968e-01],
         [1.2910e-03, 1.0091e-02, 7.1217e-03,  ..., 2.2341e-04,
          1.3584e-03, 1.0722e-04],
         [1.2260e-03, 9.3051e-03, 7.1217e-03,  ..., 9.9933e-01,
          9.9592e-01, 1.0722e-04],
         [1.2260e-03, 9.7129e-01, 9.7863e-01,  ..., 2.2341e-04,
          1.3584e-03, 1.0722e-04]],
        [[9.8927e-01, 1.6428e-03, 7.8163e-03,  ..., 2.1780e-03,
          2.7655e-01, 7.9379e-04],
         [3.7361e-03, 1.6428e-03, 7.8162e-03,  ..., 2.1780e-03,
          6.3492e-01, 7.9379e-04],
         [3.4992e-03, 1.6428e-03, 7.8162e-03,  ..., 9.9347e-01,
          5.0698e-02, 9.9762e-01],
         [3.4992e-03, 9.9507e-01, 9.7655e-01,  ..., 2.1780e-03,
          3.7833e-02, 7.9379e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6858e-03, 1.9084e-04, 5.1258e-04,  ..., 1.8847e-03,
          3.9856e-04, 3.9009e-02],
         [2.6858e-03, 1.9084e-04, 5.1258e-04,  ..., 1.8847e-03,
          3.9856e-04, 2.3957e-02],
         [9.9194e-01, 1.9084e-04, 5.1258e-04,  ..., 9.9435e-01,
          3.9856e-04, 9.0218e-01],
         [2.6858e-03, 9.9943e-01, 9.9846e-01,  ..., 1.8847e-03,
          9.9880e-01, 3.4852e-02]],
        [[2.5829e-03, 4.1038e-03, 3.9164e-02,  ..., 9.6166e-04,
          1.9306e-04, 3.4248e-03],
         [2.5829e-03, 3.7746e-03, 1.2865e-02,  ..., 9.6166e-04,
          1.9306e-04, 3.4248e-03],
         [9.9225e-01, 3.7746e-03, 1.2865e-02,  ..., 9.6166e-04,
          1.9306e-04, 9.8973e-01],
         [2.5829e-03, 9.8835e-01, 9.3511e-01,  ..., 9.9712e-01,
          9.9942e-01, 3.4248e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 386:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9084e-01, 1.7477e-02, 1.3984e-02,  ..., 2.2718e-04,
          5.4203e-04, 9.9829e-01],
         [3.0541e-03, 1.5273e-02, 9.8121e-03,  ..., 2.2718e-04,
          5.4203e-04, 5.7090e-04],
         [3.0541e-03, 1.5919e-02, 1.2275e-02,  ..., 9.9932e-01,
          9.9837e-01, 5.7090e-04],
         [3.0541e-03, 9.5133e-01, 9.6393e-01,  ..., 2.2718e-04,
          5.4203e-04, 5.7090e-04]],
        [[9.9473e-01, 3.4079e-03, 2.6430e-03,  ..., 2.4607e-04,
          2.3073e-01, 2.4869e-04],
         [2.8452e-03, 3.4079e-03, 2.6430e-03,  ..., 2.4607e-04,
          6.1917e-01, 2.4869e-04],
         [1.2134e-03, 3.4079e-03, 2.6430e-03,  ..., 9.9926e-01,
          8.9002e-02, 9.9925e-01],
         [1.2134e-03, 9.8978e-01, 9.9207e-01,  ..., 2.4607e-04,
          6.1102e-02, 2.4869e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2996e-03, 3.6808e-03, 2.7050e-04,  ..., 1.9266e-03,
          1.2446e-03, 2.5764e-03],
         [3.2996e-03, 3.6808e-03, 2.7050e-04,  ..., 1.9266e-03,
          1.2446e-03, 2.5764e-03],
         [9.9010e-01, 3.6808e-03, 2.7050e-04,  ..., 9.9422e-01,
          1.2446e-03, 9.9227e-01],
         [3.2996e-03, 9.8896e-01, 9.9919e-01,  ..., 1.9266e-03,
          9.9627e-01, 2.5764e-03]],
        [[1.9923e-03, 8.0971e-04, 1.7310e-01,  ..., 5.0198e-05,
          1.8007e-04, 1.6844e-02],
         [1.9923e-03, 8.0971e-04, 3.3571e-02,  ..., 5.0198e-05,
          1.8007e-04, 1.2888e-02],
         [9.9402e-01, 8.0971e-04, 3.3571e-02,  ..., 5.0198e-05,
          1.8007e-04, 9.5738e-01],
         [1.9923e-03, 9.9757e-01, 7.5976e-01,  ..., 9.9985e-01,
          9.9946e-01, 1.2888e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:49,593 [Process: 0] Synchronize training processes
2024-08-18 15:19:49,593 [Process: 0] Evaluating...
2024-08-18 15:19:49,595 [Process: 0] EPOCH 386:
2024-08-18 15:19:49,597 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:50,726 [Process: 0] Synchronize training processes
2024-08-18 15:19:50,726 [Process: 0] Evaluating...
2024-08-18 15:19:50,728 [Process: 0] EPOCH 387:
2024-08-18 15:19:50,729 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 387:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9738e-01, 4.7247e-03, 2.9906e-03,  ..., 2.6326e-04,
          4.6717e-04, 9.9858e-01],
         [8.7388e-04, 4.7247e-03, 2.9615e-03,  ..., 2.6326e-04,
          4.6717e-04, 4.7252e-04],
         [8.7388e-04, 5.1802e-03, 2.9615e-03,  ..., 9.9921e-01,
          9.9860e-01, 4.7252e-04],
         [8.7388e-04, 9.8537e-01, 9.9109e-01,  ..., 2.6326e-04,
          4.6717e-04, 4.7252e-04]],
        [[9.9647e-01, 1.0473e-02, 4.5890e-03,  ..., 5.1569e-04,
          4.0984e-01, 2.1526e-03],
         [1.1509e-03, 7.1934e-03, 4.5890e-03,  ..., 5.1569e-04,
          4.9958e-01, 2.4043e-03],
         [1.2293e-03, 7.1934e-03, 4.5890e-03,  ..., 9.9845e-01,
          4.8767e-02, 9.9329e-01],
         [1.1509e-03, 9.7514e-01, 9.8623e-01,  ..., 5.1569e-04,
          4.1811e-02, 2.1526e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.2344e-04, 1.4998e-04, 1.2084e-03,  ..., 3.1818e-03,
          9.2358e-04, 3.5252e-03],
         [8.2344e-04, 1.4998e-04, 1.2084e-03,  ..., 3.1818e-03,
          9.2358e-04, 3.5252e-03],
         [9.9753e-01, 1.4998e-04, 1.2084e-03,  ..., 9.9045e-01,
          9.2358e-04, 9.8942e-01],
         [8.2344e-04, 9.9955e-01, 9.9637e-01,  ..., 3.1818e-03,
          9.9723e-01, 3.5252e-03]],
        [[7.7479e-04, 5.5357e-04, 1.7361e-01,  ..., 2.2775e-04,
          1.3656e-03, 6.0836e-03],
         [7.7479e-04, 5.5357e-04, 2.1632e-02,  ..., 2.2775e-04,
          1.3656e-03, 6.0836e-03],
         [9.9768e-01, 5.5357e-04, 2.1632e-02,  ..., 2.2775e-04,
          1.3656e-03, 9.8175e-01],
         [7.7479e-04, 9.9834e-01, 7.8313e-01,  ..., 9.9932e-01,
          9.9590e-01, 6.0836e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 388:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9845e-01, 9.3343e-03, 2.3524e-03,  ..., 2.1573e-04,
          3.5776e-04, 9.9949e-01],
         [5.1504e-04, 7.7792e-03, 2.3524e-03,  ..., 2.1573e-04,
          3.5776e-04, 1.6896e-04],
         [5.1504e-04, 7.7792e-03, 2.3524e-03,  ..., 9.9935e-01,
          9.9893e-01, 1.6896e-04],
         [5.1504e-04, 9.7511e-01, 9.9294e-01,  ..., 2.1573e-04,
          3.5776e-04, 1.6896e-04]],
        [[9.9039e-01, 7.3686e-03, 1.1397e-03,  ..., 1.0302e-03,
          3.3118e-01, 1.0953e-03],
         [2.7689e-03, 7.3686e-03, 1.1397e-03,  ..., 1.0302e-03,
          5.8340e-01, 1.0953e-03],
         [4.0749e-03, 7.3686e-03, 1.1397e-03,  ..., 9.9691e-01,
          4.7526e-02, 9.9671e-01],
         [2.7689e-03, 9.7789e-01, 9.9658e-01,  ..., 1.0302e-03,
          3.7898e-02, 1.0953e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:51,857 [Process: 0] Synchronize training processes
2024-08-18 15:19:51,857 [Process: 0] Evaluating...
2024-08-18 15:19:51,859 [Process: 0] EPOCH 388:
2024-08-18 15:19:51,861 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:52,988 [Process: 0] Synchronize training processes
2024-08-18 15:19:52,989 [Process: 0] Evaluating...
2024-08-18 15:19:52,990 [Process: 0] EPOCH 389:
2024-08-18 15:19:52,992 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5177e-03, 3.9081e-04, 8.9852e-04,  ..., 1.1492e-02,
          8.7570e-05, 1.5389e-02],
         [9.1784e-03, 3.9081e-04, 8.9852e-04,  ..., 1.0700e-02,
          8.7570e-05, 1.1128e-02],
         [9.7213e-01, 3.9081e-04, 8.9852e-04,  ..., 9.6711e-01,
          8.7570e-05, 9.6236e-01],
         [9.1784e-03, 9.9883e-01, 9.9730e-01,  ..., 1.0700e-02,
          9.9974e-01, 1.1128e-02]],
        [[6.7078e-03, 4.1668e-04, 6.4994e-02,  ..., 1.1651e-04,
          3.0560e-04, 6.3320e-03],
         [6.7078e-03, 4.1668e-04, 1.9423e-02,  ..., 1.1651e-04,
          3.0560e-04, 6.3320e-03],
         [9.7988e-01, 4.1668e-04, 1.9423e-02,  ..., 1.1651e-04,
          3.0560e-04, 9.8100e-01],
         [6.7078e-03, 9.9875e-01, 8.9616e-01,  ..., 9.9965e-01,
          9.9908e-01, 6.3320e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 389:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8577e-01, 9.5405e-03, 9.5838e-03,  ..., 1.4226e-03,
          3.3164e-04, 9.9667e-01],
         [4.8183e-03, 9.3948e-03, 7.9411e-03,  ..., 1.4226e-03,
          3.3164e-04, 1.1106e-03],
         [4.7073e-03, 9.6790e-03, 7.9411e-03,  ..., 9.9573e-01,
          9.9901e-01, 1.1106e-03],
         [4.7073e-03, 9.7139e-01, 9.7453e-01,  ..., 1.4226e-03,
          3.3164e-04, 1.1106e-03]],
        [[9.6977e-01, 3.6031e-03, 1.3393e-02,  ..., 2.3617e-04,
          3.7312e-01, 1.8732e-03],
         [2.1472e-02, 3.6031e-03, 9.7327e-03,  ..., 2.3617e-04,
          4.7524e-01, 1.8732e-03],
         [4.3798e-03, 3.6031e-03, 9.7327e-03,  ..., 9.9929e-01,
          9.3777e-02, 9.9438e-01],
         [4.3798e-03, 9.8919e-01, 9.6714e-01,  ..., 2.3617e-04,
          5.7857e-02, 1.8732e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5041e-04, 1.3197e-04, 4.4002e-03,  ..., 1.2893e-02,
          2.1469e-04, 6.9553e-03],
         [5.5041e-04, 1.3197e-04, 4.4002e-03,  ..., 8.2705e-03,
          2.1469e-04, 6.9180e-03],
         [9.9835e-01, 1.3197e-04, 4.4002e-03,  ..., 9.7057e-01,
          2.1469e-04, 9.7921e-01],
         [5.5041e-04, 9.9960e-01, 9.8680e-01,  ..., 8.2705e-03,
          9.9936e-01, 6.9180e-03]],
        [[1.9258e-03, 6.4764e-04, 5.9034e-02,  ..., 7.0123e-04,
          9.9600e-04, 2.0949e-03],
         [1.9258e-03, 6.4764e-04, 1.7634e-02,  ..., 7.0123e-04,
          9.9600e-04, 2.0949e-03],
         [9.9422e-01, 6.4764e-04, 1.7634e-02,  ..., 7.0123e-04,
          9.9600e-04, 9.9372e-01],
         [1.9258e-03, 9.9806e-01, 9.0570e-01,  ..., 9.9790e-01,
          9.9701e-01, 2.0949e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 390:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8285e-01, 1.4897e-02, 7.1417e-03,  ..., 5.4485e-03,
          4.9655e-03, 9.8604e-01],
         [6.4089e-03, 1.2388e-02, 7.1417e-03,  ..., 6.9260e-03,
          4.9655e-03, 4.0564e-03],
         [5.3724e-03, 1.2827e-02, 7.1417e-03,  ..., 9.8218e-01,
          9.8510e-01, 5.8423e-03],
         [5.3724e-03, 9.5989e-01, 9.7857e-01,  ..., 5.4485e-03,
          4.9655e-03, 4.0564e-03]],
        [[9.9683e-01, 1.3331e-03, 4.2843e-03,  ..., 4.8145e-04,
          1.9347e-01, 2.6829e-04],
         [1.4482e-03, 1.3331e-03, 3.9250e-03,  ..., 4.8145e-04,
          7.0271e-01, 2.6829e-04],
         [8.6097e-04, 1.3331e-03, 3.9250e-03,  ..., 9.9856e-01,
          5.8935e-02, 9.9920e-01],
         [8.6097e-04, 9.9600e-01, 9.8787e-01,  ..., 4.8145e-04,
          4.4891e-02, 2.6829e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:54,120 [Process: 0] Synchronize training processes
2024-08-18 15:19:54,120 [Process: 0] Evaluating...
2024-08-18 15:19:54,122 [Process: 0] EPOCH 390:
2024-08-18 15:19:54,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:55,252 [Process: 0] Synchronize training processes
2024-08-18 15:19:55,252 [Process: 0] Evaluating...
2024-08-18 15:19:55,254 [Process: 0] EPOCH 391:
2024-08-18 15:19:55,256 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7118e-03, 1.8589e-04, 1.6663e-03,  ..., 2.2277e-03,
          3.3360e-05, 2.9940e-03],
         [6.7118e-03, 1.8589e-04, 1.6663e-03,  ..., 2.2277e-03,
          3.3360e-05, 2.9940e-03],
         [9.7986e-01, 1.8589e-04, 1.6663e-03,  ..., 9.9332e-01,
          3.3360e-05, 9.9102e-01],
         [6.7118e-03, 9.9944e-01, 9.9500e-01,  ..., 2.2277e-03,
          9.9990e-01, 2.9940e-03]],
        [[1.7294e-03, 3.2908e-04, 1.4770e-03,  ..., 1.3232e-03,
          5.1902e-04, 2.0178e-03],
         [1.7294e-03, 3.2908e-04, 1.4770e-03,  ..., 1.3232e-03,
          5.1902e-04, 2.0178e-03],
         [9.9481e-01, 3.2908e-04, 1.4770e-03,  ..., 1.3232e-03,
          5.1902e-04, 9.9395e-01],
         [1.7294e-03, 9.9901e-01, 9.9557e-01,  ..., 9.9603e-01,
          9.9844e-01, 2.0178e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 391:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9880e-01, 4.3334e-03, 1.0341e-02,  ..., 1.0025e-03,
          2.2630e-04, 9.9715e-01],
         [4.0035e-04, 4.3334e-03, 9.1386e-03,  ..., 1.0025e-03,
          2.2630e-04, 9.4847e-04],
         [4.0035e-04, 4.3334e-03, 9.2254e-03,  ..., 9.9699e-01,
          9.9932e-01, 9.4847e-04],
         [4.0035e-04, 9.8700e-01, 9.7130e-01,  ..., 1.0025e-03,
          2.2630e-04, 9.4847e-04]],
        [[9.9347e-01, 2.3511e-03, 8.0870e-03,  ..., 5.0931e-04,
          5.0767e-01, 1.0258e-03],
         [2.1753e-03, 2.3511e-03, 7.0283e-03,  ..., 5.0931e-04,
          4.0326e-01, 1.0258e-03],
         [2.1753e-03, 2.3511e-03, 7.0283e-03,  ..., 9.9847e-01,
          4.8986e-02, 9.9692e-01],
         [2.1753e-03, 9.9295e-01, 9.7786e-01,  ..., 5.0931e-04,
          4.0078e-02, 1.0258e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7150e-03, 3.4070e-04, 3.8356e-04,  ..., 2.4021e-03,
          1.6734e-04, 2.8556e-03],
         [3.7150e-03, 3.4070e-04, 3.8356e-04,  ..., 2.4021e-03,
          1.6734e-04, 2.8556e-03],
         [9.8885e-01, 3.4070e-04, 3.8356e-04,  ..., 9.9279e-01,
          1.6734e-04, 9.9143e-01],
         [3.7150e-03, 9.9898e-01, 9.9885e-01,  ..., 2.4021e-03,
          9.9950e-01, 2.8556e-03]],
        [[2.1400e-02, 7.9602e-04, 4.9940e-04,  ..., 1.1467e-04,
          7.0496e-04, 3.7710e-03],
         [1.5829e-02, 7.9602e-04, 4.9940e-04,  ..., 1.1467e-04,
          7.0496e-04, 3.7710e-03],
         [9.4284e-01, 7.9602e-04, 4.9940e-04,  ..., 1.1467e-04,
          7.0496e-04, 9.8869e-01],
         [1.9934e-02, 9.9761e-01, 9.9850e-01,  ..., 9.9966e-01,
          9.9789e-01, 3.7710e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 392:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:56,384 [Process: 0] Synchronize training processes
2024-08-18 15:19:56,384 [Process: 0] Evaluating...
2024-08-18 15:19:56,388 [Process: 0] EPOCH 392:
2024-08-18 15:19:56,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9907e-01, 5.1858e-03, 1.4934e-02,  ..., 2.3565e-03,
          3.3519e-04, 9.9330e-01],
         [3.0867e-04, 5.1858e-03, 1.2054e-02,  ..., 2.3565e-03,
          3.3519e-04, 1.9928e-03],
         [3.0867e-04, 5.1858e-03, 1.4028e-02,  ..., 9.9293e-01,
          9.9899e-01, 2.7115e-03],
         [3.0867e-04, 9.8444e-01, 9.5898e-01,  ..., 2.3565e-03,
          3.3519e-04, 1.9928e-03]],
        [[9.9429e-01, 4.9707e-03, 5.4720e-03,  ..., 2.9234e-04,
          1.4386e-01, 7.7457e-04],
         [1.9020e-03, 4.9707e-03, 5.4720e-03,  ..., 2.9234e-04,
          7.8609e-01, 7.7457e-04],
         [1.9020e-03, 4.9707e-03, 5.4720e-03,  ..., 9.9912e-01,
          3.7244e-02, 9.9768e-01],
         [1.9020e-03, 9.8509e-01, 9.8358e-01,  ..., 2.9234e-04,
          3.2801e-02, 7.7457e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2696e-02, 1.9610e-03, 2.5030e-04,  ..., 6.7311e-03,
          3.6158e-05, 6.3883e-03],
         [1.0523e-02, 1.9610e-03, 2.5030e-04,  ..., 5.9832e-03,
          3.6158e-05, 6.3883e-03],
         [9.6626e-01, 1.9610e-03, 2.5030e-04,  ..., 9.8130e-01,
          3.6158e-05, 9.8084e-01],
         [1.0523e-02, 9.9412e-01, 9.9925e-01,  ..., 5.9832e-03,
          9.9989e-01, 6.3883e-03]],
        [[2.5042e-02, 2.3469e-04, 3.7472e-04,  ..., 5.3594e-04,
          8.8553e-05, 2.3308e-03],
         [1.5012e-02, 2.3469e-04, 3.7472e-04,  ..., 5.3594e-04,
          8.8553e-05, 2.3308e-03],
         [9.4493e-01, 2.3469e-04, 3.7472e-04,  ..., 5.3594e-04,
          8.8553e-05, 9.9301e-01],
         [1.5012e-02, 9.9930e-01, 9.9888e-01,  ..., 9.9839e-01,
          9.9973e-01, 2.3308e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 393:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9559e-01, 4.8564e-03, 2.7711e-03,  ..., 1.1115e-03,
          1.5985e-03, 9.9856e-01],
         [1.4696e-03, 4.8564e-03, 2.7711e-03,  ..., 1.1115e-03,
          1.5985e-03, 4.7898e-04],
         [1.4696e-03, 4.8564e-03, 2.7711e-03,  ..., 9.9667e-01,
          9.9520e-01, 4.7898e-04],
         [1.4696e-03, 9.8543e-01, 9.9169e-01,  ..., 1.1115e-03,
          1.5985e-03, 4.7898e-04]],
        [[9.6841e-01, 2.5136e-03, 1.8227e-03,  ..., 9.1496e-04,
          3.6035e-02, 1.5746e-04],
         [7.5001e-03, 2.5136e-03, 1.8227e-03,  ..., 9.1496e-04,
          9.4061e-01, 1.5746e-04],
         [1.6594e-02, 2.5136e-03, 1.8227e-03,  ..., 9.9726e-01,
          1.1676e-02, 9.9953e-01],
         [7.5001e-03, 9.9246e-01, 9.9453e-01,  ..., 9.1496e-04,
          1.1676e-02, 1.5746e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:57,518 [Process: 0] Synchronize training processes
2024-08-18 15:19:57,518 [Process: 0] Evaluating...
2024-08-18 15:19:57,520 [Process: 0] EPOCH 393:
2024-08-18 15:19:57,522 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:19:58,650 [Process: 0] Synchronize training processes
2024-08-18 15:19:58,651 [Process: 0] Evaluating...
2024-08-18 15:19:58,652 [Process: 0] EPOCH 394:
2024-08-18 15:19:58,654 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3265e-03, 8.8229e-04, 1.4547e-03,  ..., 2.4944e-03,
          1.1582e-04, 4.6271e-03],
         [3.3265e-03, 8.8229e-04, 1.4547e-03,  ..., 2.4944e-03,
          1.1582e-04, 4.6271e-03],
         [9.9002e-01, 8.8229e-04, 1.4547e-03,  ..., 9.9252e-01,
          1.1582e-04, 9.8612e-01],
         [3.3265e-03, 9.9735e-01, 9.9564e-01,  ..., 2.4944e-03,
          9.9965e-01, 4.6271e-03]],
        [[2.8245e-03, 1.9911e-04, 6.9510e-04,  ..., 1.4732e-04,
          9.0194e-04, 1.4953e-03],
         [2.8245e-03, 1.9911e-04, 6.9510e-04,  ..., 1.4732e-04,
          9.0194e-04, 1.4953e-03],
         [9.9153e-01, 1.9911e-04, 6.9510e-04,  ..., 1.4732e-04,
          9.0194e-04, 9.9551e-01],
         [2.8245e-03, 9.9940e-01, 9.9791e-01,  ..., 9.9956e-01,
          9.9729e-01, 1.4953e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 394:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9869e-01, 5.9829e-03, 7.8418e-03,  ..., 2.0634e-04,
          6.7687e-04, 9.9864e-01],
         [4.3561e-04, 5.9829e-03, 7.6646e-03,  ..., 2.0634e-04,
          6.7687e-04, 4.5478e-04],
         [4.3561e-04, 5.9829e-03, 7.6646e-03,  ..., 9.9938e-01,
          9.9797e-01, 4.5478e-04],
         [4.3561e-04, 9.8205e-01, 9.7683e-01,  ..., 2.0634e-04,
          6.7687e-04, 4.5478e-04]],
        [[9.9852e-01, 2.1883e-03, 4.8899e-03,  ..., 4.6698e-04,
          8.3246e-02, 1.1639e-03],
         [4.9396e-04, 2.1883e-03, 4.8899e-03,  ..., 4.6698e-04,
          8.7322e-01, 1.1639e-03],
         [4.9396e-04, 2.1883e-03, 4.8899e-03,  ..., 9.9860e-01,
          2.4596e-02, 9.9651e-01],
         [4.9396e-04, 9.9344e-01, 9.8533e-01,  ..., 4.6698e-04,
          1.8941e-02, 1.1639e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.5915e-03, 7.3694e-04, 2.0063e-04,  ..., 1.0597e-02,
          2.1197e-04, 2.1873e-03],
         [5.5333e-03, 7.3694e-04, 2.0063e-04,  ..., 6.7798e-03,
          2.1197e-04, 2.1873e-03],
         [9.8234e-01, 7.3694e-04, 2.0063e-04,  ..., 9.7584e-01,
          2.1197e-04, 9.9344e-01],
         [5.5333e-03, 9.9779e-01, 9.9940e-01,  ..., 6.7798e-03,
          9.9936e-01, 2.1873e-03]],
        [[8.4903e-03, 7.7342e-05, 6.0005e-04,  ..., 9.3560e-04,
          2.5646e-04, 1.5510e-03],
         [7.7235e-03, 7.7342e-05, 6.0005e-04,  ..., 9.3560e-04,
          2.5646e-04, 1.5510e-03],
         [9.7606e-01, 7.7342e-05, 6.0005e-04,  ..., 9.3560e-04,
          2.5646e-04, 9.9535e-01],
         [7.7235e-03, 9.9977e-01, 9.9820e-01,  ..., 9.9719e-01,
          9.9923e-01, 1.5510e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 395:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9472e-01, 6.8247e-03, 1.2552e-02,  ..., 3.3042e-04,
          1.4453e-03, 9.9161e-01],
         [1.7593e-03, 6.8247e-03, 1.1222e-02,  ..., 3.3042e-04,
          1.4453e-03, 2.7224e-03],
         [1.7593e-03, 6.8247e-03, 1.1222e-02,  ..., 9.9901e-01,
          9.9566e-01, 2.9410e-03],
         [1.7593e-03, 9.7953e-01, 9.6500e-01,  ..., 3.3042e-04,
          1.4453e-03, 2.7224e-03]],
        [[9.8157e-01, 2.6612e-03, 3.6471e-03,  ..., 3.5657e-03,
          2.7400e-01, 1.9727e-03],
         [5.1697e-03, 2.6612e-03, 3.6471e-03,  ..., 3.5657e-03,
          5.5884e-01, 1.9727e-03],
         [8.0945e-03, 2.6612e-03, 3.6471e-03,  ..., 9.8930e-01,
          7.3258e-02, 9.9408e-01],
         [5.1697e-03, 9.9202e-01, 9.8906e-01,  ..., 3.5657e-03,
          9.3908e-02, 1.9727e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:19:59,782 [Process: 0] Synchronize training processes
2024-08-18 15:19:59,782 [Process: 0] Evaluating...
2024-08-18 15:19:59,784 [Process: 0] EPOCH 395:
2024-08-18 15:19:59,786 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:00,934 [Process: 0] Synchronize training processes
2024-08-18 15:20:00,934 [Process: 0] Evaluating...
2024-08-18 15:20:00,936 [Process: 0] EPOCH 396:
2024-08-18 15:20:00,938 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.5480e-03, 5.4362e-04, 4.9231e-04,  ..., 2.7144e-03,
          5.3336e-04, 2.7896e-02],
         [4.5421e-03, 5.4362e-04, 4.9231e-04,  ..., 2.7144e-03,
          5.3336e-04, 1.4729e-02],
         [9.8437e-01, 5.4362e-04, 4.9231e-04,  ..., 9.9186e-01,
          5.3336e-04, 9.4162e-01],
         [4.5421e-03, 9.9837e-01, 9.9852e-01,  ..., 2.7144e-03,
          9.9840e-01, 1.5752e-02]],
        [[3.7961e-03, 1.1126e-03, 3.4202e-04,  ..., 1.1926e-04,
          9.1352e-05, 6.9956e-03],
         [3.6644e-03, 1.1126e-03, 3.4202e-04,  ..., 1.1926e-04,
          9.1352e-05, 6.7517e-03],
         [9.8888e-01, 1.1126e-03, 3.4202e-04,  ..., 1.1926e-04,
          9.1352e-05, 9.7950e-01],
         [3.6644e-03, 9.9666e-01, 9.9897e-01,  ..., 9.9964e-01,
          9.9973e-01, 6.7517e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 396:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9106e-01, 1.0237e-02, 2.5165e-03,  ..., 9.9058e-05,
          1.2487e-03, 9.9867e-01],
         [2.9810e-03, 1.0237e-02, 2.5165e-03,  ..., 9.9058e-05,
          1.2487e-03, 4.4178e-04],
         [2.9810e-03, 1.0237e-02, 2.5165e-03,  ..., 9.9970e-01,
          9.9625e-01, 4.4178e-04],
         [2.9810e-03, 9.6929e-01, 9.9245e-01,  ..., 9.9058e-05,
          1.2487e-03, 4.4178e-04]],
        [[9.9545e-01, 2.4031e-03, 5.4159e-03,  ..., 3.7535e-04,
          5.6042e-02, 1.5045e-04],
         [1.5183e-03, 2.4031e-03, 5.4159e-03,  ..., 3.7535e-04,
          9.2050e-01, 1.5045e-04],
         [1.5183e-03, 2.4031e-03, 5.4159e-03,  ..., 9.9887e-01,
          1.1727e-02, 9.9955e-01],
         [1.5183e-03, 9.9279e-01, 9.8375e-01,  ..., 3.7535e-04,
          1.1727e-02, 1.5045e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1334e-03, 7.0760e-05, 2.9087e-04,  ..., 9.7598e-03,
          1.3995e-04, 3.0170e-03],
         [1.1334e-03, 7.0760e-05, 2.9087e-04,  ..., 7.2630e-03,
          1.3995e-04, 3.0170e-03],
         [9.9660e-01, 7.0760e-05, 2.9087e-04,  ..., 9.7571e-01,
          1.3995e-04, 9.9095e-01],
         [1.1334e-03, 9.9979e-01, 9.9913e-01,  ..., 7.2630e-03,
          9.9958e-01, 3.0170e-03]],
        [[7.8740e-03, 3.5871e-04, 1.8384e-04,  ..., 3.6675e-03,
          2.8256e-04, 1.2510e-02],
         [7.7244e-03, 3.5871e-04, 1.8384e-04,  ..., 3.6675e-03,
          2.8256e-04, 9.2090e-03],
         [9.7668e-01, 3.5871e-04, 1.8384e-04,  ..., 3.6675e-03,
          2.8256e-04, 9.6907e-01],
         [7.7244e-03, 9.9892e-01, 9.9945e-01,  ..., 9.8900e-01,
          9.9915e-01, 9.2090e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 397:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:02,067 [Process: 0] Synchronize training processes
2024-08-18 15:20:02,067 [Process: 0] Evaluating...
2024-08-18 15:20:02,069 [Process: 0] EPOCH 397:
2024-08-18 15:20:02,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:03,201 [Process: 0] Synchronize training processes
2024-08-18 15:20:03,201 [Process: 0] Evaluating...
2024-08-18 15:20:03,203 [Process: 0] EPOCH 398:
2024-08-18 15:20:03,205 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9931e-01, 6.5123e-03, 5.0657e-03,  ..., 1.5210e-04,
          5.6840e-03, 9.9517e-01],
         [2.3163e-04, 6.5123e-03, 5.0657e-03,  ..., 1.5210e-04,
          5.6840e-03, 1.8306e-03],
         [2.3163e-04, 6.5123e-03, 5.0657e-03,  ..., 9.9954e-01,
          9.8295e-01, 1.5001e-03],
         [2.3163e-04, 9.8046e-01, 9.8480e-01,  ..., 1.5210e-04,
          5.6840e-03, 1.5001e-03]],
        [[9.9597e-01, 3.4083e-02, 1.3634e-03,  ..., 1.1933e-03,
          3.6695e-01, 8.8029e-04],
         [1.3431e-03, 2.2872e-02, 1.3634e-03,  ..., 1.1933e-03,
          5.2115e-01, 8.8029e-04],
         [1.3431e-03, 2.2171e-02, 1.3634e-03,  ..., 9.9642e-01,
          6.6232e-02, 9.9736e-01],
         [1.3431e-03, 9.2087e-01, 9.9591e-01,  ..., 1.1933e-03,
          4.5672e-02, 8.8029e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6266e-03, 1.3595e-04, 3.1675e-04,  ..., 5.0882e-03,
          3.8646e-05, 1.0186e-02],
         [6.9412e-03, 1.3595e-04, 3.1675e-04,  ..., 4.7420e-03,
          3.8646e-05, 8.4486e-03],
         [9.7649e-01, 1.3595e-04, 3.1675e-04,  ..., 9.8543e-01,
          3.8646e-05, 9.7292e-01],
         [6.9412e-03, 9.9959e-01, 9.9905e-01,  ..., 4.7420e-03,
          9.9988e-01, 8.4486e-03]],
        [[2.3345e-03, 2.3234e-04, 2.1236e-04,  ..., 3.8857e-04,
          3.2891e-04, 3.4342e-03],
         [2.3345e-03, 2.3234e-04, 2.1236e-04,  ..., 3.8857e-04,
          3.2891e-04, 3.3269e-03],
         [9.9300e-01, 2.3234e-04, 2.1236e-04,  ..., 3.8857e-04,
          3.2891e-04, 9.8991e-01],
         [2.3345e-03, 9.9930e-01, 9.9936e-01,  ..., 9.9883e-01,
          9.9901e-01, 3.3269e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 398:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9607e-01, 6.5468e-03, 9.4256e-04,  ..., 5.6175e-04,
          3.6221e-04, 9.9936e-01],
         [1.3085e-03, 5.5572e-03, 9.4256e-04,  ..., 5.6175e-04,
          3.6221e-04, 2.1284e-04],
         [1.3085e-03, 5.5572e-03, 9.4256e-04,  ..., 9.9831e-01,
          9.9891e-01, 2.1284e-04],
         [1.3085e-03, 9.8234e-01, 9.9717e-01,  ..., 5.6175e-04,
          3.6221e-04, 2.1284e-04]],
        [[9.9192e-01, 5.0211e-03, 3.2679e-03,  ..., 9.8508e-05,
          1.4717e-01, 7.8493e-04],
         [2.6920e-03, 5.0211e-03, 3.2679e-03,  ..., 9.8508e-05,
          6.9656e-01, 7.8493e-04],
         [2.6920e-03, 5.0211e-03, 3.2679e-03,  ..., 9.9970e-01,
          7.4876e-02, 9.9765e-01],
         [2.6920e-03, 9.8494e-01, 9.9020e-01,  ..., 9.8508e-05,
          8.1401e-02, 7.8493e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3788e-03, 1.1011e-04, 1.9782e-04,  ..., 6.4460e-03,
          3.2782e-04, 2.9222e-03],
         [3.3788e-03, 1.1011e-04, 1.9782e-04,  ..., 5.5393e-03,
          3.2782e-04, 2.9222e-03],
         [9.8986e-01, 1.1011e-04, 1.9782e-04,  ..., 9.8248e-01,
          3.2782e-04, 9.9123e-01],
         [3.3788e-03, 9.9967e-01, 9.9941e-01,  ..., 5.5393e-03,
          9.9902e-01, 2.9222e-03]],
        [[3.1903e-03, 1.4844e-04, 2.0450e-04,  ..., 6.1134e-04,
          3.8241e-04, 1.3536e-03],
         [3.1903e-03, 1.4844e-04, 2.0450e-04,  ..., 6.1134e-04,
          3.8241e-04, 1.3536e-03],
         [9.9043e-01, 1.4844e-04, 2.0450e-04,  ..., 6.1134e-04,
          3.8241e-04, 9.9594e-01],
         [3.1903e-03, 9.9955e-01, 9.9939e-01,  ..., 9.9817e-01,
          9.9885e-01, 1.3536e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:04,329 [Process: 0] Synchronize training processes
2024-08-18 15:20:04,330 [Process: 0] Evaluating...
2024-08-18 15:20:04,331 [Process: 0] EPOCH 399:
2024-08-18 15:20:04,333 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 399:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9949e-01, 4.1777e-03, 5.0807e-03,  ..., 1.0290e-03,
          2.8931e-04, 9.9876e-01],
         [1.7085e-04, 4.1777e-03, 5.0807e-03,  ..., 1.0290e-03,
          2.8931e-04, 4.1298e-04],
         [1.7085e-04, 4.1777e-03, 5.0807e-03,  ..., 9.9691e-01,
          9.9913e-01, 4.1298e-04],
         [1.7085e-04, 9.8747e-01, 9.8476e-01,  ..., 1.0290e-03,
          2.8931e-04, 4.1298e-04]],
        [[9.9751e-01, 3.3318e-02, 6.0528e-03,  ..., 7.5481e-04,
          4.6572e-01, 1.5306e-03],
         [8.2903e-04, 1.7157e-02, 6.0528e-03,  ..., 7.5481e-04,
          4.2481e-01, 1.5306e-03],
         [8.2903e-04, 1.8296e-02, 6.0528e-03,  ..., 9.9774e-01,
          6.2348e-02, 9.9541e-01],
         [8.2903e-04, 9.3123e-01, 9.8184e-01,  ..., 7.5481e-04,
          4.7116e-02, 1.5306e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.9028e-03, 6.4036e-05, 8.3338e-04,  ..., 1.9799e-03,
          2.8604e-03, 6.5196e-03],
         [5.9028e-03, 6.4036e-05, 8.3338e-04,  ..., 1.9799e-03,
          2.8539e-03, 5.5087e-03],
         [9.8229e-01, 6.4036e-05, 8.3338e-04,  ..., 9.9406e-01,
          2.8539e-03, 9.8246e-01],
         [5.9028e-03, 9.9981e-01, 9.9750e-01,  ..., 1.9799e-03,
          9.9143e-01, 5.5087e-03]],
        [[8.7211e-03, 4.0340e-05, 1.0783e-03,  ..., 6.2543e-04,
          1.0767e-04, 5.6398e-03],
         [6.4701e-03, 4.0340e-05, 1.0783e-03,  ..., 6.2543e-04,
          1.0767e-04, 5.6398e-03],
         [9.7834e-01, 4.0340e-05, 1.0783e-03,  ..., 6.2543e-04,
          1.0767e-04, 9.8308e-01],
         [6.4701e-03, 9.9988e-01, 9.9677e-01,  ..., 9.9812e-01,
          9.9968e-01, 5.6398e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 400:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9611e-01, 5.4570e-03, 9.8716e-03,  ..., 1.4405e-03,
          1.6782e-03, 9.9931e-01],
         [1.2974e-03, 5.1596e-03, 7.9566e-03,  ..., 1.4405e-03,
          1.6782e-03, 2.3125e-04],
         [1.2974e-03, 5.1596e-03, 7.9566e-03,  ..., 9.9568e-01,
          9.9497e-01, 2.3125e-04],
         [1.2974e-03, 9.8422e-01, 9.7422e-01,  ..., 1.4405e-03,
          1.6782e-03, 2.3125e-04]],
        [[9.8829e-01, 5.9687e-03, 1.2411e-02,  ..., 7.3143e-04,
          1.3604e-01, 1.8442e-04],
         [4.0346e-03, 5.7749e-03, 8.4931e-03,  ..., 7.3143e-04,
          7.8454e-01, 1.8442e-04],
         [3.8366e-03, 5.7749e-03, 8.4931e-03,  ..., 9.9781e-01,
          4.1539e-02, 9.9945e-01],
         [3.8366e-03, 9.8248e-01, 9.7060e-01,  ..., 7.3143e-04,
          3.7880e-02, 1.8442e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:05,475 [Process: 0] Synchronize training processes
2024-08-18 15:20:05,475 [Process: 0] Evaluating...
2024-08-18 15:20:05,477 [Process: 0] EPOCH 400:
2024-08-18 15:20:05,479 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:06,601 [Process: 0] Synchronize training processes
2024-08-18 15:20:06,601 [Process: 0] Evaluating...
2024-08-18 15:20:06,603 [Process: 0] EPOCH 401:
2024-08-18 15:20:06,604 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4563e-03, 1.5730e-04, 7.4604e-05,  ..., 3.6789e-03,
          2.7990e-04, 2.9962e-03],
         [2.4563e-03, 1.5730e-04, 7.4604e-05,  ..., 3.6789e-03,
          2.7990e-04, 2.9962e-03],
         [9.9263e-01, 1.5730e-04, 7.4604e-05,  ..., 9.8896e-01,
          2.7990e-04, 9.9101e-01],
         [2.4563e-03, 9.9953e-01, 9.9978e-01,  ..., 3.6789e-03,
          9.9916e-01, 2.9962e-03]],
        [[3.0670e-03, 1.5720e-04, 9.6386e-04,  ..., 1.5857e-04,
          4.6669e-05, 9.4008e-03],
         [3.0670e-03, 1.5720e-04, 9.6386e-04,  ..., 1.5857e-04,
          4.6669e-05, 7.6126e-03],
         [9.9080e-01, 1.5720e-04, 9.6386e-04,  ..., 1.5857e-04,
          4.6669e-05, 9.7537e-01],
         [3.0670e-03, 9.9953e-01, 9.9711e-01,  ..., 9.9952e-01,
          9.9986e-01, 7.6126e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 401:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9924e-01, 1.0775e-02, 3.6119e-03,  ..., 3.9627e-04,
          4.9142e-04, 9.9959e-01],
         [2.5212e-04, 9.9131e-03, 3.6119e-03,  ..., 3.9627e-04,
          4.9142e-04, 1.3507e-04],
         [2.5212e-04, 1.0759e-02, 3.6119e-03,  ..., 9.9881e-01,
          9.9853e-01, 1.3507e-04],
         [2.5212e-04, 9.6855e-01, 9.8916e-01,  ..., 3.9627e-04,
          4.9142e-04, 1.3507e-04]],
        [[9.9605e-01, 5.8944e-03, 7.5315e-03,  ..., 2.5970e-03,
          8.1738e-02, 7.6182e-04],
         [1.7037e-03, 5.8944e-03, 7.0454e-03,  ..., 2.5970e-03,
          8.3852e-01, 7.6182e-04],
         [1.1224e-03, 5.8944e-03, 7.0454e-03,  ..., 9.9221e-01,
          4.6562e-02, 9.9771e-01],
         [1.1224e-03, 9.8232e-01, 9.7838e-01,  ..., 2.5970e-03,
          3.3175e-02, 7.6182e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2195e-02, 2.7092e-04, 1.4575e-03,  ..., 3.0458e-03,
          5.4903e-05, 7.7067e-03],
         [9.3194e-03, 2.7092e-04, 1.4575e-03,  ..., 3.0458e-03,
          5.4903e-05, 6.4535e-03],
         [9.6917e-01, 2.7092e-04, 1.4575e-03,  ..., 9.9086e-01,
          5.4903e-05, 9.7939e-01],
         [9.3194e-03, 9.9919e-01, 9.9563e-01,  ..., 3.0458e-03,
          9.9984e-01, 6.4535e-03]],
        [[1.1599e-02, 1.1519e-03, 5.9964e-04,  ..., 8.1361e-04,
          1.9755e-04, 8.0552e-03],
         [9.9080e-03, 1.1519e-03, 5.9964e-04,  ..., 8.1361e-04,
          1.9755e-04, 7.0619e-03],
         [9.6858e-01, 1.1519e-03, 5.9964e-04,  ..., 8.1361e-04,
          1.9755e-04, 9.7782e-01],
         [9.9080e-03, 9.9654e-01, 9.9820e-01,  ..., 9.9756e-01,
          9.9941e-01, 7.0619e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 402:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9903e-01, 1.1928e-02, 2.8341e-03,  ..., 2.7063e-04,
          1.5006e-03, 9.9796e-01],
         [3.2452e-04, 8.9254e-03, 2.8341e-03,  ..., 2.7063e-04,
          1.5006e-03, 6.8158e-04],
         [3.2452e-04, 8.9254e-03, 2.8341e-03,  ..., 9.9919e-01,
          9.9550e-01, 6.8158e-04],
         [3.2452e-04, 9.7022e-01, 9.9150e-01,  ..., 2.7063e-04,
          1.5006e-03, 6.8158e-04]],
        [[9.6994e-01, 2.4902e-03, 7.3480e-03,  ..., 9.0727e-04,
          4.7477e-03, 5.8582e-03],
         [1.1671e-02, 2.4902e-03, 7.3480e-03,  ..., 9.0727e-04,
          9.8541e-01, 5.8582e-03],
         [9.1956e-03, 2.4902e-03, 7.3480e-03,  ..., 9.9728e-01,
          4.7477e-03, 9.8243e-01],
         [9.1956e-03, 9.9253e-01, 9.7796e-01,  ..., 9.0727e-04,
          5.0973e-03, 5.8582e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:07,730 [Process: 0] Synchronize training processes
2024-08-18 15:20:07,731 [Process: 0] Evaluating...
2024-08-18 15:20:07,737 [Process: 0] EPOCH 402:
2024-08-18 15:20:07,739 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:08,852 [Process: 0] Synchronize training processes
2024-08-18 15:20:08,852 [Process: 0] Evaluating...
2024-08-18 15:20:08,854 [Process: 0] EPOCH 403:
2024-08-18 15:20:08,856 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5232e-03, 6.5870e-04, 1.2608e-03,  ..., 2.7361e-03,
          1.4360e-04, 4.3850e-03],
         [1.5232e-03, 6.5870e-04, 1.2608e-03,  ..., 2.7361e-03,
          1.4360e-04, 4.3850e-03],
         [9.9543e-01, 6.5870e-04, 1.2608e-03,  ..., 9.9179e-01,
          1.4360e-04, 9.8685e-01],
         [1.5232e-03, 9.9802e-01, 9.9622e-01,  ..., 2.7361e-03,
          9.9957e-01, 4.3850e-03]],
        [[3.5698e-03, 7.5140e-04, 2.3615e-04,  ..., 6.2834e-04,
          2.6507e-04, 1.3723e-02],
         [3.5698e-03, 7.5140e-04, 2.3615e-04,  ..., 6.2834e-04,
          2.6507e-04, 9.6968e-03],
         [9.8929e-01, 7.5140e-04, 2.3615e-04,  ..., 6.2834e-04,
          2.6507e-04, 9.6635e-01],
         [3.5698e-03, 9.9775e-01, 9.9929e-01,  ..., 9.9811e-01,
          9.9920e-01, 1.0235e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 403:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9803e-01, 1.1961e-02, 4.1642e-03,  ..., 5.2788e-04,
          3.2386e-03, 9.8111e-01],
         [6.5830e-04, 8.7396e-03, 4.1642e-03,  ..., 5.2788e-04,
          3.2386e-03, 7.5124e-03],
         [6.5830e-04, 8.9444e-03, 4.1642e-03,  ..., 9.9842e-01,
          9.9028e-01, 5.6868e-03],
         [6.5830e-04, 9.7035e-01, 9.8751e-01,  ..., 5.2788e-04,
          3.2386e-03, 5.6868e-03]],
        [[9.9620e-01, 4.8504e-03, 6.0956e-03,  ..., 1.0112e-04,
          3.6526e-03, 1.2464e-03],
         [1.3242e-03, 4.8504e-03, 5.7696e-03,  ..., 1.0112e-04,
          9.9231e-01, 1.2464e-03],
         [1.2377e-03, 4.8504e-03, 5.7696e-03,  ..., 9.9970e-01,
          2.0194e-03, 9.9626e-01],
         [1.2377e-03, 9.8545e-01, 9.8237e-01,  ..., 1.0112e-04,
          2.0194e-03, 1.2464e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.3554e-02, 8.5629e-04, 3.0850e-04,  ..., 1.7452e-03,
          1.2434e-04, 5.1564e-03],
         [2.6900e-02, 8.5629e-04, 3.0850e-04,  ..., 1.7452e-03,
          1.2434e-04, 5.1564e-03],
         [8.5714e-01, 8.5629e-04, 3.0850e-04,  ..., 9.9476e-01,
          1.2434e-04, 9.8453e-01],
         [3.2409e-02, 9.9743e-01, 9.9907e-01,  ..., 1.7452e-03,
          9.9963e-01, 5.1564e-03]],
        [[2.7655e-03, 4.3692e-04, 1.9298e-04,  ..., 1.5944e-05,
          1.2526e-03, 1.0582e-02],
         [2.7655e-03, 4.3692e-04, 1.9298e-04,  ..., 1.5944e-05,
          1.2526e-03, 7.9645e-03],
         [9.9170e-01, 4.3692e-04, 1.9298e-04,  ..., 1.5944e-05,
          1.2526e-03, 9.7349e-01],
         [2.7655e-03, 9.9869e-01, 9.9942e-01,  ..., 9.9995e-01,
          9.9624e-01, 7.9645e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 404:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:09,986 [Process: 0] Synchronize training processes
2024-08-18 15:20:09,986 [Process: 0] Evaluating...
2024-08-18 15:20:09,988 [Process: 0] EPOCH 404:
2024-08-18 15:20:09,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:11,108 [Process: 0] Synchronize training processes
2024-08-18 15:20:11,109 [Process: 0] Evaluating...
2024-08-18 15:20:11,110 [Process: 0] EPOCH 405:
2024-08-18 15:20:11,112 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9865e-01, 2.6277e-03, 4.6784e-03,  ..., 5.8597e-04,
          6.0148e-03, 9.9921e-01],
         [4.4921e-04, 2.6277e-03, 4.6784e-03,  ..., 5.8597e-04,
          5.7021e-03, 2.6211e-04],
         [4.4921e-04, 2.6277e-03, 4.6784e-03,  ..., 9.9824e-01,
          9.8258e-01, 2.6211e-04],
         [4.4921e-04, 9.9212e-01, 9.8596e-01,  ..., 5.8597e-04,
          5.7021e-03, 2.6211e-04]],
        [[9.8311e-01, 1.5665e-02, 2.1589e-03,  ..., 1.9092e-04,
          2.8239e-02, 5.3918e-04],
         [9.3915e-03, 1.2218e-02, 2.1589e-03,  ..., 1.9092e-04,
          9.4830e-01, 5.3918e-04],
         [3.7708e-03, 1.3345e-02, 2.1589e-03,  ..., 9.9943e-01,
          1.1730e-02, 9.9838e-01],
         [3.7314e-03, 9.5877e-01, 9.9352e-01,  ..., 1.9092e-04,
          1.1730e-02, 5.3918e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4133e-03, 2.0084e-04, 5.7530e-04,  ..., 2.9840e-02,
          1.6581e-04, 9.8272e-03],
         [9.4133e-03, 2.0084e-04, 5.7530e-04,  ..., 1.5999e-02,
          1.6581e-04, 7.4603e-03],
         [9.7142e-01, 2.0084e-04, 5.7530e-04,  ..., 9.3256e-01,
          1.6581e-04, 9.7525e-01],
         [9.7496e-03, 9.9940e-01, 9.9827e-01,  ..., 2.1599e-02,
          9.9950e-01, 7.4603e-03]],
        [[1.5718e-03, 1.9667e-04, 3.9022e-04,  ..., 1.9945e-04,
          6.6685e-04, 9.0226e-03],
         [1.5718e-03, 1.9667e-04, 3.9022e-04,  ..., 1.9945e-04,
          6.6685e-04, 8.9885e-03],
         [9.9528e-01, 1.9667e-04, 3.9022e-04,  ..., 1.9945e-04,
          6.6685e-04, 9.7259e-01],
         [1.5718e-03, 9.9941e-01, 9.9883e-01,  ..., 9.9940e-01,
          9.9800e-01, 9.3978e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 405:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9918e-01, 6.3829e-03, 4.2614e-03,  ..., 2.3446e-03,
          1.7865e-03, 9.9748e-01],
         [2.7235e-04, 5.3780e-03, 4.2614e-03,  ..., 2.3446e-03,
          1.7865e-03, 8.4126e-04],
         [2.7235e-04, 5.3780e-03, 4.2614e-03,  ..., 9.9297e-01,
          9.9464e-01, 8.4126e-04],
         [2.7235e-04, 9.8286e-01, 9.8722e-01,  ..., 2.3446e-03,
          1.7865e-03, 8.4126e-04]],
        [[9.9543e-01, 2.0602e-03, 4.3528e-03,  ..., 5.3067e-03,
          5.5443e-02, 8.0811e-05],
         [1.7545e-03, 2.0602e-03, 4.3528e-03,  ..., 5.3067e-03,
          9.0839e-01, 8.0811e-05],
         [1.4058e-03, 2.0602e-03, 4.3528e-03,  ..., 9.8408e-01,
          2.1112e-02, 9.9976e-01],
         [1.4058e-03, 9.9382e-01, 9.8694e-01,  ..., 5.3067e-03,
          1.5055e-02, 8.0811e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.2049e-03, 1.2285e-03, 3.4666e-04,  ..., 1.2051e-02,
          5.9212e-05, 2.2192e-03],
         [6.6656e-03, 1.2285e-03, 3.4666e-04,  ..., 7.9764e-03,
          5.9212e-05, 2.2192e-03],
         [9.7846e-01, 1.2285e-03, 3.4666e-04,  ..., 9.7200e-01,
          5.9212e-05, 9.9334e-01],
         [6.6656e-03, 9.9631e-01, 9.9896e-01,  ..., 7.9764e-03,
          9.9982e-01, 2.2192e-03]],
        [[4.7803e-03, 3.3917e-04, 8.8426e-04,  ..., 1.5663e-04,
          8.7739e-04, 3.8029e-03],
         [4.7803e-03, 3.3917e-04, 8.8426e-04,  ..., 1.5663e-04,
          8.7739e-04, 3.8029e-03],
         [9.8566e-01, 3.3917e-04, 8.8426e-04,  ..., 1.5663e-04,
          8.7739e-04, 9.8859e-01],
         [4.7803e-03, 9.9898e-01, 9.9735e-01,  ..., 9.9953e-01,
          9.9737e-01, 3.8029e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 406:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:12,239 [Process: 0] Synchronize training processes
2024-08-18 15:20:12,239 [Process: 0] Evaluating...
2024-08-18 15:20:12,241 [Process: 0] EPOCH 406:
2024-08-18 15:20:12,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:13,366 [Process: 0] Synchronize training processes
2024-08-18 15:20:13,366 [Process: 0] Evaluating...
2024-08-18 15:20:13,368 [Process: 0] EPOCH 407:
2024-08-18 15:20:13,370 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9607e-01, 1.8652e-02, 1.4299e-03,  ..., 1.3155e-03,
          8.6770e-04, 9.9845e-01],
         [1.3461e-03, 1.2163e-02, 1.4299e-03,  ..., 1.3155e-03,
          8.6770e-04, 5.1673e-04],
         [1.2894e-03, 1.2163e-02, 1.4299e-03,  ..., 9.9605e-01,
          9.9740e-01, 5.1673e-04],
         [1.2894e-03, 9.5702e-01, 9.9571e-01,  ..., 1.3155e-03,
          8.6770e-04, 5.1673e-04]],
        [[9.9040e-01, 1.1710e-03, 7.8417e-03,  ..., 3.5041e-04,
          1.5794e-02, 5.0942e-05],
         [3.2017e-03, 1.1710e-03, 6.9678e-03,  ..., 3.5041e-04,
          9.7694e-01, 5.0942e-05],
         [3.2017e-03, 1.1710e-03, 6.9678e-03,  ..., 9.9895e-01,
          3.6332e-03, 9.9985e-01],
         [3.2017e-03, 9.9649e-01, 9.7822e-01,  ..., 3.5041e-04,
          3.6332e-03, 5.0942e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1749e-03, 4.2142e-04, 1.1345e-04,  ..., 1.2993e-03,
          1.7828e-03, 5.5334e-02],
         [2.1749e-03, 4.2142e-04, 1.1345e-04,  ..., 1.2993e-03,
          1.7828e-03, 2.5890e-02],
         [9.9348e-01, 4.2142e-04, 1.1345e-04,  ..., 9.9610e-01,
          1.7828e-03, 8.8258e-01],
         [2.1749e-03, 9.9874e-01, 9.9966e-01,  ..., 1.2993e-03,
          9.9465e-01, 3.6195e-02]],
        [[3.3283e-03, 1.7391e-03, 1.3785e-03,  ..., 6.1940e-04,
          1.0228e-03, 1.0066e-02],
         [3.3283e-03, 1.7391e-03, 1.3785e-03,  ..., 6.1940e-04,
          1.0228e-03, 9.8434e-03],
         [9.9002e-01, 1.7391e-03, 1.3785e-03,  ..., 6.1940e-04,
          1.0228e-03, 9.7025e-01],
         [3.3283e-03, 9.9478e-01, 9.9586e-01,  ..., 9.9814e-01,
          9.9693e-01, 9.8434e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 407:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9589e-01, 7.1394e-03, 6.6720e-03,  ..., 4.8928e-04,
          2.9928e-04, 9.9768e-01],
         [1.3712e-03, 6.1864e-03, 6.6720e-03,  ..., 4.8928e-04,
          2.9928e-04, 7.6617e-04],
         [1.3712e-03, 6.1864e-03, 6.6720e-03,  ..., 9.9853e-01,
          9.9910e-01, 7.8278e-04],
         [1.3712e-03, 9.8049e-01, 9.7998e-01,  ..., 4.8928e-04,
          2.9928e-04, 7.6617e-04]],
        [[9.9337e-01, 3.1586e-03, 4.0663e-03,  ..., 8.1309e-04,
          8.4477e-02, 5.2211e-04],
         [2.2100e-03, 3.1586e-03, 4.0663e-03,  ..., 8.1309e-04,
          8.6317e-01, 5.2211e-04],
         [2.2100e-03, 3.1586e-03, 4.0663e-03,  ..., 9.9756e-01,
          2.7952e-02, 9.9843e-01],
         [2.2100e-03, 9.9052e-01, 9.8780e-01,  ..., 8.1309e-04,
          2.4400e-02, 5.2211e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:20:14,497 [Process: 0] Synchronize training processes
2024-08-18 15:20:14,497 [Process: 0] Evaluating...
2024-08-18 15:20:14,499 [Process: 0] EPOCH 408:
2024-08-18 15:20:14,501 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9498e-03, 2.6829e-05, 4.1987e-04,  ..., 1.7465e-03,
          2.4037e-05, 3.1436e-03],
         [1.9498e-03, 2.6829e-05, 4.1987e-04,  ..., 1.7465e-03,
          2.4037e-05, 3.1436e-03],
         [9.9415e-01, 2.6829e-05, 4.1987e-04,  ..., 9.9476e-01,
          2.4037e-05, 9.9057e-01],
         [1.9498e-03, 9.9992e-01, 9.9874e-01,  ..., 1.7465e-03,
          9.9993e-01, 3.1436e-03]],
        [[8.8480e-04, 1.2097e-04, 4.5507e-04,  ..., 9.4458e-05,
          7.4152e-05, 3.5293e-03],
         [8.8480e-04, 1.2097e-04, 4.5507e-04,  ..., 9.4458e-05,
          7.4152e-05, 3.5293e-03],
         [9.9735e-01, 1.2097e-04, 4.5507e-04,  ..., 9.4458e-05,
          7.4152e-05, 9.8941e-01],
         [8.8480e-04, 9.9964e-01, 9.9863e-01,  ..., 9.9972e-01,
          9.9978e-01, 3.5293e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 408:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9147e-01, 2.2781e-02, 4.8551e-03,  ..., 1.7555e-04,
          5.4726e-04, 9.9023e-01],
         [2.8436e-03, 1.2237e-02, 4.8551e-03,  ..., 1.7555e-04,
          5.4726e-04, 3.1486e-03],
         [2.8436e-03, 1.2537e-02, 4.8551e-03,  ..., 9.9947e-01,
          9.9836e-01, 3.4748e-03],
         [2.8436e-03, 9.5244e-01, 9.8543e-01,  ..., 1.7555e-04,
          5.4726e-04, 3.1486e-03]],
        [[9.9628e-01, 1.8664e-03, 4.5028e-03,  ..., 9.4251e-04,
          9.9537e-02, 6.0771e-04],
         [1.2397e-03, 1.8664e-03, 4.5028e-03,  ..., 9.4251e-04,
          8.7115e-01, 6.0771e-04],
         [1.2397e-03, 1.8664e-03, 4.5028e-03,  ..., 9.9717e-01,
          1.4656e-02, 9.9818e-01],
         [1.2397e-03, 9.9440e-01, 9.8649e-01,  ..., 9.4251e-04,
          1.4656e-02, 6.0771e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.9085e-03, 6.7319e-05, 8.8302e-04,  ..., 1.6077e-02,
          1.2337e-03, 5.8564e-03],
         [3.9085e-03, 6.7319e-05, 8.8302e-04,  ..., 1.1987e-02,
          1.2337e-03, 5.8225e-03],
         [9.8827e-01, 6.7319e-05, 8.8302e-04,  ..., 9.5935e-01,
          1.2337e-03, 9.8250e-01],
         [3.9085e-03, 9.9980e-01, 9.9735e-01,  ..., 1.2586e-02,
          9.9630e-01, 5.8225e-03]],
        [[1.3943e-02, 2.1618e-03, 3.5283e-04,  ..., 5.3718e-05,
          6.1222e-04, 1.0112e-02],
         [8.5101e-03, 2.1618e-03, 3.5283e-04,  ..., 5.3718e-05,
          6.1222e-04, 8.3327e-03],
         [9.6904e-01, 2.1618e-03, 3.5283e-04,  ..., 5.3718e-05,
          6.1222e-04, 9.7322e-01],
         [8.5101e-03, 9.9351e-01, 9.9894e-01,  ..., 9.9984e-01,
          9.9816e-01, 8.3327e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 409:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9765e-01, 5.1028e-03, 4.9192e-03,  ..., 1.2058e-04,
          1.8623e-04, 9.9727e-01],
         [7.8283e-04, 4.6028e-03, 4.9192e-03,  ..., 1.2058e-04,
          1.8623e-04, 8.9848e-04],
         [7.8283e-04, 4.6028e-03, 4.9192e-03,  ..., 9.9964e-01,
          9.9944e-01, 9.3493e-04],
         [7.8283e-04, 9.8569e-01, 9.8524e-01,  ..., 1.2058e-04,
          1.8623e-04, 8.9848e-04]],
        [[9.9763e-01, 3.4589e-03, 4.7945e-03,  ..., 2.6216e-04,
          1.3252e-01, 2.8214e-04],
         [1.0367e-03, 3.4589e-03, 4.7945e-03,  ..., 2.6216e-04,
          8.0387e-01, 2.8214e-04],
         [6.6842e-04, 3.4589e-03, 4.7945e-03,  ..., 9.9921e-01,
          3.7222e-02, 9.9915e-01],
         [6.6842e-04, 9.8962e-01, 9.8562e-01,  ..., 2.6216e-04,
          2.6389e-02, 2.8214e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:15,632 [Process: 0] Synchronize training processes
2024-08-18 15:20:15,632 [Process: 0] Evaluating...
2024-08-18 15:20:15,634 [Process: 0] EPOCH 409:
2024-08-18 15:20:15,636 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:16,763 [Process: 0] Synchronize training processes
2024-08-18 15:20:16,763 [Process: 0] Evaluating...
2024-08-18 15:20:16,765 [Process: 0] EPOCH 410:
2024-08-18 15:20:16,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0373e-03, 1.4836e-03, 8.8352e-04,  ..., 5.2656e-03,
          3.6050e-05, 5.7688e-03],
         [4.0373e-03, 1.4836e-03, 8.8352e-04,  ..., 5.2656e-03,
          3.6050e-05, 4.6058e-03],
         [9.8789e-01, 1.4836e-03, 8.8352e-04,  ..., 9.8420e-01,
          3.6050e-05, 9.8502e-01],
         [4.0373e-03, 9.9555e-01, 9.9735e-01,  ..., 5.2656e-03,
          9.9989e-01, 4.6058e-03]],
        [[7.3835e-03, 1.9365e-03, 4.9988e-04,  ..., 5.2442e-04,
          7.7279e-04, 9.0383e-03],
         [6.2123e-03, 1.9365e-03, 4.9988e-04,  ..., 5.2442e-04,
          7.7279e-04, 8.2259e-03],
         [9.8019e-01, 1.9365e-03, 4.9988e-04,  ..., 5.2442e-04,
          7.7279e-04, 9.7450e-01],
         [6.2123e-03, 9.9419e-01, 9.9850e-01,  ..., 9.9843e-01,
          9.9768e-01, 8.2373e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 410:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9721e-01, 5.8470e-03, 3.2985e-03,  ..., 8.7990e-04,
          1.4868e-03, 9.9487e-01],
         [9.3060e-04, 5.2316e-03, 3.2985e-03,  ..., 8.7990e-04,
          1.4868e-03, 1.6168e-03],
         [9.3060e-04, 5.2316e-03, 3.2985e-03,  ..., 9.9736e-01,
          9.9554e-01, 1.8918e-03],
         [9.3060e-04, 9.8369e-01, 9.9010e-01,  ..., 8.7990e-04,
          1.4868e-03, 1.6168e-03]],
        [[9.8803e-01, 1.3903e-02, 3.1381e-02,  ..., 6.6630e-04,
          6.7155e-04, 2.3883e-04],
         [3.4216e-03, 1.1614e-02, 1.4537e-02,  ..., 6.6630e-04,
          9.9799e-01, 2.3883e-04],
         [5.1288e-03, 1.1614e-02, 1.8279e-02,  ..., 9.9800e-01,
          6.7155e-04, 9.9928e-01],
         [3.4216e-03, 9.6287e-01, 9.3580e-01,  ..., 6.6630e-04,
          6.7155e-04, 2.3883e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.8881e-03, 5.4564e-04, 2.1079e-04,  ..., 3.0049e-03,
          1.3961e-03, 1.4049e-02],
         [5.8881e-03, 5.4564e-04, 2.1079e-04,  ..., 3.0049e-03,
          1.3961e-03, 7.9530e-03],
         [9.8234e-01, 5.4564e-04, 2.1079e-04,  ..., 9.9099e-01,
          1.3961e-03, 9.7004e-01],
         [5.8881e-03, 9.9836e-01, 9.9937e-01,  ..., 3.0049e-03,
          9.9581e-01, 7.9530e-03]],
        [[3.6584e-03, 7.0680e-04, 4.6990e-04,  ..., 2.7968e-04,
          7.8818e-04, 1.2630e-02],
         [3.6584e-03, 7.0680e-04, 4.6990e-04,  ..., 2.7968e-04,
          7.8818e-04, 9.4806e-03],
         [9.8902e-01, 7.0680e-04, 4.6990e-04,  ..., 2.7968e-04,
          7.8818e-04, 9.6837e-01],
         [3.6584e-03, 9.9788e-01, 9.9859e-01,  ..., 9.9916e-01,
          9.9764e-01, 9.5159e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 411:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8191e-01, 1.4866e-02, 9.2488e-03,  ..., 8.4203e-05,
          7.5162e-05, 9.8993e-01],
         [7.0106e-03, 9.4573e-03, 8.6983e-03,  ..., 8.4203e-05,
          7.5162e-05, 3.3556e-03],
         [5.6101e-03, 9.4573e-03, 8.6983e-03,  ..., 9.9975e-01,
          9.9977e-01, 3.3556e-03],
         [5.4665e-03, 9.6622e-01, 9.7335e-01,  ..., 8.4203e-05,
          7.5162e-05, 3.3556e-03]],
        [[9.9672e-01, 5.4848e-03, 8.4449e-03,  ..., 2.7378e-03,
          2.9825e-01, 1.4385e-03],
         [1.0923e-03, 5.4848e-03, 8.4449e-03,  ..., 2.7378e-03,
          6.1837e-01, 1.4385e-03],
         [1.0923e-03, 5.4848e-03, 8.5414e-03,  ..., 9.9179e-01,
          4.8069e-02, 9.9568e-01],
         [1.0923e-03, 9.8355e-01, 9.7457e-01,  ..., 2.7378e-03,
          3.5309e-02, 1.4385e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:17,889 [Process: 0] Synchronize training processes
2024-08-18 15:20:17,889 [Process: 0] Evaluating...
2024-08-18 15:20:17,891 [Process: 0] EPOCH 411:
2024-08-18 15:20:17,892 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:19,017 [Process: 0] Synchronize training processes
2024-08-18 15:20:19,018 [Process: 0] Evaluating...
2024-08-18 15:20:19,022 [Process: 0] EPOCH 412:
2024-08-18 15:20:19,024 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.2569e-03, 3.1683e-04, 4.0164e-04,  ..., 1.3708e-03,
          3.0265e-04, 3.2647e-03],
         [9.2569e-03, 3.1683e-04, 4.0164e-04,  ..., 1.3708e-03,
          3.0265e-04, 3.2647e-03],
         [9.7222e-01, 3.1683e-04, 4.0164e-04,  ..., 9.9589e-01,
          3.0265e-04, 9.9021e-01],
         [9.2663e-03, 9.9905e-01, 9.9880e-01,  ..., 1.3708e-03,
          9.9909e-01, 3.2647e-03]],
        [[3.2580e-03, 4.4444e-05, 6.2690e-04,  ..., 1.2306e-03,
          5.6498e-05, 1.8239e-03],
         [3.2580e-03, 4.4444e-05, 6.2690e-04,  ..., 1.2306e-03,
          5.6498e-05, 1.8239e-03],
         [9.9023e-01, 4.4444e-05, 6.2690e-04,  ..., 1.2306e-03,
          5.6498e-05, 9.9453e-01],
         [3.2580e-03, 9.9987e-01, 9.9812e-01,  ..., 9.9631e-01,
          9.9983e-01, 1.8239e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 412:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9448e-01, 3.1754e-02, 5.7167e-03,  ..., 6.8523e-04,
          8.9715e-04, 9.9668e-01],
         [1.8416e-03, 1.5979e-02, 5.7167e-03,  ..., 6.8523e-04,
          8.9715e-04, 1.1008e-03],
         [1.8416e-03, 1.9556e-02, 5.7167e-03,  ..., 9.9794e-01,
          9.9731e-01, 1.1155e-03],
         [1.8416e-03, 9.3271e-01, 9.8285e-01,  ..., 6.8523e-04,
          8.9715e-04, 1.1008e-03]],
        [[9.8294e-01, 1.5834e-03, 7.1012e-03,  ..., 3.9885e-04,
          2.6293e-02, 2.5889e-04],
         [1.0445e-02, 1.5834e-03, 6.2984e-03,  ..., 3.9885e-04,
          9.6403e-01, 2.5889e-04],
         [3.3059e-03, 1.5834e-03, 6.2984e-03,  ..., 9.9880e-01,
          4.8407e-03, 9.9922e-01],
         [3.3059e-03, 9.9525e-01, 9.8030e-01,  ..., 3.9885e-04,
          4.8407e-03, 2.5889e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6900e-03, 8.9760e-04, 2.9884e-04,  ..., 2.1881e-03,
          2.0326e-04, 2.3172e-03],
         [1.6900e-03, 8.9760e-04, 2.9884e-04,  ..., 2.1881e-03,
          2.0326e-04, 2.3172e-03],
         [9.9493e-01, 8.9760e-04, 2.9884e-04,  ..., 9.9344e-01,
          2.0326e-04, 9.9305e-01],
         [1.6900e-03, 9.9731e-01, 9.9910e-01,  ..., 2.1881e-03,
          9.9939e-01, 2.3172e-03]],
        [[1.7941e-03, 3.1386e-04, 1.9063e-03,  ..., 2.3879e-03,
          1.3277e-04, 5.3875e-02],
         [1.7941e-03, 3.1386e-04, 1.9063e-03,  ..., 2.3879e-03,
          1.3277e-04, 2.8004e-02],
         [9.9462e-01, 3.1386e-04, 1.9063e-03,  ..., 2.3879e-03,
          1.3277e-04, 8.7674e-01],
         [1.7941e-03, 9.9906e-01, 9.9428e-01,  ..., 9.9284e-01,
          9.9960e-01, 4.1381e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 413:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:20,145 [Process: 0] Synchronize training processes
2024-08-18 15:20:20,145 [Process: 0] Evaluating...
2024-08-18 15:20:20,147 [Process: 0] EPOCH 413:
2024-08-18 15:20:20,149 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:21,278 [Process: 0] Synchronize training processes
2024-08-18 15:20:21,279 [Process: 0] Evaluating...
2024-08-18 15:20:21,281 [Process: 0] EPOCH 414:
2024-08-18 15:20:21,283 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8984e-01, 1.1086e-02, 1.6499e-03,  ..., 9.4833e-04,
          1.4310e-04, 9.9808e-01],
         [3.3248e-03, 7.0197e-03, 1.6499e-03,  ..., 9.4833e-04,
          1.4310e-04, 6.4054e-04],
         [3.3248e-03, 7.6139e-03, 1.6499e-03,  ..., 9.9715e-01,
          9.9957e-01, 6.4054e-04],
         [3.5105e-03, 9.7428e-01, 9.9505e-01,  ..., 9.4833e-04,
          1.4310e-04, 6.4054e-04]],
        [[9.9875e-01, 1.4394e-03, 2.3098e-03,  ..., 9.5709e-05,
          3.1913e-01, 4.8260e-04],
         [4.1808e-04, 1.4394e-03, 2.3098e-03,  ..., 9.5709e-05,
          6.1849e-01, 4.8260e-04],
         [4.1808e-04, 1.4394e-03, 2.3098e-03,  ..., 9.9971e-01,
          3.1192e-02, 9.9855e-01],
         [4.1808e-04, 9.9568e-01, 9.9307e-01,  ..., 9.5709e-05,
          3.1192e-02, 4.8260e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3457e-03, 4.5902e-04, 1.3985e-04,  ..., 1.6882e-03,
          3.6438e-05, 6.9893e-04],
         [4.3457e-03, 4.5902e-04, 1.3985e-04,  ..., 1.6882e-03,
          3.6438e-05, 6.9893e-04],
         [9.8696e-01, 4.5902e-04, 1.3985e-04,  ..., 9.9494e-01,
          3.6438e-05, 9.9790e-01],
         [4.3457e-03, 9.9862e-01, 9.9958e-01,  ..., 1.6882e-03,
          9.9989e-01, 6.9893e-04]],
        [[9.6637e-04, 5.9984e-04, 1.1074e-03,  ..., 8.1261e-04,
          3.0409e-04, 1.8025e-03],
         [9.6637e-04, 5.9984e-04, 1.1074e-03,  ..., 8.1261e-04,
          3.0409e-04, 1.8025e-03],
         [9.9710e-01, 5.9984e-04, 1.1074e-03,  ..., 8.1261e-04,
          3.0409e-04, 9.9459e-01],
         [9.6637e-04, 9.9820e-01, 9.9668e-01,  ..., 9.9756e-01,
          9.9909e-01, 1.8025e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 414:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9734e-01, 3.3208e-03, 4.9790e-03,  ..., 1.3611e-03,
          2.5596e-03, 9.9917e-01],
         [1.0662e-03, 3.3208e-03, 4.9542e-03,  ..., 1.3611e-03,
          2.5596e-03, 2.7692e-04],
         [7.9775e-04, 3.3208e-03, 4.9542e-03,  ..., 9.9592e-01,
          9.9232e-01, 2.7692e-04],
         [7.9775e-04, 9.9004e-01, 9.8511e-01,  ..., 1.3611e-03,
          2.5596e-03, 2.7692e-04]],
        [[9.9145e-01, 3.0305e-03, 2.3163e-03,  ..., 1.6899e-04,
          1.0156e-01, 2.8678e-03],
         [2.8508e-03, 2.7337e-03, 2.3163e-03,  ..., 1.6899e-04,
          8.6525e-01, 2.8678e-03],
         [2.8508e-03, 2.7337e-03, 2.3163e-03,  ..., 9.9949e-01,
          1.6595e-02, 9.9140e-01],
         [2.8508e-03, 9.9150e-01, 9.9305e-01,  ..., 1.6899e-04,
          1.6595e-02, 2.8678e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3647e-03, 1.1893e-03, 3.9249e-04,  ..., 4.5559e-03,
          8.7701e-05, 9.8685e-03],
         [1.3647e-03, 1.1893e-03, 3.9249e-04,  ..., 3.6472e-03,
          8.7701e-05, 7.7017e-03],
         [9.9591e-01, 1.1893e-03, 3.9249e-04,  ..., 9.8815e-01,
          8.7701e-05, 9.7473e-01],
         [1.3647e-03, 9.9643e-01, 9.9882e-01,  ..., 3.6472e-03,
          9.9974e-01, 7.7017e-03]],
        [[2.4093e-03, 3.3893e-04, 4.9893e-04,  ..., 2.3681e-03,
          3.9557e-04, 3.5529e-03],
         [2.4093e-03, 3.3893e-04, 4.9893e-04,  ..., 2.3681e-03,
          3.9557e-04, 3.5529e-03],
         [9.9277e-01, 3.3893e-04, 4.9893e-04,  ..., 2.3681e-03,
          3.9557e-04, 9.8934e-01],
         [2.4093e-03, 9.9898e-01, 9.9850e-01,  ..., 9.9290e-01,
          9.9881e-01, 3.5529e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 415:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:22,410 [Process: 0] Synchronize training processes
2024-08-18 15:20:22,410 [Process: 0] Evaluating...
2024-08-18 15:20:22,412 [Process: 0] EPOCH 415:
2024-08-18 15:20:22,414 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9573e-01, 8.4405e-03, 9.9490e-03,  ..., 3.9540e-04,
          6.0867e-04, 9.9808e-01],
         [1.4218e-03, 7.9351e-03, 7.4307e-03,  ..., 3.9540e-04,
          6.0867e-04, 6.3956e-04],
         [1.4218e-03, 7.9351e-03, 7.4307e-03,  ..., 9.9881e-01,
          9.9817e-01, 6.3956e-04],
         [1.4218e-03, 9.7569e-01, 9.7519e-01,  ..., 3.9540e-04,
          6.0867e-04, 6.3956e-04]],
        [[9.9789e-01, 1.5107e-03, 3.4886e-03,  ..., 2.6039e-03,
          4.9815e-02, 1.7754e-03],
         [7.0391e-04, 1.5107e-03, 3.4886e-03,  ..., 2.9396e-03,
          9.2376e-01, 1.7754e-03],
         [7.0391e-04, 1.5107e-03, 3.4886e-03,  ..., 9.9185e-01,
          1.3211e-02, 9.9467e-01],
         [7.0391e-04, 9.9547e-01, 9.8953e-01,  ..., 2.6039e-03,
          1.3211e-02, 1.7754e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.4284e-03, 6.6922e-04, 3.5596e-04,  ..., 1.8834e-03,
          2.8568e-04, 2.3316e-03],
         [6.4284e-03, 6.6922e-04, 3.5596e-04,  ..., 1.8834e-03,
          2.8568e-04, 2.3316e-03],
         [9.8071e-01, 6.6922e-04, 3.5596e-04,  ..., 9.9435e-01,
          2.8568e-04, 9.9301e-01],
         [6.4284e-03, 9.9799e-01, 9.9893e-01,  ..., 1.8834e-03,
          9.9914e-01, 2.3316e-03]],
        [[1.4871e-03, 9.5628e-05, 4.1434e-04,  ..., 1.5980e-04,
          2.7092e-04, 4.6005e-03],
         [1.4871e-03, 9.5628e-05, 4.1434e-04,  ..., 1.5980e-04,
          2.7092e-04, 4.6005e-03],
         [9.9554e-01, 9.5628e-05, 4.1434e-04,  ..., 1.5980e-04,
          2.7092e-04, 9.8620e-01],
         [1.4871e-03, 9.9971e-01, 9.9876e-01,  ..., 9.9952e-01,
          9.9919e-01, 4.6005e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 416:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9322e-01, 1.2426e-02, 6.3579e-03,  ..., 2.3871e-04,
          1.1404e-03, 9.9212e-01],
         [2.2593e-03, 1.5082e-02, 6.0725e-03,  ..., 2.3871e-04,
          1.1404e-03, 2.9350e-03],
         [2.2593e-03, 1.2817e-02, 6.0725e-03,  ..., 9.9928e-01,
          9.9658e-01, 2.4703e-03],
         [2.2593e-03, 9.5968e-01, 9.8150e-01,  ..., 2.3871e-04,
          1.1404e-03, 2.4703e-03]],
        [[9.9748e-01, 3.0212e-03, 1.7539e-03,  ..., 1.8616e-04,
          8.4858e-03, 2.4011e-04],
         [8.3954e-04, 3.0212e-03, 1.7539e-03,  ..., 1.8616e-04,
          9.8519e-01, 2.4011e-04],
         [8.3954e-04, 3.0212e-03, 1.7539e-03,  ..., 9.9944e-01,
          3.1618e-03, 9.9928e-01],
         [8.3954e-04, 9.9094e-01, 9.9474e-01,  ..., 1.8616e-04,
          3.1618e-03, 2.4011e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:23,542 [Process: 0] Synchronize training processes
2024-08-18 15:20:23,542 [Process: 0] Evaluating...
2024-08-18 15:20:23,544 [Process: 0] EPOCH 416:
2024-08-18 15:20:23,545 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:24,673 [Process: 0] Synchronize training processes
2024-08-18 15:20:24,673 [Process: 0] Evaluating...
2024-08-18 15:20:24,675 [Process: 0] EPOCH 417:
2024-08-18 15:20:24,677 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.9192e-03, 6.0513e-04, 2.5218e-04,  ..., 2.5605e-03,
          1.9957e-04, 1.1882e-03],
         [6.3961e-03, 6.0513e-04, 2.5218e-04,  ..., 2.5605e-03,
          1.9957e-04, 1.1882e-03],
         [9.7829e-01, 6.0513e-04, 2.5218e-04,  ..., 9.9232e-01,
          1.9957e-04, 9.9644e-01],
         [6.3961e-03, 9.9818e-01, 9.9924e-01,  ..., 2.5605e-03,
          9.9940e-01, 1.1882e-03]],
        [[4.0001e-03, 3.4663e-03, 9.9089e-04,  ..., 9.1095e-05,
          2.2880e-04, 3.6650e-03],
         [4.0001e-03, 3.4663e-03, 9.9089e-04,  ..., 9.1095e-05,
          2.2880e-04, 3.6650e-03],
         [9.8800e-01, 3.4663e-03, 9.9089e-04,  ..., 9.1095e-05,
          2.2880e-04, 9.8900e-01],
         [4.0001e-03, 9.8960e-01, 9.9703e-01,  ..., 9.9973e-01,
          9.9931e-01, 3.6650e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 417:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9208e-01, 3.6159e-03, 1.7982e-03,  ..., 4.5850e-04,
          1.6316e-04, 9.9898e-01],
         [3.1880e-03, 3.6159e-03, 1.7982e-03,  ..., 4.5850e-04,
          1.6316e-04, 3.4119e-04],
         [2.3680e-03, 3.6159e-03, 1.7982e-03,  ..., 9.9862e-01,
          9.9951e-01, 3.4119e-04],
         [2.3680e-03, 9.8915e-01, 9.9461e-01,  ..., 4.5850e-04,
          1.6316e-04, 3.4119e-04]],
        [[9.9606e-01, 2.9963e-03, 8.5567e-03,  ..., 2.7764e-04,
          2.7235e-01, 1.8107e-03],
         [1.3133e-03, 2.9963e-03, 6.8156e-03,  ..., 2.7764e-04,
          6.7962e-01, 1.8107e-03],
         [1.3133e-03, 2.9963e-03, 6.8156e-03,  ..., 9.9917e-01,
          2.4012e-02, 9.9457e-01],
         [1.3133e-03, 9.9101e-01, 9.7781e-01,  ..., 2.7764e-04,
          2.4012e-02, 1.8107e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8719e-03, 1.0425e-03, 1.8577e-03,  ..., 1.6073e-03,
          1.5863e-05, 2.0045e-03],
         [2.8719e-03, 1.0425e-03, 1.8577e-03,  ..., 1.6073e-03,
          1.5863e-05, 2.0045e-03],
         [9.9138e-01, 1.0425e-03, 1.8577e-03,  ..., 9.9518e-01,
          1.5863e-05, 9.9399e-01],
         [2.8719e-03, 9.9687e-01, 9.9443e-01,  ..., 1.6073e-03,
          9.9995e-01, 2.0045e-03]],
        [[8.4198e-03, 1.0602e-04, 1.4127e-03,  ..., 2.6370e-04,
          2.2827e-04, 3.3239e-03],
         [6.3473e-03, 1.0602e-04, 1.4127e-03,  ..., 2.6370e-04,
          2.2827e-04, 3.3239e-03],
         [9.7889e-01, 1.0602e-04, 1.4127e-03,  ..., 2.6370e-04,
          2.2827e-04, 9.9003e-01],
         [6.3473e-03, 9.9968e-01, 9.9576e-01,  ..., 9.9921e-01,
          9.9932e-01, 3.3239e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 418:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9944e-01, 6.2248e-03, 9.0393e-03,  ..., 1.0865e-03,
          4.7999e-04, 9.9759e-01],
         [1.8816e-04, 6.2248e-03, 8.6851e-03,  ..., 1.0865e-03,
          4.7999e-04, 8.0265e-04],
         [1.8816e-04, 6.8254e-03, 8.6851e-03,  ..., 9.9674e-01,
          9.9856e-01, 8.0265e-04],
         [1.8816e-04, 9.8072e-01, 9.7359e-01,  ..., 1.0865e-03,
          4.7999e-04, 8.0265e-04]],
        [[9.9762e-01, 9.3513e-03, 6.8589e-03,  ..., 3.7637e-04,
          3.0890e-02, 2.5349e-04],
         [7.9379e-04, 9.3513e-03, 6.8589e-03,  ..., 3.7637e-04,
          9.5078e-01, 2.5349e-04],
         [7.9379e-04, 9.3513e-03, 6.8589e-03,  ..., 9.9887e-01,
          9.1631e-03, 9.9924e-01],
         [7.9379e-04, 9.7195e-01, 9.7942e-01,  ..., 3.7637e-04,
          9.1631e-03, 2.5349e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:25,801 [Process: 0] Synchronize training processes
2024-08-18 15:20:25,801 [Process: 0] Evaluating...
2024-08-18 15:20:25,803 [Process: 0] EPOCH 418:
2024-08-18 15:20:25,804 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:26,934 [Process: 0] Synchronize training processes
2024-08-18 15:20:26,934 [Process: 0] Evaluating...
2024-08-18 15:20:26,936 [Process: 0] EPOCH 419:
2024-08-18 15:20:26,938 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1566e-02, 1.1777e-03, 2.9513e-04,  ..., 1.3707e-02,
          1.7661e-04, 2.4072e-03],
         [7.6335e-03, 1.1777e-03, 2.9513e-04,  ..., 9.2567e-03,
          1.7661e-04, 2.4072e-03],
         [9.7317e-01, 1.1777e-03, 2.9513e-04,  ..., 9.6778e-01,
          1.7661e-04, 9.9278e-01],
         [7.6335e-03, 9.9647e-01, 9.9911e-01,  ..., 9.2567e-03,
          9.9947e-01, 2.4072e-03]],
        [[1.7166e-03, 2.2624e-04, 5.2180e-03,  ..., 2.4452e-04,
          7.8325e-05, 3.6677e-03],
         [1.7166e-03, 2.2624e-04, 5.0450e-03,  ..., 2.4452e-04,
          7.8325e-05, 3.6677e-03],
         [9.9485e-01, 2.2624e-04, 5.0450e-03,  ..., 2.4452e-04,
          7.8325e-05, 9.8900e-01],
         [1.7166e-03, 9.9932e-01, 9.8469e-01,  ..., 9.9927e-01,
          9.9976e-01, 3.6677e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 419:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9822e-01, 3.6017e-03, 1.0404e-02,  ..., 3.4263e-04,
          1.4073e-03, 9.9794e-01],
         [5.9348e-04, 3.6017e-03, 1.0404e-02,  ..., 3.4263e-04,
          1.4073e-03, 6.8805e-04],
         [5.9348e-04, 3.6017e-03, 1.1695e-02,  ..., 9.9897e-01,
          9.9578e-01, 6.8805e-04],
         [5.9348e-04, 9.8919e-01, 9.6750e-01,  ..., 3.4263e-04,
          1.4073e-03, 6.8805e-04]],
        [[9.9088e-01, 3.2862e-03, 9.7369e-04,  ..., 3.6675e-04,
          9.3198e-02, 3.3015e-04],
         [3.4924e-03, 3.2862e-03, 9.7369e-04,  ..., 3.6675e-04,
          8.5371e-01, 3.3015e-04],
         [2.8143e-03, 3.2862e-03, 9.7369e-04,  ..., 9.9890e-01,
          2.7212e-02, 9.9901e-01],
         [2.8143e-03, 9.9014e-01, 9.9708e-01,  ..., 3.6675e-04,
          2.5878e-02, 3.3015e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6454e-03, 2.0593e-04, 1.3334e-03,  ..., 3.5336e-03,
          3.7034e-04, 1.0891e-02],
         [2.6454e-03, 2.0593e-04, 1.3334e-03,  ..., 3.5336e-03,
          3.7034e-04, 7.2391e-03],
         [9.9206e-01, 2.0593e-04, 1.3334e-03,  ..., 9.8940e-01,
          3.7034e-04, 9.7463e-01],
         [2.6454e-03, 9.9938e-01, 9.9600e-01,  ..., 3.5336e-03,
          9.9889e-01, 7.2391e-03]],
        [[8.3466e-03, 3.6480e-03, 7.1192e-03,  ..., 1.0564e-04,
          1.2193e-04, 1.5028e-03],
         [6.2700e-03, 3.6480e-03, 5.8269e-03,  ..., 1.0564e-04,
          1.2193e-04, 1.5028e-03],
         [9.7911e-01, 3.6480e-03, 5.8269e-03,  ..., 1.0564e-04,
          1.2193e-04, 9.9549e-01],
         [6.2700e-03, 9.8906e-01, 9.8123e-01,  ..., 9.9968e-01,
          9.9963e-01, 1.5028e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 420:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:20:28,054 [Process: 0] Synchronize training processes
2024-08-18 15:20:28,055 [Process: 0] Evaluating...
2024-08-18 15:20:28,056 [Process: 0] EPOCH 420:
2024-08-18 15:20:28,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:29,180 [Process: 0] Synchronize training processes
2024-08-18 15:20:29,181 [Process: 0] Evaluating...
2024-08-18 15:20:29,182 [Process: 0] EPOCH 421:
2024-08-18 15:20:29,184 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9869e-01, 8.0659e-03, 4.1549e-03,  ..., 2.0367e-03,
          2.7466e-03, 9.9765e-01],
         [4.3803e-04, 8.0659e-03, 4.1549e-03,  ..., 2.0367e-03,
          2.7466e-03, 7.8407e-04],
         [4.3803e-04, 8.2992e-03, 4.1549e-03,  ..., 9.9389e-01,
          9.9176e-01, 7.8407e-04],
         [4.3803e-04, 9.7557e-01, 9.8754e-01,  ..., 2.0367e-03,
          2.7466e-03, 7.8407e-04]],
        [[9.9785e-01, 5.5427e-03, 1.8051e-03,  ..., 6.2626e-04,
          1.0344e-01, 1.6912e-04],
         [7.1728e-04, 5.5427e-03, 1.8051e-03,  ..., 6.2626e-04,
          8.5590e-01, 1.6912e-04],
         [7.1728e-04, 5.5597e-03, 1.8051e-03,  ..., 9.9812e-01,
          2.1967e-02, 9.9949e-01],
         [7.1728e-04, 9.8335e-01, 9.9458e-01,  ..., 6.2626e-04,
          1.8688e-02, 1.6912e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.0358e-03, 2.9278e-04, 1.0255e-03,  ..., 1.6196e-03,
          1.7016e-05, 8.4061e-03],
         [5.6077e-03, 2.9278e-04, 1.0255e-03,  ..., 1.6196e-03,
          1.7016e-05, 6.8274e-03],
         [9.8175e-01, 2.9278e-04, 1.0255e-03,  ..., 9.9514e-01,
          1.7016e-05, 9.7794e-01],
         [5.6077e-03, 9.9912e-01, 9.9692e-01,  ..., 1.6196e-03,
          9.9995e-01, 6.8274e-03]],
        [[3.4037e-03, 7.5844e-04, 2.5312e-03,  ..., 2.0610e-05,
          4.4122e-04, 1.6550e-02],
         [3.4037e-03, 7.5844e-04, 2.5312e-03,  ..., 2.0610e-05,
          4.4122e-04, 1.2793e-02],
         [9.8979e-01, 7.5844e-04, 2.5312e-03,  ..., 2.0610e-05,
          4.4122e-04, 9.5604e-01],
         [3.4037e-03, 9.9772e-01, 9.9241e-01,  ..., 9.9994e-01,
          9.9868e-01, 1.4618e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 421:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9950e-01, 1.5621e-02, 3.9369e-03,  ..., 1.7480e-03,
          7.2304e-04, 9.9615e-01],
         [1.6529e-04, 1.4703e-02, 3.9369e-03,  ..., 1.7480e-03,
          7.2304e-04, 1.2834e-03],
         [1.6529e-04, 1.8983e-02, 3.9369e-03,  ..., 9.9476e-01,
          9.9783e-01, 1.2834e-03],
         [1.6529e-04, 9.5069e-01, 9.8819e-01,  ..., 1.7480e-03,
          7.2304e-04, 1.2834e-03]],
        [[9.9707e-01, 1.1478e-03, 6.1672e-03,  ..., 1.2777e-03,
          1.3684e-02, 1.0963e-03],
         [9.7555e-04, 1.1478e-03, 6.1672e-03,  ..., 1.2777e-03,
          9.7566e-01, 1.0963e-03],
         [9.7555e-04, 1.1478e-03, 6.1672e-03,  ..., 9.9617e-01,
          5.3272e-03, 9.9671e-01],
         [9.7555e-04, 9.9656e-01, 9.8150e-01,  ..., 1.2777e-03,
          5.3272e-03, 1.0963e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7151e-03, 3.0978e-04, 1.2322e-03,  ..., 6.0142e-04,
          3.5917e-05, 8.6301e-03],
         [6.8022e-03, 3.0978e-04, 1.2322e-03,  ..., 6.0142e-04,
          3.5917e-05, 5.9506e-03],
         [9.7668e-01, 3.0978e-04, 1.2322e-03,  ..., 9.9820e-01,
          3.5917e-05, 9.7947e-01],
         [6.8022e-03, 9.9907e-01, 9.9630e-01,  ..., 6.0142e-04,
          9.9989e-01, 5.9506e-03]],
        [[2.5159e-03, 7.5925e-05, 1.7485e-03,  ..., 2.9643e-04,
          9.9214e-05, 1.5973e-03],
         [2.5159e-03, 7.5925e-05, 1.7485e-03,  ..., 2.9643e-04,
          9.9214e-05, 1.5973e-03],
         [9.9245e-01, 7.5925e-05, 1.7485e-03,  ..., 2.9643e-04,
          9.9214e-05, 9.9521e-01],
         [2.5159e-03, 9.9977e-01, 9.9475e-01,  ..., 9.9911e-01,
          9.9970e-01, 1.5973e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 422:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:30,308 [Process: 0] Synchronize training processes
2024-08-18 15:20:30,308 [Process: 0] Evaluating...
2024-08-18 15:20:30,312 [Process: 0] EPOCH 422:
2024-08-18 15:20:30,314 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:31,441 [Process: 0] Synchronize training processes
2024-08-18 15:20:31,441 [Process: 0] Evaluating...
2024-08-18 15:20:31,443 [Process: 0] EPOCH 423:
2024-08-18 15:20:31,445 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9738e-01, 7.6777e-03, 4.7304e-03,  ..., 1.2082e-03,
          7.0101e-04, 9.9520e-01],
         [8.7273e-04, 7.6777e-03, 4.7304e-03,  ..., 1.2082e-03,
          7.0101e-04, 1.6006e-03],
         [8.7273e-04, 7.7797e-03, 4.7304e-03,  ..., 9.9638e-01,
          9.9790e-01, 1.6006e-03],
         [8.7273e-04, 9.7687e-01, 9.8581e-01,  ..., 1.2082e-03,
          7.0101e-04, 1.6006e-03]],
        [[9.9726e-01, 1.6004e-03, 4.0689e-03,  ..., 4.5350e-04,
          8.2589e-03, 4.9251e-04],
         [9.1255e-04, 1.6004e-03, 4.0689e-03,  ..., 4.5350e-04,
          9.8495e-01, 4.9251e-04],
         [9.1255e-04, 1.6004e-03, 4.0689e-03,  ..., 9.9864e-01,
          3.3954e-03, 9.9852e-01],
         [9.1255e-04, 9.9520e-01, 9.8779e-01,  ..., 4.5350e-04,
          3.3954e-03, 4.9251e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2439e-03, 6.0840e-05, 5.0119e-04,  ..., 3.0938e-03,
          9.5512e-05, 1.1138e-03],
         [1.2439e-03, 6.0840e-05, 5.0119e-04,  ..., 3.0938e-03,
          9.5512e-05, 1.1138e-03],
         [9.9627e-01, 6.0840e-05, 5.0119e-04,  ..., 9.9072e-01,
          9.5512e-05, 9.9666e-01],
         [1.2439e-03, 9.9982e-01, 9.9850e-01,  ..., 3.0938e-03,
          9.9971e-01, 1.1138e-03]],
        [[1.6485e-03, 1.4282e-04, 2.4298e-04,  ..., 4.3507e-04,
          1.5140e-04, 1.2080e-03],
         [1.6485e-03, 1.4282e-04, 2.4298e-04,  ..., 4.3507e-04,
          1.5140e-04, 1.2080e-03],
         [9.9505e-01, 1.4282e-04, 2.4298e-04,  ..., 4.3507e-04,
          1.5140e-04, 9.9638e-01],
         [1.6485e-03, 9.9957e-01, 9.9927e-01,  ..., 9.9869e-01,
          9.9955e-01, 1.2080e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 423:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9870e-01, 3.8353e-02, 3.1115e-02,  ..., 4.2023e-04,
          2.6165e-04, 9.9725e-01],
         [4.3283e-04, 2.0198e-02, 1.7948e-02,  ..., 4.2023e-04,
          2.6165e-04, 9.1668e-04],
         [4.3283e-04, 2.3829e-02, 3.0999e-02,  ..., 9.9874e-01,
          9.9922e-01, 9.1668e-04],
         [4.3283e-04, 9.1762e-01, 9.1994e-01,  ..., 4.2023e-04,
          2.6165e-04, 9.1668e-04]],
        [[9.9664e-01, 2.3339e-03, 2.3796e-03,  ..., 9.4902e-05,
          9.3519e-03, 4.5663e-04],
         [1.1206e-03, 2.3339e-03, 2.3796e-03,  ..., 9.4902e-05,
          9.7835e-01, 4.5663e-04],
         [1.1206e-03, 2.3339e-03, 2.3796e-03,  ..., 9.9972e-01,
          6.1471e-03, 9.9863e-01],
         [1.1206e-03, 9.9300e-01, 9.9286e-01,  ..., 9.4902e-05,
          6.1471e-03, 4.5663e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7924e-03, 1.5136e-04, 7.8112e-04,  ..., 3.3737e-03,
          2.1033e-03, 1.0325e-02],
         [1.7924e-03, 1.5136e-04, 7.8112e-04,  ..., 3.3737e-03,
          2.1033e-03, 9.7212e-03],
         [9.9462e-01, 1.5136e-04, 7.8112e-04,  ..., 9.8988e-01,
          2.1033e-03, 9.7009e-01],
         [1.7924e-03, 9.9955e-01, 9.9766e-01,  ..., 3.3737e-03,
          9.9369e-01, 9.8630e-03]],
        [[9.5887e-03, 1.7642e-04, 2.0706e-04,  ..., 7.3758e-04,
          6.0813e-05, 1.3482e-02],
         [7.4397e-03, 1.7642e-04, 2.0706e-04,  ..., 7.3758e-04,
          6.0813e-05, 1.1870e-02],
         [9.7553e-01, 1.7642e-04, 2.0706e-04,  ..., 7.3758e-04,
          6.0813e-05, 9.5952e-01],
         [7.4397e-03, 9.9947e-01, 9.9938e-01,  ..., 9.9779e-01,
          9.9982e-01, 1.5133e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:32,573 [Process: 0] Synchronize training processes
2024-08-18 15:20:32,574 [Process: 0] Evaluating...
2024-08-18 15:20:32,575 [Process: 0] EPOCH 424:
2024-08-18 15:20:32,577 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 424:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9759e-01, 3.6537e-03, 7.9318e-03,  ..., 2.1140e-03,
          1.1882e-03, 9.9790e-01],
         [8.0397e-04, 3.6537e-03, 7.9318e-03,  ..., 2.1140e-03,
          1.1882e-03, 6.9863e-04],
         [8.0397e-04, 3.6537e-03, 1.0475e-02,  ..., 9.9366e-01,
          9.9644e-01, 6.9863e-04],
         [8.0397e-04, 9.8904e-01, 9.7366e-01,  ..., 2.1140e-03,
          1.1882e-03, 6.9863e-04]],
        [[9.9780e-01, 3.0147e-03, 6.7792e-03,  ..., 3.2522e-05,
          2.7212e-02, 3.3364e-04],
         [7.3410e-04, 3.0147e-03, 6.7792e-03,  ..., 3.2522e-05,
          9.6427e-01, 3.3364e-04],
         [7.3410e-04, 3.0147e-03, 6.7792e-03,  ..., 9.9990e-01,
          4.2608e-03, 9.9900e-01],
         [7.3410e-04, 9.9096e-01, 9.7966e-01,  ..., 3.2522e-05,
          4.2608e-03, 3.3364e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.2496e-03, 6.0021e-04, 1.1319e-03,  ..., 1.4577e-02,
          1.2316e-03, 1.3530e-03],
         [5.8837e-03, 6.0021e-04, 1.1319e-03,  ..., 1.1515e-02,
          1.2316e-03, 1.3530e-03],
         [9.8098e-01, 6.0021e-04, 1.1319e-03,  ..., 9.5912e-01,
          1.2316e-03, 9.9594e-01],
         [5.8837e-03, 9.9820e-01, 9.9660e-01,  ..., 1.4792e-02,
          9.9631e-01, 1.3530e-03]],
        [[8.3231e-03, 4.8632e-04, 3.8524e-04,  ..., 1.0592e-04,
          3.8869e-05, 1.6577e-02],
         [8.3231e-03, 4.8632e-04, 3.8524e-04,  ..., 1.0592e-04,
          3.8869e-05, 1.1018e-02],
         [9.7460e-01, 4.8632e-04, 3.8524e-04,  ..., 1.0592e-04,
          3.8869e-05, 9.6139e-01],
         [8.7586e-03, 9.9854e-01, 9.9884e-01,  ..., 9.9968e-01,
          9.9988e-01, 1.1018e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 425:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4272e-01, 1.0754e-02, 3.9735e-03,  ..., 3.6961e-04,
          4.9880e-04, 9.8997e-01],
         [1.4645e-02, 9.4576e-03, 3.9735e-03,  ..., 3.6961e-04,
          4.9880e-04, 3.3445e-03],
         [2.5694e-02, 9.4576e-03, 3.9735e-03,  ..., 9.9889e-01,
          9.9850e-01, 3.3445e-03],
         [1.6940e-02, 9.7033e-01, 9.8808e-01,  ..., 3.6961e-04,
          4.9880e-04, 3.3445e-03]],
        [[9.8960e-01, 9.5955e-03, 7.9001e-04,  ..., 2.1794e-04,
          6.7294e-02, 1.8746e-03],
         [3.8991e-03, 7.5119e-03, 7.9001e-04,  ..., 2.1794e-04,
          8.4875e-01, 1.8746e-03],
         [3.2522e-03, 7.5119e-03, 7.9001e-04,  ..., 9.9935e-01,
          4.7216e-02, 9.9438e-01],
         [3.2522e-03, 9.7538e-01, 9.9763e-01,  ..., 2.1794e-04,
          3.6736e-02, 1.8746e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:33,709 [Process: 0] Synchronize training processes
2024-08-18 15:20:33,709 [Process: 0] Evaluating...
2024-08-18 15:20:33,711 [Process: 0] EPOCH 425:
2024-08-18 15:20:33,713 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:34,835 [Process: 0] Synchronize training processes
2024-08-18 15:20:34,835 [Process: 0] Evaluating...
2024-08-18 15:20:34,837 [Process: 0] EPOCH 426:
2024-08-18 15:20:34,839 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6741e-03, 1.7836e-04, 4.0173e-04,  ..., 1.6264e-03,
          1.1404e-04, 2.4933e-03],
         [3.6741e-03, 1.7836e-04, 4.0173e-04,  ..., 1.6264e-03,
          1.1404e-04, 2.4933e-03],
         [9.8898e-01, 1.7836e-04, 4.0173e-04,  ..., 9.9512e-01,
          1.1404e-04, 9.9252e-01],
         [3.6741e-03, 9.9946e-01, 9.9879e-01,  ..., 1.6264e-03,
          9.9966e-01, 2.4933e-03]],
        [[2.2067e-03, 4.8682e-05, 4.0112e-04,  ..., 8.3409e-05,
          8.0819e-04, 2.5455e-03],
         [2.2067e-03, 4.8682e-05, 4.0112e-04,  ..., 8.3409e-05,
          8.0819e-04, 2.5455e-03],
         [9.9338e-01, 4.8682e-05, 4.0112e-04,  ..., 8.3409e-05,
          8.0819e-04, 9.9236e-01],
         [2.2067e-03, 9.9985e-01, 9.9880e-01,  ..., 9.9975e-01,
          9.9758e-01, 2.5455e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 426:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9879e-01, 7.6857e-03, 3.4285e-03,  ..., 4.1484e-04,
          2.0084e-04, 9.9619e-01],
         [4.0459e-04, 7.6857e-03, 3.4285e-03,  ..., 4.1484e-04,
          2.0084e-04, 1.2706e-03],
         [4.0459e-04, 9.6619e-03, 3.4285e-03,  ..., 9.9876e-01,
          9.9940e-01, 1.2706e-03],
         [4.0459e-04, 9.7497e-01, 9.8971e-01,  ..., 4.1484e-04,
          2.0084e-04, 1.2706e-03]],
        [[9.9408e-01, 2.0323e-03, 3.4246e-03,  ..., 2.8592e-04,
          3.1057e-02, 7.4524e-04],
         [2.5819e-03, 2.0323e-03, 3.4246e-03,  ..., 2.8592e-04,
          9.2824e-01, 7.4524e-04],
         [1.6702e-03, 2.0323e-03, 3.4246e-03,  ..., 9.9914e-01,
          2.2599e-02, 9.9776e-01],
         [1.6702e-03, 9.9390e-01, 9.8973e-01,  ..., 2.8592e-04,
          1.8100e-02, 7.4524e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0729e-02, 1.7894e-04, 3.8679e-04,  ..., 2.3332e-03,
          4.2454e-03, 3.9843e-02],
         [1.3276e-02, 1.7894e-04, 3.8679e-04,  ..., 2.3332e-03,
          2.2687e-03, 1.7394e-02],
         [9.5231e-01, 1.7894e-04, 3.8679e-04,  ..., 9.9300e-01,
          2.2687e-03, 9.2015e-01],
         [1.3689e-02, 9.9946e-01, 9.9884e-01,  ..., 2.3332e-03,
          9.9122e-01, 2.2616e-02]],
        [[5.0639e-03, 2.9684e-04, 1.0833e-04,  ..., 4.6847e-03,
          3.0567e-04, 6.1516e-03],
         [5.0639e-03, 2.9684e-04, 1.0833e-04,  ..., 4.6847e-03,
          3.0567e-04, 6.0037e-03],
         [9.8481e-01, 2.9684e-04, 1.0833e-04,  ..., 4.6847e-03,
          3.0567e-04, 9.8184e-01],
         [5.0639e-03, 9.9911e-01, 9.9968e-01,  ..., 9.8595e-01,
          9.9908e-01, 6.0037e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 427:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9935e-01, 4.6355e-03, 1.3993e-02,  ..., 5.2664e-05,
          2.7384e-04, 9.9374e-01],
         [2.1656e-04, 4.6355e-03, 1.4080e-02,  ..., 5.2664e-05,
          2.7384e-04, 1.5263e-03],
         [2.1656e-04, 5.1121e-03, 1.7190e-02,  ..., 9.9984e-01,
          9.9918e-01, 3.2070e-03],
         [2.1656e-04, 9.8562e-01, 9.5474e-01,  ..., 5.2664e-05,
          2.7384e-04, 1.5263e-03]],
        [[9.9911e-01, 1.8805e-03, 1.6698e-02,  ..., 1.7002e-04,
          1.4803e-01, 3.7672e-04],
         [2.9699e-04, 1.8805e-03, 1.3068e-02,  ..., 1.7002e-04,
          7.7456e-01, 3.7672e-04],
         [2.9699e-04, 1.8805e-03, 1.5205e-02,  ..., 9.9949e-01,
          3.6682e-02, 9.9887e-01],
         [2.9699e-04, 9.9436e-01, 9.5503e-01,  ..., 1.7002e-04,
          4.0731e-02, 3.7672e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:35,963 [Process: 0] Synchronize training processes
2024-08-18 15:20:35,963 [Process: 0] Evaluating...
2024-08-18 15:20:35,965 [Process: 0] EPOCH 427:
2024-08-18 15:20:35,967 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:37,095 [Process: 0] Synchronize training processes
2024-08-18 15:20:37,095 [Process: 0] Evaluating...
2024-08-18 15:20:37,097 [Process: 0] EPOCH 428:
2024-08-18 15:20:37,099 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1673e-03, 6.9765e-05, 1.7199e-04,  ..., 3.3789e-03,
          3.4187e-04, 1.4762e-03],
         [2.1673e-03, 6.9765e-05, 1.7199e-04,  ..., 3.3789e-03,
          3.4187e-04, 1.4762e-03],
         [9.9350e-01, 6.9765e-05, 1.7199e-04,  ..., 9.8986e-01,
          3.4187e-04, 9.9557e-01],
         [2.1673e-03, 9.9979e-01, 9.9948e-01,  ..., 3.3789e-03,
          9.9897e-01, 1.4762e-03]],
        [[1.3518e-03, 2.7302e-04, 2.4934e-04,  ..., 7.6944e-05,
          3.2985e-04, 2.0700e-03],
         [1.3518e-03, 2.7302e-04, 2.4934e-04,  ..., 7.6944e-05,
          3.2985e-04, 2.0700e-03],
         [9.9594e-01, 2.7302e-04, 2.4934e-04,  ..., 7.6944e-05,
          3.2985e-04, 9.9379e-01],
         [1.3518e-03, 9.9918e-01, 9.9925e-01,  ..., 9.9977e-01,
          9.9901e-01, 2.0700e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 428:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9831e-01, 5.0542e-03, 2.2132e-03,  ..., 2.0036e-04,
          1.8447e-04, 9.9305e-01],
         [5.6405e-04, 4.9370e-03, 2.2132e-03,  ..., 2.0036e-04,
          1.8447e-04, 2.2826e-03],
         [5.6405e-04, 4.9370e-03, 2.2132e-03,  ..., 9.9940e-01,
          9.9945e-01, 2.2826e-03],
         [5.6405e-04, 9.8507e-01, 9.9336e-01,  ..., 2.0036e-04,
          1.8447e-04, 2.3855e-03]],
        [[9.8961e-01, 1.6930e-03, 1.4974e-03,  ..., 1.1053e-04,
          2.2736e-03, 6.2197e-04],
         [3.2370e-03, 1.6930e-03, 1.4974e-03,  ..., 1.1053e-04,
          9.9418e-01, 6.2197e-04],
         [3.9133e-03, 1.6930e-03, 1.4974e-03,  ..., 9.9967e-01,
          1.7752e-03, 9.9813e-01],
         [3.2370e-03, 9.9492e-01, 9.9551e-01,  ..., 1.1053e-04,
          1.7752e-03, 6.2197e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1499e-03, 5.7604e-05, 2.1210e-04,  ..., 3.7858e-03,
          8.8542e-05, 2.2938e-03],
         [1.1499e-03, 5.7604e-05, 2.1210e-04,  ..., 3.7858e-03,
          8.8542e-05, 2.2938e-03],
         [9.9655e-01, 5.7604e-05, 2.1210e-04,  ..., 9.8864e-01,
          8.8542e-05, 9.9312e-01],
         [1.1499e-03, 9.9983e-01, 9.9936e-01,  ..., 3.7858e-03,
          9.9973e-01, 2.2938e-03]],
        [[1.2048e-02, 2.4250e-05, 1.8563e-03,  ..., 3.0016e-05,
          3.4557e-04, 4.6154e-03],
         [1.0254e-02, 2.4250e-05, 1.8563e-03,  ..., 3.0016e-05,
          3.4557e-04, 4.6154e-03],
         [9.6674e-01, 2.4250e-05, 1.8563e-03,  ..., 3.0016e-05,
          3.4557e-04, 9.8615e-01],
         [1.0958e-02, 9.9993e-01, 9.9443e-01,  ..., 9.9991e-01,
          9.9896e-01, 4.6154e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 429:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:38,223 [Process: 0] Synchronize training processes
2024-08-18 15:20:38,224 [Process: 0] Evaluating...
2024-08-18 15:20:38,225 [Process: 0] EPOCH 429:
2024-08-18 15:20:38,227 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:39,350 [Process: 0] Synchronize training processes
2024-08-18 15:20:39,350 [Process: 0] Evaluating...
2024-08-18 15:20:39,352 [Process: 0] EPOCH 430:
2024-08-18 15:20:39,354 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9230e-01, 4.8448e-03, 9.7547e-03,  ..., 8.9835e-04,
          4.4269e-04, 9.9846e-01],
         [2.5606e-03, 4.8448e-03, 9.7547e-03,  ..., 8.9835e-04,
          4.4269e-04, 5.1242e-04],
         [2.5606e-03, 4.8448e-03, 1.0591e-02,  ..., 9.9730e-01,
          9.9867e-01, 5.1242e-04],
         [2.5812e-03, 9.8547e-01, 9.6990e-01,  ..., 8.9835e-04,
          4.4269e-04, 5.1242e-04]],
        [[9.9278e-01, 1.7303e-03, 2.8267e-03,  ..., 1.5272e-04,
          4.0153e-02, 2.9001e-04],
         [2.8407e-03, 1.7303e-03, 2.8267e-03,  ..., 1.5272e-04,
          9.4938e-01, 2.9001e-04],
         [2.1918e-03, 1.7303e-03, 2.8267e-03,  ..., 9.9954e-01,
          5.2347e-03, 9.9913e-01],
         [2.1918e-03, 9.9481e-01, 9.9152e-01,  ..., 1.5272e-04,
          5.2347e-03, 2.9001e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2666e-03, 3.0611e-04, 5.3550e-04,  ..., 2.0173e-03,
          5.4449e-06, 2.0421e-03],
         [3.2666e-03, 3.0611e-04, 5.3550e-04,  ..., 2.0173e-03,
          5.4449e-06, 2.0421e-03],
         [9.9020e-01, 3.0611e-04, 5.3550e-04,  ..., 9.9395e-01,
          5.4449e-06, 9.9387e-01],
         [3.2666e-03, 9.9908e-01, 9.9839e-01,  ..., 2.0173e-03,
          9.9998e-01, 2.0421e-03]],
        [[3.6985e-03, 4.7855e-04, 2.5274e-03,  ..., 2.8380e-04,
          6.0024e-05, 2.6618e-03],
         [3.6985e-03, 4.7855e-04, 2.5274e-03,  ..., 2.8380e-04,
          6.0024e-05, 2.6618e-03],
         [9.8890e-01, 4.7855e-04, 2.5274e-03,  ..., 2.8380e-04,
          6.0024e-05, 9.9201e-01],
         [3.6985e-03, 9.9856e-01, 9.9242e-01,  ..., 9.9915e-01,
          9.9982e-01, 2.6618e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 430:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9796e-01, 3.3731e-03, 2.2618e-03,  ..., 1.9166e-04,
          3.9977e-04, 9.9746e-01],
         [6.8122e-04, 3.3731e-03, 2.2618e-03,  ..., 1.9166e-04,
          3.9977e-04, 8.4608e-04],
         [6.8122e-04, 3.3731e-03, 2.2618e-03,  ..., 9.9943e-01,
          9.9880e-01, 8.4608e-04],
         [6.8122e-04, 9.8988e-01, 9.9321e-01,  ..., 1.9166e-04,
          3.9977e-04, 8.4608e-04]],
        [[9.9664e-01, 3.5435e-03, 4.3397e-03,  ..., 3.3640e-04,
          7.3970e-03, 2.9535e-04],
         [1.1210e-03, 3.5435e-03, 4.3397e-03,  ..., 3.3640e-04,
          9.8213e-01, 2.9535e-04],
         [1.1210e-03, 3.5435e-03, 4.3397e-03,  ..., 9.9899e-01,
          5.2356e-03, 9.9911e-01],
         [1.1210e-03, 9.8937e-01, 9.8698e-01,  ..., 3.3640e-04,
          5.2356e-03, 2.9535e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3378e-03, 5.1224e-04, 3.4594e-04,  ..., 3.4598e-03,
          4.9742e-05, 3.2349e-03],
         [3.3378e-03, 5.1224e-04, 3.4594e-04,  ..., 3.4598e-03,
          4.9742e-05, 3.2349e-03],
         [9.8999e-01, 5.1224e-04, 3.4594e-04,  ..., 9.8962e-01,
          4.9742e-05, 9.9030e-01],
         [3.3378e-03, 9.9846e-01, 9.9896e-01,  ..., 3.4598e-03,
          9.9985e-01, 3.2349e-03]],
        [[4.8652e-03, 1.3236e-04, 7.6023e-05,  ..., 1.5681e-04,
          5.7799e-05, 4.3705e-03],
         [4.8652e-03, 1.3236e-04, 7.6023e-05,  ..., 1.5681e-04,
          5.7799e-05, 4.3705e-03],
         [9.8540e-01, 1.3236e-04, 7.6023e-05,  ..., 1.5681e-04,
          5.7799e-05, 9.8689e-01],
         [4.8652e-03, 9.9960e-01, 9.9977e-01,  ..., 9.9953e-01,
          9.9983e-01, 4.3705e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 431:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:40,481 [Process: 0] Synchronize training processes
2024-08-18 15:20:40,481 [Process: 0] Evaluating...
2024-08-18 15:20:40,483 [Process: 0] EPOCH 431:
2024-08-18 15:20:40,484 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9807e-01, 8.5716e-03, 7.6545e-03,  ..., 1.2675e-03,
          5.5318e-04, 9.7767e-01],
         [6.4190e-04, 9.1488e-03, 7.2470e-03,  ..., 1.2675e-03,
          5.5318e-04, 5.4796e-03],
         [6.4190e-04, 8.5716e-03, 7.2470e-03,  ..., 9.9620e-01,
          9.9834e-01, 1.1368e-02],
         [6.4190e-04, 9.7371e-01, 9.7785e-01,  ..., 1.2675e-03,
          5.5318e-04, 5.4796e-03]],
        [[9.9710e-01, 2.0905e-03, 2.8263e-03,  ..., 4.4242e-04,
          3.0460e-04, 4.0243e-04],
         [1.0287e-03, 2.0905e-03, 2.8263e-03,  ..., 4.4242e-04,
          3.0460e-04, 4.0243e-04],
         [9.3628e-04, 2.0905e-03, 2.8263e-03,  ..., 9.9867e-01,
          9.9909e-01, 9.9879e-01],
         [9.3628e-04, 9.9373e-01, 9.9152e-01,  ..., 4.4242e-04,
          3.0460e-04, 4.0243e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4333e-03, 2.6693e-04, 4.3342e-04,  ..., 3.6594e-03,
          5.8829e-06, 6.4540e-04],
         [1.4333e-03, 2.6693e-04, 4.3342e-04,  ..., 3.6594e-03,
          5.8829e-06, 6.4540e-04],
         [9.9570e-01, 2.6693e-04, 4.3342e-04,  ..., 9.8902e-01,
          5.8829e-06, 9.9806e-01],
         [1.4333e-03, 9.9920e-01, 9.9870e-01,  ..., 3.6594e-03,
          9.9998e-01, 6.4540e-04]],
        [[5.8019e-03, 1.4871e-04, 5.0603e-04,  ..., 2.6378e-04,
          2.1383e-04, 2.9247e-03],
         [5.8019e-03, 1.4871e-04, 5.0603e-04,  ..., 2.6378e-04,
          2.1383e-04, 2.9247e-03],
         [9.8259e-01, 1.4871e-04, 5.0603e-04,  ..., 2.6378e-04,
          2.1383e-04, 9.9123e-01],
         [5.8019e-03, 9.9955e-01, 9.9848e-01,  ..., 9.9921e-01,
          9.9936e-01, 2.9247e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 432:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9671e-01, 1.9815e-02, 3.8263e-03,  ..., 1.7183e-04,
          6.7549e-04, 9.9444e-01],
         [1.0975e-03, 1.1129e-02, 3.5040e-03,  ..., 1.7183e-04,
          6.7549e-04, 1.7343e-03],
         [1.0975e-03, 1.6374e-02, 3.5040e-03,  ..., 9.9948e-01,
          9.9797e-01, 2.0904e-03],
         [1.0975e-03, 9.5268e-01, 9.8917e-01,  ..., 1.7183e-04,
          6.7549e-04, 1.7343e-03]],
        [[9.9689e-01, 2.1397e-03, 2.3881e-03,  ..., 7.5940e-05,
          5.5458e-05, 2.0808e-04],
         [9.9633e-04, 2.1397e-03, 2.3881e-03,  ..., 7.5940e-05,
          5.5458e-05, 2.0808e-04],
         [1.1124e-03, 2.1397e-03, 2.3881e-03,  ..., 9.9977e-01,
          9.9983e-01, 9.9938e-01],
         [9.9633e-04, 9.9358e-01, 9.9284e-01,  ..., 7.5940e-05,
          5.5458e-05, 2.0808e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:20:41,610 [Process: 0] Synchronize training processes
2024-08-18 15:20:41,611 [Process: 0] Evaluating...
2024-08-18 15:20:41,614 [Process: 0] EPOCH 432:
2024-08-18 15:20:41,616 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:42,747 [Process: 0] Synchronize training processes
2024-08-18 15:20:42,747 [Process: 0] Evaluating...
2024-08-18 15:20:42,749 [Process: 0] EPOCH 433:
2024-08-18 15:20:42,750 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.4288e-03, 2.5193e-04, 7.4070e-04,  ..., 5.1861e-03,
          3.7371e-05, 3.3463e-03],
         [6.4288e-03, 2.5193e-04, 7.4070e-04,  ..., 5.1861e-03,
          3.7371e-05, 3.3463e-03],
         [9.8071e-01, 2.5193e-04, 7.4070e-04,  ..., 9.8444e-01,
          3.7371e-05, 9.8996e-01],
         [6.4288e-03, 9.9924e-01, 9.9778e-01,  ..., 5.1861e-03,
          9.9989e-01, 3.3463e-03]],
        [[1.4121e-03, 3.3621e-04, 6.0781e-04,  ..., 3.0053e-04,
          7.7239e-05, 1.5095e-03],
         [1.4121e-03, 3.3621e-04, 6.0781e-04,  ..., 3.0053e-04,
          7.7239e-05, 1.5095e-03],
         [9.9576e-01, 3.3621e-04, 6.0781e-04,  ..., 3.0053e-04,
          7.7239e-05, 9.9547e-01],
         [1.4121e-03, 9.9899e-01, 9.9818e-01,  ..., 9.9910e-01,
          9.9977e-01, 1.5095e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 433:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9618e-01, 7.7062e-03, 2.2220e-03,  ..., 1.8711e-03,
          7.5069e-04, 9.9876e-01],
         [1.2719e-03, 7.7062e-03, 2.2220e-03,  ..., 1.8711e-03,
          7.5069e-04, 4.1337e-04],
         [1.2719e-03, 7.7062e-03, 2.2220e-03,  ..., 9.9439e-01,
          9.9775e-01, 4.1337e-04],
         [1.2719e-03, 9.7688e-01, 9.9333e-01,  ..., 1.8711e-03,
          7.5069e-04, 4.1337e-04]],
        [[9.9661e-01, 2.6491e-03, 1.6308e-02,  ..., 7.2254e-04,
          5.9819e-04, 1.7197e-04],
         [1.1288e-03, 2.6491e-03, 1.1808e-02,  ..., 7.2254e-04,
          5.9819e-04, 1.7197e-04],
         [1.1288e-03, 2.6491e-03, 1.1808e-02,  ..., 9.9783e-01,
          9.9821e-01, 9.9948e-01],
         [1.1288e-03, 9.9205e-01, 9.6008e-01,  ..., 7.2254e-04,
          5.9819e-04, 1.7197e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3741e-03, 2.9576e-04, 4.0127e-03,  ..., 1.7030e-03,
          1.2122e-05, 7.5567e-04],
         [2.3741e-03, 2.9576e-04, 4.0127e-03,  ..., 1.7030e-03,
          1.2122e-05, 7.5567e-04],
         [9.9288e-01, 2.9576e-04, 4.0127e-03,  ..., 9.9489e-01,
          1.2122e-05, 9.9773e-01],
         [2.3741e-03, 9.9911e-01, 9.8796e-01,  ..., 1.7030e-03,
          9.9996e-01, 7.5567e-04]],
        [[4.2613e-03, 2.4409e-04, 3.3978e-04,  ..., 1.8139e-04,
          6.3529e-05, 2.9230e-03],
         [4.2613e-03, 2.4409e-04, 3.3978e-04,  ..., 1.8139e-04,
          6.3529e-05, 2.9230e-03],
         [9.8722e-01, 2.4409e-04, 3.3978e-04,  ..., 1.8139e-04,
          6.3529e-05, 9.9123e-01],
         [4.2613e-03, 9.9927e-01, 9.9898e-01,  ..., 9.9946e-01,
          9.9981e-01, 2.9230e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 434:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7576e-01, 3.4748e-03, 2.7107e-03,  ..., 6.8548e-04,
          4.8307e-04, 9.9745e-01],
         [1.3834e-02, 3.4748e-03, 2.5958e-03,  ..., 6.8548e-04,
          4.8307e-04, 8.4900e-04],
         [5.2010e-03, 3.4748e-03, 2.5958e-03,  ..., 9.9794e-01,
          9.9855e-01, 8.4900e-04],
         [5.2010e-03, 9.8958e-01, 9.9210e-01,  ..., 6.8548e-04,
          4.8307e-04, 8.4900e-04]],
        [[9.9405e-01, 3.7392e-03, 1.6992e-03,  ..., 9.5678e-04,
          1.0861e-04, 1.0164e-03],
         [1.9840e-03, 3.7392e-03, 1.6992e-03,  ..., 9.5678e-04,
          1.2073e-04, 1.0164e-03],
         [1.9840e-03, 3.7392e-03, 1.6992e-03,  ..., 9.9713e-01,
          9.9966e-01, 9.9695e-01],
         [1.9840e-03, 9.8878e-01, 9.9490e-01,  ..., 9.5678e-04,
          1.0861e-04, 1.0164e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:43,872 [Process: 0] Synchronize training processes
2024-08-18 15:20:43,872 [Process: 0] Evaluating...
2024-08-18 15:20:43,874 [Process: 0] EPOCH 434:
2024-08-18 15:20:43,876 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:45,003 [Process: 0] Synchronize training processes
2024-08-18 15:20:45,003 [Process: 0] Evaluating...
2024-08-18 15:20:45,005 [Process: 0] EPOCH 435:
2024-08-18 15:20:45,007 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4737e-02, 4.2083e-05, 2.7714e-04,  ..., 1.3500e-03,
          3.5973e-05, 1.7389e-03],
         [1.4737e-02, 4.2083e-05, 2.7714e-04,  ..., 1.3500e-03,
          3.5973e-05, 1.7389e-03],
         [9.4814e-01, 4.2083e-05, 2.7714e-04,  ..., 9.9595e-01,
          3.5973e-05, 9.9478e-01],
         [2.2380e-02, 9.9987e-01, 9.9917e-01,  ..., 1.3500e-03,
          9.9989e-01, 1.7389e-03]],
        [[3.9356e-03, 1.8109e-04, 1.2736e-04,  ..., 4.3798e-04,
          3.4539e-04, 3.6475e-03],
         [3.9356e-03, 1.8109e-04, 1.2736e-04,  ..., 4.3798e-04,
          3.4539e-04, 3.6475e-03],
         [9.8819e-01, 1.8109e-04, 1.2736e-04,  ..., 4.3798e-04,
          3.4539e-04, 9.8906e-01],
         [3.9356e-03, 9.9946e-01, 9.9962e-01,  ..., 9.9869e-01,
          9.9896e-01, 3.6475e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 435:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9266e-01, 1.7531e-02, 1.9257e-03,  ..., 2.2339e-04,
          7.6458e-04, 9.9267e-01],
         [2.4478e-03, 1.0548e-02, 1.9257e-03,  ..., 2.2339e-04,
          7.6458e-04, 2.9966e-03],
         [2.4478e-03, 1.3069e-02, 1.9257e-03,  ..., 9.9933e-01,
          9.9771e-01, 2.1671e-03],
         [2.4478e-03, 9.5885e-01, 9.9422e-01,  ..., 2.2339e-04,
          7.6458e-04, 2.1671e-03]],
        [[9.9921e-01, 1.6018e-03, 4.8929e-03,  ..., 7.1874e-04,
          1.7826e-02, 7.5766e-04],
         [2.7579e-04, 1.6018e-03, 4.7727e-03,  ..., 7.1874e-04,
          1.1195e-02, 7.5766e-04],
         [2.5834e-04, 1.6018e-03, 4.7727e-03,  ..., 9.9784e-01,
          9.5978e-01, 9.9773e-01],
         [2.5834e-04, 9.9519e-01, 9.8556e-01,  ..., 7.1874e-04,
          1.1195e-02, 7.5766e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.4453e-03, 1.0681e-03, 5.2962e-04,  ..., 1.6013e-03,
          2.1418e-03, 1.0620e-02],
         [6.4453e-03, 1.0681e-03, 5.2962e-04,  ..., 1.6013e-03,
          1.8069e-03, 8.3375e-03],
         [9.8066e-01, 1.0681e-03, 5.2962e-04,  ..., 9.9520e-01,
          1.8069e-03, 9.7271e-01],
         [6.4453e-03, 9.9680e-01, 9.9841e-01,  ..., 1.6013e-03,
          9.9424e-01, 8.3375e-03]],
        [[2.9347e-03, 1.6460e-04, 1.1464e-04,  ..., 2.3685e-04,
          1.9880e-04, 7.3631e-03],
         [2.9347e-03, 1.6460e-04, 1.1464e-04,  ..., 2.3685e-04,
          1.9880e-04, 7.3631e-03],
         [9.9120e-01, 1.6460e-04, 1.1464e-04,  ..., 2.3685e-04,
          1.9880e-04, 9.7738e-01],
         [2.9347e-03, 9.9951e-01, 9.9966e-01,  ..., 9.9929e-01,
          9.9940e-01, 7.8976e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 436:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8073e-01, 2.3312e-03, 5.0691e-03,  ..., 3.9221e-04,
          4.9858e-04, 9.9855e-01],
         [8.4090e-03, 2.2273e-03, 5.0691e-03,  ..., 3.9221e-04,
          4.9858e-04, 4.8216e-04],
         [5.5531e-03, 2.2273e-03, 5.0691e-03,  ..., 9.9882e-01,
          9.9850e-01, 4.8216e-04],
         [5.3089e-03, 9.9321e-01, 9.8479e-01,  ..., 3.9221e-04,
          4.9858e-04, 4.8216e-04]],
        [[9.9851e-01, 1.2450e-02, 8.3470e-03,  ..., 5.2926e-04,
          1.7324e-02, 1.3036e-03],
         [4.9734e-04, 9.7825e-03, 7.0078e-03,  ..., 5.2926e-04,
          1.1958e-02, 3.0349e-03],
         [4.9734e-04, 9.7825e-03, 7.0078e-03,  ..., 9.9841e-01,
          1.1958e-02, 9.9436e-01],
         [4.9734e-04, 9.6799e-01, 9.7764e-01,  ..., 5.2926e-04,
          9.5876e-01, 1.3036e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:46,125 [Process: 0] Synchronize training processes
2024-08-18 15:20:46,126 [Process: 0] Evaluating...
2024-08-18 15:20:46,127 [Process: 0] EPOCH 436:
2024-08-18 15:20:46,129 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:47,244 [Process: 0] Synchronize training processes
2024-08-18 15:20:47,244 [Process: 0] Evaluating...
2024-08-18 15:20:47,246 [Process: 0] EPOCH 437:
2024-08-18 15:20:47,248 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5174e-03, 9.1300e-04, 1.0370e-04,  ..., 1.1739e-02,
          3.4605e-02, 9.9143e-01],
         [2.5174e-03, 9.1300e-04, 1.0370e-04,  ..., 1.0703e-02,
          1.1768e-02, 2.6395e-03],
         [9.9245e-01, 9.1300e-04, 1.0370e-04,  ..., 9.6424e-01,
          1.1768e-02, 3.2918e-03],
         [2.5174e-03, 9.9726e-01, 9.9969e-01,  ..., 1.3315e-02,
          9.4186e-01, 2.6395e-03]],
        [[9.5061e-04, 2.9845e-04, 2.1609e-04,  ..., 1.5804e-04,
          2.0944e-04, 1.7497e-03],
         [9.5061e-04, 2.9845e-04, 2.1609e-04,  ..., 1.5804e-04,
          2.0944e-04, 1.7497e-03],
         [9.9715e-01, 2.9845e-04, 2.1609e-04,  ..., 1.5804e-04,
          2.0944e-04, 9.9475e-01],
         [9.5061e-04, 9.9910e-01, 9.9935e-01,  ..., 9.9953e-01,
          9.9937e-01, 1.7497e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 437:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9785e-01, 1.9602e-03, 3.6605e-03,  ..., 1.0123e-04,
          6.3938e-04, 9.8134e-01],
         [7.1516e-04, 1.9602e-03, 3.6605e-03,  ..., 1.0123e-04,
          6.3938e-04, 5.1815e-03],
         [7.1516e-04, 1.9602e-03, 3.6605e-03,  ..., 9.9970e-01,
          9.9808e-01, 8.2926e-03],
         [7.1516e-04, 9.9412e-01, 9.8902e-01,  ..., 1.0123e-04,
          6.3938e-04, 5.1815e-03]],
        [[9.8839e-01, 8.2914e-03, 2.5847e-03,  ..., 2.9455e-04,
          1.8246e-03, 2.5038e-04],
         [4.7026e-03, 5.6134e-03, 2.5847e-03,  ..., 2.9455e-04,
          1.8246e-03, 2.5038e-04],
         [3.9251e-03, 5.6134e-03, 2.5847e-03,  ..., 9.9912e-01,
          1.8246e-03, 9.9925e-01],
         [2.9842e-03, 9.8048e-01, 9.9225e-01,  ..., 2.9455e-04,
          9.9453e-01, 2.5038e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8221e-03, 6.4671e-04, 5.9749e-05,  ..., 2.5940e-03,
          6.3814e-02, 9.9365e-01],
         [2.8221e-03, 6.4671e-04, 5.9749e-05,  ..., 2.5940e-03,
          2.1870e-02, 2.1155e-03],
         [9.9153e-01, 6.4671e-04, 5.9749e-05,  ..., 9.9222e-01,
          2.1870e-02, 2.1155e-03],
         [2.8221e-03, 9.9806e-01, 9.9982e-01,  ..., 2.5940e-03,
          8.9245e-01, 2.1155e-03]],
        [[2.7241e-03, 4.9341e-04, 2.2369e-04,  ..., 2.9040e-04,
          2.3607e-04, 2.1709e-03],
         [2.7241e-03, 4.9341e-04, 2.2369e-04,  ..., 2.9040e-04,
          2.3607e-04, 2.1709e-03],
         [9.9183e-01, 4.9341e-04, 2.2369e-04,  ..., 2.9040e-04,
          2.3607e-04, 9.9349e-01],
         [2.7241e-03, 9.9852e-01, 9.9933e-01,  ..., 9.9913e-01,
          9.9929e-01, 2.1709e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 438:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:48,375 [Process: 0] Synchronize training processes
2024-08-18 15:20:48,375 [Process: 0] Evaluating...
2024-08-18 15:20:48,377 [Process: 0] EPOCH 438:
2024-08-18 15:20:48,378 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9871e-01, 4.5361e-03, 2.4205e-03,  ..., 2.1836e-03,
          2.0302e-04, 9.9942e-01],
         [4.2994e-04, 4.5361e-03, 2.4205e-03,  ..., 2.1836e-03,
          2.0302e-04, 1.9450e-04],
         [4.2994e-04, 4.5361e-03, 2.4205e-03,  ..., 9.9345e-01,
          9.9939e-01, 1.9450e-04],
         [4.2994e-04, 9.8639e-01, 9.9274e-01,  ..., 2.1836e-03,
          2.0302e-04, 1.9450e-04]],
        [[9.9855e-01, 1.7759e-03, 4.2768e-02,  ..., 5.2944e-04,
          1.5273e-01, 3.4060e-04],
         [4.8302e-04, 1.7759e-03, 2.4739e-02,  ..., 7.8780e-04,
          5.8089e-02, 3.4060e-04],
         [4.8302e-04, 1.7759e-03, 2.6619e-02,  ..., 9.9815e-01,
          1.3455e-01, 9.9898e-01],
         [4.8302e-04, 9.9467e-01, 9.0587e-01,  ..., 5.2944e-04,
          6.5463e-01, 3.4060e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.7322e-03, 1.4253e-04, 3.3893e-04,  ..., 3.9440e-03,
          4.2787e-03, 8.3184e-01],
         [7.7322e-03, 1.4253e-04, 3.3893e-04,  ..., 3.9440e-03,
          4.2787e-03, 3.3552e-02],
         [9.7645e-01, 1.4253e-04, 3.3893e-04,  ..., 9.8817e-01,
          9.8716e-01, 8.3131e-02],
         [8.0835e-03, 9.9957e-01, 9.9898e-01,  ..., 3.9440e-03,
          4.2787e-03, 5.1478e-02]],
        [[2.1501e-03, 1.9234e-04, 2.9717e-03,  ..., 1.0468e-04,
          1.2038e-03, 2.7899e-03],
         [2.1501e-03, 1.9234e-04, 2.1554e-03,  ..., 1.0468e-04,
          1.2038e-03, 2.7899e-03],
         [9.9355e-01, 1.9234e-04, 2.1554e-03,  ..., 1.0468e-04,
          1.2038e-03, 9.9163e-01],
         [2.1501e-03, 9.9942e-01, 9.9272e-01,  ..., 9.9969e-01,
          9.9639e-01, 2.7899e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 439:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9875e-01, 1.8351e-03, 5.8133e-03,  ..., 1.6958e-03,
          3.2034e-04, 9.9316e-01],
         [4.1657e-04, 1.8351e-03, 4.8853e-03,  ..., 1.6958e-03,
          3.2034e-04, 2.2797e-03],
         [4.1657e-04, 1.8351e-03, 4.8853e-03,  ..., 9.9491e-01,
          9.9904e-01, 2.2797e-03],
         [4.1657e-04, 9.9449e-01, 9.8442e-01,  ..., 1.6958e-03,
          3.2034e-04, 2.2797e-03]],
        [[9.9385e-01, 1.8337e-02, 6.1883e-03,  ..., 9.1922e-04,
          1.1409e-03, 5.0883e-04],
         [2.6672e-03, 1.2593e-02, 6.1883e-03,  ..., 9.1922e-04,
          1.1409e-03, 5.0883e-04],
         [1.7397e-03, 1.2940e-02, 6.1883e-03,  ..., 9.9724e-01,
          9.9658e-01, 9.9847e-01],
         [1.7397e-03, 9.5613e-01, 9.8144e-01,  ..., 9.1922e-04,
          1.1409e-03, 5.0883e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.9924e-04, 1.6298e-03, 2.6269e-04,  ..., 1.5121e-03,
          9.8016e-04, 1.6751e-01],
         [7.9924e-04, 1.6298e-03, 2.6269e-04,  ..., 1.5121e-03,
          9.8016e-04, 5.8814e-02],
         [9.9760e-01, 1.6298e-03, 2.6269e-04,  ..., 9.9546e-01,
          9.9706e-01, 6.5082e-01],
         [7.9924e-04, 9.9511e-01, 9.9921e-01,  ..., 1.5121e-03,
          9.8016e-04, 1.2285e-01]],
        [[7.5694e-03, 3.0774e-04, 1.0194e-03,  ..., 4.3767e-04,
          2.3750e-04, 1.4453e-03],
         [7.5694e-03, 3.0774e-04, 7.5044e-04,  ..., 4.3767e-04,
          2.3750e-04, 1.4453e-03],
         [9.7575e-01, 3.0774e-04, 7.5044e-04,  ..., 4.3767e-04,
          2.3750e-04, 9.9566e-01],
         [9.1123e-03, 9.9908e-01, 9.9748e-01,  ..., 9.9869e-01,
          9.9929e-01, 1.4453e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:49,505 [Process: 0] Synchronize training processes
2024-08-18 15:20:49,506 [Process: 0] Evaluating...
2024-08-18 15:20:49,508 [Process: 0] EPOCH 439:
2024-08-18 15:20:49,509 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:50,639 [Process: 0] Synchronize training processes
2024-08-18 15:20:50,639 [Process: 0] Evaluating...
2024-08-18 15:20:50,641 [Process: 0] EPOCH 440:
2024-08-18 15:20:50,642 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 440:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9957e-01, 3.2969e-03, 2.1173e-03,  ..., 2.5657e-04,
          1.0808e-03, 9.9762e-01],
         [1.4469e-04, 3.2969e-03, 2.1173e-03,  ..., 2.5657e-04,
          1.0808e-03, 7.9345e-04],
         [1.4469e-04, 3.2969e-03, 2.1173e-03,  ..., 9.9923e-01,
          9.9676e-01, 7.9345e-04],
         [1.4469e-04, 9.9011e-01, 9.9365e-01,  ..., 2.5657e-04,
          1.0808e-03, 7.9345e-04]],
        [[9.9730e-01, 6.3278e-03, 3.7050e-02,  ..., 3.0943e-04,
          2.7769e-03, 3.1498e-03],
         [8.2857e-04, 6.3278e-03, 4.3403e-02,  ..., 3.0943e-04,
          2.7769e-03, 3.1498e-03],
         [1.0405e-03, 6.3278e-03, 2.9505e-02,  ..., 9.9907e-01,
          9.9167e-01, 9.9055e-01],
         [8.2857e-04, 9.8102e-01, 8.9004e-01,  ..., 3.0943e-04,
          2.7769e-03, 3.1498e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4134e-03, 1.2526e-03, 1.3698e-03,  ..., 3.1004e-03,
          1.3245e-01, 4.6259e-01],
         [3.4134e-03, 1.2526e-03, 1.0219e-03,  ..., 3.1004e-03,
          6.8270e-02, 8.9763e-02],
         [9.8976e-01, 1.2526e-03, 1.0219e-03,  ..., 9.9070e-01,
          5.0723e-01, 2.8163e-01],
         [3.4134e-03, 9.9624e-01, 9.9659e-01,  ..., 3.1004e-03,
          2.9205e-01, 1.6602e-01]],
        [[1.7209e-03, 4.6146e-04, 2.3073e-04,  ..., 1.5707e-03,
          6.7006e-04, 4.9444e-03],
         [1.7209e-03, 4.6146e-04, 2.3073e-04,  ..., 1.5707e-03,
          6.7006e-04, 4.9444e-03],
         [9.9484e-01, 4.6146e-04, 2.3073e-04,  ..., 1.5707e-03,
          6.7006e-04, 9.8504e-01],
         [1.7209e-03, 9.9862e-01, 9.9931e-01,  ..., 9.9529e-01,
          9.9799e-01, 5.0723e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 441:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9771e-01, 5.4924e-03, 1.7051e-03,  ..., 1.9773e-04,
          1.6842e-03, 9.9665e-01],
         [7.6450e-04, 6.2361e-03, 1.7051e-03,  ..., 1.9773e-04,
          1.6842e-03, 1.1135e-03],
         [7.6450e-04, 5.4924e-03, 1.7051e-03,  ..., 9.9941e-01,
          9.9495e-01, 1.1211e-03],
         [7.6450e-04, 9.8278e-01, 9.9488e-01,  ..., 1.9773e-04,
          1.6842e-03, 1.1135e-03]],
        [[9.9934e-01, 2.5038e-02, 1.9049e-02,  ..., 3.9162e-04,
          3.1103e-02, 5.1308e-03],
         [2.2038e-04, 1.6545e-02, 1.3993e-02,  ..., 3.9162e-04,
          3.1297e-02, 6.6451e-03],
         [2.2038e-04, 2.3255e-02, 1.4268e-02,  ..., 9.9883e-01,
          8.9119e-01, 9.8309e-01],
         [2.2038e-04, 9.3516e-01, 9.5269e-01,  ..., 3.9162e-04,
          4.6405e-02, 5.1308e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:51,762 [Process: 0] Synchronize training processes
2024-08-18 15:20:51,762 [Process: 0] Evaluating...
2024-08-18 15:20:51,764 [Process: 0] EPOCH 441:
2024-08-18 15:20:51,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:52,883 [Process: 0] Synchronize training processes
2024-08-18 15:20:52,883 [Process: 0] Evaluating...
2024-08-18 15:20:52,888 [Process: 0] EPOCH 442:
2024-08-18 15:20:52,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.8638e-03, 4.0325e-04, 9.9887e-01,  ..., 3.1943e-03,
          1.0989e-01, 2.5218e-02],
         [4.8638e-03, 4.0325e-04, 3.7835e-04,  ..., 3.1943e-03,
          7.1054e-02, 2.0182e-02],
         [9.8490e-01, 4.0325e-04, 3.7835e-04,  ..., 9.9042e-01,
          1.6479e-01, 9.1844e-01],
         [5.3751e-03, 9.9879e-01, 3.7835e-04,  ..., 3.1943e-03,
          6.5427e-01, 3.6157e-02]],
        [[2.4094e-03, 4.6937e-04, 4.0468e-04,  ..., 7.9703e-04,
          1.2458e-04, 3.7562e-03],
         [2.4094e-03, 4.6937e-04, 4.0468e-04,  ..., 7.9703e-04,
          1.2458e-04, 3.7562e-03],
         [9.9277e-01, 4.6937e-04, 4.0468e-04,  ..., 7.9703e-04,
          1.2458e-04, 9.8873e-01],
         [2.4094e-03, 9.9859e-01, 9.9879e-01,  ..., 9.9761e-01,
          9.9963e-01, 3.7562e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 442:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9942e-01, 3.1597e-03, 4.5638e-03,  ..., 3.4732e-04,
          1.8646e-04, 9.9703e-01],
         [1.9242e-04, 3.1597e-03, 3.8909e-03,  ..., 3.4732e-04,
          2.1371e-04, 9.9096e-04],
         [1.9242e-04, 3.1597e-03, 3.8909e-03,  ..., 9.9896e-01,
          9.9941e-01, 9.9096e-04],
         [1.9242e-04, 9.9052e-01, 9.8765e-01,  ..., 3.4732e-04,
          1.8646e-04, 9.9096e-04]],
        [[9.8489e-01, 4.7516e-03, 2.4774e-03,  ..., 1.6054e-03,
          1.8737e-01, 1.1467e-03],
         [4.5911e-03, 4.7516e-03, 2.4774e-03,  ..., 1.6054e-03,
          1.0911e-01, 1.1467e-03],
         [5.9292e-03, 4.7516e-03, 2.4774e-03,  ..., 9.9518e-01,
          4.6675e-01, 9.9656e-01],
         [4.5911e-03, 9.8575e-01, 9.9257e-01,  ..., 1.6054e-03,
          2.3677e-01, 1.1467e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4285e-03, 3.8034e-04, 9.9871e-01,  ..., 9.6904e-04,
          1.0280e-01, 4.8983e-03],
         [2.4285e-03, 3.8034e-04, 4.3137e-04,  ..., 9.6904e-04,
          5.1664e-02, 4.8983e-03],
         [9.9271e-01, 3.8034e-04, 4.3137e-04,  ..., 9.9709e-01,
          1.1249e-01, 9.8481e-01],
         [2.4285e-03, 9.9886e-01, 4.3137e-04,  ..., 9.6904e-04,
          7.3305e-01, 5.3926e-03]],
        [[1.6779e-03, 3.0577e-04, 4.0678e-04,  ..., 2.5566e-04,
          9.9277e-05, 6.2496e-03],
         [1.6779e-03, 3.0577e-04, 4.0678e-04,  ..., 2.5566e-04,
          9.9277e-05, 6.2496e-03],
         [9.9497e-01, 3.0577e-04, 4.0678e-04,  ..., 2.5566e-04,
          9.9277e-05, 9.8080e-01],
         [1.6779e-03, 9.9908e-01, 9.9878e-01,  ..., 9.9923e-01,
          9.9970e-01, 6.6987e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 443:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9983e-01, 6.9343e-03, 6.4429e-03,  ..., 3.4260e-04,
          7.6139e-04, 9.9872e-01],
         [5.6609e-05, 4.8992e-03, 6.4429e-03,  ..., 3.4260e-04,
          7.6139e-04, 4.2546e-04],
         [5.6609e-05, 4.8992e-03, 6.4429e-03,  ..., 9.9897e-01,
          9.9772e-01, 4.2546e-04],
         [5.6609e-05, 9.8327e-01, 9.8067e-01,  ..., 3.4260e-04,
          7.6139e-04, 4.2546e-04]],
        [[9.9971e-01, 7.9538e-03, 9.5418e-03,  ..., 2.7824e-03,
          1.6116e-01, 2.2960e-03],
         [9.7614e-05, 6.7549e-03, 9.5177e-03,  ..., 3.2331e-03,
          1.0868e-01, 2.6735e-03],
         [9.7614e-05, 8.2955e-03, 8.9160e-03,  ..., 9.9120e-01,
          4.0641e-01, 9.9273e-01],
         [9.7614e-05, 9.7700e-01, 9.7202e-01,  ..., 2.7824e-03,
          3.2374e-01, 2.2960e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:54,015 [Process: 0] Synchronize training processes
2024-08-18 15:20:54,015 [Process: 0] Evaluating...
2024-08-18 15:20:54,017 [Process: 0] EPOCH 443:
2024-08-18 15:20:54,019 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:55,147 [Process: 0] Synchronize training processes
2024-08-18 15:20:55,147 [Process: 0] Evaluating...
2024-08-18 15:20:55,149 [Process: 0] EPOCH 444:
2024-08-18 15:20:55,151 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4039e-03, 1.6649e-04, 9.9992e-01,  ..., 6.1305e-03,
          5.9760e-02, 4.1532e-03],
         [4.4039e-03, 1.6649e-04, 2.6452e-05,  ..., 6.1305e-03,
          4.3347e-02, 5.1110e-03],
         [9.8616e-01, 1.6649e-04, 2.6452e-05,  ..., 9.7989e-01,
          8.7575e-02, 9.8628e-01],
         [5.0370e-03, 9.9950e-01, 2.6452e-05,  ..., 7.8516e-03,
          8.0932e-01, 4.4596e-03]],
        [[4.6619e-03, 5.2303e-05, 1.3508e-04,  ..., 4.4684e-04,
          2.0723e-04, 3.8307e-03],
         [4.9062e-03, 5.2303e-05, 1.3508e-04,  ..., 4.4684e-04,
          2.0723e-04, 3.8307e-03],
         [9.8577e-01, 5.2303e-05, 1.3508e-04,  ..., 4.4684e-04,
          2.0723e-04, 9.8849e-01],
         [4.6619e-03, 9.9984e-01, 9.9959e-01,  ..., 9.9866e-01,
          9.9938e-01, 3.8470e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 444:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9977e-01, 9.4242e-03, 2.0255e-02,  ..., 1.0820e-03,
          1.5567e-04, 9.9917e-01],
         [7.8008e-05, 7.7030e-03, 1.3904e-02,  ..., 1.0820e-03,
          1.7938e-04, 2.7621e-04],
         [7.8008e-05, 7.7030e-03, 1.3956e-02,  ..., 9.9675e-01,
          9.9951e-01, 2.7621e-04],
         [7.8008e-05, 9.7517e-01, 9.5189e-01,  ..., 1.0820e-03,
          1.5567e-04, 2.7621e-04]],
        [[9.9753e-01, 8.5928e-03, 1.0889e-02,  ..., 6.6939e-04,
          1.4139e-01, 1.1970e-04],
         [8.2363e-04, 8.5928e-03, 9.0423e-03,  ..., 6.6939e-04,
          1.1171e-01, 1.1970e-04],
         [8.2363e-04, 8.5928e-03, 9.8503e-03,  ..., 9.9799e-01,
          4.3111e-01, 9.9964e-01],
         [8.2363e-04, 9.7422e-01, 9.7022e-01,  ..., 6.6939e-04,
          3.1579e-01, 1.1970e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9439e-03, 1.3038e-04, 9.9947e-01,  ..., 1.9231e-03,
          5.3572e-03, 5.8156e-03],
         [2.9439e-03, 1.3038e-04, 1.7692e-04,  ..., 1.9231e-03,
          5.3572e-03, 5.8156e-03],
         [9.9117e-01, 1.3038e-04, 1.7692e-04,  ..., 9.9423e-01,
          5.3572e-03, 9.8145e-01],
         [2.9439e-03, 9.9961e-01, 1.7692e-04,  ..., 1.9231e-03,
          9.8393e-01, 6.9191e-03]],
        [[4.1861e-03, 4.6253e-05, 5.4710e-05,  ..., 5.5230e-05,
          3.4352e-04, 6.1340e-03],
         [4.1861e-03, 4.6253e-05, 5.4710e-05,  ..., 5.5230e-05,
          3.4352e-04, 6.1340e-03],
         [9.8722e-01, 4.6253e-05, 5.4710e-05,  ..., 5.5230e-05,
          3.4352e-04, 9.8124e-01],
         [4.4030e-03, 9.9986e-01, 9.9984e-01,  ..., 9.9983e-01,
          9.9897e-01, 6.4916e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 445:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:20:56,280 [Process: 0] Synchronize training processes
2024-08-18 15:20:56,280 [Process: 0] Evaluating...
2024-08-18 15:20:56,282 [Process: 0] EPOCH 445:
2024-08-18 15:20:56,284 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:57,412 [Process: 0] Synchronize training processes
2024-08-18 15:20:57,412 [Process: 0] Evaluating...
2024-08-18 15:20:57,414 [Process: 0] EPOCH 446:
2024-08-18 15:20:57,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9988e-01, 1.4093e-03, 3.5465e-03,  ..., 4.1679e-04,
          1.3176e-04, 9.9827e-01],
         [4.1434e-05, 1.4093e-03, 3.5465e-03,  ..., 4.1679e-04,
          1.3176e-04, 5.7513e-04],
         [4.1434e-05, 1.4093e-03, 3.5465e-03,  ..., 9.9875e-01,
          9.9960e-01, 5.7513e-04],
         [4.1434e-05, 9.9577e-01, 9.8936e-01,  ..., 4.1679e-04,
          1.3176e-04, 5.7513e-04]],
        [[9.9975e-01, 1.0661e-02, 7.8334e-03,  ..., 7.8372e-04,
          1.4290e-01, 2.3481e-03],
         [8.1853e-05, 1.0661e-02, 9.2822e-03,  ..., 7.8372e-04,
          1.0940e-01, 3.3388e-03],
         [8.1853e-05, 1.2073e-02, 7.8334e-03,  ..., 9.9765e-01,
          5.1586e-01, 9.9196e-01],
         [8.1853e-05, 9.6661e-01, 9.7505e-01,  ..., 7.8372e-04,
          2.3183e-01, 2.3481e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1346e-03, 2.3333e-04, 9.7941e-01,  ..., 2.6296e-03,
          7.8319e-04, 4.2003e-03],
         [2.1346e-03, 2.3333e-04, 5.8898e-03,  ..., 2.6296e-03,
          7.8319e-04, 4.6891e-03],
         [9.9360e-01, 2.3333e-04, 5.8898e-03,  ..., 9.9211e-01,
          7.8319e-04, 9.8686e-01],
         [2.1346e-03, 9.9930e-01, 8.8097e-03,  ..., 2.6296e-03,
          9.9765e-01, 4.2545e-03]],
        [[1.1413e-02, 1.6471e-04, 4.8274e-04,  ..., 1.8912e-05,
          2.4079e-04, 7.7678e-03],
         [1.4737e-02, 1.6471e-04, 4.8274e-04,  ..., 1.8912e-05,
          2.4079e-04, 7.7678e-03],
         [9.5794e-01, 1.6471e-04, 4.8274e-04,  ..., 1.8912e-05,
          2.4079e-04, 9.7434e-01],
         [1.5906e-02, 9.9951e-01, 9.9855e-01,  ..., 9.9994e-01,
          9.9928e-01, 1.0121e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 446:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9984e-01, 2.6658e-03, 3.6896e-03,  ..., 6.2962e-05,
          1.1843e-03, 9.9450e-01],
         [5.4517e-05, 2.6658e-03, 3.6896e-03,  ..., 6.2962e-05,
          1.1843e-03, 1.5991e-03],
         [5.4517e-05, 2.6658e-03, 3.6896e-03,  ..., 9.9981e-01,
          9.9645e-01, 2.2987e-03],
         [5.4517e-05, 9.9200e-01, 9.8893e-01,  ..., 6.2962e-05,
          1.1843e-03, 1.5991e-03]],
        [[9.9503e-01, 5.8033e-03, 5.5302e-03,  ..., 6.7361e-04,
          1.1660e-01, 4.1889e-04],
         [1.5007e-03, 5.8033e-03, 5.9266e-03,  ..., 7.8151e-04,
          1.2050e-01, 4.1889e-04],
         [1.9712e-03, 5.8033e-03, 5.5302e-03,  ..., 9.9787e-01,
          6.1284e-01, 9.9874e-01],
         [1.5007e-03, 9.8259e-01, 9.8301e-01,  ..., 6.7361e-04,
          1.5007e-01, 4.1889e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8021e-03, 1.9373e-04, 9.9199e-01,  ..., 5.8396e-04,
          1.2759e-03, 7.8189e-03],
         [2.8021e-03, 1.9373e-04, 2.6308e-03,  ..., 5.8396e-04,
          1.2759e-03, 7.8189e-03],
         [9.9159e-01, 1.9373e-04, 2.6308e-03,  ..., 9.9825e-01,
          1.2759e-03, 9.7503e-01],
         [2.8021e-03, 9.9942e-01, 2.7438e-03,  ..., 5.8396e-04,
          9.9617e-01, 9.3338e-03]],
        [[2.8275e-03, 2.0126e-04, 1.0094e-03,  ..., 8.7505e-06,
          2.5738e-04, 5.3044e-03],
         [2.8275e-03, 2.0126e-04, 1.0094e-03,  ..., 8.7505e-06,
          2.5738e-04, 5.3044e-03],
         [9.9152e-01, 2.0126e-04, 1.0094e-03,  ..., 8.7505e-06,
          2.5738e-04, 9.8338e-01],
         [2.8275e-03, 9.9940e-01, 9.9697e-01,  ..., 9.9997e-01,
          9.9923e-01, 6.0161e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 447:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:20:58,539 [Process: 0] Synchronize training processes
2024-08-18 15:20:58,540 [Process: 0] Evaluating...
2024-08-18 15:20:58,541 [Process: 0] EPOCH 447:
2024-08-18 15:20:58,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9912e-01, 1.7277e-03, 3.1475e-03,  ..., 8.8756e-04,
          1.8160e-04, 9.9782e-01],
         [2.9169e-04, 1.7277e-03, 3.1475e-03,  ..., 8.8756e-04,
          1.8160e-04, 7.2791e-04],
         [2.9169e-04, 1.7277e-03, 3.1475e-03,  ..., 9.9734e-01,
          9.9946e-01, 7.2791e-04],
         [2.9169e-04, 9.9482e-01, 9.9056e-01,  ..., 8.8756e-04,
          1.8160e-04, 7.2791e-04]],
        [[9.9938e-01, 6.1162e-03, 1.7381e-03,  ..., 2.6813e-04,
          1.3281e-01, 8.9838e-04],
         [2.0552e-04, 6.4617e-03, 1.7381e-03,  ..., 2.6813e-04,
          1.3978e-01, 1.2926e-03],
         [2.0552e-04, 6.1162e-03, 1.7381e-03,  ..., 9.9920e-01,
          5.1187e-01, 9.9691e-01],
         [2.0552e-04, 9.8131e-01, 9.9479e-01,  ..., 2.6813e-04,
          2.1554e-01, 8.9838e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8832e-03, 3.2295e-04, 9.9951e-01,  ..., 2.5455e-03,
          2.1573e-03, 6.0850e-03],
         [3.8832e-03, 3.2295e-04, 1.6435e-04,  ..., 2.5455e-03,
          2.1573e-03, 6.7195e-03],
         [9.8835e-01, 3.2295e-04, 1.6435e-04,  ..., 9.9236e-01,
          2.1573e-03, 9.8098e-01],
         [3.8832e-03, 9.9903e-01, 1.6435e-04,  ..., 2.5455e-03,
          9.9353e-01, 6.2125e-03]],
        [[2.4360e-03, 1.5107e-04, 8.2674e-04,  ..., 2.0356e-05,
          9.4956e-05, 8.4118e-04],
         [2.4360e-03, 1.5107e-04, 8.2674e-04,  ..., 2.0356e-05,
          9.4956e-05, 8.4118e-04],
         [9.9269e-01, 1.5107e-04, 8.2674e-04,  ..., 2.0356e-05,
          9.4956e-05, 9.9748e-01],
         [2.4360e-03, 9.9955e-01, 9.9752e-01,  ..., 9.9994e-01,
          9.9972e-01, 8.4118e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 448:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 3.3760e-03, 1.5741e-03,  ..., 7.9121e-05,
          1.5263e-04, 9.9487e-01],
         [5.1457e-05, 3.3760e-03, 1.5741e-03,  ..., 7.9121e-05,
          1.5263e-04, 1.7104e-03],
         [5.1457e-05, 3.3760e-03, 1.5741e-03,  ..., 9.9976e-01,
          9.9954e-01, 1.7104e-03],
         [5.1457e-05, 9.8987e-01, 9.9528e-01,  ..., 7.9121e-05,
          1.5263e-04, 1.7104e-03]],
        [[9.8231e-01, 3.2195e-03, 5.1481e-03,  ..., 1.0205e-03,
          1.6390e-01, 8.6912e-04],
         [4.5558e-03, 3.4985e-03, 5.1481e-03,  ..., 1.0205e-03,
          1.4030e-01, 8.6912e-04],
         [8.5831e-03, 3.2195e-03, 5.1481e-03,  ..., 9.9694e-01,
          4.3916e-01, 9.9739e-01],
         [4.5558e-03, 9.9006e-01, 9.8456e-01,  ..., 1.0205e-03,
          2.5664e-01, 8.6912e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.3726e-03, 8.8243e-04, 9.9867e-01,  ..., 2.1042e-03,
          1.4856e-03, 4.2202e-03],
         [9.7916e-03, 8.8243e-04, 4.4463e-04,  ..., 2.1042e-03,
          1.4856e-03, 4.2202e-03],
         [9.7053e-01, 8.8243e-04, 4.4463e-04,  ..., 9.9369e-01,
          1.4856e-03, 9.8734e-01],
         [1.1307e-02, 9.9735e-01, 4.4463e-04,  ..., 2.1042e-03,
          9.9554e-01, 4.2202e-03]],
        [[9.2072e-03, 8.1149e-05, 2.9223e-04,  ..., 7.3716e-05,
          1.4842e-04, 3.4892e-03],
         [9.2072e-03, 8.1149e-05, 2.9223e-04,  ..., 7.3716e-05,
          1.4842e-04, 3.4892e-03],
         [9.6797e-01, 8.1149e-05, 2.9223e-04,  ..., 7.3716e-05,
          1.4842e-04, 9.8953e-01],
         [1.3613e-02, 9.9976e-01, 9.9912e-01,  ..., 9.9978e-01,
          9.9955e-01, 3.4892e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:20:59,668 [Process: 0] Synchronize training processes
2024-08-18 15:20:59,669 [Process: 0] Evaluating...
2024-08-18 15:20:59,670 [Process: 0] EPOCH 448:
2024-08-18 15:20:59,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:00,798 [Process: 0] Synchronize training processes
2024-08-18 15:21:00,799 [Process: 0] Evaluating...
2024-08-18 15:21:00,800 [Process: 0] EPOCH 449:
2024-08-18 15:21:00,802 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 449:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9927e-01, 5.0597e-03, 2.7217e-03,  ..., 1.0809e-04,
          3.1440e-04, 9.9507e-01],
         [2.4261e-04, 5.0597e-03, 2.7217e-03,  ..., 1.0809e-04,
          3.1440e-04, 1.4881e-03],
         [2.4261e-04, 5.0597e-03, 2.7217e-03,  ..., 9.9968e-01,
          9.9906e-01, 1.9535e-03],
         [2.4261e-04, 9.8482e-01, 9.9183e-01,  ..., 1.0809e-04,
          3.1440e-04, 1.4881e-03]],
        [[9.9934e-01, 2.3358e-03, 2.9332e-03,  ..., 2.0802e-04,
          1.6087e-01, 2.5449e-04],
         [2.1879e-04, 2.3358e-03, 2.9332e-03,  ..., 2.0802e-04,
          1.4981e-01, 2.5449e-04],
         [2.1879e-04, 2.3358e-03, 2.9332e-03,  ..., 9.9938e-01,
          4.3570e-01, 9.9924e-01],
         [2.1879e-04, 9.9299e-01, 9.9120e-01,  ..., 2.0802e-04,
          2.5362e-01, 2.5449e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4513e-03, 3.0973e-04, 9.9987e-01,  ..., 9.1214e-04,
          6.6310e-05, 3.0849e-03],
         [2.4513e-03, 3.0973e-04, 4.1994e-05,  ..., 9.1214e-04,
          6.6310e-05, 3.0849e-03],
         [9.9265e-01, 3.0973e-04, 4.1994e-05,  ..., 9.9726e-01,
          6.6310e-05, 9.9075e-01],
         [2.4513e-03, 9.9907e-01, 4.1994e-05,  ..., 9.1214e-04,
          9.9980e-01, 3.0849e-03]],
        [[5.4883e-03, 1.2667e-05, 4.7694e-04,  ..., 2.1685e-04,
          1.7183e-04, 1.5534e-03],
         [5.4883e-03, 1.2667e-05, 4.7694e-04,  ..., 2.1685e-04,
          1.7183e-04, 1.5534e-03],
         [9.8344e-01, 1.2667e-05, 4.7694e-04,  ..., 2.1685e-04,
          1.7183e-04, 9.9534e-01],
         [5.5807e-03, 9.9996e-01, 9.9857e-01,  ..., 9.9935e-01,
          9.9948e-01, 1.5534e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 450:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 9.6830e-04, 5.8471e-03,  ..., 4.5719e-04,
          6.2258e-04, 9.9784e-01],
         [5.1154e-05, 9.6830e-04, 5.8471e-03,  ..., 4.5719e-04,
          6.2258e-04, 7.1853e-04],
         [5.1154e-05, 9.6830e-04, 5.8471e-03,  ..., 9.9863e-01,
          9.9813e-01, 7.1853e-04],
         [5.1154e-05, 9.9710e-01, 9.8246e-01,  ..., 4.5719e-04,
          6.2258e-04, 7.1853e-04]],
        [[9.9992e-01, 9.1915e-03, 8.1313e-03,  ..., 1.5856e-04,
          1.6744e-01, 3.8632e-04],
         [2.6523e-05, 9.6885e-03, 9.5314e-03,  ..., 1.5856e-04,
          1.8130e-01, 3.8632e-04],
         [2.6523e-05, 1.1421e-02, 8.7926e-03,  ..., 9.9952e-01,
          4.2797e-01, 9.9884e-01],
         [2.6523e-05, 9.6970e-01, 9.7354e-01,  ..., 1.5856e-04,
          2.2329e-01, 3.8632e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:01,930 [Process: 0] Synchronize training processes
2024-08-18 15:21:01,930 [Process: 0] Evaluating...
2024-08-18 15:21:01,932 [Process: 0] EPOCH 450:
2024-08-18 15:21:01,934 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:03,062 [Process: 0] Synchronize training processes
2024-08-18 15:21:03,062 [Process: 0] Evaluating...
2024-08-18 15:21:03,064 [Process: 0] EPOCH 451:
2024-08-18 15:21:03,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5053e-03, 9.1323e-05, 9.9564e-01,  ..., 2.1462e-03,
          1.6013e-03, 2.7486e-03],
         [4.5053e-03, 9.1323e-05, 1.1227e-03,  ..., 2.1462e-03,
          1.6013e-03, 2.7486e-03],
         [9.8648e-01, 9.1323e-05, 1.1227e-03,  ..., 9.9356e-01,
          1.6013e-03, 9.9175e-01],
         [4.5053e-03, 9.9973e-01, 2.1174e-03,  ..., 2.1462e-03,
          9.9520e-01, 2.7486e-03]],
        [[1.1111e-02, 4.2868e-04, 6.2391e-04,  ..., 4.3919e-04,
          3.1893e-04, 3.0952e-03],
         [1.0822e-02, 4.5882e-04, 6.2391e-04,  ..., 5.3126e-04,
          3.1893e-04, 3.3776e-03],
         [9.6218e-01, 4.2868e-04, 6.2391e-04,  ..., 4.3919e-04,
          3.1893e-04, 9.9043e-01],
         [1.5884e-02, 9.9868e-01, 9.9813e-01,  ..., 9.9859e-01,
          9.9904e-01, 3.0952e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 451:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 7.3122e-03, 1.1198e-03,  ..., 6.4673e-04,
          5.8856e-05, 9.9679e-01],
         [2.2210e-05, 1.0960e-02, 1.1198e-03,  ..., 6.4673e-04,
          5.8856e-05, 1.0437e-03],
         [2.2210e-05, 7.3122e-03, 1.1198e-03,  ..., 9.9806e-01,
          9.9982e-01, 1.1201e-03],
         [2.2210e-05, 9.7442e-01, 9.9664e-01,  ..., 6.4673e-04,
          5.8856e-05, 1.0437e-03]],
        [[9.7284e-01, 3.5259e-03, 3.1107e-03,  ..., 1.0609e-03,
          1.4547e-01, 1.9743e-04],
         [7.2605e-03, 4.8424e-03, 3.2870e-03,  ..., 1.0609e-03,
          1.8834e-01, 1.9743e-04],
         [1.2643e-02, 3.5259e-03, 3.1107e-03,  ..., 9.9682e-01,
          4.7536e-01, 9.9941e-01],
         [7.2605e-03, 9.8811e-01, 9.9049e-01,  ..., 1.0609e-03,
          1.9082e-01, 1.9743e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4740e-03, 5.5686e-05, 9.9847e-01,  ..., 1.7654e-03,
          5.6361e-05, 1.2282e-03],
         [1.4740e-03, 6.5086e-05, 4.1239e-04,  ..., 1.7654e-03,
          5.6361e-05, 1.2282e-03],
         [9.9558e-01, 5.5686e-05, 4.1239e-04,  ..., 9.9470e-01,
          5.6361e-05, 9.9632e-01],
         [1.4740e-03, 9.9982e-01, 7.0171e-04,  ..., 1.7654e-03,
          9.9983e-01, 1.2282e-03]],
        [[3.5359e-03, 1.5720e-04, 1.5130e-04,  ..., 2.5600e-04,
          4.4526e-05, 6.3326e-04],
         [3.5359e-03, 1.5720e-04, 1.9820e-04,  ..., 2.6779e-04,
          4.4526e-05, 6.3326e-04],
         [9.8939e-01, 1.5720e-04, 1.5130e-04,  ..., 2.5600e-04,
          4.4526e-05, 9.9810e-01],
         [3.5359e-03, 9.9953e-01, 9.9950e-01,  ..., 9.9922e-01,
          9.9987e-01, 6.3326e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 452:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9301e-01, 3.8026e-03, 1.4162e-03,  ..., 3.3502e-04,
          2.5007e-04, 9.9916e-01],
         [2.3307e-03, 5.5835e-03, 1.4162e-03,  ..., 3.3502e-04,
          2.5007e-04, 2.7982e-04],
         [2.3307e-03, 3.8026e-03, 1.4162e-03,  ..., 9.9900e-01,
          9.9925e-01, 2.7982e-04],
         [2.3307e-03, 9.8681e-01, 9.9575e-01,  ..., 3.3502e-04,
          2.5007e-04, 2.7982e-04]],
        [[9.9909e-01, 2.9790e-03, 4.4276e-03,  ..., 4.6380e-05,
          1.0101e-01, 4.3903e-04],
         [3.0351e-04, 2.9790e-03, 7.6503e-03,  ..., 4.6380e-05,
          1.1470e-01, 4.3903e-04],
         [3.0351e-04, 2.9790e-03, 4.4276e-03,  ..., 9.9986e-01,
          6.6504e-01, 9.9868e-01],
         [3.0351e-04, 9.9106e-01, 9.8349e-01,  ..., 4.6380e-05,
          1.1925e-01, 4.3903e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:04,191 [Process: 0] Synchronize training processes
2024-08-18 15:21:04,191 [Process: 0] Evaluating...
2024-08-18 15:21:04,195 [Process: 0] EPOCH 452:
2024-08-18 15:21:04,197 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:05,332 [Process: 0] Synchronize training processes
2024-08-18 15:21:05,332 [Process: 0] Evaluating...
2024-08-18 15:21:05,334 [Process: 0] EPOCH 453:
2024-08-18 15:21:05,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5193e-03, 5.7069e-04, 9.8654e-01,  ..., 1.1723e-03,
          5.2112e-04, 2.1677e-03],
         [1.5193e-03, 5.7069e-04, 3.4123e-03,  ..., 1.1723e-03,
          5.2112e-04, 2.1677e-03],
         [9.9544e-01, 5.7069e-04, 3.4123e-03,  ..., 9.9648e-01,
          5.2112e-04, 9.9350e-01],
         [1.5193e-03, 9.9829e-01, 6.6331e-03,  ..., 1.1723e-03,
          9.9844e-01, 2.1677e-03]],
        [[2.8620e-03, 3.4685e-04, 1.8655e-04,  ..., 7.2862e-05,
          5.9272e-04, 7.4995e-04],
         [2.8620e-03, 3.4685e-04, 1.8655e-04,  ..., 7.2862e-05,
          8.1308e-04, 7.4995e-04],
         [9.9141e-01, 3.4685e-04, 1.8655e-04,  ..., 7.2862e-05,
          5.9272e-04, 9.9775e-01],
         [2.8620e-03, 9.9896e-01, 9.9944e-01,  ..., 9.9978e-01,
          9.9800e-01, 7.4995e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 453:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9961e-01, 8.3528e-03, 2.2791e-03,  ..., 2.0545e-04,
          4.4139e-04, 9.9856e-01],
         [1.3105e-04, 1.2556e-02, 2.2791e-03,  ..., 2.0545e-04,
          4.4139e-04, 4.8024e-04],
         [1.3105e-04, 8.3528e-03, 2.2791e-03,  ..., 9.9938e-01,
          9.9868e-01, 4.8024e-04],
         [1.3105e-04, 9.7074e-01, 9.9316e-01,  ..., 2.0545e-04,
          4.4139e-04, 4.8024e-04]],
        [[9.9685e-01, 5.4950e-03, 5.3726e-03,  ..., 6.7312e-05,
          1.9572e-01, 5.8788e-04],
         [1.0500e-03, 7.3000e-03, 5.3726e-03,  ..., 6.7312e-05,
          1.3267e-01, 5.8788e-04],
         [1.0500e-03, 5.4950e-03, 5.3726e-03,  ..., 9.9980e-01,
          4.5756e-01, 9.9824e-01],
         [1.0500e-03, 9.8171e-01, 9.8388e-01,  ..., 6.7312e-05,
          2.1405e-01, 5.8788e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4362e-03, 9.2476e-05, 9.9163e-01,  ..., 1.5744e-03,
          2.2776e-04, 4.5582e-03],
         [2.4362e-03, 9.2476e-05, 1.9976e-03,  ..., 1.5744e-03,
          2.2776e-04, 4.5582e-03],
         [9.9269e-01, 9.2476e-05, 1.9976e-03,  ..., 9.9528e-01,
          2.2776e-04, 9.8633e-01],
         [2.4362e-03, 9.9972e-01, 4.3720e-03,  ..., 1.5744e-03,
          9.9932e-01, 4.5582e-03]],
        [[7.6317e-03, 5.8303e-04, 3.9605e-04,  ..., 1.0039e-03,
          8.9751e-05, 2.6861e-03],
         [6.9473e-03, 6.4458e-04, 3.9605e-04,  ..., 1.0039e-03,
          8.9751e-05, 2.6861e-03],
         [9.7697e-01, 5.8303e-04, 3.9605e-04,  ..., 1.0039e-03,
          8.9751e-05, 9.9194e-01],
         [8.4464e-03, 9.9819e-01, 9.9881e-01,  ..., 9.9699e-01,
          9.9973e-01, 2.6861e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 454:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:06,454 [Process: 0] Synchronize training processes
2024-08-18 15:21:06,454 [Process: 0] Evaluating...
2024-08-18 15:21:06,456 [Process: 0] EPOCH 454:
2024-08-18 15:21:06,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9935e-01, 6.4080e-03, 6.1531e-03,  ..., 4.3890e-04,
          6.0881e-04, 9.6782e-01],
         [2.1723e-04, 6.4080e-03, 6.7589e-03,  ..., 4.3890e-04,
          6.0881e-04, 8.1308e-03],
         [2.1723e-04, 6.8018e-03, 6.1531e-03,  ..., 9.9868e-01,
          9.9817e-01, 1.5919e-02],
         [2.1723e-04, 9.8038e-01, 9.8093e-01,  ..., 4.3890e-04,
          6.0881e-04, 8.1308e-03]],
        [[9.9974e-01, 1.9263e-03, 3.1430e-03,  ..., 1.0690e-03,
          1.9472e-01, 1.0003e-03],
         [8.5705e-05, 1.9263e-03, 3.1430e-03,  ..., 1.0690e-03,
          1.5526e-01, 1.3194e-03],
         [8.5705e-05, 1.9263e-03, 3.1430e-03,  ..., 9.9679e-01,
          4.4753e-01, 9.9668e-01],
         [8.5705e-05, 9.9422e-01, 9.9057e-01,  ..., 1.0690e-03,
          2.0248e-01, 1.0003e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7004e-03, 3.6864e-04, 9.9705e-01,  ..., 1.3551e-03,
          1.6738e-04, 3.7475e-03],
         [1.7004e-03, 3.6864e-04, 9.2063e-04,  ..., 1.3551e-03,
          1.6738e-04, 3.7475e-03],
         [9.9490e-01, 3.6864e-04, 9.2063e-04,  ..., 9.9593e-01,
          1.6738e-04, 9.8876e-01],
         [1.7004e-03, 9.9889e-01, 1.1116e-03,  ..., 1.3551e-03,
          9.9950e-01, 3.7475e-03]],
        [[4.9495e-03, 1.3237e-04, 3.3882e-04,  ..., 1.4955e-04,
          2.1836e-04, 1.5783e-03],
         [4.9495e-03, 1.3237e-04, 3.3882e-04,  ..., 1.4955e-04,
          2.1836e-04, 1.5783e-03],
         [9.8515e-01, 1.3237e-04, 3.3882e-04,  ..., 1.4955e-04,
          2.1836e-04, 9.9527e-01],
         [4.9495e-03, 9.9960e-01, 9.9898e-01,  ..., 9.9955e-01,
          9.9934e-01, 1.5783e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 455:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9962e-01, 9.4069e-03, 6.0593e-03,  ..., 1.1633e-04,
          2.5307e-04, 9.9710e-01],
         [1.2559e-04, 8.3256e-03, 6.0593e-03,  ..., 1.1633e-04,
          2.5307e-04, 9.6590e-04],
         [1.2559e-04, 1.0034e-02, 6.0698e-03,  ..., 9.9965e-01,
          9.9924e-01, 9.6590e-04],
         [1.2559e-04, 9.7223e-01, 9.8181e-01,  ..., 1.1633e-04,
          2.5307e-04, 9.6590e-04]],
        [[9.9775e-01, 4.2945e-03, 7.9594e-03,  ..., 2.0371e-04,
          1.3487e-01, 4.1021e-04],
         [7.0110e-04, 4.4348e-03, 8.1588e-03,  ..., 2.0371e-04,
          1.5111e-01, 4.1021e-04],
         [8.4392e-04, 4.2945e-03, 7.9594e-03,  ..., 9.9939e-01,
          5.8420e-01, 9.9877e-01],
         [7.0110e-04, 9.8698e-01, 9.7592e-01,  ..., 2.0371e-04,
          1.2983e-01, 4.1021e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2711e-03, 3.6193e-04, 9.8618e-01,  ..., 9.9550e-04,
          1.1392e-04, 5.4286e-03],
         [2.2711e-03, 3.6193e-04, 4.3658e-03,  ..., 9.9550e-04,
          1.1392e-04, 5.4286e-03],
         [9.9319e-01, 3.6193e-04, 4.3658e-03,  ..., 9.9701e-01,
          1.1392e-04, 9.8260e-01],
         [2.2711e-03, 9.9891e-01, 5.0835e-03,  ..., 9.9550e-04,
          9.9966e-01, 6.5389e-03]],
        [[1.2673e-02, 2.5858e-04, 2.7209e-03,  ..., 4.7124e-05,
          2.0853e-04, 1.5091e-02],
         [1.2673e-02, 2.5858e-04, 2.7209e-03,  ..., 4.7124e-05,
          2.0853e-04, 1.1595e-02],
         [9.5420e-01, 2.5858e-04, 2.7209e-03,  ..., 4.7124e-05,
          2.0853e-04, 9.5627e-01],
         [2.0454e-02, 9.9922e-01, 9.9184e-01,  ..., 9.9986e-01,
          9.9937e-01, 1.7040e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 456:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:07,576 [Process: 0] Synchronize training processes
2024-08-18 15:21:07,577 [Process: 0] Evaluating...
2024-08-18 15:21:07,578 [Process: 0] EPOCH 455:
2024-08-18 15:21:07,580 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:08,702 [Process: 0] Synchronize training processes
2024-08-18 15:21:08,702 [Process: 0] Evaluating...
2024-08-18 15:21:08,704 [Process: 0] EPOCH 456:
2024-08-18 15:21:08,706 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9855e-01, 5.8390e-03, 2.5917e-03,  ..., 1.1017e-03,
          8.7385e-04, 9.9815e-01],
         [4.8464e-04, 5.8390e-03, 2.5917e-03,  ..., 1.1017e-03,
          8.7385e-04, 6.1768e-04],
         [4.8464e-04, 5.8390e-03, 2.5917e-03,  ..., 9.9669e-01,
          9.9738e-01, 6.1768e-04],
         [4.8464e-04, 9.8248e-01, 9.9222e-01,  ..., 1.1017e-03,
          8.7385e-04, 6.1768e-04]],
        [[9.9976e-01, 5.5068e-03, 1.3539e-03,  ..., 1.9805e-03,
          1.2334e-01, 7.0488e-05],
         [7.8555e-05, 6.5497e-03, 1.3539e-03,  ..., 1.9805e-03,
          1.1497e-01, 7.0488e-05],
         [7.8555e-05, 5.5068e-03, 1.3539e-03,  ..., 9.9406e-01,
          6.3981e-01, 9.9979e-01],
         [7.8555e-05, 9.8244e-01, 9.9594e-01,  ..., 1.9805e-03,
          1.2189e-01, 7.0488e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3296e-03, 5.1371e-04, 9.8810e-01,  ..., 2.6006e-03,
          3.9070e-04, 1.6757e-03],
         [3.3296e-03, 5.1371e-04, 3.6183e-03,  ..., 2.6006e-03,
          3.9070e-04, 1.6757e-03],
         [9.8978e-01, 5.1371e-04, 3.6183e-03,  ..., 9.9220e-01,
          3.9070e-04, 9.9497e-01],
         [3.5613e-03, 9.9846e-01, 4.6665e-03,  ..., 2.6006e-03,
          9.9883e-01, 1.6757e-03]],
        [[6.2690e-03, 1.3889e-04, 1.7676e-04,  ..., 7.8810e-05,
          2.3649e-04, 1.3143e-03],
         [6.2690e-03, 1.3889e-04, 1.7676e-04,  ..., 7.8810e-05,
          2.3649e-04, 1.3143e-03],
         [9.8025e-01, 1.3889e-04, 1.7676e-04,  ..., 7.8810e-05,
          2.3649e-04, 9.9606e-01],
         [7.2142e-03, 9.9958e-01, 9.9947e-01,  ..., 9.9976e-01,
          9.9929e-01, 1.3143e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 457:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9976e-01, 2.7202e-03, 4.1194e-03,  ..., 1.2545e-03,
          6.7908e-04, 9.9942e-01],
         [7.9006e-05, 2.7202e-03, 4.9584e-03,  ..., 1.5537e-03,
          6.7908e-04, 1.9470e-04],
         [7.9006e-05, 2.7202e-03, 4.1194e-03,  ..., 9.9594e-01,
          9.9796e-01, 1.9470e-04],
         [7.9006e-05, 9.9184e-01, 9.8680e-01,  ..., 1.2545e-03,
          6.7908e-04, 1.9470e-04]],
        [[9.9796e-01, 5.4643e-03, 6.6540e-03,  ..., 1.3886e-03,
          1.2695e-01, 4.6281e-04],
         [6.8153e-04, 5.4643e-03, 6.6540e-03,  ..., 1.3886e-03,
          7.2331e-02, 4.6281e-04],
         [6.8153e-04, 6.2896e-03, 6.6540e-03,  ..., 9.9583e-01,
          6.7090e-01, 9.9861e-01],
         [6.8153e-04, 9.8278e-01, 9.8004e-01,  ..., 1.3886e-03,
          1.2983e-01, 4.6281e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:09,833 [Process: 0] Synchronize training processes
2024-08-18 15:21:09,833 [Process: 0] Evaluating...
2024-08-18 15:21:09,835 [Process: 0] EPOCH 457:
2024-08-18 15:21:09,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:10,969 [Process: 0] Synchronize training processes
2024-08-18 15:21:10,970 [Process: 0] Evaluating...
2024-08-18 15:21:10,971 [Process: 0] EPOCH 458:
2024-08-18 15:21:10,973 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1428e-02, 3.7651e-04, 9.9404e-01,  ..., 1.4470e-03,
          9.7743e-04, 6.6421e-03],
         [1.0350e-02, 3.7651e-04, 1.5443e-03,  ..., 1.4470e-03,
          9.7743e-04, 7.1416e-03],
         [9.6426e-01, 3.7651e-04, 1.5443e-03,  ..., 9.9566e-01,
          9.7743e-04, 9.7709e-01],
         [1.3965e-02, 9.9887e-01, 2.8705e-03,  ..., 1.4470e-03,
          9.9707e-01, 9.1283e-03]],
        [[1.2201e-03, 3.7648e-04, 1.1222e-04,  ..., 3.3528e-05,
          1.1780e-04, 1.8567e-03],
         [1.2201e-03, 3.7648e-04, 1.1222e-04,  ..., 3.3528e-05,
          1.1780e-04, 1.8567e-03],
         [9.9634e-01, 3.7648e-04, 1.1222e-04,  ..., 3.3528e-05,
          1.1780e-04, 9.9443e-01],
         [1.2201e-03, 9.9887e-01, 9.9966e-01,  ..., 9.9990e-01,
          9.9965e-01, 1.8567e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 458:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 4.4036e-03, 4.6879e-03,  ..., 6.9393e-04,
          7.6537e-04, 9.8652e-01],
         [6.1187e-05, 5.6269e-03, 5.4344e-03,  ..., 6.9393e-04,
          7.6537e-04, 5.2803e-03],
         [6.1187e-05, 4.4036e-03, 4.6879e-03,  ..., 9.9792e-01,
          9.9770e-01, 4.1228e-03],
         [6.1187e-05, 9.8557e-01, 9.8519e-01,  ..., 6.9393e-04,
          7.6537e-04, 4.0762e-03]],
        [[9.9901e-01, 4.1072e-03, 1.3920e-03,  ..., 5.0099e-04,
          1.7368e-01, 3.8545e-04],
         [3.3103e-04, 4.1072e-03, 1.3920e-03,  ..., 5.0099e-04,
          1.6879e-01, 3.8545e-04],
         [3.3103e-04, 4.1072e-03, 1.3920e-03,  ..., 9.9850e-01,
          4.6010e-01, 9.9884e-01],
         [3.3103e-04, 9.8768e-01, 9.9582e-01,  ..., 5.0099e-04,
          1.9743e-01, 3.8545e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4169e-03, 3.6277e-04, 9.9929e-01,  ..., 3.9272e-03,
          3.6067e-03, 3.1566e-03],
         [1.4169e-03, 3.6277e-04, 2.3816e-04,  ..., 3.9272e-03,
          3.6067e-03, 3.1566e-03],
         [9.9575e-01, 3.6277e-04, 2.3816e-04,  ..., 9.8822e-01,
          3.6067e-03, 9.9053e-01],
         [1.4169e-03, 9.9891e-01, 2.3816e-04,  ..., 3.9272e-03,
          9.8918e-01, 3.1566e-03]],
        [[6.1350e-03, 2.5962e-04, 5.2880e-05,  ..., 2.2804e-05,
          2.1476e-03, 4.3820e-03],
         [6.1350e-03, 2.5962e-04, 5.2880e-05,  ..., 2.2804e-05,
          2.1476e-03, 4.3820e-03],
         [9.8121e-01, 2.5962e-04, 5.2880e-05,  ..., 2.2804e-05,
          2.1476e-03, 9.8654e-01],
         [6.5176e-03, 9.9922e-01, 9.9984e-01,  ..., 9.9993e-01,
          9.9356e-01, 4.6970e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 459:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9990e-01, 1.0289e-03, 1.9588e-03,  ..., 1.9043e-04,
          3.1645e-04, 9.9522e-01],
         [3.3248e-05, 1.0289e-03, 1.9588e-03,  ..., 1.9043e-04,
          3.1645e-04, 1.5932e-03],
         [3.3248e-05, 1.0289e-03, 1.9588e-03,  ..., 9.9943e-01,
          9.9905e-01, 1.5932e-03],
         [3.3248e-05, 9.9691e-01, 9.9412e-01,  ..., 1.9043e-04,
          3.1645e-04, 1.5932e-03]],
        [[9.9877e-01, 1.4483e-03, 1.9734e-03,  ..., 3.2603e-04,
          2.0728e-01, 9.1303e-04],
         [4.0890e-04, 1.4483e-03, 1.9734e-03,  ..., 3.2603e-04,
          1.1831e-01, 9.5646e-04],
         [4.0890e-04, 1.4483e-03, 1.9734e-03,  ..., 9.9902e-01,
          5.3866e-01, 9.9722e-01],
         [4.0890e-04, 9.9566e-01, 9.9408e-01,  ..., 3.2603e-04,
          1.3575e-01, 9.1303e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:12,098 [Process: 0] Synchronize training processes
2024-08-18 15:21:12,099 [Process: 0] Evaluating...
2024-08-18 15:21:12,100 [Process: 0] EPOCH 459:
2024-08-18 15:21:12,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:13,233 [Process: 0] Synchronize training processes
2024-08-18 15:21:13,234 [Process: 0] Evaluating...
2024-08-18 15:21:13,235 [Process: 0] EPOCH 460:
2024-08-18 15:21:13,237 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2067e-03, 3.9563e-05, 9.9666e-01,  ..., 1.3667e-03,
          3.1306e-03, 4.2456e-03],
         [2.2067e-03, 3.9563e-05, 1.0903e-03,  ..., 1.3667e-03,
          3.1306e-03, 4.2456e-03],
         [9.9338e-01, 3.9563e-05, 1.0903e-03,  ..., 9.9590e-01,
          3.1306e-03, 9.8686e-01],
         [2.2067e-03, 9.9988e-01, 1.1630e-03,  ..., 1.3667e-03,
          9.9061e-01, 4.6476e-03]],
        [[1.9037e-03, 2.2128e-03, 5.6720e-04,  ..., 1.3724e-04,
          2.7325e-03, 2.0678e-03],
         [1.9037e-03, 2.2128e-03, 5.6720e-04,  ..., 1.3724e-04,
          2.7325e-03, 2.0678e-03],
         [9.9429e-01, 2.2128e-03, 5.6720e-04,  ..., 1.3724e-04,
          2.7325e-03, 9.9380e-01],
         [1.9037e-03, 9.9336e-01, 9.9830e-01,  ..., 9.9959e-01,
          9.9180e-01, 2.0678e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 460:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9958e-01, 4.8167e-03, 9.5592e-03,  ..., 3.1251e-04,
          1.3531e-04, 9.9940e-01],
         [1.3981e-04, 4.8167e-03, 8.9096e-03,  ..., 3.1251e-04,
          1.3531e-04, 1.9897e-04],
         [1.3981e-04, 4.8167e-03, 1.3116e-02,  ..., 9.9906e-01,
          9.9959e-01, 1.9897e-04],
         [1.3981e-04, 9.8555e-01, 9.6841e-01,  ..., 3.1251e-04,
          1.3531e-04, 1.9897e-04]],
        [[9.9946e-01, 2.8792e-03, 4.2480e-03,  ..., 6.9275e-04,
          2.1721e-01, 2.4770e-04],
         [1.8056e-04, 2.8792e-03, 4.2480e-03,  ..., 6.9275e-04,
          1.7453e-01, 2.4770e-04],
         [1.8056e-04, 2.8792e-03, 4.2480e-03,  ..., 9.9792e-01,
          4.1382e-01, 9.9926e-01],
         [1.8056e-04, 9.9136e-01, 9.8726e-01,  ..., 6.9275e-04,
          1.9444e-01, 2.4770e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7272e-03, 8.8208e-04, 9.8487e-01,  ..., 2.5309e-03,
          1.4263e-03, 2.8008e-03],
         [2.7272e-03, 8.8208e-04, 4.5889e-03,  ..., 2.5309e-03,
          1.4263e-03, 2.8008e-03],
         [9.9182e-01, 8.8208e-04, 4.5889e-03,  ..., 9.9241e-01,
          1.4263e-03, 9.9160e-01],
         [2.7272e-03, 9.9735e-01, 5.9515e-03,  ..., 2.5309e-03,
          9.9572e-01, 2.8008e-03]],
        [[6.1940e-03, 8.3355e-05, 1.5979e-03,  ..., 1.7392e-04,
          2.4068e-04, 1.4251e-03],
         [5.6915e-03, 8.3355e-05, 1.5979e-03,  ..., 1.7392e-04,
          2.4068e-04, 1.4251e-03],
         [9.8242e-01, 8.3355e-05, 1.5979e-03,  ..., 1.7392e-04,
          2.4068e-04, 9.9572e-01],
         [5.6915e-03, 9.9975e-01, 9.9521e-01,  ..., 9.9948e-01,
          9.9928e-01, 1.4251e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 461:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9983e-01, 5.4388e-03, 1.0176e-03,  ..., 1.2074e-03,
          3.0027e-04, 9.9899e-01],
         [5.5344e-05, 5.4388e-03, 1.0176e-03,  ..., 1.6799e-03,
          3.0027e-04, 3.3679e-04],
         [5.5344e-05, 5.6523e-03, 1.0176e-03,  ..., 9.9591e-01,
          9.9910e-01, 3.3679e-04],
         [5.5344e-05, 9.8347e-01, 9.9695e-01,  ..., 1.2074e-03,
          3.0027e-04, 3.3679e-04]],
        [[9.9921e-01, 3.9549e-03, 3.6498e-03,  ..., 1.7312e-03,
          2.1370e-01, 4.6558e-04],
         [2.6170e-04, 3.9549e-03, 3.6498e-03,  ..., 1.7312e-03,
          1.9067e-01, 7.0101e-04],
         [2.6170e-04, 3.9549e-03, 3.6498e-03,  ..., 9.9481e-01,
          4.1691e-01, 9.9837e-01],
         [2.6170e-04, 9.8814e-01, 9.8905e-01,  ..., 1.7312e-03,
          1.7872e-01, 4.6558e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:14,366 [Process: 0] Synchronize training processes
2024-08-18 15:21:14,366 [Process: 0] Evaluating...
2024-08-18 15:21:14,368 [Process: 0] EPOCH 461:
2024-08-18 15:21:14,369 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:15,498 [Process: 0] Synchronize training processes
2024-08-18 15:21:15,498 [Process: 0] Evaluating...
2024-08-18 15:21:15,501 [Process: 0] EPOCH 462:
2024-08-18 15:21:15,503 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4413e-03, 7.6129e-04, 9.9475e-01,  ..., 8.0966e-04,
          8.1078e-03, 3.5426e-03],
         [1.4413e-03, 7.6129e-04, 1.5575e-03,  ..., 8.0966e-04,
          8.1078e-03, 3.5426e-03],
         [9.9568e-01, 7.6129e-04, 1.5575e-03,  ..., 9.9757e-01,
          8.1078e-03, 9.8935e-01],
         [1.4413e-03, 9.9772e-01, 2.1365e-03,  ..., 8.0966e-04,
          9.7568e-01, 3.5618e-03]],
        [[1.4740e-03, 6.0840e-04, 3.0329e-04,  ..., 2.8324e-05,
          2.1897e-03, 7.5519e-03],
         [1.4740e-03, 6.0840e-04, 3.0329e-04,  ..., 2.8324e-05,
          2.1897e-03, 7.1724e-03],
         [9.9558e-01, 6.0840e-04, 3.0329e-04,  ..., 2.8324e-05,
          2.1897e-03, 9.7574e-01],
         [1.4740e-03, 9.9817e-01, 9.9909e-01,  ..., 9.9992e-01,
          9.9343e-01, 9.5336e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 462:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9979e-01, 7.7097e-04, 9.1529e-04,  ..., 7.7458e-04,
          5.3746e-03, 9.9857e-01],
         [6.9676e-05, 7.7097e-04, 9.1529e-04,  ..., 7.7458e-04,
          5.3746e-03, 4.7560e-04],
         [6.9676e-05, 7.7097e-04, 9.1529e-04,  ..., 9.9768e-01,
          9.8388e-01, 4.7560e-04],
         [6.9676e-05, 9.9769e-01, 9.9725e-01,  ..., 7.7458e-04,
          5.3746e-03, 4.7560e-04]],
        [[9.9698e-01, 4.1617e-03, 3.5500e-03,  ..., 4.0134e-03,
          1.7727e-01, 2.0396e-04],
         [1.2463e-03, 4.1617e-03, 3.5500e-03,  ..., 8.5558e-03,
          2.0633e-01, 2.0396e-04],
         [8.8509e-04, 4.1617e-03, 3.5500e-03,  ..., 9.8342e-01,
          4.2520e-01, 9.9939e-01],
         [8.8509e-04, 9.8751e-01, 9.8935e-01,  ..., 4.0134e-03,
          1.9120e-01, 2.0396e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3396e-03, 8.3561e-05, 9.9978e-01,  ..., 1.1146e-03,
          1.8537e-03, 3.7518e-03],
         [1.3396e-03, 8.3561e-05, 7.3342e-05,  ..., 1.1146e-03,
          1.8537e-03, 3.7518e-03],
         [9.9598e-01, 8.3561e-05, 7.3342e-05,  ..., 9.9666e-01,
          1.8537e-03, 9.8874e-01],
         [1.3396e-03, 9.9975e-01, 7.3342e-05,  ..., 1.1146e-03,
          9.9444e-01, 3.7518e-03]],
        [[4.2282e-04, 1.6761e-03, 4.2597e-04,  ..., 4.1847e-04,
          9.4592e-04, 3.1530e-03],
         [4.2282e-04, 1.6761e-03, 4.2597e-04,  ..., 4.6444e-04,
          9.4592e-04, 3.1530e-03],
         [9.9873e-01, 1.6761e-03, 4.2597e-04,  ..., 4.1847e-04,
          9.4592e-04, 9.9054e-01],
         [4.2282e-04, 9.9497e-01, 9.9872e-01,  ..., 9.9870e-01,
          9.9716e-01, 3.1530e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 463:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:16,622 [Process: 0] Synchronize training processes
2024-08-18 15:21:16,622 [Process: 0] Evaluating...
2024-08-18 15:21:16,624 [Process: 0] EPOCH 463:
2024-08-18 15:21:16,626 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9640e-01, 2.9536e-03, 3.4918e-03,  ..., 6.9790e-04,
          1.0053e-04, 9.9113e-01],
         [1.2002e-03, 2.9536e-03, 3.4918e-03,  ..., 6.9790e-04,
          1.0053e-04, 2.9553e-03],
         [1.2002e-03, 2.9536e-03, 3.7453e-03,  ..., 9.9791e-01,
          9.9970e-01, 2.9553e-03],
         [1.2002e-03, 9.9114e-01, 9.8927e-01,  ..., 6.9790e-04,
          1.0053e-04, 2.9553e-03]],
        [[9.9826e-01, 7.1071e-03, 4.3827e-03,  ..., 1.3354e-03,
          1.7099e-01, 1.9026e-03],
         [5.8066e-04, 7.1071e-03, 4.3827e-03,  ..., 1.3354e-03,
          1.2393e-01, 2.4447e-03],
         [5.8066e-04, 9.2778e-03, 4.3827e-03,  ..., 9.9599e-01,
          5.7797e-01, 9.9375e-01],
         [5.8066e-04, 9.7651e-01, 9.8685e-01,  ..., 1.3354e-03,
          1.2711e-01, 1.9026e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0042e-03, 7.2977e-04, 9.7460e-01,  ..., 7.4002e-03,
          1.9175e-04, 1.0902e-03],
         [1.0042e-03, 7.2977e-04, 4.8822e-03,  ..., 6.2683e-03,
          1.9175e-04, 1.0902e-03],
         [9.9699e-01, 7.2977e-04, 4.8822e-03,  ..., 9.8006e-01,
          1.9175e-04, 9.9673e-01],
         [1.0042e-03, 9.9781e-01, 1.5638e-02,  ..., 6.2683e-03,
          9.9942e-01, 1.0902e-03]],
        [[2.5630e-03, 7.2956e-04, 1.3159e-03,  ..., 2.5328e-04,
          1.4451e-02, 8.3771e-04],
         [2.5630e-03, 7.2956e-04, 1.3159e-03,  ..., 2.5328e-04,
          1.3770e-02, 8.3771e-04],
         [9.9231e-01, 7.2956e-04, 1.3159e-03,  ..., 2.5328e-04,
          1.3770e-02, 9.9749e-01],
         [2.5630e-03, 9.9781e-01, 9.9605e-01,  ..., 9.9924e-01,
          9.5801e-01, 8.3771e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 464:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9845e-01, 7.0892e-04, 1.5770e-03,  ..., 3.8014e-03,
          1.0381e-04, 9.5238e-01],
         [5.1562e-04, 7.0892e-04, 1.5770e-03,  ..., 4.2582e-03,
          1.0381e-04, 1.4860e-02],
         [5.1562e-04, 7.0892e-04, 1.5770e-03,  ..., 9.8814e-01,
          9.9969e-01, 2.2291e-02],
         [5.1562e-04, 9.9787e-01, 9.9527e-01,  ..., 3.8014e-03,
          1.0381e-04, 1.0464e-02]],
        [[9.9829e-01, 1.6001e-03, 8.0661e-04,  ..., 1.1717e-03,
          2.1013e-01, 2.7956e-04],
         [5.7080e-04, 1.6001e-03, 8.0661e-04,  ..., 1.1717e-03,
          1.2076e-01, 2.7956e-04],
         [5.7080e-04, 1.6001e-03, 8.0661e-04,  ..., 9.9648e-01,
          5.8257e-01, 9.9916e-01],
         [5.7080e-04, 9.9520e-01, 9.9758e-01,  ..., 1.1717e-03,
          8.6541e-02, 2.7956e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0850e-02, 9.6289e-05, 9.9797e-01,  ..., 8.7860e-03,
          2.0888e-03, 1.3729e-03],
         [1.0850e-02, 9.6289e-05, 6.7517e-04,  ..., 7.8182e-03,
          2.0888e-03, 1.3729e-03],
         [9.6259e-01, 9.6289e-05, 6.7517e-04,  ..., 9.7325e-01,
          2.0888e-03, 9.9588e-01],
         [1.5714e-02, 9.9971e-01, 6.7517e-04,  ..., 1.0146e-02,
          9.9373e-01, 1.3729e-03]],
        [[5.7411e-03, 4.8995e-04, 1.8887e-03,  ..., 2.0915e-04,
          7.9118e-02, 3.4046e-03],
         [5.7411e-03, 4.8995e-04, 1.8887e-03,  ..., 2.0915e-04,
          4.2304e-02, 3.4046e-03],
         [9.8235e-01, 4.8995e-04, 1.8887e-03,  ..., 2.0915e-04,
          9.8907e-02, 9.8979e-01],
         [6.1662e-03, 9.9853e-01, 9.9433e-01,  ..., 9.9937e-01,
          7.7967e-01, 3.4046e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:17,751 [Process: 0] Synchronize training processes
2024-08-18 15:21:17,751 [Process: 0] Evaluating...
2024-08-18 15:21:17,753 [Process: 0] EPOCH 464:
2024-08-18 15:21:17,755 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:18,879 [Process: 0] Synchronize training processes
2024-08-18 15:21:18,879 [Process: 0] Evaluating...
2024-08-18 15:21:18,881 [Process: 0] EPOCH 465:
2024-08-18 15:21:18,883 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 465:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9470e-01, 1.8826e-03, 1.5256e-03,  ..., 1.9048e-02,
          3.1076e-04, 9.9639e-01],
         [1.7681e-03, 1.8826e-03, 1.5256e-03,  ..., 1.9048e-02,
          3.1076e-04, 1.2018e-03],
         [1.7681e-03, 1.8826e-03, 1.5256e-03,  ..., 9.2686e-01,
          9.9907e-01, 1.2018e-03],
         [1.7681e-03, 9.9435e-01, 9.9542e-01,  ..., 3.5043e-02,
          3.1076e-04, 1.2018e-03]],
        [[9.9936e-01, 1.7422e-03, 2.2734e-03,  ..., 3.3483e-04,
          1.6581e-01, 1.6952e-04],
         [2.1410e-04, 1.7422e-03, 2.2734e-03,  ..., 3.3483e-04,
          1.4861e-01, 1.6952e-04],
         [2.1410e-04, 1.7422e-03, 2.2734e-03,  ..., 9.9900e-01,
          5.9032e-01, 9.9949e-01],
         [2.1410e-04, 9.9477e-01, 9.9318e-01,  ..., 3.3483e-04,
          9.5263e-02, 1.6952e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1064e-03, 4.0368e-05, 9.9819e-01,  ..., 1.5505e-03,
          2.7975e-04, 3.7920e-03],
         [4.1064e-03, 4.0368e-05, 6.0309e-04,  ..., 1.5505e-03,
          2.7975e-04, 3.7920e-03],
         [9.8768e-01, 4.0368e-05, 6.0309e-04,  ..., 9.9535e-01,
          2.7975e-04, 9.8862e-01],
         [4.1064e-03, 9.9988e-01, 6.0309e-04,  ..., 1.5505e-03,
          9.9916e-01, 3.7920e-03]],
        [[3.8515e-03, 1.8121e-04, 1.3131e-03,  ..., 2.3860e-04,
          8.0699e-01, 2.2809e-03],
         [3.8515e-03, 1.8121e-04, 1.3131e-03,  ..., 2.3860e-04,
          4.4677e-02, 2.2809e-03],
         [9.8840e-01, 1.8121e-04, 1.3131e-03,  ..., 2.3860e-04,
          7.4017e-02, 9.9316e-01],
         [3.8950e-03, 9.9946e-01, 9.9606e-01,  ..., 9.9928e-01,
          7.4320e-02, 2.2809e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 466:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9926e-01, 3.2905e-03, 3.8083e-03,  ..., 3.4443e-02,
          1.2441e-04, 9.9950e-01],
         [2.4665e-04, 3.2905e-03, 3.8083e-03,  ..., 3.0915e-02,
          1.2441e-04, 1.6565e-04],
         [2.4665e-04, 3.2905e-03, 4.3104e-03,  ..., 8.6017e-01,
          9.9963e-01, 1.6565e-04],
         [2.4665e-04, 9.9013e-01, 9.8807e-01,  ..., 7.4473e-02,
          1.2441e-04, 1.6565e-04]],
        [[9.9644e-01, 3.0550e-03, 2.9191e-03,  ..., 1.0035e-03,
          3.1065e-01, 6.3576e-04],
         [1.1865e-03, 3.0550e-03, 2.9191e-03,  ..., 1.0035e-03,
          1.4862e-01, 6.3576e-04],
         [1.1865e-03, 3.0550e-03, 2.9191e-03,  ..., 9.9699e-01,
          2.6983e-01, 9.9809e-01],
         [1.1865e-03, 9.9084e-01, 9.9124e-01,  ..., 1.0035e-03,
          2.7090e-01, 6.3576e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:20,013 [Process: 0] Synchronize training processes
2024-08-18 15:21:20,013 [Process: 0] Evaluating...
2024-08-18 15:21:20,015 [Process: 0] EPOCH 466:
2024-08-18 15:21:20,017 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:21,145 [Process: 0] Synchronize training processes
2024-08-18 15:21:21,145 [Process: 0] Evaluating...
2024-08-18 15:21:21,147 [Process: 0] EPOCH 467:
2024-08-18 15:21:21,149 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4984e-03, 1.2185e-04, 9.9896e-01,  ..., 2.9585e-03,
          5.5203e-03, 5.2195e-03],
         [3.4984e-03, 1.2185e-04, 2.3363e-04,  ..., 2.9585e-03,
          5.5203e-03, 4.4001e-03],
         [9.8950e-01, 1.2185e-04, 2.3363e-04,  ..., 9.9112e-01,
          5.5203e-03, 9.8598e-01],
         [3.4984e-03, 9.9963e-01, 5.6823e-04,  ..., 2.9585e-03,
          9.8344e-01, 4.4001e-03]],
        [[5.6227e-03, 8.9015e-04, 2.4748e-03,  ..., 4.7419e-04,
          9.9479e-01, 7.8583e-03],
         [5.6227e-03, 8.9015e-04, 2.4748e-03,  ..., 4.7419e-04,
          1.7358e-03, 7.8583e-03],
         [9.8246e-01, 8.9015e-04, 2.4748e-03,  ..., 4.7419e-04,
          1.7358e-03, 9.7510e-01],
         [6.2945e-03, 9.9733e-01, 9.9258e-01,  ..., 9.9858e-01,
          1.7358e-03, 9.1852e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 467:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9977e-01, 6.7525e-03, 4.1639e-03,  ..., 1.4684e-02,
          6.0757e-04, 9.9593e-01],
         [7.8010e-05, 6.8577e-03, 4.1639e-03,  ..., 1.4684e-02,
          6.0757e-04, 1.3576e-03],
         [7.8010e-05, 6.7525e-03, 4.2255e-03,  ..., 9.1963e-01,
          9.9818e-01, 1.3576e-03],
         [7.8010e-05, 9.7964e-01, 9.8745e-01,  ..., 5.1002e-02,
          6.0757e-04, 1.3576e-03]],
        [[9.9746e-01, 1.4600e-03, 4.1071e-03,  ..., 1.3520e-04,
          3.3409e-01, 5.5974e-04],
         [8.4698e-04, 1.4600e-03, 4.1071e-03,  ..., 1.3520e-04,
          1.3170e-01, 5.5974e-04],
         [8.4698e-04, 1.4600e-03, 4.1071e-03,  ..., 9.9959e-01,
          3.7156e-01, 9.9832e-01],
         [8.4698e-04, 9.9562e-01, 9.8768e-01,  ..., 1.3520e-04,
          1.6265e-01, 5.5974e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0167e-03, 3.0425e-04, 9.9733e-01,  ..., 6.1023e-03,
          4.4299e-04, 3.2736e-03],
         [4.0167e-03, 3.0425e-04, 8.8935e-04,  ..., 6.1023e-03,
          4.4299e-04, 3.2736e-03],
         [9.8795e-01, 3.0425e-04, 8.8935e-04,  ..., 9.8021e-01,
          4.4299e-04, 9.9018e-01],
         [4.0167e-03, 9.9909e-01, 8.8935e-04,  ..., 7.5901e-03,
          9.9867e-01, 3.2736e-03]],
        [[4.5385e-03, 2.6913e-03, 4.4446e-04,  ..., 2.8108e-03,
          9.9150e-01, 2.4772e-03],
         [4.5385e-03, 2.6913e-03, 4.4446e-04,  ..., 2.8108e-03,
          2.8915e-03, 2.4772e-03],
         [9.8638e-01, 2.6913e-03, 4.4446e-04,  ..., 2.8108e-03,
          2.8018e-03, 9.9257e-01],
         [4.5385e-03, 9.9193e-01, 9.9867e-01,  ..., 9.9157e-01,
          2.8018e-03, 2.4772e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 468:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9785e-01, 1.4098e-02, 3.1883e-03,  ..., 2.1409e-02,
          1.6842e-04, 9.9941e-01],
         [7.1681e-04, 1.8019e-02, 3.1883e-03,  ..., 1.9419e-02,
          1.6842e-04, 1.9650e-04],
         [7.1681e-04, 2.3150e-02, 3.1883e-03,  ..., 9.3615e-01,
          9.9949e-01, 1.9650e-04],
         [7.1681e-04, 9.4473e-01, 9.9044e-01,  ..., 2.3019e-02,
          1.6842e-04, 1.9650e-04]],
        [[9.6168e-01, 1.3464e-03, 3.8417e-03,  ..., 7.9415e-04,
          1.3184e-01, 1.0052e-03],
         [8.1587e-03, 1.3464e-03, 3.8417e-03,  ..., 7.9415e-04,
          1.1886e-01, 1.0052e-03],
         [2.2001e-02, 1.3464e-03, 5.3494e-03,  ..., 9.9762e-01,
          6.5714e-01, 9.9698e-01],
         [8.1587e-03, 9.9596e-01, 9.8697e-01,  ..., 7.9415e-04,
          9.2158e-02, 1.0052e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:22,276 [Process: 0] Synchronize training processes
2024-08-18 15:21:22,277 [Process: 0] Evaluating...
2024-08-18 15:21:22,278 [Process: 0] EPOCH 468:
2024-08-18 15:21:22,280 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:23,395 [Process: 0] Synchronize training processes
2024-08-18 15:21:23,395 [Process: 0] Evaluating...
2024-08-18 15:21:23,397 [Process: 0] EPOCH 469:
2024-08-18 15:21:23,399 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6873e-03, 4.1367e-04, 9.2674e-01,  ..., 4.1449e-03,
          8.6743e-04, 7.9678e-03],
         [2.6873e-03, 4.1367e-04, 1.3846e-02,  ..., 4.1449e-03,
          8.6743e-04, 7.7067e-03],
         [9.9194e-01, 4.1367e-04, 1.3846e-02,  ..., 9.8757e-01,
          8.6743e-04, 9.7573e-01],
         [2.6873e-03, 9.9876e-01, 4.5571e-02,  ..., 4.1449e-03,
          9.9740e-01, 8.5972e-03]],
        [[4.0521e-03, 8.1156e-04, 5.4709e-04,  ..., 6.6705e-04,
          9.9008e-01, 4.5900e-03],
         [4.0521e-03, 8.1156e-04, 5.4709e-04,  ..., 6.6705e-04,
          3.4949e-03, 4.5900e-03],
         [9.8784e-01, 8.1156e-04, 5.4709e-04,  ..., 6.6705e-04,
          3.2109e-03, 9.8623e-01],
         [4.0521e-03, 9.9757e-01, 9.9836e-01,  ..., 9.9800e-01,
          3.2109e-03, 4.5910e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 469:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9876e-01, 1.5378e-03, 6.5827e-03,  ..., 2.7774e-04,
          4.0572e-04, 9.9955e-01],
         [4.1455e-04, 1.5378e-03, 6.5827e-03,  ..., 2.7774e-04,
          4.0572e-04, 1.4965e-04],
         [4.1455e-04, 1.5378e-03, 6.5827e-03,  ..., 9.9917e-01,
          9.9878e-01, 1.4965e-04],
         [4.1455e-04, 9.9539e-01, 9.8025e-01,  ..., 2.7774e-04,
          4.0572e-04, 1.4965e-04]],
        [[9.9934e-01, 2.5219e-03, 3.0329e-03,  ..., 1.4125e-03,
          3.0320e-01, 4.8394e-04],
         [2.2012e-04, 2.5219e-03, 3.0834e-03,  ..., 1.4125e-03,
          1.5810e-01, 4.8394e-04],
         [2.2012e-04, 2.5219e-03, 3.0329e-03,  ..., 9.9576e-01,
          2.1268e-01, 9.9855e-01],
         [2.2012e-04, 9.9243e-01, 9.9085e-01,  ..., 1.4125e-03,
          3.2602e-01, 4.8394e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3202e-03, 2.0080e-04, 9.9754e-01,  ..., 1.8673e-03,
          1.3492e-03, 1.0216e-03],
         [2.3202e-03, 2.0080e-04, 7.2150e-04,  ..., 1.8673e-03,
          1.3492e-03, 1.0216e-03],
         [9.9304e-01, 2.0080e-04, 7.2150e-04,  ..., 9.9440e-01,
          1.3492e-03, 9.9694e-01],
         [2.3202e-03, 9.9940e-01, 1.0177e-03,  ..., 1.8673e-03,
          9.9595e-01, 1.0216e-03]],
        [[1.7138e-03, 4.1286e-04, 1.6696e-03,  ..., 9.2082e-04,
          9.9095e-01, 9.3516e-04],
         [1.7138e-03, 4.1286e-04, 1.6696e-03,  ..., 1.1074e-03,
          3.0161e-03, 9.3516e-04],
         [9.9486e-01, 4.1286e-04, 1.6696e-03,  ..., 9.2082e-04,
          3.0161e-03, 9.9719e-01],
         [1.7138e-03, 9.9876e-01, 9.9499e-01,  ..., 9.9705e-01,
          3.0161e-03, 9.3516e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 470:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:24,529 [Process: 0] Synchronize training processes
2024-08-18 15:21:24,529 [Process: 0] Evaluating...
2024-08-18 15:21:24,531 [Process: 0] EPOCH 470:
2024-08-18 15:21:24,533 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9925e-01, 3.2307e-03, 1.0670e-02,  ..., 1.3157e-04,
          1.1802e-02, 9.8721e-01],
         [2.4911e-04, 3.2307e-03, 1.0950e-02,  ..., 1.3157e-04,
          1.1802e-02, 5.3756e-03],
         [2.4911e-04, 3.2307e-03, 1.3269e-02,  ..., 9.9961e-01,
          9.6136e-01, 3.7278e-03],
         [2.4911e-04, 9.9031e-01, 9.6511e-01,  ..., 1.3157e-04,
          1.5032e-02, 3.6837e-03]],
        [[9.9938e-01, 2.5305e-03, 7.5308e-03,  ..., 2.7159e-04,
          2.6870e-01, 2.7940e-03],
         [2.0794e-04, 2.5305e-03, 8.5162e-03,  ..., 2.7159e-04,
          2.9158e-01, 4.4900e-03],
         [2.0794e-04, 2.5305e-03, 7.5308e-03,  ..., 9.9919e-01,
          2.6816e-01, 9.8992e-01],
         [2.0794e-04, 9.9241e-01, 9.7642e-01,  ..., 2.7159e-04,
          1.7156e-01, 2.7940e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9771e-04, 2.4238e-04, 9.9520e-01,  ..., 8.7837e-03,
          5.6468e-04, 6.9663e-04],
         [9.9771e-04, 2.4238e-04, 1.5188e-03,  ..., 7.1754e-03,
          5.6468e-04, 6.9663e-04],
         [9.9701e-01, 2.4238e-04, 1.5188e-03,  ..., 9.7587e-01,
          5.6468e-04, 9.9791e-01],
         [9.9771e-04, 9.9927e-01, 1.7588e-03,  ..., 8.1668e-03,
          9.9831e-01, 6.9663e-04]],
        [[4.1295e-03, 2.7473e-04, 2.1816e-04,  ..., 5.4112e-04,
          9.9672e-01, 1.5912e-02],
         [4.1295e-03, 2.7473e-04, 2.1816e-04,  ..., 5.4112e-04,
          1.0946e-03, 1.4720e-02],
         [9.8761e-01, 2.7473e-04, 2.1816e-04,  ..., 5.4112e-04,
          1.0946e-03, 9.5078e-01],
         [4.1295e-03, 9.9918e-01, 9.9935e-01,  ..., 9.9838e-01,
          1.0946e-03, 1.8591e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 471:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9966e-01, 2.8520e-03, 6.9993e-03,  ..., 1.1564e-03,
          1.5868e-02, 9.9929e-01],
         [1.1255e-04, 2.8520e-03, 6.9993e-03,  ..., 1.1564e-03,
          1.6435e-02, 2.3727e-04],
         [1.1255e-04, 2.8520e-03, 7.6265e-03,  ..., 9.9653e-01,
          9.3820e-01, 2.3727e-04],
         [1.1255e-04, 9.9144e-01, 9.7837e-01,  ..., 1.1564e-03,
          2.9500e-02, 2.3727e-04]],
        [[9.9818e-01, 3.1415e-03, 2.2789e-03,  ..., 6.0258e-04,
          1.4766e-01, 2.0680e-04],
         [6.0785e-04, 3.1415e-03, 2.2789e-03,  ..., 6.0258e-04,
          1.6300e-01, 2.0680e-04],
         [6.0785e-04, 3.1415e-03, 2.2789e-03,  ..., 9.9819e-01,
          5.7785e-01, 9.9938e-01],
         [6.0785e-04, 9.9058e-01, 9.9316e-01,  ..., 6.0258e-04,
          1.1149e-01, 2.0680e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2979e-03, 1.0270e-04, 9.9730e-01,  ..., 2.3325e-03,
          2.1889e-04, 2.3976e-03],
         [1.2979e-03, 1.0270e-04, 8.9855e-04,  ..., 2.3325e-03,
          2.1889e-04, 2.3976e-03],
         [9.9611e-01, 1.0270e-04, 8.9855e-04,  ..., 9.9300e-01,
          2.1889e-04, 9.9281e-01],
         [1.2979e-03, 9.9969e-01, 8.9855e-04,  ..., 2.3325e-03,
          9.9934e-01, 2.3976e-03]],
        [[3.5656e-03, 7.2693e-04, 4.4486e-04,  ..., 1.4810e-03,
          9.9450e-01, 3.5186e-03],
         [3.5656e-03, 7.2693e-04, 4.4486e-04,  ..., 1.4810e-03,
          1.8350e-03, 3.5186e-03],
         [9.8930e-01, 7.2693e-04, 4.4486e-04,  ..., 1.4810e-03,
          1.8350e-03, 9.8944e-01],
         [3.5656e-03, 9.9782e-01, 9.9867e-01,  ..., 9.9556e-01,
          1.8350e-03, 3.5186e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 472:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:25,658 [Process: 0] Synchronize training processes
2024-08-18 15:21:25,658 [Process: 0] Evaluating...
2024-08-18 15:21:25,660 [Process: 0] EPOCH 471:
2024-08-18 15:21:25,662 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:26,784 [Process: 0] Synchronize training processes
2024-08-18 15:21:26,784 [Process: 0] Evaluating...
2024-08-18 15:21:26,788 [Process: 0] EPOCH 472:
2024-08-18 15:21:26,790 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 1.1219e-03, 1.1691e-03,  ..., 8.1504e-04,
          1.2384e-02, 9.9917e-01],
         [4.9115e-05, 1.1219e-03, 1.1691e-03,  ..., 8.1504e-04,
          1.2384e-02, 2.7691e-04],
         [4.9115e-05, 1.1219e-03, 1.1691e-03,  ..., 9.9755e-01,
          9.4727e-01, 2.7691e-04],
         [4.9115e-05, 9.9663e-01, 9.9649e-01,  ..., 8.1504e-04,
          2.7966e-02, 2.7691e-04]],
        [[9.9796e-01, 1.6629e-03, 4.2875e-03,  ..., 4.1637e-04,
          2.8644e-01, 2.2677e-04],
         [6.7918e-04, 1.6629e-03, 4.2875e-03,  ..., 4.1637e-04,
          1.4718e-01, 2.2677e-04],
         [6.7918e-04, 1.6629e-03, 4.2875e-03,  ..., 9.9875e-01,
          3.7255e-01, 9.9932e-01],
         [6.7918e-04, 9.9501e-01, 9.8714e-01,  ..., 4.1637e-04,
          1.9383e-01, 2.2677e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1544e-03, 1.1042e-04, 9.9972e-01,  ..., 5.5383e-03,
          6.7899e-05, 1.7805e-03],
         [2.1544e-03, 1.1042e-04, 9.3831e-05,  ..., 5.5383e-03,
          6.7899e-05, 1.7805e-03],
         [9.9354e-01, 1.1042e-04, 9.3831e-05,  ..., 9.8226e-01,
          6.7899e-05, 9.9466e-01],
         [2.1544e-03, 9.9967e-01, 9.4331e-05,  ..., 6.6654e-03,
          9.9980e-01, 1.7805e-03]],
        [[4.7402e-03, 3.7425e-04, 6.4740e-04,  ..., 8.3766e-05,
          9.9893e-01, 1.2005e-03],
         [4.7402e-03, 3.7425e-04, 6.4740e-04,  ..., 8.3766e-05,
          3.5594e-04, 1.2005e-03],
         [9.8533e-01, 3.7425e-04, 6.4740e-04,  ..., 8.3766e-05,
          3.5594e-04, 9.9640e-01],
         [5.1868e-03, 9.9888e-01, 9.9806e-01,  ..., 9.9975e-01,
          3.5594e-04, 1.2005e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 473:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9365e-01, 9.0065e-03, 5.5244e-03,  ..., 2.5143e-04,
          9.0221e-03, 9.9116e-01],
         [2.1174e-03, 9.9457e-03, 5.5244e-03,  ..., 2.5143e-04,
          1.1441e-02, 2.9482e-03],
         [2.1174e-03, 1.2629e-02, 8.7219e-03,  ..., 9.9925e-01,
          9.6826e-01, 2.9482e-03],
         [2.1174e-03, 9.6842e-01, 9.8023e-01,  ..., 2.5143e-04,
          1.1276e-02, 2.9482e-03]],
        [[9.9761e-01, 1.5343e-03, 2.5075e-03,  ..., 2.1943e-03,
          2.6155e-01, 1.3025e-04],
         [7.9586e-04, 1.5343e-03, 2.5075e-03,  ..., 2.1943e-03,
          2.1455e-01, 1.3025e-04],
         [7.9586e-04, 1.5343e-03, 2.5075e-03,  ..., 9.9342e-01,
          3.3212e-01, 9.9961e-01],
         [7.9586e-04, 9.9540e-01, 9.9248e-01,  ..., 2.1943e-03,
          1.9177e-01, 1.3025e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:21:27,920 [Process: 0] Synchronize training processes
2024-08-18 15:21:27,920 [Process: 0] Evaluating...
2024-08-18 15:21:27,922 [Process: 0] EPOCH 473:
2024-08-18 15:21:27,924 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:29,052 [Process: 0] Synchronize training processes
2024-08-18 15:21:29,052 [Process: 0] Evaluating...
2024-08-18 15:21:29,054 [Process: 0] EPOCH 474:
2024-08-18 15:21:29,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3571e-03, 3.4337e-05, 9.9031e-01,  ..., 2.4105e-03,
          9.5942e-05, 1.0371e-03],
         [1.3571e-03, 3.4337e-05, 2.7536e-03,  ..., 2.4105e-03,
          9.5942e-05, 1.0371e-03],
         [9.9593e-01, 3.4337e-05, 2.7536e-03,  ..., 9.9277e-01,
          9.5942e-05, 9.9689e-01],
         [1.3571e-03, 9.9990e-01, 4.1861e-03,  ..., 2.4105e-03,
          9.9971e-01, 1.0371e-03]],
        [[2.8376e-03, 7.7884e-05, 1.0115e-03,  ..., 2.0139e-03,
          9.9791e-01, 2.2802e-03],
         [2.8376e-03, 7.7884e-05, 1.0115e-03,  ..., 2.0139e-03,
          7.5958e-04, 2.2802e-03],
         [9.9149e-01, 7.7884e-05, 1.0115e-03,  ..., 2.0139e-03,
          6.6765e-04, 9.9316e-01],
         [2.8376e-03, 9.9977e-01, 9.9697e-01,  ..., 9.9396e-01,
          6.6765e-04, 2.2802e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 474:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9759e-01, 1.5446e-03, 7.0744e-03,  ..., 4.4118e-04,
          2.8537e-03, 9.9778e-01],
         [8.0374e-04, 1.5446e-03, 8.4688e-03,  ..., 4.4118e-04,
          2.8537e-03, 7.3937e-04],
         [8.0374e-04, 1.5446e-03, 7.4744e-03,  ..., 9.9868e-01,
          9.9144e-01, 7.3937e-04],
         [8.0374e-04, 9.9537e-01, 9.7698e-01,  ..., 4.4118e-04,
          2.8537e-03, 7.3937e-04]],
        [[9.9938e-01, 7.1535e-03, 2.5524e-03,  ..., 1.7919e-04,
          2.8025e-01, 1.0248e-03],
         [2.0799e-04, 7.8184e-03, 3.7006e-03,  ..., 1.7919e-04,
          2.7986e-01, 1.0248e-03],
         [2.0799e-04, 7.4859e-03, 2.5524e-03,  ..., 9.9946e-01,
          2.8396e-01, 9.9693e-01],
         [2.0799e-04, 9.7754e-01, 9.9119e-01,  ..., 1.7919e-04,
          1.5593e-01, 1.0248e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2633e-03, 1.7411e-03, 9.9938e-01,  ..., 5.6817e-03,
          9.5858e-05, 8.5402e-03],
         [2.2633e-03, 1.7411e-03, 2.0722e-04,  ..., 5.0252e-03,
          9.5858e-05, 8.5402e-03],
         [9.9321e-01, 1.7411e-03, 2.0722e-04,  ..., 9.8427e-01,
          9.5858e-05, 9.7272e-01],
         [2.2633e-03, 9.9478e-01, 2.0722e-04,  ..., 5.0252e-03,
          9.9971e-01, 1.0195e-02]],
        [[2.4884e-03, 5.3493e-05, 4.4860e-04,  ..., 4.3155e-05,
          9.8268e-01, 7.0448e-03],
         [2.4884e-03, 5.3493e-05, 4.4860e-04,  ..., 4.3155e-05,
          5.4278e-03, 6.7607e-03],
         [9.9253e-01, 5.3493e-05, 4.4860e-04,  ..., 4.3155e-05,
          6.4676e-03, 9.7932e-01],
         [2.4884e-03, 9.9984e-01, 9.9865e-01,  ..., 9.9987e-01,
          5.4278e-03, 6.8764e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 475:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9528e-01, 1.8207e-03, 5.2275e-03,  ..., 3.4008e-04,
          1.1995e-03, 9.9683e-01],
         [1.5741e-03, 2.4148e-03, 5.2275e-03,  ..., 3.4008e-04,
          1.1995e-03, 1.0564e-03],
         [1.5741e-03, 1.8207e-03, 6.9782e-03,  ..., 9.9898e-01,
          9.9640e-01, 1.0564e-03],
         [1.5741e-03, 9.9394e-01, 9.8257e-01,  ..., 3.4008e-04,
          1.1995e-03, 1.0564e-03]],
        [[9.8700e-01, 4.2967e-03, 1.8414e-03,  ..., 2.2059e-04,
          2.6449e-01, 5.1459e-04],
         [3.5943e-03, 4.2967e-03, 1.8414e-03,  ..., 2.2059e-04,
          2.3238e-01, 5.1459e-04],
         [5.8130e-03, 5.6400e-03, 1.8414e-03,  ..., 9.9934e-01,
          3.7057e-01, 9.9846e-01],
         [3.5943e-03, 9.8577e-01, 9.9448e-01,  ..., 2.2059e-04,
          1.3256e-01, 5.1459e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:30,174 [Process: 0] Synchronize training processes
2024-08-18 15:21:30,174 [Process: 0] Evaluating...
2024-08-18 15:21:30,176 [Process: 0] EPOCH 475:
2024-08-18 15:21:30,178 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:31,310 [Process: 0] Synchronize training processes
2024-08-18 15:21:31,311 [Process: 0] Evaluating...
2024-08-18 15:21:31,312 [Process: 0] EPOCH 476:
2024-08-18 15:21:31,314 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2671e-03, 1.0028e-04, 9.9899e-01,  ..., 2.8777e-03,
          2.2641e-04, 1.1378e-03],
         [2.2671e-03, 1.0028e-04, 3.3660e-04,  ..., 2.8777e-03,
          2.2641e-04, 1.1378e-03],
         [9.9320e-01, 1.0028e-04, 3.3660e-04,  ..., 9.9137e-01,
          2.2641e-04, 9.9659e-01],
         [2.2671e-03, 9.9970e-01, 3.3660e-04,  ..., 2.8777e-03,
          9.9932e-01, 1.1378e-03]],
        [[2.7285e-03, 3.2024e-04, 3.2127e-04,  ..., 8.9356e-04,
          9.9972e-01, 5.7110e-03],
         [2.7285e-03, 3.2024e-04, 3.2127e-04,  ..., 8.9356e-04,
          9.1790e-05, 5.2592e-03],
         [9.9181e-01, 3.2024e-04, 3.2127e-04,  ..., 8.9356e-04,
          9.1790e-05, 9.8377e-01],
         [2.7285e-03, 9.9904e-01, 9.9904e-01,  ..., 9.9732e-01,
          9.1790e-05, 5.2592e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 476:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9901e-01, 5.0129e-03, 9.9099e-04,  ..., 1.6894e-03,
          4.7155e-04, 9.9785e-01],
         [3.3131e-04, 5.0129e-03, 9.9099e-04,  ..., 1.6894e-03,
          4.7155e-04, 7.1737e-04],
         [3.3131e-04, 5.9299e-03, 9.9099e-04,  ..., 9.9493e-01,
          9.9859e-01, 7.1737e-04],
         [3.3131e-04, 9.8404e-01, 9.9703e-01,  ..., 1.6894e-03,
          4.7155e-04, 7.1737e-04]],
        [[9.9921e-01, 1.9982e-03, 2.0326e-03,  ..., 1.4967e-03,
          2.9515e-01, 3.3009e-04],
         [2.6432e-04, 1.9982e-03, 2.2588e-03,  ..., 1.4967e-03,
          2.4142e-01, 3.3009e-04],
         [2.6432e-04, 1.9982e-03, 2.0326e-03,  ..., 9.9551e-01,
          3.4680e-01, 9.9901e-01],
         [2.6432e-04, 9.9401e-01, 9.9368e-01,  ..., 1.4967e-03,
          1.1662e-01, 3.3009e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0497e-03, 2.9084e-05, 9.9851e-01,  ..., 9.7265e-03,
          2.5654e-04, 4.3312e-03],
         [2.0497e-03, 2.9084e-05, 4.4747e-04,  ..., 8.6022e-03,
          2.5654e-04, 4.3312e-03],
         [9.9385e-01, 2.9084e-05, 4.4747e-04,  ..., 9.7142e-01,
          2.5654e-04, 9.8701e-01],
         [2.0497e-03, 9.9991e-01, 5.9751e-04,  ..., 1.0249e-02,
          9.9923e-01, 4.3312e-03]],
        [[4.0771e-03, 8.2427e-05, 1.4860e-04,  ..., 2.5776e-04,
          9.9783e-01, 3.3441e-03],
         [4.0771e-03, 8.2427e-05, 1.4860e-04,  ..., 3.0322e-04,
          7.2277e-04, 3.3441e-03],
         [9.8777e-01, 8.2427e-05, 1.4860e-04,  ..., 2.5776e-04,
          7.2277e-04, 9.8997e-01],
         [4.0771e-03, 9.9975e-01, 9.9955e-01,  ..., 9.9918e-01,
          7.2277e-04, 3.3441e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 477:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 2.5589e-03, 1.6016e-03,  ..., 3.3744e-04,
          3.0008e-04, 9.9845e-01],
         [3.5720e-05, 2.5589e-03, 1.6016e-03,  ..., 3.3744e-04,
          3.0008e-04, 5.1630e-04],
         [3.5720e-05, 2.5589e-03, 1.6803e-03,  ..., 9.9899e-01,
          9.9910e-01, 5.1630e-04],
         [3.5720e-05, 9.9232e-01, 9.9512e-01,  ..., 3.3744e-04,
          3.0008e-04, 5.1630e-04]],
        [[9.9747e-01, 2.2529e-02, 2.3172e-03,  ..., 1.0177e-03,
          2.6376e-01, 9.0673e-04],
         [8.4275e-04, 2.6588e-02, 2.3172e-03,  ..., 1.0177e-03,
          1.7691e-01, 9.0673e-04],
         [8.4275e-04, 4.1634e-02, 2.5066e-03,  ..., 9.9695e-01,
          3.8994e-01, 9.9728e-01],
         [8.4275e-04, 9.0925e-01, 9.9286e-01,  ..., 1.0177e-03,
          1.6939e-01, 9.0673e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:32,444 [Process: 0] Synchronize training processes
2024-08-18 15:21:32,444 [Process: 0] Evaluating...
2024-08-18 15:21:32,446 [Process: 0] EPOCH 477:
2024-08-18 15:21:32,448 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:33,567 [Process: 0] Synchronize training processes
2024-08-18 15:21:33,567 [Process: 0] Evaluating...
2024-08-18 15:21:33,569 [Process: 0] EPOCH 478:
2024-08-18 15:21:33,571 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3036e-03, 1.0344e-04, 9.9700e-01,  ..., 2.7452e-03,
          5.0122e-04, 5.5529e-03],
         [1.3036e-03, 1.0344e-04, 9.1761e-04,  ..., 2.7452e-03,
          5.0122e-04, 4.8759e-03],
         [9.9609e-01, 1.0344e-04, 9.1761e-04,  ..., 9.9176e-01,
          5.0122e-04, 9.8470e-01],
         [1.3036e-03, 9.9969e-01, 1.1610e-03,  ..., 2.7452e-03,
          9.9850e-01, 4.8759e-03]],
        [[1.7019e-03, 2.0250e-04, 2.0451e-04,  ..., 9.3751e-04,
          9.9575e-01, 3.2979e-03],
         [1.7019e-03, 2.0250e-04, 2.0451e-04,  ..., 9.3751e-04,
          1.4175e-03, 3.2979e-03],
         [9.9489e-01, 2.0250e-04, 2.0451e-04,  ..., 9.3751e-04,
          1.4175e-03, 9.9011e-01],
         [1.7019e-03, 9.9939e-01, 9.9939e-01,  ..., 9.9719e-01,
          1.4175e-03, 3.2979e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 478:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9847e-01, 5.1227e-03, 2.0132e-03,  ..., 3.6392e-04,
          1.0566e-03, 9.9890e-01],
         [5.1090e-04, 5.7930e-03, 2.0132e-03,  ..., 3.6392e-04,
          1.0566e-03, 3.6591e-04],
         [5.1090e-04, 5.4271e-03, 2.0132e-03,  ..., 9.9891e-01,
          9.9683e-01, 3.6591e-04],
         [5.1090e-04, 9.8366e-01, 9.9396e-01,  ..., 3.6392e-04,
          1.0566e-03, 3.6591e-04]],
        [[9.9875e-01, 6.6489e-03, 1.8992e-03,  ..., 1.6196e-04,
          2.3482e-01, 4.0606e-04],
         [4.1585e-04, 9.7133e-03, 1.8992e-03,  ..., 1.6196e-04,
          1.6597e-01, 4.0606e-04],
         [4.1585e-04, 7.5445e-03, 1.8992e-03,  ..., 9.9951e-01,
          4.4419e-01, 9.9878e-01],
         [4.1585e-04, 9.7609e-01, 9.9430e-01,  ..., 1.6196e-04,
          1.5501e-01, 4.0606e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0649e-03, 3.8149e-05, 9.9486e-01,  ..., 6.0084e-03,
          4.3988e-05, 5.7882e-03],
         [4.0649e-03, 3.8149e-05, 1.3555e-03,  ..., 6.0084e-03,
          4.3988e-05, 5.6251e-03],
         [9.8781e-01, 3.8149e-05, 1.3555e-03,  ..., 9.8168e-01,
          4.3988e-05, 9.8296e-01],
         [4.0649e-03, 9.9989e-01, 2.4282e-03,  ..., 6.2994e-03,
          9.9987e-01, 5.6251e-03]],
        [[9.3788e-03, 2.3130e-05, 1.0245e-04,  ..., 2.9439e-03,
          9.9555e-01, 1.8130e-03],
         [1.0354e-02, 2.3130e-05, 1.0245e-04,  ..., 2.9439e-03,
          1.4818e-03, 1.8130e-03],
         [9.6837e-01, 2.3130e-05, 1.0245e-04,  ..., 2.9439e-03,
          1.4818e-03, 9.9456e-01],
         [1.1900e-02, 9.9993e-01, 9.9969e-01,  ..., 9.9117e-01,
          1.4818e-03, 1.8130e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 479:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:34,694 [Process: 0] Synchronize training processes
2024-08-18 15:21:34,694 [Process: 0] Evaluating...
2024-08-18 15:21:34,696 [Process: 0] EPOCH 479:
2024-08-18 15:21:34,698 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 1.2384e-02, 2.0427e-03,  ..., 2.2574e-04,
          1.6312e-03, 9.9883e-01],
         [4.9654e-05, 1.2243e-02, 2.0427e-03,  ..., 2.2574e-04,
          1.6312e-03, 3.9121e-04],
         [4.9654e-05, 2.3254e-02, 2.0427e-03,  ..., 9.9932e-01,
          9.9511e-01, 3.9121e-04],
         [4.9654e-05, 9.5212e-01, 9.9387e-01,  ..., 2.2574e-04,
          1.6312e-03, 3.9121e-04]],
        [[9.9495e-01, 2.7886e-03, 1.7904e-03,  ..., 8.9210e-04,
          2.6577e-02, 3.8781e-04],
         [1.4602e-03, 2.7886e-03, 1.7904e-03,  ..., 8.9210e-04,
          2.0273e-02, 3.8781e-04],
         [2.1330e-03, 2.7886e-03, 1.7904e-03,  ..., 9.9732e-01,
          9.3793e-01, 9.9884e-01],
         [1.4602e-03, 9.9163e-01, 9.9463e-01,  ..., 8.9210e-04,
          1.5222e-02, 3.8781e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0141e-03, 1.2663e-04, 9.9529e-01,  ..., 2.9313e-03,
          4.1500e-05, 5.1454e-03],
         [4.0141e-03, 1.2663e-04, 1.1301e-03,  ..., 2.9313e-03,
          4.1500e-05, 5.1454e-03],
         [9.8796e-01, 1.2663e-04, 1.1301e-03,  ..., 9.9121e-01,
          4.1500e-05, 9.8456e-01],
         [4.0141e-03, 9.9962e-01, 2.4520e-03,  ..., 2.9313e-03,
          9.9988e-01, 5.1454e-03]],
        [[3.6759e-03, 2.9072e-05, 1.7607e-05,  ..., 8.9724e-05,
          9.9575e-01, 4.3172e-03],
         [3.6759e-03, 2.9072e-05, 1.7607e-05,  ..., 8.9724e-05,
          1.4154e-03, 4.3172e-03],
         [9.8897e-01, 2.9072e-05, 1.7607e-05,  ..., 8.9724e-05,
          1.4154e-03, 9.8705e-01],
         [3.6759e-03, 9.9991e-01, 9.9995e-01,  ..., 9.9973e-01,
          1.4154e-03, 4.3172e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 480:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9599e-01, 6.2795e-03, 1.7877e-03,  ..., 2.1582e-03,
          8.1997e-03, 9.9656e-01],
         [1.3378e-03, 6.2795e-03, 1.7877e-03,  ..., 2.1582e-03,
          8.4636e-03, 1.1482e-03],
         [1.3378e-03, 8.3676e-03, 1.7877e-03,  ..., 9.9353e-01,
          9.7514e-01, 1.1482e-03],
         [1.3378e-03, 9.7907e-01, 9.9464e-01,  ..., 2.1582e-03,
          8.1997e-03, 1.1482e-03]],
        [[9.9947e-01, 4.6477e-03, 2.3054e-03,  ..., 2.5295e-04,
          8.2119e-04, 2.7052e-04],
         [1.7775e-04, 4.6684e-03, 2.3054e-03,  ..., 2.5295e-04,
          8.2119e-04, 2.7052e-04],
         [1.7775e-04, 4.6477e-03, 2.3054e-03,  ..., 9.9924e-01,
          9.9754e-01, 9.9919e-01],
         [1.7775e-04, 9.8604e-01, 9.9308e-01,  ..., 2.5295e-04,
          8.2119e-04, 2.7052e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9858e-03, 7.8103e-06, 9.9273e-01,  ..., 3.7226e-03,
          2.1273e-06, 1.6688e-03],
         [2.9858e-03, 7.8103e-06, 2.0825e-03,  ..., 3.7226e-03,
          2.1273e-06, 1.6688e-03],
         [9.9104e-01, 7.8103e-06, 2.0825e-03,  ..., 9.8883e-01,
          2.1273e-06, 9.9499e-01],
         [2.9858e-03, 9.9998e-01, 3.1029e-03,  ..., 3.7226e-03,
          9.9999e-01, 1.6688e-03]],
        [[2.8971e-03, 3.7901e-05, 9.4915e-05,  ..., 2.0648e-03,
          9.8249e-01, 3.6725e-03],
         [2.8971e-03, 3.7901e-05, 9.4915e-05,  ..., 2.0648e-03,
          5.8358e-03, 3.6725e-03],
         [9.9131e-01, 3.7901e-05, 9.4915e-05,  ..., 2.0648e-03,
          5.8358e-03, 9.8898e-01],
         [2.8971e-03, 9.9989e-01, 9.9972e-01,  ..., 9.9381e-01,
          5.8358e-03, 3.6725e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 481:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:35,826 [Process: 0] Synchronize training processes
2024-08-18 15:21:35,826 [Process: 0] Evaluating...
2024-08-18 15:21:35,828 [Process: 0] EPOCH 480:
2024-08-18 15:21:35,830 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:36,954 [Process: 0] Synchronize training processes
2024-08-18 15:21:36,955 [Process: 0] Evaluating...
2024-08-18 15:21:36,957 [Process: 0] EPOCH 481:
2024-08-18 15:21:36,958 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9753e-01, 2.2780e-03, 1.5350e-03,  ..., 3.7065e-04,
          7.4983e-04, 9.9635e-01],
         [8.6160e-04, 2.2780e-03, 1.5350e-03,  ..., 3.7065e-04,
          7.4983e-04, 1.2182e-03],
         [8.0290e-04, 2.2780e-03, 1.5350e-03,  ..., 9.9889e-01,
          9.9775e-01, 1.2182e-03],
         [8.0290e-04, 9.9317e-01, 9.9540e-01,  ..., 3.7065e-04,
          7.4983e-04, 1.2182e-03]],
        [[9.9668e-01, 1.9283e-03, 7.6330e-03,  ..., 1.9252e-04,
          2.1057e-03, 6.5650e-05],
         [1.1076e-03, 1.9283e-03, 7.6330e-03,  ..., 1.9252e-04,
          2.1057e-03, 6.5650e-05],
         [1.1076e-03, 1.9283e-03, 9.7201e-03,  ..., 9.9942e-01,
          9.9368e-01, 9.9980e-01],
         [1.1076e-03, 9.9422e-01, 9.7501e-01,  ..., 1.9252e-04,
          2.1057e-03, 6.5650e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9934e-03, 1.2343e-04, 9.9273e-01,  ..., 2.2098e-03,
          1.7515e-05, 1.6751e-03],
         [2.9934e-03, 1.2343e-04, 1.8369e-03,  ..., 2.2098e-03,
          1.7515e-05, 1.6751e-03],
         [9.9102e-01, 1.2343e-04, 1.8369e-03,  ..., 9.9337e-01,
          1.7515e-05, 9.9497e-01],
         [2.9934e-03, 9.9963e-01, 3.5961e-03,  ..., 2.2098e-03,
          9.9995e-01, 1.6751e-03]],
        [[3.3428e-03, 3.4581e-05, 1.9615e-03,  ..., 3.9533e-04,
          9.9356e-01, 3.1767e-03],
         [3.3428e-03, 3.4581e-05, 1.9615e-03,  ..., 3.9533e-04,
          2.1461e-03, 3.1767e-03],
         [9.8997e-01, 3.4581e-05, 1.9615e-03,  ..., 3.9533e-04,
          2.1461e-03, 9.9047e-01],
         [3.3428e-03, 9.9990e-01, 9.9412e-01,  ..., 9.9881e-01,
          2.1461e-03, 3.1767e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 482:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9766e-01, 8.9180e-03, 2.1307e-03,  ..., 1.3793e-03,
          2.0481e-03, 9.9954e-01],
         [7.7886e-04, 8.9180e-03, 2.1307e-03,  ..., 1.3793e-03,
          2.0481e-03, 1.5245e-04],
         [7.7886e-04, 1.4308e-02, 2.1307e-03,  ..., 9.9586e-01,
          9.9386e-01, 1.5245e-04],
         [7.7886e-04, 9.6786e-01, 9.9361e-01,  ..., 1.3793e-03,
          2.0481e-03, 1.5245e-04]],
        [[9.9357e-01, 6.8819e-03, 3.8147e-03,  ..., 4.1593e-04,
          2.1972e-03, 1.2661e-04],
         [2.1423e-03, 7.2723e-03, 3.8147e-03,  ..., 4.1593e-04,
          2.1972e-03, 1.2661e-04],
         [2.1423e-03, 6.8819e-03, 3.8147e-03,  ..., 9.9875e-01,
          9.9341e-01, 9.9962e-01],
         [2.1423e-03, 9.7896e-01, 9.8856e-01,  ..., 4.1593e-04,
          2.1972e-03, 1.2661e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:38,085 [Process: 0] Synchronize training processes
2024-08-18 15:21:38,085 [Process: 0] Evaluating...
2024-08-18 15:21:38,089 [Process: 0] EPOCH 482:
2024-08-18 15:21:38,091 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:39,211 [Process: 0] Synchronize training processes
2024-08-18 15:21:39,211 [Process: 0] Evaluating...
2024-08-18 15:21:39,213 [Process: 0] EPOCH 483:
2024-08-18 15:21:39,215 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.6645e-03, 1.0855e-04, 9.9912e-01,  ..., 2.2318e-03,
          5.7754e-05, 2.0160e-03],
         [7.6645e-03, 1.0855e-04, 2.9194e-04,  ..., 2.2318e-03,
          5.7754e-05, 2.0160e-03],
         [9.7550e-01, 1.0855e-04, 2.9194e-04,  ..., 9.9330e-01,
          5.7754e-05, 9.9395e-01],
         [9.1700e-03, 9.9967e-01, 2.9194e-04,  ..., 2.2318e-03,
          9.9983e-01, 2.0160e-03]],
        [[2.0471e-03, 1.3923e-03, 6.3037e-05,  ..., 5.0775e-04,
          9.9805e-01, 7.6446e-03],
         [2.0471e-03, 1.3923e-03, 6.3037e-05,  ..., 5.0775e-04,
          6.4868e-04, 7.6446e-03],
         [9.9386e-01, 1.3923e-03, 6.3037e-05,  ..., 5.0775e-04,
          6.4868e-04, 9.7707e-01],
         [2.0471e-03, 9.9582e-01, 9.9981e-01,  ..., 9.9848e-01,
          6.4868e-04, 7.6446e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 483:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9664e-01, 2.9526e-03, 6.2556e-03,  ..., 2.4194e-03,
          9.3891e-04, 9.9192e-01],
         [1.1184e-03, 2.9526e-03, 7.8942e-03,  ..., 2.4194e-03,
          9.3891e-04, 2.6500e-03],
         [1.1184e-03, 2.9526e-03, 7.5262e-03,  ..., 9.9274e-01,
          9.9718e-01, 2.7760e-03],
         [1.1184e-03, 9.9114e-01, 9.7832e-01,  ..., 2.4194e-03,
          9.3891e-04, 2.6500e-03]],
        [[9.9945e-01, 5.1393e-03, 4.0530e-03,  ..., 1.0992e-04,
          9.1910e-04, 3.3079e-05],
         [1.8238e-04, 5.1393e-03, 4.0530e-03,  ..., 1.0992e-04,
          9.1910e-04, 3.3079e-05],
         [1.8238e-04, 5.1393e-03, 4.0530e-03,  ..., 9.9967e-01,
          9.9724e-01, 9.9990e-01],
         [1.8238e-04, 9.8458e-01, 9.8784e-01,  ..., 1.0992e-04,
          9.1910e-04, 3.3079e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3929e-03, 1.2685e-05, 9.9673e-01,  ..., 4.4486e-03,
          8.8118e-05, 2.3118e-03],
         [4.3929e-03, 1.2685e-05, 7.6239e-04,  ..., 4.4486e-03,
          8.8118e-05, 2.3118e-03],
         [9.8682e-01, 1.2685e-05, 7.6239e-04,  ..., 9.8665e-01,
          8.8118e-05, 9.9306e-01],
         [4.3929e-03, 9.9996e-01, 1.7415e-03,  ..., 4.4486e-03,
          9.9974e-01, 2.3118e-03]],
        [[4.4918e-03, 1.0702e-04, 7.7218e-05,  ..., 1.7707e-03,
          9.6511e-01, 4.2088e-03],
         [4.4918e-03, 1.0702e-04, 7.7218e-05,  ..., 1.7707e-03,
          1.0237e-02, 4.2088e-03],
         [9.8652e-01, 1.0702e-04, 7.7218e-05,  ..., 1.7707e-03,
          1.5679e-02, 9.8737e-01],
         [4.4918e-03, 9.9968e-01, 9.9977e-01,  ..., 9.9469e-01,
          8.9776e-03, 4.2088e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 484:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9912e-01, 2.1585e-03, 1.4118e-03,  ..., 1.0087e-03,
          5.9973e-04, 9.9947e-01],
         [2.9385e-04, 2.1585e-03, 1.4118e-03,  ..., 1.0087e-03,
          5.9973e-04, 1.7520e-04],
         [2.9385e-04, 2.1585e-03, 1.4118e-03,  ..., 9.9697e-01,
          9.9820e-01, 1.7520e-04],
         [2.9385e-04, 9.9352e-01, 9.9576e-01,  ..., 1.0087e-03,
          5.9973e-04, 1.7520e-04]],
        [[9.9899e-01, 2.3909e-03, 1.7873e-03,  ..., 5.4207e-04,
          3.3440e-04, 4.2865e-04],
         [3.3797e-04, 2.3909e-03, 1.7873e-03,  ..., 5.4207e-04,
          3.3440e-04, 4.2865e-04],
         [3.3797e-04, 2.3909e-03, 1.7873e-03,  ..., 9.9837e-01,
          9.9900e-01, 9.9871e-01],
         [3.3797e-04, 9.9283e-01, 9.9464e-01,  ..., 5.4207e-04,
          3.3440e-04, 4.2865e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:40,332 [Process: 0] Synchronize training processes
2024-08-18 15:21:40,332 [Process: 0] Evaluating...
2024-08-18 15:21:40,334 [Process: 0] EPOCH 484:
2024-08-18 15:21:40,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:41,450 [Process: 0] Synchronize training processes
2024-08-18 15:21:41,451 [Process: 0] Evaluating...
2024-08-18 15:21:41,453 [Process: 0] EPOCH 485:
2024-08-18 15:21:41,454 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2929e-03, 1.1913e-05, 9.9949e-01,  ..., 4.3882e-03,
          3.2798e-05, 6.0850e-03],
         [1.2929e-03, 1.1913e-05, 1.7076e-04,  ..., 4.3882e-03,
          3.2798e-05, 6.0850e-03],
         [9.9612e-01, 1.1913e-05, 1.7076e-04,  ..., 9.8684e-01,
          3.2798e-05, 9.8174e-01],
         [1.2929e-03, 9.9996e-01, 1.7076e-04,  ..., 4.3882e-03,
          9.9990e-01, 6.0850e-03]],
        [[1.0988e-03, 3.4937e-04, 2.1409e-05,  ..., 9.9742e-04,
          9.9215e-01, 2.0877e-03],
         [1.0988e-03, 3.4937e-04, 2.1409e-05,  ..., 1.3799e-03,
          2.7863e-03, 2.0877e-03],
         [9.9670e-01, 3.4937e-04, 2.1409e-05,  ..., 9.9742e-04,
          2.5328e-03, 9.9374e-01],
         [1.0988e-03, 9.9895e-01, 9.9994e-01,  ..., 9.9663e-01,
          2.5328e-03, 2.0877e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 485:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9861e-01, 2.6123e-03, 1.7865e-03,  ..., 9.8349e-05,
          3.8723e-04, 9.9825e-01],
         [4.6395e-04, 2.6123e-03, 1.7865e-03,  ..., 9.8349e-05,
          3.8723e-04, 5.8194e-04],
         [4.6395e-04, 2.6123e-03, 1.7865e-03,  ..., 9.9970e-01,
          9.9884e-01, 5.8194e-04],
         [4.6395e-04, 9.9216e-01, 9.9464e-01,  ..., 9.8349e-05,
          3.8723e-04, 5.8194e-04]],
        [[9.9637e-01, 4.5252e-03, 3.9365e-03,  ..., 4.3360e-04,
          9.2133e-04, 3.5926e-04],
         [1.1480e-03, 4.5252e-03, 3.9365e-03,  ..., 4.3360e-04,
          9.2133e-04, 3.5926e-04],
         [1.3320e-03, 4.5252e-03, 3.9365e-03,  ..., 9.9870e-01,
          9.9724e-01, 9.9892e-01],
         [1.1480e-03, 9.8642e-01, 9.8819e-01,  ..., 4.3360e-04,
          9.2133e-04, 3.5926e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8164e-03, 2.5015e-04, 9.9722e-01,  ..., 1.8269e-03,
          5.4383e-05, 2.6194e-03],
         [1.8164e-03, 2.5015e-04, 7.5956e-04,  ..., 1.8269e-03,
          5.4383e-05, 2.6194e-03],
         [9.9455e-01, 2.5015e-04, 7.5956e-04,  ..., 9.9452e-01,
          5.4383e-05, 9.9214e-01],
         [1.8164e-03, 9.9925e-01, 1.2561e-03,  ..., 1.8269e-03,
          9.9984e-01, 2.6194e-03]],
        [[2.9602e-03, 3.7972e-05, 6.1604e-05,  ..., 5.0109e-04,
          9.9625e-01, 8.3385e-04],
         [2.9602e-03, 3.7972e-05, 6.1604e-05,  ..., 5.0109e-04,
          1.2502e-03, 8.3385e-04],
         [9.9112e-01, 3.7972e-05, 6.1604e-05,  ..., 5.0109e-04,
          1.2502e-03, 9.9750e-01],
         [2.9602e-03, 9.9989e-01, 9.9982e-01,  ..., 9.9850e-01,
          1.2502e-03, 8.3385e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 486:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:21:42,577 [Process: 0] Synchronize training processes
2024-08-18 15:21:42,577 [Process: 0] Evaluating...
2024-08-18 15:21:42,579 [Process: 0] EPOCH 486:
2024-08-18 15:21:42,581 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9944e-01, 3.5421e-03, 6.1544e-03,  ..., 5.1682e-04,
          1.3570e-03, 9.9992e-01],
         [1.8553e-04, 3.5421e-03, 6.1544e-03,  ..., 5.1682e-04,
          1.6062e-03, 2.7572e-05],
         [1.8553e-04, 3.5421e-03, 6.6706e-03,  ..., 9.9845e-01,
          9.9568e-01, 2.7572e-05],
         [1.8553e-04, 9.8937e-01, 9.8102e-01,  ..., 5.1682e-04,
          1.3570e-03, 2.7572e-05]],
        [[9.8809e-01, 7.6617e-03, 2.8842e-03,  ..., 1.5835e-03,
          2.0722e-03, 5.4153e-04],
         [5.3788e-03, 7.6617e-03, 2.8842e-03,  ..., 1.9617e-03,
          2.0722e-03, 5.4153e-04],
         [3.2660e-03, 1.0161e-02, 2.8842e-03,  ..., 9.9487e-01,
          9.9378e-01, 9.9838e-01],
         [3.2660e-03, 9.7452e-01, 9.9135e-01,  ..., 1.5835e-03,
          2.0722e-03, 5.4153e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2518e-03, 2.9968e-04, 9.8112e-01,  ..., 2.0127e-03,
          2.6378e-05, 2.1741e-03],
         [3.2518e-03, 2.9968e-04, 5.1331e-03,  ..., 2.0127e-03,
          2.6378e-05, 2.1741e-03],
         [9.9024e-01, 2.9968e-04, 5.1331e-03,  ..., 9.9396e-01,
          2.6378e-05, 9.9348e-01],
         [3.2518e-03, 9.9910e-01, 8.6183e-03,  ..., 2.0127e-03,
          9.9992e-01, 2.1741e-03]],
        [[7.9012e-03, 5.0454e-04, 1.4319e-05,  ..., 8.6838e-04,
          9.9097e-01, 2.7352e-03],
         [7.9012e-03, 5.0454e-04, 1.4319e-05,  ..., 8.6838e-04,
          2.7181e-03, 2.7352e-03],
         [9.7397e-01, 5.0454e-04, 1.4319e-05,  ..., 8.6838e-04,
          2.7181e-03, 9.9179e-01],
         [1.0229e-02, 9.9849e-01, 9.9996e-01,  ..., 9.9739e-01,
          3.5902e-03, 2.7352e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 487:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9580e-01, 2.5144e-03, 5.1788e-03,  ..., 5.7969e-04,
          7.2421e-05, 9.9394e-01],
         [1.4009e-03, 2.5144e-03, 5.1788e-03,  ..., 5.7969e-04,
          7.2421e-05, 2.3769e-03],
         [1.4009e-03, 2.5144e-03, 5.1788e-03,  ..., 9.9826e-01,
          9.9978e-01, 1.8800e-03],
         [1.4009e-03, 9.9246e-01, 9.8446e-01,  ..., 5.7969e-04,
          7.2421e-05, 1.8001e-03]],
        [[9.9741e-01, 2.7067e-03, 2.0168e-03,  ..., 8.5222e-04,
          1.3962e-03, 2.0775e-04],
         [8.6454e-04, 2.7067e-03, 2.0168e-03,  ..., 8.5222e-04,
          1.8696e-03, 2.0775e-04],
         [8.6454e-04, 2.7067e-03, 2.0168e-03,  ..., 9.9744e-01,
          9.9534e-01, 9.9938e-01],
         [8.6454e-04, 9.9188e-01, 9.9395e-01,  ..., 8.5222e-04,
          1.3962e-03, 2.0775e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1291e-03, 1.2262e-06, 9.9763e-01,  ..., 3.3150e-03,
          3.8783e-05, 7.5787e-03],
         [3.1291e-03, 1.2262e-06, 6.4267e-04,  ..., 3.3150e-03,
          3.8783e-05, 7.5787e-03],
         [9.9061e-01, 1.2262e-06, 6.4267e-04,  ..., 9.9006e-01,
          3.8783e-05, 9.7671e-01],
         [3.1291e-03, 1.0000e+00, 1.0808e-03,  ..., 3.3150e-03,
          9.9988e-01, 8.1366e-03]],
        [[3.6826e-03, 2.2452e-04, 6.5051e-04,  ..., 4.1044e-04,
          9.9870e-01, 9.7685e-03],
         [3.6826e-03, 2.2452e-04, 6.5051e-04,  ..., 4.1044e-04,
          4.3295e-04, 9.7685e-03],
         [9.8895e-01, 2.2452e-04, 6.5051e-04,  ..., 4.1044e-04,
          4.3295e-04, 9.6802e-01],
         [3.6826e-03, 9.9933e-01, 9.9805e-01,  ..., 9.9877e-01,
          4.3295e-04, 1.2442e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 488:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:43,709 [Process: 0] Synchronize training processes
2024-08-18 15:21:43,710 [Process: 0] Evaluating...
2024-08-18 15:21:43,711 [Process: 0] EPOCH 487:
2024-08-18 15:21:43,713 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:44,842 [Process: 0] Synchronize training processes
2024-08-18 15:21:44,842 [Process: 0] Evaluating...
2024-08-18 15:21:44,844 [Process: 0] EPOCH 488:
2024-08-18 15:21:44,846 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9975e-01, 2.6399e-03, 5.6510e-03,  ..., 3.0132e-03,
          4.1039e-03, 9.9937e-01],
         [8.3578e-05, 2.6399e-03, 5.6510e-03,  ..., 3.0132e-03,
          5.1367e-03, 2.1097e-04],
         [8.3578e-05, 2.6399e-03, 6.6874e-03,  ..., 9.9096e-01,
          9.8666e-01, 2.1097e-04],
         [8.3578e-05, 9.9208e-01, 9.8201e-01,  ..., 3.0132e-03,
          4.1039e-03, 2.1097e-04]],
        [[9.9845e-01, 7.5825e-03, 6.5505e-03,  ..., 1.9229e-03,
          6.6933e-04, 1.9722e-04],
         [9.1637e-04, 7.5825e-03, 6.9610e-03,  ..., 1.9229e-03,
          6.6933e-04, 1.9722e-04],
         [3.1658e-04, 7.5825e-03, 6.5505e-03,  ..., 9.9423e-01,
          9.9799e-01, 9.9941e-01],
         [3.1658e-04, 9.7725e-01, 9.7994e-01,  ..., 1.9229e-03,
          6.6933e-04, 1.9722e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8661e-03, 2.8199e-04, 9.9050e-01,  ..., 2.0175e-03,
          2.7161e-04, 2.8980e-03],
         [2.8661e-03, 2.8199e-04, 2.9826e-03,  ..., 2.0175e-03,
          2.7161e-04, 2.8980e-03],
         [9.9140e-01, 2.8199e-04, 2.9826e-03,  ..., 9.9395e-01,
          2.7161e-04, 9.9131e-01],
         [2.8661e-03, 9.9915e-01, 3.5386e-03,  ..., 2.0175e-03,
          9.9919e-01, 2.8980e-03]],
        [[8.5572e-03, 1.9827e-04, 1.9885e-04,  ..., 9.8657e-04,
          9.7616e-01, 4.4635e-03],
         [8.2324e-03, 1.9827e-04, 1.9885e-04,  ..., 9.8657e-04,
          9.7484e-03, 4.4635e-03],
         [9.7498e-01, 1.9827e-04, 1.9885e-04,  ..., 9.8657e-04,
          7.0442e-03, 9.8661e-01],
         [8.2324e-03, 9.9941e-01, 9.9940e-01,  ..., 9.9704e-01,
          7.0442e-03, 4.4635e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 489:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9972e-01, 3.4841e-03, 2.2840e-03,  ..., 3.5468e-04,
          7.4974e-04, 9.9536e-01],
         [9.4778e-05, 3.4841e-03, 2.2840e-03,  ..., 3.5468e-04,
          7.4974e-04, 1.6821e-03],
         [9.4778e-05, 3.5782e-03, 2.2840e-03,  ..., 9.9894e-01,
          9.9775e-01, 1.4784e-03],
         [9.4778e-05, 9.8945e-01, 9.9315e-01,  ..., 3.5468e-04,
          7.4974e-04, 1.4784e-03]],
        [[9.9868e-01, 3.2499e-03, 4.5624e-03,  ..., 7.0541e-04,
          6.1488e-04, 6.5594e-05],
         [4.3918e-04, 3.2499e-03, 4.5624e-03,  ..., 7.0541e-04,
          6.9330e-04, 6.5594e-05],
         [4.3918e-04, 3.2673e-03, 5.7623e-03,  ..., 9.9788e-01,
          9.9808e-01, 9.9980e-01],
         [4.3918e-04, 9.9023e-01, 9.8511e-01,  ..., 7.0541e-04,
          6.1488e-04, 6.5594e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.1667e-03, 7.8891e-05, 9.9364e-01,  ..., 1.8769e-03,
          3.3620e-05, 7.4969e-03],
         [6.6769e-03, 7.8891e-05, 1.9125e-03,  ..., 1.8769e-03,
          3.3620e-05, 7.1226e-03],
         [9.8099e-01, 7.8891e-05, 1.9125e-03,  ..., 9.9437e-01,
          3.3620e-05, 9.7826e-01],
         [6.1667e-03, 9.9976e-01, 2.5349e-03,  ..., 1.8769e-03,
          9.9990e-01, 7.1226e-03]],
        [[1.3259e-03, 3.9101e-05, 1.1268e-04,  ..., 3.5079e-05,
          9.9750e-01, 2.0149e-03],
         [1.3259e-03, 3.9101e-05, 1.1268e-04,  ..., 3.5079e-05,
          8.3258e-04, 2.0149e-03],
         [9.9602e-01, 3.9101e-05, 1.1268e-04,  ..., 3.5079e-05,
          8.3258e-04, 9.9396e-01],
         [1.3259e-03, 9.9988e-01, 9.9966e-01,  ..., 9.9989e-01,
          8.3258e-04, 2.0149e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:45,973 [Process: 0] Synchronize training processes
2024-08-18 15:21:45,973 [Process: 0] Evaluating...
2024-08-18 15:21:45,975 [Process: 0] EPOCH 489:
2024-08-18 15:21:45,977 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:47,110 [Process: 0] Synchronize training processes
2024-08-18 15:21:47,110 [Process: 0] Evaluating...
2024-08-18 15:21:47,112 [Process: 0] EPOCH 490:
2024-08-18 15:21:47,114 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 490:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9866e-01, 5.1625e-03, 3.2531e-03,  ..., 4.9952e-04,
          2.6131e-03, 9.8261e-01],
         [4.4646e-04, 5.1625e-03, 3.2531e-03,  ..., 4.9952e-04,
          2.6131e-03, 4.7011e-03],
         [4.4646e-04, 5.3809e-03, 3.2531e-03,  ..., 9.9850e-01,
          9.9216e-01, 7.9828e-03],
         [4.4646e-04, 9.8429e-01, 9.9024e-01,  ..., 4.9952e-04,
          2.6131e-03, 4.7011e-03]],
        [[9.9944e-01, 3.5354e-03, 2.3824e-03,  ..., 4.4385e-04,
          3.0429e-04, 2.1573e-04],
         [1.8530e-04, 3.5354e-03, 2.3824e-03,  ..., 4.4385e-04,
          3.0429e-04, 2.1573e-04],
         [1.8530e-04, 3.5354e-03, 2.3824e-03,  ..., 9.9867e-01,
          9.9909e-01, 9.9935e-01],
         [1.8530e-04, 9.8939e-01, 9.9285e-01,  ..., 4.4385e-04,
          3.0429e-04, 2.1573e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.4051e-03, 4.0479e-05, 9.9894e-01,  ..., 4.7720e-03,
          2.1502e-05, 1.2040e-03],
         [6.4051e-03, 4.0479e-05, 3.5279e-04,  ..., 4.6979e-03,
          2.1502e-05, 1.2040e-03],
         [9.8038e-01, 4.0479e-05, 3.5279e-04,  ..., 9.8583e-01,
          2.1502e-05, 9.9639e-01],
         [6.8130e-03, 9.9988e-01, 3.5279e-04,  ..., 4.6979e-03,
          9.9994e-01, 1.2040e-03]],
        [[3.1018e-03, 5.5574e-04, 3.8356e-04,  ..., 1.4924e-03,
          9.9683e-01, 3.4777e-03],
         [3.1018e-03, 5.5574e-04, 3.8356e-04,  ..., 1.4924e-03,
          1.0552e-03, 3.4777e-03],
         [9.9069e-01, 5.5574e-04, 3.8356e-04,  ..., 1.4924e-03,
          1.0552e-03, 9.8957e-01],
         [3.1018e-03, 9.9833e-01, 9.9885e-01,  ..., 9.9552e-01,
          1.0552e-03, 3.4777e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 491:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9860e-01, 1.7584e-03, 1.6568e-03,  ..., 1.1531e-03,
          9.6924e-05, 9.9980e-01],
         [4.6704e-04, 1.7584e-03, 1.6568e-03,  ..., 1.1531e-03,
          9.6924e-05, 6.7936e-05],
         [4.6704e-04, 1.7584e-03, 1.6568e-03,  ..., 9.9654e-01,
          9.9971e-01, 6.7936e-05],
         [4.6704e-04, 9.9472e-01, 9.9503e-01,  ..., 1.1531e-03,
          9.6924e-05, 6.7936e-05]],
        [[9.9651e-01, 5.4197e-03, 1.1508e-02,  ..., 8.1598e-03,
          2.5301e-04, 9.6225e-04],
         [1.1634e-03, 5.4099e-03, 1.7967e-02,  ..., 1.0094e-02,
          2.5301e-04, 1.2334e-03],
         [1.1634e-03, 5.8217e-03, 1.2558e-02,  ..., 9.7577e-01,
          9.9924e-01, 9.9684e-01],
         [1.1634e-03, 9.8335e-01, 9.5797e-01,  ..., 5.9710e-03,
          2.5301e-04, 9.6225e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:48,242 [Process: 0] Synchronize training processes
2024-08-18 15:21:48,242 [Process: 0] Evaluating...
2024-08-18 15:21:48,244 [Process: 0] EPOCH 491:
2024-08-18 15:21:48,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:49,373 [Process: 0] Synchronize training processes
2024-08-18 15:21:49,373 [Process: 0] Evaluating...
2024-08-18 15:21:49,377 [Process: 0] EPOCH 492:
2024-08-18 15:21:49,379 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1865e-03, 3.0820e-04, 9.9797e-01,  ..., 1.8863e-03,
          1.2063e-04, 2.8784e-03],
         [4.1865e-03, 3.0820e-04, 6.7545e-04,  ..., 1.8863e-03,
          1.2063e-04, 2.8784e-03],
         [9.8744e-01, 3.0820e-04, 6.7545e-04,  ..., 9.9434e-01,
          1.2063e-04, 9.9136e-01],
         [4.1865e-03, 9.9908e-01, 6.7545e-04,  ..., 1.8863e-03,
          9.9964e-01, 2.8784e-03]],
        [[2.6048e-03, 1.0062e-04, 5.0645e-04,  ..., 1.7361e-04,
          9.9249e-01, 1.9353e-03],
         [2.6048e-03, 1.0062e-04, 5.0645e-04,  ..., 1.7361e-04,
          2.5040e-03, 1.9353e-03],
         [9.9219e-01, 1.0062e-04, 5.0645e-04,  ..., 1.7361e-04,
          2.5040e-03, 9.9419e-01],
         [2.6048e-03, 9.9970e-01, 9.9848e-01,  ..., 9.9948e-01,
          2.5040e-03, 1.9353e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 492:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9962e-01, 1.1911e-02, 5.7976e-03,  ..., 3.0020e-04,
          2.9519e-04, 9.9985e-01],
         [1.2661e-04, 1.1911e-02, 6.5022e-03,  ..., 3.0020e-04,
          2.9519e-04, 5.0380e-05],
         [1.2661e-04, 2.1136e-02, 5.7976e-03,  ..., 9.9910e-01,
          9.9911e-01, 5.0380e-05],
         [1.2661e-04, 9.5504e-01, 9.8190e-01,  ..., 3.0020e-04,
          2.9519e-04, 5.0380e-05]],
        [[9.9955e-01, 3.8941e-03, 2.6462e-02,  ..., 8.4737e-05,
          9.7158e-04, 3.4506e-03],
         [1.4918e-04, 3.8941e-03, 1.9779e-02,  ..., 8.4737e-05,
          1.1221e-03, 5.4237e-03],
         [1.4918e-04, 4.0900e-03, 2.7285e-02,  ..., 9.9975e-01,
          9.9693e-01, 9.8768e-01],
         [1.4918e-04, 9.8812e-01, 9.2647e-01,  ..., 8.4737e-05,
          9.7158e-04, 3.4506e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.7817e-03, 2.4835e-04, 9.5944e-01,  ..., 2.0919e-03,
          6.8646e-05, 5.9002e-03],
         [4.7817e-03, 2.4835e-04, 9.9907e-03,  ..., 2.0919e-03,
          6.8646e-05, 5.9002e-03],
         [9.8566e-01, 2.4835e-04, 9.9907e-03,  ..., 9.9372e-01,
          6.8646e-05, 9.8230e-01],
         [4.7817e-03, 9.9925e-01, 2.0580e-02,  ..., 2.0919e-03,
          9.9979e-01, 5.9002e-03]],
        [[6.8732e-03, 1.2141e-04, 9.6001e-05,  ..., 4.7775e-04,
          9.9774e-01, 4.7175e-03],
         [6.8732e-03, 1.2141e-04, 9.6001e-05,  ..., 4.7775e-04,
          7.5449e-04, 4.4599e-03],
         [9.7885e-01, 1.2141e-04, 9.6001e-05,  ..., 4.7775e-04,
          7.5449e-04, 9.8636e-01],
         [7.4026e-03, 9.9964e-01, 9.9971e-01,  ..., 9.9857e-01,
          7.5449e-04, 4.4599e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 493:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9151e-01, 3.3272e-03, 3.9805e-03,  ..., 2.6052e-03,
          4.1594e-04, 9.9865e-01],
         [3.5588e-03, 3.3272e-03, 3.9805e-03,  ..., 2.6052e-03,
          4.1594e-04, 4.4993e-04],
         [2.4667e-03, 3.3272e-03, 5.2006e-03,  ..., 9.9218e-01,
          9.9875e-01, 4.4993e-04],
         [2.4667e-03, 9.9002e-01, 9.8684e-01,  ..., 2.6052e-03,
          4.1594e-04, 4.4993e-04]],
        [[9.9753e-01, 4.0240e-03, 5.6156e-03,  ..., 4.4214e-04,
          5.6801e-04, 4.3643e-04],
         [8.2401e-04, 4.0240e-03, 5.6156e-03,  ..., 4.4214e-04,
          5.6801e-04, 4.3643e-04],
         [8.2401e-04, 4.0240e-03, 5.6156e-03,  ..., 9.9867e-01,
          9.9830e-01, 9.9869e-01],
         [8.2401e-04, 9.8793e-01, 9.8315e-01,  ..., 4.4214e-04,
          5.6801e-04, 4.3643e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:50,507 [Process: 0] Synchronize training processes
2024-08-18 15:21:50,507 [Process: 0] Evaluating...
2024-08-18 15:21:50,509 [Process: 0] EPOCH 493:
2024-08-18 15:21:50,511 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:51,633 [Process: 0] Synchronize training processes
2024-08-18 15:21:51,634 [Process: 0] Evaluating...
2024-08-18 15:21:51,635 [Process: 0] EPOCH 494:
2024-08-18 15:21:51,637 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1907e-03, 2.0529e-04, 9.8883e-01,  ..., 1.7251e-02,
          7.6993e-05, 4.9077e-03],
         [2.1907e-03, 2.0529e-04, 2.9038e-03,  ..., 1.3337e-02,
          7.6993e-05, 4.9077e-03],
         [9.9343e-01, 2.0529e-04, 2.9038e-03,  ..., 9.5376e-01,
          7.6993e-05, 9.8524e-01],
         [2.1907e-03, 9.9938e-01, 5.3594e-03,  ..., 1.5649e-02,
          9.9977e-01, 4.9453e-03]],
        [[2.8586e-03, 1.8441e-03, 7.3348e-05,  ..., 2.3613e-04,
          9.9834e-01, 5.0585e-03],
         [2.8586e-03, 1.8441e-03, 7.3348e-05,  ..., 2.3613e-04,
          5.2361e-04, 5.0585e-03],
         [9.9142e-01, 1.8441e-03, 7.3348e-05,  ..., 2.3613e-04,
          5.2361e-04, 9.8482e-01],
         [2.8586e-03, 9.9447e-01, 9.9978e-01,  ..., 9.9929e-01,
          6.1712e-04, 5.0585e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 494:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9275e-01, 4.5083e-03, 2.6285e-03,  ..., 3.9088e-03,
          5.1532e-04, 9.9844e-01],
         [3.8928e-03, 4.5083e-03, 2.6285e-03,  ..., 3.9088e-03,
          5.1532e-04, 5.1880e-04],
         [1.6789e-03, 4.5083e-03, 2.6285e-03,  ..., 9.8827e-01,
          9.9845e-01, 5.1880e-04],
         [1.6789e-03, 9.8648e-01, 9.9211e-01,  ..., 3.9088e-03,
          5.1532e-04, 5.1880e-04]],
        [[9.9453e-01, 4.3480e-03, 9.9635e-03,  ..., 2.7098e-04,
          2.8638e-04, 7.5292e-04],
         [1.7001e-03, 4.3480e-03, 1.0666e-02,  ..., 2.7098e-04,
          2.8638e-04, 7.5292e-04],
         [2.0660e-03, 4.3480e-03, 1.1750e-02,  ..., 9.9919e-01,
          9.9914e-01, 9.9774e-01],
         [1.7001e-03, 9.8696e-01, 9.6762e-01,  ..., 2.7098e-04,
          2.8638e-04, 7.5292e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.9402e-03, 1.1446e-04, 9.7397e-01,  ..., 2.6679e-03,
          1.3714e-04, 1.0229e-02],
         [9.7175e-03, 1.1446e-04, 5.6505e-03,  ..., 2.6679e-03,
          1.3714e-04, 8.1265e-03],
         [9.7000e-01, 1.1446e-04, 5.6505e-03,  ..., 9.9200e-01,
          1.3714e-04, 9.7227e-01],
         [1.1346e-02, 9.9966e-01, 1.4726e-02,  ..., 2.6679e-03,
          9.9959e-01, 9.3767e-03]],
        [[1.4604e-03, 6.3386e-05, 6.4674e-05,  ..., 4.6494e-05,
          9.9901e-01, 2.4045e-03],
         [1.4604e-03, 6.3386e-05, 6.4674e-05,  ..., 4.6494e-05,
          3.3116e-04, 2.4045e-03],
         [9.9562e-01, 6.3386e-05, 6.4674e-05,  ..., 4.6494e-05,
          3.3116e-04, 9.9279e-01],
         [1.4604e-03, 9.9981e-01, 9.9981e-01,  ..., 9.9986e-01,
          3.3116e-04, 2.4045e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 495:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:52,757 [Process: 0] Synchronize training processes
2024-08-18 15:21:52,758 [Process: 0] Evaluating...
2024-08-18 15:21:52,759 [Process: 0] EPOCH 495:
2024-08-18 15:21:52,761 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9747e-01, 1.3989e-03, 3.8474e-03,  ..., 1.0454e-03,
          8.6906e-05, 9.9973e-01],
         [8.4223e-04, 1.3989e-03, 3.8474e-03,  ..., 1.0454e-03,
          8.6906e-05, 8.8426e-05],
         [8.4223e-04, 1.4163e-03, 3.8474e-03,  ..., 9.9686e-01,
          9.9974e-01, 8.8426e-05],
         [8.4223e-04, 9.9579e-01, 9.8846e-01,  ..., 1.0454e-03,
          8.6906e-05, 8.8426e-05]],
        [[9.8222e-01, 5.4636e-03, 5.3768e-03,  ..., 9.7816e-04,
          2.0670e-04, 1.3779e-04],
         [4.8954e-03, 5.9422e-03, 5.3768e-03,  ..., 9.7816e-04,
          2.0670e-04, 1.3779e-04],
         [8.6414e-03, 5.4636e-03, 5.3768e-03,  ..., 9.9707e-01,
          9.9938e-01, 9.9959e-01],
         [4.2470e-03, 9.8313e-01, 9.8387e-01,  ..., 9.7816e-04,
          2.0670e-04, 1.3779e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7883e-04, 1.6364e-04, 9.9781e-01,  ..., 1.6356e-03,
          8.2776e-05, 3.0987e-03],
         [9.7883e-04, 1.6364e-04, 7.3126e-04,  ..., 1.6356e-03,
          8.2776e-05, 3.0987e-03],
         [9.9706e-01, 1.6364e-04, 7.3126e-04,  ..., 9.9509e-01,
          8.2776e-05, 9.9070e-01],
         [9.7883e-04, 9.9951e-01, 7.3126e-04,  ..., 1.6356e-03,
          9.9975e-01, 3.0987e-03]],
        [[5.5327e-03, 5.8399e-05, 5.9401e-05,  ..., 5.8840e-05,
          9.9337e-01, 2.2215e-03],
         [5.5327e-03, 5.8399e-05, 5.9401e-05,  ..., 5.8840e-05,
          2.0182e-03, 2.2215e-03],
         [9.8316e-01, 5.8399e-05, 5.9401e-05,  ..., 5.8840e-05,
          2.0182e-03, 9.9334e-01],
         [5.7761e-03, 9.9982e-01, 9.9982e-01,  ..., 9.9982e-01,
          2.5931e-03, 2.2215e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 496:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9915e-01, 4.2784e-03, 6.2728e-03,  ..., 3.3730e-03,
          3.4268e-04, 9.9702e-01],
         [2.8319e-04, 4.2784e-03, 6.2728e-03,  ..., 3.3730e-03,
          3.4268e-04, 9.9442e-04],
         [2.8319e-04, 4.2784e-03, 8.0586e-03,  ..., 9.8988e-01,
          9.9897e-01, 9.9442e-04],
         [2.8319e-04, 9.8716e-01, 9.7940e-01,  ..., 3.3730e-03,
          3.4268e-04, 9.9442e-04]],
        [[9.9182e-01, 3.2192e-03, 8.8950e-03,  ..., 2.6910e-04,
          1.1045e-04, 2.1741e-04],
         [2.7253e-03, 3.2192e-03, 9.0825e-03,  ..., 2.6910e-04,
          1.1045e-04, 2.1741e-04],
         [2.7253e-03, 3.2192e-03, 9.8013e-03,  ..., 9.9919e-01,
          9.9967e-01, 9.9935e-01],
         [2.7253e-03, 9.9034e-01, 9.7222e-01,  ..., 2.6910e-04,
          1.1045e-04, 2.1741e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.5209e-03, 9.0529e-04, 9.9925e-01,  ..., 3.5149e-03,
          5.5179e-05, 1.9614e-03],
         [6.2413e-03, 9.0529e-04, 2.5053e-04,  ..., 3.5149e-03,
          5.5179e-05, 1.9614e-03],
         [9.8060e-01, 9.0529e-04, 2.5053e-04,  ..., 9.8946e-01,
          5.5179e-05, 9.9412e-01],
         [6.6396e-03, 9.9728e-01, 2.5053e-04,  ..., 3.5149e-03,
          9.9983e-01, 1.9614e-03]],
        [[2.5313e-03, 3.6924e-04, 5.7830e-05,  ..., 3.0919e-04,
          9.9844e-01, 2.7496e-03],
         [2.5313e-03, 3.6924e-04, 5.7830e-05,  ..., 3.0919e-04,
          5.1921e-04, 2.7496e-03],
         [9.9241e-01, 3.6924e-04, 5.7830e-05,  ..., 3.0919e-04,
          5.1921e-04, 9.9175e-01],
         [2.5313e-03, 9.9889e-01, 9.9983e-01,  ..., 9.9907e-01,
          5.1921e-04, 2.7496e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 497:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:53,888 [Process: 0] Synchronize training processes
2024-08-18 15:21:53,889 [Process: 0] Evaluating...
2024-08-18 15:21:53,890 [Process: 0] EPOCH 496:
2024-08-18 15:21:53,892 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:55,019 [Process: 0] Synchronize training processes
2024-08-18 15:21:55,019 [Process: 0] Evaluating...
2024-08-18 15:21:55,021 [Process: 0] EPOCH 497:
2024-08-18 15:21:55,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9962e-01, 4.7804e-03, 1.4430e-02,  ..., 1.6013e-02,
          5.9120e-04, 9.9857e-01],
         [1.2596e-04, 4.9960e-03, 1.9281e-02,  ..., 1.6502e-02,
          5.9120e-04, 4.7583e-04],
         [1.2596e-04, 4.7804e-03, 1.6096e-02,  ..., 9.5287e-01,
          9.9823e-01, 4.7583e-04],
         [1.2596e-04, 9.8544e-01, 9.5019e-01,  ..., 1.4610e-02,
          5.9120e-04, 4.7583e-04]],
        [[9.9891e-01, 7.5348e-03, 3.0600e-03,  ..., 2.2668e-04,
          2.4522e-03, 1.7103e-04],
         [3.6216e-04, 9.4455e-03, 3.0600e-03,  ..., 2.2668e-04,
          3.4473e-03, 1.7103e-04],
         [3.6216e-04, 7.5348e-03, 3.0600e-03,  ..., 9.9932e-01,
          9.9165e-01, 9.9949e-01],
         [3.6216e-04, 9.7548e-01, 9.9082e-01,  ..., 2.2668e-04,
          2.4522e-03, 1.7103e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1718e-03, 2.5439e-04, 9.9778e-01,  ..., 1.1477e-03,
          9.1701e-05, 2.8551e-03],
         [2.1718e-03, 2.5439e-04, 7.0352e-04,  ..., 1.1477e-03,
          9.1701e-05, 2.8551e-03],
         [9.9348e-01, 2.5439e-04, 7.0352e-04,  ..., 9.9656e-01,
          9.1701e-05, 9.9143e-01],
         [2.1718e-03, 9.9924e-01, 8.1754e-04,  ..., 1.1477e-03,
          9.9972e-01, 2.8551e-03]],
        [[1.6707e-03, 2.7084e-05, 1.3770e-04,  ..., 2.8308e-03,
          9.9895e-01, 1.3231e-03],
         [1.6707e-03, 2.7084e-05, 1.3770e-04,  ..., 2.8308e-03,
          3.5093e-04, 1.3231e-03],
         [9.9499e-01, 2.7084e-05, 1.3770e-04,  ..., 2.8308e-03,
          3.5093e-04, 9.9603e-01],
         [1.6707e-03, 9.9992e-01, 9.9959e-01,  ..., 9.9151e-01,
          3.5093e-04, 1.3231e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 498:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9386e-01, 7.5540e-03, 6.9858e-03,  ..., 5.1422e-03,
          2.3791e-04, 9.9810e-01],
         [2.0480e-03, 7.5540e-03, 6.9858e-03,  ..., 5.1422e-03,
          2.3791e-04, 7.1899e-04],
         [2.0480e-03, 8.1740e-03, 7.4750e-03,  ..., 9.8457e-01,
          9.9929e-01, 5.9205e-04],
         [2.0480e-03, 9.7672e-01, 9.7855e-01,  ..., 5.1422e-03,
          2.3791e-04, 5.9205e-04]],
        [[9.9920e-01, 9.0114e-03, 3.0214e-03,  ..., 2.1146e-03,
          4.0043e-04, 1.4114e-04],
         [2.6806e-04, 9.1454e-03, 3.0214e-03,  ..., 3.1503e-03,
          4.0043e-04, 1.4114e-04],
         [2.6806e-04, 8.6808e-03, 3.0214e-03,  ..., 9.9262e-01,
          9.9880e-01, 9.9958e-01],
         [2.6806e-04, 9.7316e-01, 9.9094e-01,  ..., 2.1146e-03,
          4.0043e-04, 1.4114e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:21:56,166 [Process: 0] Synchronize training processes
2024-08-18 15:21:56,166 [Process: 0] Evaluating...
2024-08-18 15:21:56,168 [Process: 0] EPOCH 498:
2024-08-18 15:21:56,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:57,285 [Process: 0] Synchronize training processes
2024-08-18 15:21:57,285 [Process: 0] Evaluating...
2024-08-18 15:21:57,287 [Process: 0] EPOCH 499:
2024-08-18 15:21:57,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1892e-03, 1.4620e-04, 9.9376e-01,  ..., 2.6239e-03,
          3.9258e-04, 1.4594e-03],
         [2.1892e-03, 1.4620e-04, 2.0814e-03,  ..., 2.6239e-03,
          3.9258e-04, 1.4594e-03],
         [9.9343e-01, 1.4620e-04, 2.0814e-03,  ..., 9.9213e-01,
          3.9258e-04, 9.9562e-01],
         [2.1892e-03, 9.9956e-01, 2.0814e-03,  ..., 2.6239e-03,
          9.9882e-01, 1.4594e-03]],
        [[4.9442e-03, 4.6874e-04, 1.4579e-04,  ..., 1.4277e-04,
          9.9364e-01, 3.0711e-03],
         [4.9442e-03, 4.6874e-04, 1.4579e-04,  ..., 1.4277e-04,
          1.8496e-03, 3.0711e-03],
         [9.8512e-01, 4.6874e-04, 1.4579e-04,  ..., 1.4277e-04,
          1.8496e-03, 9.9079e-01],
         [4.9957e-03, 9.9859e-01, 9.9956e-01,  ..., 9.9957e-01,
          2.6637e-03, 3.0711e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 499:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9800e-01, 2.1246e-03, 6.1228e-03,  ..., 5.1530e-04,
          1.1722e-04, 9.9571e-01],
         [6.6702e-04, 2.1246e-03, 6.1228e-03,  ..., 5.1530e-04,
          1.1722e-04, 1.3654e-03],
         [6.6702e-04, 2.1246e-03, 6.1228e-03,  ..., 9.9845e-01,
          9.9965e-01, 1.5566e-03],
         [6.6702e-04, 9.9363e-01, 9.8163e-01,  ..., 5.1530e-04,
          1.1722e-04, 1.3654e-03]],
        [[9.9852e-01, 4.7469e-03, 4.0204e-03,  ..., 2.5443e-04,
          4.2912e-04, 1.3244e-04],
         [4.9189e-04, 4.7469e-03, 4.0204e-03,  ..., 2.5443e-04,
          4.2912e-04, 1.3244e-04],
         [4.9189e-04, 4.7469e-03, 4.0204e-03,  ..., 9.9924e-01,
          9.9871e-01, 9.9960e-01],
         [4.9189e-04, 9.8576e-01, 9.8794e-01,  ..., 2.5443e-04,
          4.2912e-04, 1.3244e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5669e-03, 8.0922e-06, 9.9734e-01,  ..., 1.0755e-02,
          2.5616e-04, 2.6010e-02],
         [4.5232e-03, 8.0922e-06, 8.3748e-04,  ..., 1.0172e-02,
          2.5616e-04, 1.3418e-02],
         [9.8639e-01, 8.0922e-06, 8.3748e-04,  ..., 9.6901e-01,
          2.5616e-04, 9.4537e-01],
         [4.5232e-03, 9.9998e-01, 9.8547e-04,  ..., 1.0064e-02,
          9.9923e-01, 1.5200e-02]],
        [[4.9721e-03, 1.7757e-04, 7.2711e-05,  ..., 9.6270e-04,
          9.9982e-01, 6.6511e-04],
         [4.9721e-03, 1.7757e-04, 7.2711e-05,  ..., 9.6270e-04,
          6.0020e-05, 6.6511e-04],
         [9.8508e-01, 1.7757e-04, 7.2711e-05,  ..., 9.6270e-04,
          6.0020e-05, 9.9800e-01],
         [4.9721e-03, 9.9947e-01, 9.9978e-01,  ..., 9.9711e-01,
          6.0020e-05, 6.6511e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 500:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9412e-01, 2.5841e-03, 3.3579e-03,  ..., 3.9724e-04,
          1.7278e-04, 9.9956e-01],
         [1.9599e-03, 2.5841e-03, 3.3579e-03,  ..., 3.9724e-04,
          1.7278e-04, 1.4680e-04],
         [1.9599e-03, 2.5841e-03, 3.8867e-03,  ..., 9.9881e-01,
          9.9948e-01, 1.4680e-04],
         [1.9599e-03, 9.9225e-01, 9.8940e-01,  ..., 3.9724e-04,
          1.7278e-04, 1.4680e-04]],
        [[9.9031e-01, 5.7305e-03, 1.7744e-03,  ..., 1.1678e-04,
          1.3094e-04, 3.0608e-03],
         [3.0315e-03, 5.7305e-03, 1.7744e-03,  ..., 1.1678e-04,
          1.3094e-04, 3.0608e-03],
         [3.6274e-03, 6.8403e-03, 1.7744e-03,  ..., 9.9965e-01,
          9.9961e-01, 9.9082e-01],
         [3.0315e-03, 9.8170e-01, 9.9468e-01,  ..., 1.1678e-04,
          1.3094e-04, 3.0608e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:21:58,416 [Process: 0] Synchronize training processes
2024-08-18 15:21:58,417 [Process: 0] Evaluating...
2024-08-18 15:21:58,418 [Process: 0] EPOCH 500:
2024-08-18 15:21:58,420 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:21:59,548 [Process: 0] Synchronize training processes
2024-08-18 15:21:59,548 [Process: 0] Evaluating...
2024-08-18 15:21:59,550 [Process: 0] EPOCH 501:
2024-08-18 15:21:59,552 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7633e-03, 8.8153e-05, 7.8143e-01,  ..., 2.7218e-03,
          6.2636e-05, 2.4387e-03],
         [2.7633e-03, 8.8153e-05, 2.4124e-02,  ..., 2.7218e-03,
          6.2636e-05, 2.4387e-03],
         [9.9171e-01, 8.8153e-05, 2.4124e-02,  ..., 9.9183e-01,
          6.2636e-05, 9.9268e-01],
         [2.7633e-03, 9.9974e-01, 1.7032e-01,  ..., 2.7218e-03,
          9.9981e-01, 2.4387e-03]],
        [[3.1733e-03, 5.8324e-05, 1.0209e-04,  ..., 5.7366e-04,
          9.9727e-01, 2.2760e-03],
         [3.1733e-03, 5.8324e-05, 1.0209e-04,  ..., 5.7366e-04,
          8.7486e-04, 2.2760e-03],
         [9.9048e-01, 5.8324e-05, 1.0209e-04,  ..., 5.7366e-04,
          8.7486e-04, 9.9317e-01],
         [3.1733e-03, 9.9983e-01, 9.9969e-01,  ..., 9.9828e-01,
          9.7554e-04, 2.2760e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 501:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9816e-01, 4.4591e-03, 3.8540e-03,  ..., 5.5069e-04,
          9.0687e-05, 9.9816e-01],
         [6.1482e-04, 4.4591e-03, 3.8540e-03,  ..., 5.5069e-04,
          9.0687e-05, 6.1357e-04],
         [6.1482e-04, 4.9464e-03, 3.8540e-03,  ..., 9.9835e-01,
          9.9973e-01, 6.1357e-04],
         [6.1482e-04, 9.8614e-01, 9.8844e-01,  ..., 5.5069e-04,
          9.0687e-05, 6.1357e-04]],
        [[9.9851e-01, 3.1392e-03, 8.4027e-03,  ..., 9.7384e-04,
          2.6338e-03, 2.5398e-04],
         [4.6993e-04, 3.1827e-03, 1.1140e-02,  ..., 9.7384e-04,
          3.4787e-03, 2.5398e-04],
         [5.5139e-04, 3.1392e-03, 9.1380e-03,  ..., 9.9708e-01,
          9.9125e-01, 9.9924e-01],
         [4.6993e-04, 9.9054e-01, 9.7132e-01,  ..., 9.7384e-04,
          2.6338e-03, 2.5398e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5203e-03, 2.0190e-05, 9.9644e-01,  ..., 1.5314e-03,
          2.7318e-05, 3.9138e-03],
         [2.5203e-03, 2.0190e-05, 9.4702e-04,  ..., 1.5314e-03,
          2.7318e-05, 3.9138e-03],
         [9.9244e-01, 2.0190e-05, 9.4702e-04,  ..., 9.9541e-01,
          2.7318e-05, 9.8826e-01],
         [2.5203e-03, 9.9994e-01, 1.6688e-03,  ..., 1.5314e-03,
          9.9992e-01, 3.9138e-03]],
        [[3.0988e-03, 6.2328e-05, 4.6806e-04,  ..., 8.3617e-05,
          9.5413e-01, 5.9070e-03],
         [3.0988e-03, 6.2328e-05, 4.6806e-04,  ..., 8.3617e-05,
          1.1617e-02, 5.4547e-03],
         [9.9070e-01, 6.2328e-05, 4.6806e-04,  ..., 8.3617e-05,
          1.0734e-02, 9.8318e-01],
         [3.0988e-03, 9.9981e-01, 9.9860e-01,  ..., 9.9975e-01,
          2.3520e-02, 5.4547e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 502:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8782e-01, 6.9728e-03, 1.1077e-03,  ..., 1.1975e-03,
          4.2821e-04, 9.9844e-01],
         [7.1675e-03, 6.9728e-03, 1.1077e-03,  ..., 1.1975e-03,
          4.2821e-04, 5.1966e-04],
         [2.5087e-03, 8.2266e-03, 1.1077e-03,  ..., 9.9641e-01,
          9.9872e-01, 5.1966e-04],
         [2.5087e-03, 9.7783e-01, 9.9668e-01,  ..., 1.1975e-03,
          4.2821e-04, 5.1966e-04]],
        [[9.9981e-01, 2.5836e-03, 1.8707e-03,  ..., 1.5426e-04,
          2.4073e-03, 2.2525e-04],
         [6.4992e-05, 2.5836e-03, 1.8707e-03,  ..., 1.5426e-04,
          3.6107e-03, 2.2525e-04],
         [6.4992e-05, 2.5836e-03, 1.8707e-03,  ..., 9.9954e-01,
          9.9157e-01, 9.9932e-01],
         [6.4992e-05, 9.9225e-01, 9.9439e-01,  ..., 1.5426e-04,
          2.4073e-03, 2.2525e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:00,675 [Process: 0] Synchronize training processes
2024-08-18 15:22:00,676 [Process: 0] Evaluating...
2024-08-18 15:22:00,680 [Process: 0] EPOCH 502:
2024-08-18 15:22:00,682 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.8479e-03, 4.2324e-05, 9.8395e-01,  ..., 6.9202e-03,
          2.4840e-05, 1.9633e-03],
         [5.8479e-03, 4.2324e-05, 3.0097e-03,  ..., 6.9202e-03,
          2.4840e-05, 1.9633e-03],
         [9.8130e-01, 4.2324e-05, 3.0097e-03,  ..., 9.7847e-01,
          2.4840e-05, 9.9411e-01],
         [7.0081e-03, 9.9987e-01, 1.0036e-02,  ..., 7.6925e-03,
          9.9993e-01, 1.9633e-03]],
        [[1.5967e-03, 1.1299e-04, 2.9204e-05,  ..., 2.5688e-04,
          9.9152e-01, 5.1996e-03],
         [1.5967e-03, 1.1299e-04, 2.9204e-05,  ..., 2.5688e-04,
          2.8271e-03, 5.1996e-03],
         [9.9521e-01, 1.1299e-04, 2.9204e-05,  ..., 2.5688e-04,
          2.8271e-03, 9.8440e-01],
         [1.5967e-03, 9.9966e-01, 9.9991e-01,  ..., 9.9923e-01,
          2.8271e-03, 5.1996e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 503:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9841e-01, 2.2931e-02, 8.0697e-04,  ..., 5.3824e-04,
          1.7896e-04, 9.9953e-01],
         [5.5224e-04, 1.8589e-02, 8.0697e-04,  ..., 5.3824e-04,
          1.7896e-04, 1.5827e-04],
         [5.1866e-04, 2.6619e-02, 8.0697e-04,  ..., 9.9839e-01,
          9.9946e-01, 1.5827e-04],
         [5.1866e-04, 9.3186e-01, 9.9758e-01,  ..., 5.3824e-04,
          1.7896e-04, 1.5827e-04]],
        [[9.9631e-01, 2.1638e-03, 1.0276e-03,  ..., 1.9199e-03,
          7.8338e-04, 9.2016e-04],
         [1.1650e-03, 2.1638e-03, 1.0276e-03,  ..., 1.9199e-03,
          7.8338e-04, 9.2016e-04],
         [1.3625e-03, 2.1638e-03, 1.0276e-03,  ..., 9.9424e-01,
          9.9765e-01, 9.9724e-01],
         [1.1650e-03, 9.9351e-01, 9.9692e-01,  ..., 1.9199e-03,
          7.8338e-04, 9.2016e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.3483e-04, 1.6059e-04, 9.8591e-01,  ..., 2.9122e-03,
          5.3529e-05, 1.4195e-03],
         [5.3483e-04, 1.6059e-04, 2.9415e-03,  ..., 2.9122e-03,
          5.3529e-05, 1.4195e-03],
         [9.9840e-01, 1.6059e-04, 2.9415e-03,  ..., 9.9126e-01,
          5.3529e-05, 9.9574e-01],
         [5.3483e-04, 9.9952e-01, 8.2066e-03,  ..., 2.9122e-03,
          9.9984e-01, 1.4195e-03]],
        [[3.5451e-03, 2.1049e-05, 3.4526e-05,  ..., 1.0551e-04,
          9.9763e-01, 1.5007e-02],
         [3.5451e-03, 2.1049e-05, 3.4526e-05,  ..., 1.0551e-04,
          7.6694e-04, 1.9702e-02],
         [9.8936e-01, 2.1049e-05, 3.4526e-05,  ..., 1.0551e-04,
          7.6694e-04, 9.5000e-01],
         [3.5451e-03, 9.9994e-01, 9.9990e-01,  ..., 9.9968e-01,
          8.3906e-04, 1.5291e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 504:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:01,810 [Process: 0] Synchronize training processes
2024-08-18 15:22:01,810 [Process: 0] Evaluating...
2024-08-18 15:22:01,812 [Process: 0] EPOCH 503:
2024-08-18 15:22:01,813 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:02,942 [Process: 0] Synchronize training processes
2024-08-18 15:22:02,942 [Process: 0] Evaluating...
2024-08-18 15:22:02,944 [Process: 0] EPOCH 504:
2024-08-18 15:22:02,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8738e-01, 3.4868e-03, 2.4624e-03,  ..., 1.5124e-04,
          1.4626e-04, 9.9743e-01],
         [5.6791e-03, 3.4868e-03, 2.4624e-03,  ..., 1.5124e-04,
          1.4626e-04, 8.0731e-04],
         [3.4684e-03, 4.3844e-03, 2.4624e-03,  ..., 9.9955e-01,
          9.9956e-01, 8.0731e-04],
         [3.4684e-03, 9.8864e-01, 9.9261e-01,  ..., 1.5124e-04,
          1.4626e-04, 9.5924e-04]],
        [[9.9569e-01, 1.4178e-03, 5.9109e-03,  ..., 1.1556e-04,
          1.0099e-03, 2.5958e-04],
         [1.4435e-03, 1.4178e-03, 5.9109e-03,  ..., 1.1556e-04,
          1.0099e-03, 2.5958e-04],
         [1.4340e-03, 1.4178e-03, 5.9109e-03,  ..., 9.9965e-01,
          9.9697e-01, 9.9922e-01],
         [1.4340e-03, 9.9575e-01, 9.8227e-01,  ..., 1.1556e-04,
          1.0099e-03, 2.5958e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0198e-03, 1.1494e-05, 9.8737e-01,  ..., 7.5215e-03,
          1.8892e-05, 3.4938e-03],
         [3.0198e-03, 1.1494e-05, 3.0423e-03,  ..., 5.2796e-03,
          1.8892e-05, 3.4938e-03],
         [9.9094e-01, 1.1494e-05, 3.0423e-03,  ..., 9.8192e-01,
          1.8892e-05, 9.8952e-01],
         [3.0198e-03, 9.9997e-01, 6.5445e-03,  ..., 5.2796e-03,
          9.9994e-01, 3.4938e-03]],
        [[1.7159e-03, 5.7700e-05, 4.3318e-04,  ..., 3.6429e-04,
          9.9274e-01, 5.9833e-03],
         [1.7159e-03, 5.7700e-05, 4.3318e-04,  ..., 3.6429e-04,
          1.2317e-03, 5.4062e-03],
         [9.9485e-01, 5.7700e-05, 4.3318e-04,  ..., 3.6429e-04,
          1.2317e-03, 9.8320e-01],
         [1.7159e-03, 9.9983e-01, 9.9870e-01,  ..., 9.9891e-01,
          4.7957e-03, 5.4062e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 505:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9873e-01, 1.7635e-03, 2.7295e-03,  ..., 8.0983e-05,
          7.4377e-04, 9.9871e-01],
         [4.2383e-04, 1.7635e-03, 2.7295e-03,  ..., 8.0983e-05,
          7.4377e-04, 4.3080e-04],
         [4.2383e-04, 1.7635e-03, 2.7295e-03,  ..., 9.9976e-01,
          9.9777e-01, 4.3080e-04],
         [4.2383e-04, 9.9471e-01, 9.9181e-01,  ..., 8.0983e-05,
          7.4377e-04, 4.3080e-04]],
        [[9.7192e-01, 6.5564e-03, 4.5829e-03,  ..., 1.5533e-04,
          8.7560e-04, 1.4678e-03],
         [1.8588e-02, 6.5564e-03, 4.5829e-03,  ..., 1.5533e-04,
          8.7560e-04, 1.4678e-03],
         [4.7481e-03, 6.5564e-03, 4.5829e-03,  ..., 9.9953e-01,
          9.9737e-01, 9.9560e-01],
         [4.7481e-03, 9.8033e-01, 9.8625e-01,  ..., 1.5533e-04,
          8.7560e-04, 1.4678e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:22:04,067 [Process: 0] Synchronize training processes
2024-08-18 15:22:04,067 [Process: 0] Evaluating...
2024-08-18 15:22:04,069 [Process: 0] EPOCH 505:
2024-08-18 15:22:04,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:05,187 [Process: 0] Synchronize training processes
2024-08-18 15:22:05,187 [Process: 0] Evaluating...
2024-08-18 15:22:05,189 [Process: 0] EPOCH 506:
2024-08-18 15:22:05,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7311e-03, 1.6976e-05, 9.9094e-01,  ..., 7.0214e-03,
          4.7494e-04, 5.9870e-03],
         [2.7311e-03, 1.6976e-05, 2.3462e-03,  ..., 7.0214e-03,
          4.7494e-04, 5.9870e-03],
         [9.9181e-01, 1.6976e-05, 2.3462e-03,  ..., 9.7885e-01,
          4.7494e-04, 9.8204e-01],
         [2.7311e-03, 9.9995e-01, 4.3659e-03,  ..., 7.1076e-03,
          9.9858e-01, 5.9870e-03]],
        [[3.0366e-03, 3.1406e-05, 3.4369e-04,  ..., 6.3808e-04,
          9.9803e-01, 2.8213e-03],
         [3.0366e-03, 3.1406e-05, 3.4369e-04,  ..., 6.3808e-04,
          6.5617e-04, 2.8213e-03],
         [9.9089e-01, 3.1406e-05, 3.4369e-04,  ..., 6.3808e-04,
          6.5617e-04, 9.9154e-01],
         [3.0366e-03, 9.9991e-01, 9.9897e-01,  ..., 9.9809e-01,
          6.5617e-04, 2.8213e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 506:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9064e-01, 2.1952e-03, 2.5266e-03,  ..., 5.0240e-04,
          2.2457e-04, 9.9885e-01],
         [2.8690e-03, 2.1952e-03, 2.5266e-03,  ..., 5.0240e-04,
          2.2457e-04, 3.8231e-04],
         [3.6267e-03, 2.1952e-03, 2.5266e-03,  ..., 9.9849e-01,
          9.9933e-01, 3.8231e-04],
         [2.8690e-03, 9.9341e-01, 9.9242e-01,  ..., 5.0240e-04,
          2.2457e-04, 3.8231e-04]],
        [[9.9053e-01, 4.5144e-03, 1.0542e-02,  ..., 4.7645e-04,
          1.7316e-04, 5.4459e-04],
         [2.2283e-03, 4.5144e-03, 1.0670e-02,  ..., 4.7645e-04,
          1.7316e-04, 5.8682e-04],
         [5.0101e-03, 4.5144e-03, 1.1869e-02,  ..., 9.9857e-01,
          9.9948e-01, 9.9832e-01],
         [2.2283e-03, 9.8646e-01, 9.6692e-01,  ..., 4.7645e-04,
          1.7316e-04, 5.4459e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0128e-03, 1.3513e-04, 9.9082e-01,  ..., 1.8669e-03,
          8.6612e-05, 2.9515e-02],
         [1.0128e-03, 1.3513e-04, 2.1691e-03,  ..., 1.8669e-03,
          8.6612e-05, 3.6284e-02],
         [9.9696e-01, 1.3513e-04, 2.1691e-03,  ..., 9.9440e-01,
          8.6612e-05, 9.0429e-01],
         [1.0128e-03, 9.9959e-01, 4.8377e-03,  ..., 1.8669e-03,
          9.9974e-01, 2.9915e-02]],
        [[3.1243e-03, 1.7748e-05, 8.2759e-05,  ..., 4.5990e-05,
          7.5304e-01, 4.8397e-03],
         [3.1243e-03, 1.7748e-05, 8.2759e-05,  ..., 4.5990e-05,
          4.3206e-02, 4.6159e-03],
         [9.9063e-01, 1.7748e-05, 8.2759e-05,  ..., 4.5990e-05,
          1.3344e-01, 9.8593e-01],
         [3.1243e-03, 9.9995e-01, 9.9975e-01,  ..., 9.9986e-01,
          7.0311e-02, 4.6159e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 507:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9564e-01, 8.3394e-03, 1.2858e-03,  ..., 3.1670e-04,
          7.6303e-04, 9.9561e-01],
         [1.4519e-03, 8.3394e-03, 1.2858e-03,  ..., 3.1670e-04,
          7.6303e-04, 1.3991e-03],
         [1.4519e-03, 9.6105e-03, 1.2858e-03,  ..., 9.9905e-01,
          9.9771e-01, 1.5953e-03],
         [1.4519e-03, 9.7371e-01, 9.9614e-01,  ..., 3.1670e-04,
          7.6303e-04, 1.3991e-03]],
        [[9.9624e-01, 4.2419e-03, 2.2979e-03,  ..., 2.0872e-04,
          6.2266e-04, 8.3858e-05],
         [1.2539e-03, 4.2419e-03, 2.2979e-03,  ..., 2.0872e-04,
          6.2266e-04, 8.3858e-05],
         [1.2539e-03, 4.2419e-03, 2.2979e-03,  ..., 9.9937e-01,
          9.9813e-01, 9.9975e-01],
         [1.2539e-03, 9.8727e-01, 9.9311e-01,  ..., 2.0872e-04,
          6.2266e-04, 8.3858e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:06,316 [Process: 0] Synchronize training processes
2024-08-18 15:22:06,316 [Process: 0] Evaluating...
2024-08-18 15:22:06,318 [Process: 0] EPOCH 507:
2024-08-18 15:22:06,319 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:07,446 [Process: 0] Synchronize training processes
2024-08-18 15:22:07,446 [Process: 0] Evaluating...
2024-08-18 15:22:07,448 [Process: 0] EPOCH 508:
2024-08-18 15:22:07,450 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7493e-03, 1.1707e-03, 9.8159e-01,  ..., 7.8624e-03,
          8.9564e-06, 2.6772e-03],
         [1.7493e-03, 1.1707e-03, 4.4287e-03,  ..., 6.8222e-03,
          8.9564e-06, 2.6772e-03],
         [9.9475e-01, 1.1707e-03, 4.4287e-03,  ..., 9.7849e-01,
          8.9564e-06, 9.9197e-01],
         [1.7493e-03, 9.9649e-01, 9.5542e-03,  ..., 6.8222e-03,
          9.9997e-01, 2.6772e-03]],
        [[2.7334e-03, 1.0638e-03, 5.0107e-05,  ..., 2.3070e-04,
          9.9906e-01, 3.9187e-03],
         [2.7334e-03, 1.0638e-03, 5.0107e-05,  ..., 2.3070e-04,
          3.1318e-04, 3.9187e-03],
         [9.9180e-01, 1.0638e-03, 5.0107e-05,  ..., 2.3070e-04,
          3.1318e-04, 9.8824e-01],
         [2.7334e-03, 9.9681e-01, 9.9985e-01,  ..., 9.9931e-01,
          3.1318e-04, 3.9187e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 508:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7373e-01, 3.2501e-03, 3.5676e-03,  ..., 3.3634e-04,
          3.7743e-04, 9.9940e-01],
         [1.5399e-02, 3.2501e-03, 3.5676e-03,  ..., 3.3634e-04,
          3.7743e-04, 1.9916e-04],
         [5.4375e-03, 3.2501e-03, 3.5676e-03,  ..., 9.9899e-01,
          9.9887e-01, 1.9916e-04],
         [5.4375e-03, 9.9025e-01, 9.8930e-01,  ..., 3.3634e-04,
          3.7743e-04, 1.9916e-04]],
        [[9.9947e-01, 4.9213e-03, 5.2921e-03,  ..., 2.4079e-03,
          6.2055e-05, 3.5812e-04],
         [1.7791e-04, 4.9213e-03, 5.2921e-03,  ..., 2.6611e-03,
          6.2055e-05, 3.5812e-04],
         [1.7791e-04, 5.0647e-03, 5.8979e-03,  ..., 9.9252e-01,
          9.9981e-01, 9.9893e-01],
         [1.7791e-04, 9.8509e-01, 9.8352e-01,  ..., 2.4079e-03,
          6.2055e-05, 3.5812e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3078e-02, 3.6315e-05, 9.9395e-01,  ..., 7.5814e-03,
          1.9599e-04, 1.5071e-03],
         [1.1791e-02, 3.6315e-05, 1.2426e-03,  ..., 6.2607e-03,
          1.9599e-04, 1.5071e-03],
         [9.6378e-01, 3.6315e-05, 1.2426e-03,  ..., 9.7990e-01,
          1.9599e-04, 9.9548e-01],
         [1.1353e-02, 9.9989e-01, 3.5671e-03,  ..., 6.2607e-03,
          9.9941e-01, 1.5071e-03]],
        [[4.0589e-03, 2.1981e-05, 5.6874e-05,  ..., 7.3996e-04,
          9.9632e-01, 2.4959e-03],
         [3.4612e-03, 2.1981e-05, 5.6874e-05,  ..., 7.3996e-04,
          1.1452e-03, 2.4959e-03],
         [9.8902e-01, 2.1981e-05, 5.6874e-05,  ..., 7.3996e-04,
          1.1452e-03, 9.9251e-01],
         [3.4612e-03, 9.9993e-01, 9.9983e-01,  ..., 9.9778e-01,
          1.3846e-03, 2.4959e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 509:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9236e-01, 2.8761e-03, 3.5764e-03,  ..., 5.6863e-04,
          1.6101e-03, 9.9960e-01],
         [2.5465e-03, 2.8761e-03, 3.5764e-03,  ..., 5.6863e-04,
          1.6101e-03, 1.3313e-04],
         [2.5465e-03, 2.8761e-03, 3.5764e-03,  ..., 9.9829e-01,
          9.9517e-01, 1.3313e-04],
         [2.5465e-03, 9.9137e-01, 9.8927e-01,  ..., 5.6863e-04,
          1.6101e-03, 1.3313e-04]],
        [[9.9835e-01, 9.0472e-03, 3.0937e-03,  ..., 1.7336e-03,
          4.6525e-04, 1.4886e-04],
         [5.5012e-04, 1.1832e-02, 3.0937e-03,  ..., 1.7336e-03,
          4.6525e-04, 1.4886e-04],
         [5.5012e-04, 9.8265e-03, 3.0937e-03,  ..., 9.9480e-01,
          9.9860e-01, 9.9955e-01],
         [5.5012e-04, 9.6929e-01, 9.9072e-01,  ..., 1.7336e-03,
          4.6525e-04, 1.4886e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:08,578 [Process: 0] Synchronize training processes
2024-08-18 15:22:08,578 [Process: 0] Evaluating...
2024-08-18 15:22:08,580 [Process: 0] EPOCH 509:
2024-08-18 15:22:08,582 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4096e-03, 6.6709e-06, 8.1491e-01,  ..., 1.6233e-03,
          1.8399e-05, 4.7832e-03],
         [4.4096e-03, 6.6709e-06, 1.9122e-02,  ..., 1.6233e-03,
          1.8399e-05, 4.7832e-03],
         [9.8677e-01, 6.6709e-06, 1.9122e-02,  ..., 9.9513e-01,
          1.8399e-05, 9.8565e-01],
         [4.4096e-03, 9.9998e-01, 1.4685e-01,  ..., 1.6233e-03,
          9.9994e-01, 4.7832e-03]],
        [[2.2739e-03, 6.6901e-05, 2.6515e-04,  ..., 3.6263e-03,
          9.8621e-01, 2.9699e-02],
         [2.2739e-03, 6.6901e-05, 2.6515e-04,  ..., 5.6532e-03,
          4.2392e-03, 1.7143e-02],
         [9.9318e-01, 6.6901e-05, 2.6515e-04,  ..., 3.6263e-03,
          4.8202e-03, 9.2907e-01],
         [2.2739e-03, 9.9980e-01, 9.9920e-01,  ..., 9.8709e-01,
          4.7285e-03, 2.4087e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 510:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9068e-01, 3.4270e-03, 1.8055e-03,  ..., 2.8000e-04,
          1.0028e-04, 9.9943e-01],
         [4.0770e-03, 3.4270e-03, 1.8055e-03,  ..., 2.8000e-04,
          1.0028e-04, 1.8870e-04],
         [2.6240e-03, 3.4270e-03, 1.8055e-03,  ..., 9.9916e-01,
          9.9970e-01, 1.8870e-04],
         [2.6240e-03, 9.8972e-01, 9.9458e-01,  ..., 2.8000e-04,
          1.0028e-04, 1.8870e-04]],
        [[9.9912e-01, 4.0717e-03, 1.4730e-03,  ..., 4.5500e-04,
          3.6238e-04, 4.6027e-04],
         [2.9200e-04, 4.0717e-03, 1.4730e-03,  ..., 4.5500e-04,
          3.6238e-04, 4.6027e-04],
         [2.9200e-04, 4.0717e-03, 1.4730e-03,  ..., 9.9863e-01,
          9.9891e-01, 9.9862e-01],
         [2.9200e-04, 9.8778e-01, 9.9558e-01,  ..., 4.5500e-04,
          3.6238e-04, 4.6027e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8276e-03, 1.9443e-04, 9.4924e-01,  ..., 3.5665e-03,
          2.3189e-04, 3.0138e-03],
         [1.8276e-03, 1.9443e-04, 4.6735e-03,  ..., 3.5665e-03,
          2.3189e-04, 3.0138e-03],
         [9.9452e-01, 1.9443e-04, 4.6735e-03,  ..., 9.8930e-01,
          2.3189e-04, 9.9096e-01],
         [1.8276e-03, 9.9942e-01, 4.1412e-02,  ..., 3.5665e-03,
          9.9930e-01, 3.0138e-03]],
        [[1.1534e-02, 3.9015e-04, 3.1552e-03,  ..., 3.7418e-03,
          9.9954e-01, 3.1071e-03],
         [1.4089e-02, 3.9015e-04, 3.1552e-03,  ..., 5.9304e-03,
          1.5288e-04, 3.1071e-03],
         [9.6361e-01, 3.9015e-04, 3.1552e-03,  ..., 3.7418e-03,
          1.5288e-04, 9.9068e-01],
         [1.0767e-02, 9.9883e-01, 9.9053e-01,  ..., 9.8659e-01,
          1.5288e-04, 3.1071e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 511:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:22:09,701 [Process: 0] Synchronize training processes
2024-08-18 15:22:09,701 [Process: 0] Evaluating...
2024-08-18 15:22:09,703 [Process: 0] EPOCH 510:
2024-08-18 15:22:09,705 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:10,833 [Process: 0] Synchronize training processes
2024-08-18 15:22:10,834 [Process: 0] Evaluating...
2024-08-18 15:22:10,836 [Process: 0] EPOCH 511:
2024-08-18 15:22:10,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8854e-01, 2.4300e-03, 3.6923e-03,  ..., 1.6306e-03,
          8.6406e-04, 9.9865e-01],
         [3.8215e-03, 2.4300e-03, 3.6923e-03,  ..., 1.6306e-03,
          8.6406e-04, 4.5164e-04],
         [3.8215e-03, 2.4300e-03, 3.6923e-03,  ..., 9.9511e-01,
          9.9741e-01, 4.5164e-04],
         [3.8215e-03, 9.9271e-01, 9.8892e-01,  ..., 1.6306e-03,
          8.6406e-04, 4.5164e-04]],
        [[9.9821e-01, 4.7914e-03, 2.1295e-03,  ..., 3.3821e-04,
          4.7456e-05, 1.7988e-04],
         [5.9692e-04, 4.7914e-03, 2.1295e-03,  ..., 3.3821e-04,
          4.7456e-05, 1.7988e-04],
         [5.9692e-04, 4.7914e-03, 2.1295e-03,  ..., 9.9899e-01,
          9.9986e-01, 9.9946e-01],
         [5.9692e-04, 9.8563e-01, 9.9361e-01,  ..., 3.3821e-04,
          4.7456e-05, 1.7988e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5687e-03, 5.0051e-05, 8.3038e-01,  ..., 7.0594e-03,
          5.6339e-04, 4.6402e-03],
         [2.5687e-03, 5.0051e-05, 1.6952e-02,  ..., 6.4491e-03,
          5.6339e-04, 4.6402e-03],
         [9.9229e-01, 5.0051e-05, 1.6952e-02,  ..., 9.8004e-01,
          5.6339e-04, 9.8608e-01],
         [2.5687e-03, 9.9985e-01, 1.3572e-01,  ..., 6.4491e-03,
          9.9831e-01, 4.6402e-03]],
        [[6.7451e-03, 8.2334e-01, 3.1397e-01,  ..., 4.9491e-03,
          9.9932e-01, 3.4517e-03],
         [6.1290e-03, 2.9088e-02, 1.6357e-01,  ..., 5.0444e-03,
          2.2819e-04, 3.4517e-03],
         [9.8093e-01, 1.0581e-01, 2.0615e-01,  ..., 4.9491e-03,
          2.2819e-04, 9.8964e-01],
         [6.1929e-03, 4.1756e-02, 3.1631e-01,  ..., 9.8506e-01,
          2.2819e-04, 3.4517e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 512:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9456e-01, 2.6080e-03, 9.5488e-03,  ..., 4.8565e-04,
          3.6590e-05, 9.9836e-01],
         [1.8118e-03, 2.6080e-03, 1.4129e-02,  ..., 4.8565e-04,
          3.6590e-05, 5.4510e-04],
         [1.8118e-03, 2.6080e-03, 1.2367e-02,  ..., 9.9854e-01,
          9.9989e-01, 5.4510e-04],
         [1.8118e-03, 9.9218e-01, 9.6396e-01,  ..., 4.8565e-04,
          3.6590e-05, 5.4510e-04]],
        [[9.9733e-01, 1.8215e-03, 2.7805e-03,  ..., 4.8497e-04,
          5.3466e-05, 2.1613e-05],
         [8.8887e-04, 1.8215e-03, 2.7805e-03,  ..., 4.8497e-04,
          5.3466e-05, 2.1613e-05],
         [8.8887e-04, 1.8215e-03, 2.7805e-03,  ..., 9.9855e-01,
          9.9984e-01, 9.9994e-01],
         [8.8887e-04, 9.9454e-01, 9.9166e-01,  ..., 4.8497e-04,
          5.3466e-05, 2.1613e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0527e-02, 4.1981e-05, 8.2092e-01,  ..., 4.5125e-03,
          9.3264e-05, 2.4957e-03],
         [9.6322e-03, 4.1981e-05, 2.4144e-02,  ..., 4.4962e-03,
          9.3264e-05, 2.4957e-03],
         [9.7125e-01, 4.1981e-05, 2.4144e-02,  ..., 9.8650e-01,
          9.3264e-05, 9.9251e-01],
         [8.5882e-03, 9.9987e-01, 1.3079e-01,  ..., 4.4962e-03,
          9.9972e-01, 2.4957e-03]],
        [[1.6895e-03, 1.8001e-03, 8.8952e-05,  ..., 7.8510e-04,
          9.9744e-01, 1.7478e-03],
         [1.6895e-03, 1.8001e-03, 8.8952e-05,  ..., 7.8510e-04,
          8.3360e-04, 1.7478e-03],
         [9.9493e-01, 1.8001e-03, 8.8952e-05,  ..., 7.8510e-04,
          8.3360e-04, 9.9476e-01],
         [1.6895e-03, 9.9460e-01, 9.9973e-01,  ..., 9.9764e-01,
          8.8858e-04, 1.7478e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 513:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:11,962 [Process: 0] Synchronize training processes
2024-08-18 15:22:11,962 [Process: 0] Evaluating...
2024-08-18 15:22:11,966 [Process: 0] EPOCH 512:
2024-08-18 15:22:11,968 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:13,098 [Process: 0] Synchronize training processes
2024-08-18 15:22:13,099 [Process: 0] Evaluating...
2024-08-18 15:22:13,100 [Process: 0] EPOCH 513:
2024-08-18 15:22:13,102 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9223e-01, 1.0329e-03, 4.4120e-03,  ..., 7.9749e-05,
          5.9481e-04, 9.9800e-01],
         [2.5907e-03, 1.0329e-03, 4.4120e-03,  ..., 7.9749e-05,
          5.9481e-04, 6.6748e-04],
         [2.5907e-03, 1.0329e-03, 4.4120e-03,  ..., 9.9976e-01,
          9.9822e-01, 6.6748e-04],
         [2.5907e-03, 9.9690e-01, 9.8676e-01,  ..., 7.9749e-05,
          5.9481e-04, 6.6748e-04]],
        [[9.9197e-01, 2.8317e-03, 1.2954e-03,  ..., 2.6751e-04,
          3.8028e-04, 6.0207e-04],
         [2.4551e-03, 2.8317e-03, 1.2954e-03,  ..., 2.6751e-04,
          3.8028e-04, 6.0207e-04],
         [3.1214e-03, 2.8317e-03, 1.2954e-03,  ..., 9.9920e-01,
          9.9886e-01, 9.9819e-01],
         [2.4551e-03, 9.9151e-01, 9.9611e-01,  ..., 2.6751e-04,
          3.8028e-04, 6.0207e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0594e-03, 1.7949e-04, 6.7586e-01,  ..., 3.8100e-03,
          1.3387e-04, 5.1037e-03],
         [1.0594e-03, 1.7949e-04, 2.2250e-02,  ..., 3.8100e-03,
          1.3387e-04, 5.1037e-03],
         [9.9682e-01, 1.7949e-04, 2.2250e-02,  ..., 9.8857e-01,
          1.3387e-04, 9.8469e-01],
         [1.0594e-03, 9.9946e-01, 2.7964e-01,  ..., 3.8100e-03,
          9.9960e-01, 5.1037e-03]],
        [[2.9502e-03, 7.5528e-05, 5.6703e-05,  ..., 1.2720e-03,
          9.9954e-01, 9.0179e-03],
         [2.9502e-03, 7.5528e-05, 5.6703e-05,  ..., 1.2720e-03,
          1.5186e-04, 8.3380e-03],
         [9.9115e-01, 7.5528e-05, 5.6703e-05,  ..., 1.2720e-03,
          1.5186e-04, 9.7447e-01],
         [2.9502e-03, 9.9977e-01, 9.9983e-01,  ..., 9.9618e-01,
          1.5186e-04, 8.1698e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 514:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6580e-01, 4.5356e-03, 3.3741e-03,  ..., 2.0275e-04,
          7.0564e-03, 9.9586e-01],
         [2.1124e-02, 4.5356e-03, 3.3741e-03,  ..., 2.0275e-04,
          1.1608e-02, 1.3811e-03],
         [6.5390e-03, 4.5356e-03, 3.3741e-03,  ..., 9.9939e-01,
          9.7428e-01, 1.3811e-03],
         [6.5390e-03, 9.8639e-01, 9.8988e-01,  ..., 2.0275e-04,
          7.0564e-03, 1.3811e-03]],
        [[9.9346e-01, 6.6575e-03, 6.2787e-03,  ..., 7.7234e-04,
          1.3855e-03, 1.7834e-04],
         [2.1787e-03, 6.8001e-03, 6.2787e-03,  ..., 7.7234e-04,
          1.4683e-03, 1.7834e-04],
         [2.1787e-03, 6.6575e-03, 8.7999e-03,  ..., 9.9768e-01,
          9.9576e-01, 9.9946e-01],
         [2.1787e-03, 9.7988e-01, 9.7864e-01,  ..., 7.7234e-04,
          1.3855e-03, 1.7834e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6527e-03, 1.0117e-04, 1.7813e-01,  ..., 4.4395e-03,
          2.4557e-04, 1.2621e-03],
         [3.6527e-03, 1.0117e-04, 1.8173e-02,  ..., 4.4395e-03,
          2.4557e-04, 1.2621e-03],
         [9.8904e-01, 1.0117e-04, 1.8173e-02,  ..., 9.8668e-01,
          2.4557e-04, 9.9621e-01],
         [3.6527e-03, 9.9970e-01, 7.8552e-01,  ..., 4.4395e-03,
          9.9926e-01, 1.2621e-03]],
        [[8.2714e-03, 7.5000e-05, 4.2924e-04,  ..., 4.7880e-04,
          9.8671e-01, 4.9804e-03],
         [8.1312e-03, 7.5000e-05, 4.2924e-04,  ..., 4.7880e-04,
          4.2325e-03, 4.9804e-03],
         [9.7563e-01, 7.5000e-05, 4.2924e-04,  ..., 4.7880e-04,
          4.8272e-03, 9.8506e-01],
         [7.9704e-03, 9.9977e-01, 9.9871e-01,  ..., 9.9856e-01,
          4.2325e-03, 4.9804e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:14,229 [Process: 0] Synchronize training processes
2024-08-18 15:22:14,229 [Process: 0] Evaluating...
2024-08-18 15:22:14,231 [Process: 0] EPOCH 514:
2024-08-18 15:22:14,233 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:15,361 [Process: 0] Synchronize training processes
2024-08-18 15:22:15,361 [Process: 0] Evaluating...
2024-08-18 15:22:15,363 [Process: 0] EPOCH 515:
2024-08-18 15:22:15,364 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 515:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9779e-01, 1.3058e-03, 3.6871e-03,  ..., 7.0237e-04,
          5.8989e-04, 9.9773e-01],
         [7.3665e-04, 1.3058e-03, 3.6871e-03,  ..., 7.0237e-04,
          5.8989e-04, 7.5504e-04],
         [7.3665e-04, 1.3058e-03, 3.6871e-03,  ..., 9.9789e-01,
          9.9823e-01, 7.5504e-04],
         [7.3665e-04, 9.9608e-01, 9.8894e-01,  ..., 7.0237e-04,
          5.8989e-04, 7.5504e-04]],
        [[9.9530e-01, 1.3642e-03, 1.0785e-02,  ..., 2.3458e-04,
          8.4939e-04, 9.7551e-04],
         [1.5660e-03, 1.3642e-03, 9.9836e-03,  ..., 2.3458e-04,
          8.4939e-04, 1.4728e-03],
         [1.5660e-03, 1.3642e-03, 1.6253e-02,  ..., 9.9930e-01,
          9.9745e-01, 9.9658e-01],
         [1.5660e-03, 9.9591e-01, 9.6298e-01,  ..., 2.3458e-04,
          8.4939e-04, 9.7551e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0637e-03, 4.5042e-05, 9.5995e-01,  ..., 7.5832e-03,
          7.4451e-05, 8.4654e-04],
         [3.0637e-03, 4.5042e-05, 1.0700e-02,  ..., 7.8874e-03,
          7.4451e-05, 8.4654e-04],
         [9.9081e-01, 4.5042e-05, 7.6592e-03,  ..., 9.7563e-01,
          7.4451e-05, 9.9746e-01],
         [3.0637e-03, 9.9986e-01, 2.1689e-02,  ..., 8.8983e-03,
          9.9978e-01, 8.4654e-04]],
        [[2.3656e-03, 3.9653e-04, 8.9668e-06,  ..., 3.0305e-04,
          4.0417e-01, 8.3493e-03],
         [2.3656e-03, 3.9653e-04, 8.9668e-06,  ..., 3.0305e-04,
          1.3932e-01, 7.7057e-03],
         [9.9290e-01, 3.9653e-04, 8.9668e-06,  ..., 3.0305e-04,
          3.1040e-01, 9.7624e-01],
         [2.3656e-03, 9.9881e-01, 9.9997e-01,  ..., 9.9909e-01,
          1.4611e-01, 7.7057e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 516:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8792e-01, 2.4376e-03, 9.8902e-04,  ..., 1.1351e-04,
          4.6732e-04, 9.9814e-01],
         [5.6940e-03, 2.4376e-03, 9.8902e-04,  ..., 1.1351e-04,
          4.6732e-04, 6.1919e-04],
         [3.1945e-03, 2.4376e-03, 9.8902e-04,  ..., 9.9966e-01,
          9.9860e-01, 6.1919e-04],
         [3.1945e-03, 9.9269e-01, 9.9703e-01,  ..., 1.1351e-04,
          4.6732e-04, 6.1919e-04]],
        [[9.9492e-01, 8.4452e-03, 2.1944e-03,  ..., 1.1017e-03,
          3.6138e-05, 3.6034e-04],
         [2.7478e-03, 7.4245e-03, 2.1944e-03,  ..., 1.9734e-03,
          3.6138e-05, 3.6034e-04],
         [1.1675e-03, 9.3099e-03, 2.1944e-03,  ..., 9.9582e-01,
          9.9989e-01, 9.9892e-01],
         [1.1675e-03, 9.7482e-01, 9.9342e-01,  ..., 1.1017e-03,
          3.6138e-05, 3.6034e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:16,492 [Process: 0] Synchronize training processes
2024-08-18 15:22:16,493 [Process: 0] Evaluating...
2024-08-18 15:22:16,494 [Process: 0] EPOCH 516:
2024-08-18 15:22:16,496 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:17,621 [Process: 0] Synchronize training processes
2024-08-18 15:22:17,621 [Process: 0] Evaluating...
2024-08-18 15:22:17,623 [Process: 0] EPOCH 517:
2024-08-18 15:22:17,625 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6304e-03, 8.7341e-06, 9.9630e-01,  ..., 5.7731e-03,
          4.9418e-03, 4.2651e-03],
         [3.6304e-03, 8.7341e-06, 1.1008e-03,  ..., 6.6108e-03,
          3.6207e-03, 4.2651e-03],
         [9.8911e-01, 8.7341e-06, 1.1008e-03,  ..., 9.8184e-01,
          3.6207e-03, 9.8720e-01],
         [3.6304e-03, 9.9997e-01, 1.4997e-03,  ..., 5.7731e-03,
          9.8782e-01, 4.2651e-03]],
        [[7.4048e-03, 1.2900e-05, 2.5079e-05,  ..., 1.1625e-03,
          9.8709e-01, 1.0353e-02],
         [7.4460e-03, 1.2900e-05, 2.5079e-05,  ..., 1.1625e-03,
          4.1094e-03, 1.0353e-02],
         [9.7864e-01, 1.2900e-05, 2.5079e-05,  ..., 1.1625e-03,
          4.6916e-03, 9.6511e-01],
         [6.5098e-03, 9.9996e-01, 9.9992e-01,  ..., 9.9651e-01,
          4.1094e-03, 1.4184e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 517:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9758e-01, 1.5861e-03, 7.4199e-03,  ..., 1.5483e-04,
          1.3729e-03, 9.9689e-01],
         [8.0599e-04, 1.5861e-03, 7.4524e-03,  ..., 1.5483e-04,
          1.3729e-03, 9.2908e-04],
         [8.0599e-04, 1.5861e-03, 7.9805e-03,  ..., 9.9954e-01,
          9.9588e-01, 1.2500e-03],
         [8.0599e-04, 9.9524e-01, 9.7715e-01,  ..., 1.5483e-04,
          1.3729e-03, 9.2908e-04]],
        [[9.5770e-01, 3.8575e-03, 5.8041e-03,  ..., 1.7523e-04,
          4.8730e-04, 3.5331e-04],
         [3.2770e-02, 3.8575e-03, 5.8041e-03,  ..., 1.7523e-04,
          8.6459e-04, 5.4288e-04],
         [4.7637e-03, 4.7957e-03, 5.8041e-03,  ..., 9.9947e-01,
          9.9816e-01, 9.9875e-01],
         [4.7637e-03, 9.8749e-01, 9.8259e-01,  ..., 1.7523e-04,
          4.8730e-04, 3.5331e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.2097e-03, 4.4553e-05, 9.9776e-01,  ..., 5.5863e-03,
          7.2537e-04, 4.4085e-03],
         [7.5855e-03, 4.4553e-05, 7.4657e-04,  ..., 6.4383e-03,
          7.2537e-04, 4.4085e-03],
         [9.7742e-01, 4.4553e-05, 7.4657e-04,  ..., 9.8239e-01,
          7.2537e-04, 9.8677e-01],
         [7.7843e-03, 9.9987e-01, 7.4657e-04,  ..., 5.5863e-03,
          9.9782e-01, 4.4085e-03]],
        [[3.4057e-03, 3.3054e-05, 3.5364e-05,  ..., 2.3866e-04,
          9.9921e-01, 1.7060e-03],
         [3.4057e-03, 3.3054e-05, 3.5364e-05,  ..., 2.3866e-04,
          2.6378e-04, 1.7060e-03],
         [9.8978e-01, 3.3054e-05, 3.5364e-05,  ..., 2.3866e-04,
          2.6378e-04, 9.9488e-01],
         [3.4057e-03, 9.9990e-01, 9.9989e-01,  ..., 9.9928e-01,
          2.6378e-04, 1.7060e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 518:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9876e-01, 1.3984e-03, 2.2916e-03,  ..., 2.8727e-04,
          1.3356e-04, 9.9794e-01],
         [6.5793e-04, 1.3984e-03, 2.2916e-03,  ..., 2.8727e-04,
          1.3356e-04, 6.8525e-04],
         [2.9082e-04, 1.3984e-03, 2.2916e-03,  ..., 9.9914e-01,
          9.9960e-01, 6.8525e-04],
         [2.9082e-04, 9.9580e-01, 9.9313e-01,  ..., 2.8727e-04,
          1.3356e-04, 6.8525e-04]],
        [[9.9980e-01, 5.3296e-03, 9.6812e-03,  ..., 1.1514e-03,
          1.1802e-04, 3.3141e-04],
         [6.7623e-05, 6.1385e-03, 8.0514e-03,  ..., 1.1514e-03,
          1.4348e-04, 5.3338e-04],
         [6.7623e-05, 5.3296e-03, 1.0370e-02,  ..., 9.9655e-01,
          9.9962e-01, 9.9880e-01],
         [6.7623e-05, 9.8320e-01, 9.7190e-01,  ..., 1.1514e-03,
          1.1802e-04, 3.3141e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:18,750 [Process: 0] Synchronize training processes
2024-08-18 15:22:18,750 [Process: 0] Evaluating...
2024-08-18 15:22:18,752 [Process: 0] EPOCH 518:
2024-08-18 15:22:18,754 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8009e-03, 3.8335e-05, 9.9712e-01,  ..., 1.1039e-03,
          1.5262e-02, 1.0102e-03],
         [1.8009e-03, 3.8335e-05, 1.2954e-03,  ..., 1.1039e-03,
          6.6922e-03, 1.0102e-03],
         [9.9460e-01, 3.8335e-05, 7.9394e-04,  ..., 9.9669e-01,
          6.6922e-03, 9.9697e-01],
         [1.8009e-03, 9.9988e-01, 7.9394e-04,  ..., 1.1039e-03,
          9.7135e-01, 1.0102e-03]],
        [[4.4832e-03, 5.6396e-06, 2.0461e-04,  ..., 1.7926e-05,
          9.9912e-01, 2.6348e-03],
         [4.4832e-03, 5.6396e-06, 2.0461e-04,  ..., 1.7926e-05,
          2.9443e-04, 2.6348e-03],
         [9.8655e-01, 5.6396e-06, 2.0461e-04,  ..., 1.7926e-05,
          2.9443e-04, 9.9210e-01],
         [4.4832e-03, 9.9998e-01, 9.9939e-01,  ..., 9.9995e-01,
          2.9443e-04, 2.6348e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 519:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9899e-01, 2.7968e-03, 3.8726e-03,  ..., 5.1111e-04,
          1.4703e-03, 9.9944e-01],
         [3.3718e-04, 2.7968e-03, 3.7314e-03,  ..., 5.1111e-04,
          1.4703e-03, 1.8636e-04],
         [3.3718e-04, 2.7968e-03, 3.7314e-03,  ..., 9.9847e-01,
          9.9559e-01, 1.8636e-04],
         [3.3718e-04, 9.9161e-01, 9.8866e-01,  ..., 5.1111e-04,
          1.4703e-03, 1.8636e-04]],
        [[9.9696e-01, 5.5822e-03, 2.6930e-03,  ..., 1.3796e-03,
          2.7971e-04, 7.1955e-04],
         [1.0122e-03, 5.5822e-03, 2.6930e-03,  ..., 1.3796e-03,
          2.7971e-04, 7.1955e-04],
         [1.0122e-03, 6.8500e-03, 2.6930e-03,  ..., 9.9586e-01,
          9.9916e-01, 9.9784e-01],
         [1.0122e-03, 9.8199e-01, 9.9192e-01,  ..., 1.3796e-03,
          2.7971e-04, 7.1955e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9826e-03, 1.0313e-05, 9.9454e-01,  ..., 3.6129e-03,
          4.6026e-03, 8.9406e-03],
         [2.9826e-03, 1.0313e-05, 1.8195e-03,  ..., 3.6129e-03,
          2.4932e-03, 1.0022e-02],
         [9.9105e-01, 1.0313e-05, 1.8195e-03,  ..., 9.8916e-01,
          2.4932e-03, 9.7146e-01],
         [2.9826e-03, 9.9997e-01, 1.8195e-03,  ..., 3.6129e-03,
          9.9041e-01, 9.5745e-03]],
        [[4.7718e-03, 2.7793e-04, 9.8398e-06,  ..., 8.7605e-05,
          9.9913e-01, 3.8360e-03],
         [5.3194e-03, 2.7793e-04, 9.8398e-06,  ..., 8.7605e-05,
          2.9145e-04, 3.8360e-03],
         [9.8514e-01, 2.7793e-04, 9.8398e-06,  ..., 8.7605e-05,
          2.9145e-04, 9.8849e-01],
         [4.7718e-03, 9.9917e-01, 9.9997e-01,  ..., 9.9974e-01,
          2.9145e-04, 3.8360e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 520:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:19,876 [Process: 0] Synchronize training processes
2024-08-18 15:22:19,876 [Process: 0] Evaluating...
2024-08-18 15:22:19,878 [Process: 0] EPOCH 519:
2024-08-18 15:22:19,880 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:21,004 [Process: 0] Synchronize training processes
2024-08-18 15:22:21,005 [Process: 0] Evaluating...
2024-08-18 15:22:21,006 [Process: 0] EPOCH 520:
2024-08-18 15:22:21,008 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9688e-01, 1.6374e-03, 1.0544e-02,  ..., 2.2155e-04,
          6.2464e-05, 9.8809e-01],
         [1.0397e-03, 1.6374e-03, 7.8591e-03,  ..., 2.2155e-04,
          6.2464e-05, 5.2540e-03],
         [1.0397e-03, 1.6374e-03, 1.0078e-02,  ..., 9.9934e-01,
          9.9981e-01, 3.3257e-03],
         [1.0397e-03, 9.9509e-01, 9.7152e-01,  ..., 2.2155e-04,
          6.2464e-05, 3.3257e-03]],
        [[9.8649e-01, 4.4420e-04, 4.2292e-03,  ..., 6.5068e-04,
          3.8079e-04, 1.8487e-04],
         [3.1981e-03, 4.4420e-04, 4.2292e-03,  ..., 6.5068e-04,
          3.8079e-04, 1.8487e-04],
         [7.1188e-03, 4.4420e-04, 4.2292e-03,  ..., 9.9805e-01,
          9.9886e-01, 9.9945e-01],
         [3.1981e-03, 9.9867e-01, 9.8731e-01,  ..., 6.5068e-04,
          3.8079e-04, 1.8487e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3816e-03, 1.4295e-05, 9.9676e-01,  ..., 2.2343e-03,
          4.2848e-02, 4.7715e-03],
         [1.3816e-03, 1.4295e-05, 1.0805e-03,  ..., 2.4604e-03,
          1.4889e-02, 4.7715e-03],
         [9.9586e-01, 1.4295e-05, 1.0805e-03,  ..., 9.9307e-01,
          1.4889e-02, 9.8460e-01],
         [1.3816e-03, 9.9996e-01, 1.0805e-03,  ..., 2.2343e-03,
          9.2737e-01, 5.8616e-03]],
        [[4.3046e-03, 4.1747e-05, 6.9576e-05,  ..., 1.5642e-05,
          9.9684e-01, 1.9098e-02],
         [4.3046e-03, 4.1747e-05, 6.9576e-05,  ..., 1.5642e-05,
          1.0525e-03, 2.4369e-02],
         [9.8709e-01, 4.1747e-05, 6.9576e-05,  ..., 1.5642e-05,
          1.0525e-03, 9.3139e-01],
         [4.3046e-03, 9.9987e-01, 9.9979e-01,  ..., 9.9995e-01,
          1.0525e-03, 2.5147e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 521:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9872e-01, 5.7033e-03, 7.9113e-03,  ..., 8.8500e-04,
          7.4315e-04, 9.9447e-01],
         [4.2740e-04, 5.7033e-03, 8.0204e-03,  ..., 8.8500e-04,
          7.4315e-04, 1.6986e-03],
         [4.2740e-04, 5.7033e-03, 1.1424e-02,  ..., 9.9735e-01,
          9.9777e-01, 2.1289e-03],
         [4.2740e-04, 9.8289e-01, 9.7264e-01,  ..., 8.8500e-04,
          7.4315e-04, 1.6986e-03]],
        [[9.9718e-01, 7.2238e-03, 1.3807e-03,  ..., 7.5576e-04,
          9.3117e-05, 1.9578e-04],
         [9.4079e-04, 8.9842e-03, 1.3807e-03,  ..., 7.5576e-04,
          9.3117e-05, 1.9578e-04],
         [9.4079e-04, 7.7434e-03, 1.3807e-03,  ..., 9.9773e-01,
          9.9972e-01, 9.9941e-01],
         [9.4079e-04, 9.7605e-01, 9.9586e-01,  ..., 7.5576e-04,
          9.3117e-05, 1.9578e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:22,134 [Process: 0] Synchronize training processes
2024-08-18 15:22:22,135 [Process: 0] Evaluating...
2024-08-18 15:22:22,136 [Process: 0] EPOCH 521:
2024-08-18 15:22:22,138 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:23,264 [Process: 0] Synchronize training processes
2024-08-18 15:22:23,264 [Process: 0] Evaluating...
2024-08-18 15:22:23,268 [Process: 0] EPOCH 522:
2024-08-18 15:22:23,270 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2249e-03, 8.2700e-05, 9.9275e-01,  ..., 2.6128e-03,
          4.6573e-03, 8.6755e-03],
         [2.2249e-03, 8.2700e-05, 2.0056e-03,  ..., 2.8873e-03,
          2.1055e-03, 1.1265e-02],
         [9.9333e-01, 8.2700e-05, 2.0056e-03,  ..., 9.9189e-01,
          2.1055e-03, 9.6797e-01],
         [2.2249e-03, 9.9975e-01, 3.2362e-03,  ..., 2.6128e-03,
          9.9113e-01, 1.2088e-02]],
        [[1.3573e-03, 7.4357e-06, 4.4817e-06,  ..., 2.7826e-05,
          9.9916e-01, 3.3103e-03],
         [1.3573e-03, 7.4357e-06, 4.4817e-06,  ..., 2.7826e-05,
          2.7916e-04, 3.5534e-03],
         [9.9593e-01, 7.4357e-06, 4.4817e-06,  ..., 2.7826e-05,
          2.7916e-04, 9.8983e-01],
         [1.3573e-03, 9.9998e-01, 9.9999e-01,  ..., 9.9992e-01,
          2.7916e-04, 3.3103e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 522:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9888e-01, 5.0956e-03, 1.8806e-03,  ..., 5.7505e-05,
          2.8229e-03, 9.9392e-01],
         [3.7424e-04, 5.0956e-03, 1.8806e-03,  ..., 5.7505e-05,
          3.6246e-03, 2.6986e-03],
         [3.7424e-04, 6.0922e-03, 1.8806e-03,  ..., 9.9983e-01,
          9.9073e-01, 1.6928e-03],
         [3.7424e-04, 9.8372e-01, 9.9436e-01,  ..., 5.7505e-05,
          2.8229e-03, 1.6928e-03]],
        [[9.9911e-01, 2.4759e-03, 1.3470e-03,  ..., 2.7265e-04,
          2.3963e-03, 9.4968e-04],
         [2.9561e-04, 2.4759e-03, 1.3470e-03,  ..., 2.7265e-04,
          2.5628e-03, 9.4968e-04],
         [2.9561e-04, 2.4759e-03, 1.3470e-03,  ..., 9.9918e-01,
          9.9264e-01, 9.9715e-01],
         [2.9561e-04, 9.9257e-01, 9.9596e-01,  ..., 2.7265e-04,
          2.3963e-03, 9.4968e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.6050e-03, 2.2103e-06, 9.9474e-01,  ..., 3.3175e-03,
          2.7705e-03, 5.8982e-03],
         [5.6050e-03, 2.2103e-06, 1.7519e-03,  ..., 3.3175e-03,
          1.5112e-03, 5.8982e-03],
         [9.8243e-01, 2.2103e-06, 1.7519e-03,  ..., 9.9005e-01,
          1.5112e-03, 9.8099e-01],
         [6.3623e-03, 9.9999e-01, 1.7519e-03,  ..., 3.3175e-03,
          9.9421e-01, 7.2099e-03]],
        [[1.3369e-03, 5.2905e-05, 1.2877e-06,  ..., 2.7190e-05,
          9.9912e-01, 3.3405e-03],
         [1.3369e-03, 5.2905e-05, 1.2877e-06,  ..., 2.7190e-05,
          2.9473e-04, 3.3405e-03],
         [9.9599e-01, 5.2905e-05, 1.2877e-06,  ..., 2.7190e-05,
          2.9473e-04, 9.8998e-01],
         [1.3369e-03, 9.9984e-01, 1.0000e+00,  ..., 9.9992e-01,
          2.9473e-04, 3.3405e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 523:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
2024-08-18 15:22:24,392 [Process: 0] Synchronize training processes
2024-08-18 15:22:24,393 [Process: 0] Evaluating...
2024-08-18 15:22:24,394 [Process: 0] EPOCH 523:
2024-08-18 15:22:24,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:25,527 [Process: 0] Synchronize training processes
2024-08-18 15:22:25,528 [Process: 0] Evaluating...
2024-08-18 15:22:25,529 [Process: 0] EPOCH 524:
2024-08-18 15:22:25,531 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[9.9015e-01, 1.5099e-03, 8.1993e-03,  ..., 2.4352e-04,
          1.2221e-04, 9.9667e-01],
         [6.6906e-03, 1.5099e-03, 6.5068e-03,  ..., 2.4352e-04,
          1.2221e-04, 1.1088e-03],
         [1.5805e-03, 1.5099e-03, 7.1665e-03,  ..., 9.9927e-01,
          9.9963e-01, 1.1088e-03],
         [1.5805e-03, 9.9547e-01, 9.7813e-01,  ..., 2.4352e-04,
          1.2221e-04, 1.1088e-03]],
        [[9.9597e-01, 7.5444e-03, 2.0395e-03,  ..., 1.9853e-04,
          1.0686e-04, 2.8685e-04],
         [1.3438e-03, 1.2018e-02, 2.0395e-03,  ..., 1.9853e-04,
          1.0686e-04, 2.8685e-04],
         [1.3438e-03, 7.5160e-03, 2.0395e-03,  ..., 9.9940e-01,
          9.9968e-01, 9.9914e-01],
         [1.3438e-03, 9.7292e-01, 9.9388e-01,  ..., 1.9853e-04,
          1.0686e-04, 2.8685e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.3502e-03, 3.3775e-05, 9.9951e-01,  ..., 1.1068e-03,
          5.9356e-02, 4.5713e-03],
         [7.3502e-03, 3.3775e-05, 1.6363e-04,  ..., 1.1068e-03,
          1.2205e-02, 4.5713e-03],
         [9.7747e-01, 3.3775e-05, 1.6363e-04,  ..., 9.9668e-01,
          1.2205e-02, 9.8560e-01],
         [7.8250e-03, 9.9990e-01, 1.6363e-04,  ..., 1.1068e-03,
          9.1623e-01, 5.2604e-03]],
        [[1.5292e-03, 1.5087e-04, 8.8104e-05,  ..., 1.7754e-05,
          9.9952e-01, 1.8944e-03],
         [1.5292e-03, 1.5087e-04, 8.8104e-05,  ..., 1.7754e-05,
          1.5922e-04, 1.8944e-03],
         [9.9541e-01, 1.5087e-04, 8.8104e-05,  ..., 1.7754e-05,
          1.5922e-04, 9.9432e-01],
         [1.5292e-03, 9.9955e-01, 9.9974e-01,  ..., 9.9995e-01,
          1.5922e-04, 1.8944e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 524:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9828e-01, 1.1143e-03, 2.3222e-03,  ..., 6.0488e-04,
          1.2157e-03, 9.9725e-01],
         [5.7404e-04, 1.1143e-03, 2.3222e-03,  ..., 6.0488e-04,
          1.2157e-03, 9.1508e-04],
         [5.7404e-04, 1.1143e-03, 2.3222e-03,  ..., 9.9819e-01,
          9.9635e-01, 9.1508e-04],
         [5.7404e-04, 9.9666e-01, 9.9303e-01,  ..., 6.0488e-04,
          1.2157e-03, 9.1508e-04]],
        [[9.9678e-01, 1.7969e-03, 1.2048e-03,  ..., 2.4390e-03,
          1.3003e-04, 1.2371e-03],
         [1.3262e-03, 1.7969e-03, 1.2048e-03,  ..., 2.4390e-03,
          1.3003e-04, 2.5801e-03],
         [9.4792e-04, 1.7969e-03, 1.2048e-03,  ..., 9.9268e-01,
          9.9961e-01, 9.9495e-01],
         [9.4792e-04, 9.9461e-01, 9.9639e-01,  ..., 2.4390e-03,
          1.3003e-04, 1.2371e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9131e-03, 6.3489e-06, 9.8584e-01,  ..., 5.3724e-03,
          8.8807e-02, 4.0823e-03],
         [2.9131e-03, 6.3489e-06, 4.3429e-03,  ..., 5.3724e-03,
          2.0348e-02, 4.0823e-03],
         [9.9126e-01, 6.3489e-06, 4.3429e-03,  ..., 9.8388e-01,
          2.0348e-02, 9.8775e-01],
         [2.9131e-03, 9.9998e-01, 5.4696e-03,  ..., 5.3724e-03,
          8.7050e-01, 4.0823e-03]],
        [[1.6348e-03, 1.1944e-04, 2.4479e-04,  ..., 4.3603e-05,
          9.9780e-01, 3.0559e-03],
         [1.6348e-03, 1.1944e-04, 2.4479e-04,  ..., 4.3603e-05,
          7.3198e-04, 3.0559e-03],
         [9.9510e-01, 1.1944e-04, 2.4479e-04,  ..., 4.3603e-05,
          7.3198e-04, 9.9083e-01],
         [1.6348e-03, 9.9964e-01, 9.9927e-01,  ..., 9.9987e-01,
          7.3198e-04, 3.0559e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 525:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:26,657 [Process: 0] Synchronize training processes
2024-08-18 15:22:26,658 [Process: 0] Evaluating...
2024-08-18 15:22:26,659 [Process: 0] EPOCH 525:
2024-08-18 15:22:26,661 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9983e-01, 4.8078e-03, 8.0451e-03,  ..., 1.0421e-03,
          1.4275e-04, 9.9439e-01],
         [5.8270e-05, 6.9222e-03, 8.0451e-03,  ..., 1.0421e-03,
          1.4275e-04, 2.6385e-03],
         [5.8270e-05, 4.8078e-03, 8.0451e-03,  ..., 9.9687e-01,
          9.9957e-01, 1.4876e-03],
         [5.8270e-05, 9.8346e-01, 9.7586e-01,  ..., 1.0421e-03,
          1.4275e-04, 1.4876e-03]],
        [[9.9714e-01, 1.0657e-03, 1.2762e-03,  ..., 1.1211e-03,
          5.9261e-05, 3.1518e-04],
         [8.7124e-04, 1.0657e-03, 1.2762e-03,  ..., 1.1211e-03,
          5.9261e-05, 3.1518e-04],
         [1.1129e-03, 1.0657e-03, 1.2762e-03,  ..., 9.9664e-01,
          9.9982e-01, 9.9905e-01],
         [8.7124e-04, 9.9680e-01, 9.9617e-01,  ..., 1.1211e-03,
          5.9261e-05, 3.1518e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.1556e-03, 9.7175e-05, 9.9957e-01,  ..., 5.5889e-03,
          1.0497e-02, 3.5455e-03],
         [5.1556e-03, 9.7175e-05, 1.4180e-04,  ..., 5.5889e-03,
          4.3271e-03, 3.5455e-03],
         [9.8389e-01, 9.7175e-05, 1.4180e-04,  ..., 9.8255e-01,
          4.3271e-03, 9.8936e-01],
         [5.7944e-03, 9.9971e-01, 1.4180e-04,  ..., 6.2678e-03,
          9.8085e-01, 3.5455e-03]],
        [[2.4661e-03, 1.0253e-04, 2.2703e-05,  ..., 1.1440e-04,
          9.9582e-01, 2.0768e-03],
         [2.4661e-03, 1.0253e-04, 2.2703e-05,  ..., 1.1440e-04,
          1.3919e-03, 2.0768e-03],
         [9.9260e-01, 1.0253e-04, 2.2703e-05,  ..., 1.1440e-04,
          1.3919e-03, 9.9377e-01],
         [2.4661e-03, 9.9969e-01, 9.9993e-01,  ..., 9.9966e-01,
          1.3919e-03, 2.0768e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 526:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9728e-01, 2.0277e-03, 2.2396e-03,  ..., 1.5196e-04,
          2.3466e-04, 9.9827e-01],
         [9.0795e-04, 2.0277e-03, 2.2396e-03,  ..., 1.5196e-04,
          2.3466e-04, 5.7658e-04],
         [9.0795e-04, 2.0983e-03, 2.2396e-03,  ..., 9.9954e-01,
          9.9930e-01, 5.7658e-04],
         [9.0795e-04, 9.9385e-01, 9.9328e-01,  ..., 1.5196e-04,
          2.3466e-04, 5.7658e-04]],
        [[9.9817e-01, 1.8124e-03, 2.9432e-03,  ..., 4.2707e-04,
          1.8526e-03, 6.3879e-04],
         [6.0864e-04, 1.8124e-03, 2.9432e-03,  ..., 4.2707e-04,
          1.8526e-03, 6.3879e-04],
         [6.0864e-04, 1.8124e-03, 2.9432e-03,  ..., 9.9872e-01,
          9.9444e-01, 9.9808e-01],
         [6.0864e-04, 9.9456e-01, 9.9117e-01,  ..., 4.2707e-04,
          1.8526e-03, 6.3879e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1354e-03, 4.2635e-05, 9.9742e-01,  ..., 2.1912e-03,
          2.0650e-02, 2.8171e-03],
         [4.1354e-03, 4.2635e-05, 1.0561e-03,  ..., 2.1912e-03,
          1.2359e-02, 2.8171e-03],
         [9.8740e-01, 4.2635e-05, 7.6093e-04,  ..., 9.9343e-01,
          1.2359e-02, 9.9155e-01],
         [4.3334e-03, 9.9987e-01, 7.6093e-04,  ..., 2.1912e-03,
          9.5463e-01, 2.8171e-03]],
        [[2.0311e-03, 1.5245e-04, 1.2672e-04,  ..., 1.6192e-05,
          9.9782e-01, 4.0416e-03],
         [2.0311e-03, 1.5245e-04, 1.2672e-04,  ..., 1.6192e-05,
          7.2540e-04, 4.0416e-03],
         [9.9391e-01, 1.5245e-04, 1.2672e-04,  ..., 1.6192e-05,
          7.2540e-04, 9.8788e-01],
         [2.0311e-03, 9.9954e-01, 9.9962e-01,  ..., 9.9995e-01,
          7.2540e-04, 4.0416e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:27,788 [Process: 0] Synchronize training processes
2024-08-18 15:22:27,788 [Process: 0] Evaluating...
2024-08-18 15:22:27,790 [Process: 0] EPOCH 526:
2024-08-18 15:22:27,792 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:28,925 [Process: 0] Synchronize training processes
2024-08-18 15:22:28,925 [Process: 0] Evaluating...
2024-08-18 15:22:28,927 [Process: 0] EPOCH 527:
2024-08-18 15:22:28,929 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 527:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9952e-01, 5.3552e-03, 3.6887e-03,  ..., 2.5591e-03,
          2.1175e-04, 9.9666e-01],
         [1.6126e-04, 5.3552e-03, 3.6887e-03,  ..., 2.5591e-03,
          2.1175e-04, 1.1126e-03],
         [1.6126e-04, 5.3552e-03, 3.6887e-03,  ..., 9.9232e-01,
          9.9936e-01, 1.1126e-03],
         [1.6126e-04, 9.8393e-01, 9.8893e-01,  ..., 2.5591e-03,
          2.1175e-04, 1.1126e-03]],
        [[9.9859e-01, 1.2517e-03, 2.0498e-03,  ..., 3.1422e-04,
          4.2685e-04, 1.3177e-03],
         [4.7163e-04, 1.2517e-03, 2.0498e-03,  ..., 3.1422e-04,
          4.2685e-04, 1.8528e-03],
         [4.7163e-04, 1.2517e-03, 2.0498e-03,  ..., 9.9906e-01,
          9.9872e-01, 9.9551e-01],
         [4.7163e-04, 9.9624e-01, 9.9385e-01,  ..., 3.1422e-04,
          4.2685e-04, 1.3177e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4090e-03, 6.4231e-05, 9.9727e-01,  ..., 1.1600e-03,
          3.0187e-03, 3.2715e-03],
         [1.4090e-03, 6.4231e-05, 1.0662e-03,  ..., 1.1600e-03,
          1.7477e-03, 3.2715e-03],
         [9.9577e-01, 6.4231e-05, 8.3139e-04,  ..., 9.9652e-01,
          1.7477e-03, 9.9019e-01],
         [1.4090e-03, 9.9981e-01, 8.3139e-04,  ..., 1.1600e-03,
          9.9349e-01, 3.2715e-03]],
        [[6.8229e-03, 3.1874e-05, 8.1260e-06,  ..., 7.0715e-05,
          9.9894e-01, 9.1759e-03],
         [6.8229e-03, 3.1874e-05, 8.1260e-06,  ..., 7.0715e-05,
          3.5196e-04, 8.4508e-03],
         [9.7785e-01, 3.1874e-05, 8.1260e-06,  ..., 7.0715e-05,
          3.5196e-04, 9.7190e-01],
         [8.5064e-03, 9.9990e-01, 9.9998e-01,  ..., 9.9979e-01,
          3.5196e-04, 1.0470e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 528:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9865e-01, 1.3144e-03, 2.9823e-03,  ..., 3.7189e-04,
          1.5946e-04, 9.9731e-01],
         [4.5158e-04, 1.3144e-03, 2.9823e-03,  ..., 3.7189e-04,
          1.5946e-04, 8.9570e-04],
         [4.5158e-04, 1.3144e-03, 2.9823e-03,  ..., 9.9888e-01,
          9.9952e-01, 8.9570e-04],
         [4.5158e-04, 9.9606e-01, 9.9105e-01,  ..., 3.7189e-04,
          1.5946e-04, 8.9570e-04]],
        [[9.8998e-01, 2.4980e-03, 8.6201e-04,  ..., 5.0816e-03,
          6.1220e-04, 4.3393e-05],
         [3.1437e-03, 2.4980e-03, 8.6201e-04,  ..., 7.5037e-03,
          7.2707e-04, 4.3393e-05],
         [3.7311e-03, 2.4980e-03, 8.6201e-04,  ..., 9.8233e-01,
          9.9805e-01, 9.9987e-01],
         [3.1437e-03, 9.9251e-01, 9.9741e-01,  ..., 5.0816e-03,
          6.1220e-04, 4.3393e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:30,054 [Process: 0] Synchronize training processes
2024-08-18 15:22:30,054 [Process: 0] Evaluating...
2024-08-18 15:22:30,056 [Process: 0] EPOCH 528:
2024-08-18 15:22:30,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:31,186 [Process: 0] Synchronize training processes
2024-08-18 15:22:31,186 [Process: 0] Evaluating...
2024-08-18 15:22:31,188 [Process: 0] EPOCH 529:
2024-08-18 15:22:31,190 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.0463e-03, 1.2569e-05, 9.9699e-01,  ..., 4.6863e-03,
          2.0019e-03, 2.0774e-03],
         [5.0463e-03, 1.2569e-05, 8.7970e-04,  ..., 4.6863e-03,
          2.0019e-03, 2.0774e-03],
         [9.8486e-01, 1.2569e-05, 8.7970e-04,  ..., 9.8517e-01,
          2.0019e-03, 9.9377e-01],
         [5.0463e-03, 9.9996e-01, 1.2491e-03,  ..., 5.4545e-03,
          9.9399e-01, 2.0774e-03]],
        [[1.5369e-03, 3.5953e-05, 6.6645e-04,  ..., 5.1340e-05,
          9.9524e-01, 3.1363e-03],
         [1.5369e-03, 3.5953e-05, 6.6645e-04,  ..., 5.1340e-05,
          1.5600e-03, 3.1363e-03],
         [9.9539e-01, 3.5953e-05, 6.6645e-04,  ..., 5.1340e-05,
          1.5600e-03, 9.9059e-01],
         [1.5369e-03, 9.9989e-01, 9.9800e-01,  ..., 9.9985e-01,
          1.6443e-03, 3.1363e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 529:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9906e-01, 5.7115e-03, 2.2125e-03,  ..., 4.1544e-04,
          2.9389e-04, 9.8954e-01],
         [3.1871e-04, 5.7115e-03, 2.2125e-03,  ..., 4.1544e-04,
          2.9389e-04, 5.1843e-03],
         [3.1271e-04, 7.8774e-03, 2.4951e-03,  ..., 9.9875e-01,
          9.9912e-01, 2.6393e-03],
         [3.1271e-04, 9.8070e-01, 9.9308e-01,  ..., 4.1544e-04,
          2.9389e-04, 2.6393e-03]],
        [[9.8863e-01, 3.9197e-03, 3.0685e-03,  ..., 5.1635e-04,
          6.2190e-04, 2.2196e-04],
         [3.3481e-03, 3.9197e-03, 3.7068e-03,  ..., 5.1635e-04,
          6.2190e-04, 2.2196e-04],
         [4.6787e-03, 3.9197e-03, 3.0685e-03,  ..., 9.9845e-01,
          9.9813e-01, 9.9933e-01],
         [3.3481e-03, 9.8824e-01, 9.9016e-01,  ..., 5.1635e-04,
          6.2190e-04, 2.2196e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7085e-03, 7.8185e-05, 9.9267e-01,  ..., 3.2768e-03,
          5.6046e-04, 2.9043e-03],
         [1.7085e-03, 7.8185e-05, 2.9041e-03,  ..., 3.2768e-03,
          5.6046e-04, 2.9043e-03],
         [9.9487e-01, 7.8185e-05, 2.2135e-03,  ..., 9.9011e-01,
          5.6046e-04, 9.9129e-01],
         [1.7085e-03, 9.9977e-01, 2.2135e-03,  ..., 3.3373e-03,
          9.9832e-01, 2.9043e-03]],
        [[2.5325e-03, 1.6529e-04, 1.3229e-05,  ..., 7.4490e-05,
          9.9912e-01, 3.1672e-03],
         [2.5325e-03, 1.6529e-04, 1.3229e-05,  ..., 7.4490e-05,
          2.9268e-04, 3.1672e-03],
         [9.9240e-01, 1.6529e-04, 1.3229e-05,  ..., 7.4490e-05,
          2.9268e-04, 9.9050e-01],
         [2.5325e-03, 9.9950e-01, 9.9996e-01,  ..., 9.9978e-01,
          2.9268e-04, 3.1672e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 530:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9795e-01, 2.7832e-03, 1.0389e-02,  ..., 6.3100e-04,
          6.5648e-04, 9.9923e-01],
         [6.8442e-04, 2.7832e-03, 9.1964e-03,  ..., 6.3100e-04,
          6.5648e-04, 2.5750e-04],
         [6.8442e-04, 3.6125e-03, 1.4099e-02,  ..., 9.9811e-01,
          9.9803e-01, 2.5750e-04],
         [6.8442e-04, 9.9082e-01, 9.6632e-01,  ..., 6.3100e-04,
          6.5648e-04, 2.5750e-04]],
        [[9.5639e-01, 1.3538e-03, 1.7529e-03,  ..., 2.9042e-04,
          3.1330e-04, 4.4247e-04],
         [8.2225e-03, 1.3538e-03, 1.7529e-03,  ..., 2.9042e-04,
          3.1330e-04, 4.4247e-04],
         [2.7170e-02, 1.3538e-03, 1.7529e-03,  ..., 9.9913e-01,
          9.9906e-01, 9.9867e-01],
         [8.2225e-03, 9.9594e-01, 9.9474e-01,  ..., 2.9042e-04,
          3.1330e-04, 4.4247e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:32,310 [Process: 0] Synchronize training processes
2024-08-18 15:22:32,310 [Process: 0] Evaluating...
2024-08-18 15:22:32,312 [Process: 0] EPOCH 530:
2024-08-18 15:22:32,314 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:33,442 [Process: 0] Synchronize training processes
2024-08-18 15:22:33,443 [Process: 0] Evaluating...
2024-08-18 15:22:33,444 [Process: 0] EPOCH 531:
2024-08-18 15:22:33,446 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6406e-03, 4.2942e-05, 9.9363e-01,  ..., 2.8480e-03,
          2.4420e-03, 7.9398e-03],
         [1.6406e-03, 4.2942e-05, 2.6002e-03,  ..., 2.8480e-03,
          2.4420e-03, 9.6675e-03],
         [9.9508e-01, 4.2942e-05, 1.8873e-03,  ..., 9.9146e-01,
          2.4420e-03, 9.7382e-01],
         [1.6406e-03, 9.9987e-01, 1.8873e-03,  ..., 2.8480e-03,
          9.9267e-01, 8.5680e-03]],
        [[2.9689e-03, 3.8482e-04, 5.1262e-05,  ..., 1.0212e-05,
          9.9792e-01, 2.6413e-03],
         [2.9689e-03, 3.8482e-04, 5.1262e-05,  ..., 1.0212e-05,
          6.9332e-04, 2.6413e-03],
         [9.9109e-01, 3.8482e-04, 5.1262e-05,  ..., 1.0212e-05,
          6.9332e-04, 9.9208e-01],
         [2.9689e-03, 9.9885e-01, 9.9985e-01,  ..., 9.9997e-01,
          6.9332e-04, 2.6413e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 531:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9630e-01, 3.2155e-03, 4.7951e-03,  ..., 2.1035e-04,
          3.4436e-04, 9.9848e-01],
         [1.7289e-03, 3.2155e-03, 4.7951e-03,  ..., 2.1035e-04,
          3.4436e-04, 5.0737e-04],
         [9.8476e-04, 4.2462e-03, 6.0812e-03,  ..., 9.9937e-01,
          9.9897e-01, 5.0737e-04],
         [9.8476e-04, 9.8932e-01, 9.8433e-01,  ..., 2.1035e-04,
          3.4436e-04, 5.0737e-04]],
        [[9.9923e-01, 4.7585e-03, 2.8006e-03,  ..., 7.6903e-04,
          3.4730e-04, 9.0814e-05],
         [2.5550e-04, 4.7585e-03, 3.7236e-03,  ..., 7.6903e-04,
          3.4730e-04, 9.0814e-05],
         [2.5550e-04, 4.7585e-03, 2.8006e-03,  ..., 9.9769e-01,
          9.9896e-01, 9.9973e-01],
         [2.5550e-04, 9.8572e-01, 9.9068e-01,  ..., 7.6903e-04,
          3.4730e-04, 9.0814e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3203e-03, 7.1617e-05, 9.9712e-01,  ..., 3.3248e-03,
          2.0251e-03, 6.1268e-03],
         [2.4522e-03, 7.1617e-05, 9.0944e-04,  ..., 3.3248e-03,
          2.0251e-03, 6.5904e-03],
         [9.9291e-01, 7.1617e-05, 9.0944e-04,  ..., 9.9003e-01,
          2.0251e-03, 9.7978e-01],
         [2.3203e-03, 9.9979e-01, 1.0654e-03,  ..., 3.3248e-03,
          9.9392e-01, 7.5036e-03]],
        [[3.8177e-03, 1.1904e-04, 3.3851e-04,  ..., 7.5072e-05,
          9.5252e-01, 2.9549e-03],
         [3.8177e-03, 1.1904e-04, 3.3851e-04,  ..., 7.5072e-05,
          1.7597e-02, 2.9549e-03],
         [9.8855e-01, 1.1904e-04, 3.3851e-04,  ..., 7.5072e-05,
          1.0809e-02, 9.9114e-01],
         [3.8177e-03, 9.9964e-01, 9.9898e-01,  ..., 9.9977e-01,
          1.9072e-02, 2.9549e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 532:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:34,572 [Process: 0] Synchronize training processes
2024-08-18 15:22:34,572 [Process: 0] Evaluating...
2024-08-18 15:22:34,576 [Process: 0] EPOCH 532:
2024-08-18 15:22:34,578 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:35,695 [Process: 0] Synchronize training processes
2024-08-18 15:22:35,695 [Process: 0] Evaluating...
2024-08-18 15:22:35,697 [Process: 0] EPOCH 533:
2024-08-18 15:22:35,699 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9536e-01, 8.2482e-03, 4.9564e-03,  ..., 3.5688e-04,
          3.4337e-04, 9.9900e-01],
         [1.5633e-03, 1.5627e-02, 6.6187e-03,  ..., 3.5688e-04,
          3.4337e-04, 3.3248e-04],
         [1.5406e-03, 8.2482e-03, 8.0205e-03,  ..., 9.9893e-01,
          9.9897e-01, 3.3248e-04],
         [1.5406e-03, 9.6788e-01, 9.8040e-01,  ..., 3.5688e-04,
          3.4337e-04, 3.3248e-04]],
        [[9.9887e-01, 1.6091e-03, 1.4043e-03,  ..., 4.4053e-04,
          2.5113e-04, 8.3860e-05],
         [3.7673e-04, 1.6091e-03, 1.4043e-03,  ..., 4.4053e-04,
          2.5113e-04, 8.3860e-05],
         [3.7673e-04, 1.6091e-03, 1.4043e-03,  ..., 9.9868e-01,
          9.9925e-01, 9.9975e-01],
         [3.7673e-04, 9.9517e-01, 9.9579e-01,  ..., 4.4053e-04,
          2.5113e-04, 8.3860e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3892e-03, 1.3024e-05, 9.9951e-01,  ..., 3.1441e-03,
          1.9524e-03, 2.0706e-03],
         [1.3892e-03, 1.3024e-05, 1.6340e-04,  ..., 3.1441e-03,
          1.9524e-03, 2.0706e-03],
         [9.9583e-01, 1.3024e-05, 1.6340e-04,  ..., 9.9057e-01,
          1.9524e-03, 9.9379e-01],
         [1.3892e-03, 9.9996e-01, 1.6340e-04,  ..., 3.1441e-03,
          9.9414e-01, 2.0706e-03]],
        [[4.6510e-03, 4.8508e-05, 1.0112e-05,  ..., 3.7788e-05,
          9.9014e-01, 4.2227e-03],
         [4.6510e-03, 4.8508e-05, 1.0112e-05,  ..., 3.7788e-05,
          4.0948e-03, 4.2227e-03],
         [9.8605e-01, 4.8508e-05, 1.0112e-05,  ..., 3.7788e-05,
          2.8837e-03, 9.8703e-01],
         [4.6510e-03, 9.9985e-01, 9.9997e-01,  ..., 9.9989e-01,
          2.8837e-03, 4.5217e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 533:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9646e-01, 1.8837e-03, 3.1826e-03,  ..., 4.6094e-04,
          1.9540e-04, 9.9958e-01],
         [1.1799e-03, 1.8837e-03, 3.1826e-03,  ..., 4.6094e-04,
          1.9540e-04, 1.3941e-04],
         [1.1799e-03, 1.8837e-03, 3.4803e-03,  ..., 9.9862e-01,
          9.9941e-01, 1.3941e-04],
         [1.1799e-03, 9.9435e-01, 9.9015e-01,  ..., 4.6094e-04,
          1.9540e-04, 1.3941e-04]],
        [[9.9258e-01, 1.0331e-02, 3.7355e-03,  ..., 2.5364e-04,
          4.8594e-04, 2.9860e-04],
         [2.3503e-03, 1.1707e-02, 4.8047e-03,  ..., 2.5364e-04,
          4.8594e-04, 2.9860e-04],
         [2.8476e-03, 1.0351e-02, 3.7355e-03,  ..., 9.9924e-01,
          9.9854e-01, 9.9910e-01],
         [2.2236e-03, 9.6761e-01, 9.8772e-01,  ..., 2.5364e-04,
          4.8594e-04, 2.9860e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2376e-03, 8.8907e-06, 9.9831e-01,  ..., 5.2918e-03,
          2.8379e-03, 4.0311e-03],
         [2.2376e-03, 8.8907e-06, 5.1513e-04,  ..., 6.7571e-03,
          2.8379e-03, 4.0311e-03],
         [9.9329e-01, 8.8907e-06, 5.1513e-04,  ..., 9.8266e-01,
          2.8379e-03, 9.8791e-01],
         [2.2376e-03, 9.9997e-01, 6.5840e-04,  ..., 5.2918e-03,
          9.9149e-01, 4.0311e-03]],
        [[8.6691e-04, 1.1013e-04, 6.0796e-05,  ..., 1.1725e-04,
          9.9879e-01, 7.4815e-03],
         [8.6691e-04, 1.1013e-04, 6.0796e-05,  ..., 1.1725e-04,
          4.0272e-04, 7.1272e-03],
         [9.9740e-01, 1.1013e-04, 6.0796e-05,  ..., 1.1725e-04,
          4.0272e-04, 9.7833e-01],
         [8.6691e-04, 9.9967e-01, 9.9982e-01,  ..., 9.9965e-01,
          4.0272e-04, 7.0654e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 534:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:36,824 [Process: 0] Synchronize training processes
2024-08-18 15:22:36,824 [Process: 0] Evaluating...
2024-08-18 15:22:36,826 [Process: 0] EPOCH 534:
2024-08-18 15:22:36,827 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9840e-01, 9.3706e-04, 4.6719e-03,  ..., 4.3108e-04,
          6.1554e-04, 9.9440e-01],
         [5.3439e-04, 9.3706e-04, 4.6719e-03,  ..., 4.3108e-04,
          6.1554e-04, 1.5746e-03],
         [5.3439e-04, 9.3706e-04, 7.0182e-03,  ..., 9.9871e-01,
          9.9815e-01, 2.4531e-03],
         [5.3439e-04, 9.9719e-01, 9.8364e-01,  ..., 4.3108e-04,
          6.1554e-04, 1.5746e-03]],
        [[9.8105e-01, 2.3402e-03, 4.3682e-03,  ..., 6.3397e-04,
          4.9561e-04, 2.4966e-04],
         [1.1985e-02, 2.5454e-03, 4.3682e-03,  ..., 6.3397e-04,
          4.9561e-04, 2.4966e-04],
         [3.4814e-03, 2.3402e-03, 4.3682e-03,  ..., 9.9810e-01,
          9.9851e-01, 9.9925e-01],
         [3.4814e-03, 9.9277e-01, 9.8690e-01,  ..., 6.3397e-04,
          4.9561e-04, 2.4966e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.1253e-04, 1.7119e-05, 9.6374e-01,  ..., 3.0061e-03,
          3.0231e-04, 1.0211e-03],
         [7.1253e-04, 1.7119e-05, 1.9075e-02,  ..., 3.0061e-03,
          3.0231e-04, 1.0211e-03],
         [9.9786e-01, 1.7119e-05, 8.5922e-03,  ..., 9.9098e-01,
          3.0231e-04, 9.9694e-01],
         [7.1253e-04, 9.9995e-01, 8.5922e-03,  ..., 3.0061e-03,
          9.9909e-01, 1.0211e-03]],
        [[2.5895e-03, 9.1064e-06, 2.1237e-05,  ..., 6.9734e-05,
          9.9982e-01, 2.0971e-03],
         [2.5895e-03, 9.1064e-06, 2.1237e-05,  ..., 6.9734e-05,
          5.8925e-05, 2.0971e-03],
         [9.9223e-01, 9.1064e-06, 2.1237e-05,  ..., 6.9734e-05,
          5.8925e-05, 9.9371e-01],
         [2.5895e-03, 9.9997e-01, 9.9994e-01,  ..., 9.9979e-01,
          5.8925e-05, 2.0971e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 535:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9665e-01, 5.7801e-03, 6.3217e-04,  ..., 6.3130e-05,
          3.8031e-04, 9.9751e-01],
         [1.1182e-03, 5.7801e-03, 6.3217e-04,  ..., 6.3130e-05,
          3.8031e-04, 8.3093e-04],
         [1.1182e-03, 7.0965e-03, 6.3217e-04,  ..., 9.9981e-01,
          9.9886e-01, 8.3093e-04],
         [1.1182e-03, 9.8134e-01, 9.9810e-01,  ..., 6.3130e-05,
          3.8031e-04, 8.3093e-04]],
        [[9.9515e-01, 5.3828e-03, 1.4062e-03,  ..., 2.1086e-03,
          1.1037e-04, 6.5739e-04],
         [1.4776e-03, 8.2994e-03, 1.4062e-03,  ..., 2.1086e-03,
          1.1037e-04, 6.5739e-04],
         [1.8983e-03, 5.3828e-03, 1.4062e-03,  ..., 9.9367e-01,
          9.9967e-01, 9.9803e-01],
         [1.4776e-03, 9.8093e-01, 9.9578e-01,  ..., 2.1086e-03,
          1.1037e-04, 6.5739e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
2024-08-18 15:22:37,942 [Process: 0] Synchronize training processes
2024-08-18 15:22:37,942 [Process: 0] Evaluating...
2024-08-18 15:22:37,944 [Process: 0] EPOCH 535:
2024-08-18 15:22:37,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:39,061 [Process: 0] Synchronize training processes
2024-08-18 15:22:39,061 [Process: 0] Evaluating...
2024-08-18 15:22:39,063 [Process: 0] EPOCH 536:
2024-08-18 15:22:39,064 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6987e-03, 4.4577e-06, 9.9968e-01,  ..., 4.0345e-03,
          5.8505e-04, 2.8320e-03],
         [1.6987e-03, 4.4577e-06, 1.0768e-04,  ..., 4.5718e-03,
          5.8505e-04, 2.8320e-03],
         [9.9490e-01, 4.4577e-06, 1.0768e-04,  ..., 9.8736e-01,
          5.8505e-04, 9.9150e-01],
         [1.6987e-03, 9.9999e-01, 1.0768e-04,  ..., 4.0345e-03,
          9.9824e-01, 2.8320e-03]],
        [[1.7881e-03, 3.7141e-05, 4.8618e-05,  ..., 2.7070e-06,
          9.9925e-01, 1.6194e-03],
         [1.7881e-03, 3.7141e-05, 4.8618e-05,  ..., 2.7070e-06,
          2.5110e-04, 1.6194e-03],
         [9.9464e-01, 3.7141e-05, 4.8618e-05,  ..., 2.7070e-06,
          2.5110e-04, 9.9514e-01],
         [1.7881e-03, 9.9989e-01, 9.9985e-01,  ..., 9.9999e-01,
          2.5110e-04, 1.6194e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 536:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9765e-01, 8.2943e-03, 6.0687e-03,  ..., 2.3603e-04,
          1.2005e-04, 9.7925e-01],
         [7.8283e-04, 8.2943e-03, 6.0687e-03,  ..., 2.3603e-04,
          1.2005e-04, 1.2172e-02],
         [7.8283e-04, 1.2950e-02, 8.7184e-03,  ..., 9.9929e-01,
          9.9964e-01, 4.2870e-03],
         [7.8283e-04, 9.7046e-01, 9.7914e-01,  ..., 2.3603e-04,
          1.2005e-04, 4.2870e-03]],
        [[9.9470e-01, 2.3476e-03, 5.8412e-03,  ..., 2.6038e-04,
          4.2166e-04, 1.2037e-03],
         [1.5348e-03, 2.3476e-03, 7.3083e-03,  ..., 2.6038e-04,
          4.2166e-04, 1.2037e-03],
         [2.2320e-03, 2.3476e-03, 5.8412e-03,  ..., 9.9922e-01,
          9.9874e-01, 9.9639e-01],
         [1.5348e-03, 9.9296e-01, 9.8101e-01,  ..., 2.6038e-04,
          4.2166e-04, 1.2037e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2158e-03, 7.2550e-06, 9.9232e-01,  ..., 3.1855e-03,
          1.5038e-03, 2.2210e-03],
         [3.2158e-03, 7.2550e-06, 1.9912e-03,  ..., 3.1855e-03,
          1.5038e-03, 2.2210e-03],
         [9.9035e-01, 7.2550e-06, 1.9912e-03,  ..., 9.9044e-01,
          1.5038e-03, 9.9334e-01],
         [3.2158e-03, 9.9998e-01, 3.6960e-03,  ..., 3.1855e-03,
          9.9549e-01, 2.2210e-03]],
        [[2.9602e-03, 1.5767e-05, 1.5521e-04,  ..., 4.0665e-04,
          9.9901e-01, 2.6589e-03],
         [2.9602e-03, 1.5767e-05, 1.5521e-04,  ..., 4.0665e-04,
          3.1385e-04, 2.6589e-03],
         [9.9112e-01, 1.5767e-05, 1.5521e-04,  ..., 4.0665e-04,
          3.1385e-04, 9.9202e-01],
         [2.9602e-03, 9.9995e-01, 9.9953e-01,  ..., 9.9878e-01,
          3.5776e-04, 2.6589e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 537:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9425e-01, 3.5086e-03, 2.0163e-03,  ..., 2.4868e-04,
          2.8540e-04, 9.9887e-01],
         [2.1613e-03, 3.5086e-03, 2.0163e-03,  ..., 2.4868e-04,
          2.8540e-04, 3.7647e-04],
         [1.7957e-03, 3.5086e-03, 2.0163e-03,  ..., 9.9925e-01,
          9.9914e-01, 3.7647e-04],
         [1.7957e-03, 9.8947e-01, 9.9395e-01,  ..., 2.4868e-04,
          2.8540e-04, 3.7647e-04]],
        [[9.9548e-01, 1.2854e-03, 2.6617e-03,  ..., 4.9456e-04,
          5.4772e-04, 7.0807e-04],
         [1.7942e-03, 1.2854e-03, 2.6617e-03,  ..., 4.9456e-04,
          5.4772e-04, 7.0807e-04],
         [1.3610e-03, 1.2854e-03, 2.6617e-03,  ..., 9.9852e-01,
          9.9836e-01, 9.9788e-01],
         [1.3610e-03, 9.9614e-01, 9.9201e-01,  ..., 4.9456e-04,
          5.4772e-04, 7.0807e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:40,189 [Process: 0] Synchronize training processes
2024-08-18 15:22:40,190 [Process: 0] Evaluating...
2024-08-18 15:22:40,191 [Process: 0] EPOCH 537:
2024-08-18 15:22:40,193 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:41,320 [Process: 0] Synchronize training processes
2024-08-18 15:22:41,320 [Process: 0] Evaluating...
2024-08-18 15:22:41,322 [Process: 0] EPOCH 538:
2024-08-18 15:22:41,324 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6470e-03, 3.5903e-05, 9.9054e-01,  ..., 3.3921e-03,
          1.8481e-03, 1.8668e-03],
         [3.6470e-03, 3.5903e-05, 2.7174e-03,  ..., 3.3921e-03,
          1.8481e-03, 1.8668e-03],
         [9.8906e-01, 3.5903e-05, 2.7174e-03,  ..., 9.8982e-01,
          1.8481e-03, 9.9440e-01],
         [3.6470e-03, 9.9989e-01, 4.0272e-03,  ..., 3.3921e-03,
          9.9446e-01, 1.8668e-03]],
        [[8.4923e-04, 1.3886e-05, 1.8368e-04,  ..., 1.4496e-04,
          9.9834e-01, 3.9618e-03],
         [8.4923e-04, 1.3886e-05, 1.8368e-04,  ..., 1.4496e-04,
          5.5193e-04, 3.8294e-03],
         [9.9745e-01, 1.3886e-05, 1.8368e-04,  ..., 1.4496e-04,
          5.5193e-04, 9.8838e-01],
         [8.4923e-04, 9.9996e-01, 9.9945e-01,  ..., 9.9957e-01,
          5.5193e-04, 3.8294e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 538:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9464e-01, 2.9676e-03, 3.0502e-03,  ..., 3.2901e-04,
          2.3353e-03, 9.9577e-01],
         [1.7877e-03, 2.9676e-03, 3.0502e-03,  ..., 3.2901e-04,
          3.5911e-03, 8.9019e-04],
         [1.7877e-03, 2.9676e-03, 3.0502e-03,  ..., 9.9901e-01,
          9.9174e-01, 2.4472e-03],
         [1.7877e-03, 9.9110e-01, 9.9085e-01,  ..., 3.2901e-04,
          2.3353e-03, 8.9019e-04]],
        [[9.9019e-01, 5.0416e-03, 1.6308e-03,  ..., 6.8616e-04,
          2.9669e-03, 1.4734e-04],
         [5.0504e-03, 6.2454e-03, 1.6308e-03,  ..., 6.8616e-04,
          2.4864e-03, 1.4734e-04],
         [2.3787e-03, 5.0416e-03, 1.6308e-03,  ..., 9.9794e-01,
          9.9206e-01, 9.9956e-01],
         [2.3787e-03, 9.8367e-01, 9.9511e-01,  ..., 6.8616e-04,
          2.4864e-03, 1.4734e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2171e-03, 9.7901e-05, 9.9680e-01,  ..., 1.0786e-02,
          7.8361e-05, 4.2762e-03],
         [2.2171e-03, 9.7901e-05, 1.0242e-03,  ..., 8.4911e-03,
          7.8361e-05, 4.3358e-03],
         [9.9335e-01, 9.7901e-05, 1.0242e-03,  ..., 9.7139e-01,
          7.8361e-05, 9.8711e-01],
         [2.2171e-03, 9.9971e-01, 1.1480e-03,  ..., 9.3376e-03,
          9.9976e-01, 4.2762e-03]],
        [[1.3887e-03, 1.7303e-05, 5.5963e-05,  ..., 1.7577e-04,
          9.9772e-01, 1.4060e-03],
         [1.3887e-03, 1.7303e-05, 5.5963e-05,  ..., 1.7577e-04,
          7.5935e-04, 1.4060e-03],
         [9.9583e-01, 1.7303e-05, 5.5963e-05,  ..., 1.7577e-04,
          7.5935e-04, 9.9578e-01],
         [1.3887e-03, 9.9995e-01, 9.9983e-01,  ..., 9.9947e-01,
          7.5935e-04, 1.4060e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 539:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8478e-01, 4.6607e-03, 1.9813e-03,  ..., 1.2295e-03,
          8.8754e-05, 9.9625e-01],
         [9.6673e-03, 4.6607e-03, 1.9813e-03,  ..., 1.2295e-03,
          8.8754e-05, 9.9254e-04],
         [2.7757e-03, 5.5270e-03, 1.9813e-03,  ..., 9.9631e-01,
          9.9973e-01, 1.7690e-03],
         [2.7757e-03, 9.8515e-01, 9.9406e-01,  ..., 1.2295e-03,
          8.8754e-05, 9.9254e-04]],
        [[9.7240e-01, 1.7374e-03, 2.7494e-03,  ..., 1.5714e-03,
          2.2201e-04, 7.8582e-04],
         [1.6184e-02, 1.7374e-03, 3.2251e-03,  ..., 2.2051e-03,
          2.2201e-04, 7.8582e-04],
         [7.3764e-03, 1.7374e-03, 2.7494e-03,  ..., 9.9465e-01,
          9.9933e-01, 9.9764e-01],
         [4.0345e-03, 9.9479e-01, 9.9128e-01,  ..., 1.5714e-03,
          2.2201e-04, 7.8582e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:42,451 [Process: 0] Synchronize training processes
2024-08-18 15:22:42,451 [Process: 0] Evaluating...
2024-08-18 15:22:42,453 [Process: 0] EPOCH 539:
2024-08-18 15:22:42,454 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:43,581 [Process: 0] Synchronize training processes
2024-08-18 15:22:43,582 [Process: 0] Evaluating...
2024-08-18 15:22:43,584 [Process: 0] EPOCH 540:
2024-08-18 15:22:43,585 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3606e-03, 3.7177e-04, 9.8804e-01,  ..., 1.5272e-03,
          5.2757e-04, 6.1999e-03],
         [2.3606e-03, 3.7177e-04, 5.3213e-03,  ..., 1.5272e-03,
          5.2757e-04, 7.6147e-03],
         [9.9292e-01, 3.7177e-04, 3.3214e-03,  ..., 9.9542e-01,
          5.2757e-04, 9.7966e-01],
         [2.3606e-03, 9.9888e-01, 3.3214e-03,  ..., 1.5272e-03,
          9.9842e-01, 6.5236e-03]],
        [[2.0973e-03, 7.7654e-06, 6.4741e-05,  ..., 8.6547e-05,
          9.9952e-01, 2.3872e-03],
         [2.0973e-03, 7.7654e-06, 6.4741e-05,  ..., 8.6547e-05,
          1.5996e-04, 2.3872e-03],
         [9.9371e-01, 7.7654e-06, 6.4741e-05,  ..., 8.6547e-05,
          1.5996e-04, 9.9284e-01],
         [2.0973e-03, 9.9998e-01, 9.9981e-01,  ..., 9.9974e-01,
          1.5996e-04, 2.3872e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 540:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9859e-01, 3.1411e-03, 2.7471e-02,  ..., 1.1284e-04,
          1.7308e-04, 9.9863e-01],
         [6.0211e-04, 3.1411e-03, 2.2605e-02,  ..., 1.1284e-04,
          1.7308e-04, 4.5571e-04],
         [4.0163e-04, 3.1411e-03, 3.7312e-02,  ..., 9.9966e-01,
          9.9948e-01, 4.5571e-04],
         [4.0163e-04, 9.9058e-01, 9.1261e-01,  ..., 1.1284e-04,
          1.7308e-04, 4.5571e-04]],
        [[9.9837e-01, 1.8128e-03, 1.4227e-03,  ..., 5.6480e-04,
          3.6170e-04, 1.1823e-04],
         [5.4230e-04, 1.8128e-03, 1.4227e-03,  ..., 5.6480e-04,
          3.6170e-04, 1.1823e-04],
         [5.4230e-04, 1.8128e-03, 1.4227e-03,  ..., 9.9831e-01,
          9.9891e-01, 9.9965e-01],
         [5.4230e-04, 9.9456e-01, 9.9573e-01,  ..., 5.6480e-04,
          3.6170e-04, 1.1823e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.5794e-03, 2.5081e-05, 9.9948e-01,  ..., 2.9524e-03,
          9.8479e-05, 2.8231e-03],
         [7.1670e-03, 2.5081e-05, 1.7089e-04,  ..., 2.9524e-03,
          9.8479e-05, 2.8231e-03],
         [9.7636e-01, 2.5081e-05, 1.7089e-04,  ..., 9.9114e-01,
          9.8479e-05, 9.9153e-01],
         [7.8932e-03, 9.9992e-01, 1.7380e-04,  ..., 2.9524e-03,
          9.9970e-01, 2.8231e-03]],
        [[9.3126e-04, 1.4631e-04, 9.9505e-05,  ..., 6.9996e-05,
          9.9945e-01, 2.8617e-03],
         [9.3126e-04, 1.4631e-04, 9.9505e-05,  ..., 6.9996e-05,
          1.8339e-04, 2.8617e-03],
         [9.9721e-01, 1.4631e-04, 9.9505e-05,  ..., 6.9996e-05,
          1.8339e-04, 9.9141e-01],
         [9.3126e-04, 9.9956e-01, 9.9970e-01,  ..., 9.9979e-01,
          1.8339e-04, 2.8617e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 541:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:44,706 [Process: 0] Synchronize training processes
2024-08-18 15:22:44,707 [Process: 0] Evaluating...
2024-08-18 15:22:44,708 [Process: 0] EPOCH 541:
2024-08-18 15:22:44,710 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9900e-01, 5.2086e-03, 6.1697e-03,  ..., 7.6092e-05,
          4.1248e-04, 9.9318e-01],
         [3.3181e-04, 5.2086e-03, 6.1697e-03,  ..., 7.6092e-05,
          4.1248e-04, 2.1177e-03],
         [3.3181e-04, 6.7384e-03, 9.6028e-03,  ..., 9.9977e-01,
          9.9876e-01, 2.1177e-03],
         [3.3181e-04, 9.8284e-01, 9.7806e-01,  ..., 7.6092e-05,
          4.1248e-04, 2.5896e-03]],
        [[9.8807e-01, 4.9896e-04, 4.6346e-04,  ..., 1.3986e-03,
          1.0253e-03, 1.4630e-04],
         [2.3936e-03, 4.9896e-04, 4.6346e-04,  ..., 1.3586e-03,
          1.0253e-03, 1.4630e-04],
         [7.1450e-03, 4.9896e-04, 4.6346e-04,  ..., 9.9588e-01,
          9.9692e-01, 9.9956e-01],
         [2.3936e-03, 9.9850e-01, 9.9861e-01,  ..., 1.3586e-03,
          1.0253e-03, 1.4630e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2718e-03, 6.0098e-05, 9.9352e-01,  ..., 2.1035e-03,
          6.0546e-04, 2.8605e-03],
         [1.2718e-03, 6.0098e-05, 2.0065e-03,  ..., 2.1035e-03,
          6.0546e-04, 2.8605e-03],
         [9.9618e-01, 6.0098e-05, 2.0065e-03,  ..., 9.9369e-01,
          6.0546e-04, 9.9142e-01],
         [1.2718e-03, 9.9982e-01, 2.4690e-03,  ..., 2.1035e-03,
          9.9818e-01, 2.8605e-03]],
        [[2.7581e-03, 3.5832e-05, 1.5470e-04,  ..., 7.3650e-05,
          9.9953e-01, 4.0767e-03],
         [2.7581e-03, 3.5832e-05, 1.5470e-04,  ..., 7.3650e-05,
          1.5521e-04, 4.0767e-03],
         [9.9173e-01, 3.5832e-05, 1.5470e-04,  ..., 7.3650e-05,
          1.5521e-04, 9.8777e-01],
         [2.7581e-03, 9.9989e-01, 9.9954e-01,  ..., 9.9978e-01,
          1.5521e-04, 4.0767e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 542:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9971e-01, 3.9882e-03, 3.2766e-03,  ..., 4.9498e-04,
          7.4535e-05, 9.9585e-01],
         [9.7709e-05, 3.9882e-03, 3.2766e-03,  ..., 4.9498e-04,
          7.4535e-05, 1.7963e-03],
         [9.7709e-05, 3.9882e-03, 3.2766e-03,  ..., 9.9852e-01,
          9.9978e-01, 1.1757e-03],
         [9.7709e-05, 9.8804e-01, 9.9017e-01,  ..., 4.9498e-04,
          7.4535e-05, 1.1757e-03]],
        [[9.9616e-01, 3.4768e-03, 5.2010e-03,  ..., 1.6885e-03,
          4.8562e-04, 3.9601e-04],
         [1.2806e-03, 3.4768e-03, 5.2010e-03,  ..., 1.6852e-03,
          6.8813e-04, 3.9601e-04],
         [1.2806e-03, 3.4768e-03, 5.2010e-03,  ..., 9.9494e-01,
          9.9834e-01, 9.9881e-01],
         [1.2806e-03, 9.8957e-01, 9.8440e-01,  ..., 1.6852e-03,
          4.8562e-04, 3.9601e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9861e-03, 3.4943e-05, 9.7607e-01,  ..., 1.6302e-03,
          4.9301e-04, 2.0735e-03],
         [5.9030e-03, 3.4943e-05, 9.9544e-03,  ..., 1.6302e-03,
          4.9301e-04, 2.0735e-03],
         [9.8121e-01, 3.4943e-05, 5.5665e-03,  ..., 9.9511e-01,
          4.9301e-04, 9.9378e-01],
         [5.9030e-03, 9.9990e-01, 8.4045e-03,  ..., 1.6302e-03,
          9.9852e-01, 2.0735e-03]],
        [[6.7247e-03, 6.9740e-05, 2.2593e-05,  ..., 5.4572e-05,
          9.9390e-01, 1.8140e-03],
         [7.8029e-03, 6.9740e-05, 2.2593e-05,  ..., 5.4572e-05,
          2.2854e-03, 1.8140e-03],
         [9.7917e-01, 6.9740e-05, 2.2593e-05,  ..., 5.4572e-05,
          1.9089e-03, 9.9456e-01],
         [6.3046e-03, 9.9979e-01, 9.9993e-01,  ..., 9.9984e-01,
          1.9089e-03, 1.8140e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 543:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:45,832 [Process: 0] Synchronize training processes
2024-08-18 15:22:45,832 [Process: 0] Evaluating...
2024-08-18 15:22:45,835 [Process: 0] EPOCH 542:
2024-08-18 15:22:45,837 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:46,966 [Process: 0] Synchronize training processes
2024-08-18 15:22:46,966 [Process: 0] Evaluating...
2024-08-18 15:22:46,968 [Process: 0] EPOCH 543:
2024-08-18 15:22:46,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9122e-01, 6.2442e-03, 1.3867e-03,  ..., 6.4492e-04,
          3.6682e-04, 9.9833e-01],
         [2.9269e-03, 8.3414e-03, 1.3867e-03,  ..., 6.4492e-04,
          3.6682e-04, 5.5750e-04],
         [2.9269e-03, 8.0950e-03, 1.3867e-03,  ..., 9.9807e-01,
          9.9890e-01, 5.5750e-04],
         [2.9269e-03, 9.7732e-01, 9.9584e-01,  ..., 6.4492e-04,
          3.6682e-04, 5.5750e-04]],
        [[9.6870e-01, 9.5106e-04, 1.3231e-03,  ..., 1.2553e-04,
          6.0912e-05, 3.0872e-04],
         [2.2312e-02, 9.5106e-04, 1.3231e-03,  ..., 1.2553e-04,
          6.0912e-05, 3.0872e-04],
         [4.4944e-03, 9.5106e-04, 1.3231e-03,  ..., 9.9962e-01,
          9.9982e-01, 9.9907e-01],
         [4.4944e-03, 9.9715e-01, 9.9603e-01,  ..., 1.2553e-04,
          6.0912e-05, 3.0872e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5720e-03, 6.8487e-05, 9.9738e-01,  ..., 2.9701e-03,
          1.2998e-04, 2.3995e-03],
         [2.5720e-03, 6.8487e-05, 8.7419e-04,  ..., 2.9701e-03,
          1.2998e-04, 2.3995e-03],
         [9.9228e-01, 6.8487e-05, 8.7419e-04,  ..., 9.9109e-01,
          1.2998e-04, 9.9280e-01],
         [2.5720e-03, 9.9979e-01, 8.7419e-04,  ..., 2.9701e-03,
          9.9961e-01, 2.3995e-03]],
        [[2.2839e-03, 5.1915e-05, 4.0287e-05,  ..., 1.1598e-04,
          9.9955e-01, 1.7499e-03],
         [2.2839e-03, 5.1915e-05, 4.0287e-05,  ..., 1.1598e-04,
          1.4104e-04, 1.7499e-03],
         [9.9315e-01, 5.1915e-05, 4.0287e-05,  ..., 1.1598e-04,
          1.4104e-04, 9.9475e-01],
         [2.2839e-03, 9.9984e-01, 9.9988e-01,  ..., 9.9965e-01,
          1.6979e-04, 1.7499e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 544:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9897e-01, 2.3833e-03, 1.4160e-03,  ..., 4.2603e-04,
          6.4687e-04, 9.9897e-01],
         [3.4222e-04, 2.3833e-03, 1.4160e-03,  ..., 6.4207e-04,
          6.4687e-04, 3.4468e-04],
         [3.4222e-04, 2.3833e-03, 1.4160e-03,  ..., 9.9851e-01,
          9.9806e-01, 3.4468e-04],
         [3.4222e-04, 9.9285e-01, 9.9575e-01,  ..., 4.2603e-04,
          6.4687e-04, 3.4468e-04]],
        [[9.9808e-01, 9.0215e-03, 2.5972e-03,  ..., 3.7606e-04,
          2.7136e-04, 8.9835e-05],
         [6.3983e-04, 2.2165e-02, 2.5972e-03,  ..., 3.7606e-04,
          2.7136e-04, 8.9835e-05],
         [6.3983e-04, 9.5523e-03, 2.5972e-03,  ..., 9.9887e-01,
          9.9919e-01, 9.9973e-01],
         [6.3983e-04, 9.5926e-01, 9.9221e-01,  ..., 3.7606e-04,
          2.7136e-04, 8.9835e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:48,095 [Process: 0] Synchronize training processes
2024-08-18 15:22:48,095 [Process: 0] Evaluating...
2024-08-18 15:22:48,097 [Process: 0] EPOCH 544:
2024-08-18 15:22:48,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:49,215 [Process: 0] Synchronize training processes
2024-08-18 15:22:49,215 [Process: 0] Evaluating...
2024-08-18 15:22:49,217 [Process: 0] EPOCH 545:
2024-08-18 15:22:49,219 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7592e-03, 6.0050e-05, 9.9187e-01,  ..., 2.0593e-03,
          6.1368e-05, 3.2465e-03],
         [6.6807e-03, 6.0050e-05, 2.7062e-03,  ..., 2.0593e-03,
          6.1368e-05, 3.2465e-03],
         [9.7863e-01, 6.0050e-05, 2.6454e-03,  ..., 9.9382e-01,
          6.1368e-05, 9.9026e-01],
         [7.9332e-03, 9.9982e-01, 2.7751e-03,  ..., 2.0593e-03,
          9.9982e-01, 3.2465e-03]],
        [[2.6758e-03, 1.6719e-04, 3.9729e-04,  ..., 4.2106e-05,
          9.9890e-01, 8.2121e-03],
         [2.6758e-03, 1.6719e-04, 3.9729e-04,  ..., 4.2106e-05,
          3.4778e-04, 6.4809e-03],
         [9.9197e-01, 1.6719e-04, 3.9729e-04,  ..., 4.2106e-05,
          3.4778e-04, 9.7883e-01],
         [2.6758e-03, 9.9950e-01, 9.9881e-01,  ..., 9.9987e-01,
          4.0851e-04, 6.4809e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 545:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7469e-01, 3.5926e-03, 9.3086e-03,  ..., 1.3142e-04,
          3.0249e-04, 9.9687e-01],
         [1.3799e-02, 3.5926e-03, 9.3086e-03,  ..., 1.3142e-04,
          3.0249e-04, 8.0615e-04],
         [5.7555e-03, 3.5926e-03, 1.7396e-02,  ..., 9.9961e-01,
          9.9909e-01, 1.5135e-03],
         [5.7555e-03, 9.8922e-01, 9.6399e-01,  ..., 1.3142e-04,
          3.0249e-04, 8.0615e-04]],
        [[9.9811e-01, 2.7197e-03, 3.2826e-03,  ..., 1.6856e-04,
          2.6551e-03, 2.5650e-04],
         [5.9440e-04, 2.7197e-03, 3.2826e-03,  ..., 1.6856e-04,
          1.4203e-02, 2.5650e-04],
         [7.0143e-04, 2.7197e-03, 3.2826e-03,  ..., 9.9949e-01,
          9.8049e-01, 9.9923e-01],
         [5.9440e-04, 9.9184e-01, 9.9015e-01,  ..., 1.6856e-04,
          2.6551e-03, 2.5650e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1009e-03, 4.2294e-06, 9.5974e-01,  ..., 1.5063e-03,
          1.2541e-03, 3.5954e-03],
         [2.1009e-03, 4.2294e-06, 1.9741e-02,  ..., 1.5063e-03,
          1.2541e-03, 3.5954e-03],
         [9.9370e-01, 4.2294e-06, 9.4526e-03,  ..., 9.9548e-01,
          1.2541e-03, 9.8921e-01],
         [2.1009e-03, 9.9999e-01, 1.1068e-02,  ..., 1.5063e-03,
          9.9624e-01, 3.5954e-03]],
        [[6.0050e-03, 8.7583e-06, 2.8318e-05,  ..., 1.5759e-05,
          9.9750e-01, 3.7348e-03],
         [6.2124e-03, 8.7583e-06, 2.8318e-05,  ..., 1.5759e-05,
          8.0408e-04, 3.7348e-03],
         [9.8207e-01, 8.7583e-06, 2.8318e-05,  ..., 1.5759e-05,
          8.0408e-04, 9.8880e-01],
         [5.7103e-03, 9.9997e-01, 9.9992e-01,  ..., 9.9995e-01,
          8.9552e-04, 3.7348e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 546:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9678e-01, 2.2266e-03, 2.7671e-03,  ..., 5.5573e-04,
          1.7110e-03, 9.9971e-01],
         [1.0748e-03, 2.2266e-03, 2.7671e-03,  ..., 5.5573e-04,
          2.1435e-03, 9.6021e-05],
         [1.0748e-03, 2.2266e-03, 2.7671e-03,  ..., 9.9833e-01,
          9.9443e-01, 9.6021e-05],
         [1.0748e-03, 9.9332e-01, 9.9170e-01,  ..., 5.5573e-04,
          1.7110e-03, 9.6021e-05]],
        [[9.9939e-01, 6.4723e-04, 1.8452e-03,  ..., 3.7667e-04,
          2.3433e-04, 1.3258e-04],
         [2.0463e-04, 6.4723e-04, 1.8452e-03,  ..., 3.7667e-04,
          2.3433e-04, 1.3258e-04],
         [2.0463e-04, 6.4723e-04, 1.8452e-03,  ..., 9.9887e-01,
          9.9930e-01, 9.9960e-01],
         [2.0463e-04, 9.9806e-01, 9.9446e-01,  ..., 3.7667e-04,
          2.3433e-04, 1.3258e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:50,348 [Process: 0] Synchronize training processes
2024-08-18 15:22:50,348 [Process: 0] Evaluating...
2024-08-18 15:22:50,350 [Process: 0] EPOCH 546:
2024-08-18 15:22:50,352 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:51,476 [Process: 0] Synchronize training processes
2024-08-18 15:22:51,477 [Process: 0] Evaluating...
2024-08-18 15:22:51,478 [Process: 0] EPOCH 547:
2024-08-18 15:22:51,480 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0081e-03, 1.0576e-04, 9.9748e-01,  ..., 2.2858e-03,
          4.6264e-05, 4.0728e-03],
         [1.0081e-03, 1.0576e-04, 8.3846e-04,  ..., 2.2858e-03,
          4.6264e-05, 4.3694e-03],
         [9.9698e-01, 1.0576e-04, 8.3846e-04,  ..., 9.9314e-01,
          4.6264e-05, 9.8748e-01],
         [1.0081e-03, 9.9968e-01, 8.3846e-04,  ..., 2.2858e-03,
          9.9986e-01, 4.0728e-03]],
        [[5.5732e-03, 2.1030e-03, 1.0512e-04,  ..., 5.0255e-04,
          9.9848e-01, 1.6004e-03],
         [5.5732e-03, 2.1030e-03, 1.0512e-04,  ..., 5.0255e-04,
          5.0570e-04, 1.6004e-03],
         [9.8328e-01, 2.1030e-03, 1.0512e-04,  ..., 5.0255e-04,
          5.0570e-04, 9.9520e-01],
         [5.5732e-03, 9.9369e-01, 9.9968e-01,  ..., 9.9849e-01,
          5.0570e-04, 1.6004e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 547:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9894e-01, 4.1075e-03, 4.3274e-03,  ..., 1.7431e-04,
          7.8993e-04, 9.9960e-01],
         [4.8222e-04, 4.1075e-03, 4.3274e-03,  ..., 1.7431e-04,
          7.8993e-04, 1.3266e-04],
         [2.8711e-04, 4.5301e-03, 4.3274e-03,  ..., 9.9948e-01,
          9.9763e-01, 1.3266e-04],
         [2.8711e-04, 9.8725e-01, 9.8702e-01,  ..., 1.7431e-04,
          7.8993e-04, 1.3266e-04]],
        [[9.9055e-01, 1.1494e-03, 5.4349e-04,  ..., 1.8742e-03,
          2.4300e-03, 8.5974e-04],
         [2.8352e-03, 1.1494e-03, 5.4349e-04,  ..., 1.8742e-03,
          4.3576e-03, 8.5974e-04],
         [3.7751e-03, 1.1494e-03, 5.4349e-04,  ..., 9.9438e-01,
          9.9078e-01, 9.9742e-01],
         [2.8352e-03, 9.9655e-01, 9.9837e-01,  ..., 1.8742e-03,
          2.4300e-03, 8.5974e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0540e-03, 1.6693e-05, 9.9168e-01,  ..., 1.3236e-03,
          1.9536e-04, 5.4367e-03],
         [3.0540e-03, 1.6693e-05, 2.5542e-03,  ..., 1.3236e-03,
          1.9536e-04, 5.9594e-03],
         [9.9084e-01, 1.6693e-05, 2.5542e-03,  ..., 9.9603e-01,
          1.9536e-04, 9.8317e-01],
         [3.0540e-03, 9.9995e-01, 3.2100e-03,  ..., 1.3236e-03,
          9.9941e-01, 5.4367e-03]],
        [[1.2417e-03, 3.5527e-05, 8.3513e-05,  ..., 1.7923e-04,
          9.9823e-01, 2.3419e-03],
         [1.2417e-03, 3.5527e-05, 8.3513e-05,  ..., 1.7923e-04,
          5.8863e-04, 2.3419e-03],
         [9.9627e-01, 3.5527e-05, 8.3513e-05,  ..., 1.7923e-04,
          5.8863e-04, 9.9297e-01],
         [1.2417e-03, 9.9989e-01, 9.9975e-01,  ..., 9.9946e-01,
          5.8863e-04, 2.3419e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 548:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:22:52,607 [Process: 0] Synchronize training processes
2024-08-18 15:22:52,607 [Process: 0] Evaluating...
2024-08-18 15:22:52,609 [Process: 0] EPOCH 548:
2024-08-18 15:22:52,611 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:53,738 [Process: 0] Synchronize training processes
2024-08-18 15:22:53,739 [Process: 0] Evaluating...
2024-08-18 15:22:53,740 [Process: 0] EPOCH 549:
2024-08-18 15:22:53,742 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9579e-01, 1.9986e-03, 1.5181e-03,  ..., 9.6806e-04,
          5.9951e-05, 9.9836e-01],
         [1.3991e-03, 1.9986e-03, 1.5181e-03,  ..., 1.6997e-03,
          5.9951e-05, 5.4774e-04],
         [1.3991e-03, 1.9986e-03, 1.5181e-03,  ..., 9.9636e-01,
          9.9982e-01, 5.4774e-04],
         [1.4098e-03, 9.9400e-01, 9.9545e-01,  ..., 9.6806e-04,
          5.9951e-05, 5.4774e-04]],
        [[9.8225e-01, 2.8906e-03, 1.4738e-03,  ..., 1.6717e-03,
          2.1731e-04, 9.2698e-05],
         [1.1757e-02, 4.1343e-03, 1.4738e-03,  ..., 1.6717e-03,
          2.1731e-04, 9.2698e-05],
         [2.9979e-03, 2.8906e-03, 1.4738e-03,  ..., 9.9498e-01,
          9.9935e-01, 9.9972e-01],
         [2.9979e-03, 9.9008e-01, 9.9558e-01,  ..., 1.6717e-03,
          2.1731e-04, 9.2698e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4237e-03, 5.5495e-06, 9.9774e-01,  ..., 1.7342e-03,
          6.0334e-04, 1.8006e-03],
         [4.4913e-03, 5.5495e-06, 7.2347e-04,  ..., 1.7342e-03,
          6.0334e-04, 1.8006e-03],
         [9.8656e-01, 5.5495e-06, 7.2347e-04,  ..., 9.9480e-01,
          6.0334e-04, 9.9460e-01],
         [4.5216e-03, 9.9998e-01, 8.1509e-04,  ..., 1.7342e-03,
          9.9819e-01, 1.8006e-03]],
        [[9.9978e-03, 2.6365e-05, 5.6854e-05,  ..., 9.1389e-06,
          9.9989e-01, 1.5583e-03],
         [1.0082e-02, 2.6365e-05, 5.6854e-05,  ..., 9.1389e-06,
          3.6765e-05, 1.5583e-03],
         [9.6752e-01, 2.6365e-05, 5.6854e-05,  ..., 9.1389e-06,
          3.6765e-05, 9.9532e-01],
         [1.2404e-02, 9.9992e-01, 9.9983e-01,  ..., 9.9997e-01,
          3.6765e-05, 1.5583e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 549:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9462e-01, 1.6248e-03, 1.2374e-03,  ..., 1.4929e-04,
          2.5845e-04, 9.9925e-01],
         [1.7929e-03, 1.6248e-03, 1.2374e-03,  ..., 1.4929e-04,
          2.5845e-04, 2.4855e-04],
         [1.7929e-03, 1.6248e-03, 1.2374e-03,  ..., 9.9955e-01,
          9.9922e-01, 2.4855e-04],
         [1.7929e-03, 9.9513e-01, 9.9629e-01,  ..., 1.4929e-04,
          2.5845e-04, 2.4855e-04]],
        [[9.9865e-01, 3.0766e-03, 2.4969e-03,  ..., 5.4041e-04,
          1.2098e-03, 8.0429e-04],
         [4.4923e-04, 3.0766e-03, 2.5684e-03,  ..., 5.4041e-04,
          1.2098e-03, 1.0811e-03],
         [4.4923e-04, 3.3047e-03, 2.4969e-03,  ..., 9.9838e-01,
          9.9637e-01, 9.9731e-01],
         [4.4923e-04, 9.9054e-01, 9.9244e-01,  ..., 5.4041e-04,
          1.2098e-03, 8.0429e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1443e-03, 1.3518e-04, 9.8529e-01,  ..., 2.3614e-03,
          1.4381e-04, 2.9769e-03],
         [3.1443e-03, 1.3518e-04, 4.8319e-03,  ..., 2.3614e-03,
          1.4381e-04, 2.9769e-03],
         [9.9057e-01, 1.3518e-04, 4.3338e-03,  ..., 9.9292e-01,
          1.4381e-04, 9.9107e-01],
         [3.1443e-03, 9.9959e-01, 5.5438e-03,  ..., 2.3614e-03,
          9.9957e-01, 2.9769e-03]],
        [[2.4204e-03, 2.7508e-04, 9.5841e-05,  ..., 1.7262e-05,
          9.9941e-01, 4.2112e-03],
         [2.4204e-03, 2.7508e-04, 9.5841e-05,  ..., 1.7262e-05,
          1.9674e-04, 4.2112e-03],
         [9.9274e-01, 2.7508e-04, 9.5841e-05,  ..., 1.7262e-05,
          1.9674e-04, 9.8737e-01],
         [2.4204e-03, 9.9917e-01, 9.9971e-01,  ..., 9.9995e-01,
          1.9674e-04, 4.2112e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 550:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:54,871 [Process: 0] Synchronize training processes
2024-08-18 15:22:54,871 [Process: 0] Evaluating...
2024-08-18 15:22:54,873 [Process: 0] EPOCH 550:
2024-08-18 15:22:54,874 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7374e-01, 1.7792e-03, 3.2586e-03,  ..., 2.1593e-04,
          1.2869e-04, 9.9891e-01],
         [1.5034e-02, 1.7792e-03, 3.2586e-03,  ..., 2.1593e-04,
          1.2869e-04, 3.4488e-04],
         [5.6145e-03, 1.7792e-03, 3.4804e-03,  ..., 9.9935e-01,
          9.9961e-01, 3.9553e-04],
         [5.6145e-03, 9.9466e-01, 9.9000e-01,  ..., 2.1593e-04,
          1.2869e-04, 3.4488e-04]],
        [[9.9818e-01, 6.0312e-03, 1.1422e-03,  ..., 7.5201e-05,
          3.9695e-05, 9.7957e-04],
         [5.2651e-04, 8.4146e-03, 1.1422e-03,  ..., 7.5201e-05,
          3.9695e-05, 9.7957e-04],
         [7.6203e-04, 6.0312e-03, 1.1422e-03,  ..., 9.9977e-01,
          9.9988e-01, 9.9706e-01],
         [5.2651e-04, 9.7952e-01, 9.9657e-01,  ..., 7.5201e-05,
          3.9695e-05, 9.7957e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5763e-03, 4.2481e-05, 9.8967e-01,  ..., 8.9820e-04,
          2.9973e-04, 3.7170e-03],
         [1.5763e-03, 4.2481e-05, 2.4683e-03,  ..., 8.9820e-04,
          2.9973e-04, 3.9704e-03],
         [9.9527e-01, 4.2481e-05, 2.4683e-03,  ..., 9.9731e-01,
          2.9973e-04, 9.8860e-01],
         [1.5763e-03, 9.9987e-01, 5.3924e-03,  ..., 8.9820e-04,
          9.9910e-01, 3.7170e-03]],
        [[1.1029e-02, 2.8173e-04, 4.3080e-05,  ..., 2.1566e-04,
          9.9270e-01, 3.3740e-03],
         [1.0861e-02, 2.8173e-04, 4.3080e-05,  ..., 2.1566e-04,
          2.4208e-03, 3.3740e-03],
         [9.6584e-01, 2.8173e-04, 4.3080e-05,  ..., 2.1566e-04,
          2.3130e-03, 9.8988e-01],
         [1.2266e-02, 9.9915e-01, 9.9987e-01,  ..., 9.9935e-01,
          2.5712e-03, 3.3740e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 551:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5581e-01, 3.1615e-03, 4.1945e-03,  ..., 4.4176e-04,
          1.0242e-03, 9.9747e-01],
         [3.0822e-02, 3.1615e-03, 4.1945e-03,  ..., 4.4176e-04,
          1.3461e-03, 8.4405e-04],
         [6.6822e-03, 3.1615e-03, 6.4504e-03,  ..., 9.9867e-01,
          9.9661e-01, 8.4405e-04],
         [6.6822e-03, 9.9052e-01, 9.8516e-01,  ..., 4.4176e-04,
          1.0242e-03, 8.4405e-04]],
        [[9.9646e-01, 3.3038e-03, 3.9127e-03,  ..., 3.5567e-04,
          9.4777e-04, 3.9554e-04],
         [1.1800e-03, 3.3038e-03, 4.5286e-03,  ..., 3.5567e-04,
          1.2865e-03, 3.9554e-04],
         [1.1800e-03, 4.0180e-03, 3.9127e-03,  ..., 9.9893e-01,
          9.9682e-01, 9.9881e-01],
         [1.1800e-03, 9.8937e-01, 9.8765e-01,  ..., 3.5567e-04,
          9.4777e-04, 3.9554e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0842e-02, 1.7701e-05, 9.9046e-01,  ..., 8.0172e-04,
          4.1713e-04, 1.1261e-03],
         [1.3045e-02, 1.7701e-05, 3.2466e-03,  ..., 8.0172e-04,
          4.1713e-04, 1.1261e-03],
         [9.6440e-01, 1.7701e-05, 3.0581e-03,  ..., 9.9759e-01,
          4.1713e-04, 9.9662e-01],
         [1.1718e-02, 9.9995e-01, 3.2399e-03,  ..., 8.0172e-04,
          9.9875e-01, 1.1261e-03]],
        [[1.3245e-03, 4.7972e-06, 4.5195e-04,  ..., 1.5126e-04,
          9.9975e-01, 2.2332e-03],
         [1.3245e-03, 4.7972e-06, 4.5195e-04,  ..., 1.5126e-04,
          8.2782e-05, 2.2332e-03],
         [9.9603e-01, 4.7972e-06, 4.5195e-04,  ..., 1.5126e-04,
          8.2782e-05, 9.9330e-01],
         [1.3245e-03, 9.9999e-01, 9.9864e-01,  ..., 9.9955e-01,
          8.2782e-05, 2.2332e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:56,003 [Process: 0] Synchronize training processes
2024-08-18 15:22:56,004 [Process: 0] Evaluating...
2024-08-18 15:22:56,005 [Process: 0] EPOCH 551:
2024-08-18 15:22:56,007 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:57,128 [Process: 0] Synchronize training processes
2024-08-18 15:22:57,129 [Process: 0] Evaluating...
2024-08-18 15:22:57,133 [Process: 0] EPOCH 552:
2024-08-18 15:22:57,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 552:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9767e-01, 1.9029e-02, 4.1842e-03,  ..., 3.2610e-04,
          3.8308e-04, 9.9888e-01],
         [7.7548e-04, 3.1378e-02, 4.1842e-03,  ..., 3.2610e-04,
          3.8308e-04, 3.7481e-04],
         [7.7548e-04, 3.6272e-02, 4.4280e-03,  ..., 9.9902e-01,
          9.9885e-01, 3.7481e-04],
         [7.7548e-04, 9.1332e-01, 9.8720e-01,  ..., 3.2610e-04,
          3.8308e-04, 3.7481e-04]],
        [[9.9980e-01, 5.6208e-03, 2.2721e-03,  ..., 3.2559e-04,
          6.7022e-04, 2.0847e-04],
         [6.5648e-05, 5.7434e-03, 2.2721e-03,  ..., 3.2559e-04,
          1.3544e-03, 2.0847e-04],
         [6.5648e-05, 5.6208e-03, 2.2721e-03,  ..., 9.9902e-01,
          9.9731e-01, 9.9937e-01],
         [6.5648e-05, 9.8302e-01, 9.9318e-01,  ..., 3.2559e-04,
          6.7022e-04, 2.0847e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9025e-04, 2.0488e-04, 9.8741e-01,  ..., 6.6907e-03,
          1.1031e-03, 1.0167e-03],
         [6.9025e-04, 2.0488e-04, 5.4801e-03,  ..., 8.0471e-03,
          1.1031e-03, 1.0167e-03],
         [9.9793e-01, 2.0488e-04, 3.5563e-03,  ..., 9.7857e-01,
          1.1031e-03, 9.9695e-01],
         [6.9025e-04, 9.9939e-01, 3.5563e-03,  ..., 6.6907e-03,
          9.9669e-01, 1.0167e-03]],
        [[1.4808e-03, 1.0802e-04, 4.7498e-05,  ..., 5.4982e-05,
          9.9879e-01, 2.3286e-03],
         [1.4808e-03, 1.0802e-04, 4.7498e-05,  ..., 5.4982e-05,
          4.0277e-04, 2.3286e-03],
         [9.9556e-01, 1.0802e-04, 4.7498e-05,  ..., 5.4982e-05,
          4.0277e-04, 9.9301e-01],
         [1.4808e-03, 9.9968e-01, 9.9986e-01,  ..., 9.9984e-01,
          4.0277e-04, 2.3286e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 553:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9825e-01, 5.2704e-03, 1.8080e-03,  ..., 1.9144e-04,
          1.3820e-04, 9.9267e-01],
         [5.8337e-04, 5.8050e-03, 1.8080e-03,  ..., 1.9144e-04,
          1.3820e-04, 2.3468e-03],
         [5.8337e-04, 7.0058e-03, 1.8080e-03,  ..., 9.9943e-01,
          9.9959e-01, 2.6319e-03],
         [5.8337e-04, 9.8192e-01, 9.9458e-01,  ..., 1.9144e-04,
          1.3820e-04, 2.3468e-03]],
        [[9.9957e-01, 4.8271e-03, 2.9002e-03,  ..., 1.0820e-03,
          1.4036e-04, 9.7386e-04],
         [1.4404e-04, 4.8271e-03, 3.1032e-03,  ..., 1.0820e-03,
          1.4036e-04, 9.7386e-04],
         [1.4404e-04, 5.7853e-03, 2.9002e-03,  ..., 9.9675e-01,
          9.9958e-01, 9.9708e-01],
         [1.4404e-04, 9.8456e-01, 9.9110e-01,  ..., 1.0820e-03,
          1.4036e-04, 9.7386e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:22:58,264 [Process: 0] Synchronize training processes
2024-08-18 15:22:58,264 [Process: 0] Evaluating...
2024-08-18 15:22:58,266 [Process: 0] EPOCH 553:
2024-08-18 15:22:58,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:22:59,395 [Process: 0] Synchronize training processes
2024-08-18 15:22:59,395 [Process: 0] Evaluating...
2024-08-18 15:22:59,397 [Process: 0] EPOCH 554:
2024-08-18 15:22:59,399 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5614e-03, 1.1960e-05, 9.7228e-01,  ..., 1.9803e-03,
          3.1613e-04, 2.1916e-03],
         [1.5614e-03, 1.1960e-05, 1.2360e-02,  ..., 1.9803e-03,
          3.1613e-04, 2.1916e-03],
         [9.9532e-01, 1.1960e-05, 7.5065e-03,  ..., 9.9406e-01,
          3.1613e-04, 9.9343e-01],
         [1.5614e-03, 9.9996e-01, 7.8553e-03,  ..., 1.9803e-03,
          9.9905e-01, 2.1916e-03]],
        [[6.5648e-03, 1.7471e-04, 4.0587e-05,  ..., 8.5896e-05,
          9.9813e-01, 4.3458e-03],
         [6.5648e-03, 1.7471e-04, 4.0587e-05,  ..., 8.5896e-05,
          5.3494e-04, 4.3458e-03],
         [9.7836e-01, 1.7471e-04, 4.0587e-05,  ..., 8.5896e-05,
          5.3494e-04, 9.8696e-01],
         [8.5088e-03, 9.9948e-01, 9.9988e-01,  ..., 9.9974e-01,
          7.9881e-04, 4.3458e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 554:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9976e-01, 3.2784e-03, 3.3248e-03,  ..., 2.5069e-04,
          4.4511e-04, 9.9838e-01],
         [7.9761e-05, 3.2784e-03, 3.3248e-03,  ..., 2.5069e-04,
          4.4511e-04, 5.4073e-04],
         [7.9761e-05, 3.2784e-03, 3.3248e-03,  ..., 9.9925e-01,
          9.9866e-01, 5.4073e-04],
         [7.9761e-05, 9.9016e-01, 9.9003e-01,  ..., 2.5069e-04,
          4.4511e-04, 5.4073e-04]],
        [[9.9904e-01, 4.6839e-03, 1.7417e-03,  ..., 1.4376e-04,
          1.4222e-04, 6.6781e-04],
         [3.1997e-04, 4.6839e-03, 1.7417e-03,  ..., 1.4376e-04,
          1.4222e-04, 6.6781e-04],
         [3.1997e-04, 6.2420e-03, 1.7417e-03,  ..., 9.9957e-01,
          9.9957e-01, 9.9800e-01],
         [3.1997e-04, 9.8439e-01, 9.9477e-01,  ..., 1.4376e-04,
          1.4222e-04, 6.6781e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1854e-03, 5.4852e-06, 9.9823e-01,  ..., 2.0082e-03,
          2.2853e-04, 2.2793e-03],
         [1.1854e-03, 5.4852e-06, 5.2233e-04,  ..., 2.0082e-03,
          2.2853e-04, 2.2793e-03],
         [9.9644e-01, 5.4852e-06, 5.2233e-04,  ..., 9.9398e-01,
          2.2853e-04, 9.9316e-01],
         [1.1854e-03, 9.9998e-01, 7.2546e-04,  ..., 2.0082e-03,
          9.9931e-01, 2.2793e-03]],
        [[3.0829e-03, 1.0988e-03, 7.6758e-05,  ..., 3.2604e-05,
          9.9684e-01, 2.9636e-03],
         [3.0829e-03, 1.0988e-03, 7.6758e-05,  ..., 3.2604e-05,
          1.0537e-03, 2.9636e-03],
         [9.9075e-01, 1.0988e-03, 7.6758e-05,  ..., 3.2604e-05,
          1.0537e-03, 9.9111e-01],
         [3.0829e-03, 9.9670e-01, 9.9977e-01,  ..., 9.9990e-01,
          1.0537e-03, 2.9636e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 555:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8630e-01, 1.1479e-03, 1.8446e-03,  ..., 8.6311e-04,
          1.0591e-04, 9.9875e-01],
         [4.2556e-03, 1.1479e-03, 1.8446e-03,  ..., 8.6311e-04,
          1.0591e-04, 4.1745e-04],
         [4.3217e-03, 1.1479e-03, 1.8446e-03,  ..., 9.9741e-01,
          9.9968e-01, 4.1745e-04],
         [5.1224e-03, 9.9656e-01, 9.9447e-01,  ..., 8.6311e-04,
          1.0591e-04, 4.1745e-04]],
        [[9.9408e-01, 1.3082e-03, 4.8446e-04,  ..., 2.4250e-04,
          2.2396e-04, 6.6998e-04],
         [2.6359e-03, 1.3082e-03, 4.8446e-04,  ..., 2.4250e-04,
          2.2396e-04, 6.6998e-04],
         [1.9838e-03, 1.3082e-03, 4.8446e-04,  ..., 9.9927e-01,
          9.9933e-01, 9.9799e-01],
         [1.2996e-03, 9.9608e-01, 9.9855e-01,  ..., 2.4250e-04,
          2.2396e-04, 6.6998e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:00,525 [Process: 0] Synchronize training processes
2024-08-18 15:23:00,525 [Process: 0] Evaluating...
2024-08-18 15:23:00,527 [Process: 0] EPOCH 555:
2024-08-18 15:23:00,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:01,648 [Process: 0] Synchronize training processes
2024-08-18 15:23:01,649 [Process: 0] Evaluating...
2024-08-18 15:23:01,650 [Process: 0] EPOCH 556:
2024-08-18 15:23:01,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5585e-03, 1.5192e-03, 9.8590e-01,  ..., 5.4109e-03,
          1.0704e-04, 2.7861e-03],
         [2.5585e-03, 1.5192e-03, 3.6221e-03,  ..., 5.4109e-03,
          1.0704e-04, 2.7861e-03],
         [9.9232e-01, 1.5192e-03, 3.3520e-03,  ..., 9.8306e-01,
          1.0704e-04, 9.9164e-01],
         [2.5585e-03, 9.9544e-01, 7.1300e-03,  ..., 6.1160e-03,
          9.9968e-01, 2.7861e-03]],
        [[3.4006e-03, 2.6045e-05, 2.0041e-04,  ..., 1.8151e-05,
          9.9882e-01, 6.1172e-03],
         [3.4006e-03, 2.6045e-05, 2.0041e-04,  ..., 1.8151e-05,
          3.9460e-04, 5.1659e-03],
         [9.8980e-01, 2.6045e-05, 2.0041e-04,  ..., 1.8151e-05,
          3.9460e-04, 9.8361e-01],
         [3.4006e-03, 9.9992e-01, 9.9940e-01,  ..., 9.9995e-01,
          3.9460e-04, 5.1088e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 556:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9859e-01, 1.3062e-03, 4.2778e-03,  ..., 1.6207e-04,
          4.7609e-04, 9.9915e-01],
         [4.6908e-04, 1.3062e-03, 4.2778e-03,  ..., 1.6207e-04,
          4.7609e-04, 2.8332e-04],
         [4.6908e-04, 1.3062e-03, 4.7940e-03,  ..., 9.9951e-01,
          9.9857e-01, 2.8332e-04],
         [4.6908e-04, 9.9608e-01, 9.8665e-01,  ..., 1.6207e-04,
          4.7609e-04, 2.8332e-04]],
        [[9.9637e-01, 9.8285e-03, 2.7274e-03,  ..., 6.6473e-04,
          1.9741e-04, 9.5436e-05],
         [1.2111e-03, 1.4249e-02, 2.7274e-03,  ..., 6.6473e-04,
          1.9741e-04, 9.5436e-05],
         [1.2111e-03, 1.1839e-02, 3.0535e-03,  ..., 9.9801e-01,
          9.9941e-01, 9.9971e-01],
         [1.2111e-03, 9.6408e-01, 9.9149e-01,  ..., 6.6473e-04,
          1.9741e-04, 9.5436e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1074e-02, 9.4836e-05, 8.6253e-01,  ..., 1.7048e-03,
          3.2621e-04, 4.4711e-04],
         [1.3170e-02, 9.4836e-05, 3.2439e-02,  ..., 1.7048e-03,
          3.2621e-04, 4.4711e-04],
         [9.6077e-01, 9.4836e-05, 2.4315e-02,  ..., 9.9489e-01,
          3.2621e-04, 9.9866e-01],
         [1.4984e-02, 9.9972e-01, 8.0714e-02,  ..., 1.7048e-03,
          9.9902e-01, 4.4711e-04]],
        [[4.0242e-03, 2.4660e-04, 1.6504e-04,  ..., 8.2108e-06,
          9.9886e-01, 9.0366e-03],
         [4.0242e-03, 2.4660e-04, 1.6504e-04,  ..., 8.2108e-06,
          3.6218e-04, 9.1936e-03],
         [9.8790e-01, 2.4660e-04, 1.6504e-04,  ..., 8.2108e-06,
          3.6218e-04, 9.7037e-01],
         [4.0486e-03, 9.9926e-01, 9.9950e-01,  ..., 9.9998e-01,
          4.1089e-04, 1.1396e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 557:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:02,777 [Process: 0] Synchronize training processes
2024-08-18 15:23:02,778 [Process: 0] Evaluating...
2024-08-18 15:23:02,779 [Process: 0] EPOCH 557:
2024-08-18 15:23:02,781 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9621e-01, 3.1209e-03, 5.2646e-03,  ..., 2.7863e-04,
          5.5310e-04, 9.9610e-01],
         [1.2649e-03, 3.1209e-03, 5.2646e-03,  ..., 2.7863e-04,
          5.5310e-04, 1.2992e-03],
         [1.2649e-03, 3.1209e-03, 5.2646e-03,  ..., 9.9916e-01,
          9.9834e-01, 1.2992e-03],
         [1.2649e-03, 9.9064e-01, 9.8421e-01,  ..., 2.7863e-04,
          5.5310e-04, 1.2992e-03]],
        [[9.9858e-01, 3.1539e-03, 2.2825e-03,  ..., 2.7083e-04,
          5.9812e-05, 1.0115e-04],
         [4.7472e-04, 3.1539e-03, 2.2825e-03,  ..., 2.7083e-04,
          5.9812e-05, 1.0115e-04],
         [4.7472e-04, 3.4383e-03, 2.9715e-03,  ..., 9.9919e-01,
          9.9982e-01, 9.9970e-01],
         [4.7472e-04, 9.9025e-01, 9.9246e-01,  ..., 2.7083e-04,
          5.9812e-05, 1.0115e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4834e-03, 1.5188e-05, 9.8476e-01,  ..., 1.6478e-02,
          3.7186e-04, 3.2863e-03],
         [3.4834e-03, 1.5188e-05, 4.3411e-03,  ..., 1.0920e-02,
          3.7186e-04, 3.2863e-03],
         [9.8955e-01, 1.5188e-05, 4.3411e-03,  ..., 9.6294e-01,
          3.7186e-04, 9.9014e-01],
         [3.4834e-03, 9.9995e-01, 6.5571e-03,  ..., 9.6672e-03,
          9.9888e-01, 3.2863e-03]],
        [[1.4581e-03, 7.0170e-05, 9.5236e-05,  ..., 2.1500e-04,
          9.9624e-01, 1.3950e-03],
         [1.4581e-03, 7.0170e-05, 9.5236e-05,  ..., 2.1500e-04,
          1.1004e-03, 1.3950e-03],
         [9.9563e-01, 7.0170e-05, 9.5236e-05,  ..., 2.1500e-04,
          1.1004e-03, 9.9582e-01],
         [1.4581e-03, 9.9979e-01, 9.9971e-01,  ..., 9.9936e-01,
          1.5571e-03, 1.3950e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 558:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9525e-01, 3.9964e-03, 1.1870e-02,  ..., 1.1795e-04,
          1.8696e-04, 9.9946e-01],
         [2.1449e-03, 3.9964e-03, 1.1678e-02,  ..., 1.1795e-04,
          1.8696e-04, 1.8673e-04],
         [1.3044e-03, 4.0768e-03, 2.6437e-02,  ..., 9.9965e-01,
          9.9944e-01, 1.7784e-04],
         [1.3044e-03, 9.8793e-01, 9.5002e-01,  ..., 1.1795e-04,
          1.8696e-04, 1.7784e-04]],
        [[9.8852e-01, 2.0945e-03, 3.2293e-04,  ..., 2.5057e-04,
          9.0075e-04, 7.6952e-04],
         [2.8955e-03, 2.0945e-03, 3.2293e-04,  ..., 2.5057e-04,
          2.0409e-03, 7.6952e-04],
         [5.6874e-03, 2.0945e-03, 3.2293e-04,  ..., 9.9925e-01,
          9.9616e-01, 9.9769e-01],
         [2.8955e-03, 9.9372e-01, 9.9903e-01,  ..., 2.5057e-04,
          9.0075e-04, 7.6952e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.7794e-03, 9.0544e-05, 9.9730e-01,  ..., 1.6713e-02,
          3.7457e-04, 5.0840e-03],
         [5.4049e-03, 9.0544e-05, 7.4655e-04,  ..., 1.0962e-02,
          3.7457e-04, 5.7770e-03],
         [9.8504e-01, 9.0544e-05, 7.4655e-04,  ..., 9.6061e-01,
          3.7457e-04, 9.8405e-01],
         [4.7794e-03, 9.9973e-01, 1.2106e-03,  ..., 1.1711e-02,
          9.9888e-01, 5.0840e-03]],
        [[8.4222e-04, 1.2243e-05, 2.2324e-03,  ..., 5.9430e-05,
          9.9964e-01, 2.5023e-03],
         [8.4222e-04, 1.2243e-05, 2.2324e-03,  ..., 5.9430e-05,
          1.1727e-04, 2.5023e-03],
         [9.9747e-01, 1.2243e-05, 2.2324e-03,  ..., 5.9430e-05,
          1.1727e-04, 9.9249e-01],
         [8.4222e-04, 9.9996e-01, 9.9330e-01,  ..., 9.9982e-01,
          1.2125e-04, 2.5023e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:03,909 [Process: 0] Synchronize training processes
2024-08-18 15:23:03,909 [Process: 0] Evaluating...
2024-08-18 15:23:03,911 [Process: 0] EPOCH 558:
2024-08-18 15:23:03,912 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:05,042 [Process: 0] Synchronize training processes
2024-08-18 15:23:05,042 [Process: 0] Evaluating...
2024-08-18 15:23:05,044 [Process: 0] EPOCH 559:
2024-08-18 15:23:05,046 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 559:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9761e-01, 9.3112e-04, 7.1404e-03,  ..., 6.0330e-04,
          3.3656e-04, 9.9917e-01],
         [7.9633e-04, 9.3112e-04, 1.1844e-02,  ..., 6.0330e-04,
          3.3656e-04, 2.7731e-04],
         [7.9633e-04, 9.3112e-04, 7.7739e-03,  ..., 9.9819e-01,
          9.9899e-01, 2.7731e-04],
         [7.9633e-04, 9.9721e-01, 9.7324e-01,  ..., 6.0330e-04,
          3.3656e-04, 2.7731e-04]],
        [[9.9915e-01, 3.1364e-03, 5.3190e-03,  ..., 4.5223e-04,
          8.4957e-04, 2.6772e-03],
         [2.8438e-04, 3.1364e-03, 6.1208e-03,  ..., 4.5223e-04,
          8.4957e-04, 7.6445e-03],
         [2.8438e-04, 4.6855e-03, 5.3190e-03,  ..., 9.9864e-01,
          9.9745e-01, 9.8700e-01],
         [2.8438e-04, 9.8904e-01, 9.8324e-01,  ..., 4.5223e-04,
          8.4957e-04, 2.6772e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2749e-03, 1.5377e-05, 8.7879e-01,  ..., 3.7842e-03,
          3.2416e-04, 1.5350e-03],
         [1.2749e-03, 1.5377e-05, 7.0943e-02,  ..., 3.7842e-03,
          3.2416e-04, 1.5350e-03],
         [9.9618e-01, 1.5377e-05, 2.0032e-02,  ..., 9.8865e-01,
          3.2416e-04, 9.9540e-01],
         [1.2749e-03, 9.9995e-01, 3.0239e-02,  ..., 3.7842e-03,
          9.9903e-01, 1.5350e-03]],
        [[6.2109e-04, 1.1189e-04, 3.6830e-05,  ..., 1.1842e-04,
          9.9976e-01, 1.4832e-02],
         [6.2109e-04, 1.1189e-04, 3.6830e-05,  ..., 1.1842e-04,
          8.0805e-05, 1.4316e-02],
         [9.9814e-01, 1.1189e-04, 3.6830e-05,  ..., 1.1842e-04,
          8.0805e-05, 9.5102e-01],
         [6.2109e-04, 9.9966e-01, 9.9989e-01,  ..., 9.9964e-01,
          8.0805e-05, 1.9827e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 560:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9688e-01, 5.3488e-03, 3.3842e-03,  ..., 3.1191e-04,
          7.4046e-05, 9.9968e-01],
         [1.3605e-03, 5.3488e-03, 3.3842e-03,  ..., 3.1191e-04,
          7.4046e-05, 1.0655e-04],
         [8.8034e-04, 8.5864e-03, 3.3842e-03,  ..., 9.9906e-01,
          9.9978e-01, 1.0655e-04],
         [8.8034e-04, 9.8072e-01, 9.8985e-01,  ..., 3.1191e-04,
          7.4046e-05, 1.0655e-04]],
        [[9.9626e-01, 2.8292e-03, 1.7471e-03,  ..., 5.7177e-04,
          7.6761e-04, 5.3405e-04],
         [1.2456e-03, 2.8292e-03, 1.7471e-03,  ..., 5.7177e-04,
          7.6761e-04, 6.9432e-04],
         [1.2456e-03, 2.8292e-03, 1.7471e-03,  ..., 9.9828e-01,
          9.9770e-01, 9.9824e-01],
         [1.2456e-03, 9.9151e-01, 9.9476e-01,  ..., 5.7177e-04,
          7.6761e-04, 5.3405e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:23:06,176 [Process: 0] Synchronize training processes
2024-08-18 15:23:06,177 [Process: 0] Evaluating...
2024-08-18 15:23:06,178 [Process: 0] EPOCH 560:
2024-08-18 15:23:06,180 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:07,308 [Process: 0] Synchronize training processes
2024-08-18 15:23:07,309 [Process: 0] Evaluating...
2024-08-18 15:23:07,310 [Process: 0] EPOCH 561:
2024-08-18 15:23:07,312 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6031e-03, 7.4592e-05, 9.9663e-01,  ..., 4.6886e-03,
          5.7582e-04, 1.5369e-03],
         [2.6031e-03, 7.4592e-05, 1.0844e-03,  ..., 4.6886e-03,
          5.7582e-04, 1.5369e-03],
         [9.9219e-01, 7.4592e-05, 1.0844e-03,  ..., 9.8589e-01,
          5.7582e-04, 9.9539e-01],
         [2.6031e-03, 9.9978e-01, 1.2051e-03,  ..., 4.7344e-03,
          9.9827e-01, 1.5369e-03]],
        [[2.3900e-03, 2.4868e-05, 4.4508e-05,  ..., 3.9836e-04,
          9.9938e-01, 9.9714e-04],
         [2.3900e-03, 2.4868e-05, 4.4508e-05,  ..., 3.9836e-04,
          2.0727e-04, 9.9714e-04],
         [9.9283e-01, 2.4868e-05, 4.4508e-05,  ..., 3.9836e-04,
          2.0727e-04, 9.9701e-01],
         [2.3900e-03, 9.9993e-01, 9.9987e-01,  ..., 9.9880e-01,
          2.0727e-04, 9.9714e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 561:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8639e-01, 2.6335e-03, 4.8824e-03,  ..., 3.6561e-04,
          2.8333e-04, 9.9900e-01],
         [4.2651e-03, 2.6335e-03, 6.7876e-03,  ..., 3.6561e-04,
          2.8333e-04, 3.3415e-04],
         [4.2651e-03, 2.6335e-03, 5.5408e-03,  ..., 9.9890e-01,
          9.9915e-01, 3.3415e-04],
         [5.0804e-03, 9.9210e-01, 9.8279e-01,  ..., 3.6561e-04,
          2.8333e-04, 3.3415e-04]],
        [[9.9818e-01, 2.4030e-03, 2.9349e-03,  ..., 1.0405e-03,
          4.4786e-04, 1.0268e-03],
         [5.5945e-04, 2.4030e-03, 2.9349e-03,  ..., 1.0340e-03,
          7.2175e-04, 1.0268e-03],
         [6.9800e-04, 2.4030e-03, 2.9349e-03,  ..., 9.9689e-01,
          9.9838e-01, 9.9692e-01],
         [5.5945e-04, 9.9279e-01, 9.9120e-01,  ..., 1.0340e-03,
          4.4786e-04, 1.0268e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2685e-03, 1.6042e-05, 9.7415e-01,  ..., 7.4720e-03,
          8.7756e-04, 1.7519e-03],
         [3.2685e-03, 1.6042e-05, 8.3500e-03,  ..., 7.8511e-03,
          8.7756e-04, 1.7519e-03],
         [9.9019e-01, 1.6042e-05, 6.7567e-03,  ..., 9.7619e-01,
          8.7756e-04, 9.9474e-01],
         [3.2685e-03, 9.9995e-01, 1.0740e-02,  ..., 8.4860e-03,
          9.9737e-01, 1.7519e-03]],
        [[4.4223e-03, 7.3521e-05, 7.6474e-05,  ..., 1.3300e-04,
          9.9941e-01, 5.9553e-03],
         [4.4223e-03, 7.3521e-05, 7.6474e-05,  ..., 1.3300e-04,
          1.9784e-04, 6.3357e-03],
         [9.8673e-01, 7.3521e-05, 7.6474e-05,  ..., 1.3300e-04,
          1.9784e-04, 9.8131e-01],
         [4.4223e-03, 9.9978e-01, 9.9977e-01,  ..., 9.9960e-01,
          1.9784e-04, 6.4021e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 562:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8677e-01, 1.1445e-03, 4.3520e-03,  ..., 4.2006e-04,
          5.4891e-04, 9.9908e-01],
         [7.5647e-03, 1.1445e-03, 4.3520e-03,  ..., 4.2006e-04,
          5.4891e-04, 3.0651e-04],
         [2.8328e-03, 1.1445e-03, 4.3520e-03,  ..., 9.9874e-01,
          9.9835e-01, 3.0651e-04],
         [2.8328e-03, 9.9657e-01, 9.8694e-01,  ..., 4.2006e-04,
          5.4891e-04, 3.0651e-04]],
        [[9.9950e-01, 2.0964e-03, 5.1982e-03,  ..., 3.0900e-04,
          1.8619e-04, 3.5691e-04],
         [1.6512e-04, 2.0964e-03, 5.1982e-03,  ..., 3.0900e-04,
          1.8619e-04, 3.5691e-04],
         [1.6512e-04, 2.0964e-03, 5.1982e-03,  ..., 9.9907e-01,
          9.9944e-01, 9.9893e-01],
         [1.6512e-04, 9.9371e-01, 9.8441e-01,  ..., 3.0900e-04,
          1.8619e-04, 3.5691e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:08,437 [Process: 0] Synchronize training processes
2024-08-18 15:23:08,437 [Process: 0] Evaluating...
2024-08-18 15:23:08,441 [Process: 0] EPOCH 562:
2024-08-18 15:23:08,443 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:09,563 [Process: 0] Synchronize training processes
2024-08-18 15:23:09,563 [Process: 0] Evaluating...
2024-08-18 15:23:09,565 [Process: 0] EPOCH 563:
2024-08-18 15:23:09,567 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3924e-03, 2.1226e-05, 9.3795e-01,  ..., 5.6001e-04,
          1.5287e-04, 1.0139e-03],
         [1.3924e-03, 2.1226e-05, 1.1668e-02,  ..., 5.6001e-04,
          1.5287e-04, 1.0139e-03],
         [9.9582e-01, 2.1226e-05, 1.1668e-02,  ..., 9.9832e-01,
          1.5287e-04, 9.9696e-01],
         [1.3924e-03, 9.9994e-01, 3.8715e-02,  ..., 5.6001e-04,
          9.9954e-01, 1.0139e-03]],
        [[7.5842e-04, 6.0596e-06, 1.5108e-05,  ..., 9.0246e-05,
          9.9881e-01, 1.5505e-03],
         [7.5842e-04, 6.0596e-06, 1.5108e-05,  ..., 9.0246e-05,
          3.9126e-04, 1.5505e-03],
         [9.9772e-01, 6.0596e-06, 1.5108e-05,  ..., 9.0246e-05,
          3.9126e-04, 9.9535e-01],
         [7.5842e-04, 9.9998e-01, 9.9995e-01,  ..., 9.9973e-01,
          4.0996e-04, 1.5505e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 563:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9873e-01, 2.6018e-03, 1.3515e-03,  ..., 1.8124e-03,
          6.2972e-04, 9.9250e-01],
         [4.2453e-04, 2.6018e-03, 1.3515e-03,  ..., 1.8124e-03,
          6.2972e-04, 2.3795e-03],
         [4.2453e-04, 2.6018e-03, 1.3515e-03,  ..., 9.9456e-01,
          9.9811e-01, 2.6206e-03],
         [4.2453e-04, 9.9219e-01, 9.9595e-01,  ..., 1.8124e-03,
          6.2972e-04, 2.5038e-03]],
        [[9.9839e-01, 3.7306e-03, 3.9178e-03,  ..., 4.2300e-04,
          1.8899e-03, 1.2633e-03],
         [5.3508e-04, 3.7306e-03, 6.2026e-03,  ..., 4.2300e-04,
          1.8899e-03, 1.2633e-03],
         [5.3508e-04, 3.7306e-03, 3.9178e-03,  ..., 9.9873e-01,
          9.9433e-01, 9.9621e-01],
         [5.3508e-04, 9.8881e-01, 9.8596e-01,  ..., 4.2300e-04,
          1.8899e-03, 1.2633e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.2646e-03, 4.3212e-06, 9.3630e-01,  ..., 2.6076e-03,
          3.5712e-05, 2.3028e-03],
         [5.4449e-03, 4.3212e-06, 2.6268e-02,  ..., 2.6076e-03,
          3.5712e-05, 2.3028e-03],
         [9.8398e-01, 4.3212e-06, 1.3812e-02,  ..., 9.9218e-01,
          3.5712e-05, 9.9309e-01],
         [5.3114e-03, 9.9999e-01, 2.3620e-02,  ..., 2.6076e-03,
          9.9989e-01, 2.3028e-03]],
        [[2.1919e-03, 1.8379e-04, 7.3611e-04,  ..., 7.8361e-05,
          9.9986e-01, 7.0828e-03],
         [2.1919e-03, 1.8379e-04, 7.3611e-04,  ..., 7.8361e-05,
          4.5918e-05, 5.3167e-03],
         [9.9342e-01, 1.8379e-04, 7.3611e-04,  ..., 7.8361e-05,
          4.5918e-05, 9.8228e-01],
         [2.1919e-03, 9.9945e-01, 9.9779e-01,  ..., 9.9976e-01,
          4.5918e-05, 5.3167e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 564:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6928e-01, 2.4590e-03, 1.9095e-03,  ..., 6.5546e-04,
          4.5428e-04, 9.9950e-01],
         [9.1739e-03, 2.4590e-03, 1.9095e-03,  ..., 6.5546e-04,
          4.5428e-04, 1.6754e-04],
         [9.4496e-03, 2.4590e-03, 1.9095e-03,  ..., 9.9803e-01,
          9.9864e-01, 1.6754e-04],
         [1.2095e-02, 9.9262e-01, 9.9427e-01,  ..., 6.5546e-04,
          4.5428e-04, 1.6754e-04]],
        [[9.9887e-01, 6.4817e-03, 1.1291e-03,  ..., 5.2964e-04,
          1.7663e-04, 6.0313e-04],
         [3.7774e-04, 6.4817e-03, 1.1291e-03,  ..., 5.2964e-04,
          1.7663e-04, 7.8748e-04],
         [3.7774e-04, 8.5041e-03, 1.1291e-03,  ..., 9.9841e-01,
          9.9947e-01, 9.9801e-01],
         [3.7774e-04, 9.7853e-01, 9.9661e-01,  ..., 5.2964e-04,
          1.7663e-04, 6.0313e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:10,696 [Process: 0] Synchronize training processes
2024-08-18 15:23:10,697 [Process: 0] Evaluating...
2024-08-18 15:23:10,699 [Process: 0] EPOCH 564:
2024-08-18 15:23:10,700 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9036e-03, 2.0678e-05, 8.1011e-01,  ..., 6.2791e-03,
          6.6666e-04, 1.6006e-03],
         [1.9036e-03, 2.0678e-05, 8.0577e-02,  ..., 6.2791e-03,
          6.6666e-04, 1.6006e-03],
         [9.9429e-01, 2.0678e-05, 3.9826e-02,  ..., 9.8008e-01,
          6.6666e-04, 9.9520e-01],
         [1.9036e-03, 9.9994e-01, 6.9482e-02,  ..., 7.3669e-03,
          9.9800e-01, 1.6006e-03]],
        [[2.0969e-03, 5.3292e-05, 2.6195e-05,  ..., 6.8410e-05,
          9.9855e-01, 4.6977e-03],
         [2.0969e-03, 5.3292e-05, 2.6195e-05,  ..., 6.8410e-05,
          4.8387e-04, 4.6977e-03],
         [9.9371e-01, 5.3292e-05, 2.6195e-05,  ..., 6.8410e-05,
          4.8387e-04, 9.8584e-01],
         [2.0969e-03, 9.9984e-01, 9.9992e-01,  ..., 9.9979e-01,
          4.8387e-04, 4.7635e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 565:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9855e-01, 3.3154e-03, 4.9893e-03,  ..., 1.1084e-04,
          6.4753e-05, 9.9822e-01],
         [4.8344e-04, 3.3154e-03, 4.9893e-03,  ..., 1.1084e-04,
          6.4753e-05, 5.4888e-04],
         [4.8344e-04, 3.8089e-03, 6.1038e-03,  ..., 9.9967e-01,
          9.9981e-01, 6.7864e-04],
         [4.8344e-04, 9.8956e-01, 9.8392e-01,  ..., 1.1084e-04,
          6.4753e-05, 5.4888e-04]],
        [[9.9880e-01, 6.3018e-04, 1.9368e-03,  ..., 7.1523e-04,
          2.5155e-04, 1.0240e-04],
         [3.9839e-04, 6.3018e-04, 1.9368e-03,  ..., 7.1523e-04,
          2.5155e-04, 1.0240e-04],
         [3.9839e-04, 6.3018e-04, 1.9368e-03,  ..., 9.9785e-01,
          9.9925e-01, 9.9969e-01],
         [3.9839e-04, 9.9811e-01, 9.9419e-01,  ..., 7.1523e-04,
          2.5155e-04, 1.0240e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7786e-03, 6.6306e-05, 3.1404e-01,  ..., 2.6887e-03,
          1.7955e-04, 1.8224e-03],
         [3.5375e-03, 6.6306e-05, 2.0411e-01,  ..., 2.6887e-03,
          1.7955e-04, 1.8224e-03],
         [9.8915e-01, 6.6306e-05, 6.6818e-02,  ..., 9.9193e-01,
          1.7955e-04, 9.9453e-01],
         [3.5375e-03, 9.9980e-01, 4.1503e-01,  ..., 2.6887e-03,
          9.9946e-01, 1.8224e-03]],
        [[2.3253e-03, 1.4951e-04, 2.1591e-05,  ..., 3.1319e-05,
          9.9959e-01, 2.7521e-03],
         [2.3253e-03, 1.4951e-04, 2.1591e-05,  ..., 3.1319e-05,
          1.3784e-04, 2.7521e-03],
         [9.9302e-01, 1.4951e-04, 2.1591e-05,  ..., 3.1319e-05,
          1.3784e-04, 9.9174e-01],
         [2.3253e-03, 9.9955e-01, 9.9994e-01,  ..., 9.9991e-01,
          1.3784e-04, 2.7521e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 566:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:11,829 [Process: 0] Synchronize training processes
2024-08-18 15:23:11,830 [Process: 0] Evaluating...
2024-08-18 15:23:11,831 [Process: 0] EPOCH 565:
2024-08-18 15:23:11,833 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:12,958 [Process: 0] Synchronize training processes
2024-08-18 15:23:12,958 [Process: 0] Evaluating...
2024-08-18 15:23:12,960 [Process: 0] EPOCH 566:
2024-08-18 15:23:12,962 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9790e-01, 2.2685e-03, 4.1984e-03,  ..., 7.6229e-04,
          1.7058e-03, 9.9939e-01],
         [7.0848e-04, 2.2685e-03, 4.1984e-03,  ..., 7.6229e-04,
          1.7058e-03, 2.0187e-04],
         [6.9509e-04, 2.2685e-03, 4.9406e-03,  ..., 9.9771e-01,
          9.9488e-01, 2.0187e-04],
         [6.9509e-04, 9.9319e-01, 9.8666e-01,  ..., 7.6229e-04,
          1.7058e-03, 2.0187e-04]],
        [[9.7841e-01, 4.4821e-03, 1.5941e-03,  ..., 1.8706e-03,
          2.3284e-04, 9.1452e-04],
         [1.5183e-02, 4.4821e-03, 1.5941e-03,  ..., 1.9338e-03,
          2.3284e-04, 9.1452e-04],
         [3.2054e-03, 4.4821e-03, 1.5941e-03,  ..., 9.9432e-01,
          9.9930e-01, 9.9726e-01],
         [3.2054e-03, 9.8655e-01, 9.9522e-01,  ..., 1.8706e-03,
          2.3284e-04, 9.1452e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6801e-03, 5.2156e-06, 3.5135e-01,  ..., 3.6972e-03,
          2.2960e-04, 1.3147e-03],
         [1.6801e-03, 5.2156e-06, 3.5039e-01,  ..., 3.6972e-03,
          2.2960e-04, 1.3147e-03],
         [9.9496e-01, 5.2156e-06, 5.7601e-02,  ..., 9.8891e-01,
          2.2960e-04, 9.9606e-01],
         [1.6801e-03, 9.9998e-01, 2.4066e-01,  ..., 3.6972e-03,
          9.9931e-01, 1.3147e-03]],
        [[1.0230e-03, 2.2372e-04, 2.9583e-04,  ..., 3.8655e-04,
          9.9992e-01, 1.5296e-03],
         [1.0230e-03, 2.2372e-04, 2.9583e-04,  ..., 3.8655e-04,
          2.7364e-05, 1.5296e-03],
         [9.9693e-01, 2.2372e-04, 2.9583e-04,  ..., 3.8655e-04,
          2.7364e-05, 9.9541e-01],
         [1.0230e-03, 9.9933e-01, 9.9911e-01,  ..., 9.9884e-01,
          2.7364e-05, 1.5296e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 567:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5696e-01, 2.4221e-03, 7.1094e-03,  ..., 1.4772e-04,
          6.0573e-04, 9.9934e-01],
         [1.9576e-02, 2.4221e-03, 7.1094e-03,  ..., 1.4772e-04,
          6.9644e-04, 2.1843e-04],
         [1.3686e-02, 2.4221e-03, 1.1590e-02,  ..., 9.9956e-01,
          9.9809e-01, 2.1843e-04],
         [9.7770e-03, 9.9273e-01, 9.7419e-01,  ..., 1.4772e-04,
          6.0573e-04, 2.1843e-04]],
        [[9.9954e-01, 1.9112e-03, 1.6753e-03,  ..., 8.3256e-05,
          9.7875e-04, 6.6736e-04],
         [1.5483e-04, 1.9112e-03, 1.6753e-03,  ..., 8.3256e-05,
          9.7875e-04, 6.6736e-04],
         [1.5483e-04, 1.9251e-03, 1.6753e-03,  ..., 9.9975e-01,
          9.9706e-01, 9.9800e-01],
         [1.5483e-04, 9.9425e-01, 9.9497e-01,  ..., 8.3256e-05,
          9.7875e-04, 6.6736e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.9868e-03, 1.1442e-05, 4.1583e-02,  ..., 2.3218e-03,
          8.0292e-05, 2.5946e-03],
         [4.9868e-03, 1.1442e-05, 4.8595e-01,  ..., 2.3218e-03,
          8.0292e-05, 2.5946e-03],
         [9.8504e-01, 1.1442e-05, 4.1583e-02,  ..., 9.9303e-01,
          8.0292e-05, 9.9222e-01],
         [4.9868e-03, 9.9997e-01, 4.3088e-01,  ..., 2.3218e-03,
          9.9976e-01, 2.5946e-03]],
        [[2.9850e-03, 2.0684e-04, 1.3160e-04,  ..., 1.2903e-05,
          9.9474e-01, 1.5368e-03],
         [2.9850e-03, 2.0684e-04, 1.3160e-04,  ..., 1.2903e-05,
          1.9193e-03, 1.5368e-03],
         [9.9105e-01, 2.0684e-04, 1.3160e-04,  ..., 1.2903e-05,
          1.6685e-03, 9.9539e-01],
         [2.9850e-03, 9.9938e-01, 9.9961e-01,  ..., 9.9996e-01,
          1.6685e-03, 1.5368e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:14,083 [Process: 0] Synchronize training processes
2024-08-18 15:23:14,083 [Process: 0] Evaluating...
2024-08-18 15:23:14,085 [Process: 0] EPOCH 567:
2024-08-18 15:23:14,086 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:15,212 [Process: 0] Synchronize training processes
2024-08-18 15:23:15,213 [Process: 0] Evaluating...
2024-08-18 15:23:15,214 [Process: 0] EPOCH 568:
2024-08-18 15:23:15,216 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 568:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9655e-01, 6.1119e-03, 2.4575e-03,  ..., 1.2105e-03,
          2.1614e-04, 9.9890e-01],
         [1.1508e-03, 6.1119e-03, 2.4575e-03,  ..., 1.2105e-03,
          2.1614e-04, 3.6530e-04],
         [1.1508e-03, 6.6239e-03, 2.4575e-03,  ..., 9.9637e-01,
          9.9935e-01, 3.6530e-04],
         [1.1508e-03, 9.8115e-01, 9.9263e-01,  ..., 1.2105e-03,
          2.1614e-04, 3.6530e-04]],
        [[9.9792e-01, 3.4601e-03, 2.6746e-03,  ..., 3.1873e-04,
          2.4637e-04, 1.7714e-04],
         [6.9245e-04, 3.4601e-03, 2.6746e-03,  ..., 3.1873e-04,
          2.9779e-04, 1.7714e-04],
         [6.9245e-04, 3.7740e-03, 2.6746e-03,  ..., 9.9904e-01,
          9.9921e-01, 9.9947e-01],
         [6.9245e-04, 9.8931e-01, 9.9198e-01,  ..., 3.1873e-04,
          2.4637e-04, 1.7714e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1608e-03, 4.4334e-06, 6.1497e-01,  ..., 1.0024e-03,
          7.3903e-04, 2.6281e-03],
         [2.1608e-03, 4.4334e-06, 9.7091e-02,  ..., 1.0024e-03,
          7.3903e-04, 2.6281e-03],
         [9.9352e-01, 4.4334e-06, 7.6370e-02,  ..., 9.9699e-01,
          7.3903e-04, 9.9212e-01],
         [2.1608e-03, 9.9999e-01, 2.1157e-01,  ..., 1.0024e-03,
          9.9778e-01, 2.6281e-03]],
        [[4.7789e-03, 2.7610e-05, 8.4279e-05,  ..., 2.5351e-04,
          9.9977e-01, 6.0994e-03],
         [4.7789e-03, 2.7610e-05, 8.4279e-05,  ..., 2.5351e-04,
          7.6536e-05, 6.0994e-03],
         [9.8494e-01, 2.7610e-05, 8.4279e-05,  ..., 2.5351e-04,
          7.6536e-05, 9.8077e-01],
         [5.5023e-03, 9.9992e-01, 9.9975e-01,  ..., 9.9924e-01,
          7.6536e-05, 7.0359e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 569:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5770e-01, 6.8518e-03, 3.5209e-03,  ..., 5.8302e-04,
          1.8228e-04, 9.9723e-01],
         [2.4188e-02, 6.8518e-03, 3.5209e-03,  ..., 5.8302e-04,
          1.8228e-04, 8.7716e-04],
         [7.6267e-03, 1.0391e-02, 3.5209e-03,  ..., 9.9825e-01,
          9.9945e-01, 1.0130e-03],
         [1.0482e-02, 9.7591e-01, 9.8944e-01,  ..., 5.8302e-04,
          1.8228e-04, 8.7716e-04]],
        [[9.9653e-01, 1.7572e-03, 5.7702e-03,  ..., 6.0085e-04,
          2.2892e-03, 8.9184e-05],
         [1.1567e-03, 1.7572e-03, 5.7702e-03,  ..., 6.0085e-04,
          4.6620e-03, 8.9184e-05],
         [1.1567e-03, 1.7572e-03, 6.7103e-03,  ..., 9.9820e-01,
          9.9076e-01, 9.9973e-01],
         [1.1567e-03, 9.9473e-01, 9.8175e-01,  ..., 6.0085e-04,
          2.2892e-03, 8.9184e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:16,330 [Process: 0] Synchronize training processes
2024-08-18 15:23:16,331 [Process: 0] Evaluating...
2024-08-18 15:23:16,332 [Process: 0] EPOCH 569:
2024-08-18 15:23:16,334 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:17,449 [Process: 0] Synchronize training processes
2024-08-18 15:23:17,449 [Process: 0] Evaluating...
2024-08-18 15:23:17,451 [Process: 0] EPOCH 570:
2024-08-18 15:23:17,453 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0531e-03, 8.4507e-06, 1.0159e-01,  ..., 2.9968e-03,
          1.7828e-04, 4.9295e-03],
         [1.0531e-03, 8.4507e-06, 1.3325e-01,  ..., 2.9968e-03,
          1.7828e-04, 6.8616e-03],
         [9.9684e-01, 8.4507e-06, 1.0573e-01,  ..., 9.9101e-01,
          1.7828e-04, 9.8328e-01],
         [1.0531e-03, 9.9997e-01, 6.5943e-01,  ..., 2.9968e-03,
          9.9947e-01, 4.9295e-03]],
        [[3.9533e-03, 5.2609e-05, 5.2863e-05,  ..., 1.0227e-03,
          9.9977e-01, 8.6548e-04],
         [3.9533e-03, 5.2609e-05, 5.2863e-05,  ..., 1.0227e-03,
          7.6347e-05, 8.6548e-04],
         [9.8810e-01, 5.2609e-05, 5.2863e-05,  ..., 1.0227e-03,
          7.6347e-05, 9.9740e-01],
         [3.9926e-03, 9.9984e-01, 9.9984e-01,  ..., 9.9693e-01,
          7.6347e-05, 8.6548e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 570:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.3685e-01, 3.5905e-03, 2.4719e-03,  ..., 3.6580e-05,
          2.1549e-03, 9.9556e-01],
         [1.8282e-02, 3.5905e-03, 2.4719e-03,  ..., 3.6580e-05,
          4.2827e-03, 2.1626e-03],
         [3.3422e-02, 3.5905e-03, 2.4719e-03,  ..., 9.9989e-01,
          9.9141e-01, 1.1376e-03],
         [1.1446e-02, 9.8923e-01, 9.9258e-01,  ..., 3.6580e-05,
          2.1549e-03, 1.1376e-03]],
        [[9.9983e-01, 1.4124e-03, 3.6689e-03,  ..., 1.9962e-04,
          3.9834e-05, 1.5028e-04],
         [5.3861e-05, 1.4124e-03, 3.6689e-03,  ..., 1.9962e-04,
          3.9834e-05, 1.5028e-04],
         [5.8375e-05, 1.4124e-03, 4.2984e-03,  ..., 9.9940e-01,
          9.9988e-01, 9.9955e-01],
         [5.3861e-05, 9.9576e-01, 9.8836e-01,  ..., 1.9962e-04,
          3.9834e-05, 1.5028e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0100e-03, 5.7883e-05, 1.2405e-02,  ..., 1.8648e-03,
          7.2474e-05, 2.1569e-03],
         [4.3945e-03, 5.7883e-05, 2.2331e-02,  ..., 1.8648e-03,
          7.2474e-05, 2.1569e-03],
         [9.8759e-01, 5.7883e-05, 1.2405e-02,  ..., 9.9441e-01,
          7.2474e-05, 9.9353e-01],
         [4.0100e-03, 9.9983e-01, 9.5286e-01,  ..., 1.8648e-03,
          9.9978e-01, 2.1569e-03]],
        [[3.7678e-03, 1.1644e-04, 1.4924e-04,  ..., 3.8502e-05,
          9.9912e-01, 2.2522e-03],
         [3.7678e-03, 1.1644e-04, 1.4924e-04,  ..., 3.8502e-05,
          2.9220e-04, 2.2522e-03],
         [9.8870e-01, 1.1644e-04, 1.4924e-04,  ..., 3.8502e-05,
          2.9220e-04, 9.9324e-01],
         [3.7678e-03, 9.9965e-01, 9.9955e-01,  ..., 9.9988e-01,
          2.9220e-04, 2.2522e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 571:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9315e-01, 1.1487e-03, 4.6964e-03,  ..., 9.4741e-04,
          3.5006e-05, 9.9980e-01],
         [2.2841e-03, 1.1487e-03, 4.6964e-03,  ..., 9.4741e-04,
          3.5006e-05, 6.7431e-05],
         [2.2841e-03, 1.1487e-03, 6.7660e-03,  ..., 9.9716e-01,
          9.9989e-01, 6.7431e-05],
         [2.2841e-03, 9.9655e-01, 9.8384e-01,  ..., 9.4741e-04,
          3.5006e-05, 6.7431e-05]],
        [[9.8264e-01, 9.1734e-03, 1.0594e-03,  ..., 1.7351e-03,
          1.3278e-03, 3.1540e-04],
         [3.7717e-03, 9.1734e-03, 1.0594e-03,  ..., 2.5095e-03,
          2.0498e-03, 3.1540e-04],
         [9.8173e-03, 1.1584e-02, 1.0594e-03,  ..., 9.9402e-01,
          9.9529e-01, 9.9905e-01],
         [3.7717e-03, 9.7007e-01, 9.9682e-01,  ..., 1.7351e-03,
          1.3278e-03, 3.1540e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:18,580 [Process: 0] Synchronize training processes
2024-08-18 15:23:18,580 [Process: 0] Evaluating...
2024-08-18 15:23:18,582 [Process: 0] EPOCH 571:
2024-08-18 15:23:18,584 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:19,711 [Process: 0] Synchronize training processes
2024-08-18 15:23:19,711 [Process: 0] Evaluating...
2024-08-18 15:23:19,716 [Process: 0] EPOCH 572:
2024-08-18 15:23:19,717 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5701e-03, 2.3920e-05, 2.5319e-02,  ..., 9.3317e-04,
          1.9488e-04, 4.4735e-03],
         [2.5701e-03, 2.3920e-05, 5.5022e-02,  ..., 9.3317e-04,
          1.9488e-04, 5.1655e-03],
         [9.9229e-01, 2.3920e-05, 2.5319e-02,  ..., 9.9720e-01,
          1.9488e-04, 9.8589e-01],
         [2.5701e-03, 9.9993e-01, 8.9434e-01,  ..., 9.3317e-04,
          9.9942e-01, 4.4735e-03]],
        [[1.2988e-03, 2.6103e-04, 2.1671e-05,  ..., 1.1027e-05,
          9.9765e-01, 5.8885e-04],
         [1.2988e-03, 2.6103e-04, 2.1671e-05,  ..., 1.1027e-05,
          7.8240e-04, 5.8885e-04],
         [9.9610e-01, 2.6103e-04, 2.1671e-05,  ..., 1.1027e-05,
          7.8240e-04, 9.9823e-01],
         [1.2988e-03, 9.9922e-01, 9.9994e-01,  ..., 9.9997e-01,
          7.8240e-04, 5.8885e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 572:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9147e-01, 7.5048e-04, 1.3922e-03,  ..., 1.7259e-04,
          6.3307e-05, 9.9966e-01],
         [2.6850e-03, 7.5048e-04, 1.3922e-03,  ..., 1.7259e-04,
          6.3307e-05, 1.1249e-04],
         [2.6850e-03, 7.5048e-04, 1.3922e-03,  ..., 9.9948e-01,
          9.9981e-01, 1.1249e-04],
         [3.1577e-03, 9.9775e-01, 9.9582e-01,  ..., 1.7259e-04,
          6.3307e-05, 1.1249e-04]],
        [[9.9814e-01, 3.3806e-03, 3.9492e-03,  ..., 2.1106e-04,
          1.4352e-03, 2.4034e-05],
         [6.1955e-04, 3.3806e-03, 3.9492e-03,  ..., 2.1106e-04,
          1.4352e-03, 2.4034e-05],
         [6.1955e-04, 3.3806e-03, 3.9492e-03,  ..., 9.9937e-01,
          9.9569e-01, 9.9993e-01],
         [6.1955e-04, 9.8986e-01, 9.8815e-01,  ..., 2.1106e-04,
          1.4352e-03, 2.4034e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4712e-03, 2.4248e-05, 4.1664e-02,  ..., 2.6212e-03,
          3.1641e-04, 5.1020e-03],
         [1.4712e-03, 2.4248e-05, 1.2829e-01,  ..., 2.6212e-03,
          3.1641e-04, 6.1071e-03],
         [9.9559e-01, 2.4248e-05, 5.9433e-02,  ..., 9.9214e-01,
          3.1641e-04, 9.8369e-01],
         [1.4712e-03, 9.9993e-01, 7.7061e-01,  ..., 2.6212e-03,
          9.9905e-01, 5.1020e-03]],
        [[9.7519e-04, 4.5416e-05, 4.9772e-05,  ..., 2.1703e-04,
          9.9928e-01, 2.0172e-02],
         [9.7519e-04, 4.5416e-05, 4.9772e-05,  ..., 2.1703e-04,
          2.4062e-04, 2.5395e-02],
         [9.9707e-01, 4.5416e-05, 4.9772e-05,  ..., 2.1703e-04,
          2.4062e-04, 9.3298e-01],
         [9.7519e-04, 9.9986e-01, 9.9985e-01,  ..., 9.9935e-01,
          2.4062e-04, 2.1455e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 573:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:23:20,846 [Process: 0] Synchronize training processes
2024-08-18 15:23:20,846 [Process: 0] Evaluating...
2024-08-18 15:23:20,848 [Process: 0] EPOCH 573:
2024-08-18 15:23:20,850 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9547e-01, 4.2284e-03, 2.2027e-03,  ..., 2.5873e-04,
          2.3485e-04, 9.9501e-01],
         [1.4734e-03, 4.2284e-03, 2.2027e-03,  ..., 2.5873e-04,
          2.3485e-04, 1.4886e-03],
         [1.4734e-03, 4.7870e-03, 2.2027e-03,  ..., 9.9922e-01,
          9.9930e-01, 2.0133e-03],
         [1.5815e-03, 9.8676e-01, 9.9339e-01,  ..., 2.5873e-04,
          2.3485e-04, 1.4886e-03]],
        [[9.9884e-01, 7.6190e-04, 2.7500e-03,  ..., 1.7002e-04,
          8.8073e-05, 6.4353e-03],
         [3.8690e-04, 7.6190e-04, 2.7500e-03,  ..., 1.7002e-04,
          8.8073e-05, 8.7209e-03],
         [3.8690e-04, 7.6190e-04, 2.8834e-03,  ..., 9.9949e-01,
          9.9974e-01, 9.7966e-01],
         [3.8690e-04, 9.9771e-01, 9.9162e-01,  ..., 1.7002e-04,
          8.8073e-05, 5.1837e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5723e-03, 9.4425e-06, 1.9849e-01,  ..., 1.5392e-03,
          1.2935e-03, 1.4326e-03],
         [1.5723e-03, 9.4425e-06, 1.3919e-01,  ..., 1.5392e-03,
          1.2935e-03, 1.4326e-03],
         [9.9528e-01, 9.4425e-06, 1.7054e-01,  ..., 9.9538e-01,
          1.2935e-03, 9.9570e-01],
         [1.5723e-03, 9.9997e-01, 4.9178e-01,  ..., 1.5392e-03,
          9.9612e-01, 1.4326e-03]],
        [[4.6372e-03, 2.9212e-05, 7.6886e-05,  ..., 2.4840e-04,
          9.9981e-01, 2.7568e-03],
         [4.7117e-03, 2.9212e-05, 7.6886e-05,  ..., 2.4840e-04,
          6.2139e-05, 2.7568e-03],
         [9.8601e-01, 2.9212e-05, 7.6886e-05,  ..., 2.4840e-04,
          6.2139e-05, 9.9173e-01],
         [4.6372e-03, 9.9991e-01, 9.9977e-01,  ..., 9.9925e-01,
          6.2139e-05, 2.7568e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 574:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9174e-01, 1.1975e-03, 4.2433e-03,  ..., 1.6831e-04,
          2.1576e-04, 9.9901e-01],
         [2.7833e-03, 1.1975e-03, 4.2433e-03,  ..., 1.6831e-04,
          2.1576e-04, 3.3061e-04],
         [2.7399e-03, 1.1975e-03, 4.2433e-03,  ..., 9.9950e-01,
          9.9935e-01, 3.3061e-04],
         [2.7399e-03, 9.9641e-01, 9.8727e-01,  ..., 1.6831e-04,
          2.1576e-04, 3.3061e-04]],
        [[9.9733e-01, 1.2436e-03, 3.4958e-03,  ..., 6.2477e-04,
          2.5681e-04, 9.5850e-04],
         [6.8294e-04, 1.2436e-03, 3.4958e-03,  ..., 6.2477e-04,
          2.5681e-04, 1.2278e-03],
         [1.3082e-03, 1.2436e-03, 3.4958e-03,  ..., 9.9813e-01,
          9.9923e-01, 9.9686e-01],
         [6.8294e-04, 9.9627e-01, 9.8951e-01,  ..., 6.2477e-04,
          2.5681e-04, 9.5850e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9883e-03, 6.0492e-06, 5.6000e-02,  ..., 3.1129e-03,
          2.8728e-04, 1.9499e-03],
         [9.1565e-03, 6.0492e-06, 5.4023e-02,  ..., 3.1129e-03,
          2.8728e-04, 1.9499e-03],
         [9.7509e-01, 6.0492e-06, 4.2382e-02,  ..., 9.9066e-01,
          2.8728e-04, 9.9415e-01],
         [8.7661e-03, 9.9998e-01, 8.4759e-01,  ..., 3.1129e-03,
          9.9914e-01, 1.9499e-03]],
        [[9.9372e-04, 1.0253e-04, 4.7827e-04,  ..., 4.5428e-05,
          9.9900e-01, 3.1659e-03],
         [9.9372e-04, 1.0253e-04, 4.7827e-04,  ..., 4.5428e-05,
          3.3246e-04, 3.1747e-03],
         [9.9702e-01, 1.0253e-04, 4.7827e-04,  ..., 4.5428e-05,
          3.3246e-04, 9.9049e-01],
         [9.9372e-04, 9.9969e-01, 9.9857e-01,  ..., 9.9986e-01,
          3.3246e-04, 3.1659e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 575:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:21,971 [Process: 0] Synchronize training processes
2024-08-18 15:23:21,971 [Process: 0] Evaluating...
2024-08-18 15:23:21,973 [Process: 0] EPOCH 574:
2024-08-18 15:23:21,975 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:23,097 [Process: 0] Synchronize training processes
2024-08-18 15:23:23,097 [Process: 0] Evaluating...
2024-08-18 15:23:23,099 [Process: 0] EPOCH 575:
2024-08-18 15:23:23,101 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9544e-01, 4.9930e-03, 5.5670e-03,  ..., 1.6170e-04,
          4.3718e-04, 9.9878e-01],
         [1.5187e-03, 4.9930e-03, 5.5670e-03,  ..., 1.6170e-04,
          4.3718e-04, 4.0509e-04],
         [1.5187e-03, 4.9930e-03, 7.9300e-03,  ..., 9.9951e-01,
          9.9869e-01, 4.0509e-04],
         [1.5187e-03, 9.8502e-01, 9.8094e-01,  ..., 1.6170e-04,
          4.3718e-04, 4.0509e-04]],
        [[9.9704e-01, 2.5328e-03, 2.3912e-03,  ..., 7.3036e-04,
          5.4090e-04, 3.8176e-04],
         [9.8688e-04, 2.5328e-03, 2.3912e-03,  ..., 1.3059e-03,
          6.8974e-04, 3.8176e-04],
         [9.8688e-04, 2.5328e-03, 2.3912e-03,  ..., 9.9723e-01,
          9.9823e-01, 9.9885e-01],
         [9.8688e-04, 9.9240e-01, 9.9283e-01,  ..., 7.3036e-04,
          5.4090e-04, 3.8176e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6444e-03, 4.1754e-05, 3.1460e-02,  ..., 3.2604e-03,
          1.2352e-04, 1.8931e-03],
         [3.6444e-03, 4.1754e-05, 2.7945e-02,  ..., 3.5454e-03,
          1.2352e-04, 1.8931e-03],
         [9.8897e-01, 4.1754e-05, 2.8218e-02,  ..., 9.8993e-01,
          1.2352e-04, 9.9432e-01],
         [3.7382e-03, 9.9987e-01, 9.1238e-01,  ..., 3.2604e-03,
          9.9963e-01, 1.8931e-03]],
        [[5.2122e-03, 4.1691e-05, 1.4232e-05,  ..., 4.1209e-05,
          9.9981e-01, 5.1366e-03],
         [5.7153e-03, 4.1691e-05, 1.4232e-05,  ..., 4.1209e-05,
          6.4159e-05, 5.1366e-03],
         [9.8386e-01, 4.1691e-05, 1.4232e-05,  ..., 4.1209e-05,
          6.4159e-05, 9.8459e-01],
         [5.2122e-03, 9.9987e-01, 9.9996e-01,  ..., 9.9988e-01,
          6.4159e-05, 5.1366e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 576:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9587e-01, 2.2473e-03, 2.4655e-03,  ..., 1.7960e-05,
          1.2900e-04, 9.9980e-01],
         [1.4037e-03, 2.2473e-03, 2.4655e-03,  ..., 1.7960e-05,
          1.2900e-04, 6.6872e-05],
         [1.3634e-03, 2.2473e-03, 2.4655e-03,  ..., 9.9995e-01,
          9.9961e-01, 6.6872e-05],
         [1.3634e-03, 9.9326e-01, 9.9260e-01,  ..., 1.7960e-05,
          1.2900e-04, 6.6872e-05]],
        [[9.8273e-01, 5.3616e-03, 5.4381e-03,  ..., 1.1600e-04,
          2.2101e-04, 9.2776e-05],
         [4.8920e-03, 7.0048e-03, 5.4381e-03,  ..., 1.1600e-04,
          2.2101e-04, 9.2776e-05],
         [7.4896e-03, 6.1738e-03, 5.4381e-03,  ..., 9.9965e-01,
          9.9934e-01, 9.9972e-01],
         [4.8920e-03, 9.8146e-01, 9.8369e-01,  ..., 1.1600e-04,
          2.2101e-04, 9.2776e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.8426e-03, 6.6891e-05, 4.9862e-02,  ..., 2.8708e-03,
          1.7850e-03, 4.5508e-03],
         [9.3173e-03, 6.6891e-05, 9.5360e-02,  ..., 2.8746e-03,
          1.7850e-03, 5.5140e-03],
         [9.7467e-01, 6.6891e-05, 6.0359e-02,  ..., 9.9138e-01,
          1.7850e-03, 9.8538e-01],
         [9.1704e-03, 9.9980e-01, 7.9442e-01,  ..., 2.8708e-03,
          9.9464e-01, 4.5508e-03]],
        [[1.1500e-03, 7.9177e-06, 3.6696e-05,  ..., 9.2504e-05,
          9.9872e-01, 1.8350e-03],
         [1.1500e-03, 7.9177e-06, 3.6696e-05,  ..., 9.2504e-05,
          4.2729e-04, 1.8350e-03],
         [9.9655e-01, 7.9177e-06, 3.6696e-05,  ..., 9.2504e-05,
          4.2729e-04, 9.9450e-01],
         [1.1500e-03, 9.9998e-01, 9.9989e-01,  ..., 9.9972e-01,
          4.2729e-04, 1.8350e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:24,227 [Process: 0] Synchronize training processes
2024-08-18 15:23:24,227 [Process: 0] Evaluating...
2024-08-18 15:23:24,229 [Process: 0] EPOCH 576:
2024-08-18 15:23:24,231 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:25,371 [Process: 0] Synchronize training processes
2024-08-18 15:23:25,372 [Process: 0] Evaluating...
2024-08-18 15:23:25,373 [Process: 0] EPOCH 577:
2024-08-18 15:23:25,375 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 577:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9848e-01, 1.1031e-02, 3.9512e-03,  ..., 4.2948e-05,
          1.1107e-04, 9.9943e-01],
         [5.0808e-04, 1.5714e-02, 3.9512e-03,  ..., 4.2948e-05,
          1.1107e-04, 1.9030e-04],
         [5.0808e-04, 1.4855e-02, 3.9718e-03,  ..., 9.9987e-01,
          9.9967e-01, 1.9030e-04],
         [5.0808e-04, 9.5840e-01, 9.8813e-01,  ..., 4.2948e-05,
          1.1107e-04, 1.9030e-04]],
        [[9.9655e-01, 6.0333e-03, 2.1986e-03,  ..., 5.4143e-04,
          7.3970e-05, 5.6967e-05],
         [1.1494e-03, 6.6375e-03, 2.1986e-03,  ..., 5.4143e-04,
          7.3970e-05, 5.6967e-05],
         [1.1494e-03, 7.2813e-03, 2.1986e-03,  ..., 9.9838e-01,
          9.9978e-01, 9.9983e-01],
         [1.1494e-03, 9.8005e-01, 9.9340e-01,  ..., 5.4143e-04,
          7.3970e-05, 5.6967e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.6760e-03, 5.3111e-06, 2.4284e-03,  ..., 1.3026e-03,
          2.1316e-04, 4.3175e-03],
         [5.7464e-03, 5.3111e-06, 2.4284e-03,  ..., 1.3026e-03,
          2.1316e-04, 4.3372e-03],
         [9.8183e-01, 5.3111e-06, 2.4284e-03,  ..., 9.9609e-01,
          2.1316e-04, 9.8703e-01],
         [5.7464e-03, 9.9998e-01, 9.9271e-01,  ..., 1.3026e-03,
          9.9936e-01, 4.3175e-03]],
        [[2.5978e-03, 1.1812e-04, 7.6232e-05,  ..., 1.3267e-04,
          9.9854e-01, 4.3595e-03],
         [2.5978e-03, 1.1812e-04, 7.6232e-05,  ..., 1.3267e-04,
          4.8159e-04, 4.3595e-03],
         [9.9221e-01, 1.1812e-04, 7.6232e-05,  ..., 1.3267e-04,
          4.8159e-04, 9.8658e-01],
         [2.5978e-03, 9.9965e-01, 9.9977e-01,  ..., 9.9960e-01,
          4.9950e-04, 4.7057e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 578:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7510e-01, 2.3148e-03, 4.4213e-03,  ..., 5.1283e-04,
          6.2787e-05, 9.9466e-01],
         [6.6089e-03, 2.3148e-03, 4.4213e-03,  ..., 5.1283e-04,
          6.2787e-05, 1.6780e-03],
         [1.1678e-02, 2.3148e-03, 5.8042e-03,  ..., 9.9846e-01,
          9.9981e-01, 1.9816e-03],
         [6.6089e-03, 9.9306e-01, 9.8535e-01,  ..., 5.1283e-04,
          6.2787e-05, 1.6780e-03]],
        [[9.9913e-01, 3.3843e-03, 3.5278e-03,  ..., 1.3614e-04,
          2.5897e-04, 7.2225e-03],
         [2.3228e-04, 3.3843e-03, 3.5278e-03,  ..., 1.3614e-04,
          2.5897e-04, 1.9665e-02],
         [4.0338e-04, 3.3843e-03, 3.6536e-03,  ..., 9.9959e-01,
          9.9922e-01, 9.6589e-01],
         [2.3228e-04, 9.8985e-01, 9.8929e-01,  ..., 1.3614e-04,
          2.5897e-04, 7.2225e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:26,491 [Process: 0] Synchronize training processes
2024-08-18 15:23:26,491 [Process: 0] Evaluating...
2024-08-18 15:23:26,493 [Process: 0] EPOCH 578:
2024-08-18 15:23:26,495 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:27,624 [Process: 0] Synchronize training processes
2024-08-18 15:23:27,624 [Process: 0] Evaluating...
2024-08-18 15:23:27,626 [Process: 0] EPOCH 579:
2024-08-18 15:23:27,627 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0857e-02, 1.3145e-04, 7.3547e-04,  ..., 4.5058e-03,
          2.6457e-04, 1.1854e-03],
         [1.4664e-02, 1.3145e-04, 7.3547e-04,  ..., 4.5058e-03,
          2.6457e-04, 1.1854e-03],
         [9.5652e-01, 1.3145e-04, 7.3547e-04,  ..., 9.8573e-01,
          2.6457e-04, 9.9644e-01],
         [1.7956e-02, 9.9961e-01, 9.9779e-01,  ..., 5.2600e-03,
          9.9921e-01, 1.1854e-03]],
        [[3.2681e-03, 6.4314e-05, 3.7609e-04,  ..., 3.3284e-05,
          9.9867e-01, 2.2631e-03],
         [3.2681e-03, 6.4314e-05, 3.7609e-04,  ..., 3.3284e-05,
          4.4461e-04, 2.2631e-03],
         [9.9020e-01, 6.4314e-05, 3.7609e-04,  ..., 3.3284e-05,
          4.4461e-04, 9.9321e-01],
         [3.2681e-03, 9.9981e-01, 9.9887e-01,  ..., 9.9990e-01,
          4.4461e-04, 2.2631e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 579:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4250e-01, 5.6613e-03, 5.4674e-03,  ..., 9.8387e-05,
          2.9771e-04, 9.9535e-01],
         [3.3044e-02, 5.6613e-03, 5.4674e-03,  ..., 9.8387e-05,
          2.9771e-04, 1.3399e-03],
         [1.0660e-02, 5.6613e-03, 5.5796e-03,  ..., 9.9970e-01,
          9.9911e-01, 1.9700e-03],
         [1.3797e-02, 9.8302e-01, 9.8349e-01,  ..., 9.8387e-05,
          2.9771e-04, 1.3399e-03]],
        [[9.9523e-01, 2.8267e-03, 3.2137e-03,  ..., 2.8806e-04,
          3.7072e-03, 1.8018e-04],
         [1.2476e-03, 2.8267e-03, 3.2137e-03,  ..., 2.8806e-04,
          5.7086e-03, 1.8018e-04],
         [2.2718e-03, 2.8267e-03, 3.2137e-03,  ..., 9.9914e-01,
          9.8688e-01, 9.9946e-01],
         [1.2476e-03, 9.9152e-01, 9.9036e-01,  ..., 2.8806e-04,
          3.7072e-03, 1.8018e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9289e-03, 4.5720e-05, 9.8029e-05,  ..., 3.6222e-03,
          1.1562e-04, 2.4154e-03],
         [2.9289e-03, 4.5720e-05, 9.8029e-05,  ..., 3.6222e-03,
          1.1562e-04, 2.4154e-03],
         [9.9121e-01, 4.5720e-05, 9.8029e-05,  ..., 9.8913e-01,
          1.1562e-04, 9.9275e-01],
         [2.9289e-03, 9.9986e-01, 9.9971e-01,  ..., 3.6222e-03,
          9.9965e-01, 2.4154e-03]],
        [[1.2631e-03, 2.1938e-05, 2.3170e-05,  ..., 1.3492e-04,
          9.9512e-01, 4.3242e-03],
         [1.2631e-03, 2.1938e-05, 2.3170e-05,  ..., 1.3492e-04,
          1.6084e-03, 4.3242e-03],
         [9.9621e-01, 2.1938e-05, 2.3170e-05,  ..., 1.3492e-04,
          1.6084e-03, 9.8623e-01],
         [1.2631e-03, 9.9993e-01, 9.9993e-01,  ..., 9.9960e-01,
          1.6629e-03, 5.1205e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 580:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9901e-01, 1.1985e-03, 5.2458e-03,  ..., 7.5879e-05,
          7.2028e-05, 9.9979e-01],
         [3.2997e-04, 1.1985e-03, 5.2458e-03,  ..., 7.5879e-05,
          7.2028e-05, 7.0232e-05],
         [3.2997e-04, 1.1985e-03, 5.6062e-03,  ..., 9.9977e-01,
          9.9978e-01, 7.0232e-05],
         [3.2997e-04, 9.9640e-01, 9.8390e-01,  ..., 7.5879e-05,
          7.2028e-05, 7.0232e-05]],
        [[9.9667e-01, 1.9410e-03, 5.1285e-03,  ..., 2.5339e-04,
          1.1836e-04, 9.6697e-04],
         [1.1116e-03, 1.9410e-03, 5.1285e-03,  ..., 2.5339e-04,
          1.1836e-04, 9.6697e-04],
         [1.1116e-03, 1.9410e-03, 6.0476e-03,  ..., 9.9924e-01,
          9.9964e-01, 9.9710e-01],
         [1.1116e-03, 9.9418e-01, 9.8370e-01,  ..., 2.5339e-04,
          1.1836e-04, 9.6697e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:28,753 [Process: 0] Synchronize training processes
2024-08-18 15:23:28,754 [Process: 0] Evaluating...
2024-08-18 15:23:28,755 [Process: 0] EPOCH 580:
2024-08-18 15:23:28,757 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6192e-03, 3.7911e-06, 1.2700e-02,  ..., 1.4967e-03,
          1.0902e-03, 2.4448e-03],
         [2.6192e-03, 3.7911e-06, 8.2283e-03,  ..., 1.4967e-03,
          1.0902e-03, 2.4448e-03],
         [9.9214e-01, 3.7911e-06, 8.2283e-03,  ..., 9.9551e-01,
          1.0902e-03, 9.9267e-01],
         [2.6192e-03, 9.9999e-01, 9.7084e-01,  ..., 1.4967e-03,
          9.9673e-01, 2.4448e-03]],
        [[2.3217e-03, 3.4173e-05, 1.3852e-04,  ..., 2.3820e-04,
          9.9624e-01, 8.4596e-04],
         [2.3217e-03, 3.4173e-05, 1.3852e-04,  ..., 2.3820e-04,
          1.2520e-03, 8.4596e-04],
         [9.9304e-01, 3.4173e-05, 1.3852e-04,  ..., 2.3820e-04,
          1.2520e-03, 9.9746e-01],
         [2.3217e-03, 9.9990e-01, 9.9958e-01,  ..., 9.9929e-01,
          1.2520e-03, 8.4596e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 581:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8823e-01, 1.7874e-03, 8.8704e-03,  ..., 4.4262e-04,
          7.5317e-04, 9.9070e-01],
         [3.3608e-03, 1.7874e-03, 9.7274e-03,  ..., 5.4854e-04,
          7.5317e-04, 2.4467e-03],
         [4.3272e-03, 1.7874e-03, 1.2203e-02,  ..., 9.9857e-01,
          9.9774e-01, 4.4113e-03],
         [4.0841e-03, 9.9464e-01, 9.6920e-01,  ..., 4.4262e-04,
          7.5317e-04, 2.4467e-03]],
        [[9.7090e-01, 1.4863e-03, 1.9433e-03,  ..., 1.5989e-04,
          5.3816e-04, 1.6339e-03],
         [6.5341e-03, 1.4863e-03, 1.9433e-03,  ..., 1.5989e-04,
          5.3816e-04, 1.6339e-03],
         [1.6516e-02, 1.4863e-03, 1.9433e-03,  ..., 9.9952e-01,
          9.9839e-01, 9.9510e-01],
         [6.0461e-03, 9.9554e-01, 9.9417e-01,  ..., 1.5989e-04,
          5.3816e-04, 1.6339e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8450e-03, 3.2402e-05, 1.3052e-03,  ..., 1.0009e-02,
          7.1243e-04, 3.6266e-03],
         [3.8450e-03, 3.2402e-05, 1.3052e-03,  ..., 8.7855e-03,
          7.1243e-04, 3.6266e-03],
         [9.8847e-01, 3.2402e-05, 1.3052e-03,  ..., 9.6906e-01,
          7.1243e-04, 9.8912e-01],
         [3.8450e-03, 9.9990e-01, 9.9608e-01,  ..., 1.2149e-02,
          9.9786e-01, 3.6266e-03]],
        [[2.6537e-03, 7.5342e-05, 2.2296e-04,  ..., 8.7552e-05,
          9.9212e-01, 4.1813e-03],
         [2.6537e-03, 7.5342e-05, 2.2296e-04,  ..., 8.7552e-05,
          2.6263e-03, 4.1813e-03],
         [9.9204e-01, 7.5342e-05, 2.2296e-04,  ..., 8.7552e-05,
          2.6263e-03, 9.8746e-01],
         [2.6537e-03, 9.9977e-01, 9.9933e-01,  ..., 9.9974e-01,
          2.6263e-03, 4.1813e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 582:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:29,882 [Process: 0] Synchronize training processes
2024-08-18 15:23:29,883 [Process: 0] Evaluating...
2024-08-18 15:23:29,884 [Process: 0] EPOCH 581:
2024-08-18 15:23:29,886 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:31,009 [Process: 0] Synchronize training processes
2024-08-18 15:23:31,009 [Process: 0] Evaluating...
2024-08-18 15:23:31,013 [Process: 0] EPOCH 582:
2024-08-18 15:23:31,015 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9467e-01, 5.4685e-03, 2.1507e-03,  ..., 1.3763e-04,
          1.4877e-04, 9.9845e-01],
         [1.9210e-03, 5.4685e-03, 2.1507e-03,  ..., 1.3763e-04,
          1.4877e-04, 5.1677e-04],
         [1.7043e-03, 7.4576e-03, 2.1507e-03,  ..., 9.9959e-01,
          9.9955e-01, 5.1677e-04],
         [1.7043e-03, 9.8161e-01, 9.9355e-01,  ..., 1.3763e-04,
          1.4877e-04, 5.1677e-04]],
        [[9.9949e-01, 2.2856e-03, 3.1108e-03,  ..., 3.7611e-04,
          4.8988e-04, 1.1345e-03],
         [1.5602e-04, 2.2856e-03, 3.1108e-03,  ..., 3.7611e-04,
          4.8988e-04, 1.1345e-03],
         [1.9659e-04, 2.2856e-03, 3.1108e-03,  ..., 9.9887e-01,
          9.9853e-01, 9.9660e-01],
         [1.5602e-04, 9.9314e-01, 9.9067e-01,  ..., 3.7611e-04,
          4.8988e-04, 1.1345e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1413e-03, 8.4511e-05, 5.4599e-04,  ..., 2.0728e-03,
          1.4720e-03, 2.5421e-03],
         [1.1413e-03, 8.4511e-05, 5.4599e-04,  ..., 2.0728e-03,
          1.4720e-03, 2.5421e-03],
         [9.9658e-01, 8.4511e-05, 5.4599e-04,  ..., 9.9378e-01,
          1.4720e-03, 9.9237e-01],
         [1.1413e-03, 9.9975e-01, 9.9836e-01,  ..., 2.0728e-03,
          9.9558e-01, 2.5421e-03]],
        [[3.5840e-03, 6.4324e-05, 1.6877e-05,  ..., 1.5821e-04,
          9.9270e-01, 2.9840e-03],
         [3.5840e-03, 6.4324e-05, 1.6877e-05,  ..., 1.5821e-04,
          2.4326e-03, 2.9840e-03],
         [9.8921e-01, 6.4324e-05, 1.6877e-05,  ..., 1.5821e-04,
          2.4326e-03, 9.9105e-01],
         [3.6178e-03, 9.9981e-01, 9.9995e-01,  ..., 9.9953e-01,
          2.4326e-03, 2.9840e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 583:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9447e-01, 3.5330e-03, 7.0052e-03,  ..., 8.1182e-05,
          4.8356e-04, 9.9945e-01],
         [1.8246e-03, 3.5330e-03, 7.0052e-03,  ..., 8.1182e-05,
          4.8356e-04, 1.8468e-04],
         [1.8246e-03, 3.7555e-03, 9.8947e-03,  ..., 9.9976e-01,
          9.9855e-01, 1.8468e-04],
         [1.8840e-03, 9.8918e-01, 9.7609e-01,  ..., 8.1182e-05,
          4.8356e-04, 1.8468e-04]],
        [[9.9806e-01, 9.7730e-04, 2.4838e-03,  ..., 5.6824e-04,
          3.5880e-04, 1.3683e-03],
         [6.4585e-04, 9.7730e-04, 2.4838e-03,  ..., 5.6824e-04,
          3.7332e-04, 1.5457e-03],
         [6.4585e-04, 9.7730e-04, 2.4838e-03,  ..., 9.9830e-01,
          9.9891e-01, 9.9572e-01],
         [6.4585e-04, 9.9707e-01, 9.9255e-01,  ..., 5.6824e-04,
          3.5880e-04, 1.3683e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5765e-03, 5.5384e-05, 5.4192e-05,  ..., 1.7963e-03,
          3.4665e-04, 2.6595e-03],
         [7.0064e-03, 5.5384e-05, 5.4192e-05,  ..., 1.7963e-03,
          3.4665e-04, 2.6595e-03],
         [9.8153e-01, 5.5384e-05, 5.4192e-05,  ..., 9.9461e-01,
          3.4665e-04, 9.9202e-01],
         [5.8918e-03, 9.9983e-01, 9.9984e-01,  ..., 1.7963e-03,
          9.9896e-01, 2.6595e-03]],
        [[2.4105e-03, 2.5197e-04, 2.3042e-04,  ..., 4.2149e-04,
          9.9961e-01, 5.7988e-04],
         [2.4105e-03, 2.5197e-04, 2.3042e-04,  ..., 4.2149e-04,
          1.3166e-04, 5.7988e-04],
         [9.9277e-01, 2.5197e-04, 2.3042e-04,  ..., 4.2149e-04,
          1.3166e-04, 9.9826e-01],
         [2.4105e-03, 9.9924e-01, 9.9931e-01,  ..., 9.9874e-01,
          1.3166e-04, 5.7988e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 584:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:32,144 [Process: 0] Synchronize training processes
2024-08-18 15:23:32,144 [Process: 0] Evaluating...
2024-08-18 15:23:32,146 [Process: 0] EPOCH 583:
2024-08-18 15:23:32,148 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:33,298 [Process: 0] Synchronize training processes
2024-08-18 15:23:33,298 [Process: 0] Evaluating...
2024-08-18 15:23:33,299 [Process: 0] EPOCH 584:
2024-08-18 15:23:33,301 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7436e-01, 6.0657e-04, 2.7582e-03,  ..., 2.4950e-04,
          3.1004e-04, 9.9968e-01],
         [1.0835e-02, 6.0657e-04, 2.7582e-03,  ..., 2.4950e-04,
          3.1004e-04, 1.0542e-04],
         [6.0051e-03, 6.0657e-04, 2.7582e-03,  ..., 9.9925e-01,
          9.9907e-01, 1.0542e-04],
         [8.8033e-03, 9.9818e-01, 9.9173e-01,  ..., 2.4950e-04,
          3.1004e-04, 1.0542e-04]],
        [[9.6081e-01, 2.1516e-03, 1.2360e-02,  ..., 1.2393e-04,
          4.8158e-04, 1.2231e-03],
         [7.4480e-03, 2.1516e-03, 2.0081e-02,  ..., 1.2393e-04,
          6.4739e-04, 1.2231e-03],
         [2.4294e-02, 2.2522e-03, 1.6880e-02,  ..., 9.9963e-01,
          9.9839e-01, 9.9633e-01],
         [7.4480e-03, 9.9344e-01, 9.5068e-01,  ..., 1.2393e-04,
          4.8158e-04, 1.2231e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2502e-03, 4.8279e-04, 2.8789e-05,  ..., 4.3504e-04,
          1.9982e-04, 4.4745e-03],
         [1.2502e-03, 4.8279e-04, 2.8789e-05,  ..., 4.3504e-04,
          1.9982e-04, 4.4745e-03],
         [9.9625e-01, 4.8279e-04, 2.8789e-05,  ..., 9.9869e-01,
          1.9982e-04, 9.8540e-01],
         [1.2502e-03, 9.9855e-01, 9.9991e-01,  ..., 4.3504e-04,
          9.9940e-01, 5.6520e-03]],
        [[5.5670e-03, 3.2836e-05, 1.3223e-04,  ..., 1.8013e-04,
          9.9932e-01, 1.0424e-03],
         [5.5505e-03, 3.2836e-05, 1.3223e-04,  ..., 1.8013e-04,
          2.2504e-04, 1.0424e-03],
         [9.8284e-01, 3.2836e-05, 1.3223e-04,  ..., 1.8013e-04,
          2.2504e-04, 9.9687e-01],
         [6.0413e-03, 9.9990e-01, 9.9960e-01,  ..., 9.9946e-01,
          2.2504e-04, 1.0424e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 585:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9165e-01, 1.2043e-03, 1.5219e-03,  ..., 2.8200e-04,
          6.5923e-05, 9.9914e-01],
         [2.8415e-03, 1.2043e-03, 1.5219e-03,  ..., 2.8200e-04,
          6.5923e-05, 2.8800e-04],
         [2.7539e-03, 1.2043e-03, 1.5219e-03,  ..., 9.9915e-01,
          9.9980e-01, 2.8800e-04],
         [2.7539e-03, 9.9639e-01, 9.9543e-01,  ..., 2.8200e-04,
          6.5923e-05, 2.8800e-04]],
        [[9.9163e-01, 2.8104e-03, 2.7112e-03,  ..., 1.8273e-04,
          5.1678e-05, 1.2119e-03],
         [4.0628e-03, 2.8104e-03, 2.7112e-03,  ..., 1.8273e-04,
          5.1678e-05, 1.6107e-03],
         [2.1550e-03, 2.8104e-03, 2.8174e-03,  ..., 9.9945e-01,
          9.9984e-01, 9.9597e-01],
         [2.1550e-03, 9.9157e-01, 9.9176e-01,  ..., 1.8273e-04,
          5.1678e-05, 1.2119e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:34,416 [Process: 0] Synchronize training processes
2024-08-18 15:23:34,416 [Process: 0] Evaluating...
2024-08-18 15:23:34,418 [Process: 0] EPOCH 585:
2024-08-18 15:23:34,420 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:35,552 [Process: 0] Synchronize training processes
2024-08-18 15:23:35,552 [Process: 0] Evaluating...
2024-08-18 15:23:35,554 [Process: 0] EPOCH 586:
2024-08-18 15:23:35,556 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5278e-04, 1.6540e-05, 7.7030e-04,  ..., 4.1091e-03,
          1.7899e-03, 5.8099e-03],
         [2.5278e-04, 1.6540e-05, 1.0193e-03,  ..., 4.1091e-03,
          1.7899e-03, 5.8099e-03],
         [9.9924e-01, 1.6540e-05, 7.7030e-04,  ..., 9.8756e-01,
          1.7899e-03, 9.8182e-01],
         [2.5278e-04, 9.9995e-01, 9.9744e-01,  ..., 4.2238e-03,
          9.9463e-01, 6.5572e-03]],
        [[9.9206e-04, 5.9939e-05, 2.5832e-05,  ..., 8.2709e-06,
          9.9368e-01, 5.7235e-03],
         [9.9206e-04, 5.9939e-05, 2.5832e-05,  ..., 8.2709e-06,
          2.1071e-03, 5.7235e-03],
         [9.9702e-01, 5.9939e-05, 2.5832e-05,  ..., 8.2709e-06,
          2.1071e-03, 9.8137e-01],
         [9.9206e-04, 9.9982e-01, 9.9992e-01,  ..., 9.9998e-01,
          2.1071e-03, 7.1827e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 586:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9686e-01, 3.6009e-03, 1.4202e-02,  ..., 1.1121e-03,
          5.7103e-05, 9.9908e-01],
         [1.0468e-03, 3.6009e-03, 1.4175e-02,  ..., 1.2846e-03,
          5.7103e-05, 3.0751e-04],
         [1.0468e-03, 3.6009e-03, 3.1298e-02,  ..., 9.9649e-01,
          9.9983e-01, 3.0751e-04],
         [1.0468e-03, 9.8920e-01, 9.4033e-01,  ..., 1.1121e-03,
          5.7103e-05, 3.0751e-04]],
        [[9.9923e-01, 2.8723e-03, 1.8759e-03,  ..., 1.8687e-04,
          3.3768e-04, 1.2807e-04],
         [2.5519e-04, 2.8723e-03, 1.8759e-03,  ..., 1.8687e-04,
          3.3768e-04, 1.2807e-04],
         [2.5519e-04, 2.8723e-03, 1.8759e-03,  ..., 9.9944e-01,
          9.9899e-01, 9.9962e-01],
         [2.5519e-04, 9.9138e-01, 9.9437e-01,  ..., 1.8687e-04,
          3.3768e-04, 1.2807e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6311e-03, 3.7877e-05, 2.6324e-06,  ..., 2.0567e-03,
          7.0119e-04, 1.1449e-03],
         [1.6311e-03, 3.7877e-05, 2.6324e-06,  ..., 2.0567e-03,
          7.0119e-04, 1.1449e-03],
         [9.9511e-01, 3.7877e-05, 2.6324e-06,  ..., 9.9383e-01,
          7.0119e-04, 9.9657e-01],
         [1.6311e-03, 9.9989e-01, 9.9999e-01,  ..., 2.0567e-03,
          9.9790e-01, 1.1449e-03]],
        [[4.9046e-03, 1.9340e-05, 1.2978e-05,  ..., 4.1288e-05,
          9.9869e-01, 1.0045e-03],
         [4.9046e-03, 1.9340e-05, 1.2978e-05,  ..., 4.1288e-05,
          4.3548e-04, 1.0045e-03],
         [9.8419e-01, 1.9340e-05, 1.2978e-05,  ..., 4.1288e-05,
          4.3548e-04, 9.9699e-01],
         [6.0043e-03, 9.9994e-01, 9.9996e-01,  ..., 9.9988e-01,
          4.3548e-04, 1.0045e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 587:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9795e-01, 5.2706e-03, 2.1118e-03,  ..., 4.5580e-04,
          1.3458e-05, 9.9876e-01],
         [6.8447e-04, 7.4491e-03, 2.1118e-03,  ..., 5.6914e-04,
          1.3458e-05, 4.1169e-04],
         [6.8447e-04, 5.3288e-03, 2.1118e-03,  ..., 9.9852e-01,
          9.9996e-01, 4.1169e-04],
         [6.8447e-04, 9.8195e-01, 9.9366e-01,  ..., 4.5580e-04,
          1.3458e-05, 4.1169e-04]],
        [[9.9899e-01, 2.8834e-03, 5.1976e-03,  ..., 2.7868e-04,
          1.2667e-04, 2.1257e-04],
         [3.3537e-04, 2.8834e-03, 5.1976e-03,  ..., 2.7868e-04,
          1.4178e-04, 2.1257e-04],
         [3.3537e-04, 2.8834e-03, 7.3471e-03,  ..., 9.9916e-01,
          9.9960e-01, 9.9936e-01],
         [3.3537e-04, 9.9135e-01, 9.8226e-01,  ..., 2.7868e-04,
          1.2667e-04, 2.1257e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:36,686 [Process: 0] Synchronize training processes
2024-08-18 15:23:36,686 [Process: 0] Evaluating...
2024-08-18 15:23:36,688 [Process: 0] EPOCH 587:
2024-08-18 15:23:36,690 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:37,815 [Process: 0] Synchronize training processes
2024-08-18 15:23:37,815 [Process: 0] Evaluating...
2024-08-18 15:23:37,817 [Process: 0] EPOCH 588:
2024-08-18 15:23:37,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.6503e-04, 8.4611e-06, 3.1893e-04,  ..., 2.5571e-03,
          7.9320e-04, 1.7988e-03],
         [8.6503e-04, 8.4611e-06, 3.1893e-04,  ..., 2.5571e-03,
          7.9320e-04, 1.7988e-03],
         [9.9740e-01, 8.4611e-06, 3.1893e-04,  ..., 9.9233e-01,
          7.9320e-04, 9.9460e-01],
         [8.6503e-04, 9.9997e-01, 9.9904e-01,  ..., 2.5571e-03,
          9.9762e-01, 1.7988e-03]],
        [[1.9611e-03, 1.3341e-04, 5.9657e-04,  ..., 2.2936e-04,
          9.9867e-01, 4.9163e-03],
         [1.9611e-03, 1.3341e-04, 5.9657e-04,  ..., 2.2936e-04,
          4.4356e-04, 4.9163e-03],
         [9.9412e-01, 1.3341e-04, 5.9657e-04,  ..., 2.2936e-04,
          4.4356e-04, 9.8476e-01],
         [1.9611e-03, 9.9960e-01, 9.9821e-01,  ..., 9.9931e-01,
          4.4356e-04, 5.4106e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 588:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7870e-01, 1.9194e-03, 2.8879e-03,  ..., 6.6947e-05,
          1.8346e-04, 9.9933e-01],
         [6.7654e-03, 1.9194e-03, 2.8879e-03,  ..., 6.6947e-05,
          1.8346e-04, 2.2433e-04],
         [7.5045e-03, 1.9194e-03, 3.0966e-03,  ..., 9.9980e-01,
          9.9945e-01, 2.2433e-04],
         [7.0267e-03, 9.9424e-01, 9.9113e-01,  ..., 6.6947e-05,
          1.8346e-04, 2.2433e-04]],
        [[9.9931e-01, 1.8905e-03, 2.3626e-03,  ..., 6.2272e-04,
          9.6073e-04, 1.1060e-04],
         [2.3059e-04, 1.8905e-03, 2.3626e-03,  ..., 6.2272e-04,
          1.0951e-03, 1.1060e-04],
         [2.3059e-04, 1.8905e-03, 2.3626e-03,  ..., 9.9813e-01,
          9.9698e-01, 9.9967e-01],
         [2.3059e-04, 9.9433e-01, 9.9291e-01,  ..., 6.2272e-04,
          9.6073e-04, 1.1060e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7577e-03, 3.6603e-05, 7.0981e-05,  ..., 2.6506e-03,
          3.7411e-05, 2.2463e-03],
         [1.7577e-03, 3.6603e-05, 7.0981e-05,  ..., 2.6506e-03,
          3.7411e-05, 2.2463e-03],
         [9.9473e-01, 3.6603e-05, 7.0981e-05,  ..., 9.9205e-01,
          3.7411e-05, 9.9326e-01],
         [1.7577e-03, 9.9989e-01, 9.9979e-01,  ..., 2.6506e-03,
          9.9989e-01, 2.2463e-03]],
        [[2.6843e-03, 9.2273e-05, 4.1390e-05,  ..., 4.4106e-04,
          9.9977e-01, 2.0615e-03],
         [2.6843e-03, 9.2273e-05, 4.1390e-05,  ..., 4.4106e-04,
          7.7607e-05, 2.0615e-03],
         [9.9195e-01, 9.2273e-05, 4.1390e-05,  ..., 4.4106e-04,
          7.7607e-05, 9.9382e-01],
         [2.6843e-03, 9.9972e-01, 9.9988e-01,  ..., 9.9868e-01,
          7.7607e-05, 2.0615e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 589:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:23:38,945 [Process: 0] Synchronize training processes
2024-08-18 15:23:38,945 [Process: 0] Evaluating...
2024-08-18 15:23:38,947 [Process: 0] EPOCH 589:
2024-08-18 15:23:38,949 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9649e-01, 1.6882e-03, 4.9955e-03,  ..., 1.4412e-04,
          5.2872e-04, 9.9937e-01],
         [1.1700e-03, 1.6882e-03, 4.9955e-03,  ..., 1.4412e-04,
          5.2872e-04, 2.0903e-04],
         [1.1700e-03, 1.6882e-03, 6.6487e-03,  ..., 9.9957e-01,
          9.9841e-01, 2.0903e-04],
         [1.1700e-03, 9.9494e-01, 9.8336e-01,  ..., 1.4412e-04,
          5.2872e-04, 2.0903e-04]],
        [[9.9977e-01, 5.1488e-04, 2.9331e-03,  ..., 1.1945e-03,
          4.4404e-04, 6.3346e-04],
         [7.6621e-05, 5.1488e-04, 2.9331e-03,  ..., 2.1337e-03,
          1.1850e-03, 1.5507e-03],
         [7.6621e-05, 5.1488e-04, 2.9331e-03,  ..., 9.9548e-01,
          9.9793e-01, 9.9718e-01],
         [7.6621e-05, 9.9846e-01, 9.9120e-01,  ..., 1.1945e-03,
          4.4404e-04, 6.3346e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5354e-03, 1.3828e-05, 1.1075e-05,  ..., 2.7037e-03,
          8.2897e-04, 2.0190e-03],
         [2.5354e-03, 1.3828e-05, 1.1075e-05,  ..., 2.7037e-03,
          8.2897e-04, 2.0190e-03],
         [9.9239e-01, 1.3828e-05, 1.1075e-05,  ..., 9.9189e-01,
          8.2897e-04, 9.9394e-01],
         [2.5354e-03, 9.9996e-01, 9.9997e-01,  ..., 2.7037e-03,
          9.9751e-01, 2.0190e-03]],
        [[3.5599e-03, 1.0254e-04, 1.0127e-04,  ..., 1.4186e-04,
          9.9661e-01, 2.4837e-03],
         [3.5599e-03, 1.0254e-04, 1.0127e-04,  ..., 1.4186e-04,
          1.1207e-03, 2.4837e-03],
         [9.8932e-01, 1.0254e-04, 1.0127e-04,  ..., 1.4186e-04,
          1.1207e-03, 9.9255e-01],
         [3.5599e-03, 9.9969e-01, 9.9970e-01,  ..., 9.9957e-01,
          1.1436e-03, 2.4837e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 590:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9450e-01, 2.1613e-03, 1.4626e-03,  ..., 3.3413e-05,
          4.6889e-05, 9.9931e-01],
         [1.8336e-03, 2.1613e-03, 1.4626e-03,  ..., 3.3413e-05,
          4.6889e-05, 2.2877e-04],
         [1.8336e-03, 2.1613e-03, 1.4626e-03,  ..., 9.9990e-01,
          9.9986e-01, 2.2877e-04],
         [1.8336e-03, 9.9352e-01, 9.9561e-01,  ..., 3.3413e-05,
          4.6889e-05, 2.2877e-04]],
        [[9.9550e-01, 6.4012e-03, 1.9132e-03,  ..., 3.9086e-04,
          2.1066e-04, 1.1209e-04],
         [1.4998e-03, 6.4012e-03, 1.9132e-03,  ..., 3.9086e-04,
          2.1066e-04, 1.1209e-04],
         [1.4998e-03, 7.6533e-03, 1.9132e-03,  ..., 9.9883e-01,
          9.9937e-01, 9.9966e-01],
         [1.4998e-03, 9.7954e-01, 9.9426e-01,  ..., 3.9086e-04,
          2.1066e-04, 1.1209e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1367e-03, 6.0017e-06, 5.7884e-07,  ..., 2.2215e-03,
          4.3123e-04, 2.4232e-03],
         [2.1367e-03, 6.0017e-06, 5.7884e-07,  ..., 2.2215e-03,
          4.3123e-04, 2.4232e-03],
         [9.9359e-01, 6.0017e-06, 5.7884e-07,  ..., 9.9334e-01,
          4.3123e-04, 9.9273e-01],
         [2.1367e-03, 9.9998e-01, 1.0000e+00,  ..., 2.2215e-03,
          9.9871e-01, 2.4232e-03]],
        [[5.2666e-03, 9.2568e-05, 3.2176e-05,  ..., 3.8247e-05,
          9.9340e-01, 1.4996e-03],
         [5.1258e-03, 9.2568e-05, 3.2176e-05,  ..., 3.8247e-05,
          1.9819e-03, 1.4996e-03],
         [9.8442e-01, 9.2568e-05, 3.2176e-05,  ..., 3.8247e-05,
          1.9819e-03, 9.9550e-01],
         [5.1872e-03, 9.9972e-01, 9.9990e-01,  ..., 9.9989e-01,
          2.6388e-03, 1.4996e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 591:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:40,071 [Process: 0] Synchronize training processes
2024-08-18 15:23:40,071 [Process: 0] Evaluating...
2024-08-18 15:23:40,073 [Process: 0] EPOCH 590:
2024-08-18 15:23:40,075 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:41,194 [Process: 0] Synchronize training processes
2024-08-18 15:23:41,194 [Process: 0] Evaluating...
2024-08-18 15:23:41,196 [Process: 0] EPOCH 591:
2024-08-18 15:23:41,197 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9573e-01, 2.8907e-03, 1.3101e-03,  ..., 4.8322e-05,
          2.5164e-04, 9.9675e-01],
         [1.4233e-03, 2.8907e-03, 1.3101e-03,  ..., 4.8322e-05,
          2.5164e-04, 1.0821e-03],
         [1.4233e-03, 2.8907e-03, 1.3101e-03,  ..., 9.9986e-01,
          9.9925e-01, 1.0821e-03],
         [1.4233e-03, 9.9133e-01, 9.9607e-01,  ..., 4.8322e-05,
          2.5164e-04, 1.0821e-03]],
        [[9.9909e-01, 2.2485e-03, 5.7235e-03,  ..., 1.9170e-04,
          1.0112e-03, 6.7518e-03],
         [3.0277e-04, 2.2485e-03, 5.7235e-03,  ..., 1.9170e-04,
          4.0530e-03, 2.9963e-02],
         [3.0277e-04, 2.2485e-03, 9.5404e-03,  ..., 9.9942e-01,
          9.9392e-01, 9.5653e-01],
         [3.0277e-04, 9.9325e-01, 9.7901e-01,  ..., 1.9170e-04,
          1.0112e-03, 6.7518e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8627e-03, 1.5043e-04, 1.3603e-06,  ..., 2.0679e-03,
          7.8090e-04, 8.5347e-04],
         [2.8627e-03, 1.5043e-04, 1.3603e-06,  ..., 2.0679e-03,
          7.8090e-04, 8.5347e-04],
         [9.9141e-01, 1.5043e-04, 1.3603e-06,  ..., 9.9380e-01,
          7.8090e-04, 9.9744e-01],
         [2.8627e-03, 9.9955e-01, 1.0000e+00,  ..., 2.0679e-03,
          9.9766e-01, 8.5347e-04]],
        [[4.8051e-03, 1.9228e-04, 8.2118e-04,  ..., 7.9674e-05,
          9.9886e-01, 2.0503e-03],
         [4.8051e-03, 1.9228e-04, 8.2118e-04,  ..., 7.9674e-05,
          3.7908e-04, 2.0503e-03],
         [9.8558e-01, 1.9228e-04, 8.2118e-04,  ..., 7.9674e-05,
          3.7908e-04, 9.9385e-01],
         [4.8051e-03, 9.9942e-01, 9.9754e-01,  ..., 9.9976e-01,
          3.7908e-04, 2.0503e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 592:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9805e-01, 5.0067e-03, 4.0055e-03,  ..., 1.9087e-04,
          9.8845e-04, 9.9955e-01],
         [6.5109e-04, 5.0067e-03, 4.2977e-03,  ..., 1.9087e-04,
          1.4608e-03, 1.5007e-04],
         [6.5109e-04, 6.5535e-03, 4.0055e-03,  ..., 9.9943e-01,
          9.9656e-01, 1.5007e-04],
         [6.5109e-04, 9.8343e-01, 9.8769e-01,  ..., 1.9087e-04,
          9.8845e-04, 1.5007e-04]],
        [[9.9224e-01, 3.7662e-04, 1.8424e-03,  ..., 3.6976e-04,
          1.7204e-03, 1.7513e-04],
         [1.9942e-03, 3.7662e-04, 1.8424e-03,  ..., 3.6976e-04,
          5.0640e-03, 1.7513e-04],
         [3.7675e-03, 3.7662e-04, 1.8424e-03,  ..., 9.9889e-01,
          9.9150e-01, 9.9947e-01],
         [1.9942e-03, 9.9887e-01, 9.9447e-01,  ..., 3.6976e-04,
          1.7204e-03, 1.7513e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.9786e-04, 1.3728e-04, 1.6370e-07,  ..., 1.5291e-03,
          4.4045e-04, 2.0945e-03],
         [7.9786e-04, 1.3728e-04, 1.6370e-07,  ..., 1.5291e-03,
          4.4045e-04, 2.0945e-03],
         [9.9761e-01, 1.3728e-04, 1.6370e-07,  ..., 9.9541e-01,
          4.4045e-04, 9.9372e-01],
         [7.9786e-04, 9.9959e-01, 1.0000e+00,  ..., 1.5291e-03,
          9.9868e-01, 2.0945e-03]],
        [[5.3819e-04, 2.3597e-05, 4.2161e-04,  ..., 3.6431e-04,
          9.9765e-01, 2.0080e-03],
         [5.3819e-04, 2.3597e-05, 4.2161e-04,  ..., 3.6431e-04,
          7.1896e-04, 2.0080e-03],
         [9.9839e-01, 2.3597e-05, 4.2161e-04,  ..., 3.6431e-04,
          7.1896e-04, 9.9398e-01],
         [5.3819e-04, 9.9993e-01, 9.9874e-01,  ..., 9.9891e-01,
          9.1661e-04, 2.0080e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:42,318 [Process: 0] Synchronize training processes
2024-08-18 15:23:42,318 [Process: 0] Evaluating...
2024-08-18 15:23:42,322 [Process: 0] EPOCH 592:
2024-08-18 15:23:42,324 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:43,450 [Process: 0] Synchronize training processes
2024-08-18 15:23:43,450 [Process: 0] Evaluating...
2024-08-18 15:23:43,452 [Process: 0] EPOCH 593:
2024-08-18 15:23:43,454 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 593:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.1335e-01, 4.6532e-03, 2.7063e-03,  ..., 3.2632e-04,
          6.9384e-05, 9.9117e-01],
         [2.3560e-02, 4.6532e-03, 2.7063e-03,  ..., 3.3598e-04,
          6.9384e-05, 2.2540e-03],
         [3.9536e-02, 6.4055e-03, 2.7063e-03,  ..., 9.9901e-01,
          9.9979e-01, 4.3194e-03],
         [2.3552e-02, 9.8429e-01, 9.9188e-01,  ..., 3.2632e-04,
          6.9384e-05, 2.2540e-03]],
        [[9.9472e-01, 3.8940e-04, 1.1381e-03,  ..., 7.4899e-04,
          2.9097e-04, 1.0562e-03],
         [1.5470e-03, 3.8940e-04, 1.1381e-03,  ..., 7.4899e-04,
          2.9097e-04, 1.5812e-03],
         [2.1812e-03, 3.8940e-04, 1.1381e-03,  ..., 9.9775e-01,
          9.9913e-01, 9.9631e-01],
         [1.5470e-03, 9.9883e-01, 9.9659e-01,  ..., 7.4899e-04,
          2.9097e-04, 1.0562e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7600e-03, 2.2602e-05, 1.0840e-07,  ..., 4.4955e-03,
          1.8999e-04, 1.9003e-03],
         [2.7600e-03, 2.2602e-05, 1.0840e-07,  ..., 4.4955e-03,
          1.8999e-04, 1.9003e-03],
         [9.9172e-01, 2.2602e-05, 1.0840e-07,  ..., 9.8597e-01,
          1.8999e-04, 9.9430e-01],
         [2.7600e-03, 9.9993e-01, 1.0000e+00,  ..., 5.0355e-03,
          9.9943e-01, 1.9003e-03]],
        [[4.2103e-03, 8.1816e-05, 3.4917e-05,  ..., 1.4637e-04,
          9.9777e-01, 8.0945e-03],
         [4.2103e-03, 8.1816e-05, 3.4917e-05,  ..., 1.4637e-04,
          7.4266e-04, 8.0945e-03],
         [9.8737e-01, 8.1816e-05, 3.4917e-05,  ..., 1.4637e-04,
          7.4266e-04, 9.7204e-01],
         [4.2103e-03, 9.9975e-01, 9.9990e-01,  ..., 9.9956e-01,
          7.4266e-04, 1.1768e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 594:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9175e-01, 1.2864e-03, 4.3257e-03,  ..., 8.3103e-05,
          1.0005e-04, 9.9552e-01],
         [2.4213e-03, 1.2864e-03, 4.3257e-03,  ..., 8.3103e-05,
          1.0005e-04, 1.4943e-03],
         [2.4213e-03, 1.2864e-03, 5.4356e-03,  ..., 9.9975e-01,
          9.9970e-01, 1.4943e-03],
         [3.4119e-03, 9.9614e-01, 9.8591e-01,  ..., 8.3103e-05,
          1.0005e-04, 1.4943e-03]],
        [[9.9668e-01, 6.4364e-03, 2.8585e-03,  ..., 9.2673e-04,
          3.7383e-04, 2.8349e-04],
         [1.1055e-03, 6.8001e-03, 2.8585e-03,  ..., 9.2673e-04,
          3.7383e-04, 2.8349e-04],
         [1.1055e-03, 7.2995e-03, 3.0979e-03,  ..., 9.9722e-01,
          9.9888e-01, 9.9915e-01],
         [1.1055e-03, 9.7946e-01, 9.9119e-01,  ..., 9.2673e-04,
          3.7383e-04, 2.8349e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:44,577 [Process: 0] Synchronize training processes
2024-08-18 15:23:44,577 [Process: 0] Evaluating...
2024-08-18 15:23:44,579 [Process: 0] EPOCH 594:
2024-08-18 15:23:44,581 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:45,710 [Process: 0] Synchronize training processes
2024-08-18 15:23:45,710 [Process: 0] Evaluating...
2024-08-18 15:23:45,712 [Process: 0] EPOCH 595:
2024-08-18 15:23:45,714 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3996e-03, 3.3954e-05, 5.2039e-05,  ..., 1.0358e-02,
          1.0717e-03, 1.1011e-03],
         [1.3996e-03, 3.3954e-05, 5.2039e-05,  ..., 1.0103e-02,
          1.0717e-03, 1.1011e-03],
         [9.9580e-01, 3.3954e-05, 5.2039e-05,  ..., 9.6193e-01,
          1.0717e-03, 9.9670e-01],
         [1.3996e-03, 9.9990e-01, 9.9984e-01,  ..., 1.7614e-02,
          9.9679e-01, 1.1011e-03]],
        [[3.9527e-03, 4.6647e-05, 3.1625e-05,  ..., 7.4891e-06,
          9.9995e-01, 2.9709e-03],
         [3.9527e-03, 4.6647e-05, 3.1625e-05,  ..., 7.4891e-06,
          1.6423e-05, 3.1207e-03],
         [9.8814e-01, 4.6647e-05, 3.1625e-05,  ..., 7.4891e-06,
          1.6423e-05, 9.9094e-01],
         [3.9527e-03, 9.9986e-01, 9.9991e-01,  ..., 9.9998e-01,
          1.6423e-05, 2.9709e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 595:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9289e-01, 3.9611e-03, 1.3554e-03,  ..., 9.3057e-05,
          1.4178e-04, 9.9936e-01],
         [2.3002e-03, 5.2465e-03, 1.3554e-03,  ..., 9.3057e-05,
          1.4178e-04, 2.1490e-04],
         [2.3002e-03, 3.9611e-03, 1.3554e-03,  ..., 9.9972e-01,
          9.9957e-01, 2.1490e-04],
         [2.5115e-03, 9.8683e-01, 9.9593e-01,  ..., 9.3057e-05,
          1.4178e-04, 2.1490e-04]],
        [[9.8846e-01, 2.8334e-03, 2.0218e-03,  ..., 5.2380e-04,
          2.8507e-03, 3.0945e-04],
         [3.4888e-03, 2.8334e-03, 2.0218e-03,  ..., 5.2380e-04,
          4.1562e-03, 3.0945e-04],
         [4.5657e-03, 2.8346e-03, 2.0218e-03,  ..., 9.9843e-01,
          9.9014e-01, 9.9907e-01],
         [3.4888e-03, 9.9150e-01, 9.9393e-01,  ..., 5.2380e-04,
          2.8507e-03, 3.0945e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.1185e-04, 1.9277e-05, 1.7869e-06,  ..., 2.8908e-03,
          1.7228e-03, 2.3298e-03],
         [7.1185e-04, 1.9277e-05, 1.7869e-06,  ..., 2.8908e-03,
          1.7228e-03, 2.3298e-03],
         [9.9786e-01, 1.9277e-05, 1.7869e-06,  ..., 9.9133e-01,
          1.7228e-03, 9.9301e-01],
         [7.1185e-04, 9.9994e-01, 9.9999e-01,  ..., 2.8908e-03,
          9.9483e-01, 2.3298e-03]],
        [[8.0112e-04, 1.0919e-05, 2.6680e-05,  ..., 2.3765e-05,
          9.9924e-01, 1.2863e-03],
         [8.0112e-04, 1.0919e-05, 2.6680e-05,  ..., 2.3765e-05,
          2.5441e-04, 1.2863e-03],
         [9.9760e-01, 1.0919e-05, 2.6680e-05,  ..., 2.3765e-05,
          2.5441e-04, 9.9614e-01],
         [8.0112e-04, 9.9997e-01, 9.9992e-01,  ..., 9.9993e-01,
          2.5441e-04, 1.2863e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 596:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.4383e-01, 3.0596e-03, 1.5774e-03,  ..., 4.3947e-05,
          8.9227e-05, 9.9682e-01],
         [2.9845e-02, 3.0596e-03, 1.5774e-03,  ..., 4.3947e-05,
          8.9227e-05, 9.2488e-04],
         [1.2196e-02, 3.0596e-03, 1.5774e-03,  ..., 9.9987e-01,
          9.9973e-01, 1.3301e-03],
         [1.4127e-02, 9.9082e-01, 9.9527e-01,  ..., 4.3947e-05,
          8.9227e-05, 9.2488e-04]],
        [[9.9517e-01, 4.0741e-03, 2.6145e-03,  ..., 3.3988e-04,
          2.3350e-04, 2.6140e-04],
         [1.3453e-03, 4.0741e-03, 2.6145e-03,  ..., 3.3988e-04,
          2.3350e-04, 2.6140e-04],
         [2.1386e-03, 4.2709e-03, 2.6145e-03,  ..., 9.9898e-01,
          9.9930e-01, 9.9922e-01],
         [1.3453e-03, 9.8758e-01, 9.9216e-01,  ..., 3.3988e-04,
          2.3350e-04, 2.6140e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:46,839 [Process: 0] Synchronize training processes
2024-08-18 15:23:46,839 [Process: 0] Evaluating...
2024-08-18 15:23:46,841 [Process: 0] EPOCH 596:
2024-08-18 15:23:46,843 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3965e-03, 2.9423e-05, 9.0080e-07,  ..., 9.0188e-04,
          5.2725e-04, 1.6458e-03],
         [4.3965e-03, 2.9423e-05, 9.0080e-07,  ..., 9.0188e-04,
          5.2725e-04, 1.6458e-03],
         [9.8673e-01, 2.9423e-05, 9.0080e-07,  ..., 9.9729e-01,
          5.2725e-04, 9.9506e-01],
         [4.4747e-03, 9.9991e-01, 1.0000e+00,  ..., 9.0188e-04,
          9.9842e-01, 1.6458e-03]],
        [[3.9278e-03, 9.2661e-06, 3.9378e-04,  ..., 2.4575e-04,
          9.9563e-01, 3.6071e-03],
         [4.3858e-03, 9.2661e-06, 3.9378e-04,  ..., 2.4575e-04,
          1.1251e-03, 3.1816e-03],
         [9.8776e-01, 9.2661e-06, 3.9378e-04,  ..., 2.4575e-04,
          1.1251e-03, 9.9003e-01],
         [3.9278e-03, 9.9997e-01, 9.9882e-01,  ..., 9.9926e-01,
          2.1208e-03, 3.1816e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 597:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9728e-01, 6.5990e-03, 2.8173e-03,  ..., 1.0069e-04,
          2.0042e-05, 9.9944e-01],
         [8.6402e-04, 6.5990e-03, 2.8173e-03,  ..., 1.0069e-04,
          2.0042e-05, 1.8773e-04],
         [8.6402e-04, 9.8909e-03, 2.8173e-03,  ..., 9.9970e-01,
          9.9994e-01, 1.8773e-04],
         [9.9406e-04, 9.7691e-01, 9.9155e-01,  ..., 1.0069e-04,
          2.0042e-05, 1.8773e-04]],
        [[9.9734e-01, 1.5365e-03, 1.5061e-03,  ..., 3.0359e-04,
          1.2274e-04, 6.6247e-04],
         [8.8714e-04, 1.5365e-03, 1.5061e-03,  ..., 3.0359e-04,
          1.2274e-04, 1.0534e-03],
         [8.8714e-04, 1.5365e-03, 1.5061e-03,  ..., 9.9909e-01,
          9.9963e-01, 9.9762e-01],
         [8.8714e-04, 9.9539e-01, 9.9548e-01,  ..., 3.0359e-04,
          1.2274e-04, 6.6247e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4298e-03, 1.7672e-05, 1.1388e-05,  ..., 2.9001e-03,
          5.8111e-04, 2.1297e-03],
         [1.4298e-03, 1.7672e-05, 1.1388e-05,  ..., 2.9001e-03,
          5.8111e-04, 2.1297e-03],
         [9.9571e-01, 1.7672e-05, 1.1388e-05,  ..., 9.9130e-01,
          5.8111e-04, 9.9361e-01],
         [1.4298e-03, 9.9995e-01, 9.9997e-01,  ..., 2.9001e-03,
          9.9826e-01, 2.1297e-03]],
        [[1.6228e-03, 1.2396e-04, 8.2463e-06,  ..., 1.6913e-05,
          9.9992e-01, 2.8485e-03],
         [1.6228e-03, 1.2396e-04, 8.2463e-06,  ..., 1.6913e-05,
          2.7408e-05, 2.8485e-03],
         [9.9513e-01, 1.2396e-04, 8.2463e-06,  ..., 1.6913e-05,
          2.7408e-05, 9.9145e-01],
         [1.6228e-03, 9.9963e-01, 9.9998e-01,  ..., 9.9995e-01,
          2.7408e-05, 2.8485e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 598:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:47,971 [Process: 0] Synchronize training processes
2024-08-18 15:23:47,971 [Process: 0] Evaluating...
2024-08-18 15:23:47,973 [Process: 0] EPOCH 597:
2024-08-18 15:23:47,975 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:49,102 [Process: 0] Synchronize training processes
2024-08-18 15:23:49,102 [Process: 0] Evaluating...
2024-08-18 15:23:49,104 [Process: 0] EPOCH 598:
2024-08-18 15:23:49,106 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5846e-01, 1.2326e-03, 4.0358e-03,  ..., 1.0124e-04,
          6.7857e-05, 9.9322e-01],
         [9.3955e-03, 1.2326e-03, 4.0358e-03,  ..., 1.0124e-04,
          6.7857e-05, 1.7302e-03],
         [9.3955e-03, 1.2326e-03, 4.9478e-03,  ..., 9.9970e-01,
          9.9980e-01, 3.3226e-03],
         [2.2745e-02, 9.9630e-01, 9.8698e-01,  ..., 1.0124e-04,
          6.7857e-05, 1.7302e-03]],
        [[9.9663e-01, 1.0619e-03, 1.2697e-03,  ..., 2.5181e-04,
          1.9414e-04, 2.4847e-05],
         [9.3219e-04, 1.0619e-03, 1.2697e-03,  ..., 2.5181e-04,
          2.2841e-04, 2.4847e-05],
         [1.5044e-03, 1.0619e-03, 1.2697e-03,  ..., 9.9924e-01,
          9.9938e-01, 9.9993e-01],
         [9.3219e-04, 9.9681e-01, 9.9619e-01,  ..., 2.5181e-04,
          1.9414e-04, 2.4847e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4342e-03, 5.9249e-05, 3.3711e-06,  ..., 1.8417e-03,
          1.0594e-04, 2.8829e-03],
         [4.4342e-03, 5.9249e-05, 3.3711e-06,  ..., 1.8417e-03,
          1.0594e-04, 2.8829e-03],
         [9.8670e-01, 5.9249e-05, 3.3711e-06,  ..., 9.9447e-01,
          1.0594e-04, 9.9135e-01],
         [4.4342e-03, 9.9982e-01, 9.9999e-01,  ..., 1.8417e-03,
          9.9968e-01, 2.8829e-03]],
        [[3.1462e-03, 7.0736e-04, 3.2480e-05,  ..., 9.5577e-05,
          9.9642e-01, 2.0086e-03],
         [3.1462e-03, 7.0736e-04, 3.2480e-05,  ..., 9.5577e-05,
          1.1556e-03, 2.0086e-03],
         [9.9056e-01, 7.0736e-04, 3.2480e-05,  ..., 9.5577e-05,
          1.1556e-03, 9.9397e-01],
         [3.1462e-03, 9.9788e-01, 9.9990e-01,  ..., 9.9971e-01,
          1.2651e-03, 2.0086e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 599:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7828e-01, 1.8265e-03, 2.2649e-03,  ..., 2.9035e-04,
          3.6166e-05, 9.9840e-01],
         [7.5573e-03, 1.8265e-03, 2.2649e-03,  ..., 2.9035e-04,
          3.6166e-05, 5.3500e-04],
         [5.5673e-03, 1.8265e-03, 2.2649e-03,  ..., 9.9913e-01,
          9.9989e-01, 5.3500e-04],
         [8.5910e-03, 9.9452e-01, 9.9321e-01,  ..., 2.9035e-04,
          3.6166e-05, 5.3500e-04]],
        [[9.9695e-01, 2.4050e-03, 3.9369e-03,  ..., 1.3233e-03,
          1.1884e-03, 4.5288e-04],
         [7.8066e-04, 2.4050e-03, 3.9369e-03,  ..., 1.3233e-03,
          4.1688e-03, 4.5288e-04],
         [1.4916e-03, 2.4050e-03, 3.9369e-03,  ..., 9.9603e-01,
          9.9345e-01, 9.9864e-01],
         [7.8066e-04, 9.9279e-01, 9.8819e-01,  ..., 1.3233e-03,
          1.1884e-03, 4.5288e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2891e-03, 2.5082e-05, 1.7436e-04,  ..., 9.5650e-03,
          2.5594e-04, 1.5640e-03],
         [4.2891e-03, 2.5082e-05, 1.7436e-04,  ..., 8.1865e-03,
          2.5594e-04, 1.5640e-03],
         [9.8696e-01, 2.5082e-05, 1.7436e-04,  ..., 9.7232e-01,
          2.5594e-04, 9.9531e-01],
         [4.4571e-03, 9.9992e-01, 9.9948e-01,  ..., 9.9320e-03,
          9.9923e-01, 1.5640e-03]],
        [[2.5820e-03, 4.3606e-05, 7.5483e-05,  ..., 1.7456e-04,
          9.7996e-01, 2.6122e-03],
         [2.5820e-03, 4.3606e-05, 7.5483e-05,  ..., 1.7456e-04,
          5.2274e-03, 2.6122e-03],
         [9.9225e-01, 4.3606e-05, 7.5483e-05,  ..., 1.7456e-04,
          5.2274e-03, 9.9216e-01],
         [2.5820e-03, 9.9987e-01, 9.9977e-01,  ..., 9.9948e-01,
          9.5869e-03, 2.6122e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 600:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:50,233 [Process: 0] Synchronize training processes
2024-08-18 15:23:50,234 [Process: 0] Evaluating...
2024-08-18 15:23:50,235 [Process: 0] EPOCH 599:
2024-08-18 15:23:50,237 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:51,376 [Process: 0] Synchronize training processes
2024-08-18 15:23:51,376 [Process: 0] Evaluating...
2024-08-18 15:23:51,378 [Process: 0] EPOCH 600:
2024-08-18 15:23:51,380 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7398e-01, 9.1088e-04, 1.0134e-03,  ..., 7.2491e-05,
          5.7846e-05, 9.9453e-01],
         [9.4136e-03, 9.1088e-04, 1.0134e-03,  ..., 7.2491e-05,
          5.7846e-05, 2.5448e-03],
         [9.0475e-03, 9.1088e-04, 1.0134e-03,  ..., 9.9978e-01,
          9.9983e-01, 1.4649e-03],
         [7.5576e-03, 9.9727e-01, 9.9696e-01,  ..., 7.2491e-05,
          5.7846e-05, 1.4649e-03]],
        [[9.9957e-01, 8.1405e-04, 2.3931e-03,  ..., 6.6971e-04,
          5.9564e-04, 1.1484e-04],
         [1.4476e-04, 8.1405e-04, 2.3931e-03,  ..., 6.6971e-04,
          9.8842e-04, 1.1484e-04],
         [1.4476e-04, 8.1405e-04, 2.3931e-03,  ..., 9.9799e-01,
          9.9782e-01, 9.9966e-01],
         [1.4476e-04, 9.9756e-01, 9.9282e-01,  ..., 6.6971e-04,
          5.9564e-04, 1.1484e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5200e-03, 3.4989e-05, 1.5365e-07,  ..., 5.0808e-03,
          1.1003e-04, 4.8812e-03],
         [1.5200e-03, 3.4989e-05, 1.5365e-07,  ..., 5.0808e-03,
          1.1003e-04, 4.8812e-03],
         [9.9544e-01, 3.4989e-05, 1.5365e-07,  ..., 9.8402e-01,
          1.1003e-04, 9.8511e-01],
         [1.5200e-03, 9.9989e-01, 1.0000e+00,  ..., 5.8211e-03,
          9.9967e-01, 5.1317e-03]],
        [[2.4264e-03, 3.7337e-04, 2.7861e-05,  ..., 1.7920e-04,
          9.9977e-01, 2.4562e-03],
         [2.4264e-03, 3.7337e-04, 2.7861e-05,  ..., 1.7920e-04,
          7.8244e-05, 2.4562e-03],
         [9.9272e-01, 3.7337e-04, 2.7861e-05,  ..., 1.7920e-04,
          7.8244e-05, 9.9263e-01],
         [2.4264e-03, 9.9888e-01, 9.9992e-01,  ..., 9.9946e-01,
          7.8244e-05, 2.4562e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 601:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8728e-01, 1.5989e-03, 7.4589e-03,  ..., 6.4253e-05,
          4.6559e-04, 9.9323e-01],
         [4.0583e-03, 1.5989e-03, 7.4589e-03,  ..., 6.4253e-05,
          4.6559e-04, 1.6740e-03],
         [4.6004e-03, 1.6376e-03, 1.0302e-02,  ..., 9.9981e-01,
          9.9860e-01, 3.4244e-03],
         [4.0583e-03, 9.9516e-01, 9.7478e-01,  ..., 6.4253e-05,
          4.6559e-04, 1.6740e-03]],
        [[9.8650e-01, 2.8457e-03, 1.5245e-03,  ..., 2.4748e-04,
          4.3388e-05, 2.9121e-04],
         [6.3392e-03, 2.8457e-03, 1.5245e-03,  ..., 2.4748e-04,
          4.3388e-05, 2.9121e-04],
         [3.6344e-03, 3.7596e-03, 1.5245e-03,  ..., 9.9926e-01,
          9.9987e-01, 9.9913e-01],
         [3.5264e-03, 9.9055e-01, 9.9543e-01,  ..., 2.4748e-04,
          4.3388e-05, 2.9121e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:23:52,509 [Process: 0] Synchronize training processes
2024-08-18 15:23:52,509 [Process: 0] Evaluating...
2024-08-18 15:23:52,511 [Process: 0] EPOCH 601:
2024-08-18 15:23:52,513 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:53,641 [Process: 0] Synchronize training processes
2024-08-18 15:23:53,642 [Process: 0] Evaluating...
2024-08-18 15:23:53,645 [Process: 0] EPOCH 602:
2024-08-18 15:23:53,647 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5780e-03, 8.3978e-06, 7.9796e-03,  ..., 3.6231e-03,
          6.3630e-05, 6.2194e-04],
         [2.5780e-03, 8.3978e-06, 1.3041e-02,  ..., 3.4370e-03,
          6.3630e-05, 6.2194e-04],
         [9.9227e-01, 8.3978e-06, 7.9796e-03,  ..., 9.8950e-01,
          6.3630e-05, 9.9813e-01],
         [2.5780e-03, 9.9997e-01, 9.7100e-01,  ..., 3.4370e-03,
          9.9981e-01, 6.2194e-04]],
        [[3.0175e-03, 6.4682e-05, 6.7710e-05,  ..., 4.5946e-05,
          9.9574e-01, 2.6753e-03],
         [3.0175e-03, 6.4682e-05, 6.7710e-05,  ..., 4.5946e-05,
          2.0655e-03, 2.6753e-03],
         [9.9095e-01, 6.4682e-05, 6.7710e-05,  ..., 4.5946e-05,
          1.0987e-03, 9.9197e-01],
         [3.0175e-03, 9.9981e-01, 9.9980e-01,  ..., 9.9986e-01,
          1.0987e-03, 2.6753e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 602:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9068e-01, 1.0064e-02, 1.7964e-03,  ..., 6.0172e-04,
          1.0327e-04, 9.9821e-01],
         [2.9260e-03, 1.4024e-02, 1.8218e-03,  ..., 6.0172e-04,
          1.0327e-04, 8.6229e-04],
         [3.4668e-03, 2.0876e-02, 1.7964e-03,  ..., 9.9819e-01,
          9.9969e-01, 4.6424e-04],
         [2.9260e-03, 9.5504e-01, 9.9459e-01,  ..., 6.0172e-04,
          1.0327e-04, 4.6424e-04]],
        [[9.9960e-01, 1.0343e-02, 1.3959e-03,  ..., 1.1352e-04,
          2.8680e-04, 7.5188e-04],
         [1.3440e-04, 1.5034e-02, 1.3959e-03,  ..., 1.1352e-04,
          3.8661e-04, 7.5188e-04],
         [1.3440e-04, 1.3408e-02, 1.3959e-03,  ..., 9.9966e-01,
          9.9904e-01, 9.9774e-01],
         [1.3440e-04, 9.6121e-01, 9.9581e-01,  ..., 1.1352e-04,
          2.8680e-04, 7.5188e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.9695e-04, 2.4813e-04, 1.2330e-04,  ..., 1.2955e-03,
          5.3524e-04, 1.4572e-03],
         [8.9695e-04, 2.4813e-04, 1.2330e-04,  ..., 1.2955e-03,
          5.3524e-04, 1.4572e-03],
         [9.9731e-01, 2.4813e-04, 1.2330e-04,  ..., 9.9611e-01,
          5.3524e-04, 9.9563e-01],
         [8.9695e-04, 9.9926e-01, 9.9963e-01,  ..., 1.2955e-03,
          9.9839e-01, 1.4572e-03]],
        [[2.9600e-03, 3.3774e-04, 3.8838e-05,  ..., 7.1201e-05,
          9.9972e-01, 2.7652e-03],
         [2.9600e-03, 3.3774e-04, 3.8838e-05,  ..., 7.1201e-05,
          9.4749e-05, 2.7652e-03],
         [9.9112e-01, 3.3774e-04, 3.8838e-05,  ..., 7.1201e-05,
          9.4749e-05, 9.9170e-01],
         [2.9600e-03, 9.9899e-01, 9.9988e-01,  ..., 9.9979e-01,
          9.4749e-05, 2.7652e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 603:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9749e-01, 7.3043e-04, 7.3698e-03,  ..., 7.7094e-05,
          2.0005e-03, 9.9876e-01],
         [8.3583e-04, 7.3043e-04, 7.8281e-03,  ..., 7.7094e-05,
          2.0005e-03, 4.1387e-04],
         [8.3583e-04, 7.3043e-04, 1.2181e-02,  ..., 9.9977e-01,
          9.9400e-01, 4.1387e-04],
         [8.3583e-04, 9.9781e-01, 9.7262e-01,  ..., 7.7094e-05,
          2.0005e-03, 4.1387e-04]],
        [[9.9520e-01, 1.0718e-03, 1.0934e-03,  ..., 6.2701e-04,
          7.0649e-04, 3.1041e-04],
         [1.2577e-03, 1.0718e-03, 1.0934e-03,  ..., 6.2701e-04,
          1.4937e-03, 3.1041e-04],
         [2.2894e-03, 1.0718e-03, 1.0934e-03,  ..., 9.9812e-01,
          9.9709e-01, 9.9907e-01],
         [1.2577e-03, 9.9678e-01, 9.9672e-01,  ..., 6.2701e-04,
          7.0649e-04, 3.1041e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:54,777 [Process: 0] Synchronize training processes
2024-08-18 15:23:54,778 [Process: 0] Evaluating...
2024-08-18 15:23:54,779 [Process: 0] EPOCH 603:
2024-08-18 15:23:54,781 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:55,905 [Process: 0] Synchronize training processes
2024-08-18 15:23:55,905 [Process: 0] Evaluating...
2024-08-18 15:23:55,907 [Process: 0] EPOCH 604:
2024-08-18 15:23:55,909 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7101e-03, 4.1732e-06, 8.3991e-05,  ..., 1.8310e-03,
          6.6910e-05, 2.4522e-03],
         [1.7101e-03, 4.1732e-06, 8.3991e-05,  ..., 1.8310e-03,
          6.6910e-05, 2.4522e-03],
         [9.9487e-01, 4.1732e-06, 8.3991e-05,  ..., 9.9451e-01,
          6.6910e-05, 9.9264e-01],
         [1.7101e-03, 9.9999e-01, 9.9975e-01,  ..., 1.8310e-03,
          9.9980e-01, 2.4522e-03]],
        [[2.9543e-03, 8.0589e-04, 5.3702e-05,  ..., 2.5918e-04,
          9.9803e-01, 2.1874e-03],
         [2.9543e-03, 8.0589e-04, 5.3702e-05,  ..., 2.5918e-04,
          6.4753e-04, 2.1874e-03],
         [9.9114e-01, 8.0589e-04, 5.3702e-05,  ..., 2.5918e-04,
          6.4753e-04, 9.9344e-01],
         [2.9543e-03, 9.9758e-01, 9.9984e-01,  ..., 9.9922e-01,
          6.7258e-04, 2.1874e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 604:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9815e-01, 1.9206e-03, 2.5393e-03,  ..., 1.0909e-04,
          3.7337e-04, 9.9745e-01],
         [6.1645e-04, 1.9206e-03, 2.5393e-03,  ..., 1.0909e-04,
          3.7337e-04, 5.8159e-04],
         [6.1645e-04, 1.9206e-03, 2.5393e-03,  ..., 9.9967e-01,
          9.9888e-01, 1.3846e-03],
         [6.1645e-04, 9.9424e-01, 9.9238e-01,  ..., 1.0909e-04,
          3.7337e-04, 5.8159e-04]],
        [[9.6535e-01, 9.5118e-04, 2.5798e-02,  ..., 7.9731e-04,
          1.7708e-04, 3.3025e-05],
         [1.0281e-02, 9.5118e-04, 5.2796e-02,  ..., 8.9415e-04,
          1.7708e-04, 3.3025e-05],
         [1.1204e-02, 9.5118e-04, 3.9783e-02,  ..., 9.9751e-01,
          9.9947e-01, 9.9990e-01],
         [1.3168e-02, 9.9715e-01, 8.8162e-01,  ..., 7.9731e-04,
          1.7708e-04, 3.3025e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8227e-03, 1.7511e-05, 5.0091e-08,  ..., 2.3536e-03,
          2.5700e-04, 2.5245e-03],
         [2.8227e-03, 1.7511e-05, 5.0091e-08,  ..., 2.3536e-03,
          2.5700e-04, 2.5245e-03],
         [9.9153e-01, 1.7511e-05, 5.0091e-08,  ..., 9.9294e-01,
          2.5700e-04, 9.9243e-01],
         [2.8227e-03, 9.9995e-01, 1.0000e+00,  ..., 2.3536e-03,
          9.9923e-01, 2.5245e-03]],
        [[4.8301e-03, 7.7434e-05, 1.9130e-05,  ..., 2.0544e-04,
          9.9884e-01, 1.5149e-03],
         [4.8301e-03, 7.7434e-05, 1.9130e-05,  ..., 2.0544e-04,
          3.8549e-04, 1.5149e-03],
         [9.8470e-01, 7.7434e-05, 1.9130e-05,  ..., 2.0544e-04,
          3.8549e-04, 9.9546e-01],
         [5.6361e-03, 9.9977e-01, 9.9994e-01,  ..., 9.9938e-01,
          3.8549e-04, 1.5149e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 605:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9435e-01, 7.1819e-04, 1.4860e-03,  ..., 9.9862e-05,
          3.9747e-04, 9.9703e-01],
         [2.0016e-03, 7.1819e-04, 1.4860e-03,  ..., 9.9862e-05,
          3.9747e-04, 9.9103e-04],
         [1.8267e-03, 7.1819e-04, 1.4860e-03,  ..., 9.9970e-01,
          9.9881e-01, 9.9103e-04],
         [1.8267e-03, 9.9785e-01, 9.9554e-01,  ..., 9.9862e-05,
          3.9747e-04, 9.9103e-04]],
        [[9.9908e-01, 3.0986e-03, 1.9916e-03,  ..., 2.2646e-04,
          8.2339e-04, 8.4216e-04],
         [3.0568e-04, 3.6752e-03, 1.9916e-03,  ..., 2.2646e-04,
          1.4925e-03, 1.0446e-03],
         [3.0568e-04, 3.0986e-03, 1.9916e-03,  ..., 9.9932e-01,
          9.9686e-01, 9.9727e-01],
         [3.0568e-04, 9.9013e-01, 9.9403e-01,  ..., 2.2646e-04,
          8.2339e-04, 8.4216e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:23:57,034 [Process: 0] Synchronize training processes
2024-08-18 15:23:57,034 [Process: 0] Evaluating...
2024-08-18 15:23:57,036 [Process: 0] EPOCH 605:
2024-08-18 15:23:57,038 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5590e-03, 1.3144e-05, 1.3544e-07,  ..., 4.3286e-03,
          1.1208e-04, 2.1545e-03],
         [1.5590e-03, 1.3144e-05, 1.3544e-07,  ..., 4.3286e-03,
          1.1208e-04, 2.1545e-03],
         [9.9532e-01, 1.3144e-05, 1.3544e-07,  ..., 9.8618e-01,
          1.1208e-04, 9.9354e-01],
         [1.5590e-03, 9.9996e-01, 1.0000e+00,  ..., 5.1620e-03,
          9.9966e-01, 2.1545e-03]],
        [[3.8532e-03, 1.4411e-04, 5.9361e-05,  ..., 5.2634e-05,
          9.9997e-01, 1.0990e-03],
         [3.6850e-03, 1.4411e-04, 5.9361e-05,  ..., 5.2634e-05,
          1.0136e-05, 1.0990e-03],
         [9.8878e-01, 1.4411e-04, 5.9361e-05,  ..., 5.2634e-05,
          1.0136e-05, 9.9670e-01],
         [3.6850e-03, 9.9957e-01, 9.9982e-01,  ..., 9.9984e-01,
          1.0136e-05, 1.0990e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 606:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6690e-01, 2.0484e-03, 2.5754e-03,  ..., 4.9856e-05,
          1.2092e-03, 9.9846e-01],
         [8.5602e-03, 2.0484e-03, 2.5754e-03,  ..., 4.9856e-05,
          1.2092e-03, 5.1415e-04],
         [1.5464e-02, 2.0484e-03, 2.5754e-03,  ..., 9.9985e-01,
          9.9637e-01, 5.1415e-04],
         [9.0773e-03, 9.9385e-01, 9.9227e-01,  ..., 4.9856e-05,
          1.2092e-03, 5.1415e-04]],
        [[9.9001e-01, 2.3397e-03, 9.6423e-03,  ..., 4.1761e-04,
          1.2337e-03, 9.7918e-04],
         [3.1186e-03, 2.3397e-03, 1.1212e-02,  ..., 4.1761e-04,
          1.9137e-03, 1.2652e-03],
         [3.1186e-03, 2.3397e-03, 1.3306e-02,  ..., 9.9875e-01,
          9.9562e-01, 9.9678e-01],
         [3.7493e-03, 9.9298e-01, 9.6584e-01,  ..., 4.1761e-04,
          1.2337e-03, 9.7918e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0431e-03, 3.4057e-05, 1.1762e-04,  ..., 9.4748e-04,
          1.0355e-04, 2.1361e-03],
         [1.0431e-03, 3.4057e-05, 1.1762e-04,  ..., 9.4748e-04,
          1.0355e-04, 2.1361e-03],
         [9.9687e-01, 3.4057e-05, 1.1762e-04,  ..., 9.9716e-01,
          1.0355e-04, 9.9359e-01],
         [1.0431e-03, 9.9990e-01, 9.9965e-01,  ..., 9.4748e-04,
          9.9969e-01, 2.1361e-03]],
        [[1.3804e-03, 2.3896e-04, 1.9880e-05,  ..., 1.0391e-03,
          9.9631e-01, 1.1250e-02],
         [1.3804e-03, 2.3896e-04, 1.9880e-05,  ..., 1.0391e-03,
          1.2286e-03, 1.0243e-02],
         [9.9586e-01, 2.3896e-04, 1.9880e-05,  ..., 1.0391e-03,
          1.2286e-03, 9.6589e-01],
         [1.3804e-03, 9.9928e-01, 9.9994e-01,  ..., 9.9688e-01,
          1.2286e-03, 1.2616e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 607:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:58,175 [Process: 0] Synchronize training processes
2024-08-18 15:23:58,176 [Process: 0] Evaluating...
2024-08-18 15:23:58,177 [Process: 0] EPOCH 606:
2024-08-18 15:23:58,179 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:23:59,312 [Process: 0] Synchronize training processes
2024-08-18 15:23:59,312 [Process: 0] Evaluating...
2024-08-18 15:23:59,314 [Process: 0] EPOCH 607:
2024-08-18 15:23:59,316 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8603e-01, 8.5538e-03, 1.6346e-03,  ..., 4.2966e-05,
          1.7668e-03, 9.9828e-01],
         [4.2272e-03, 1.4255e-02, 1.6346e-03,  ..., 4.2966e-05,
          1.7668e-03, 5.7216e-04],
         [5.1750e-03, 1.4637e-02, 1.6346e-03,  ..., 9.9987e-01,
          9.9470e-01, 5.7216e-04],
         [4.5710e-03, 9.6255e-01, 9.9510e-01,  ..., 4.2966e-05,
          1.7668e-03, 5.7216e-04]],
        [[9.9259e-01, 1.0143e-03, 3.4250e-03,  ..., 1.9600e-04,
          5.8377e-05, 6.7679e-04],
         [2.8998e-03, 1.0143e-03, 3.4250e-03,  ..., 1.9600e-04,
          5.8377e-05, 6.7679e-04],
         [2.3789e-03, 1.0143e-03, 3.8968e-03,  ..., 9.9941e-01,
          9.9982e-01, 9.9797e-01],
         [2.1321e-03, 9.9696e-01, 9.8925e-01,  ..., 1.9600e-04,
          5.8377e-05, 6.7679e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6903e-03, 6.4279e-05, 9.7934e-05,  ..., 1.6183e-03,
          6.0772e-05, 1.5442e-03],
         [1.6903e-03, 6.4279e-05, 1.2317e-04,  ..., 1.6183e-03,
          6.0772e-05, 1.5442e-03],
         [9.9493e-01, 6.4279e-05, 9.7934e-05,  ..., 9.9515e-01,
          6.0772e-05, 9.9537e-01],
         [1.6903e-03, 9.9981e-01, 9.9968e-01,  ..., 1.6183e-03,
          9.9982e-01, 1.5442e-03]],
        [[1.6741e-03, 1.8310e-05, 4.5289e-06,  ..., 4.3924e-05,
          9.9779e-01, 2.1987e-03],
         [1.6741e-03, 1.8310e-05, 4.5289e-06,  ..., 4.3924e-05,
          7.3832e-04, 2.1987e-03],
         [9.9498e-01, 1.8310e-05, 4.5289e-06,  ..., 4.3924e-05,
          7.3832e-04, 9.9340e-01],
         [1.6741e-03, 9.9995e-01, 9.9999e-01,  ..., 9.9987e-01,
          7.3832e-04, 2.1987e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 608:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9237e-01, 2.2826e-03, 2.9088e-03,  ..., 1.1236e-04,
          3.8410e-05, 9.9692e-01],
         [2.3756e-03, 2.2826e-03, 2.9088e-03,  ..., 1.1236e-04,
          3.8410e-05, 9.3467e-04],
         [2.3756e-03, 2.2826e-03, 2.9088e-03,  ..., 9.9966e-01,
          9.9988e-01, 1.2118e-03],
         [2.8835e-03, 9.9315e-01, 9.9127e-01,  ..., 1.1236e-04,
          3.8410e-05, 9.3467e-04]],
        [[9.7553e-01, 1.8446e-03, 1.7667e-03,  ..., 7.5136e-04,
          7.3854e-05, 2.4728e-04],
         [1.2888e-02, 1.8446e-03, 1.7667e-03,  ..., 7.5136e-04,
          7.3854e-05, 2.4728e-04],
         [6.4672e-03, 1.8446e-03, 1.7667e-03,  ..., 9.9775e-01,
          9.9978e-01, 9.9926e-01],
         [5.1150e-03, 9.9447e-01, 9.9470e-01,  ..., 7.5136e-04,
          7.3854e-05, 2.4728e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8439e-03, 7.0627e-06, 4.1195e-05,  ..., 1.6078e-03,
          1.9613e-04, 1.5351e-03],
         [1.8439e-03, 7.0627e-06, 4.1195e-05,  ..., 1.6078e-03,
          1.9613e-04, 1.5351e-03],
         [9.9447e-01, 7.0627e-06, 4.1195e-05,  ..., 9.9518e-01,
          1.9613e-04, 9.9539e-01],
         [1.8439e-03, 9.9998e-01, 9.9988e-01,  ..., 1.6078e-03,
          9.9941e-01, 1.5351e-03]],
        [[1.5269e-03, 1.6403e-05, 4.2288e-05,  ..., 1.4240e-05,
          9.9671e-01, 5.6315e-03],
         [1.5269e-03, 1.6403e-05, 4.2288e-05,  ..., 1.4240e-05,
          1.0968e-03, 5.6676e-03],
         [9.9542e-01, 1.6403e-05, 4.2288e-05,  ..., 1.4240e-05,
          1.0968e-03, 9.8250e-01],
         [1.5269e-03, 9.9995e-01, 9.9987e-01,  ..., 9.9996e-01,
          1.0968e-03, 6.2052e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:00,443 [Process: 0] Synchronize training processes
2024-08-18 15:24:00,443 [Process: 0] Evaluating...
2024-08-18 15:24:00,445 [Process: 0] EPOCH 608:
2024-08-18 15:24:00,447 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:01,576 [Process: 0] Synchronize training processes
2024-08-18 15:24:01,576 [Process: 0] Evaluating...
2024-08-18 15:24:01,578 [Process: 0] EPOCH 609:
2024-08-18 15:24:01,580 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 609:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8729e-01, 1.9609e-03, 2.2417e-03,  ..., 3.2954e-04,
          2.8592e-04, 9.9746e-01],
         [4.2374e-03, 1.9609e-03, 2.2417e-03,  ..., 3.2954e-04,
          2.8592e-04, 7.3161e-04],
         [4.2374e-03, 1.9609e-03, 2.2417e-03,  ..., 9.9901e-01,
          9.9914e-01, 1.0788e-03],
         [4.2374e-03, 9.9412e-01, 9.9328e-01,  ..., 3.2954e-04,
          2.8592e-04, 7.3161e-04]],
        [[9.9511e-01, 1.5181e-03, 1.7498e-03,  ..., 2.7740e-04,
          1.1899e-03, 6.4661e-04],
         [1.2062e-03, 1.5181e-03, 1.7498e-03,  ..., 2.7740e-04,
          3.4435e-03, 6.4661e-04],
         [2.4773e-03, 1.5181e-03, 1.7498e-03,  ..., 9.9917e-01,
          9.9418e-01, 9.9806e-01],
         [1.2062e-03, 9.9545e-01, 9.9475e-01,  ..., 2.7740e-04,
          1.1899e-03, 6.4661e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3938e-03, 9.5446e-06, 9.1003e-06,  ..., 2.8276e-03,
          2.1255e-05, 7.4079e-04],
         [1.3938e-03, 9.5446e-06, 9.1003e-06,  ..., 2.8276e-03,
          2.1255e-05, 7.4079e-04],
         [9.9582e-01, 9.5446e-06, 9.1003e-06,  ..., 9.9122e-01,
          2.1255e-05, 9.9778e-01],
         [1.3938e-03, 9.9997e-01, 9.9997e-01,  ..., 3.1232e-03,
          9.9994e-01, 7.4079e-04]],
        [[6.0215e-03, 9.2841e-05, 4.7275e-05,  ..., 3.9025e-04,
          9.9847e-01, 3.7194e-03],
         [6.0215e-03, 9.2841e-05, 4.7275e-05,  ..., 3.9025e-04,
          5.0919e-04, 3.7194e-03],
         [9.7941e-01, 9.2841e-05, 4.7275e-05,  ..., 3.9025e-04,
          5.0919e-04, 9.8843e-01],
         [8.5420e-03, 9.9972e-01, 9.9986e-01,  ..., 9.9883e-01,
          5.0919e-04, 4.1346e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 610:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9254e-01, 3.4347e-03, 1.8560e-03,  ..., 4.2119e-05,
          7.4687e-05, 9.9953e-01],
         [2.8214e-03, 3.4347e-03, 1.8560e-03,  ..., 4.2119e-05,
          7.4687e-05, 1.5805e-04],
         [2.3169e-03, 3.5466e-03, 1.8560e-03,  ..., 9.9987e-01,
          9.9978e-01, 1.5805e-04],
         [2.3169e-03, 9.8958e-01, 9.9443e-01,  ..., 4.2119e-05,
          7.4687e-05, 1.5805e-04]],
        [[9.9790e-01, 2.1386e-03, 1.4531e-03,  ..., 7.6540e-04,
          8.6310e-05, 3.4583e-04],
         [6.9911e-04, 2.1386e-03, 1.4531e-03,  ..., 7.6540e-04,
          8.6310e-05, 3.7576e-04],
         [6.9911e-04, 2.1386e-03, 1.4531e-03,  ..., 9.9770e-01,
          9.9974e-01, 9.9893e-01],
         [6.9911e-04, 9.9358e-01, 9.9564e-01,  ..., 7.6540e-04,
          8.6310e-05, 3.4583e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:02,709 [Process: 0] Synchronize training processes
2024-08-18 15:24:02,710 [Process: 0] Evaluating...
2024-08-18 15:24:02,711 [Process: 0] EPOCH 610:
2024-08-18 15:24:02,713 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:03,834 [Process: 0] Synchronize training processes
2024-08-18 15:24:03,835 [Process: 0] Evaluating...
2024-08-18 15:24:03,836 [Process: 0] EPOCH 611:
2024-08-18 15:24:03,838 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9408e-03, 4.4881e-04, 1.3781e-04,  ..., 2.3693e-03,
          1.2918e-03, 3.7003e-03],
         [1.9408e-03, 4.4881e-04, 1.3781e-04,  ..., 2.3693e-03,
          1.2918e-03, 3.7003e-03],
         [9.9418e-01, 4.4881e-04, 1.3781e-04,  ..., 9.9270e-01,
          1.2918e-03, 9.8890e-01],
         [1.9408e-03, 9.9865e-01, 9.9959e-01,  ..., 2.5591e-03,
          9.9612e-01, 3.7003e-03]],
        [[2.4794e-03, 4.7222e-04, 3.6789e-05,  ..., 5.2817e-04,
          9.8610e-01, 2.5648e-03],
         [2.4794e-03, 4.7222e-04, 3.6789e-05,  ..., 5.2817e-04,
          4.2440e-03, 2.5648e-03],
         [9.9256e-01, 4.7222e-04, 3.6789e-05,  ..., 5.2817e-04,
          5.4071e-03, 9.9200e-01],
         [2.4794e-03, 9.9858e-01, 9.9989e-01,  ..., 9.9842e-01,
          4.2440e-03, 2.8656e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 611:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9912e-01, 8.9333e-03, 4.6044e-03,  ..., 2.3688e-04,
          5.2153e-04, 9.9877e-01],
         [2.9332e-04, 9.4415e-03, 4.6044e-03,  ..., 2.3688e-04,
          5.2153e-04, 4.1129e-04],
         [2.9332e-04, 1.6701e-02, 5.6167e-03,  ..., 9.9929e-01,
          9.9844e-01, 4.1129e-04],
         [2.9332e-04, 9.6492e-01, 9.8517e-01,  ..., 2.3688e-04,
          5.2153e-04, 4.1129e-04]],
        [[9.9762e-01, 5.7518e-04, 1.1536e-03,  ..., 6.4568e-04,
          1.0920e-04, 1.1704e-04],
         [7.5124e-04, 5.7518e-04, 1.1536e-03,  ..., 6.4568e-04,
          1.2613e-04, 1.1704e-04],
         [8.7784e-04, 5.7518e-04, 1.1536e-03,  ..., 9.9806e-01,
          9.9966e-01, 9.9965e-01],
         [7.5124e-04, 9.9827e-01, 9.9654e-01,  ..., 6.4568e-04,
          1.0920e-04, 1.1704e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7058e-03, 1.6853e-05, 1.6029e-06,  ..., 5.7272e-03,
          2.1776e-05, 1.6273e-03],
         [1.7058e-03, 1.6853e-05, 1.6029e-06,  ..., 5.7272e-03,
          2.1776e-05, 1.6273e-03],
         [9.9488e-01, 1.6853e-05, 1.6029e-06,  ..., 9.8109e-01,
          2.1776e-05, 9.9512e-01],
         [1.7058e-03, 9.9995e-01, 1.0000e+00,  ..., 7.4605e-03,
          9.9993e-01, 1.6273e-03]],
        [[2.1022e-03, 1.1682e-04, 2.3131e-04,  ..., 1.2664e-04,
          9.9859e-01, 2.4439e-03],
         [2.1022e-03, 1.1682e-04, 2.3131e-04,  ..., 1.2664e-04,
          4.7112e-04, 2.4439e-03],
         [9.9369e-01, 1.1682e-04, 2.3131e-04,  ..., 1.2664e-04,
          4.7112e-04, 9.9266e-01],
         [2.1022e-03, 9.9965e-01, 9.9931e-01,  ..., 9.9962e-01,
          4.7112e-04, 2.4509e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 612:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9782e-01, 2.4833e-03, 4.7037e-03,  ..., 8.0248e-04,
          9.0873e-04, 9.9953e-01],
         [7.2735e-04, 2.4833e-03, 4.7037e-03,  ..., 1.4874e-03,
          1.4589e-03, 1.5589e-04],
         [7.2735e-04, 2.4833e-03, 5.7546e-03,  ..., 9.9691e-01,
          9.9672e-01, 1.5589e-04],
         [7.2735e-04, 9.9255e-01, 9.8484e-01,  ..., 8.0248e-04,
          9.0873e-04, 1.5589e-04]],
        [[9.9876e-01, 1.6829e-03, 4.8763e-04,  ..., 2.0485e-04,
          4.2977e-04, 1.9075e-04],
         [4.1180e-04, 1.6829e-03, 4.8763e-04,  ..., 2.0485e-04,
          5.1085e-04, 1.9075e-04],
         [4.1180e-04, 1.6840e-03, 4.8763e-04,  ..., 9.9939e-01,
          9.9863e-01, 9.9943e-01],
         [4.1180e-04, 9.9495e-01, 9.9854e-01,  ..., 2.0485e-04,
          4.2977e-04, 1.9075e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:04,966 [Process: 0] Synchronize training processes
2024-08-18 15:24:04,966 [Process: 0] Evaluating...
2024-08-18 15:24:04,970 [Process: 0] EPOCH 612:
2024-08-18 15:24:04,972 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.4388e-04, 5.9049e-06, 4.2739e-04,  ..., 2.5013e-03,
          6.9619e-05, 8.0718e-04],
         [7.4388e-04, 5.9049e-06, 4.2739e-04,  ..., 2.5013e-03,
          6.9619e-05, 8.0718e-04],
         [9.9777e-01, 5.9049e-06, 4.2739e-04,  ..., 9.9250e-01,
          6.9619e-05, 9.9758e-01],
         [7.4388e-04, 9.9998e-01, 9.9872e-01,  ..., 2.5013e-03,
          9.9979e-01, 8.0718e-04]],
        [[1.1756e-03, 2.4437e-04, 1.9776e-04,  ..., 2.8292e-04,
          9.9827e-01, 9.9378e-04],
         [1.1756e-03, 2.4437e-04, 1.9776e-04,  ..., 2.8292e-04,
          5.7535e-04, 9.9378e-04],
         [9.9647e-01, 2.4437e-04, 1.9776e-04,  ..., 2.8292e-04,
          5.7535e-04, 9.9702e-01],
         [1.1756e-03, 9.9927e-01, 9.9941e-01,  ..., 9.9915e-01,
          5.7535e-04, 9.9378e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 613:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9882e-01, 1.2604e-03, 8.1139e-04,  ..., 1.6669e-04,
          2.6161e-04, 9.9748e-01],
         [3.9386e-04, 1.2604e-03, 8.1139e-04,  ..., 1.6669e-04,
          3.0626e-04, 8.4037e-04],
         [3.9386e-04, 1.2604e-03, 8.1139e-04,  ..., 9.9950e-01,
          9.9917e-01, 8.4037e-04],
         [3.9386e-04, 9.9622e-01, 9.9757e-01,  ..., 1.6669e-04,
          2.6161e-04, 8.4037e-04]],
        [[9.9416e-01, 3.1419e-03, 3.3779e-03,  ..., 3.7524e-04,
          5.8398e-05, 1.7596e-04],
         [1.5308e-03, 3.1419e-03, 3.3779e-03,  ..., 3.7524e-04,
          5.8398e-05, 2.0417e-04],
         [2.7744e-03, 3.7242e-03, 3.5598e-03,  ..., 9.9887e-01,
          9.9982e-01, 9.9944e-01],
         [1.5308e-03, 9.8999e-01, 9.8968e-01,  ..., 3.7524e-04,
          5.8398e-05, 1.7596e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1101e-03, 2.4247e-05, 3.6451e-06,  ..., 2.0082e-03,
          6.0069e-04, 1.0345e-03],
         [1.1101e-03, 2.4247e-05, 3.6451e-06,  ..., 2.0082e-03,
          6.0069e-04, 1.0345e-03],
         [9.9667e-01, 2.4247e-05, 3.6451e-06,  ..., 9.9398e-01,
          6.0069e-04, 9.9690e-01],
         [1.1101e-03, 9.9993e-01, 9.9999e-01,  ..., 2.0082e-03,
          9.9820e-01, 1.0345e-03]],
        [[5.1324e-03, 2.9121e-05, 3.2425e-04,  ..., 1.2758e-04,
          9.9938e-01, 1.7175e-03],
         [5.1324e-03, 2.9121e-05, 3.2425e-04,  ..., 1.2758e-04,
          1.9266e-04, 1.7175e-03],
         [9.8381e-01, 2.9121e-05, 3.2425e-04,  ..., 1.2758e-04,
          1.9266e-04, 9.9485e-01],
         [5.9260e-03, 9.9991e-01, 9.9903e-01,  ..., 9.9962e-01,
          2.3596e-04, 1.7175e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 614:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:06,099 [Process: 0] Synchronize training processes
2024-08-18 15:24:06,099 [Process: 0] Evaluating...
2024-08-18 15:24:06,101 [Process: 0] EPOCH 613:
2024-08-18 15:24:06,103 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:07,228 [Process: 0] Synchronize training processes
2024-08-18 15:24:07,228 [Process: 0] Evaluating...
2024-08-18 15:24:07,230 [Process: 0] EPOCH 614:
2024-08-18 15:24:07,232 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9788e-01, 3.0814e-03, 4.4346e-03,  ..., 5.4609e-05,
          9.9737e-05, 9.9814e-01],
         [7.0788e-04, 3.0814e-03, 4.4346e-03,  ..., 5.4609e-05,
          9.9737e-05, 6.2004e-04],
         [7.0788e-04, 3.7240e-03, 6.3344e-03,  ..., 9.9984e-01,
          9.9970e-01, 6.2004e-04],
         [7.0788e-04, 9.9011e-01, 9.8480e-01,  ..., 5.4609e-05,
          9.9737e-05, 6.2004e-04]],
        [[9.9946e-01, 1.8363e-03, 1.7996e-03,  ..., 3.1020e-04,
          5.2957e-04, 1.9662e-04],
         [1.8038e-04, 1.8363e-03, 1.7996e-03,  ..., 3.1020e-04,
          5.2957e-04, 1.9662e-04],
         [1.8038e-04, 1.8363e-03, 1.7996e-03,  ..., 9.9907e-01,
          9.9841e-01, 9.9941e-01],
         [1.8038e-04, 9.9449e-01, 9.9460e-01,  ..., 3.1020e-04,
          5.2957e-04, 1.9662e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3147e-03, 4.8553e-06, 7.8412e-08,  ..., 2.6122e-03,
          6.3365e-05, 2.9448e-03],
         [4.3147e-03, 4.8553e-06, 7.8412e-08,  ..., 2.6122e-03,
          6.3365e-05, 2.9448e-03],
         [9.8706e-01, 4.8553e-06, 7.8412e-08,  ..., 9.9216e-01,
          6.3365e-05, 9.9115e-01],
         [4.3147e-03, 9.9999e-01, 1.0000e+00,  ..., 2.6122e-03,
          9.9981e-01, 2.9641e-03]],
        [[1.1777e-03, 1.2346e-05, 1.0655e-05,  ..., 2.7862e-04,
          9.9847e-01, 6.0385e-03],
         [1.1777e-03, 1.2346e-05, 1.0655e-05,  ..., 2.7862e-04,
          5.0875e-04, 6.0385e-03],
         [9.9647e-01, 1.2346e-05, 1.0655e-05,  ..., 2.7862e-04,
          5.0875e-04, 9.7847e-01],
         [1.1777e-03, 9.9996e-01, 9.9997e-01,  ..., 9.9916e-01,
          5.0875e-04, 9.4551e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 615:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9771e-01, 9.0729e-04, 1.6069e-03,  ..., 5.0287e-04,
          8.0509e-04, 9.9109e-01],
         [7.6379e-04, 9.0729e-04, 1.6069e-03,  ..., 5.0287e-04,
          9.1423e-04, 2.6408e-03],
         [7.6379e-04, 9.0729e-04, 1.6069e-03,  ..., 9.9849e-01,
          9.9748e-01, 3.6310e-03],
         [7.6379e-04, 9.9728e-01, 9.9518e-01,  ..., 5.0287e-04,
          8.0509e-04, 2.6408e-03]],
        [[9.9589e-01, 2.8446e-03, 3.1887e-03,  ..., 3.2785e-04,
          6.1035e-05, 1.5697e-04],
         [1.2203e-03, 2.8446e-03, 3.1887e-03,  ..., 3.2785e-04,
          6.1035e-05, 1.5697e-04],
         [1.6702e-03, 2.8446e-03, 3.1887e-03,  ..., 9.9902e-01,
          9.9982e-01, 9.9953e-01],
         [1.2203e-03, 9.9147e-01, 9.9043e-01,  ..., 3.2785e-04,
          6.1035e-05, 1.5697e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1189e-03, 2.7602e-05, 6.0985e-06,  ..., 2.0209e-03,
          2.5235e-04, 3.5089e-03],
         [2.1189e-03, 2.7602e-05, 6.0985e-06,  ..., 2.0209e-03,
          2.5235e-04, 3.5089e-03],
         [9.9364e-01, 2.7602e-05, 6.0985e-06,  ..., 9.9394e-01,
          2.5235e-04, 9.8921e-01],
         [2.1189e-03, 9.9992e-01, 9.9998e-01,  ..., 2.0209e-03,
          9.9924e-01, 3.7732e-03]],
        [[2.5181e-03, 5.0303e-05, 6.4107e-05,  ..., 3.5466e-05,
          9.9989e-01, 9.6183e-04],
         [2.5181e-03, 5.0303e-05, 6.4107e-05,  ..., 3.5466e-05,
          3.5735e-05, 9.6183e-04],
         [9.9245e-01, 5.0303e-05, 6.4107e-05,  ..., 3.5466e-05,
          3.5735e-05, 9.9711e-01],
         [2.5181e-03, 9.9985e-01, 9.9981e-01,  ..., 9.9989e-01,
          3.5735e-05, 9.6183e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 616:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:08,347 [Process: 0] Synchronize training processes
2024-08-18 15:24:08,347 [Process: 0] Evaluating...
2024-08-18 15:24:08,349 [Process: 0] EPOCH 615:
2024-08-18 15:24:08,351 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:09,466 [Process: 0] Synchronize training processes
2024-08-18 15:24:09,466 [Process: 0] Evaluating...
2024-08-18 15:24:09,468 [Process: 0] EPOCH 616:
2024-08-18 15:24:09,470 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9977e-01, 4.6124e-03, 3.2168e-03,  ..., 2.4902e-04,
          1.9250e-04, 9.9291e-01],
         [7.7205e-05, 5.4591e-03, 3.2168e-03,  ..., 2.4902e-04,
          1.9250e-04, 1.7061e-03],
         [7.7205e-05, 5.9334e-03, 3.2168e-03,  ..., 9.9925e-01,
          9.9942e-01, 3.6762e-03],
         [7.7205e-05, 9.8400e-01, 9.9035e-01,  ..., 2.4902e-04,
          1.9250e-04, 1.7061e-03]],
        [[9.9319e-01, 1.0843e-03, 7.7237e-03,  ..., 7.0554e-05,
          3.0836e-04, 1.4840e-04],
         [1.6938e-03, 1.0843e-03, 1.4424e-02,  ..., 7.0554e-05,
          4.6288e-04, 1.4840e-04],
         [3.4194e-03, 1.0843e-03, 9.8078e-03,  ..., 9.9979e-01,
          9.9892e-01, 9.9955e-01],
         [1.6938e-03, 9.9675e-01, 9.6804e-01,  ..., 7.0554e-05,
          3.0836e-04, 1.4840e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2783e-03, 6.5272e-05, 5.0031e-04,  ..., 6.1715e-03,
          1.1800e-04, 6.0973e-03],
         [2.2783e-03, 6.5272e-05, 5.0031e-04,  ..., 5.0866e-03,
          1.1800e-04, 6.3643e-03],
         [9.9317e-01, 6.5272e-05, 5.0031e-04,  ..., 9.8366e-01,
          1.1800e-04, 9.8054e-01],
         [2.2783e-03, 9.9980e-01, 9.9850e-01,  ..., 5.0866e-03,
          9.9965e-01, 6.9989e-03]],
        [[3.4536e-03, 8.8593e-05, 3.9832e-05,  ..., 7.1262e-04,
          9.9866e-01, 6.6473e-03],
         [3.4536e-03, 8.8593e-05, 3.9832e-05,  ..., 7.1262e-04,
          4.4580e-04, 6.6473e-03],
         [9.8964e-01, 8.8593e-05, 3.9832e-05,  ..., 7.1262e-04,
          4.4580e-04, 9.7653e-01],
         [3.4536e-03, 9.9973e-01, 9.9988e-01,  ..., 9.9786e-01,
          4.4580e-04, 1.0172e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 617:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9328e-01, 4.5943e-03, 3.1492e-02,  ..., 3.6652e-04,
          3.2783e-05, 9.9920e-01],
         [3.4787e-03, 5.4676e-03, 2.5546e-02,  ..., 3.6652e-04,
          3.2783e-05, 2.6744e-04],
         [1.6207e-03, 4.5943e-03, 4.2062e-02,  ..., 9.9890e-01,
          9.9990e-01, 2.6744e-04],
         [1.6207e-03, 9.8534e-01, 9.0090e-01,  ..., 3.6652e-04,
          3.2783e-05, 2.6744e-04]],
        [[9.9723e-01, 1.1194e-03, 1.8037e-03,  ..., 9.1102e-05,
          2.5536e-04, 1.4385e-04],
         [9.2458e-04, 1.1194e-03, 1.8037e-03,  ..., 9.1102e-05,
          2.6757e-04, 1.8473e-04],
         [9.2458e-04, 1.1194e-03, 1.8037e-03,  ..., 9.9973e-01,
          9.9922e-01, 9.9953e-01],
         [9.2458e-04, 9.9664e-01, 9.9459e-01,  ..., 9.1102e-05,
          2.5536e-04, 1.4385e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7625e-03, 2.0491e-04, 7.6499e-05,  ..., 2.0818e-03,
          1.7233e-04, 2.0850e-03],
         [1.7625e-03, 2.0491e-04, 1.1076e-04,  ..., 2.0818e-03,
          1.7233e-04, 2.0850e-03],
         [9.9471e-01, 2.0491e-04, 7.6499e-05,  ..., 9.9375e-01,
          1.7233e-04, 9.9375e-01],
         [1.7625e-03, 9.9939e-01, 9.9974e-01,  ..., 2.0818e-03,
          9.9948e-01, 2.0850e-03]],
        [[1.2582e-03, 6.6779e-05, 6.1523e-05,  ..., 1.6892e-04,
          9.9881e-01, 1.7400e-03],
         [1.2582e-03, 6.6779e-05, 6.1523e-05,  ..., 1.6892e-04,
          3.9671e-04, 1.7400e-03],
         [9.9623e-01, 6.6779e-05, 6.1523e-05,  ..., 1.6892e-04,
          3.9671e-04, 9.9478e-01],
         [1.2582e-03, 9.9980e-01, 9.9982e-01,  ..., 9.9949e-01,
          3.9671e-04, 1.7400e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:10,594 [Process: 0] Synchronize training processes
2024-08-18 15:24:10,594 [Process: 0] Evaluating...
2024-08-18 15:24:10,596 [Process: 0] EPOCH 617:
2024-08-18 15:24:10,598 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:11,724 [Process: 0] Synchronize training processes
2024-08-18 15:24:11,725 [Process: 0] Evaluating...
2024-08-18 15:24:11,726 [Process: 0] EPOCH 618:
2024-08-18 15:24:11,728 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 618:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7845e-01, 8.2487e-03, 6.7015e-03,  ..., 2.0631e-04,
          2.6833e-05, 9.9978e-01],
         [6.5084e-03, 2.0785e-02, 7.2892e-03,  ..., 2.0631e-04,
          2.6833e-05, 7.4710e-05],
         [5.4600e-03, 8.6978e-03, 7.3652e-03,  ..., 9.9938e-01,
          9.9992e-01, 7.4710e-05],
         [9.5857e-03, 9.6227e-01, 9.7864e-01,  ..., 2.0631e-04,
          2.6833e-05, 7.4710e-05]],
        [[9.9881e-01, 8.7841e-04, 9.6334e-03,  ..., 3.9014e-04,
          3.1087e-04, 3.6019e-04],
         [3.9703e-04, 8.7841e-04, 2.5797e-02,  ..., 3.9014e-04,
          4.7216e-04, 3.6019e-04],
         [3.9703e-04, 8.7841e-04, 1.1245e-02,  ..., 9.9883e-01,
          9.9891e-01, 9.9892e-01],
         [3.9703e-04, 9.9736e-01, 9.5333e-01,  ..., 3.9014e-04,
          3.1087e-04, 3.6019e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6088e-03, 7.6564e-06, 5.8695e-06,  ..., 2.2558e-03,
          3.1820e-04, 1.9962e-03],
         [1.6088e-03, 7.6564e-06, 5.8695e-06,  ..., 2.2558e-03,
          3.1820e-04, 1.9962e-03],
         [9.9517e-01, 7.6564e-06, 5.8695e-06,  ..., 9.9323e-01,
          3.1820e-04, 9.9401e-01],
         [1.6088e-03, 9.9998e-01, 9.9998e-01,  ..., 2.2558e-03,
          9.9905e-01, 1.9962e-03]],
        [[1.6437e-03, 2.2748e-04, 1.9998e-04,  ..., 4.9694e-05,
          9.9819e-01, 4.3921e-04],
         [1.6437e-03, 2.2748e-04, 1.9998e-04,  ..., 4.9694e-05,
          5.5548e-04, 4.3921e-04],
         [9.9507e-01, 2.2748e-04, 1.9998e-04,  ..., 4.9694e-05,
          5.5548e-04, 9.9868e-01],
         [1.6437e-03, 9.9932e-01, 9.9940e-01,  ..., 9.9985e-01,
          6.9593e-04, 4.3921e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 619:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9871e-01, 8.5476e-03, 1.2755e-03,  ..., 6.0148e-04,
          7.2021e-04, 9.9908e-01],
         [4.2831e-04, 8.8562e-03, 1.2755e-03,  ..., 6.0148e-04,
          7.2021e-04, 3.0591e-04],
         [4.2831e-04, 1.6180e-02, 1.2755e-03,  ..., 9.9820e-01,
          9.9784e-01, 3.0591e-04],
         [4.2831e-04, 9.6642e-01, 9.9617e-01,  ..., 6.0148e-04,
          7.2021e-04, 3.0591e-04]],
        [[9.9912e-01, 1.8620e-03, 2.3734e-03,  ..., 3.9582e-04,
          4.8944e-04, 6.0840e-04],
         [2.7852e-04, 1.8620e-03, 2.3734e-03,  ..., 3.9582e-04,
          1.2429e-03, 6.3323e-04],
         [3.2383e-04, 1.8620e-03, 2.3734e-03,  ..., 9.9881e-01,
          9.9778e-01, 9.9815e-01],
         [2.7852e-04, 9.9441e-01, 9.9288e-01,  ..., 3.9582e-04,
          4.8944e-04, 6.0840e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:12,850 [Process: 0] Synchronize training processes
2024-08-18 15:24:12,850 [Process: 0] Evaluating...
2024-08-18 15:24:12,852 [Process: 0] EPOCH 619:
2024-08-18 15:24:12,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2846e-03, 2.0260e-05, 7.6449e-06,  ..., 1.4359e-03,
          6.9491e-04, 8.0625e-04],
         [4.2846e-03, 2.0260e-05, 7.6449e-06,  ..., 1.4359e-03,
          6.9491e-04, 8.0625e-04],
         [9.8639e-01, 2.0260e-05, 7.6449e-06,  ..., 9.9569e-01,
          6.9491e-04, 9.9758e-01],
         [5.0386e-03, 9.9994e-01, 9.9998e-01,  ..., 1.4359e-03,
          9.9792e-01, 8.0625e-04]],
        [[1.1542e-03, 4.5305e-05, 1.0879e-05,  ..., 9.7749e-05,
          9.9982e-01, 1.7269e-03],
         [1.1542e-03, 4.5305e-05, 1.0879e-05,  ..., 9.7749e-05,
          5.8783e-05, 1.7269e-03],
         [9.9654e-01, 4.5305e-05, 1.0879e-05,  ..., 9.7749e-05,
          5.8783e-05, 9.9482e-01],
         [1.1542e-03, 9.9986e-01, 9.9997e-01,  ..., 9.9971e-01,
          5.8783e-05, 1.7269e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 620:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9581e-01, 4.1238e-03, 1.5290e-03,  ..., 7.9008e-04,
          3.3670e-04, 9.9793e-01],
         [1.4895e-03, 4.1238e-03, 1.5290e-03,  ..., 7.9008e-04,
          3.3670e-04, 6.6072e-04],
         [1.3508e-03, 4.1238e-03, 1.5290e-03,  ..., 9.9763e-01,
          9.9899e-01, 7.4886e-04],
         [1.3508e-03, 9.8763e-01, 9.9541e-01,  ..., 7.9008e-04,
          3.3670e-04, 6.6072e-04]],
        [[9.9919e-01, 1.4931e-03, 3.8561e-03,  ..., 3.6106e-04,
          5.9041e-05, 1.2783e-04],
         [2.6978e-04, 1.4931e-03, 3.8561e-03,  ..., 3.6106e-04,
          5.9041e-05, 1.2783e-04],
         [2.6978e-04, 1.4931e-03, 3.8938e-03,  ..., 9.9892e-01,
          9.9982e-01, 9.9962e-01],
         [2.6978e-04, 9.9552e-01, 9.8839e-01,  ..., 3.6106e-04,
          5.9041e-05, 1.2783e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.2880e-04, 1.6952e-06, 5.1336e-06,  ..., 3.7186e-03,
          4.0542e-04, 1.5738e-03],
         [5.2880e-04, 1.6952e-06, 5.1336e-06,  ..., 3.7186e-03,
          4.0542e-04, 1.5738e-03],
         [9.9841e-01, 1.6952e-06, 5.1336e-06,  ..., 9.8869e-01,
          4.0542e-04, 9.9528e-01],
         [5.2880e-04, 9.9999e-01, 9.9998e-01,  ..., 3.8712e-03,
          9.9878e-01, 1.5738e-03]],
        [[3.9985e-03, 4.7440e-06, 6.1489e-05,  ..., 3.0064e-04,
          9.9652e-01, 1.2315e-03],
         [3.9985e-03, 4.7440e-06, 6.1489e-05,  ..., 3.0064e-04,
          9.8956e-04, 1.2315e-03],
         [9.8791e-01, 4.7440e-06, 6.1489e-05,  ..., 3.0064e-04,
          9.8956e-04, 9.9631e-01],
         [4.0935e-03, 9.9999e-01, 9.9982e-01,  ..., 9.9910e-01,
          1.5018e-03, 1.2315e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 621:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9396e-01, 1.8369e-03, 8.2265e-04,  ..., 1.8861e-04,
          1.7663e-03, 9.9941e-01],
         [1.9897e-03, 1.8369e-03, 8.2265e-04,  ..., 1.8861e-04,
          1.7663e-03, 1.9768e-04],
         [1.9897e-03, 1.8369e-03, 8.2265e-04,  ..., 9.9943e-01,
          9.9470e-01, 1.9768e-04],
         [2.0628e-03, 9.9449e-01, 9.9753e-01,  ..., 1.8861e-04,
          1.7663e-03, 1.9768e-04]],
        [[9.2658e-01, 1.1089e-03, 5.1283e-03,  ..., 7.2933e-04,
          2.4136e-04, 7.7553e-04],
         [3.3135e-02, 1.1089e-03, 5.8782e-03,  ..., 7.2933e-04,
          2.4136e-04, 7.7553e-04],
         [3.0119e-02, 1.1089e-03, 5.1283e-03,  ..., 9.9781e-01,
          9.9928e-01, 9.9767e-01],
         [1.0168e-02, 9.9667e-01, 9.8387e-01,  ..., 7.2933e-04,
          2.4136e-04, 7.7553e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:13,975 [Process: 0] Synchronize training processes
2024-08-18 15:24:13,975 [Process: 0] Evaluating...
2024-08-18 15:24:13,977 [Process: 0] EPOCH 620:
2024-08-18 15:24:13,979 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:15,103 [Process: 0] Synchronize training processes
2024-08-18 15:24:15,103 [Process: 0] Evaluating...
2024-08-18 15:24:15,105 [Process: 0] EPOCH 621:
2024-08-18 15:24:15,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1719e-03, 1.0350e-05, 9.1644e-07,  ..., 1.2816e-03,
          1.1259e-04, 2.5305e-03],
         [1.1719e-03, 1.0350e-05, 9.1644e-07,  ..., 1.2816e-03,
          1.1259e-04, 2.9435e-03],
         [9.9648e-01, 1.0350e-05, 9.1644e-07,  ..., 9.9616e-01,
          1.1259e-04, 9.9200e-01],
         [1.1719e-03, 9.9997e-01, 1.0000e+00,  ..., 1.2816e-03,
          9.9966e-01, 2.5305e-03]],
        [[3.7189e-03, 1.6168e-05, 9.3771e-05,  ..., 1.0982e-03,
          9.9891e-01, 3.6314e-03],
         [3.7189e-03, 1.6168e-05, 9.3771e-05,  ..., 1.0982e-03,
          3.6349e-04, 3.6314e-03],
         [9.8878e-01, 1.6168e-05, 9.3771e-05,  ..., 1.0982e-03,
          3.6349e-04, 9.8911e-01],
         [3.7866e-03, 9.9995e-01, 9.9972e-01,  ..., 9.9671e-01,
          3.6349e-04, 3.6314e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 622:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8123e-01, 2.5969e-03, 2.6265e-03,  ..., 2.3849e-04,
          2.5253e-04, 9.9977e-01],
         [1.2148e-02, 2.5969e-03, 2.6265e-03,  ..., 2.3849e-04,
          2.5253e-04, 7.8262e-05],
         [3.3111e-03, 2.5969e-03, 2.6265e-03,  ..., 9.9928e-01,
          9.9924e-01, 7.8262e-05],
         [3.3111e-03, 9.9221e-01, 9.9212e-01,  ..., 2.3849e-04,
          2.5253e-04, 7.8262e-05]],
        [[9.9076e-01, 2.0329e-03, 2.2402e-03,  ..., 1.7431e-04,
          1.8940e-04, 6.8690e-04],
         [6.7897e-03, 2.0329e-03, 2.2402e-03,  ..., 1.7431e-04,
          1.8940e-04, 6.8690e-04],
         [1.2238e-03, 2.0329e-03, 2.2402e-03,  ..., 9.9948e-01,
          9.9943e-01, 9.9794e-01],
         [1.2238e-03, 9.9390e-01, 9.9328e-01,  ..., 1.7431e-04,
          1.8940e-04, 6.8690e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.5077e-04, 1.8379e-05, 8.8398e-04,  ..., 3.8303e-03,
          9.6757e-05, 1.2064e-03],
         [7.5077e-04, 1.8379e-05, 1.0466e-03,  ..., 3.8303e-03,
          9.6757e-05, 1.2064e-03],
         [9.9775e-01, 1.8379e-05, 8.8398e-04,  ..., 9.8798e-01,
          9.6757e-05, 9.9638e-01],
         [7.5077e-04, 9.9994e-01, 9.9719e-01,  ..., 4.3566e-03,
          9.9971e-01, 1.2064e-03]],
        [[1.1351e-03, 1.0892e-03, 8.5155e-05,  ..., 4.0715e-04,
          9.9670e-01, 1.3334e-03],
         [1.1351e-03, 1.0892e-03, 8.5155e-05,  ..., 4.0715e-04,
          1.0989e-03, 1.3334e-03],
         [9.9659e-01, 1.0892e-03, 8.5155e-05,  ..., 4.0715e-04,
          1.0989e-03, 9.9600e-01],
         [1.1351e-03, 9.9673e-01, 9.9974e-01,  ..., 9.9878e-01,
          1.0989e-03, 1.3334e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 623:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:16,235 [Process: 0] Synchronize training processes
2024-08-18 15:24:16,235 [Process: 0] Evaluating...
2024-08-18 15:24:16,238 [Process: 0] EPOCH 622:
2024-08-18 15:24:16,240 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:17,368 [Process: 0] Synchronize training processes
2024-08-18 15:24:17,368 [Process: 0] Evaluating...
2024-08-18 15:24:17,370 [Process: 0] EPOCH 623:
2024-08-18 15:24:17,372 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9606e-01, 1.0433e-03, 1.0982e-03,  ..., 1.0409e-04,
          1.8494e-04, 9.9984e-01],
         [1.3141e-03, 1.0433e-03, 1.0982e-03,  ..., 1.0409e-04,
          1.8494e-04, 5.3984e-05],
         [1.3141e-03, 1.0433e-03, 1.0982e-03,  ..., 9.9969e-01,
          9.9945e-01, 5.3984e-05],
         [1.3141e-03, 9.9687e-01, 9.9671e-01,  ..., 1.0409e-04,
          1.8494e-04, 5.3984e-05]],
        [[9.9863e-01, 1.9811e-03, 1.1933e-03,  ..., 5.2054e-03,
          5.7695e-04, 7.2948e-05],
         [3.6551e-04, 1.9811e-03, 1.1933e-03,  ..., 3.3396e-03,
          1.1621e-03, 7.2948e-05],
         [6.4076e-04, 1.9811e-03, 1.1933e-03,  ..., 9.8812e-01,
          9.9768e-01, 9.9978e-01],
         [3.6551e-04, 9.9406e-01, 9.9642e-01,  ..., 3.3396e-03,
          5.7695e-04, 7.2948e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.4912e-04, 2.5514e-05, 5.5489e-06,  ..., 3.7242e-03,
          4.5544e-05, 1.0066e-03],
         [7.4912e-04, 2.5514e-05, 5.5489e-06,  ..., 3.7242e-03,
          4.5544e-05, 1.0066e-03],
         [9.9775e-01, 2.5514e-05, 5.5489e-06,  ..., 9.8833e-01,
          4.5544e-05, 9.9698e-01],
         [7.4912e-04, 9.9992e-01, 9.9998e-01,  ..., 4.2217e-03,
          9.9986e-01, 1.0066e-03]],
        [[1.8190e-03, 1.3940e-04, 4.1356e-05,  ..., 4.3884e-04,
          9.9627e-01, 5.4815e-04],
         [1.8190e-03, 1.3940e-04, 4.1356e-05,  ..., 4.3884e-04,
          1.2444e-03, 5.4815e-04],
         [9.9454e-01, 1.3940e-04, 4.1356e-05,  ..., 4.3884e-04,
          1.2444e-03, 9.9836e-01],
         [1.8190e-03, 9.9958e-01, 9.9988e-01,  ..., 9.9868e-01,
          1.2444e-03, 5.4815e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 624:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9910e-01, 4.4223e-03, 3.0668e-03,  ..., 4.2201e-05,
          7.4875e-05, 9.9980e-01],
         [3.0090e-04, 4.4223e-03, 3.0668e-03,  ..., 4.2201e-05,
          7.4875e-05, 6.5618e-05],
         [3.0090e-04, 5.2951e-03, 3.0668e-03,  ..., 9.9987e-01,
          9.9978e-01, 6.5618e-05],
         [3.0090e-04, 9.8586e-01, 9.9080e-01,  ..., 4.2201e-05,
          7.4875e-05, 6.5618e-05]],
        [[9.9966e-01, 1.9598e-03, 6.6355e-04,  ..., 2.3025e-04,
          9.5867e-04, 1.4949e-03],
         [1.1460e-04, 1.9598e-03, 6.6355e-04,  ..., 2.3025e-04,
          9.5867e-04, 1.4949e-03],
         [1.1460e-04, 1.9598e-03, 6.6355e-04,  ..., 9.9931e-01,
          9.9712e-01, 9.9552e-01],
         [1.1460e-04, 9.9412e-01, 9.9801e-01,  ..., 2.3025e-04,
          9.5867e-04, 1.4949e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1648e-04, 5.5131e-06, 3.0093e-04,  ..., 9.0223e-04,
          5.2025e-05, 4.0772e-03],
         [4.1648e-04, 5.5131e-06, 3.0093e-04,  ..., 9.0223e-04,
          5.2025e-05, 4.0772e-03],
         [9.9875e-01, 5.5131e-06, 3.0093e-04,  ..., 9.9729e-01,
          5.2025e-05, 9.8777e-01],
         [4.1648e-04, 9.9998e-01, 9.9910e-01,  ..., 9.0223e-04,
          9.9984e-01, 4.0772e-03]],
        [[6.2816e-03, 1.4680e-04, 1.6180e-05,  ..., 5.7091e-04,
          9.9978e-01, 1.4163e-03],
         [5.5021e-03, 1.4680e-04, 1.6180e-05,  ..., 5.7091e-04,
          7.4059e-05, 1.4163e-03],
         [9.8228e-01, 1.4680e-04, 1.6180e-05,  ..., 5.7091e-04,
          7.4059e-05, 9.9575e-01],
         [5.9412e-03, 9.9956e-01, 9.9995e-01,  ..., 9.9829e-01,
          7.4059e-05, 1.4163e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 625:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:18,501 [Process: 0] Synchronize training processes
2024-08-18 15:24:18,501 [Process: 0] Evaluating...
2024-08-18 15:24:18,503 [Process: 0] EPOCH 624:
2024-08-18 15:24:18,505 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:19,635 [Process: 0] Synchronize training processes
2024-08-18 15:24:19,636 [Process: 0] Evaluating...
2024-08-18 15:24:19,637 [Process: 0] EPOCH 625:
2024-08-18 15:24:19,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9679e-01, 9.1328e-04, 3.3787e-03,  ..., 1.1581e-04,
          6.2054e-05, 9.9773e-01],
         [1.0689e-03, 9.1328e-04, 3.3787e-03,  ..., 1.1581e-04,
          6.2054e-05, 7.5015e-04],
         [1.0689e-03, 9.1328e-04, 3.4854e-03,  ..., 9.9965e-01,
          9.9981e-01, 7.7254e-04],
         [1.0689e-03, 9.9726e-01, 9.8976e-01,  ..., 1.1581e-04,
          6.2054e-05, 7.5015e-04]],
        [[9.9654e-01, 5.7519e-04, 7.7307e-04,  ..., 6.0686e-04,
          2.1042e-04, 9.0939e-04],
         [1.1536e-03, 5.7519e-04, 7.7307e-04,  ..., 6.0686e-04,
          2.1042e-04, 9.1821e-04],
         [1.1536e-03, 5.7519e-04, 7.7307e-04,  ..., 9.9818e-01,
          9.9937e-01, 9.9726e-01],
         [1.1536e-03, 9.9827e-01, 9.9768e-01,  ..., 6.0686e-04,
          2.1042e-04, 9.0939e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0263e-03, 2.8153e-05, 2.6725e-06,  ..., 1.9226e-03,
          4.9468e-03, 1.0396e-03],
         [2.0263e-03, 2.8153e-05, 2.6725e-06,  ..., 1.9226e-03,
          4.9468e-03, 1.0396e-03],
         [9.9392e-01, 2.8153e-05, 2.6725e-06,  ..., 9.9423e-01,
          5.1940e-03, 9.9688e-01],
         [2.0263e-03, 9.9992e-01, 9.9999e-01,  ..., 1.9226e-03,
          9.8491e-01, 1.0396e-03]],
        [[4.2523e-03, 7.3292e-05, 1.8693e-05,  ..., 4.8376e-05,
          9.9846e-01, 6.4633e-03],
         [4.2523e-03, 7.3292e-05, 1.8693e-05,  ..., 4.8376e-05,
          4.8130e-04, 7.2466e-03],
         [9.8663e-01, 7.3292e-05, 1.8693e-05,  ..., 4.8376e-05,
          4.8130e-04, 9.7863e-01],
         [4.8651e-03, 9.9978e-01, 9.9994e-01,  ..., 9.9985e-01,
          5.7370e-04, 7.6626e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 626:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8948e-01, 4.5216e-03, 7.9296e-03,  ..., 9.0679e-05,
          6.2092e-05, 9.9432e-01],
         [4.0719e-03, 5.8603e-03, 8.2390e-03,  ..., 9.0679e-05,
          6.2092e-05, 1.8934e-03],
         [3.2240e-03, 4.6006e-03, 9.5481e-03,  ..., 9.9973e-01,
          9.9981e-01, 1.8934e-03],
         [3.2240e-03, 9.8502e-01, 9.7428e-01,  ..., 9.0679e-05,
          6.2092e-05, 1.8934e-03]],
        [[9.9898e-01, 1.4305e-03, 3.6716e-03,  ..., 1.4828e-04,
          5.2049e-04, 7.9025e-05],
         [3.4008e-04, 1.4305e-03, 3.6716e-03,  ..., 1.4828e-04,
          7.8498e-04, 7.9025e-05],
         [3.4008e-04, 1.4305e-03, 4.9605e-03,  ..., 9.9956e-01,
          9.9817e-01, 9.9976e-01],
         [3.4008e-04, 9.9571e-01, 9.8770e-01,  ..., 1.4828e-04,
          5.2049e-04, 7.9025e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:20,764 [Process: 0] Synchronize training processes
2024-08-18 15:24:20,764 [Process: 0] Evaluating...
2024-08-18 15:24:20,766 [Process: 0] EPOCH 626:
2024-08-18 15:24:20,768 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:21,897 [Process: 0] Synchronize training processes
2024-08-18 15:24:21,897 [Process: 0] Evaluating...
2024-08-18 15:24:21,899 [Process: 0] EPOCH 627:
2024-08-18 15:24:21,901 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7091e-03, 1.0208e-04, 3.2196e-06,  ..., 1.7688e-03,
          2.3631e-04, 2.6589e-03],
         [3.7091e-03, 1.0208e-04, 3.2196e-06,  ..., 1.7688e-03,
          2.3631e-04, 2.6589e-03],
         [9.8802e-01, 1.0208e-04, 3.2196e-06,  ..., 9.9469e-01,
          2.3631e-04, 9.9202e-01],
         [4.5622e-03, 9.9969e-01, 9.9999e-01,  ..., 1.7688e-03,
          9.9929e-01, 2.6589e-03]],
        [[2.4269e-03, 1.8766e-04, 1.2301e-05,  ..., 5.7542e-05,
          9.9986e-01, 3.9238e-03],
         [2.4269e-03, 1.8766e-04, 1.2301e-05,  ..., 5.7542e-05,
          4.6588e-05, 3.9238e-03],
         [9.9259e-01, 1.8766e-04, 1.2301e-05,  ..., 5.7542e-05,
          4.6588e-05, 9.8823e-01],
         [2.5607e-03, 9.9944e-01, 9.9996e-01,  ..., 9.9983e-01,
          4.6588e-05, 3.9238e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 627:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9729e-01, 5.4817e-03, 1.8667e-03,  ..., 1.9006e-04,
          1.4931e-04, 9.9761e-01],
         [9.0446e-04, 5.4817e-03, 1.8667e-03,  ..., 1.9006e-04,
          1.4931e-04, 7.9750e-04],
         [9.0446e-04, 7.6984e-03, 1.8667e-03,  ..., 9.9943e-01,
          9.9955e-01, 7.9750e-04],
         [9.0446e-04, 9.8134e-01, 9.9440e-01,  ..., 1.9006e-04,
          1.4931e-04, 7.9750e-04]],
        [[9.9671e-01, 1.7710e-03, 5.1251e-03,  ..., 4.8566e-04,
          8.1897e-04, 1.9932e-04],
         [1.7573e-03, 1.7710e-03, 5.1251e-03,  ..., 4.8566e-04,
          8.1897e-04, 1.9932e-04],
         [7.6498e-04, 1.7710e-03, 7.5166e-03,  ..., 9.9854e-01,
          9.9754e-01, 9.9940e-01],
         [7.6498e-04, 9.9469e-01, 9.8223e-01,  ..., 4.8566e-04,
          8.1897e-04, 1.9932e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9828e-03, 1.2365e-05, 2.3378e-05,  ..., 2.6738e-03,
          6.8175e-04, 3.7912e-03],
         [1.9828e-03, 1.2365e-05, 2.3378e-05,  ..., 2.6738e-03,
          6.8175e-04, 3.7912e-03],
         [9.9405e-01, 1.2365e-05, 2.3378e-05,  ..., 9.9198e-01,
          6.8175e-04, 9.8809e-01],
         [1.9828e-03, 9.9996e-01, 9.9993e-01,  ..., 2.6738e-03,
          9.9795e-01, 4.3235e-03]],
        [[1.9709e-03, 6.9806e-04, 1.0090e-05,  ..., 2.8241e-04,
          9.9780e-01, 1.1202e-03],
         [1.9709e-03, 6.9806e-04, 1.0090e-05,  ..., 2.8241e-04,
          7.3457e-04, 1.1202e-03],
         [9.9409e-01, 6.9806e-04, 1.0090e-05,  ..., 2.8241e-04,
          7.3457e-04, 9.9664e-01],
         [1.9709e-03, 9.9791e-01, 9.9997e-01,  ..., 9.9915e-01,
          7.3457e-04, 1.1202e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 628:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9913e-01, 1.0576e-03, 2.4322e-03,  ..., 6.4553e-05,
          6.1170e-04, 9.9982e-01],
         [2.8904e-04, 1.0576e-03, 2.4322e-03,  ..., 6.4553e-05,
          7.5153e-04, 6.1605e-05],
         [2.8904e-04, 1.0576e-03, 2.4322e-03,  ..., 9.9981e-01,
          9.9803e-01, 6.1605e-05],
         [2.8904e-04, 9.9683e-01, 9.9270e-01,  ..., 6.4553e-05,
          6.1170e-04, 6.1605e-05]],
        [[9.9941e-01, 2.2181e-03, 3.5614e-03,  ..., 1.0393e-03,
          7.3845e-04, 1.7384e-04],
         [1.9804e-04, 2.2181e-03, 3.5614e-03,  ..., 1.0393e-03,
          2.0626e-03, 1.7384e-04],
         [1.9804e-04, 2.2181e-03, 4.1476e-03,  ..., 9.9688e-01,
          9.9646e-01, 9.9948e-01],
         [1.9804e-04, 9.9335e-01, 9.8873e-01,  ..., 1.0393e-03,
          7.3845e-04, 1.7384e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:23,021 [Process: 0] Synchronize training processes
2024-08-18 15:24:23,021 [Process: 0] Evaluating...
2024-08-18 15:24:23,023 [Process: 0] EPOCH 628:
2024-08-18 15:24:23,025 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2573e-03, 8.6996e-05, 2.5072e-06,  ..., 3.8856e-04,
          2.0004e-04, 1.1759e-03],
         [3.2573e-03, 8.6996e-05, 2.5072e-06,  ..., 3.8856e-04,
          2.0004e-04, 1.1759e-03],
         [9.8962e-01, 8.6996e-05, 2.5072e-06,  ..., 9.9883e-01,
          2.0004e-04, 9.9647e-01],
         [3.8665e-03, 9.9974e-01, 9.9999e-01,  ..., 3.8856e-04,
          9.9940e-01, 1.1759e-03]],
        [[2.4866e-03, 1.2512e-04, 3.8201e-05,  ..., 2.2783e-04,
          9.9679e-01, 5.5281e-03],
         [2.4866e-03, 1.2512e-04, 3.8201e-05,  ..., 2.2783e-04,
          8.1902e-04, 5.5281e-03],
         [9.9243e-01, 1.2512e-04, 3.8201e-05,  ..., 2.2783e-04,
          8.1902e-04, 9.8216e-01],
         [2.5966e-03, 9.9962e-01, 9.9989e-01,  ..., 9.9932e-01,
          1.5704e-03, 6.7803e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 629:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9939e-01, 3.7332e-03, 7.6122e-04,  ..., 6.5667e-05,
          7.1099e-05, 9.9910e-01],
         [2.0185e-04, 3.7332e-03, 7.6122e-04,  ..., 6.5667e-05,
          7.1099e-05, 3.0083e-04],
         [2.0185e-04, 3.7332e-03, 7.6122e-04,  ..., 9.9980e-01,
          9.9979e-01, 3.0083e-04],
         [2.0185e-04, 9.8880e-01, 9.9772e-01,  ..., 6.5667e-05,
          7.1099e-05, 3.0083e-04]],
        [[9.9942e-01, 1.1230e-03, 5.2797e-03,  ..., 8.7553e-04,
          4.5860e-04, 3.8035e-04],
         [1.9395e-04, 1.1230e-03, 5.2797e-03,  ..., 8.7553e-04,
          4.5860e-04, 5.0643e-04],
         [1.9395e-04, 1.1230e-03, 6.9144e-03,  ..., 9.9737e-01,
          9.9862e-01, 9.9873e-01],
         [1.9395e-04, 9.9663e-01, 9.8253e-01,  ..., 8.7553e-04,
          4.5860e-04, 3.8035e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.6731e-04, 2.6131e-05, 3.1401e-06,  ..., 1.6739e-03,
          3.6268e-04, 6.2467e-04],
         [7.6731e-04, 2.6131e-05, 3.1401e-06,  ..., 1.6739e-03,
          3.6268e-04, 6.2467e-04],
         [9.9770e-01, 2.6131e-05, 3.1401e-06,  ..., 9.9498e-01,
          3.6268e-04, 9.9813e-01],
         [7.6731e-04, 9.9992e-01, 9.9999e-01,  ..., 1.6739e-03,
          9.9891e-01, 6.2467e-04]],
        [[1.9483e-03, 2.9112e-05, 1.4087e-04,  ..., 1.9379e-05,
          9.9821e-01, 3.1674e-03],
         [1.9483e-03, 2.9112e-05, 1.4087e-04,  ..., 1.9379e-05,
          5.9574e-04, 3.1674e-03],
         [9.9416e-01, 2.9112e-05, 1.4087e-04,  ..., 1.9379e-05,
          5.9574e-04, 9.8991e-01],
         [1.9483e-03, 9.9991e-01, 9.9958e-01,  ..., 9.9994e-01,
          5.9574e-04, 3.7525e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 630:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:24:24,151 [Process: 0] Synchronize training processes
2024-08-18 15:24:24,152 [Process: 0] Evaluating...
2024-08-18 15:24:24,154 [Process: 0] EPOCH 629:
2024-08-18 15:24:24,155 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:25,281 [Process: 0] Synchronize training processes
2024-08-18 15:24:25,282 [Process: 0] Evaluating...
2024-08-18 15:24:25,283 [Process: 0] EPOCH 630:
2024-08-18 15:24:25,285 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9914e-01, 1.2168e-03, 1.2717e-03,  ..., 5.6838e-05,
          3.2544e-04, 9.9953e-01],
         [2.8743e-04, 1.2168e-03, 1.2717e-03,  ..., 5.6838e-05,
          3.2544e-04, 1.5788e-04],
         [2.8743e-04, 1.2168e-03, 1.2717e-03,  ..., 9.9983e-01,
          9.9902e-01, 1.5788e-04],
         [2.8743e-04, 9.9635e-01, 9.9618e-01,  ..., 5.6838e-05,
          3.2544e-04, 1.5788e-04]],
        [[9.9932e-01, 1.3306e-03, 4.6862e-03,  ..., 1.4883e-04,
          7.6596e-04, 1.5459e-04],
         [2.2696e-04, 1.3306e-03, 5.2223e-03,  ..., 1.4883e-04,
          1.1571e-03, 1.6367e-04],
         [2.2696e-04, 1.3306e-03, 6.1576e-03,  ..., 9.9955e-01,
          9.9731e-01, 9.9953e-01],
         [2.2696e-04, 9.9601e-01, 9.8393e-01,  ..., 1.4883e-04,
          7.6596e-04, 1.5459e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9014e-03, 1.2461e-05, 1.0026e-08,  ..., 2.1430e-03,
          2.8001e-03, 1.0018e-03],
         [2.9014e-03, 1.2461e-05, 1.0026e-08,  ..., 2.1430e-03,
          2.8001e-03, 1.0018e-03],
         [9.9121e-01, 1.2461e-05, 1.0026e-08,  ..., 9.9357e-01,
          2.8001e-03, 9.9699e-01],
         [2.9862e-03, 9.9996e-01, 1.0000e+00,  ..., 2.1430e-03,
          9.9160e-01, 1.0018e-03]],
        [[2.1225e-04, 4.2437e-04, 2.3133e-05,  ..., 2.5273e-05,
          9.9589e-01, 1.8020e-03],
         [2.1225e-04, 4.2437e-04, 2.3133e-05,  ..., 2.5273e-05,
          1.3708e-03, 1.8020e-03],
         [9.9936e-01, 4.2437e-04, 2.3133e-05,  ..., 2.5273e-05,
          1.3708e-03, 9.9459e-01],
         [2.1225e-04, 9.9873e-01, 9.9993e-01,  ..., 9.9992e-01,
          1.3708e-03, 1.8020e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 631:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9111e-01, 1.5891e-03, 3.1073e-03,  ..., 5.4994e-05,
          1.0866e-03, 9.9925e-01],
         [4.1917e-03, 1.5891e-03, 3.1073e-03,  ..., 5.4994e-05,
          1.0866e-03, 2.5020e-04],
         [2.3490e-03, 1.5891e-03, 3.1073e-03,  ..., 9.9984e-01,
          9.9674e-01, 2.5020e-04],
         [2.3490e-03, 9.9523e-01, 9.9068e-01,  ..., 5.4994e-05,
          1.0866e-03, 2.5020e-04]],
        [[9.9942e-01, 1.1880e-02, 4.1599e-03,  ..., 2.6594e-03,
          1.0853e-04, 1.5264e-04],
         [1.9316e-04, 1.0438e-02, 4.1599e-03,  ..., 2.6594e-03,
          1.0853e-04, 1.5264e-04],
         [1.9316e-04, 1.6598e-02, 6.2545e-03,  ..., 9.9202e-01,
          9.9967e-01, 9.9954e-01],
         [1.9316e-04, 9.6108e-01, 9.8543e-01,  ..., 2.6594e-03,
          1.0853e-04, 1.5264e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8126e-03, 8.5947e-05, 1.4591e-07,  ..., 1.5419e-03,
          9.7911e-04, 8.5529e-04],
         [2.8126e-03, 8.5947e-05, 1.4591e-07,  ..., 1.5419e-03,
          9.7911e-04, 8.5529e-04],
         [9.9156e-01, 8.5947e-05, 1.4591e-07,  ..., 9.9537e-01,
          9.7911e-04, 9.9743e-01],
         [2.8126e-03, 9.9974e-01, 1.0000e+00,  ..., 1.5419e-03,
          9.9706e-01, 8.5529e-04]],
        [[6.9467e-03, 1.2187e-04, 5.7631e-05,  ..., 1.3905e-04,
          9.9948e-01, 2.6656e-03],
         [6.7737e-03, 1.2187e-04, 5.7631e-05,  ..., 1.3905e-04,
          1.7302e-04, 2.6656e-03],
         [9.7756e-01, 1.2187e-04, 5.7631e-05,  ..., 1.3905e-04,
          1.7302e-04, 9.9200e-01],
         [8.7198e-03, 9.9963e-01, 9.9983e-01,  ..., 9.9958e-01,
          1.7302e-04, 2.6656e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 632:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:26,415 [Process: 0] Synchronize training processes
2024-08-18 15:24:26,415 [Process: 0] Evaluating...
2024-08-18 15:24:26,417 [Process: 0] EPOCH 631:
2024-08-18 15:24:26,419 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:27,549 [Process: 0] Synchronize training processes
2024-08-18 15:24:27,549 [Process: 0] Evaluating...
2024-08-18 15:24:27,553 [Process: 0] EPOCH 632:
2024-08-18 15:24:27,555 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9938e-01, 1.9013e-02, 9.0513e-04,  ..., 2.5785e-04,
          6.0285e-05, 9.8907e-01],
         [2.0817e-04, 3.4298e-02, 9.0513e-04,  ..., 2.5785e-04,
          6.0285e-05, 3.4688e-03],
         [2.0817e-04, 1.9934e-02, 9.0513e-04,  ..., 9.9923e-01,
          9.9982e-01, 3.9875e-03],
         [2.0817e-04, 9.2676e-01, 9.9728e-01,  ..., 2.5785e-04,
          6.0285e-05, 3.4688e-03]],
        [[9.9500e-01, 6.7875e-03, 1.2902e-03,  ..., 1.3060e-03,
          4.3752e-05, 6.8498e-04],
         [2.2989e-03, 7.1222e-03, 1.2902e-03,  ..., 1.3060e-03,
          4.3752e-05, 9.0206e-04],
         [1.3513e-03, 1.0793e-02, 1.2902e-03,  ..., 9.9608e-01,
          9.9987e-01, 9.9773e-01],
         [1.3513e-03, 9.7530e-01, 9.9613e-01,  ..., 1.3060e-03,
          4.3752e-05, 6.8498e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3811e-03, 1.7789e-04, 2.3546e-06,  ..., 8.5264e-04,
          4.8321e-05, 5.3952e-03],
         [1.3811e-03, 1.7789e-04, 2.3546e-06,  ..., 8.5264e-04,
          4.8321e-05, 5.1921e-03],
         [9.9586e-01, 1.7789e-04, 2.3546e-06,  ..., 9.9744e-01,
          4.8321e-05, 9.8371e-01],
         [1.3811e-03, 9.9947e-01, 9.9999e-01,  ..., 8.5264e-04,
          9.9986e-01, 5.7017e-03]],
        [[8.8123e-04, 2.9899e-05, 1.7092e-05,  ..., 1.7738e-04,
          9.9687e-01, 2.2466e-03],
         [8.8123e-04, 2.9899e-05, 1.7092e-05,  ..., 1.7738e-04,
          8.9577e-04, 2.2466e-03],
         [9.9736e-01, 2.9899e-05, 1.7092e-05,  ..., 1.7738e-04,
          8.9577e-04, 9.9326e-01],
         [8.8123e-04, 9.9991e-01, 9.9995e-01,  ..., 9.9947e-01,
          1.3393e-03, 2.2466e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 633:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9931e-01, 3.1553e-03, 1.3132e-03,  ..., 2.9407e-05,
          3.9716e-04, 9.9676e-01],
         [2.3126e-04, 4.0557e-03, 1.3132e-03,  ..., 2.9407e-05,
          3.9716e-04, 8.5652e-04],
         [2.3126e-04, 3.1553e-03, 1.4467e-03,  ..., 9.9991e-01,
          9.9881e-01, 1.5271e-03],
         [2.3126e-04, 9.8963e-01, 9.9593e-01,  ..., 2.9407e-05,
          3.9716e-04, 8.5652e-04]],
        [[9.9469e-01, 2.6877e-03, 5.4023e-03,  ..., 5.1876e-04,
          2.9353e-04, 1.4644e-04],
         [1.7709e-03, 2.6877e-03, 4.7366e-03,  ..., 5.1876e-04,
          6.9414e-04, 1.4644e-04],
         [1.7709e-03, 2.9096e-03, 7.9127e-03,  ..., 9.9844e-01,
          9.9872e-01, 9.9956e-01],
         [1.7709e-03, 9.9172e-01, 9.8195e-01,  ..., 5.1876e-04,
          2.9353e-04, 1.4644e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5385e-03, 2.7994e-05, 2.0626e-06,  ..., 5.6594e-04,
          2.4434e-04, 2.1282e-03],
         [2.5385e-03, 2.7994e-05, 2.0626e-06,  ..., 5.6594e-04,
          2.4434e-04, 2.1282e-03],
         [9.9234e-01, 2.7994e-05, 2.0626e-06,  ..., 9.9830e-01,
          2.4434e-04, 9.9355e-01],
         [2.5837e-03, 9.9992e-01, 9.9999e-01,  ..., 5.6594e-04,
          9.9927e-01, 2.1946e-03]],
        [[1.2113e-03, 5.8663e-05, 1.0705e-04,  ..., 2.2244e-05,
          9.9571e-01, 2.8249e-03],
         [1.2113e-03, 5.8663e-05, 1.0705e-04,  ..., 2.2244e-05,
          1.4305e-03, 2.8249e-03],
         [9.9637e-01, 5.8663e-05, 1.0705e-04,  ..., 2.2244e-05,
          1.4305e-03, 9.9153e-01],
         [1.2113e-03, 9.9982e-01, 9.9968e-01,  ..., 9.9993e-01,
          1.4305e-03, 2.8249e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:28,676 [Process: 0] Synchronize training processes
2024-08-18 15:24:28,676 [Process: 0] Evaluating...
2024-08-18 15:24:28,678 [Process: 0] EPOCH 633:
2024-08-18 15:24:28,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:29,804 [Process: 0] Synchronize training processes
2024-08-18 15:24:29,805 [Process: 0] Evaluating...
2024-08-18 15:24:29,806 [Process: 0] EPOCH 634:
2024-08-18 15:24:29,808 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 634:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9932e-01, 1.5825e-03, 8.2816e-04,  ..., 1.8290e-04,
          1.3896e-04, 9.9685e-01],
         [2.2683e-04, 1.5825e-03, 8.2816e-04,  ..., 1.8290e-04,
          1.3896e-04, 7.5763e-04],
         [2.2683e-04, 1.7712e-03, 8.2816e-04,  ..., 9.9945e-01,
          9.9958e-01, 1.6310e-03],
         [2.2683e-04, 9.9506e-01, 9.9752e-01,  ..., 1.8290e-04,
          1.3896e-04, 7.5763e-04]],
        [[9.9741e-01, 2.8754e-03, 4.3980e-03,  ..., 2.2804e-04,
          2.8497e-04, 1.1315e-04],
         [8.6236e-04, 2.8754e-03, 4.3980e-03,  ..., 2.2804e-04,
          2.8497e-04, 1.1315e-04],
         [8.6236e-04, 2.8848e-03, 5.9361e-03,  ..., 9.9932e-01,
          9.9915e-01, 9.9966e-01],
         [8.6236e-04, 9.9136e-01, 9.8527e-01,  ..., 2.2804e-04,
          2.8497e-04, 1.1315e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2514e-03, 2.8551e-05, 4.7783e-05,  ..., 2.4867e-03,
          1.2818e-04, 4.7404e-04],
         [1.2514e-03, 2.8551e-05, 4.7783e-05,  ..., 2.4867e-03,
          1.2818e-04, 4.7404e-04],
         [9.9625e-01, 2.8551e-05, 4.7783e-05,  ..., 9.9254e-01,
          1.2818e-04, 9.9858e-01],
         [1.2514e-03, 9.9991e-01, 9.9986e-01,  ..., 2.4867e-03,
          9.9962e-01, 4.7404e-04]],
        [[2.7993e-03, 2.0231e-05, 1.1090e-04,  ..., 9.9120e-05,
          9.9946e-01, 1.8991e-03],
         [2.7993e-03, 2.0231e-05, 1.1090e-04,  ..., 9.9120e-05,
          1.7942e-04, 1.8991e-03],
         [9.9160e-01, 2.0231e-05, 1.1090e-04,  ..., 9.9120e-05,
          1.7942e-04, 9.9430e-01],
         [2.7993e-03, 9.9994e-01, 9.9967e-01,  ..., 9.9970e-01,
          1.7942e-04, 1.8991e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 635:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9130e-01, 3.5999e-03, 1.4582e-03,  ..., 1.9204e-04,
          1.3050e-04, 9.9937e-01],
         [4.2205e-03, 3.5999e-03, 1.4582e-03,  ..., 1.9204e-04,
          1.3050e-04, 2.0823e-04],
         [2.2417e-03, 3.7284e-03, 1.4582e-03,  ..., 9.9942e-01,
          9.9961e-01, 2.0955e-04],
         [2.2417e-03, 9.8907e-01, 9.9563e-01,  ..., 1.9204e-04,
          1.3050e-04, 2.0823e-04]],
        [[9.9892e-01, 5.0195e-03, 1.7379e-03,  ..., 1.4172e-04,
          1.4467e-04, 8.8700e-04],
         [3.5890e-04, 4.8669e-03, 1.7379e-03,  ..., 1.4172e-04,
          1.4467e-04, 8.8700e-04],
         [3.5890e-04, 6.8213e-03, 1.7379e-03,  ..., 9.9957e-01,
          9.9957e-01, 9.9734e-01],
         [3.5890e-04, 9.8329e-01, 9.9479e-01,  ..., 1.4172e-04,
          1.4467e-04, 8.8700e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:30,936 [Process: 0] Synchronize training processes
2024-08-18 15:24:30,936 [Process: 0] Evaluating...
2024-08-18 15:24:30,938 [Process: 0] EPOCH 635:
2024-08-18 15:24:30,940 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0142e-03, 1.1924e-05, 1.4759e-06,  ..., 5.0394e-03,
          1.0547e-03, 3.5030e-03],
         [3.0142e-03, 1.1924e-05, 1.4759e-06,  ..., 5.0394e-03,
          1.0547e-03, 3.5030e-03],
         [9.9096e-01, 1.1924e-05, 1.4759e-06,  ..., 9.8311e-01,
          1.0547e-03, 9.8949e-01],
         [3.0142e-03, 9.9996e-01, 1.0000e+00,  ..., 6.8113e-03,
          9.9684e-01, 3.5030e-03]],
        [[4.1944e-03, 1.2764e-04, 2.5622e-04,  ..., 5.7843e-06,
          9.9994e-01, 8.8024e-04],
         [4.1944e-03, 1.2764e-04, 2.5622e-04,  ..., 5.7843e-06,
          1.8464e-05, 8.8024e-04],
         [9.8648e-01, 1.2764e-04, 2.5622e-04,  ..., 5.7843e-06,
          1.8464e-05, 9.9736e-01],
         [5.1302e-03, 9.9962e-01, 9.9923e-01,  ..., 9.9998e-01,
          1.8464e-05, 8.8024e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 636:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9957e-01, 2.9733e-03, 2.7333e-03,  ..., 1.1949e-04,
          1.7922e-04, 9.9583e-01],
         [1.4489e-04, 2.9733e-03, 2.7333e-03,  ..., 1.1949e-04,
          1.7922e-04, 1.3013e-03],
         [1.4489e-04, 2.9733e-03, 2.9972e-03,  ..., 9.9964e-01,
          9.9946e-01, 1.5711e-03],
         [1.4489e-04, 9.9108e-01, 9.9154e-01,  ..., 1.1949e-04,
          1.7922e-04, 1.3013e-03]],
        [[9.7896e-01, 2.4281e-03, 9.8704e-04,  ..., 5.4099e-04,
          3.8449e-04, 3.5265e-04],
         [5.9180e-03, 2.4281e-03, 9.8704e-04,  ..., 5.4099e-04,
          4.9184e-04, 4.4404e-04],
         [1.0097e-02, 2.4281e-03, 9.8704e-04,  ..., 9.9838e-01,
          9.9874e-01, 9.9885e-01],
         [5.0230e-03, 9.9272e-01, 9.9704e-01,  ..., 5.4099e-04,
          3.8449e-04, 3.5265e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7245e-04, 1.2949e-05, 7.7431e-06,  ..., 1.6127e-03,
          2.6893e-04, 3.1472e-03],
         [6.7245e-04, 1.2949e-05, 7.7431e-06,  ..., 1.6127e-03,
          2.6893e-04, 3.1472e-03],
         [9.9798e-01, 1.2949e-05, 7.7431e-06,  ..., 9.9516e-01,
          2.6893e-04, 9.9056e-01],
         [6.7245e-04, 9.9996e-01, 9.9998e-01,  ..., 1.6127e-03,
          9.9919e-01, 3.1472e-03]],
        [[1.0296e-03, 7.1127e-04, 1.8044e-04,  ..., 3.6389e-04,
          9.9985e-01, 2.3674e-03],
         [1.0296e-03, 7.1127e-04, 1.8044e-04,  ..., 3.6389e-04,
          5.0167e-05, 2.3674e-03],
         [9.9691e-01, 7.1127e-04, 1.8044e-04,  ..., 3.6389e-04,
          5.0167e-05, 9.9290e-01],
         [1.0296e-03, 9.9787e-01, 9.9946e-01,  ..., 9.9891e-01,
          5.0167e-05, 2.3674e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 637:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9290e-01, 1.8661e-03, 2.6804e-03,  ..., 5.9788e-05,
          1.4496e-03, 9.9965e-01],
         [2.3120e-03, 1.8661e-03, 2.6804e-03,  ..., 5.9788e-05,
          1.4496e-03, 1.1805e-04],
         [2.4723e-03, 1.8661e-03, 2.6804e-03,  ..., 9.9982e-01,
          9.9565e-01, 1.1805e-04],
         [2.3120e-03, 9.9440e-01, 9.9196e-01,  ..., 5.9788e-05,
          1.4496e-03, 1.1805e-04]],
        [[9.9901e-01, 1.7893e-03, 1.9308e-03,  ..., 7.9867e-05,
          1.0972e-03, 4.8789e-04],
         [3.3006e-04, 1.7893e-03, 1.9308e-03,  ..., 7.9867e-05,
          1.2429e-03, 7.8021e-04],
         [3.3006e-04, 1.7893e-03, 1.9308e-03,  ..., 9.9976e-01,
          9.9656e-01, 9.9824e-01],
         [3.3006e-04, 9.9463e-01, 9.9421e-01,  ..., 7.9867e-05,
          1.0972e-03, 4.8789e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:32,065 [Process: 0] Synchronize training processes
2024-08-18 15:24:32,066 [Process: 0] Evaluating...
2024-08-18 15:24:32,067 [Process: 0] EPOCH 636:
2024-08-18 15:24:32,069 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:33,194 [Process: 0] Synchronize training processes
2024-08-18 15:24:33,194 [Process: 0] Evaluating...
2024-08-18 15:24:33,196 [Process: 0] EPOCH 637:
2024-08-18 15:24:33,198 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3030e-03, 7.7829e-05, 1.0817e-06,  ..., 1.4341e-03,
          1.2097e-04, 1.6456e-03],
         [2.3030e-03, 7.7829e-05, 1.0817e-06,  ..., 1.4341e-03,
          1.2097e-04, 1.6456e-03],
         [9.9309e-01, 7.7829e-05, 1.0817e-06,  ..., 9.9570e-01,
          1.2097e-04, 9.9506e-01],
         [2.3030e-03, 9.9977e-01, 1.0000e+00,  ..., 1.4341e-03,
          9.9964e-01, 1.6456e-03]],
        [[2.4004e-03, 5.0230e-05, 1.9337e-04,  ..., 1.0197e-04,
          9.9389e-01, 1.6011e-03],
         [2.4004e-03, 5.0230e-05, 1.9337e-04,  ..., 1.0197e-04,
          2.0362e-03, 1.6011e-03],
         [9.9280e-01, 5.0230e-05, 1.9337e-04,  ..., 1.0197e-04,
          2.0362e-03, 9.9520e-01],
         [2.4004e-03, 9.9985e-01, 9.9942e-01,  ..., 9.9969e-01,
          2.0362e-03, 1.6011e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 638:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9891e-01, 2.3492e-03, 4.8434e-03,  ..., 2.4279e-04,
          4.6366e-04, 9.9880e-01],
         [3.6334e-04, 2.3492e-03, 4.4144e-03,  ..., 2.4279e-04,
          4.6366e-04, 3.6878e-04],
         [3.6334e-04, 2.3492e-03, 5.6935e-03,  ..., 9.9927e-01,
          9.9861e-01, 4.6246e-04],
         [3.6334e-04, 9.9295e-01, 9.8505e-01,  ..., 2.4279e-04,
          4.6366e-04, 3.6878e-04]],
        [[9.9794e-01, 2.4356e-03, 2.7539e-03,  ..., 3.9767e-04,
          1.6455e-04, 5.1091e-04],
         [6.8782e-04, 2.4356e-03, 2.7539e-03,  ..., 3.9767e-04,
          1.6455e-04, 5.1091e-04],
         [6.8782e-04, 2.9424e-03, 3.1401e-03,  ..., 9.9881e-01,
          9.9951e-01, 9.9847e-01],
         [6.8782e-04, 9.9219e-01, 9.9135e-01,  ..., 3.9767e-04,
          1.6455e-04, 5.1091e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0821e-03, 1.4826e-04, 2.6542e-05,  ..., 5.5657e-04,
          5.1587e-05, 2.2101e-03],
         [1.0821e-03, 1.4826e-04, 2.6542e-05,  ..., 5.5657e-04,
          5.1587e-05, 2.2101e-03],
         [9.9675e-01, 1.4826e-04, 2.6542e-05,  ..., 9.9833e-01,
          5.1587e-05, 9.9337e-01],
         [1.0821e-03, 9.9956e-01, 9.9992e-01,  ..., 5.5657e-04,
          9.9985e-01, 2.2101e-03]],
        [[3.9766e-03, 5.9763e-04, 2.5153e-05,  ..., 6.8423e-05,
          9.9500e-01, 3.0429e-03],
         [4.2824e-03, 5.9763e-04, 2.5153e-05,  ..., 6.8423e-05,
          1.6665e-03, 3.0429e-03],
         [9.8712e-01, 5.9763e-04, 2.5153e-05,  ..., 6.8423e-05,
          1.6665e-03, 9.9087e-01],
         [4.6208e-03, 9.9821e-01, 9.9992e-01,  ..., 9.9979e-01,
          1.6665e-03, 3.0429e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 639:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:34,328 [Process: 0] Synchronize training processes
2024-08-18 15:24:34,328 [Process: 0] Evaluating...
2024-08-18 15:24:34,330 [Process: 0] EPOCH 638:
2024-08-18 15:24:34,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:35,451 [Process: 0] Synchronize training processes
2024-08-18 15:24:35,451 [Process: 0] Evaluating...
2024-08-18 15:24:35,453 [Process: 0] EPOCH 639:
2024-08-18 15:24:35,454 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9520e-01, 2.6621e-03, 5.6208e-03,  ..., 1.8528e-04,
          9.9583e-05, 9.9790e-01],
         [1.6007e-03, 2.6621e-03, 6.4040e-03,  ..., 1.8528e-04,
          9.9583e-05, 5.9674e-04],
         [1.6007e-03, 2.6621e-03, 8.5135e-03,  ..., 9.9944e-01,
          9.9970e-01, 9.0729e-04],
         [1.6007e-03, 9.9201e-01, 9.7946e-01,  ..., 1.8528e-04,
          9.9583e-05, 5.9674e-04]],
        [[9.9793e-01, 8.0013e-04, 1.5652e-03,  ..., 1.0084e-04,
          1.3816e-04, 8.2964e-04],
         [6.2385e-04, 8.0013e-04, 1.5652e-03,  ..., 1.0084e-04,
          1.3816e-04, 8.3856e-04],
         [8.2420e-04, 8.0013e-04, 1.5942e-03,  ..., 9.9970e-01,
          9.9959e-01, 9.9750e-01],
         [6.2385e-04, 9.9760e-01, 9.9528e-01,  ..., 1.0084e-04,
          1.3816e-04, 8.2964e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1393e-03, 2.4625e-07, 5.0926e-06,  ..., 1.9618e-03,
          1.5744e-04, 2.5011e-03],
         [1.1393e-03, 2.4625e-07, 5.0926e-06,  ..., 1.9618e-03,
          1.5744e-04, 2.5011e-03],
         [9.9658e-01, 2.4625e-07, 5.0926e-06,  ..., 9.9411e-01,
          1.5744e-04, 9.9250e-01],
         [1.1393e-03, 1.0000e+00, 9.9998e-01,  ..., 1.9618e-03,
          9.9953e-01, 2.5011e-03]],
        [[7.8178e-04, 1.7537e-04, 1.3134e-03,  ..., 1.5713e-05,
          9.9373e-01, 2.0221e-03],
         [7.8178e-04, 1.7537e-04, 1.3134e-03,  ..., 1.5713e-05,
          1.7836e-03, 2.0221e-03],
         [9.9765e-01, 1.7537e-04, 1.3134e-03,  ..., 1.5713e-05,
          1.7836e-03, 9.9393e-01],
         [7.8178e-04, 9.9947e-01, 9.9606e-01,  ..., 9.9995e-01,
          2.7067e-03, 2.0221e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 640:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9960e-01, 2.1829e-03, 3.1320e-03,  ..., 5.6306e-05,
          6.0920e-04, 9.9390e-01],
         [1.3385e-04, 2.1829e-03, 3.1320e-03,  ..., 5.6306e-05,
          6.0920e-04, 2.9896e-03],
         [1.3385e-04, 2.1829e-03, 3.4007e-03,  ..., 9.9983e-01,
          9.9817e-01, 1.5568e-03],
         [1.3385e-04, 9.9345e-01, 9.9034e-01,  ..., 5.6306e-05,
          6.0920e-04, 1.5568e-03]],
        [[9.9713e-01, 3.0719e-03, 1.3079e-03,  ..., 3.6131e-05,
          1.5139e-04, 8.8835e-03],
         [9.4615e-04, 3.0719e-03, 1.3079e-03,  ..., 3.6131e-05,
          1.5139e-04, 1.5881e-02],
         [9.7912e-04, 3.4112e-03, 1.3079e-03,  ..., 9.9989e-01,
          9.9955e-01, 9.6799e-01],
         [9.4615e-04, 9.9045e-01, 9.9608e-01,  ..., 3.6131e-05,
          1.5139e-04, 7.2435e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3773e-03, 1.2407e-04, 1.4820e-06,  ..., 1.8724e-02,
          2.9467e-05, 1.6823e-03],
         [1.3773e-03, 1.2407e-04, 1.4820e-06,  ..., 2.6110e-02,
          2.9467e-05, 1.6823e-03],
         [9.9587e-01, 1.2407e-04, 1.4820e-06,  ..., 9.2749e-01,
          2.9467e-05, 9.9495e-01],
         [1.3773e-03, 9.9963e-01, 1.0000e+00,  ..., 2.7677e-02,
          9.9991e-01, 1.6823e-03]],
        [[9.9360e-04, 5.1400e-05, 7.2994e-05,  ..., 5.5549e-05,
          9.9929e-01, 6.3056e-04],
         [9.9360e-04, 5.1400e-05, 7.2994e-05,  ..., 5.5549e-05,
          2.1969e-04, 6.3056e-04],
         [9.9702e-01, 5.1400e-05, 7.2994e-05,  ..., 5.5549e-05,
          2.1969e-04, 9.9811e-01],
         [9.9360e-04, 9.9985e-01, 9.9978e-01,  ..., 9.9983e-01,
          2.7318e-04, 6.3056e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 641:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:36,567 [Process: 0] Synchronize training processes
2024-08-18 15:24:36,567 [Process: 0] Evaluating...
2024-08-18 15:24:36,569 [Process: 0] EPOCH 640:
2024-08-18 15:24:36,571 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:37,700 [Process: 0] Synchronize training processes
2024-08-18 15:24:37,700 [Process: 0] Evaluating...
2024-08-18 15:24:37,702 [Process: 0] EPOCH 641:
2024-08-18 15:24:37,704 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9701e-01, 3.5455e-03, 3.5634e-03,  ..., 1.3214e-04,
          2.9791e-05, 9.9975e-01],
         [9.9759e-04, 3.5455e-03, 3.5634e-03,  ..., 1.3214e-04,
          2.9791e-05, 8.3681e-05],
         [9.9759e-04, 4.1455e-03, 4.7419e-03,  ..., 9.9960e-01,
          9.9991e-01, 8.3681e-05],
         [9.9759e-04, 9.8876e-01, 9.8813e-01,  ..., 1.3214e-04,
          2.9791e-05, 8.3681e-05]],
        [[9.8852e-01, 1.9092e-03, 3.5611e-03,  ..., 2.0510e-04,
          7.1909e-04, 1.7555e-03],
         [6.1786e-03, 1.9092e-03, 3.5611e-03,  ..., 2.0510e-04,
          7.1909e-04, 2.8080e-03],
         [2.6500e-03, 1.9092e-03, 3.6039e-03,  ..., 9.9938e-01,
          9.9784e-01, 9.9368e-01],
         [2.6500e-03, 9.9427e-01, 9.8927e-01,  ..., 2.0510e-04,
          7.1909e-04, 1.7555e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8976e-03, 5.2939e-05, 6.1224e-07,  ..., 2.5703e-03,
          1.2552e-04, 3.3712e-03],
         [1.8976e-03, 5.2939e-05, 6.1224e-07,  ..., 2.5703e-03,
          1.2552e-04, 3.3712e-03],
         [9.9431e-01, 5.2939e-05, 6.1224e-07,  ..., 9.9229e-01,
          1.2552e-04, 9.8988e-01],
         [1.8976e-03, 9.9984e-01, 1.0000e+00,  ..., 2.5703e-03,
          9.9962e-01, 3.3740e-03]],
        [[1.8019e-03, 3.2259e-04, 1.6636e-04,  ..., 3.1534e-04,
          9.9763e-01, 6.4681e-04],
         [1.8019e-03, 3.2259e-04, 1.6636e-04,  ..., 3.1534e-04,
          7.8836e-04, 6.4681e-04],
         [9.9459e-01, 3.2259e-04, 1.6636e-04,  ..., 3.1534e-04,
          7.8836e-04, 9.9806e-01],
         [1.8019e-03, 9.9903e-01, 9.9950e-01,  ..., 9.9905e-01,
          7.8836e-04, 6.4681e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 642:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9839e-01, 1.6130e-03, 4.1516e-03,  ..., 7.1075e-04,
          1.0477e-03, 9.9405e-01],
         [5.3743e-04, 1.6130e-03, 4.8616e-03,  ..., 7.1075e-04,
          1.0477e-03, 1.1549e-03],
         [5.3743e-04, 1.6130e-03, 4.3176e-03,  ..., 9.9787e-01,
          9.9686e-01, 3.6395e-03],
         [5.3743e-04, 9.9516e-01, 9.8667e-01,  ..., 7.1075e-04,
          1.0477e-03, 1.1549e-03]],
        [[9.9950e-01, 2.4969e-03, 1.6962e-03,  ..., 1.1206e-05,
          1.4715e-03, 1.9796e-03],
         [1.6654e-04, 2.4969e-03, 1.6962e-03,  ..., 1.1206e-05,
          1.4715e-03, 1.9796e-03],
         [1.6654e-04, 2.4969e-03, 1.6962e-03,  ..., 9.9997e-01,
          9.9559e-01, 9.9406e-01],
         [1.6654e-04, 9.9251e-01, 9.9491e-01,  ..., 1.1206e-05,
          1.4715e-03, 1.9796e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:24:38,832 [Process: 0] Synchronize training processes
2024-08-18 15:24:38,833 [Process: 0] Evaluating...
2024-08-18 15:24:38,837 [Process: 0] EPOCH 642:
2024-08-18 15:24:38,839 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:39,968 [Process: 0] Synchronize training processes
2024-08-18 15:24:39,969 [Process: 0] Evaluating...
2024-08-18 15:24:39,970 [Process: 0] EPOCH 643:
2024-08-18 15:24:39,972 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.6800e-03, 4.5384e-04, 5.7136e-05,  ..., 1.5236e-03,
          8.4247e-04, 6.2799e-04],
         [5.1807e-03, 4.5384e-04, 5.7136e-05,  ..., 1.5236e-03,
          8.4247e-04, 6.2799e-04],
         [9.8377e-01, 4.5384e-04, 5.7136e-05,  ..., 9.9543e-01,
          8.4247e-04, 9.9812e-01],
         [5.3649e-03, 9.9864e-01, 9.9983e-01,  ..., 1.5236e-03,
          9.9747e-01, 6.2799e-04]],
        [[2.8057e-03, 1.5450e-04, 2.5592e-05,  ..., 2.4295e-05,
          9.9957e-01, 9.7335e-04],
         [2.8057e-03, 1.5450e-04, 2.5592e-05,  ..., 2.4295e-05,
          1.4362e-04, 9.7335e-04],
         [9.9119e-01, 1.5450e-04, 2.5592e-05,  ..., 2.4295e-05,
          1.4362e-04, 9.9708e-01],
         [3.1950e-03, 9.9954e-01, 9.9992e-01,  ..., 9.9993e-01,
          1.4362e-04, 9.7335e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 643:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9916e-01, 2.3205e-03, 4.2919e-03,  ..., 6.2333e-04,
          1.9305e-04, 9.9300e-01],
         [2.7872e-04, 2.3205e-03, 4.3120e-03,  ..., 6.2333e-04,
          1.9305e-04, 2.3064e-03],
         [2.7872e-04, 2.3205e-03, 4.2919e-03,  ..., 9.9813e-01,
          9.9942e-01, 2.3887e-03],
         [2.7872e-04, 9.9304e-01, 9.8710e-01,  ..., 6.2333e-04,
          1.9305e-04, 2.3064e-03]],
        [[9.9967e-01, 5.4839e-04, 1.7654e-03,  ..., 9.0236e-05,
          5.5045e-04, 9.8693e-04],
         [1.1015e-04, 5.4839e-04, 1.7654e-03,  ..., 9.0236e-05,
          5.5045e-04, 9.8693e-04],
         [1.1015e-04, 5.4839e-04, 1.7867e-03,  ..., 9.9973e-01,
          9.9835e-01, 9.9704e-01],
         [1.1015e-04, 9.9835e-01, 9.9468e-01,  ..., 9.0236e-05,
          5.5045e-04, 9.8693e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.1683e-03, 1.2375e-06, 7.1310e-06,  ..., 9.7701e-03,
          9.3080e-05, 1.5343e-03],
         [6.1683e-03, 1.2375e-06, 7.1310e-06,  ..., 8.6848e-03,
          9.3080e-05, 1.5343e-03],
         [9.7873e-01, 1.2375e-06, 7.1310e-06,  ..., 9.6963e-01,
          9.3080e-05, 9.9540e-01],
         [8.9367e-03, 1.0000e+00, 9.9998e-01,  ..., 1.1915e-02,
          9.9972e-01, 1.5343e-03]],
        [[1.2524e-03, 6.0441e-05, 2.8573e-05,  ..., 2.2457e-04,
          9.8404e-01, 1.7226e-03],
         [1.2524e-03, 6.0441e-05, 2.8573e-05,  ..., 2.2457e-04,
          4.2844e-03, 1.7226e-03],
         [9.9624e-01, 6.0441e-05, 2.8573e-05,  ..., 2.2457e-04,
          4.2844e-03, 9.9483e-01],
         [1.2524e-03, 9.9982e-01, 9.9991e-01,  ..., 9.9933e-01,
          7.3956e-03, 1.7226e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 644:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9864e-01, 2.9474e-03, 4.2873e-03,  ..., 1.7968e-04,
          1.0928e-03, 9.9782e-01],
         [4.5388e-04, 2.9474e-03, 5.5665e-03,  ..., 1.7968e-04,
          1.0928e-03, 9.3867e-04],
         [4.5388e-04, 2.9474e-03, 4.2873e-03,  ..., 9.9946e-01,
          9.9672e-01, 6.2189e-04],
         [4.5388e-04, 9.9116e-01, 9.8586e-01,  ..., 1.7968e-04,
          1.0928e-03, 6.2189e-04]],
        [[9.9861e-01, 2.0057e-03, 1.0905e-03,  ..., 3.2769e-04,
          2.0835e-04, 3.7651e-04],
         [4.6267e-04, 2.0057e-03, 1.0905e-03,  ..., 3.2769e-04,
          2.0835e-04, 3.7651e-04],
         [4.6267e-04, 2.0057e-03, 1.0905e-03,  ..., 9.9902e-01,
          9.9937e-01, 9.9887e-01],
         [4.6267e-04, 9.9398e-01, 9.9673e-01,  ..., 3.2769e-04,
          2.0835e-04, 3.7651e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:41,073 [Process: 0] Synchronize training processes
2024-08-18 15:24:41,074 [Process: 0] Evaluating...
2024-08-18 15:24:41,076 [Process: 0] EPOCH 644:
2024-08-18 15:24:41,078 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.9676e-03, 1.0951e-04, 4.3591e-06,  ..., 1.0496e-03,
          4.9912e-04, 1.4272e-03],
         [4.9676e-03, 1.0951e-04, 4.3591e-06,  ..., 1.0496e-03,
          4.9912e-04, 1.4272e-03],
         [9.8323e-01, 1.0951e-04, 4.3591e-06,  ..., 9.9685e-01,
          4.9912e-04, 9.9572e-01],
         [6.8366e-03, 9.9967e-01, 9.9999e-01,  ..., 1.0496e-03,
          9.9850e-01, 1.4272e-03]],
        [[1.0854e-03, 5.6594e-05, 5.9690e-06,  ..., 3.1769e-04,
          9.9974e-01, 2.6807e-03],
         [1.0854e-03, 5.6594e-05, 5.9690e-06,  ..., 3.1769e-04,
          8.7835e-05, 2.6807e-03],
         [9.9674e-01, 5.6594e-05, 5.9690e-06,  ..., 3.1769e-04,
          8.7835e-05, 9.9187e-01],
         [1.0854e-03, 9.9983e-01, 9.9998e-01,  ..., 9.9905e-01,
          8.7835e-05, 2.7688e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 645:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8979e-01, 2.6553e-03, 3.5722e-03,  ..., 2.9438e-05,
          1.9428e-04, 9.6587e-01],
         [3.5165e-03, 2.6553e-03, 3.5722e-03,  ..., 2.9438e-05,
          1.9428e-04, 1.7799e-02],
         [3.3246e-03, 2.6553e-03, 3.5722e-03,  ..., 9.9991e-01,
          9.9942e-01, 8.1648e-03],
         [3.3666e-03, 9.9203e-01, 9.8928e-01,  ..., 2.9438e-05,
          1.9428e-04, 8.1648e-03]],
        [[9.9946e-01, 1.8639e-03, 1.5580e-03,  ..., 2.3539e-04,
          3.9608e-03, 1.1677e-04],
         [1.8086e-04, 1.8639e-03, 1.5580e-03,  ..., 2.3539e-04,
          2.2120e-03, 1.1677e-04],
         [1.8086e-04, 1.8639e-03, 1.5580e-03,  ..., 9.9929e-01,
          9.9162e-01, 9.9965e-01],
         [1.8086e-04, 9.9441e-01, 9.9533e-01,  ..., 2.3539e-04,
          2.2120e-03, 1.1677e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1491e-03, 2.8946e-06, 5.1873e-05,  ..., 1.2248e-03,
          5.5913e-04, 4.9049e-03],
         [3.1491e-03, 2.8946e-06, 5.1873e-05,  ..., 1.2248e-03,
          5.5913e-04, 4.9049e-03],
         [9.9055e-01, 2.8946e-06, 5.1873e-05,  ..., 9.9633e-01,
          5.5913e-04, 9.8315e-01],
         [3.1491e-03, 9.9999e-01, 9.9984e-01,  ..., 1.2248e-03,
          9.9832e-01, 7.0411e-03]],
        [[2.3264e-03, 6.9433e-05, 1.6411e-04,  ..., 4.5133e-04,
          9.9957e-01, 1.0786e-03],
         [2.3264e-03, 6.9433e-05, 1.6411e-04,  ..., 4.5133e-04,
          1.4485e-04, 1.0786e-03],
         [9.9302e-01, 6.9433e-05, 1.6411e-04,  ..., 4.5133e-04,
          1.4485e-04, 9.9676e-01],
         [2.3264e-03, 9.9979e-01, 9.9951e-01,  ..., 9.9865e-01,
          1.4485e-04, 1.0786e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 646:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:24:42,275 [Process: 0] Synchronize training processes
2024-08-18 15:24:42,276 [Process: 0] Evaluating...
2024-08-18 15:24:42,278 [Process: 0] EPOCH 645:
2024-08-18 15:24:42,279 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:43,454 [Process: 0] Synchronize training processes
2024-08-18 15:24:43,455 [Process: 0] Evaluating...
2024-08-18 15:24:43,457 [Process: 0] EPOCH 646:
2024-08-18 15:24:43,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9944e-01, 4.6167e-03, 2.3064e-03,  ..., 2.0610e-04,
          1.3748e-03, 9.9849e-01],
         [1.8784e-04, 5.4630e-03, 2.3064e-03,  ..., 2.0610e-04,
          1.3748e-03, 5.0350e-04],
         [1.8784e-04, 4.6167e-03, 2.3064e-03,  ..., 9.9938e-01,
          9.9588e-01, 5.0350e-04],
         [1.8784e-04, 9.8530e-01, 9.9308e-01,  ..., 2.0610e-04,
          1.3748e-03, 5.0350e-04]],
        [[9.9787e-01, 3.4018e-03, 1.5116e-03,  ..., 5.6148e-05,
          9.9107e-01, 2.6965e-04],
         [7.0929e-04, 4.4768e-03, 1.5116e-03,  ..., 5.6148e-05,
          2.2545e-03, 2.6965e-04],
         [7.0929e-04, 3.4018e-03, 1.6099e-03,  ..., 9.9983e-01,
          4.4193e-03, 9.9919e-01],
         [7.0929e-04, 9.8872e-01, 9.9537e-01,  ..., 5.6148e-05,
          2.2545e-03, 2.6965e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5402e-03, 5.2017e-04, 4.9422e-06,  ..., 1.6273e-03,
          1.2383e-01, 7.7728e-04],
         [2.5402e-03, 5.2017e-04, 4.9422e-06,  ..., 1.6273e-03,
          4.2189e-02, 7.7728e-04],
         [9.9238e-01, 5.2017e-04, 4.9422e-06,  ..., 9.9512e-01,
          7.0111e-02, 9.9767e-01],
         [2.5402e-03, 9.9844e-01, 9.9999e-01,  ..., 1.6273e-03,
          7.6387e-01, 7.7728e-04]],
        [[3.5380e-03, 2.7289e-04, 1.2669e-05,  ..., 1.6133e-05,
          9.9994e-01, 1.4035e-03],
         [3.5380e-03, 2.7289e-04, 1.2669e-05,  ..., 1.6133e-05,
          1.9837e-05, 1.4035e-03],
         [9.8860e-01, 2.7289e-04, 1.2669e-05,  ..., 1.6133e-05,
          1.9837e-05, 9.9579e-01],
         [4.3250e-03, 9.9918e-01, 9.9996e-01,  ..., 9.9995e-01,
          1.9837e-05, 1.4035e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 647:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9896e-01, 7.8004e-03, 3.7237e-03,  ..., 1.9762e-04,
          9.7098e-04, 9.9915e-01],
         [3.4559e-04, 1.0108e-02, 3.7237e-03,  ..., 1.9762e-04,
          9.7098e-04, 2.8351e-04],
         [3.4559e-04, 7.3925e-03, 3.8530e-03,  ..., 9.9941e-01,
          9.9701e-01, 2.8351e-04],
         [3.4559e-04, 9.7470e-01, 9.8870e-01,  ..., 1.9762e-04,
          1.0482e-03, 2.8351e-04]],
        [[9.9867e-01, 3.1580e-03, 2.3447e-03,  ..., 2.0463e-04,
          5.8073e-04, 3.8334e-04],
         [4.4489e-04, 3.1580e-03, 2.3447e-03,  ..., 2.0463e-04,
          5.8073e-04, 3.8334e-04],
         [4.4489e-04, 3.1580e-03, 2.5237e-03,  ..., 9.9939e-01,
          9.9826e-01, 9.9885e-01],
         [4.4489e-04, 9.9053e-01, 9.9279e-01,  ..., 2.0463e-04,
          5.8073e-04, 3.8334e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8291e-03, 3.4464e-06, 2.1436e-04,  ..., 1.8302e-03,
          4.4780e-05, 2.5653e-03],
         [1.8291e-03, 3.4464e-06, 5.3594e-04,  ..., 1.8302e-03,
          4.4780e-05, 2.5653e-03],
         [9.9451e-01, 3.4464e-06, 2.1436e-04,  ..., 9.9451e-01,
          4.4780e-05, 9.9230e-01],
         [1.8291e-03, 9.9999e-01, 9.9904e-01,  ..., 1.8302e-03,
          9.9987e-01, 2.5653e-03]],
        [[1.9049e-03, 1.1433e-04, 9.1926e-06,  ..., 1.2855e-05,
          9.9905e-01, 1.3741e-03],
         [1.9049e-03, 1.1433e-04, 9.1926e-06,  ..., 1.2855e-05,
          3.1601e-04, 1.3741e-03],
         [9.9429e-01, 1.1433e-04, 9.1926e-06,  ..., 1.2855e-05,
          3.1601e-04, 9.9588e-01],
         [1.9049e-03, 9.9966e-01, 9.9997e-01,  ..., 9.9996e-01,
          3.1601e-04, 1.3741e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 648:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:44,589 [Process: 0] Synchronize training processes
2024-08-18 15:24:44,590 [Process: 0] Evaluating...
2024-08-18 15:24:44,592 [Process: 0] EPOCH 647:
2024-08-18 15:24:44,593 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:45,714 [Process: 0] Synchronize training processes
2024-08-18 15:24:45,714 [Process: 0] Evaluating...
2024-08-18 15:24:45,716 [Process: 0] EPOCH 648:
2024-08-18 15:24:45,718 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9227e-01, 2.2408e-03, 9.9199e-04,  ..., 1.8367e-05,
          1.6833e-04, 9.9986e-01],
         [2.2050e-03, 2.2408e-03, 9.9199e-04,  ..., 1.8367e-05,
          1.6833e-04, 4.5270e-05],
         [2.2050e-03, 2.2408e-03, 9.9199e-04,  ..., 9.9994e-01,
          9.9950e-01, 4.5270e-05],
         [3.3164e-03, 9.9328e-01, 9.9702e-01,  ..., 1.8367e-05,
          1.6833e-04, 4.5270e-05]],
        [[9.9948e-01, 9.0347e-03, 2.4164e-03,  ..., 1.8941e-02,
          2.8866e-02, 2.5600e-05],
         [1.5995e-04, 9.9998e-03, 2.4164e-03,  ..., 1.1375e-01,
          5.6906e-02, 2.5600e-05],
         [2.0372e-04, 1.8055e-02, 2.4164e-03,  ..., 8.4817e-01,
          9.0066e-01, 9.9992e-01],
         [1.5995e-04, 9.6291e-01, 9.9275e-01,  ..., 1.9132e-02,
          1.3566e-02, 2.5600e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3299e-03, 7.5721e-06, 6.3748e-06,  ..., 5.7783e-04,
          8.2437e-05, 2.3508e-03],
         [4.3299e-03, 7.5721e-06, 6.3748e-06,  ..., 5.7783e-04,
          8.2437e-05, 2.3508e-03],
         [9.8685e-01, 7.5721e-06, 6.3748e-06,  ..., 9.9827e-01,
          8.2437e-05, 9.9295e-01],
         [4.4923e-03, 9.9998e-01, 9.9998e-01,  ..., 5.7783e-04,
          9.9975e-01, 2.3508e-03]],
        [[6.3318e-04, 1.5848e-04, 9.1174e-06,  ..., 4.9083e-05,
          9.8810e-01, 7.5846e-04],
         [6.3318e-04, 1.5848e-04, 9.1174e-06,  ..., 4.9083e-05,
          2.7982e-03, 7.5846e-04],
         [9.9810e-01, 1.5848e-04, 9.1174e-06,  ..., 4.9083e-05,
          2.7982e-03, 9.9772e-01],
         [6.3318e-04, 9.9952e-01, 9.9997e-01,  ..., 9.9985e-01,
          6.3068e-03, 7.5846e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 649:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9473e-01, 1.7209e-03, 3.2216e-03,  ..., 5.0759e-05,
          5.0765e-04, 9.9152e-01],
         [1.7565e-03, 1.7209e-03, 3.2216e-03,  ..., 5.0759e-05,
          5.0765e-04, 2.5318e-03],
         [1.7565e-03, 1.7209e-03, 3.3160e-03,  ..., 9.9985e-01,
          9.9848e-01, 3.4154e-03],
         [1.7565e-03, 9.9484e-01, 9.9024e-01,  ..., 5.0759e-05,
          5.0765e-04, 2.5318e-03]],
        [[9.9704e-01, 1.1513e-03, 2.8606e-03,  ..., 2.1763e-05,
          1.6010e-04, 4.2891e-05],
         [9.8759e-04, 1.1513e-03, 2.8606e-03,  ..., 2.1763e-05,
          1.6010e-04, 4.2891e-05],
         [9.8759e-04, 1.1513e-03, 3.0941e-03,  ..., 9.9993e-01,
          9.9952e-01, 9.9987e-01],
         [9.8759e-04, 9.9655e-01, 9.9118e-01,  ..., 2.1763e-05,
          1.6010e-04, 4.2891e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8051e-03, 3.2201e-05, 1.1526e-06,  ..., 1.6214e-03,
          1.3433e-04, 1.4821e-03],
         [2.8051e-03, 3.2201e-05, 1.1526e-06,  ..., 1.6214e-03,
          1.3433e-04, 1.4821e-03],
         [9.9158e-01, 3.2201e-05, 1.1526e-06,  ..., 9.9514e-01,
          1.3433e-04, 9.9555e-01],
         [2.8051e-03, 9.9990e-01, 1.0000e+00,  ..., 1.6214e-03,
          9.9960e-01, 1.4821e-03]],
        [[1.7440e-03, 1.4234e-04, 5.8910e-05,  ..., 1.0633e-05,
          9.9878e-01, 1.9686e-03],
         [1.7440e-03, 1.4234e-04, 5.8910e-05,  ..., 1.0633e-05,
          3.5491e-04, 1.9686e-03],
         [9.9477e-01, 1.4234e-04, 5.8910e-05,  ..., 1.0633e-05,
          3.5491e-04, 9.9409e-01],
         [1.7440e-03, 9.9957e-01, 9.9982e-01,  ..., 9.9997e-01,
          5.1348e-04, 1.9686e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:46,848 [Process: 0] Synchronize training processes
2024-08-18 15:24:46,848 [Process: 0] Evaluating...
2024-08-18 15:24:46,850 [Process: 0] EPOCH 649:
2024-08-18 15:24:46,852 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:47,980 [Process: 0] Synchronize training processes
2024-08-18 15:24:47,980 [Process: 0] Evaluating...
2024-08-18 15:24:47,982 [Process: 0] EPOCH 650:
2024-08-18 15:24:47,984 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 650:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8666e-01, 3.1130e-03, 9.8328e-04,  ..., 6.8488e-05,
          1.6643e-03, 9.9649e-01],
         [4.6420e-03, 3.1130e-03, 9.8328e-04,  ..., 6.8488e-05,
          1.6643e-03, 1.0522e-03],
         [4.1122e-03, 3.2262e-03, 9.8328e-04,  ..., 9.9979e-01,
          9.9460e-01, 1.4095e-03],
         [4.5863e-03, 9.9055e-01, 9.9705e-01,  ..., 6.8488e-05,
          2.0744e-03, 1.0522e-03]],
        [[9.9982e-01, 3.3033e-03, 1.9810e-03,  ..., 4.6703e-04,
          2.4872e-03, 2.3863e-04],
         [6.1149e-05, 3.3033e-03, 1.9810e-03,  ..., 4.6703e-04,
          1.4866e-03, 2.3863e-04],
         [6.1149e-05, 4.1605e-03, 2.1874e-03,  ..., 9.9860e-01,
          9.9454e-01, 9.9928e-01],
         [6.1149e-05, 9.8923e-01, 9.9385e-01,  ..., 4.6703e-04,
          1.4866e-03, 2.3863e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3476e-03, 5.3441e-05, 1.1103e-04,  ..., 2.5991e-03,
          9.0959e-06, 1.7057e-03],
         [1.3476e-03, 5.3441e-05, 1.1103e-04,  ..., 2.5991e-03,
          9.0959e-06, 1.7057e-03],
         [9.9596e-01, 5.3441e-05, 1.1103e-04,  ..., 9.9220e-01,
          9.0959e-06, 9.9488e-01],
         [1.3476e-03, 9.9984e-01, 9.9967e-01,  ..., 2.5991e-03,
          9.9997e-01, 1.7057e-03]],
        [[1.1864e-03, 8.7977e-06, 3.6630e-05,  ..., 4.8723e-05,
          9.9956e-01, 2.4455e-03],
         [1.1864e-03, 8.7977e-06, 3.6630e-05,  ..., 4.8723e-05,
          1.4532e-04, 2.4455e-03],
         [9.9644e-01, 8.7977e-06, 3.6630e-05,  ..., 4.8723e-05,
          1.4532e-04, 9.9266e-01],
         [1.1864e-03, 9.9997e-01, 9.9989e-01,  ..., 9.9985e-01,
          1.4532e-04, 2.4455e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 651:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9761e-01, 5.2739e-04, 1.4732e-03,  ..., 3.0141e-04,
          1.7041e-04, 9.9880e-01],
         [7.9685e-04, 5.2739e-04, 1.4732e-03,  ..., 3.0141e-04,
          1.7041e-04, 3.9853e-04],
         [7.9685e-04, 5.2739e-04, 1.4732e-03,  ..., 9.9910e-01,
          9.9949e-01, 3.9853e-04],
         [7.9685e-04, 9.9842e-01, 9.9558e-01,  ..., 3.0141e-04,
          1.7041e-04, 3.9853e-04]],
        [[9.9844e-01, 3.4454e-03, 1.7716e-03,  ..., 6.4379e-05,
          3.0886e-04, 4.3848e-04],
         [5.2011e-04, 3.4454e-03, 1.7716e-03,  ..., 6.4379e-05,
          3.0886e-04, 4.3848e-04],
         [5.2011e-04, 3.4454e-03, 1.7716e-03,  ..., 9.9981e-01,
          9.9907e-01, 9.9868e-01],
         [5.2011e-04, 9.8966e-01, 9.9469e-01,  ..., 6.4379e-05,
          3.0886e-04, 4.3848e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:49,111 [Process: 0] Synchronize training processes
2024-08-18 15:24:49,111 [Process: 0] Evaluating...
2024-08-18 15:24:49,113 [Process: 0] EPOCH 651:
2024-08-18 15:24:49,114 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.9532e-03, 1.3796e-04, 1.6972e-03,  ..., 4.6602e-04,
          5.1844e-04, 1.7338e-03],
         [6.5807e-03, 1.3796e-04, 1.6972e-03,  ..., 4.6602e-04,
          5.1844e-04, 1.7338e-03],
         [9.7712e-01, 1.3796e-04, 1.6972e-03,  ..., 9.9860e-01,
          5.1844e-04, 9.9480e-01],
         [8.3456e-03, 9.9959e-01, 9.9491e-01,  ..., 4.6602e-04,
          9.9844e-01, 1.7338e-03]],
        [[1.3085e-03, 2.5503e-05, 1.7673e-05,  ..., 1.0776e-05,
          9.9970e-01, 2.6883e-03],
         [1.3085e-03, 2.5503e-05, 1.7673e-05,  ..., 1.0776e-05,
          9.9988e-05, 2.6883e-03],
         [9.9607e-01, 2.5503e-05, 1.7673e-05,  ..., 1.0776e-05,
          9.9988e-05, 9.9194e-01],
         [1.3085e-03, 9.9992e-01, 9.9995e-01,  ..., 9.9997e-01,
          9.9988e-05, 2.6883e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 652:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8297e-01, 6.0118e-04, 2.3138e-03,  ..., 1.8140e-03,
          3.5847e-04, 9.9843e-01],
         [4.9137e-03, 6.0118e-04, 2.4322e-03,  ..., 1.8140e-03,
          3.5847e-04, 5.2401e-04],
         [6.9998e-03, 6.0118e-04, 2.3138e-03,  ..., 9.9456e-01,
          9.9892e-01, 5.2401e-04],
         [5.1171e-03, 9.9820e-01, 9.9294e-01,  ..., 1.8140e-03,
          3.5847e-04, 5.2401e-04]],
        [[9.9921e-01, 1.9940e-03, 8.9777e-03,  ..., 7.5216e-05,
          2.6964e-03, 1.9623e-03],
         [2.6209e-04, 1.9940e-03, 1.2680e-02,  ..., 7.5216e-05,
          2.3043e-03, 1.9236e-03],
         [2.6209e-04, 2.1223e-03, 1.6086e-02,  ..., 9.9977e-01,
          9.9270e-01, 9.9419e-01],
         [2.6209e-04, 9.9389e-01, 9.6226e-01,  ..., 7.5216e-05,
          2.3043e-03, 1.9236e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6478e-03, 1.5438e-04, 1.2946e-03,  ..., 7.5815e-04,
          5.6999e-05, 1.6932e-03],
         [1.6478e-03, 1.5438e-04, 1.2946e-03,  ..., 7.5815e-04,
          5.6999e-05, 1.6932e-03],
         [9.9506e-01, 1.5438e-04, 1.2946e-03,  ..., 9.9773e-01,
          5.6999e-05, 9.9492e-01],
         [1.6478e-03, 9.9954e-01, 9.9612e-01,  ..., 7.5815e-04,
          9.9983e-01, 1.6932e-03]],
        [[3.8971e-03, 2.2269e-05, 4.0294e-04,  ..., 1.2165e-04,
          9.9993e-01, 1.7136e-03],
         [3.8971e-03, 2.2269e-05, 4.0294e-04,  ..., 1.2165e-04,
          2.4737e-05, 1.7136e-03],
         [9.8831e-01, 2.2269e-05, 4.0294e-04,  ..., 1.2165e-04,
          2.4737e-05, 9.9486e-01],
         [3.8971e-03, 9.9993e-01, 9.9879e-01,  ..., 9.9963e-01,
          2.4737e-05, 1.7136e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 653:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9783e-01, 1.7298e-03, 2.9267e-03,  ..., 1.4419e-05,
          1.4967e-04, 9.9832e-01],
         [7.2298e-04, 1.7298e-03, 2.9267e-03,  ..., 1.4419e-05,
          1.4967e-04, 5.5868e-04],
         [7.2298e-04, 1.8493e-03, 3.0009e-03,  ..., 9.9996e-01,
          9.9955e-01, 5.5868e-04],
         [7.2298e-04, 9.9469e-01, 9.9115e-01,  ..., 1.4419e-05,
          1.4967e-04, 5.5868e-04]],
        [[9.9782e-01, 3.0418e-03, 4.0651e-03,  ..., 1.0291e-04,
          6.5155e-02, 9.7149e-04],
         [7.2539e-04, 3.0418e-03, 4.0651e-03,  ..., 1.0291e-04,
          8.4359e-01, 9.7149e-04],
         [7.2539e-04, 3.0418e-03, 4.8711e-03,  ..., 9.9969e-01,
          2.2428e-02, 9.7149e-04],
         [7.2539e-04, 9.9087e-01, 9.8700e-01,  ..., 1.0291e-04,
          6.8826e-02, 9.9709e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:50,240 [Process: 0] Synchronize training processes
2024-08-18 15:24:50,240 [Process: 0] Evaluating...
2024-08-18 15:24:50,244 [Process: 0] EPOCH 652:
2024-08-18 15:24:50,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:51,365 [Process: 0] Synchronize training processes
2024-08-18 15:24:51,365 [Process: 0] Evaluating...
2024-08-18 15:24:51,367 [Process: 0] EPOCH 653:
2024-08-18 15:24:51,369 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0660e-02, 3.8019e-02, 2.4096e-05,  ..., 2.8357e-03,
          7.1440e-03, 9.9594e-04],
         [9.5054e-03, 3.7361e-02, 2.4096e-05,  ..., 2.5428e-03,
          2.5036e-03, 9.9594e-04],
         [9.6436e-01, 4.7078e-01, 2.4096e-05,  ..., 9.9208e-01,
          2.5036e-03, 9.9701e-01],
         [1.5471e-02, 4.5384e-01, 9.9993e-01,  ..., 2.5428e-03,
          9.8785e-01, 9.9594e-04]],
        [[1.5263e-03, 6.9134e-05, 1.1010e-06,  ..., 4.2339e-05,
          9.9564e-01, 1.9476e-03],
         [1.5263e-03, 6.9134e-05, 1.1010e-06,  ..., 4.2339e-05,
          1.2489e-03, 1.9476e-03],
         [9.9542e-01, 6.9134e-05, 1.1010e-06,  ..., 4.2339e-05,
          1.2489e-03, 9.9416e-01],
         [1.5263e-03, 9.9979e-01, 1.0000e+00,  ..., 9.9987e-01,
          1.8647e-03, 1.9476e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 654:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9761e-01, 1.1853e-03, 1.1498e-03,  ..., 3.2647e-05,
          1.5986e-04, 9.8988e-01],
         [7.8279e-04, 1.1853e-03, 1.1498e-03,  ..., 3.2647e-05,
          1.5986e-04, 2.3195e-03],
         [7.8279e-04, 1.1853e-03, 1.1498e-03,  ..., 9.9990e-01,
          9.9952e-01, 5.4821e-03],
         [8.2760e-04, 9.9644e-01, 9.9655e-01,  ..., 3.2647e-05,
          1.5986e-04, 2.3195e-03]],
        [[9.9951e-01, 2.1888e-03, 2.1287e-03,  ..., 3.5827e-04,
          4.7032e-02, 2.1127e-03],
         [1.6459e-04, 2.1888e-03, 2.1287e-03,  ..., 3.5827e-04,
          3.8874e-02, 2.1127e-03],
         [1.6459e-04, 2.2125e-03, 2.1287e-03,  ..., 9.9893e-01,
          2.0958e-02, 2.1127e-03],
         [1.6459e-04, 9.9341e-01, 9.9361e-01,  ..., 3.5827e-04,
          8.9314e-01, 9.9366e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:52,500 [Process: 0] Synchronize training processes
2024-08-18 15:24:52,500 [Process: 0] Evaluating...
2024-08-18 15:24:52,502 [Process: 0] EPOCH 654:
2024-08-18 15:24:52,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:53,629 [Process: 0] Synchronize training processes
2024-08-18 15:24:53,629 [Process: 0] Evaluating...
2024-08-18 15:24:53,631 [Process: 0] EPOCH 655:
2024-08-18 15:24:53,633 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9924e-01, 1.5473e-03, 1.2187e-03,  ..., 8.0151e-05,
          1.1589e-05, 9.9543e-01],
         [2.5313e-04, 1.5473e-03, 1.2187e-03,  ..., 8.0151e-05,
          1.1589e-05, 2.2180e-03],
         [2.5313e-04, 1.5473e-03, 1.2187e-03,  ..., 9.9976e-01,
          9.9997e-01, 1.1770e-03],
         [2.5313e-04, 9.9536e-01, 9.9634e-01,  ..., 8.0151e-05,
          1.1589e-05, 1.1770e-03]],
        [[9.9967e-01, 7.5761e-03, 1.3966e-03,  ..., 5.1320e-04,
          2.0441e-02, 5.1699e-03],
         [8.3283e-05, 6.4159e-03, 1.3966e-03,  ..., 9.1977e-04,
          1.6109e-02, 5.1699e-03],
         [1.5899e-04, 1.0392e-02, 1.3966e-03,  ..., 9.9805e-01,
          4.2307e-02, 8.2022e-03],
         [8.3283e-05, 9.7562e-01, 9.9581e-01,  ..., 5.1320e-04,
          9.2114e-01, 9.8146e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.6020e-04, 4.5621e-04, 1.6432e-03,  ..., 5.5623e-04,
          9.9962e-01, 2.3471e-03],
         [7.6020e-04, 4.5621e-04, 2.6423e-03,  ..., 5.5623e-04,
          1.2578e-04, 2.3471e-03],
         [9.9772e-01, 4.5621e-04, 1.6432e-03,  ..., 9.9833e-01,
          1.2578e-04, 9.9296e-01],
         [7.6020e-04, 9.9863e-01, 9.9407e-01,  ..., 5.5623e-04,
          1.2578e-04, 2.3471e-03]],
        [[6.0367e-04, 4.2526e-05, 2.0054e-04,  ..., 3.9144e-04,
          5.0894e-05, 1.2416e-02],
         [6.0367e-04, 4.2526e-05, 2.0054e-04,  ..., 3.9144e-04,
          5.0894e-05, 1.2416e-02],
         [9.9819e-01, 4.2526e-05, 2.0054e-04,  ..., 3.9144e-04,
          5.0894e-05, 9.3980e-01],
         [6.0367e-04, 9.9987e-01, 9.9940e-01,  ..., 9.9883e-01,
          9.9985e-01, 3.5372e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 656:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9830e-01, 2.4802e-03, 4.2419e-03,  ..., 1.2745e-05,
          4.5879e-06, 9.6944e-01],
         [5.6593e-04, 2.3490e-03, 4.0243e-03,  ..., 1.2745e-05,
          4.5879e-06, 6.8452e-03],
         [5.6593e-04, 2.3490e-03, 6.2574e-03,  ..., 9.9996e-01,
          9.9999e-01, 1.2494e-02],
         [5.6593e-04, 9.9282e-01, 9.8548e-01,  ..., 1.2745e-05,
          4.5879e-06, 1.1216e-02]],
        [[9.9958e-01, 1.9200e-03, 3.7039e-03,  ..., 1.9412e-02,
          9.2737e-02, 1.8858e-02],
         [1.3950e-04, 1.9200e-03, 3.6947e-03,  ..., 4.2478e-02,
          8.5948e-02, 1.2145e-02],
         [1.3950e-04, 1.9200e-03, 3.9081e-03,  ..., 9.2244e-01,
          1.2556e-01, 3.0389e-02],
         [1.3950e-04, 9.9424e-01, 9.8869e-01,  ..., 1.5674e-02,
          6.9575e-01, 9.3861e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:24:54,759 [Process: 0] Synchronize training processes
2024-08-18 15:24:54,759 [Process: 0] Evaluating...
2024-08-18 15:24:54,761 [Process: 0] EPOCH 656:
2024-08-18 15:24:54,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:55,889 [Process: 0] Synchronize training processes
2024-08-18 15:24:55,890 [Process: 0] Evaluating...
2024-08-18 15:24:55,892 [Process: 0] EPOCH 657:
2024-08-18 15:24:55,894 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5469e-03, 4.5890e-04, 4.1420e-03,  ..., 2.5284e-03,
          9.8590e-01, 1.1461e-03],
         [4.5469e-03, 4.5890e-04, 4.1420e-03,  ..., 2.5284e-03,
          4.3215e-03, 1.1461e-03],
         [9.8582e-01, 4.5890e-04, 4.1420e-03,  ..., 9.9241e-01,
          4.6853e-03, 9.9656e-01],
         [5.0854e-03, 9.9862e-01, 9.8757e-01,  ..., 2.5284e-03,
          5.0910e-03, 1.1461e-03]],
        [[4.4029e-03, 2.1512e-05, 2.4634e-04,  ..., 4.0406e-04,
          9.9843e-01, 4.4134e-03],
         [4.4029e-03, 2.1512e-05, 2.4634e-04,  ..., 4.0406e-04,
          5.2323e-04, 4.4134e-03],
         [9.8473e-01, 2.1512e-05, 2.4634e-04,  ..., 4.0406e-04,
          5.2323e-04, 9.8629e-01],
         [6.4598e-03, 9.9994e-01, 9.9926e-01,  ..., 9.9879e-01,
          5.2323e-04, 4.8863e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 657:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9834e-01, 1.7562e-04, 3.1476e-03,  ..., 2.8407e-05,
          6.5750e-04, 9.9711e-01],
         [5.5223e-04, 1.7562e-04, 2.8181e-03,  ..., 2.8407e-05,
          6.5750e-04, 7.9152e-04],
         [5.5223e-04, 1.7562e-04, 2.8181e-03,  ..., 9.9991e-01,
          9.9803e-01, 1.3100e-03],
         [5.5223e-04, 9.9947e-01, 9.9122e-01,  ..., 2.8407e-05,
          6.5750e-04, 7.9152e-04]],
        [[9.9993e-01, 8.9299e-03, 5.9463e-03,  ..., 8.2527e-04,
          3.6664e-01, 2.4908e-01],
         [2.2032e-05, 7.0430e-03, 5.2461e-03,  ..., 8.2527e-04,
          3.4946e-01, 1.8453e-01],
         [2.2032e-05, 8.8315e-03, 5.4015e-03,  ..., 9.9752e-01,
          2.0402e-01, 4.0525e-01],
         [2.2032e-05, 9.7520e-01, 9.8341e-01,  ..., 8.2527e-04,
          7.9886e-02, 1.6115e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7762e-03, 1.0929e-04, 1.0406e-03,  ..., 2.8709e-03,
          2.5274e-01, 1.0609e-03],
         [2.7762e-03, 1.0929e-04, 1.0406e-03,  ..., 2.8709e-03,
          2.5195e-02, 1.0609e-03],
         [9.9135e-01, 1.0929e-04, 1.0406e-03,  ..., 9.9100e-01,
          6.9687e-01, 9.9682e-01],
         [3.0927e-03, 9.9967e-01, 9.9688e-01,  ..., 3.2556e-03,
          2.5195e-02, 1.0609e-03]],
        [[3.0580e-03, 4.2095e-05, 2.3860e-05,  ..., 9.2088e-05,
          9.9983e-01, 4.8419e-03],
         [3.0580e-03, 4.2095e-05, 2.3860e-05,  ..., 9.2088e-05,
          5.7092e-05, 4.8419e-03],
         [9.9083e-01, 4.2095e-05, 2.3860e-05,  ..., 9.2088e-05,
          5.7092e-05, 9.8331e-01],
         [3.0580e-03, 9.9987e-01, 9.9993e-01,  ..., 9.9972e-01,
          5.7092e-05, 7.0019e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 658:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:24:57,026 [Process: 0] Synchronize training processes
2024-08-18 15:24:57,026 [Process: 0] Evaluating...
2024-08-18 15:24:57,028 [Process: 0] EPOCH 658:
2024-08-18 15:24:57,029 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9946e-01, 1.7430e-03, 4.7573e-04,  ..., 1.1968e-05,
          6.3925e-04, 9.8831e-01],
         [1.8116e-04, 9.9062e-04, 4.7573e-04,  ..., 1.1968e-05,
          6.3925e-04, 2.9951e-03],
         [1.8116e-04, 9.9062e-04, 4.7573e-04,  ..., 9.9996e-01,
          9.9808e-01, 5.6955e-03],
         [1.8116e-04, 9.9628e-01, 9.9857e-01,  ..., 1.1968e-05,
          6.3925e-04, 2.9951e-03]],
        [[9.9614e-01, 4.9002e-03, 3.9256e-03,  ..., 5.8844e-05,
          2.0699e-01, 2.1260e-01],
         [2.5403e-03, 4.2198e-03, 3.9256e-03,  ..., 5.8844e-05,
          2.4028e-01, 1.9163e-01],
         [6.5900e-04, 4.9240e-03, 4.1886e-03,  ..., 9.9982e-01,
          4.7360e-01, 5.0458e-01],
         [6.5900e-04, 9.8596e-01, 9.8796e-01,  ..., 5.8844e-05,
          7.9129e-02, 9.1189e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6978e-03, 6.8557e-04, 2.4344e-02,  ..., 1.5326e-03,
          2.1733e-03, 1.7185e-03],
         [1.6978e-03, 6.8557e-04, 3.2712e-02,  ..., 1.5326e-03,
          1.4340e-03, 1.7185e-03],
         [9.9491e-01, 6.8557e-04, 1.6872e-02,  ..., 9.9540e-01,
          1.4340e-03, 9.9484e-01],
         [1.6978e-03, 9.9794e-01, 9.2607e-01,  ..., 1.5326e-03,
          9.9496e-01, 1.7185e-03]],
        [[1.3768e-03, 1.4748e-04, 2.5016e-05,  ..., 7.8656e-05,
          9.9900e-01, 9.6009e-04],
         [1.3768e-03, 1.3422e-04, 2.5016e-05,  ..., 7.8656e-05,
          3.3379e-04, 9.6009e-04],
         [9.9587e-01, 1.3422e-04, 2.5016e-05,  ..., 7.8656e-05,
          3.3379e-04, 9.9712e-01],
         [1.3768e-03, 9.9958e-01, 9.9992e-01,  ..., 9.9976e-01,
          3.3379e-04, 9.6009e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 659:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 8.7739e-05, 2.5134e-03,  ..., 6.3282e-04,
          4.6146e-04, 9.9921e-01],
         [4.8778e-05, 8.7739e-05, 1.3787e-03,  ..., 6.3282e-04,
          4.6146e-04, 2.6419e-04],
         [4.8778e-05, 8.7739e-05, 1.3787e-03,  ..., 9.9810e-01,
          9.9862e-01, 2.6419e-04],
         [4.8778e-05, 9.9974e-01, 9.9473e-01,  ..., 6.3282e-04,
          4.6146e-04, 2.6419e-04]],
        [[9.9855e-01, 3.4259e-02, 6.7564e-03,  ..., 4.1498e-05,
          1.8164e-01, 1.6923e-01],
         [4.8496e-04, 1.4424e-02, 4.7360e-03,  ..., 4.1498e-05,
          9.0419e-02, 1.2226e-01],
         [4.8496e-04, 3.8329e-02, 5.2330e-03,  ..., 9.9988e-01,
          5.9091e-01, 5.6614e-01],
         [4.8496e-04, 9.1299e-01, 9.8327e-01,  ..., 4.1498e-05,
          1.3703e-01, 1.4237e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1569e-03, 2.6284e-04, 1.9138e-02,  ..., 2.3446e-03,
          1.6706e-03, 1.6613e-03],
         [1.1569e-03, 2.5063e-04, 3.6461e-03,  ..., 2.3446e-03,
          1.2850e-03, 1.6613e-03],
         [9.9653e-01, 2.5063e-04, 3.6461e-03,  ..., 9.9251e-01,
          1.2850e-03, 9.9502e-01],
         [1.1569e-03, 9.9924e-01, 9.7357e-01,  ..., 2.8044e-03,
          9.9576e-01, 1.6613e-03]],
        [[2.6315e-03, 7.4825e-05, 1.6131e-05,  ..., 2.4802e-05,
          9.9991e-01, 1.6205e-03],
         [2.6315e-03, 6.7653e-05, 1.6131e-05,  ..., 2.4802e-05,
          2.9225e-05, 1.6205e-03],
         [9.9170e-01, 6.7653e-05, 1.6131e-05,  ..., 2.4802e-05,
          2.9225e-05, 9.9514e-01],
         [3.0355e-03, 9.9979e-01, 9.9995e-01,  ..., 9.9993e-01,
          2.9225e-05, 1.6205e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 660:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:58,153 [Process: 0] Synchronize training processes
2024-08-18 15:24:58,154 [Process: 0] Evaluating...
2024-08-18 15:24:58,155 [Process: 0] EPOCH 659:
2024-08-18 15:24:58,157 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:24:59,275 [Process: 0] Synchronize training processes
2024-08-18 15:24:59,276 [Process: 0] Evaluating...
2024-08-18 15:24:59,277 [Process: 0] EPOCH 660:
2024-08-18 15:24:59,279 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9484e-01, 4.4378e-04, 2.8124e-04,  ..., 3.8458e-05,
          4.7099e-03, 9.9942e-01],
         [1.6594e-03, 4.4378e-04, 2.8124e-04,  ..., 3.8458e-05,
          4.7099e-03, 1.9436e-04],
         [1.8445e-03, 4.4378e-04, 2.8124e-04,  ..., 9.9988e-01,
          9.8162e-01, 1.9436e-04],
         [1.6594e-03, 9.9867e-01, 9.9916e-01,  ..., 3.8458e-05,
          8.9633e-03, 1.9436e-04]],
        [[9.9980e-01, 4.0476e-03, 2.0523e-03,  ..., 7.7031e-05,
          7.7076e-03, 2.1385e-01],
         [6.7020e-05, 3.5080e-03, 2.5034e-03,  ..., 7.7031e-05,
          7.7076e-03, 1.5831e-01],
         [6.7020e-05, 3.5080e-03, 2.0523e-03,  ..., 9.9977e-01,
          9.7398e-01, 4.8386e-01],
         [6.7020e-05, 9.8894e-01, 9.9339e-01,  ..., 7.7031e-05,
          1.0609e-02, 1.4399e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0359e-03, 4.7149e-05, 3.0955e-03,  ..., 1.9554e-03,
          2.6876e-01, 7.9428e-04],
         [1.0359e-03, 4.1326e-05, 2.4030e-03,  ..., 1.9554e-03,
          7.5492e-02, 7.9428e-04],
         [9.9689e-01, 4.1326e-05, 2.4030e-03,  ..., 9.9413e-01,
          4.3504e-01, 9.9762e-01],
         [1.0359e-03, 9.9987e-01, 9.9210e-01,  ..., 1.9554e-03,
          2.2071e-01, 7.9428e-04]],
        [[3.6068e-03, 9.0492e-06, 1.5749e-04,  ..., 9.1129e-06,
          9.9909e-01, 2.5706e-03],
         [3.6068e-03, 9.0492e-06, 1.3218e-04,  ..., 9.1129e-06,
          2.9110e-04, 2.5706e-03],
         [9.8801e-01, 9.0492e-06, 1.3218e-04,  ..., 9.1129e-06,
          2.9110e-04, 9.9229e-01],
         [4.7757e-03, 9.9997e-01, 9.9958e-01,  ..., 9.9997e-01,
          3.2538e-04, 2.5706e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 661:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9986e-01, 1.5578e-03, 8.1345e-05,  ..., 6.8877e-05,
          6.7370e-04, 9.9944e-01],
         [4.5669e-05, 2.1279e-03, 8.1345e-05,  ..., 6.8877e-05,
          6.7370e-04, 2.1491e-04],
         [4.5669e-05, 1.5578e-03, 8.1345e-05,  ..., 9.9979e-01,
          9.9798e-01, 1.7212e-04],
         [4.5669e-05, 9.9476e-01, 9.9976e-01,  ..., 6.8877e-05,
          6.7370e-04, 1.7212e-04]],
        [[9.9613e-01, 2.8210e-03, 5.9489e-03,  ..., 2.4181e-03,
          8.1888e-04, 2.4277e-01],
         [2.3621e-03, 2.0264e-03, 3.9161e-03,  ..., 2.4181e-03,
          8.1888e-04, 9.4205e-02],
         [7.5366e-04, 2.0264e-03, 3.8835e-03,  ..., 9.9275e-01,
          9.9754e-01, 4.4813e-01],
         [7.5366e-04, 9.9313e-01, 9.8625e-01,  ..., 2.4181e-03,
          8.1888e-04, 2.1490e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.7659e-03, 1.3837e-03, 4.0713e-04,  ..., 3.4226e-03,
          2.2535e-01, 5.1719e-03],
         [5.7659e-03, 5.1175e-04, 9.2205e-04,  ..., 3.4226e-03,
          6.7352e-02, 5.1719e-03],
         [9.8200e-01, 5.1175e-04, 4.0713e-04,  ..., 9.8826e-01,
          3.1262e-01, 9.8241e-01],
         [6.4729e-03, 9.9759e-01, 9.9826e-01,  ..., 4.8927e-03,
          3.9468e-01, 7.2455e-03]],
        [[7.6862e-03, 2.1776e-05, 1.4727e-05,  ..., 1.0025e-05,
          9.9990e-01, 4.7468e-03],
         [7.6862e-03, 2.1776e-05, 1.4727e-05,  ..., 1.0025e-05,
          3.3791e-05, 4.7468e-03],
         [9.7080e-01, 2.1776e-05, 1.4727e-05,  ..., 1.0025e-05,
          3.3791e-05, 9.8379e-01],
         [1.3831e-02, 9.9993e-01, 9.9996e-01,  ..., 9.9997e-01,
          3.3791e-05, 6.7140e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:00,414 [Process: 0] Synchronize training processes
2024-08-18 15:25:00,415 [Process: 0] Evaluating...
2024-08-18 15:25:00,416 [Process: 0] EPOCH 661:
2024-08-18 15:25:00,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:01,547 [Process: 0] Synchronize training processes
2024-08-18 15:25:01,547 [Process: 0] Evaluating...
2024-08-18 15:25:01,551 [Process: 0] EPOCH 662:
2024-08-18 15:25:01,553 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 662:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 7.7036e-04, 8.7822e-04,  ..., 1.0798e-05,
          8.4704e-04, 9.9863e-01],
         [4.9253e-06, 5.5570e-04, 6.6293e-04,  ..., 1.0798e-05,
          8.4704e-04, 4.5769e-04],
         [4.9253e-06, 5.5570e-04, 6.6293e-04,  ..., 9.9997e-01,
          9.9746e-01, 4.5769e-04],
         [4.9253e-06, 9.9812e-01, 9.9780e-01,  ..., 1.0798e-05,
          8.4704e-04, 4.5769e-04]],
        [[9.6900e-01, 4.8556e-03, 7.0758e-03,  ..., 1.6690e-04,
          2.5198e-03, 2.8442e-01],
         [1.8886e-02, 2.6773e-03, 4.0055e-03,  ..., 1.6690e-04,
          2.5198e-03, 9.3925e-02],
         [7.6969e-03, 2.6773e-03, 4.0055e-03,  ..., 9.9950e-01,
          9.9244e-01, 3.3421e-01],
         [4.4183e-03, 9.8979e-01, 9.8491e-01,  ..., 1.6690e-04,
          2.5198e-03, 2.8745e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1698e-03, 1.7891e-03, 6.8152e-03,  ..., 1.5271e-03,
          3.4028e-01, 3.2746e-03],
         [1.1698e-03, 1.1476e-03, 5.1936e-03,  ..., 1.5271e-03,
          9.6086e-02, 3.2746e-03],
         [9.9649e-01, 1.1476e-03, 5.1936e-03,  ..., 9.9542e-01,
          2.4133e-01, 9.9010e-01],
         [1.1698e-03, 9.9592e-01, 9.8280e-01,  ..., 1.5271e-03,
          3.2230e-01, 3.3493e-03]],
        [[2.1616e-03, 1.7544e-04, 1.6280e-04,  ..., 8.8570e-07,
          9.9905e-01, 3.6416e-03],
         [2.1616e-03, 1.1528e-04, 1.6280e-04,  ..., 8.8570e-07,
          3.1633e-04, 3.6416e-03],
         [9.9352e-01, 1.1528e-04, 1.6280e-04,  ..., 8.8570e-07,
          3.1633e-04, 9.8675e-01],
         [2.1616e-03, 9.9959e-01, 9.9951e-01,  ..., 1.0000e+00,
          3.1633e-04, 5.9622e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 663:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 1.5273e-03, 6.8523e-03,  ..., 1.0962e-05,
          1.3398e-03, 9.9696e-01],
         [5.9244e-06, 1.0180e-03, 2.9389e-03,  ..., 1.0962e-05,
          1.3398e-03, 7.4397e-04],
         [5.9244e-06, 1.0180e-03, 2.9389e-03,  ..., 9.9997e-01,
          9.9598e-01, 1.5513e-03],
         [5.9244e-06, 9.9644e-01, 9.8727e-01,  ..., 1.0962e-05,
          1.3398e-03, 7.4397e-04]],
        [[9.9934e-01, 9.5158e-04, 6.0124e-03,  ..., 3.5687e-04,
          1.0745e-03, 3.0928e-01],
         [2.2150e-04, 8.6818e-04, 3.7906e-03,  ..., 3.5687e-04,
          1.0745e-03, 7.8411e-02],
         [2.2150e-04, 8.6818e-04, 3.7906e-03,  ..., 9.9893e-01,
          9.9678e-01, 2.9219e-01],
         [2.2150e-04, 9.9731e-01, 9.8641e-01,  ..., 3.5687e-04,
          1.0745e-03, 3.2011e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:02,687 [Process: 0] Synchronize training processes
2024-08-18 15:25:02,687 [Process: 0] Evaluating...
2024-08-18 15:25:02,689 [Process: 0] EPOCH 663:
2024-08-18 15:25:02,691 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:03,825 [Process: 0] Synchronize training processes
2024-08-18 15:25:03,825 [Process: 0] Evaluating...
2024-08-18 15:25:03,827 [Process: 0] EPOCH 664:
2024-08-18 15:25:03,829 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9332e-03, 3.4132e-04, 8.5114e-02,  ..., 4.3573e-03,
          3.4829e-01, 2.9749e-03],
         [1.9332e-03, 3.7946e-04, 1.8335e-02,  ..., 4.3573e-03,
          8.1379e-02, 2.9749e-03],
         [9.9365e-01, 3.4132e-04, 1.2139e-02,  ..., 9.8602e-01,
          1.9456e-01, 9.9080e-01],
         [2.4880e-03, 9.9894e-01, 8.8441e-01,  ..., 5.2658e-03,
          3.7577e-01, 3.2486e-03]],
        [[1.6370e-03, 1.2095e-04, 9.6460e-06,  ..., 2.5824e-06,
          9.9860e-01, 4.7408e-04],
         [1.6370e-03, 1.2095e-04, 9.6460e-06,  ..., 2.5824e-06,
          4.8586e-04, 4.7408e-04],
         [9.9469e-01, 1.2095e-04, 9.6460e-06,  ..., 2.5824e-06,
          4.5752e-04, 9.9858e-01],
         [2.0332e-03, 9.9964e-01, 9.9997e-01,  ..., 9.9999e-01,
          4.5752e-04, 4.7408e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 664:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 7.7572e-04, 2.7036e-02,  ..., 8.0859e-06,
          1.0147e-04, 9.9624e-01],
         [9.8537e-06, 7.2151e-04, 8.0553e-03,  ..., 8.0859e-06,
          1.0147e-04, 1.2721e-03],
         [9.8537e-06, 7.2151e-04, 8.0553e-03,  ..., 9.9998e-01,
          9.9970e-01, 1.5751e-03],
         [9.8537e-06, 9.9778e-01, 9.5685e-01,  ..., 8.0859e-06,
          1.0147e-04, 9.1004e-04]],
        [[9.9937e-01, 6.5807e-03, 3.7074e-03,  ..., 4.7500e-02,
          2.2038e-03, 2.6319e-01],
         [3.0361e-04, 2.7571e-03, 3.0982e-03,  ..., 1.9114e-02,
          2.2038e-03, 6.6782e-02],
         [1.6577e-04, 2.7571e-03, 3.1164e-03,  ..., 9.0110e-01,
          9.9339e-01, 2.7554e-01],
         [1.6577e-04, 9.8791e-01, 9.9008e-01,  ..., 3.2283e-02,
          2.2038e-03, 3.9449e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1299e-03, 4.5686e-04, 1.5558e-01,  ..., 1.0725e-03,
          2.6685e-01, 4.3855e-03],
         [3.1299e-03, 4.6627e-04, 6.6754e-02,  ..., 1.0725e-03,
          6.5337e-02, 4.3855e-03],
         [9.9030e-01, 4.5686e-04, 3.2657e-02,  ..., 9.9678e-01,
          1.4550e-01, 9.8206e-01],
         [3.4437e-03, 9.9862e-01, 7.4501e-01,  ..., 1.0725e-03,
          5.2231e-01, 9.1661e-03]],
        [[3.3180e-03, 7.2007e-06, 8.9309e-06,  ..., 1.1809e-06,
          9.9936e-01, 2.3890e-03],
         [3.3180e-03, 7.2007e-06, 8.9309e-06,  ..., 1.1809e-06,
          2.0516e-04, 2.3890e-03],
         [9.8899e-01, 7.2007e-06, 8.9309e-06,  ..., 1.1809e-06,
          2.0516e-04, 9.9235e-01],
         [4.3764e-03, 9.9998e-01, 9.9997e-01,  ..., 1.0000e+00,
          2.3168e-04, 2.8748e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 665:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 1.1559e-03, 7.2970e-04,  ..., 5.1357e-05,
          1.4144e-04, 9.8222e-01],
         [2.8180e-06, 7.1286e-04, 7.2970e-04,  ..., 5.1357e-05,
          1.4144e-04, 8.4578e-03],
         [2.8180e-06, 7.1286e-04, 7.2970e-04,  ..., 9.9985e-01,
          9.9958e-01, 5.6713e-03],
         [2.8180e-06, 9.9742e-01, 9.9781e-01,  ..., 5.1357e-05,
          1.4144e-04, 3.6538e-03]],
        [[9.9916e-01, 9.1509e-03, 6.6307e-03,  ..., 3.8865e-03,
          7.4742e-04, 9.2911e-02],
         [2.7847e-04, 4.8298e-03, 5.3090e-03,  ..., 3.8865e-03,
          7.4742e-04, 3.5411e-02],
         [2.7847e-04, 4.8298e-03, 5.7273e-03,  ..., 9.8834e-01,
          9.9776e-01, 7.5299e-01],
         [2.7847e-04, 9.8119e-01, 9.8233e-01,  ..., 3.8865e-03,
          7.4742e-04, 1.1869e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:04,948 [Process: 0] Synchronize training processes
2024-08-18 15:25:04,948 [Process: 0] Evaluating...
2024-08-18 15:25:04,950 [Process: 0] EPOCH 665:
2024-08-18 15:25:04,952 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3577e-03, 1.0447e-03, 3.5586e-03,  ..., 1.6931e-03,
          2.9622e-01, 1.2664e-03],
         [3.3577e-03, 1.2434e-03, 1.5863e-03,  ..., 1.6931e-03,
          7.5363e-02, 1.2664e-03],
         [9.8910e-01, 1.0447e-03, 1.5863e-03,  ..., 9.9483e-01,
          1.6584e-01, 9.9620e-01],
         [4.1814e-03, 9.9667e-01, 9.9327e-01,  ..., 1.7789e-03,
          4.6258e-01, 1.2664e-03]],
        [[3.7738e-03, 5.0129e-05, 1.1049e-04,  ..., 4.9285e-06,
          9.9851e-01, 5.0822e-04],
         [3.7738e-03, 5.0129e-05, 1.1049e-04,  ..., 4.9285e-06,
          5.8298e-04, 5.0822e-04],
         [9.8691e-01, 5.0129e-05, 1.1049e-04,  ..., 4.9285e-06,
          4.5236e-04, 9.9848e-01],
         [5.5375e-03, 9.9985e-01, 9.9967e-01,  ..., 9.9999e-01,
          4.5236e-04, 5.0822e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 666:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9994e-01, 4.8563e-04, 2.3145e-04,  ..., 4.3333e-04,
          1.3785e-03, 9.9887e-01],
         [2.1533e-05, 4.8563e-04, 2.3145e-04,  ..., 4.3333e-04,
          1.3785e-03, 3.6154e-04],
         [2.1533e-05, 4.8563e-04, 2.3145e-04,  ..., 9.9870e-01,
          9.9586e-01, 4.0518e-04],
         [2.1533e-05, 9.9854e-01, 9.9931e-01,  ..., 4.3333e-04,
          1.3785e-03, 3.6154e-04]],
        [[9.9993e-01, 6.6306e-03, 3.2322e-03,  ..., 5.0847e-04,
          1.0936e-03, 8.7080e-04],
         [4.1437e-05, 5.3605e-03, 4.4555e-03,  ..., 5.0847e-04,
          1.0936e-03, 8.7080e-04],
         [1.4160e-05, 4.6841e-03, 3.2322e-03,  ..., 9.9847e-01,
          9.9672e-01, 9.9739e-01],
         [1.4160e-05, 9.8332e-01, 9.8908e-01,  ..., 5.0847e-04,
          1.0936e-03, 8.7080e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0490e-03, 1.0011e-04, 1.3905e-02,  ..., 9.7583e-04,
          2.4853e-01, 5.7714e-03],
         [4.0490e-03, 1.2664e-04, 2.7409e-03,  ..., 9.7583e-04,
          7.3085e-02, 5.7714e-03],
         [9.8562e-01, 1.0011e-04, 2.7409e-03,  ..., 9.9707e-01,
          1.4718e-01, 9.7703e-01],
         [6.2861e-03, 9.9967e-01, 9.8061e-01,  ..., 9.7583e-04,
          5.3120e-01, 1.1427e-02]],
        [[1.2252e-03, 3.5425e-05, 8.4328e-05,  ..., 4.5040e-06,
          9.9798e-01, 4.0726e-03],
         [1.2252e-03, 3.5425e-05, 8.4328e-05,  ..., 4.5040e-06,
          9.9708e-04, 4.0726e-03],
         [9.9632e-01, 3.5425e-05, 8.4328e-05,  ..., 4.5040e-06,
          5.0978e-04, 9.8746e-01],
         [1.2252e-03, 9.9989e-01, 9.9975e-01,  ..., 9.9999e-01,
          5.0978e-04, 4.3947e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 667:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:06,075 [Process: 0] Synchronize training processes
2024-08-18 15:25:06,076 [Process: 0] Evaluating...
2024-08-18 15:25:06,077 [Process: 0] EPOCH 666:
2024-08-18 15:25:06,079 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:07,210 [Process: 0] Synchronize training processes
2024-08-18 15:25:07,210 [Process: 0] Evaluating...
2024-08-18 15:25:07,212 [Process: 0] EPOCH 667:
2024-08-18 15:25:07,214 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 1.1561e-03, 6.5571e-04,  ..., 6.4966e-04,
          2.4913e-04, 9.9770e-01],
         [5.4949e-06, 1.1561e-03, 6.5571e-04,  ..., 6.4966e-04,
          2.4913e-04, 6.2303e-04],
         [5.4949e-06, 1.1561e-03, 6.5571e-04,  ..., 9.9805e-01,
          9.9925e-01, 1.0565e-03],
         [5.4949e-06, 9.9653e-01, 9.9803e-01,  ..., 6.4966e-04,
          2.4913e-04, 6.2303e-04]],
        [[9.9992e-01, 4.5622e-03, 3.8929e-03,  ..., 5.3201e-04,
          8.5383e-04, 5.0517e-04],
         [2.6192e-05, 3.8755e-03, 4.6707e-03,  ..., 5.3201e-04,
          8.5383e-04, 5.0517e-04],
         [2.6192e-05, 4.2332e-03, 3.7795e-03,  ..., 9.9840e-01,
          9.9744e-01, 9.9848e-01],
         [2.6192e-05, 9.8733e-01, 9.8766e-01,  ..., 5.3201e-04,
          8.5383e-04, 5.0517e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1325e-03, 6.0721e-04, 8.9848e-03,  ..., 8.6269e-04,
          2.0661e-01, 3.0301e-03],
         [2.1325e-03, 9.9065e-04, 9.1069e-03,  ..., 8.6269e-04,
          6.6638e-02, 3.0301e-03],
         [9.9360e-01, 6.0721e-04, 9.3100e-03,  ..., 9.9741e-01,
          1.9178e-01, 9.9091e-01],
         [2.1325e-03, 9.9779e-01, 9.7260e-01,  ..., 8.6269e-04,
          5.3497e-01, 3.0301e-03]],
        [[2.0310e-03, 8.2386e-04, 8.0855e-06,  ..., 8.1579e-06,
          9.9746e-01, 1.5600e-03],
         [2.0310e-03, 6.8158e-04, 8.0855e-06,  ..., 8.1579e-06,
          8.4704e-04, 1.5600e-03],
         [9.9372e-01, 6.8158e-04, 8.0855e-06,  ..., 8.1579e-06,
          8.4704e-04, 9.9529e-01],
         [2.2151e-03, 9.9781e-01, 9.9998e-01,  ..., 9.9998e-01,
          8.4704e-04, 1.5891e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 668:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9911e-01, 3.6135e-03, 2.9703e-03,  ..., 6.9520e-04,
          2.0918e-04, 9.9078e-01],
         [2.9534e-04, 1.6403e-03, 2.6325e-03,  ..., 6.9520e-04,
          2.0918e-04, 2.3045e-03],
         [2.9534e-04, 1.6403e-03, 2.6325e-03,  ..., 9.9791e-01,
          9.9937e-01, 4.6122e-03],
         [2.9534e-04, 9.9311e-01, 9.9176e-01,  ..., 6.9520e-04,
          2.0918e-04, 2.3045e-03]],
        [[9.9981e-01, 1.4851e-02, 4.2623e-03,  ..., 3.5453e-03,
          7.9483e-03, 1.7957e-03],
         [6.4264e-05, 1.3337e-02, 3.8454e-03,  ..., 3.1761e-03,
          7.1278e-03, 1.7957e-03],
         [6.4264e-05, 1.3063e-02, 3.8454e-03,  ..., 9.9010e-01,
          9.7772e-01, 9.9461e-01],
         [6.4264e-05, 9.5875e-01, 9.8805e-01,  ..., 3.1761e-03,
          7.2035e-03, 1.7957e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5967e-04, 1.3828e-04, 4.6816e-04,  ..., 1.0844e-03,
          2.2075e-01, 2.6621e-03],
         [5.5967e-04, 1.3828e-04, 5.8204e-04,  ..., 1.0844e-03,
          8.9279e-02, 2.6621e-03],
         [9.9832e-01, 1.3828e-04, 4.6816e-04,  ..., 9.9675e-01,
          1.7891e-01, 9.9139e-01],
         [5.5967e-04, 9.9959e-01, 9.9848e-01,  ..., 1.0844e-03,
          5.1106e-01, 3.2864e-03]],
        [[2.1861e-03, 7.3010e-06, 2.6603e-06,  ..., 5.9153e-04,
          9.9972e-01, 9.3875e-04],
         [2.1861e-03, 7.3010e-06, 2.6603e-06,  ..., 5.9153e-04,
          9.3741e-05, 9.3875e-04],
         [9.9300e-01, 7.3010e-06, 2.6603e-06,  ..., 5.9153e-04,
          9.3741e-05, 9.9718e-01],
         [2.6270e-03, 9.9998e-01, 9.9999e-01,  ..., 9.9823e-01,
          9.3741e-05, 9.3875e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 669:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:08,346 [Process: 0] Synchronize training processes
2024-08-18 15:25:08,346 [Process: 0] Evaluating...
2024-08-18 15:25:08,348 [Process: 0] EPOCH 668:
2024-08-18 15:25:08,350 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:09,475 [Process: 0] Synchronize training processes
2024-08-18 15:25:09,475 [Process: 0] Evaluating...
2024-08-18 15:25:09,477 [Process: 0] EPOCH 669:
2024-08-18 15:25:09,479 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 1.7418e-03, 3.7247e-04,  ..., 4.6993e-04,
          3.3294e-05, 9.9300e-01],
         [7.3504e-06, 1.7418e-03, 3.7247e-04,  ..., 4.6993e-04,
          3.3294e-05, 2.3328e-03],
         [7.3504e-06, 1.7418e-03, 3.7247e-04,  ..., 9.9859e-01,
          9.9990e-01, 2.3328e-03],
         [7.3504e-06, 9.9477e-01, 9.9888e-01,  ..., 4.6993e-04,
          3.3294e-05, 2.3328e-03]],
        [[9.9979e-01, 3.4738e-03, 1.9735e-03,  ..., 3.6377e-04,
          1.5131e-02, 3.8610e-04],
         [9.4819e-05, 3.4738e-03, 1.9735e-03,  ..., 3.6377e-04,
          8.9679e-03, 3.8610e-04],
         [5.6305e-05, 3.4738e-03, 1.9735e-03,  ..., 9.9891e-01,
          9.6587e-01, 9.9884e-01],
         [5.6305e-05, 9.8958e-01, 9.9408e-01,  ..., 3.6377e-04,
          1.0026e-02, 3.8610e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5895e-03, 2.7993e-04, 3.3808e-03,  ..., 1.6005e-03,
          2.2059e-01, 9.8994e-04],
         [4.5895e-03, 2.7993e-04, 4.3708e-03,  ..., 1.6005e-03,
          8.7979e-02, 9.8994e-04],
         [9.8394e-01, 2.7993e-04, 3.2679e-03,  ..., 9.9520e-01,
          1.7886e-01, 9.9703e-01],
         [6.8815e-03, 9.9916e-01, 9.8898e-01,  ..., 1.6005e-03,
          5.1257e-01, 9.8994e-04]],
        [[2.3321e-03, 1.5973e-05, 1.5199e-05,  ..., 7.8344e-06,
          9.9845e-01, 4.3287e-03],
         [2.3321e-03, 1.5973e-05, 1.5199e-05,  ..., 7.8344e-06,
          5.1566e-04, 4.3287e-03],
         [9.9300e-01, 1.5973e-05, 1.5199e-05,  ..., 7.8344e-06,
          5.1566e-04, 9.8453e-01],
         [2.3321e-03, 9.9995e-01, 9.9995e-01,  ..., 9.9998e-01,
          5.1566e-04, 6.8165e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 670:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0000e+00, 2.6362e-03, 1.6133e-03,  ..., 1.5569e-03,
          2.0430e-03, 9.9467e-01],
         [2.3617e-08, 2.6362e-03, 1.6133e-03,  ..., 1.5569e-03,
          2.0430e-03, 1.7612e-03],
         [2.3617e-08, 2.9489e-03, 1.6133e-03,  ..., 9.9533e-01,
          9.9387e-01, 1.8046e-03],
         [2.3617e-08, 9.9178e-01, 9.9516e-01,  ..., 1.5569e-03,
          2.0430e-03, 1.7612e-03]],
        [[9.9943e-01, 1.7181e-03, 2.8556e-03,  ..., 2.1869e-03,
          3.3477e-02, 4.5665e-04],
         [1.8999e-04, 2.0048e-03, 3.0312e-03,  ..., 2.1869e-03,
          1.4783e-02, 4.5665e-04],
         [1.8999e-04, 1.7181e-03, 2.8556e-03,  ..., 9.9344e-01,
          9.2894e-01, 9.9863e-01],
         [1.8999e-04, 9.9456e-01, 9.9126e-01,  ..., 2.1869e-03,
          2.2796e-02, 4.5665e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:25:10,607 [Process: 0] Synchronize training processes
2024-08-18 15:25:10,607 [Process: 0] Evaluating...
2024-08-18 15:25:10,609 [Process: 0] EPOCH 670:
2024-08-18 15:25:10,610 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:11,739 [Process: 0] Synchronize training processes
2024-08-18 15:25:11,740 [Process: 0] Evaluating...
2024-08-18 15:25:11,741 [Process: 0] EPOCH 671:
2024-08-18 15:25:11,743 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.0051e-03, 1.8385e-04, 4.1574e-03,  ..., 1.5676e-03,
          1.4262e-01, 2.1664e-03],
         [2.5813e-03, 1.8385e-04, 4.1574e-03,  ..., 1.5676e-03,
          6.7966e-02, 2.0806e-03],
         [9.9183e-01, 1.8385e-04, 4.1574e-03,  ..., 9.9487e-01,
          1.5523e-01, 9.9367e-01],
         [2.5813e-03, 9.9945e-01, 9.8753e-01,  ..., 1.9971e-03,
          6.3418e-01, 2.0806e-03]],
        [[5.7566e-03, 2.5173e-05, 7.1568e-05,  ..., 4.3492e-06,
          9.9656e-01, 2.1204e-03],
         [3.9237e-03, 2.5173e-05, 7.1568e-05,  ..., 4.3492e-06,
          1.1339e-03, 2.1204e-03],
         [9.8515e-01, 2.5173e-05, 7.1568e-05,  ..., 4.3492e-06,
          1.1339e-03, 9.9339e-01],
         [5.1679e-03, 9.9992e-01, 9.9979e-01,  ..., 9.9999e-01,
          1.1704e-03, 2.3727e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 671:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0000e+00, 2.8562e-03, 2.6987e-03,  ..., 3.4739e-03,
          5.3037e-04, 9.9861e-01],
         [3.9635e-07, 2.6751e-03, 2.6987e-03,  ..., 3.4739e-03,
          5.3037e-04, 4.6238e-04],
         [3.9635e-07, 2.6751e-03, 2.6987e-03,  ..., 9.8920e-01,
          9.9841e-01, 4.6238e-04],
         [3.9635e-07, 9.9179e-01, 9.9190e-01,  ..., 3.8498e-03,
          5.3037e-04, 4.6238e-04]],
        [[9.8998e-01, 1.1376e-02, 3.1964e-03,  ..., 6.2217e-04,
          6.7538e-03, 4.9105e-04],
         [5.7609e-03, 7.9991e-03, 4.2604e-03,  ..., 6.2217e-04,
          3.6431e-03, 4.9105e-04],
         [2.1274e-03, 1.1812e-02, 3.6986e-03,  ..., 9.9813e-01,
          9.8596e-01, 9.9853e-01],
         [2.1274e-03, 9.6881e-01, 9.8884e-01,  ..., 6.2217e-04,
          3.6431e-03, 4.9105e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.0186e-03, 3.0379e-04, 5.4127e-04,  ..., 8.1633e-04,
          1.0774e-01, 2.0445e-03],
         [4.3346e-03, 3.0379e-04, 5.4127e-04,  ..., 8.1633e-04,
          4.7984e-02, 2.0445e-03],
         [9.8458e-01, 3.0379e-04, 5.4127e-04,  ..., 9.9755e-01,
          8.7402e-02, 9.9353e-01],
         [6.0711e-03, 9.9909e-01, 9.9838e-01,  ..., 8.1633e-04,
          7.5688e-01, 2.3860e-03]],
        [[1.5652e-03, 3.6677e-06, 7.5365e-04,  ..., 2.4331e-05,
          9.9913e-01, 1.0830e-03],
         [1.5652e-03, 3.6677e-06, 7.5365e-04,  ..., 2.4331e-05,
          2.8880e-04, 1.0830e-03],
         [9.9505e-01, 3.6677e-06, 7.5365e-04,  ..., 2.4331e-05,
          2.8880e-04, 9.9675e-01],
         [1.8187e-03, 9.9999e-01, 9.9774e-01,  ..., 9.9993e-01,
          2.8880e-04, 1.0830e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 672:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9971e-01, 1.0322e-03, 9.5452e-04,  ..., 3.9422e-04,
          5.1552e-04, 9.9372e-01],
         [9.7360e-05, 1.0322e-03, 9.5452e-04,  ..., 3.9422e-04,
          5.1552e-04, 2.4342e-03],
         [9.7360e-05, 1.0322e-03, 9.5452e-04,  ..., 9.9882e-01,
          9.9845e-01, 1.9235e-03],
         [9.7360e-05, 9.9690e-01, 9.9714e-01,  ..., 3.9422e-04,
          5.1552e-04, 1.9235e-03]],
        [[9.9676e-01, 2.9089e-03, 3.1623e-03,  ..., 6.7853e-04,
          1.1862e-03, 1.3355e-03],
         [1.0797e-03, 2.9089e-03, 3.1623e-03,  ..., 6.7853e-04,
          1.0468e-03, 1.3355e-03],
         [1.0797e-03, 2.9834e-03, 3.1623e-03,  ..., 9.9796e-01,
          9.9672e-01, 9.9599e-01],
         [1.0797e-03, 9.9120e-01, 9.9051e-01,  ..., 6.7853e-04,
          1.0468e-03, 1.3355e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:12,869 [Process: 0] Synchronize training processes
2024-08-18 15:25:12,869 [Process: 0] Evaluating...
2024-08-18 15:25:12,873 [Process: 0] EPOCH 672:
2024-08-18 15:25:12,875 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:13,997 [Process: 0] Synchronize training processes
2024-08-18 15:25:13,997 [Process: 0] Evaluating...
2024-08-18 15:25:13,999 [Process: 0] EPOCH 673:
2024-08-18 15:25:14,000 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5426e-04, 4.5054e-05, 2.2141e-04,  ..., 1.1283e-03,
          9.7068e-03, 7.9802e-03],
         [3.5426e-04, 4.5054e-05, 2.2141e-04,  ..., 1.1283e-03,
          6.4360e-03, 3.7577e-03],
         [9.9894e-01, 4.5054e-05, 2.2141e-04,  ..., 9.9635e-01,
          6.4360e-03, 9.8450e-01],
         [3.5426e-04, 9.9986e-01, 9.9934e-01,  ..., 1.3962e-03,
          9.7742e-01, 3.7577e-03]],
        [[2.1261e-03, 1.7252e-05, 1.0635e-05,  ..., 4.3349e-05,
          9.9975e-01, 9.1928e-04],
         [2.1261e-03, 1.7252e-05, 1.0635e-05,  ..., 4.3349e-05,
          8.1941e-05, 9.1928e-04],
         [9.9362e-01, 1.7252e-05, 1.0635e-05,  ..., 4.3349e-05,
          8.1941e-05, 9.9724e-01],
         [2.1261e-03, 9.9995e-01, 9.9997e-01,  ..., 9.9987e-01,
          8.1941e-05, 9.1928e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 673:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 1.2515e-03, 2.4918e-03,  ..., 3.3855e-03,
          2.5837e-03, 9.5703e-01],
         [2.2894e-06, 1.2515e-03, 2.4918e-03,  ..., 3.3855e-03,
          2.1631e-03, 1.6881e-02],
         [2.2894e-06, 1.2515e-03, 2.4918e-03,  ..., 9.8862e-01,
          9.9309e-01, 1.4417e-02],
         [2.2894e-06, 9.9625e-01, 9.9252e-01,  ..., 4.6103e-03,
          2.1631e-03, 1.1672e-02]],
        [[9.9867e-01, 1.5052e-03, 1.8347e-03,  ..., 1.6617e-04,
          2.1098e-03, 6.1840e-04],
         [6.9250e-04, 1.6175e-03, 1.8347e-03,  ..., 1.6617e-04,
          1.9591e-03, 5.0245e-04],
         [3.2096e-04, 1.5052e-03, 1.8347e-03,  ..., 9.9950e-01,
          9.9397e-01, 9.9838e-01],
         [3.2096e-04, 9.9537e-01, 9.9450e-01,  ..., 1.6617e-04,
          1.9591e-03, 5.0245e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8052e-02, 4.4494e-05, 1.7796e-03,  ..., 1.4704e-03,
          2.0373e-03, 5.6372e-03],
         [1.7751e-02, 4.4494e-05, 3.0893e-03,  ..., 1.4704e-03,
          2.0373e-03, 4.0030e-03],
         [8.9696e-01, 4.4494e-05, 1.7796e-03,  ..., 9.9539e-01,
          2.0373e-03, 9.8542e-01],
         [5.7234e-02, 9.9987e-01, 9.9335e-01,  ..., 1.6698e-03,
          9.9389e-01, 4.9389e-03]],
        [[3.2059e-03, 4.3152e-03, 8.3542e-04,  ..., 7.5225e-06,
          9.9972e-01, 2.6589e-03],
         [3.0856e-03, 4.3152e-03, 8.3542e-04,  ..., 7.5225e-06,
          9.2961e-05, 2.6589e-03],
         [9.8964e-01, 4.3152e-03, 8.3542e-04,  ..., 7.5225e-06,
          9.2961e-05, 9.9101e-01],
         [4.0728e-03, 9.8705e-01, 9.9749e-01,  ..., 9.9998e-01,
          9.2961e-05, 3.6730e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 674:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 6.6184e-03, 2.4202e-03,  ..., 1.2867e-03,
          7.0185e-04, 9.9871e-01],
         [5.5349e-06, 6.6184e-03, 2.4202e-03,  ..., 1.2867e-03,
          7.0185e-04, 4.4073e-04],
         [5.5349e-06, 8.8356e-03, 2.4202e-03,  ..., 9.9614e-01,
          9.9789e-01, 4.2652e-04],
         [5.5349e-06, 9.7793e-01, 9.9274e-01,  ..., 1.2867e-03,
          7.0185e-04, 4.2652e-04]],
        [[9.9403e-01, 3.2889e-03, 2.2900e-03,  ..., 2.0834e-05,
          2.6048e-04, 1.7427e-04],
         [3.1607e-03, 3.2889e-03, 2.2900e-03,  ..., 2.0834e-05,
          2.4750e-04, 1.7427e-04],
         [1.4031e-03, 4.0837e-03, 2.2900e-03,  ..., 9.9994e-01,
          9.9924e-01, 9.9948e-01],
         [1.4031e-03, 9.8934e-01, 9.9313e-01,  ..., 2.0834e-05,
          2.4750e-04, 1.7427e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:15,131 [Process: 0] Synchronize training processes
2024-08-18 15:25:15,131 [Process: 0] Evaluating...
2024-08-18 15:25:15,133 [Process: 0] EPOCH 674:
2024-08-18 15:25:15,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0658e-02, 7.4616e-04, 2.1913e-04,  ..., 4.0176e-03,
          1.2330e-01, 3.1970e-02],
         [6.4290e-03, 7.4616e-04, 2.1913e-04,  ..., 2.6932e-03,
          4.6779e-02, 1.4187e-02],
         [9.7148e-01, 7.4616e-04, 2.1913e-04,  ..., 9.9019e-01,
          7.6061e-02, 9.2258e-01],
         [1.1431e-02, 9.9776e-01, 9.9934e-01,  ..., 3.1024e-03,
          7.5386e-01, 3.1263e-02]],
        [[3.0867e-04, 3.6107e-06, 3.3209e-05,  ..., 1.1777e-05,
          9.9976e-01, 1.4866e-03],
         [3.0867e-04, 3.6107e-06, 3.3209e-05,  ..., 1.1777e-05,
          7.9974e-05, 1.4866e-03],
         [9.9907e-01, 3.6107e-06, 3.3209e-05,  ..., 1.1777e-05,
          7.9974e-05, 9.9554e-01],
         [3.0867e-04, 9.9999e-01, 9.9990e-01,  ..., 9.9996e-01,
          7.9974e-05, 1.4866e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 675:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 1.5010e-03, 2.2067e-03,  ..., 3.0526e-04,
          2.1173e-04, 9.7405e-01],
         [2.2127e-05, 1.5010e-03, 2.2067e-03,  ..., 3.0526e-04,
          2.1173e-04, 1.4598e-02],
         [2.2127e-05, 1.5010e-03, 2.2613e-03,  ..., 9.9908e-01,
          9.9936e-01, 6.0449e-03],
         [2.2127e-05, 9.9550e-01, 9.9333e-01,  ..., 3.0526e-04,
          2.1173e-04, 5.3066e-03]],
        [[9.9817e-01, 1.3790e-03, 1.2594e-03,  ..., 2.2104e-03,
          1.5005e-03, 6.2812e-04],
         [6.1067e-04, 1.3790e-03, 1.3300e-03,  ..., 1.2099e-03,
          1.2043e-03, 6.2812e-04],
         [6.1067e-04, 1.3790e-03, 1.2594e-03,  ..., 9.9537e-01,
          9.9609e-01, 9.9812e-01],
         [6.1067e-04, 9.9586e-01, 9.9615e-01,  ..., 1.2099e-03,
          1.2043e-03, 6.2812e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6367e-03, 9.6496e-05, 1.2516e-04,  ..., 9.0730e-03,
          1.1034e-01, 1.1930e-03],
         [1.9605e-03, 9.6496e-05, 1.2516e-04,  ..., 3.6994e-03,
          5.4114e-02, 1.1780e-03],
         [9.9344e-01, 9.6496e-05, 1.2516e-04,  ..., 9.8353e-01,
          6.4205e-02, 9.9645e-01],
         [1.9605e-03, 9.9971e-01, 9.9962e-01,  ..., 3.6994e-03,
          7.7134e-01, 1.1780e-03]],
        [[2.6483e-03, 1.1372e-05, 1.4325e-05,  ..., 4.1288e-06,
          9.9951e-01, 2.6928e-03],
         [2.0682e-03, 1.1372e-05, 1.4325e-05,  ..., 4.1288e-06,
          1.6386e-04, 2.6928e-03],
         [9.9322e-01, 1.1372e-05, 1.4325e-05,  ..., 4.1288e-06,
          1.6386e-04, 9.9083e-01],
         [2.0682e-03, 9.9997e-01, 9.9996e-01,  ..., 9.9999e-01,
          1.6386e-04, 3.7876e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 676:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:16,264 [Process: 0] Synchronize training processes
2024-08-18 15:25:16,265 [Process: 0] Evaluating...
2024-08-18 15:25:16,266 [Process: 0] EPOCH 675:
2024-08-18 15:25:16,268 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:17,411 [Process: 0] Synchronize training processes
2024-08-18 15:25:17,411 [Process: 0] Evaluating...
2024-08-18 15:25:17,413 [Process: 0] EPOCH 676:
2024-08-18 15:25:17,415 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 1.1176e-03, 1.3701e-03,  ..., 3.4458e-04,
          4.6563e-04, 9.9733e-01],
         [8.1185e-06, 1.1176e-03, 1.3701e-03,  ..., 3.4458e-04,
          4.6563e-04, 8.9144e-04],
         [8.1185e-06, 1.1176e-03, 1.3701e-03,  ..., 9.9897e-01,
          9.9860e-01, 8.9144e-04],
         [8.1185e-06, 9.9665e-01, 9.9589e-01,  ..., 3.4458e-04,
          4.6563e-04, 8.9144e-04]],
        [[9.9728e-01, 3.0916e-03, 5.1158e-04,  ..., 1.7733e-03,
          1.0387e-02, 3.5685e-04],
         [7.7608e-04, 3.0916e-03, 5.3142e-04,  ..., 1.7733e-03,
          4.6499e-03, 3.5685e-04],
         [1.1694e-03, 3.0916e-03, 5.1158e-04,  ..., 9.9468e-01,
          9.8031e-01, 9.9893e-01],
         [7.7608e-04, 9.9073e-01, 9.9845e-01,  ..., 1.7733e-03,
          4.6499e-03, 3.5685e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0615e-03, 9.0143e-05, 2.4438e-03,  ..., 3.5107e-03,
          1.1757e-01, 9.3777e-04],
         [1.0427e-03, 9.0143e-05, 2.4438e-03,  ..., 2.4109e-03,
          5.7726e-02, 9.3777e-04],
         [9.9685e-01, 9.0143e-05, 2.4438e-03,  ..., 9.9167e-01,
          7.3881e-02, 9.9719e-01],
         [1.0427e-03, 9.9973e-01, 9.9267e-01,  ..., 2.4109e-03,
          7.5082e-01, 9.3777e-04]],
        [[1.3406e-03, 1.1892e-04, 9.8905e-05,  ..., 1.5835e-06,
          9.9882e-01, 5.1203e-03],
         [1.3406e-03, 1.1892e-04, 9.8905e-05,  ..., 1.5835e-06,
          3.9475e-04, 3.0447e-03],
         [9.9592e-01, 1.1892e-04, 9.8905e-05,  ..., 1.5835e-06,
          3.9475e-04, 9.8858e-01],
         [1.3943e-03, 9.9964e-01, 9.9970e-01,  ..., 1.0000e+00,
          3.9475e-04, 3.2597e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 677:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 2.3324e-03, 5.8425e-03,  ..., 2.2105e-04,
          1.3524e-03, 9.9233e-01],
         [8.0607e-06, 2.3324e-03, 5.9944e-03,  ..., 2.2105e-04,
          1.3524e-03, 2.7326e-03],
         [8.0607e-06, 2.3324e-03, 5.8425e-03,  ..., 9.9934e-01,
          9.9594e-01, 2.4710e-03],
         [8.0607e-06, 9.9300e-01, 9.8232e-01,  ..., 2.2105e-04,
          1.3524e-03, 2.4710e-03]],
        [[9.9939e-01, 2.6478e-03, 1.5665e-03,  ..., 5.1683e-04,
          3.2157e-02, 1.7494e-04],
         [3.1197e-04, 2.6478e-03, 1.5665e-03,  ..., 5.1683e-04,
          1.4135e-02, 1.7494e-04],
         [1.4767e-04, 2.6478e-03, 1.5665e-03,  ..., 9.9845e-01,
          9.3232e-01, 9.9948e-01],
         [1.4767e-04, 9.9206e-01, 9.9530e-01,  ..., 5.1683e-04,
          2.1385e-02, 1.7494e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.3805e-04, 1.2223e-03, 2.7308e-04,  ..., 2.1263e-03,
          2.7115e-02, 7.4083e-04],
         [8.3805e-04, 1.2223e-03, 2.7308e-04,  ..., 1.5432e-03,
          1.8562e-02, 7.4083e-04],
         [9.9749e-01, 1.2223e-03, 2.7308e-04,  ..., 9.9479e-01,
          1.6250e-02, 9.9778e-01],
         [8.3805e-04, 9.9633e-01, 9.9918e-01,  ..., 1.5432e-03,
          9.3807e-01, 7.4083e-04]],
        [[2.5621e-03, 3.2599e-05, 2.3768e-05,  ..., 5.5237e-07,
          9.9928e-01, 5.8158e-03],
         [2.5621e-03, 3.2599e-05, 2.3768e-05,  ..., 5.5237e-07,
          2.3989e-04, 3.0274e-03],
         [9.9175e-01, 3.2599e-05, 2.3768e-05,  ..., 5.5237e-07,
          2.3989e-04, 9.8813e-01],
         [3.1254e-03, 9.9990e-01, 9.9993e-01,  ..., 1.0000e+00,
          2.3989e-04, 3.0274e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:18,547 [Process: 0] Synchronize training processes
2024-08-18 15:25:18,547 [Process: 0] Evaluating...
2024-08-18 15:25:18,549 [Process: 0] EPOCH 677:
2024-08-18 15:25:18,551 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:19,676 [Process: 0] Synchronize training processes
2024-08-18 15:25:19,676 [Process: 0] Evaluating...
2024-08-18 15:25:19,678 [Process: 0] EPOCH 678:
2024-08-18 15:25:19,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 678:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 4.7208e-04, 5.3259e-04,  ..., 1.1434e-03,
          1.0867e-04, 9.9627e-01],
         [6.5591e-06, 4.7208e-04, 5.3259e-04,  ..., 1.1434e-03,
          1.0867e-04, 1.1534e-03],
         [6.5591e-06, 4.7208e-04, 5.3259e-04,  ..., 9.9657e-01,
          9.9967e-01, 1.4227e-03],
         [6.5591e-06, 9.9858e-01, 9.9840e-01,  ..., 1.1434e-03,
          1.0867e-04, 1.1534e-03]],
        [[9.9968e-01, 5.0179e-03, 2.2591e-03,  ..., 6.3878e-04,
          8.6027e-03, 2.1749e-04],
         [1.0876e-04, 6.2380e-03, 2.4430e-03,  ..., 6.3878e-04,
          4.9315e-03, 2.1749e-04],
         [1.0688e-04, 7.4313e-03, 2.2591e-03,  ..., 9.9808e-01,
          9.8153e-01, 9.9935e-01],
         [1.0688e-04, 9.8131e-01, 9.9304e-01,  ..., 6.3878e-04,
          4.9315e-03, 2.1749e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4127e-03, 1.6456e-02, 3.4012e-03,  ..., 9.9795e-04,
          2.2562e-02, 7.8898e-04],
         [1.4127e-03, 1.4762e-02, 6.9536e-03,  ..., 9.9795e-04,
          1.7626e-02, 7.8898e-04],
         [9.9562e-01, 1.3166e-02, 3.4012e-03,  ..., 9.9701e-01,
          1.9576e-02, 9.9763e-01],
         [1.5555e-03, 9.5562e-01, 9.8624e-01,  ..., 9.9795e-04,
          9.4024e-01, 7.8898e-04]],
        [[2.7689e-04, 2.3286e-05, 7.8942e-04,  ..., 1.6663e-05,
          9.9678e-01, 2.7395e-02],
         [2.7689e-04, 2.3286e-05, 7.8942e-04,  ..., 1.6663e-05,
          1.0727e-03, 1.0037e-02],
         [9.9917e-01, 2.3286e-05, 7.8942e-04,  ..., 1.6663e-05,
          1.0727e-03, 9.4778e-01],
         [2.7689e-04, 9.9993e-01, 9.9763e-01,  ..., 9.9995e-01,
          1.0727e-03, 1.4784e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 679:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9995e-01, 1.7590e-03, 3.1198e-03,  ..., 3.6385e-04,
          1.0979e-03, 9.9812e-01],
         [1.6835e-05, 1.7590e-03, 3.1198e-03,  ..., 3.6385e-04,
          1.0979e-03, 5.9807e-04],
         [1.6835e-05, 1.7590e-03, 3.1198e-03,  ..., 9.9891e-01,
          9.9671e-01, 6.8413e-04],
         [1.6835e-05, 9.9472e-01, 9.9064e-01,  ..., 3.6385e-04,
          1.0979e-03, 5.9807e-04]],
        [[9.9455e-01, 2.7875e-03, 1.1518e-03,  ..., 1.0923e-03,
          2.7272e-04, 9.0725e-05],
         [2.5517e-03, 2.9184e-03, 1.1518e-03,  ..., 9.5370e-04,
          2.7272e-04, 9.0725e-05],
         [1.4496e-03, 2.7875e-03, 1.1518e-03,  ..., 9.9700e-01,
          9.9918e-01, 9.9973e-01],
         [1.4496e-03, 9.9151e-01, 9.9654e-01,  ..., 9.5370e-04,
          2.7272e-04, 9.0725e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:20,797 [Process: 0] Synchronize training processes
2024-08-18 15:25:20,797 [Process: 0] Evaluating...
2024-08-18 15:25:20,799 [Process: 0] EPOCH 679:
2024-08-18 15:25:20,801 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:21,918 [Process: 0] Synchronize training processes
2024-08-18 15:25:21,918 [Process: 0] Evaluating...
2024-08-18 15:25:21,920 [Process: 0] EPOCH 680:
2024-08-18 15:25:21,922 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7148e-03, 9.0805e-01, 1.5770e-02,  ..., 5.3655e-04,
          2.8197e-03, 4.5471e-04],
         [2.4124e-03, 4.4239e-02, 9.4676e-03,  ..., 5.3655e-04,
          2.8197e-03, 4.5471e-04],
         [9.9246e-01, 1.9327e-02, 9.4676e-03,  ..., 9.9839e-01,
          2.8197e-03, 9.9864e-01],
         [2.4124e-03, 2.8386e-02, 9.6530e-01,  ..., 5.3655e-04,
          9.9154e-01, 4.5471e-04]],
        [[1.8604e-02, 4.2251e-05, 3.7236e-04,  ..., 6.0278e-07,
          9.9925e-01, 1.7794e-03],
         [1.2429e-02, 4.2251e-05, 3.7236e-04,  ..., 6.0278e-07,
          2.5135e-04, 1.7794e-03],
         [9.4240e-01, 4.2251e-05, 3.7236e-04,  ..., 6.0278e-07,
          2.5135e-04, 9.9440e-01],
         [2.6572e-02, 9.9987e-01, 9.9888e-01,  ..., 1.0000e+00,
          2.5135e-04, 2.0413e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 680:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9968e-01, 4.4632e-04, 1.2913e-03,  ..., 8.6759e-04,
          4.7937e-04, 9.9443e-01],
         [1.0537e-04, 4.4632e-04, 1.2913e-03,  ..., 7.6177e-04,
          4.7937e-04, 1.8556e-03],
         [1.0537e-04, 4.4632e-04, 1.2913e-03,  ..., 9.9761e-01,
          9.9856e-01, 1.8556e-03],
         [1.0537e-04, 9.9866e-01, 9.9613e-01,  ..., 7.6177e-04,
          4.7937e-04, 1.8556e-03]],
        [[9.9747e-01, 1.4113e-03, 4.2619e-03,  ..., 3.9015e-03,
          4.0958e-03, 5.9497e-05],
         [8.4190e-04, 1.4113e-03, 4.2448e-03,  ..., 3.6244e-03,
          4.0958e-03, 5.9497e-05],
         [8.4190e-04, 1.4113e-03, 4.2448e-03,  ..., 9.8885e-01,
          9.8748e-01, 9.9982e-01],
         [8.4190e-04, 9.9577e-01, 9.8725e-01,  ..., 3.6244e-03,
          4.3267e-03, 5.9497e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0930e-03, 9.6041e-03, 8.5967e-03,  ..., 2.2716e-03,
          2.1629e-03, 1.2711e-03],
         [1.6813e-03, 5.8582e-03, 2.3564e-02,  ..., 2.2716e-03,
          2.3310e-03, 1.2711e-03],
         [9.9454e-01, 5.8582e-03, 8.5967e-03,  ..., 9.9238e-01,
          2.1629e-03, 9.9617e-01],
         [1.6813e-03, 9.7868e-01, 9.5924e-01,  ..., 3.0788e-03,
          9.9334e-01, 1.2921e-03]],
        [[6.1695e-04, 5.2222e-05, 2.6513e-04,  ..., 2.1346e-05,
          9.9650e-01, 7.7751e-03],
         [6.1695e-04, 5.2222e-05, 2.6513e-04,  ..., 2.1346e-05,
          1.1677e-03, 4.5583e-03],
         [9.9815e-01, 5.2222e-05, 2.6513e-04,  ..., 2.1346e-05,
          1.1677e-03, 9.8237e-01],
         [6.1695e-04, 9.9984e-01, 9.9920e-01,  ..., 9.9994e-01,
          1.1677e-03, 5.2948e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 681:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 1.7801e-03, 4.7440e-04,  ..., 2.1909e-04,
          1.2149e-03, 9.9713e-01],
         [4.9568e-05, 1.7801e-03, 4.7440e-04,  ..., 2.1909e-04,
          1.2149e-03, 9.1512e-04],
         [4.9568e-05, 1.7801e-03, 4.7440e-04,  ..., 9.9934e-01,
          9.9636e-01, 1.0361e-03],
         [4.9568e-05, 9.9466e-01, 9.9858e-01,  ..., 2.1909e-04,
          1.2149e-03, 9.1512e-04]],
        [[9.9931e-01, 2.2037e-03, 1.8936e-03,  ..., 1.1900e-03,
          3.5233e-03, 3.7753e-03],
         [2.3104e-04, 2.2037e-03, 1.9384e-03,  ..., 1.1900e-03,
          2.4808e-03, 3.5626e-03],
         [2.3104e-04, 2.2037e-03, 1.8936e-03,  ..., 9.9643e-01,
          9.9151e-01, 9.8910e-01],
         [2.3104e-04, 9.9339e-01, 9.9427e-01,  ..., 1.1900e-03,
          2.4808e-03, 3.5626e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:23,048 [Process: 0] Synchronize training processes
2024-08-18 15:25:23,048 [Process: 0] Evaluating...
2024-08-18 15:25:23,050 [Process: 0] EPOCH 681:
2024-08-18 15:25:23,052 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.9356e-03, 4.1615e-05, 3.6160e-03,  ..., 1.0223e-03,
          3.1794e-03, 5.5315e-04],
         [4.6599e-03, 4.1615e-05, 3.6160e-03,  ..., 1.0223e-03,
          3.1794e-03, 5.5315e-04],
         [9.8314e-01, 4.1615e-05, 3.6160e-03,  ..., 9.9693e-01,
          3.1794e-03, 9.9834e-01],
         [6.2648e-03, 9.9988e-01, 9.8915e-01,  ..., 1.0223e-03,
          9.9046e-01, 5.5315e-04]],
        [[1.2109e-03, 2.0673e-05, 2.5856e-04,  ..., 6.1822e-06,
          9.9920e-01, 3.4903e-02],
         [1.2109e-03, 2.0673e-05, 2.5856e-04,  ..., 6.1822e-06,
          2.6696e-04, 1.3235e-02],
         [9.9637e-01, 2.0673e-05, 2.5856e-04,  ..., 6.1822e-06,
          2.6696e-04, 9.2939e-01],
         [1.2109e-03, 9.9994e-01, 9.9922e-01,  ..., 9.9998e-01,
          2.6696e-04, 2.2468e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 682:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 1.0952e-03, 7.6059e-04,  ..., 5.1802e-05,
          4.7839e-04, 9.9929e-01],
         [6.6810e-06, 1.0952e-03, 7.6059e-04,  ..., 5.1802e-05,
          4.7839e-04, 2.3656e-04],
         [6.6810e-06, 1.0952e-03, 7.6059e-04,  ..., 9.9984e-01,
          9.9856e-01, 2.3656e-04],
         [6.6810e-06, 9.9671e-01, 9.9772e-01,  ..., 5.1802e-05,
          4.7839e-04, 2.3656e-04]],
        [[9.9561e-01, 2.3890e-03, 8.3425e-04,  ..., 3.5886e-04,
          1.2787e-03, 1.0190e-04],
         [3.0542e-03, 2.3890e-03, 8.3425e-04,  ..., 3.5886e-04,
          1.2787e-03, 1.0190e-04],
         [6.6722e-04, 2.5332e-03, 8.3425e-04,  ..., 9.9892e-01,
          9.9616e-01, 9.9969e-01],
         [6.6722e-04, 9.9269e-01, 9.9750e-01,  ..., 3.5886e-04,
          1.2787e-03, 1.0190e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0086e-04, 2.3154e-04, 4.5211e-04,  ..., 6.1953e-04,
          8.3883e-05, 1.7260e-04],
         [4.0086e-04, 2.3154e-04, 4.5211e-04,  ..., 6.1953e-04,
          8.3883e-05, 1.7260e-04],
         [9.9880e-01, 2.3154e-04, 4.5211e-04,  ..., 9.9814e-01,
          8.3883e-05, 9.9948e-01],
         [4.0086e-04, 9.9931e-01, 9.9864e-01,  ..., 6.1953e-04,
          9.9975e-01, 1.7260e-04]],
        [[1.2909e-03, 2.6299e-05, 1.0135e-04,  ..., 3.0028e-06,
          9.9964e-01, 9.6048e-04],
         [1.2909e-03, 2.6299e-05, 1.0135e-04,  ..., 3.0028e-06,
          1.2146e-04, 9.6048e-04],
         [9.9613e-01, 2.6299e-05, 1.0135e-04,  ..., 3.0028e-06,
          1.2146e-04, 9.9712e-01],
         [1.2909e-03, 9.9992e-01, 9.9970e-01,  ..., 9.9999e-01,
          1.2146e-04, 9.6048e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 683:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:24,172 [Process: 0] Synchronize training processes
2024-08-18 15:25:24,172 [Process: 0] Evaluating...
2024-08-18 15:25:24,176 [Process: 0] EPOCH 682:
2024-08-18 15:25:24,178 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:25,300 [Process: 0] Synchronize training processes
2024-08-18 15:25:25,300 [Process: 0] Evaluating...
2024-08-18 15:25:25,302 [Process: 0] EPOCH 683:
2024-08-18 15:25:25,304 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 1.4551e-03, 6.0995e-04,  ..., 4.3536e-06,
          1.7528e-04, 9.9951e-01],
         [8.6168e-06, 1.4551e-03, 6.0995e-04,  ..., 4.3536e-06,
          1.7528e-04, 1.6340e-04],
         [8.6168e-06, 1.4551e-03, 6.0995e-04,  ..., 9.9999e-01,
          9.9947e-01, 1.6340e-04],
         [8.6168e-06, 9.9563e-01, 9.9817e-01,  ..., 4.3536e-06,
          1.7528e-04, 1.6340e-04]],
        [[9.9955e-01, 4.7111e-04, 8.6188e-04,  ..., 4.1835e-05,
          2.8322e-03, 1.1281e-04],
         [1.5109e-04, 4.7111e-04, 8.6188e-04,  ..., 4.1835e-05,
          2.8322e-03, 1.1281e-04],
         [1.5109e-04, 4.7111e-04, 8.6188e-04,  ..., 9.9987e-01,
          9.9150e-01, 9.9966e-01],
         [1.5109e-04, 9.9859e-01, 9.9741e-01,  ..., 4.1835e-05,
          2.8322e-03, 1.1281e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1863e-03, 7.8174e-05, 2.6367e-03,  ..., 1.6901e-03,
          1.1438e-04, 4.3194e-04],
         [1.1863e-03, 7.8174e-05, 2.6367e-03,  ..., 1.6901e-03,
          1.1438e-04, 4.3194e-04],
         [9.9644e-01, 7.8174e-05, 2.6367e-03,  ..., 9.9493e-01,
          1.1438e-04, 9.9870e-01],
         [1.1863e-03, 9.9977e-01, 9.9209e-01,  ..., 1.6901e-03,
          9.9966e-01, 4.3194e-04]],
        [[8.4366e-03, 9.4693e-06, 3.2631e-04,  ..., 3.7936e-06,
          9.9511e-01, 1.6306e-03],
         [7.0747e-03, 9.4693e-06, 3.2631e-04,  ..., 3.7936e-06,
          1.6246e-03, 1.6306e-03],
         [9.7112e-01, 9.4693e-06, 3.2631e-04,  ..., 3.7936e-06,
          1.6246e-03, 9.9511e-01],
         [1.3366e-02, 9.9997e-01, 9.9902e-01,  ..., 9.9999e-01,
          1.6386e-03, 1.6306e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 684:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9996e-01, 1.4431e-03, 7.0568e-04,  ..., 6.0141e-05,
          9.3501e-04, 9.9528e-01],
         [1.3917e-05, 1.4431e-03, 7.0568e-04,  ..., 6.0141e-05,
          9.3501e-04, 1.2839e-03],
         [1.3917e-05, 1.4431e-03, 7.0568e-04,  ..., 9.9982e-01,
          9.9720e-01, 2.1521e-03],
         [1.3917e-05, 9.9567e-01, 9.9788e-01,  ..., 6.0141e-05,
          9.3501e-04, 1.2839e-03]],
        [[9.9479e-01, 4.4533e-04, 1.7521e-03,  ..., 1.2110e-05,
          8.3736e-04, 1.7615e-04],
         [2.4166e-03, 4.4533e-04, 1.7521e-03,  ..., 1.2110e-05,
          7.6567e-04, 1.7615e-04],
         [1.3961e-03, 4.4533e-04, 1.7521e-03,  ..., 9.9996e-01,
          9.9763e-01, 9.9947e-01],
         [1.3961e-03, 9.9866e-01, 9.9474e-01,  ..., 1.2110e-05,
          7.6567e-04, 1.7615e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4104e-03, 1.0512e-04, 4.1518e-02,  ..., 1.6196e-03,
          1.1719e-03, 2.5484e-04],
         [2.4104e-03, 1.0512e-04, 1.4971e-02,  ..., 1.6196e-03,
          1.1719e-03, 2.5484e-04],
         [9.9232e-01, 1.0512e-04, 1.4971e-02,  ..., 9.9514e-01,
          1.1719e-03, 9.9924e-01],
         [2.8592e-03, 9.9968e-01, 9.2854e-01,  ..., 1.6196e-03,
          9.9648e-01, 2.5484e-04]],
        [[3.3565e-03, 7.0671e-06, 5.6467e-04,  ..., 2.9727e-06,
          9.9966e-01, 2.2178e-03],
         [3.3565e-03, 7.0671e-06, 5.6467e-04,  ..., 2.9727e-06,
          1.1263e-04, 2.2178e-03],
         [9.8869e-01, 7.0671e-06, 5.6467e-04,  ..., 2.9727e-06,
          1.1263e-04, 9.9312e-01],
         [4.5975e-03, 9.9998e-01, 9.9831e-01,  ..., 9.9999e-01,
          1.1263e-04, 2.4487e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 685:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:26,432 [Process: 0] Synchronize training processes
2024-08-18 15:25:26,432 [Process: 0] Evaluating...
2024-08-18 15:25:26,434 [Process: 0] EPOCH 684:
2024-08-18 15:25:26,436 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:27,566 [Process: 0] Synchronize training processes
2024-08-18 15:25:27,566 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9949e-01, 5.2317e-03, 1.1903e-02,  ..., 1.1745e-06,
          1.5867e-04, 9.9605e-01],
         [1.7030e-04, 5.3212e-03, 6.8095e-03,  ..., 1.1745e-06,
          1.5867e-04, 1.1304e-03],
         [1.7030e-04, 6.8200e-03, 7.3505e-03,  ..., 1.0000e+00,
          9.9952e-01, 1.6855e-03],
         [1.7030e-04, 9.8263e-01, 9.7394e-01,  ..., 1.1745e-06,
          1.5867e-04, 1.1304e-03]],
        [[9.9796e-01, 1.7282e-03, 1.3401e-03,  ..., 1.1152e-04,
          8.4422e-04, 1.5257e-04],
         [6.8085e-04, 1.7282e-03, 1.3421e-03,  ..., 1.1152e-04,
          8.4422e-04, 1.5257e-04],
         [6.8085e-04, 1.7282e-03, 1.3401e-03,  ..., 9.9967e-01,
          9.9747e-01, 9.9954e-01],
         [6.8085e-04, 9.9482e-01, 9.9598e-01,  ..., 1.1152e-04,
          8.4422e-04, 1.5257e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.6470e-03, 3.8647e-04, 2.0008e-03,  ..., 1.0743e-02,
          5.5456e-02, 3.1537e-04],
         [4.8482e-03, 3.8647e-04, 1.9735e-03,  ..., 5.5098e-03,
          2.9436e-02, 3.1537e-04],
         [9.8304e-01, 3.8647e-04, 1.9735e-03,  ..., 9.7653e-01,
          3.9568e-02, 9.9905e-01],
         [6.4689e-03, 9.9884e-01, 9.9405e-01,  ..., 7.2124e-03,
          8.7554e-01, 3.1537e-04]],
        [[9.9004e-03, 1.8149e-05, 1.3869e-04,  ..., 3.1798e-05,
          9.9988e-01, 6.7552e-03],
         [6.5874e-03, 1.8149e-05, 1.3869e-04,  ..., 3.1798e-05,
          4.0480e-05, 6.7552e-03],
         [9.7249e-01, 1.8149e-05, 1.3869e-04,  ..., 3.1798e-05,
          4.0480e-05, 9.7320e-01],
         [1.1022e-02, 9.9995e-01, 9.9958e-01,  ..., 9.9990e-01,
          4.0480e-05, 1.3293e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 686:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9992e-01, 9.2121e-04, 2.0776e-03,  ..., 5.3548e-04,
          1.1504e-03, 9.9652e-01],
         [2.6694e-05, 9.2121e-04, 2.0776e-03,  ..., 5.3548e-04,
          1.1504e-03, 1.1596e-03],
         [2.6694e-05, 9.2121e-04, 2.0776e-03,  ..., 9.9839e-01,
          9.9655e-01, 1.1596e-03],
         [2.6694e-05, 9.9724e-01, 9.9377e-01,  ..., 5.3548e-04,
          1.1504e-03, 1.1596e-03]],
        [[9.9922e-01, 3.1926e-03, 1.8678e-03,  ..., 1.8062e-04,
          2.7399e-04, 4.3810e-05],
         [2.6100e-04, 4.0355e-03, 1.8678e-03,  ..., 1.8062e-04,
          2.7399e-04, 4.3810e-05],
         [2.6100e-04, 3.1926e-03, 1.8678e-03,  ..., 9.9946e-01,
          9.9918e-01, 9.9987e-01],
         [2.6100e-04, 9.8958e-01, 9.9440e-01,  ..., 1.8062e-04,
          2.7399e-04, 4.3810e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:25:27,568 [Process: 0] EPOCH 685:
2024-08-18 15:25:27,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:28,697 [Process: 0] Synchronize training processes
2024-08-18 15:25:28,697 [Process: 0] Evaluating...
2024-08-18 15:25:28,699 [Process: 0] EPOCH 686:
2024-08-18 15:25:28,700 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6674e-04, 2.6694e-04, 2.8894e-03,  ..., 1.5181e-03,
          2.0648e-02, 1.2501e-03],
         [9.6674e-04, 2.6694e-04, 3.1825e-03,  ..., 1.5181e-03,
          1.1270e-02, 1.2501e-03],
         [9.9710e-01, 2.6694e-04, 2.8894e-03,  ..., 9.9545e-01,
          1.1270e-02, 9.9625e-01],
         [9.6674e-04, 9.9920e-01, 9.9104e-01,  ..., 1.5181e-03,
          9.5681e-01, 1.2501e-03]],
        [[3.1836e-03, 1.1033e-04, 3.3616e-04,  ..., 1.6229e-04,
          9.9840e-01, 8.6310e-03],
         [2.7082e-03, 1.1033e-04, 3.3616e-04,  ..., 1.6229e-04,
          5.2502e-04, 6.6764e-03],
         [9.9140e-01, 1.1033e-04, 3.3616e-04,  ..., 1.6229e-04,
          5.2502e-04, 9.7539e-01],
         [2.7082e-03, 9.9967e-01, 9.9899e-01,  ..., 9.9951e-01,
          5.5035e-04, 9.3013e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 687:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 4.2131e-03, 8.6679e-04,  ..., 1.0753e-04,
          7.7846e-05, 9.9941e-01],
         [5.8918e-05, 3.8160e-03, 8.6679e-04,  ..., 1.0753e-04,
          7.7846e-05, 1.9696e-04],
         [5.8918e-05, 3.8160e-03, 8.6679e-04,  ..., 9.9968e-01,
          9.9977e-01, 1.9696e-04],
         [5.8918e-05, 9.8815e-01, 9.9740e-01,  ..., 1.0753e-04,
          7.7846e-05, 1.9696e-04]],
        [[9.9810e-01, 7.9650e-04, 3.9966e-04,  ..., 7.3120e-04,
          7.4883e-04, 1.3741e-04],
         [6.3427e-04, 7.9650e-04, 3.9966e-04,  ..., 7.3120e-04,
          7.4883e-04, 1.3741e-04],
         [6.3427e-04, 7.9650e-04, 3.9966e-04,  ..., 9.9781e-01,
          9.9775e-01, 9.9959e-01],
         [6.3427e-04, 9.9761e-01, 9.9880e-01,  ..., 7.3120e-04,
          7.4883e-04, 1.3741e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.5567e-04, 2.4475e-04, 1.1004e-03,  ..., 2.1324e-04,
          6.9244e-03, 3.8989e-04],
         [6.5567e-04, 2.4475e-04, 1.1004e-03,  ..., 2.1324e-04,
          5.1162e-03, 3.8989e-04],
         [9.9803e-01, 2.4475e-04, 1.1004e-03,  ..., 9.9936e-01,
          5.1162e-03, 9.9883e-01],
         [6.5567e-04, 9.9927e-01, 9.9670e-01,  ..., 2.1324e-04,
          9.8284e-01, 3.8989e-04]],
        [[8.6087e-04, 1.0566e-04, 3.4189e-04,  ..., 2.6107e-06,
          9.9660e-01, 2.3203e-03],
         [8.6087e-04, 1.0566e-04, 3.4189e-04,  ..., 2.6107e-06,
          1.1323e-03, 2.2462e-03],
         [9.9742e-01, 1.0566e-04, 3.4189e-04,  ..., 2.6107e-06,
          1.1323e-03, 9.9319e-01],
         [8.6087e-04, 9.9968e-01, 9.9897e-01,  ..., 9.9999e-01,
          1.1323e-03, 2.2462e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 688:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 2.5994e-03, 1.2492e-03,  ..., 2.7824e-05,
          2.4405e-04, 9.9896e-01],
         [4.9147e-06, 2.5994e-03, 1.1609e-03,  ..., 2.7824e-05,
          2.4405e-04, 3.4644e-04],
         [4.9147e-06, 2.5994e-03, 1.1609e-03,  ..., 9.9992e-01,
          9.9927e-01, 3.4644e-04],
         [4.9147e-06, 9.9220e-01, 9.9643e-01,  ..., 2.7824e-05,
          2.4405e-04, 3.4644e-04]],
        [[9.9994e-01, 8.8288e-04, 2.7747e-03,  ..., 2.1357e-04,
          5.7430e-04, 5.1858e-04],
         [2.0585e-05, 8.8288e-04, 3.9803e-03,  ..., 2.1357e-04,
          5.7430e-04, 5.1858e-04],
         [2.0585e-05, 8.8288e-04, 2.7747e-03,  ..., 9.9936e-01,
          9.9828e-01, 9.9844e-01],
         [2.0585e-05, 9.9735e-01, 9.9047e-01,  ..., 2.1357e-04,
          5.7430e-04, 5.1858e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:29,826 [Process: 0] Synchronize training processes
2024-08-18 15:25:29,826 [Process: 0] Evaluating...
2024-08-18 15:25:29,828 [Process: 0] EPOCH 687:
2024-08-18 15:25:29,829 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:30,958 [Process: 0] Synchronize training processes
2024-08-18 15:25:30,959 [Process: 0] Evaluating...
2024-08-18 15:25:30,960 [Process: 0] EPOCH 688:
2024-08-18 15:25:30,962 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.1089e-03, 4.5391e-05, 1.4935e-03,  ..., 3.2170e-04,
          1.6213e-04, 7.5192e-03],
         [6.6695e-03, 4.5391e-05, 3.0853e-03,  ..., 3.2170e-04,
          1.6213e-04, 3.3612e-03],
         [9.7522e-01, 4.5391e-05, 1.4935e-03,  ..., 9.9904e-01,
          1.6213e-04, 9.8576e-01],
         [9.0035e-03, 9.9986e-01, 9.9393e-01,  ..., 3.2170e-04,
          9.9951e-01, 3.3612e-03]],
        [[3.7835e-03, 7.5391e-05, 6.6473e-04,  ..., 1.8107e-05,
          9.9807e-01, 1.5818e-02],
         [3.7835e-03, 7.5391e-05, 6.6473e-04,  ..., 1.8107e-05,
          6.4381e-04, 9.3810e-03],
         [9.8742e-01, 7.5391e-05, 6.6473e-04,  ..., 1.8107e-05,
          6.4381e-04, 9.6047e-01],
         [5.0082e-03, 9.9977e-01, 9.9801e-01,  ..., 9.9995e-01,
          6.4381e-04, 1.4331e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 689:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9981e-01, 9.4192e-04, 7.5305e-03,  ..., 1.2887e-05,
          3.1078e-04, 9.9909e-01],
         [6.3506e-05, 9.4192e-04, 5.5972e-03,  ..., 1.2887e-05,
          3.1078e-04, 2.8861e-04],
         [6.3506e-05, 9.4192e-04, 5.5972e-03,  ..., 9.9996e-01,
          9.9907e-01, 3.3652e-04],
         [6.3506e-05, 9.9717e-01, 9.8128e-01,  ..., 1.2887e-05,
          3.1078e-04, 2.8861e-04]],
        [[9.8628e-01, 3.2260e-03, 2.5419e-04,  ..., 1.7851e-04,
          3.1919e-04, 4.9055e-05],
         [4.1820e-03, 3.2260e-03, 2.5419e-04,  ..., 1.7851e-04,
          3.1919e-04, 4.9055e-05],
         [4.1856e-03, 3.2260e-03, 2.5419e-04,  ..., 9.9946e-01,
          9.9904e-01, 9.9985e-01],
         [5.3516e-03, 9.9032e-01, 9.9924e-01,  ..., 1.7851e-04,
          3.1919e-04, 4.9055e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.1787e-04, 3.7460e-04, 7.0670e-03,  ..., 9.0315e-04,
          2.1758e-05, 1.2319e-03],
         [5.1787e-04, 3.7460e-04, 1.0641e-02,  ..., 9.0315e-04,
          2.1758e-05, 1.2319e-03],
         [9.9845e-01, 3.7460e-04, 7.0670e-03,  ..., 9.9729e-01,
          2.1758e-05, 9.9630e-01],
         [5.1787e-04, 9.9888e-01, 9.7523e-01,  ..., 9.0315e-04,
          9.9993e-01, 1.2319e-03]],
        [[1.3173e-03, 3.7838e-05, 8.8276e-05,  ..., 9.1998e-05,
          9.8090e-01, 1.1004e-03],
         [1.3173e-03, 3.7838e-05, 8.8276e-05,  ..., 9.1998e-05,
          7.6473e-03, 1.1004e-03],
         [9.9605e-01, 3.7838e-05, 8.8276e-05,  ..., 9.1998e-05,
          5.3223e-03, 9.9670e-01],
         [1.3173e-03, 9.9989e-01, 9.9974e-01,  ..., 9.9972e-01,
          6.1292e-03, 1.1004e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 690:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9842e-01, 3.3956e-03, 2.5104e-03,  ..., 1.2158e-04,
          1.3633e-04, 9.8669e-01],
         [5.2719e-04, 2.9146e-03, 2.5104e-03,  ..., 1.2158e-04,
          1.3633e-04, 4.4058e-03],
         [5.2719e-04, 2.9146e-03, 2.5304e-03,  ..., 9.9964e-01,
          9.9959e-01, 4.4948e-03],
         [5.2719e-04, 9.9078e-01, 9.9245e-01,  ..., 1.2158e-04,
          1.3633e-04, 4.4058e-03]],
        [[9.9886e-01, 5.6084e-03, 3.8971e-04,  ..., 3.2807e-04,
          1.1024e-01, 4.6079e-04],
         [3.7922e-04, 5.0869e-03, 3.8971e-04,  ..., 3.2807e-04,
          3.3062e-02, 4.6079e-04],
         [3.7922e-04, 5.0869e-03, 3.8971e-04,  ..., 9.9902e-01,
          7.9917e-01, 9.9862e-01],
         [3.7922e-04, 9.8422e-01, 9.9883e-01,  ..., 3.2807e-04,
          5.7529e-02, 4.6079e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:32,083 [Process: 0] Synchronize training processes
2024-08-18 15:25:32,083 [Process: 0] Evaluating...
2024-08-18 15:25:32,085 [Process: 0] EPOCH 689:
2024-08-18 15:25:32,086 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:33,207 [Process: 0] Synchronize training processes
2024-08-18 15:25:33,207 [Process: 0] Evaluating...
2024-08-18 15:25:33,209 [Process: 0] EPOCH 690:
2024-08-18 15:25:33,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:34,326 [Process: 0] Synchronize training processes
2024-08-18 15:25:34,326 [Process: 0] Evaluating...
2024-08-18 15:25:34,328 [Process: 0] EPOCH 691:
2024-08-18 15:25:34,330 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:35,463 [Process: 0] Synchronize training processes
2024-08-18 15:25:35,463 [Process: 0] Evaluating...
2024-08-18 15:25:35,467 [Process: 0] EPOCH 692:
2024-08-18 15:25:35,468 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9893e-04, 2.8471e-05, 6.8860e-04,  ..., 3.4405e-03,
          2.3846e-04, 4.8031e-03],
         [2.9893e-04, 2.8471e-05, 6.8860e-04,  ..., 3.4405e-03,
          2.3846e-04, 4.8031e-03],
         [9.9910e-01, 2.8471e-05, 6.8860e-04,  ..., 9.8904e-01,
          2.3846e-04, 9.8367e-01],
         [2.9893e-04, 9.9991e-01, 9.9793e-01,  ..., 4.0795e-03,
          9.9928e-01, 6.7217e-03]],
        [[3.0330e-03, 2.8236e-05, 1.3494e-04,  ..., 1.2087e-04,
          9.9867e-01, 6.9069e-03],
         [3.0330e-03, 2.8236e-05, 1.3494e-04,  ..., 1.2087e-04,
          4.3674e-04, 3.7467e-03],
         [9.9090e-01, 2.8236e-05, 1.3494e-04,  ..., 1.2087e-04,
          4.3674e-04, 9.8560e-01],
         [3.0330e-03, 9.9992e-01, 9.9960e-01,  ..., 9.9964e-01,
          4.5237e-04, 3.7467e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 691:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 2.2852e-03, 9.4349e-04,  ..., 8.2827e-06,
          3.3026e-04, 9.9821e-01],
         [3.8284e-05, 2.2852e-03, 9.4349e-04,  ..., 8.2827e-06,
          3.3026e-04, 5.3520e-04],
         [3.8284e-05, 2.2852e-03, 9.4349e-04,  ..., 9.9998e-01,
          9.9901e-01, 7.2093e-04],
         [3.8284e-05, 9.9314e-01, 9.9717e-01,  ..., 8.2827e-06,
          3.3026e-04, 5.3520e-04]],
        [[9.9976e-01, 8.3503e-04, 1.1352e-02,  ..., 1.2058e-04,
          1.6617e-02, 4.5696e-04],
         [7.9438e-05, 8.3503e-04, 1.0134e-02,  ..., 1.2058e-04,
          7.8168e-03, 4.5696e-04],
         [7.9438e-05, 8.3503e-04, 8.0029e-03,  ..., 9.9964e-01,
          9.6775e-01, 9.9863e-01],
         [7.9438e-05, 9.9749e-01, 9.7051e-01,  ..., 1.2058e-04,
          7.8168e-03, 4.5696e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8660e-03, 8.1691e-04, 5.8293e-02,  ..., 1.2033e-03,
          5.9257e-04, 1.4993e-03],
         [1.8660e-03, 8.1691e-04, 2.7106e-02,  ..., 1.2033e-03,
          5.9257e-04, 1.4993e-03],
         [9.9440e-01, 8.1691e-04, 2.2574e-02,  ..., 9.9639e-01,
          5.9257e-04, 9.9550e-01],
         [1.8660e-03, 9.9755e-01, 8.9203e-01,  ..., 1.2033e-03,
          9.9822e-01, 1.4993e-03]],
        [[1.8451e-02, 2.2642e-05, 1.2243e-05,  ..., 2.3558e-04,
          9.9718e-01, 3.4448e-03],
         [1.1732e-02, 2.2642e-05, 1.2243e-05,  ..., 2.3558e-04,
          9.2621e-04, 3.4448e-03],
         [9.5040e-01, 2.2642e-05, 1.2243e-05,  ..., 2.3558e-04,
          9.2621e-04, 9.8953e-01],
         [1.9417e-02, 9.9993e-01, 9.9996e-01,  ..., 9.9929e-01,
          9.6437e-04, 3.5780e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 692:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:36,596 [Process: 0] Synchronize training processes
2024-08-18 15:25:36,596 [Process: 0] Evaluating...
2024-08-18 15:25:36,598 [Process: 0] EPOCH 693:
2024-08-18 15:25:36,600 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 2.3310e-03, 2.0834e-03,  ..., 3.1840e-05,
          1.0670e-03, 9.9842e-01],
         [2.6507e-06, 2.3310e-03, 2.0834e-03,  ..., 3.1840e-05,
          1.0670e-03, 5.2598e-04],
         [2.6507e-06, 2.3310e-03, 2.0834e-03,  ..., 9.9990e-01,
          9.9680e-01, 5.2598e-04],
         [2.6507e-06, 9.9301e-01, 9.9375e-01,  ..., 3.1840e-05,
          1.0670e-03, 5.2598e-04]],
        [[9.9948e-01, 8.3033e-04, 1.8936e-03,  ..., 1.6533e-04,
          3.6844e-02, 3.3361e-04],
         [1.7236e-04, 8.3033e-04, 1.8936e-03,  ..., 1.6533e-04,
          1.4786e-02, 3.3361e-04],
         [1.7236e-04, 8.3033e-04, 1.8936e-03,  ..., 9.9950e-01,
          9.3260e-01, 9.9900e-01],
         [1.7236e-04, 9.9751e-01, 9.9432e-01,  ..., 1.6533e-04,
          1.5773e-02, 3.3361e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8678e-04, 4.6571e-05, 6.1283e-04,  ..., 6.7947e-03,
          3.0894e-04, 1.5049e-03],
         [9.8678e-04, 4.6571e-05, 9.7441e-04,  ..., 5.4024e-03,
          3.0894e-04, 1.5049e-03],
         [9.9704e-01, 4.6571e-05, 6.1283e-04,  ..., 9.8240e-01,
          3.0894e-04, 9.9549e-01],
         [9.8678e-04, 9.9986e-01, 9.9780e-01,  ..., 5.4024e-03,
          9.9907e-01, 1.5049e-03]],
        [[7.9001e-03, 2.3969e-04, 9.0037e-05,  ..., 8.4958e-06,
          9.9847e-01, 4.2143e-04],
         [5.7438e-03, 2.3969e-04, 9.0037e-05,  ..., 8.4958e-06,
          5.0920e-04, 4.2143e-04],
         [9.8054e-01, 2.3969e-04, 9.0037e-05,  ..., 8.4958e-06,
          5.0920e-04, 9.9874e-01],
         [5.8125e-03, 9.9928e-01, 9.9973e-01,  ..., 9.9997e-01,
          5.0920e-04, 4.2143e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 693:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9992e-01, 3.3992e-03, 3.8577e-04,  ..., 7.8388e-05,
          1.3289e-03, 9.9866e-01],
         [2.6656e-05, 3.3992e-03, 3.8577e-04,  ..., 7.8388e-05,
          1.3289e-03, 4.4805e-04],
         [2.6656e-05, 3.3992e-03, 3.8577e-04,  ..., 9.9976e-01,
          1.3289e-03, 4.4805e-04],
         [2.6656e-05, 9.8980e-01, 9.9884e-01,  ..., 7.8388e-05,
          9.9601e-01, 4.4805e-04]],
        [[9.9983e-01, 2.9626e-04, 7.9759e-04,  ..., 1.9014e-04,
          4.2010e-01, 2.8784e-03],
         [5.5481e-05, 2.9626e-04, 7.9759e-04,  ..., 1.9014e-04,
          9.9368e-02, 3.0410e-03],
         [5.5481e-05, 2.9626e-04, 7.9759e-04,  ..., 9.9943e-01,
          2.9059e-01, 9.9120e-01],
         [5.5481e-05, 9.9911e-01, 9.9761e-01,  ..., 1.9014e-04,
          1.8994e-01, 2.8784e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0671e-03, 2.8290e-05, 4.7134e-04,  ..., 3.0300e-04,
          3.0205e-04, 4.9989e-04],
         [1.0671e-03, 2.8290e-05, 5.2041e-04,  ..., 3.0300e-04,
          3.0205e-04, 4.9989e-04],
         [9.9680e-01, 2.8290e-05, 4.7134e-04,  ..., 9.9909e-01,
          3.0205e-04, 9.9850e-01],
         [1.0671e-03, 9.9992e-01, 9.9854e-01,  ..., 3.0300e-04,
          9.9909e-01, 4.9989e-04]],
        [[2.1525e-03, 3.4581e-04, 1.0111e-05,  ..., 9.6242e-06,
          9.9929e-01, 3.7133e-03],
         [2.1525e-03, 3.4581e-04, 1.0111e-05,  ..., 9.6242e-06,
          2.3543e-04, 3.2506e-03],
         [9.9324e-01, 3.4581e-04, 1.0111e-05,  ..., 9.6242e-06,
          2.3543e-04, 9.8979e-01],
         [2.4570e-03, 9.9896e-01, 9.9997e-01,  ..., 9.9997e-01,
          2.3543e-04, 3.2506e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 694:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:37,726 [Process: 0] Synchronize training processes
2024-08-18 15:25:37,726 [Process: 0] Evaluating...
2024-08-18 15:25:37,728 [Process: 0] EPOCH 694:
2024-08-18 15:25:37,730 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:38,845 [Process: 0] Synchronize training processes
2024-08-18 15:25:38,845 [Process: 0] Evaluating...
2024-08-18 15:25:38,847 [Process: 0] EPOCH 695:
2024-08-18 15:25:38,849 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 1.6264e-03, 7.1612e-03,  ..., 1.1361e-06,
          5.4672e-03, 9.9662e-01],
         [8.7174e-06, 1.6264e-03, 5.3246e-03,  ..., 1.1361e-06,
          3.7634e-03, 1.1279e-03],
         [8.7174e-06, 1.6264e-03, 6.4698e-03,  ..., 1.0000e+00,
          3.7862e-03, 1.1279e-03],
         [8.7174e-06, 9.9512e-01, 9.8104e-01,  ..., 1.1361e-06,
          9.8698e-01, 1.1279e-03]],
        [[9.9917e-01, 1.2199e-03, 9.4379e-04,  ..., 7.5048e-04,
          2.9751e-01, 4.0549e-04],
         [2.7579e-04, 1.2199e-03, 9.4379e-04,  ..., 7.5048e-04,
          1.1464e-01, 4.0549e-04],
         [2.7579e-04, 1.2199e-03, 9.4379e-04,  ..., 9.9775e-01,
          1.9411e-01, 9.9878e-01],
         [2.7579e-04, 9.9634e-01, 9.9717e-01,  ..., 7.5048e-04,
          3.9374e-01, 4.0549e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2227e-03, 4.6474e-04, 3.5637e-03,  ..., 1.8309e-03,
          3.8273e-05, 8.5162e-03],
         [3.0559e-03, 4.6474e-04, 3.5637e-03,  ..., 1.8309e-03,
          3.8273e-05, 5.0384e-03],
         [9.8967e-01, 4.6474e-04, 3.5637e-03,  ..., 9.9425e-01,
          3.8273e-05, 9.8141e-01],
         [3.0559e-03, 9.9861e-01, 9.8931e-01,  ..., 2.0846e-03,
          9.9989e-01, 5.0384e-03]],
        [[1.1022e-03, 3.0878e-05, 6.1226e-04,  ..., 1.5812e-05,
          9.9904e-01, 8.3886e-04],
         [1.1022e-03, 3.0878e-05, 6.1226e-04,  ..., 1.5812e-05,
          3.2108e-04, 8.3886e-04],
         [9.9669e-01, 3.0878e-05, 6.1226e-04,  ..., 1.5812e-05,
          3.2108e-04, 9.9748e-01],
         [1.1022e-03, 9.9991e-01, 9.9816e-01,  ..., 9.9995e-01,
          3.2108e-04, 8.3886e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 695:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 1.7860e-03, 3.2355e-03,  ..., 4.5412e-04,
          2.6487e-03, 9.9941e-01],
         [5.0290e-05, 1.7860e-03, 3.2355e-03,  ..., 4.5412e-04,
          2.6487e-03, 1.9790e-04],
         [5.0290e-05, 1.7860e-03, 3.9935e-03,  ..., 9.9864e-01,
          3.1711e-03, 1.9790e-04],
         [5.0290e-05, 9.9464e-01, 9.8954e-01,  ..., 4.5412e-04,
          9.9153e-01, 1.9790e-04]],
        [[9.9597e-01, 4.3694e-04, 1.0421e-03,  ..., 1.2872e-04,
          3.1119e-01, 9.8963e-05],
         [1.7898e-03, 4.3694e-04, 1.0421e-03,  ..., 1.2872e-04,
          1.1520e-01, 9.8963e-05],
         [1.1176e-03, 4.3694e-04, 1.0421e-03,  ..., 9.9961e-01,
          1.9808e-01, 9.9970e-01],
         [1.1176e-03, 9.9869e-01, 9.9687e-01,  ..., 1.2872e-04,
          3.7553e-01, 9.8963e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:39,972 [Process: 0] Synchronize training processes
2024-08-18 15:25:39,973 [Process: 0] Evaluating...
2024-08-18 15:25:39,974 [Process: 0] EPOCH 696:
2024-08-18 15:25:39,976 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:41,094 [Process: 0] Synchronize training processes
2024-08-18 15:25:41,094 [Process: 0] Evaluating...
2024-08-18 15:25:41,096 [Process: 0] EPOCH 697:
2024-08-18 15:25:41,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9003e-03, 1.3752e-05, 2.7864e-03,  ..., 5.8737e-04,
          4.6147e-05, 6.3686e-03],
         [1.9003e-03, 1.3752e-05, 2.7864e-03,  ..., 5.8737e-04,
          4.6147e-05, 5.6067e-03],
         [9.9430e-01, 1.3752e-05, 2.7864e-03,  ..., 9.9824e-01,
          4.6147e-05, 9.8021e-01],
         [1.9003e-03, 9.9996e-01, 9.9164e-01,  ..., 5.8737e-04,
          9.9986e-01, 7.8113e-03]],
        [[1.3953e-03, 9.5662e-05, 6.3622e-06,  ..., 1.2817e-05,
          9.9817e-01, 2.0200e-03],
         [1.3953e-03, 9.5662e-05, 6.3622e-06,  ..., 1.2817e-05,
          6.0989e-04, 2.0200e-03],
         [9.9581e-01, 9.5662e-05, 6.3622e-06,  ..., 1.2817e-05,
          6.0989e-04, 9.9394e-01],
         [1.3953e-03, 9.9971e-01, 9.9998e-01,  ..., 9.9996e-01,
          6.0989e-04, 2.0200e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 696:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 1.4368e-03, 2.4138e-03,  ..., 5.7228e-06,
          2.3485e-03, 9.9537e-01],
         [6.7130e-06, 1.4368e-03, 1.9342e-03,  ..., 5.7228e-06,
          2.3485e-03, 1.5420e-03],
         [6.7130e-06, 1.4368e-03, 1.9342e-03,  ..., 9.9998e-01,
          2.4245e-03, 1.5420e-03],
         [6.7130e-06, 9.9569e-01, 9.9372e-01,  ..., 5.7228e-06,
          9.9288e-01, 1.5420e-03]],
        [[9.9835e-01, 1.1175e-03, 1.5508e-03,  ..., 1.9998e-04,
          1.3489e-02, 4.1447e-05],
         [5.4940e-04, 1.1175e-03, 1.5508e-03,  ..., 1.9998e-04,
          1.0832e-02, 4.1447e-05],
         [5.4940e-04, 1.1175e-03, 1.5508e-03,  ..., 9.9940e-01,
          9.6212e-01, 9.9988e-01],
         [5.4940e-04, 9.9665e-01, 9.9535e-01,  ..., 1.9998e-04,
          1.3563e-02, 4.1447e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.0173e-04, 7.7470e-05, 7.3772e-04,  ..., 1.3464e-03,
          1.5058e-04, 1.3614e-03],
         [9.0173e-04, 7.7470e-05, 7.3772e-04,  ..., 1.3464e-03,
          1.5058e-04, 1.3614e-03],
         [9.9729e-01, 7.7470e-05, 7.3772e-04,  ..., 9.9596e-01,
          1.5058e-04, 9.9592e-01],
         [9.0173e-04, 9.9977e-01, 9.9779e-01,  ..., 1.3464e-03,
          9.9955e-01, 1.3614e-03]],
        [[2.9223e-03, 1.9104e-05, 9.5553e-05,  ..., 8.4402e-06,
          9.9992e-01, 1.4751e-03],
         [2.9223e-03, 1.9104e-05, 9.5553e-05,  ..., 8.4402e-06,
          2.8208e-05, 1.4751e-03],
         [9.9031e-01, 1.9104e-05, 9.5553e-05,  ..., 8.4402e-06,
          2.8208e-05, 9.9557e-01],
         [3.8495e-03, 9.9994e-01, 9.9971e-01,  ..., 9.9997e-01,
          2.8208e-05, 1.4751e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 697:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9996e-01, 1.4359e-03, 9.9257e-04,  ..., 6.2474e-04,
          1.2153e-02, 9.9417e-01],
         [1.1860e-05, 1.4359e-03, 9.9257e-04,  ..., 6.2474e-04,
          6.1594e-03, 2.3433e-03],
         [1.1860e-05, 1.4359e-03, 9.9257e-04,  ..., 9.9813e-01,
          8.1021e-03, 1.7584e-03],
         [1.1860e-05, 9.9569e-01, 9.9702e-01,  ..., 6.2474e-04,
          9.7359e-01, 1.7275e-03]],
        [[9.9842e-01, 1.4910e-03, 4.7597e-04,  ..., 3.2111e-05,
          3.0193e-01, 4.5069e-04],
         [6.0697e-04, 1.4910e-03, 4.7597e-04,  ..., 3.2111e-05,
          1.5396e-01, 4.5069e-04],
         [4.8461e-04, 1.4910e-03, 4.7597e-04,  ..., 9.9990e-01,
          2.9811e-01, 9.9865e-01],
         [4.8461e-04, 9.9553e-01, 9.9857e-01,  ..., 3.2111e-05,
          2.4601e-01, 4.5069e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:42,219 [Process: 0] Synchronize training processes
2024-08-18 15:25:42,219 [Process: 0] Evaluating...
2024-08-18 15:25:42,221 [Process: 0] EPOCH 698:
2024-08-18 15:25:42,222 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:43,342 [Process: 0] Synchronize training processes
2024-08-18 15:25:43,342 [Process: 0] Evaluating...
2024-08-18 15:25:43,344 [Process: 0] EPOCH 699:
2024-08-18 15:25:43,346 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5210e-03, 1.1911e-04, 1.9154e-04,  ..., 3.0305e-03,
          3.4801e-04, 2.9605e-03],
         [1.5210e-03, 1.1911e-04, 1.9154e-04,  ..., 3.0305e-03,
          3.4801e-04, 2.9605e-03],
         [9.9544e-01, 1.1911e-04, 1.9154e-04,  ..., 9.9091e-01,
          3.4801e-04, 9.9051e-01],
         [1.5210e-03, 9.9964e-01, 9.9943e-01,  ..., 3.0305e-03,
          9.9896e-01, 3.5740e-03]],
        [[1.9688e-03, 5.7817e-04, 6.8203e-05,  ..., 1.1677e-04,
          9.9940e-01, 1.9301e-03],
         [1.9688e-03, 5.7817e-04, 6.8203e-05,  ..., 1.1677e-04,
          2.0096e-04, 1.6665e-03],
         [9.9409e-01, 5.7817e-04, 6.8203e-05,  ..., 1.1677e-04,
          2.0096e-04, 9.9474e-01],
         [1.9688e-03, 9.9827e-01, 9.9980e-01,  ..., 9.9965e-01,
          2.0096e-04, 1.6665e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 698:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9978e-01, 2.1054e-03, 2.7645e-03,  ..., 2.8798e-05,
          1.4206e-02, 9.9885e-01],
         [7.4106e-05, 2.0297e-03, 1.9093e-03,  ..., 2.8798e-05,
          8.4872e-03, 3.8397e-04],
         [7.4106e-05, 2.0297e-03, 1.9093e-03,  ..., 9.9991e-01,
          1.5097e-02, 3.8397e-04],
         [7.4106e-05, 9.9384e-01, 9.9342e-01,  ..., 2.8798e-05,
          9.6221e-01, 3.8397e-04]],
        [[9.9715e-01, 6.3154e-04, 8.6511e-04,  ..., 7.4937e-05,
          2.9342e-01, 5.8891e-05],
         [1.1343e-03, 6.1728e-04, 8.6511e-04,  ..., 7.4937e-05,
          1.5477e-01, 5.8891e-05],
         [8.5780e-04, 6.1728e-04, 8.6511e-04,  ..., 9.9978e-01,
          3.1880e-01, 9.9982e-01],
         [8.5780e-04, 9.9813e-01, 9.9740e-01,  ..., 7.4937e-05,
          2.3301e-01, 5.8891e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9708e-03, 9.0493e-05, 1.4874e-03,  ..., 6.6990e-04,
          2.1035e-04, 1.5554e-03],
         [2.9708e-03, 9.0493e-05, 1.6606e-03,  ..., 6.6990e-04,
          2.1035e-04, 1.5554e-03],
         [9.9109e-01, 9.0493e-05, 1.4874e-03,  ..., 9.9799e-01,
          2.1035e-04, 9.9533e-01],
         [2.9708e-03, 9.9973e-01, 9.9536e-01,  ..., 6.6990e-04,
          9.9937e-01, 1.5554e-03]],
        [[1.6181e-03, 2.5294e-05, 1.7953e-04,  ..., 5.3100e-05,
          9.9997e-01, 1.4427e-03],
         [1.6181e-03, 2.5294e-05, 1.7953e-04,  ..., 5.3100e-05,
          1.0848e-05, 1.4427e-03],
         [9.9515e-01, 2.5294e-05, 1.7953e-04,  ..., 5.3100e-05,
          1.0848e-05, 9.9567e-01],
         [1.6181e-03, 9.9992e-01, 9.9946e-01,  ..., 9.9984e-01,
          1.0848e-05, 1.4427e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 699:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9966e-01, 8.1502e-03, 1.0894e-03,  ..., 3.3342e-06,
          8.2575e-02, 9.9554e-01],
         [1.1435e-04, 4.6432e-03, 1.0894e-03,  ..., 3.3342e-06,
          4.6059e-02, 1.4903e-03],
         [1.1435e-04, 5.0574e-03, 1.0894e-03,  ..., 9.9999e-01,
          1.0213e-01, 1.4864e-03],
         [1.1435e-04, 9.8215e-01, 9.9673e-01,  ..., 3.3342e-06,
          7.6924e-01, 1.4864e-03]],
        [[9.9906e-01, 3.8165e-04, 7.6517e-04,  ..., 3.1837e-04,
          2.8571e-01, 3.0766e-05],
         [3.1423e-04, 3.8165e-04, 7.6517e-04,  ..., 3.1837e-04,
          1.7626e-01, 3.0766e-05],
         [3.1423e-04, 3.8165e-04, 7.6517e-04,  ..., 9.9904e-01,
          2.2649e-01, 9.9991e-01],
         [3.1423e-04, 9.9885e-01, 9.9770e-01,  ..., 3.1837e-04,
          3.1154e-01, 3.0766e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:44,466 [Process: 0] Synchronize training processes
2024-08-18 15:25:44,466 [Process: 0] Evaluating...
2024-08-18 15:25:44,468 [Process: 0] EPOCH 700:
2024-08-18 15:25:44,470 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:45,589 [Process: 0] Synchronize training processes
2024-08-18 15:25:45,590 [Process: 0] Evaluating...
2024-08-18 15:25:45,591 [Process: 0] EPOCH 701:
2024-08-18 15:25:45,593 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3587e-03, 9.9375e-05, 5.4556e-04,  ..., 3.5065e-03,
          6.7321e-05, 1.0650e-03],
         [1.3587e-03, 9.9375e-05, 5.4556e-04,  ..., 2.9568e-03,
          6.7321e-05, 1.0650e-03],
         [9.9592e-01, 9.9375e-05, 5.4556e-04,  ..., 9.9058e-01,
          6.7321e-05, 9.9681e-01],
         [1.3587e-03, 9.9970e-01, 9.9836e-01,  ..., 2.9568e-03,
          9.9980e-01, 1.0650e-03]],
        [[4.8021e-03, 1.2216e-05, 8.2484e-05,  ..., 5.6208e-05,
          9.9355e-01, 5.7016e-03],
         [4.1193e-03, 1.2216e-05, 8.2484e-05,  ..., 5.6208e-05,
          2.0634e-03, 5.7016e-03],
         [9.8696e-01, 1.2216e-05, 8.2484e-05,  ..., 5.6208e-05,
          2.0634e-03, 9.7977e-01],
         [4.1193e-03, 9.9996e-01, 9.9975e-01,  ..., 9.9983e-01,
          2.3273e-03, 8.8246e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 700:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 1.3683e-03, 5.4840e-04,  ..., 4.6750e-05,
          4.8627e-03, 9.9017e-01],
         [5.9429e-05, 1.3683e-03, 5.4840e-04,  ..., 4.6750e-05,
          4.8627e-03, 2.9887e-03],
         [5.9429e-05, 1.3683e-03, 5.4840e-04,  ..., 9.9986e-01,
          9.8541e-01, 3.8550e-03],
         [5.9429e-05, 9.9590e-01, 9.9835e-01,  ..., 4.6750e-05,
          4.8627e-03, 2.9887e-03]],
        [[9.9955e-01, 5.3615e-04, 9.0035e-04,  ..., 2.2074e-04,
          3.0639e-01, 2.9890e-04],
         [1.5116e-04, 5.3615e-04, 9.0035e-04,  ..., 2.2074e-04,
          1.6668e-01, 2.9890e-04],
         [1.5116e-04, 5.3615e-04, 9.0035e-04,  ..., 9.9934e-01,
          2.9587e-01, 9.9910e-01],
         [1.5116e-04, 9.9839e-01, 9.9730e-01,  ..., 2.2074e-04,
          2.3106e-01, 2.9890e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5998e-03, 2.0851e-04, 7.9905e-04,  ..., 1.5300e-03,
          2.2020e-04, 2.2877e-04],
         [1.5998e-03, 2.0851e-04, 1.0522e-03,  ..., 1.5300e-03,
          2.2020e-04, 2.2877e-04],
         [9.9520e-01, 2.0851e-04, 7.9905e-04,  ..., 9.9541e-01,
          2.2020e-04, 9.9931e-01],
         [1.5998e-03, 9.9937e-01, 9.9735e-01,  ..., 1.5300e-03,
          9.9934e-01, 2.2877e-04]],
        [[2.3984e-03, 3.9937e-04, 1.9010e-04,  ..., 1.4180e-04,
          9.9941e-01, 8.7097e-04],
         [2.3984e-03, 3.9937e-04, 1.9010e-04,  ..., 1.4180e-04,
          1.9671e-04, 8.7097e-04],
         [9.9186e-01, 3.9937e-04, 1.9010e-04,  ..., 1.4180e-04,
          1.9671e-04, 9.9739e-01],
         [3.3473e-03, 9.9880e-01, 9.9943e-01,  ..., 9.9957e-01,
          1.9671e-04, 8.7097e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 701:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:46,714 [Process: 0] Synchronize training processes
2024-08-18 15:25:46,714 [Process: 0] Evaluating...
2024-08-18 15:25:46,718 [Process: 0] EPOCH 702:
2024-08-18 15:25:46,719 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9971e-01, 3.2265e-03, 1.9352e-03,  ..., 6.2899e-06,
          5.8927e-04, 9.9972e-01],
         [9.6194e-05, 3.4585e-03, 1.9352e-03,  ..., 6.2899e-06,
          5.8927e-04, 9.2078e-05],
         [9.6194e-05, 3.7238e-03, 1.9352e-03,  ..., 9.9998e-01,
          9.9823e-01, 9.2078e-05],
         [9.6194e-05, 9.8959e-01, 9.9419e-01,  ..., 6.2899e-06,
          5.8927e-04, 9.2078e-05]],
        [[9.9980e-01, 2.6362e-04, 1.3648e-03,  ..., 6.5342e-04,
          2.1704e-01, 1.3626e-03],
         [6.7885e-05, 2.6362e-04, 1.3648e-03,  ..., 6.5342e-04,
          1.0905e-01, 1.3626e-03],
         [6.7885e-05, 2.6362e-04, 1.3648e-03,  ..., 9.9804e-01,
          5.4951e-01, 9.9591e-01],
         [6.7885e-05, 9.9921e-01, 9.9591e-01,  ..., 6.5342e-04,
          1.2440e-01, 1.3626e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1671e-04, 5.1353e-05, 1.0682e-03,  ..., 9.3481e-04,
          6.2333e-05, 6.0937e-04],
         [2.1671e-04, 5.1353e-05, 1.0877e-03,  ..., 9.3481e-04,
          6.2333e-05, 6.0937e-04],
         [9.9935e-01, 5.1353e-05, 1.0682e-03,  ..., 9.9720e-01,
          6.2333e-05, 9.9817e-01],
         [2.1671e-04, 9.9985e-01, 9.9678e-01,  ..., 9.3481e-04,
          9.9981e-01, 6.0937e-04]],
        [[1.0778e-03, 4.3357e-05, 1.6069e-04,  ..., 7.6462e-05,
          9.9952e-01, 1.2382e-03],
         [1.0778e-03, 4.3357e-05, 1.6069e-04,  ..., 7.6462e-05,
          1.5851e-04, 1.2382e-03],
         [9.9677e-01, 4.3357e-05, 1.6069e-04,  ..., 7.6462e-05,
          1.5851e-04, 9.9629e-01],
         [1.0778e-03, 9.9987e-01, 9.9952e-01,  ..., 9.9977e-01,
          1.5851e-04, 1.2382e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 702:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9975e-01, 9.0837e-03, 7.8926e-04,  ..., 2.5004e-05,
          1.7108e-04, 9.9932e-01],
         [8.3074e-05, 4.5137e-03, 7.7249e-04,  ..., 2.5004e-05,
          1.7108e-04, 2.2672e-04],
         [8.3074e-05, 4.5975e-03, 7.7249e-04,  ..., 9.9992e-01,
          9.9949e-01, 2.2672e-04],
         [8.3074e-05, 9.8181e-01, 9.9767e-01,  ..., 2.5004e-05,
          1.7108e-04, 2.2672e-04]],
        [[9.9155e-01, 6.1601e-04, 4.0859e-04,  ..., 7.0684e-05,
          1.9526e-01, 6.7986e-05],
         [2.9173e-03, 6.1601e-04, 4.0859e-04,  ..., 7.0684e-05,
          2.0965e-01, 6.7986e-05],
         [2.8037e-03, 6.1601e-04, 4.0859e-04,  ..., 9.9979e-01,
          1.8525e-01, 9.9980e-01],
         [2.7292e-03, 9.9815e-01, 9.9877e-01,  ..., 7.0684e-05,
          4.0985e-01, 6.7986e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.7026e-04, 5.3904e-05, 4.5151e-03,  ..., 3.1866e-04,
          1.1605e-04, 7.5191e-04],
         [8.7026e-04, 5.3904e-05, 4.5151e-03,  ..., 3.1866e-04,
          1.1605e-04, 7.5191e-04],
         [9.9739e-01, 5.3904e-05, 5.7680e-03,  ..., 9.9904e-01,
          1.1605e-04, 9.9774e-01],
         [8.7026e-04, 9.9984e-01, 9.8520e-01,  ..., 3.1866e-04,
          9.9965e-01, 7.5191e-04]],
        [[4.5980e-03, 5.5885e-05, 5.5481e-05,  ..., 9.0057e-05,
          9.9956e-01, 3.8391e-03],
         [4.3664e-03, 5.5885e-05, 5.5481e-05,  ..., 9.0057e-05,
          1.4549e-04, 3.8391e-03],
         [9.8667e-01, 5.5885e-05, 5.5481e-05,  ..., 9.0057e-05,
          1.4549e-04, 9.8848e-01],
         [4.3664e-03, 9.9983e-01, 9.9983e-01,  ..., 9.9973e-01,
          1.4549e-04, 3.8391e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:47,847 [Process: 0] Synchronize training processes
2024-08-18 15:25:47,847 [Process: 0] Evaluating...
2024-08-18 15:25:47,849 [Process: 0] EPOCH 703:
2024-08-18 15:25:47,851 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:48,977 [Process: 0] Synchronize training processes
2024-08-18 15:25:48,978 [Process: 0] Evaluating...
2024-08-18 15:25:48,979 [Process: 0] EPOCH 704:
2024-08-18 15:25:48,981 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 703:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9990e-01, 1.2129e-03, 7.3991e-03,  ..., 1.8642e-05,
          9.8848e-04, 9.9459e-01],
         [3.3232e-05, 1.2129e-03, 4.0833e-03,  ..., 1.8642e-05,
          9.8848e-04, 1.8045e-03],
         [3.3232e-05, 1.2129e-03, 4.0833e-03,  ..., 9.9994e-01,
          9.9703e-01, 1.8045e-03],
         [3.3232e-05, 9.9636e-01, 9.8443e-01,  ..., 1.8642e-05,
          9.8848e-04, 1.8045e-03]],
        [[9.9850e-01, 1.6325e-03, 1.2472e-03,  ..., 2.8003e-04,
          2.1416e-01, 1.8285e-04],
         [5.0052e-04, 1.4294e-03, 1.2472e-03,  ..., 2.8003e-04,
          2.1754e-01, 1.8285e-04],
         [5.0052e-04, 1.4294e-03, 1.2472e-03,  ..., 9.9916e-01,
          1.7357e-01, 9.9945e-01],
         [5.0052e-04, 9.9551e-01, 9.9626e-01,  ..., 2.8003e-04,
          3.9473e-01, 1.8285e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.9687e-04, 2.5939e-04, 1.1957e-03,  ..., 1.5717e-03,
          1.0098e-03, 1.3035e-03],
         [3.9687e-04, 2.5939e-04, 1.1957e-03,  ..., 1.5717e-03,
          1.0098e-03, 1.3035e-03],
         [9.9881e-01, 2.5939e-04, 1.1957e-03,  ..., 9.9528e-01,
          1.0098e-03, 9.9609e-01],
         [3.9687e-04, 9.9922e-01, 9.9641e-01,  ..., 1.5717e-03,
          9.9697e-01, 1.3035e-03]],
        [[1.2649e-03, 5.5489e-05, 2.5322e-05,  ..., 2.0325e-06,
          9.9971e-01, 1.4098e-03],
         [1.2649e-03, 5.5489e-05, 2.5322e-05,  ..., 2.0325e-06,
          9.6000e-05, 1.4098e-03],
         [9.9621e-01, 5.5489e-05, 2.5322e-05,  ..., 2.0325e-06,
          9.6000e-05, 9.9577e-01],
         [1.2649e-03, 9.9983e-01, 9.9992e-01,  ..., 9.9999e-01,
          9.6000e-05, 1.4098e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 704:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9882e-01, 1.6072e-03, 5.1938e-04,  ..., 5.2109e-05,
          6.4507e-04, 9.9936e-01],
         [3.9262e-04, 1.6072e-03, 5.1938e-04,  ..., 5.2109e-05,
          6.4507e-04, 2.1441e-04],
         [3.9262e-04, 1.6072e-03, 5.1938e-04,  ..., 9.9984e-01,
          9.9806e-01, 2.1441e-04],
         [3.9262e-04, 9.9518e-01, 9.9844e-01,  ..., 5.2109e-05,
          6.4507e-04, 2.1441e-04]],
        [[9.9498e-01, 9.6449e-04, 1.0079e-03,  ..., 1.5498e-05,
          2.5336e-01, 3.0769e-05],
         [1.6729e-03, 9.6449e-04, 1.0079e-03,  ..., 1.5498e-05,
          2.9865e-01, 3.0769e-05],
         [1.6729e-03, 9.6449e-04, 1.0079e-03,  ..., 9.9995e-01,
          2.4802e-01, 9.9991e-01],
         [1.6729e-03, 9.9711e-01, 9.9698e-01,  ..., 1.5498e-05,
          1.9997e-01, 3.0769e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:50,107 [Process: 0] Synchronize training processes
2024-08-18 15:25:50,108 [Process: 0] Evaluating...
2024-08-18 15:25:50,109 [Process: 0] EPOCH 705:
2024-08-18 15:25:50,111 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:51,239 [Process: 0] Synchronize training processes
2024-08-18 15:25:51,239 [Process: 0] Evaluating...
2024-08-18 15:25:51,241 [Process: 0] EPOCH 706:
2024-08-18 15:25:51,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7063e-04, 3.8726e-04, 2.0080e-03,  ..., 6.0674e-04,
          1.2005e-04, 7.1900e-04],
         [6.7063e-04, 3.8726e-04, 3.1222e-03,  ..., 6.0674e-04,
          1.2005e-04, 7.1900e-04],
         [9.9799e-01, 3.8726e-04, 2.0080e-03,  ..., 9.9818e-01,
          1.2005e-04, 9.9784e-01],
         [6.7063e-04, 9.9884e-01, 9.9286e-01,  ..., 6.0674e-04,
          9.9964e-01, 7.1900e-04]],
        [[2.1260e-03, 2.8831e-05, 5.0483e-05,  ..., 4.6106e-05,
          9.9826e-01, 1.0681e-03],
         [2.1260e-03, 2.8831e-05, 5.0483e-05,  ..., 4.6106e-05,
          5.8103e-04, 1.0681e-03],
         [9.9362e-01, 2.8831e-05, 5.0483e-05,  ..., 4.6106e-05,
          5.8103e-04, 9.9680e-01],
         [2.1260e-03, 9.9991e-01, 9.9985e-01,  ..., 9.9986e-01,
          5.8103e-04, 1.0681e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 705:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9991e-01, 8.0523e-04, 1.4295e-03,  ..., 4.0592e-05,
          3.4207e-04, 9.9863e-01],
         [2.8363e-05, 8.0523e-04, 1.4295e-03,  ..., 4.0592e-05,
          3.4207e-04, 4.5565e-04],
         [2.8363e-05, 8.0523e-04, 1.4339e-03,  ..., 9.9988e-01,
          9.9897e-01, 4.5565e-04],
         [2.8363e-05, 9.9758e-01, 9.9571e-01,  ..., 4.0592e-05,
          3.4207e-04, 4.5565e-04]],
        [[9.9945e-01, 2.3139e-03, 1.3881e-03,  ..., 4.0318e-04,
          2.2280e-01, 8.2944e-04],
         [1.8300e-04, 2.3139e-03, 1.3881e-03,  ..., 4.0318e-04,
          2.9660e-01, 1.0397e-03],
         [1.8300e-04, 2.4029e-03, 1.3881e-03,  ..., 9.9879e-01,
          2.2819e-01, 9.9730e-01],
         [1.8300e-04, 9.9297e-01, 9.9584e-01,  ..., 4.0318e-04,
          2.5242e-01, 8.2944e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5866e-03, 2.8732e-05, 1.1385e-03,  ..., 1.3327e-03,
          3.4654e-05, 1.9127e-04],
         [1.5866e-03, 2.8732e-05, 2.1232e-03,  ..., 1.3327e-03,
          3.4654e-05, 1.9127e-04],
         [9.9524e-01, 2.8732e-05, 1.1385e-03,  ..., 9.9600e-01,
          3.4654e-05, 9.9943e-01],
         [1.5866e-03, 9.9991e-01, 9.9560e-01,  ..., 1.3327e-03,
          9.9990e-01, 1.9127e-04]],
        [[1.0763e-03, 3.9101e-05, 4.7998e-05,  ..., 1.5002e-04,
          9.9774e-01, 5.7057e-03],
         [1.0763e-03, 3.9101e-05, 4.7998e-05,  ..., 1.5002e-04,
          7.2577e-04, 5.7057e-03],
         [9.9677e-01, 3.9101e-05, 4.7998e-05,  ..., 1.5002e-04,
          7.2577e-04, 9.8173e-01],
         [1.0763e-03, 9.9988e-01, 9.9986e-01,  ..., 9.9955e-01,
          8.1182e-04, 6.8594e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 706:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9939e-01, 2.8441e-03, 1.2508e-03,  ..., 8.8032e-06,
          1.0486e-03, 9.9854e-01],
         [2.0275e-04, 2.8441e-03, 1.2508e-03,  ..., 8.8032e-06,
          1.0486e-03, 4.8595e-04],
         [2.0275e-04, 3.6280e-03, 1.2508e-03,  ..., 9.9997e-01,
          9.9685e-01, 4.8595e-04],
         [2.0275e-04, 9.9068e-01, 9.9625e-01,  ..., 8.8032e-06,
          1.0486e-03, 4.8595e-04]],
        [[9.9771e-01, 4.8923e-04, 4.2190e-03,  ..., 7.9088e-05,
          2.7021e-01, 1.6702e-04],
         [7.6380e-04, 4.8923e-04, 3.7486e-03,  ..., 7.9088e-05,
          2.6452e-01, 1.6702e-04],
         [7.6380e-04, 4.8923e-04, 4.3340e-03,  ..., 9.9976e-01,
          2.9311e-01, 9.9950e-01],
         [7.6380e-04, 9.9853e-01, 9.8770e-01,  ..., 7.9088e-05,
          1.7216e-01, 1.6702e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:25:52,369 [Process: 0] Synchronize training processes
2024-08-18 15:25:52,370 [Process: 0] Evaluating...
2024-08-18 15:25:52,371 [Process: 0] EPOCH 707:
2024-08-18 15:25:52,373 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:53,492 [Process: 0] Synchronize training processes
2024-08-18 15:25:53,492 [Process: 0] Evaluating...
2024-08-18 15:25:53,494 [Process: 0] EPOCH 708:
2024-08-18 15:25:53,496 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.3053e-04, 3.4036e-04, 5.3194e-04,  ..., 3.8637e-03,
          3.0158e-04, 9.5051e-04],
         [5.3053e-04, 3.4036e-04, 5.3194e-04,  ..., 2.3821e-03,
          3.0158e-04, 9.5051e-04],
         [9.9841e-01, 3.4036e-04, 5.3194e-04,  ..., 9.9137e-01,
          3.0158e-04, 9.9715e-01],
         [5.3053e-04, 9.9898e-01, 9.9840e-01,  ..., 2.3821e-03,
          9.9910e-01, 9.5051e-04]],
        [[1.4819e-03, 1.0392e-05, 6.2200e-04,  ..., 9.8791e-05,
          9.9980e-01, 4.0570e-03],
         [1.4819e-03, 1.0392e-05, 6.2200e-04,  ..., 9.8791e-05,
          6.7993e-05, 4.7915e-03],
         [9.9555e-01, 1.0392e-05, 6.2200e-04,  ..., 9.8791e-05,
          6.7993e-05, 9.8709e-01],
         [1.4819e-03, 9.9997e-01, 9.9813e-01,  ..., 9.9970e-01,
          6.7993e-05, 4.0570e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 707:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9987e-01, 1.7265e-03, 2.1012e-03,  ..., 6.7106e-06,
          1.7722e-03, 9.9491e-01],
         [4.2296e-05, 1.7265e-03, 2.0660e-03,  ..., 6.7106e-06,
          1.7722e-03, 1.9869e-03],
         [4.2296e-05, 1.7265e-03, 2.0660e-03,  ..., 9.9998e-01,
          9.9468e-01, 1.5538e-03],
         [4.2296e-05, 9.9482e-01, 9.9377e-01,  ..., 6.7106e-06,
          1.7722e-03, 1.5538e-03]],
        [[9.9894e-01, 1.1974e-03, 4.7639e-03,  ..., 4.1867e-04,
          2.5708e-01, 2.3053e-04],
         [3.5447e-04, 1.1974e-03, 6.9991e-03,  ..., 4.1867e-04,
          2.7381e-01, 2.3053e-04],
         [3.5447e-04, 1.1974e-03, 5.4426e-03,  ..., 9.9874e-01,
          2.9064e-01, 9.9931e-01],
         [3.5447e-04, 9.9641e-01, 9.8279e-01,  ..., 4.1867e-04,
          1.7847e-01, 2.3053e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6062e-03, 4.7024e-04, 1.0635e-03,  ..., 1.1309e-02,
          6.5148e-02, 5.1639e-04],
         [1.6062e-03, 4.7024e-04, 1.0635e-03,  ..., 8.5728e-03,
          5.1911e-02, 5.1639e-04],
         [9.9518e-01, 4.7024e-04, 1.0635e-03,  ..., 9.6895e-01,
          3.1811e-02, 9.9845e-01],
         [1.6062e-03, 9.9859e-01, 9.9681e-01,  ..., 1.1165e-02,
          8.5113e-01, 5.1639e-04]],
        [[9.2952e-03, 1.2764e-04, 2.2828e-05,  ..., 1.5814e-04,
          9.9852e-01, 8.6146e-03],
         [1.2200e-02, 1.2764e-04, 2.2828e-05,  ..., 1.5814e-04,
          4.7819e-04, 8.6146e-03],
         [9.6328e-01, 1.2764e-04, 2.2828e-05,  ..., 1.5814e-04,
          4.7819e-04, 9.6848e-01],
         [1.5223e-02, 9.9962e-01, 9.9993e-01,  ..., 9.9953e-01,
          5.2034e-04, 1.4288e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 708:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 15:25:54,617 [Process: 0] Synchronize training processes
2024-08-18 15:25:54,618 [Process: 0] Evaluating...
2024-08-18 15:25:54,619 [Process: 0] EPOCH 709:
2024-08-18 15:25:54,621 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9932e-01, 1.9544e-03, 4.4243e-03,  ..., 8.1637e-05,
          4.4692e-05, 9.9828e-01],
         [2.2780e-04, 1.9544e-03, 2.9268e-03,  ..., 8.1637e-05,
          4.4692e-05, 5.7487e-04],
         [2.2780e-04, 1.9544e-03, 2.9268e-03,  ..., 9.9976e-01,
          9.9987e-01, 5.7487e-04],
         [2.2780e-04, 9.9414e-01, 9.8972e-01,  ..., 8.1637e-05,
          4.4692e-05, 5.7487e-04]],
        [[9.9976e-01, 1.8479e-03, 6.2093e-04,  ..., 7.1998e-05,
          2.2205e-01, 3.5750e-04],
         [8.1523e-05, 1.8479e-03, 6.2093e-04,  ..., 7.1998e-05,
          3.1396e-01, 3.5750e-04],
         [8.1523e-05, 1.8479e-03, 6.2093e-04,  ..., 9.9978e-01,
          2.0975e-01, 9.9893e-01],
         [8.1523e-05, 9.9446e-01, 9.9814e-01,  ..., 7.1998e-05,
          2.5425e-01, 3.5750e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1600e-04, 2.2692e-05, 2.7960e-04,  ..., 8.9539e-04,
          4.4908e-05, 2.1680e-03],
         [4.1600e-04, 2.2692e-05, 2.7960e-04,  ..., 8.9539e-04,
          4.4908e-05, 2.1680e-03],
         [9.9875e-01, 2.2692e-05, 2.7960e-04,  ..., 9.9731e-01,
          4.4908e-05, 9.9350e-01],
         [4.1600e-04, 9.9993e-01, 9.9916e-01,  ..., 8.9539e-04,
          9.9987e-01, 2.1680e-03]],
        [[1.0956e-03, 4.7745e-04, 1.7639e-05,  ..., 5.8714e-05,
          9.9820e-01, 3.2211e-04],
         [1.0956e-03, 4.7745e-04, 1.7639e-05,  ..., 5.8714e-05,
          6.0158e-04, 3.2211e-04],
         [9.9671e-01, 4.7745e-04, 1.7639e-05,  ..., 5.8714e-05,
          6.0158e-04, 9.9903e-01],
         [1.0956e-03, 9.9857e-01, 9.9995e-01,  ..., 9.9982e-01,
          6.0158e-04, 3.2211e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 709:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9949e-01, 4.8720e-03, 1.8385e-03,  ..., 1.0309e-04,
          1.2535e-04, 9.9965e-01],
         [1.7149e-04, 5.1640e-03, 1.5397e-03,  ..., 1.0309e-04,
          1.2535e-04, 1.1634e-04],
         [1.7149e-04, 7.6288e-03, 1.5397e-03,  ..., 9.9969e-01,
          9.9962e-01, 1.1634e-04],
         [1.7149e-04, 9.8234e-01, 9.9508e-01,  ..., 1.0309e-04,
          1.2535e-04, 1.1634e-04]],
        [[9.9922e-01, 2.5124e-03, 5.1291e-04,  ..., 4.1222e-05,
          2.1684e-01, 1.0466e-03],
         [3.5624e-04, 2.2740e-03, 5.1291e-04,  ..., 4.1222e-05,
          2.9226e-01, 1.0466e-03],
         [2.1168e-04, 2.2740e-03, 5.1291e-04,  ..., 9.9988e-01,
          1.7277e-01, 9.9686e-01],
         [2.1168e-04, 9.9294e-01, 9.9846e-01,  ..., 4.1222e-05,
          3.1813e-01, 1.0466e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0312e-03, 1.7608e-05, 3.3905e-05,  ..., 9.3731e-04,
          1.7983e-04, 1.8204e-03],
         [1.0312e-03, 1.7608e-05, 3.3905e-05,  ..., 9.3731e-04,
          1.7983e-04, 1.8204e-03],
         [9.9691e-01, 1.7608e-05, 3.3905e-05,  ..., 9.9719e-01,
          1.7983e-04, 9.9454e-01],
         [1.0312e-03, 9.9995e-01, 9.9990e-01,  ..., 9.3731e-04,
          9.9946e-01, 1.8204e-03]],
        [[3.2365e-04, 3.3842e-05, 1.0416e-04,  ..., 9.8299e-05,
          8.8862e-02, 2.7035e-03],
         [3.2365e-04, 3.3842e-05, 1.0416e-04,  ..., 9.8299e-05,
          4.7465e-02, 2.7035e-03],
         [9.9903e-01, 3.3842e-05, 1.0416e-04,  ..., 9.8299e-05,
          3.5611e-02, 9.9178e-01],
         [3.2365e-04, 9.9990e-01, 9.9969e-01,  ..., 9.9971e-01,
          8.2806e-01, 2.8168e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 710:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:55,747 [Process: 0] Synchronize training processes
2024-08-18 15:25:55,748 [Process: 0] Evaluating...
2024-08-18 15:25:55,750 [Process: 0] EPOCH 710:
2024-08-18 15:25:55,751 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:56,881 [Process: 0] Synchronize training processes
2024-08-18 15:25:56,881 [Process: 0] Evaluating...
2024-08-18 15:25:56,883 [Process: 0] EPOCH 711:
2024-08-18 15:25:56,885 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9952e-01, 4.5791e-04, 3.0060e-03,  ..., 1.0906e-04,
          2.9380e-04, 9.9580e-01],
         [1.5943e-04, 4.5791e-04, 3.0060e-03,  ..., 1.0906e-04,
          2.9380e-04, 1.2440e-03],
         [1.5943e-04, 4.5791e-04, 3.0060e-03,  ..., 9.9967e-01,
          9.9912e-01, 1.7074e-03],
         [1.5943e-04, 9.9863e-01, 9.9098e-01,  ..., 1.0906e-04,
          2.9380e-04, 1.2440e-03]],
        [[9.9972e-01, 1.2456e-04, 1.8905e-03,  ..., 1.4974e-04,
          2.7371e-01, 6.8068e-05],
         [9.2768e-05, 1.2456e-04, 1.8905e-03,  ..., 1.4974e-04,
          3.3837e-01, 6.8068e-05],
         [9.2768e-05, 1.2456e-04, 1.8905e-03,  ..., 9.9955e-01,
          2.2678e-01, 9.9980e-01],
         [9.2768e-05, 9.9963e-01, 9.9433e-01,  ..., 1.4974e-04,
          1.6114e-01, 6.8068e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.6964e-04, 9.1117e-05, 2.8103e-04,  ..., 7.4600e-04,
          7.7507e-05, 6.5834e-04],
         [9.6964e-04, 9.1117e-05, 2.8103e-04,  ..., 7.4600e-04,
          7.7507e-05, 6.5834e-04],
         [9.9709e-01, 9.1117e-05, 2.8103e-04,  ..., 9.9776e-01,
          7.7507e-05, 9.9803e-01],
         [9.6964e-04, 9.9973e-01, 9.9916e-01,  ..., 7.4600e-04,
          9.9977e-01, 6.5834e-04]],
        [[2.2854e-03, 6.6005e-04, 2.5848e-05,  ..., 1.0113e-04,
          9.2795e-02, 6.4168e-04],
         [2.2854e-03, 6.6005e-04, 2.5848e-05,  ..., 1.0113e-04,
          5.4822e-02, 6.4168e-04],
         [9.9314e-01, 6.6005e-04, 2.5848e-05,  ..., 1.0113e-04,
          4.8144e-02, 9.9808e-01],
         [2.2854e-03, 9.9802e-01, 9.9992e-01,  ..., 9.9970e-01,
          8.0424e-01, 6.4168e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 711:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9973e-01, 1.7120e-03, 2.4332e-04,  ..., 8.8428e-05,
          2.9557e-04, 9.9899e-01],
         [9.0448e-05, 1.7120e-03, 2.4332e-04,  ..., 8.8428e-05,
          2.9557e-04, 3.3629e-04],
         [9.0448e-05, 1.7120e-03, 2.4332e-04,  ..., 9.9973e-01,
          9.9911e-01, 3.3629e-04],
         [9.0643e-05, 9.9486e-01, 9.9927e-01,  ..., 8.8428e-05,
          2.9557e-04, 3.3629e-04]],
        [[9.9686e-01, 3.6394e-04, 1.5465e-03,  ..., 1.5374e-04,
          2.9723e-01, 4.9338e-05],
         [1.1636e-03, 3.6394e-04, 1.5465e-03,  ..., 1.5374e-04,
          3.0041e-01, 4.9338e-05],
         [9.8897e-04, 3.6394e-04, 1.5651e-03,  ..., 9.9954e-01,
          2.4160e-01, 9.9985e-01],
         [9.8897e-04, 9.9891e-01, 9.9534e-01,  ..., 1.5374e-04,
          1.6075e-01, 4.9338e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:25:58,035 [Process: 0] Synchronize training processes
2024-08-18 15:25:58,035 [Process: 0] Evaluating...
2024-08-18 15:25:58,039 [Process: 0] EPOCH 712:
2024-08-18 15:25:58,041 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:25:59,167 [Process: 0] Synchronize training processes
2024-08-18 15:25:59,167 [Process: 0] Evaluating...
2024-08-18 15:25:59,169 [Process: 0] EPOCH 713:
2024-08-18 15:25:59,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.9804e-04, 1.2901e-04, 2.1901e-03,  ..., 4.1725e-03,
          3.3836e-05, 2.4927e-04],
         [4.9804e-04, 1.2901e-04, 2.1901e-03,  ..., 4.1725e-03,
          3.3836e-05, 2.4927e-04],
         [9.9851e-01, 1.2901e-04, 2.1901e-03,  ..., 9.8737e-01,
          3.3836e-05, 9.9925e-01],
         [4.9804e-04, 9.9961e-01, 9.9343e-01,  ..., 4.2856e-03,
          9.9990e-01, 2.4927e-04]],
        [[1.3064e-02, 5.6075e-05, 1.5729e-04,  ..., 1.2326e-05,
          9.9993e-01, 1.6531e-03],
         [7.7918e-03, 5.6075e-05, 1.5729e-04,  ..., 1.2326e-05,
          2.2942e-05, 1.6531e-03],
         [9.7071e-01, 5.6075e-05, 1.5729e-04,  ..., 1.2326e-05,
          2.2942e-05, 9.9504e-01],
         [8.4380e-03, 9.9983e-01, 9.9953e-01,  ..., 9.9996e-01,
          2.2942e-05, 1.6531e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 712:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9984e-01, 2.0625e-03, 1.9757e-03,  ..., 4.0662e-05,
          9.8787e-05, 9.9231e-01],
         [5.2364e-05, 2.0625e-03, 1.9757e-03,  ..., 4.0662e-05,
          9.8787e-05, 3.8892e-03],
         [5.2364e-05, 2.0625e-03, 1.9757e-03,  ..., 9.9988e-01,
          9.9970e-01, 1.9011e-03],
         [5.2364e-05, 9.9381e-01, 9.9407e-01,  ..., 4.0662e-05,
          9.8787e-05, 1.9011e-03]],
        [[9.9916e-01, 1.8165e-03, 1.6446e-03,  ..., 5.0917e-04,
          2.8712e-01, 7.3097e-04],
         [2.7939e-04, 1.8165e-03, 1.6446e-03,  ..., 5.0917e-04,
          3.4077e-01, 7.3097e-04],
         [2.7939e-04, 1.8165e-03, 1.6446e-03,  ..., 9.9847e-01,
          1.9866e-01, 9.9781e-01],
         [2.7939e-04, 9.9455e-01, 9.9507e-01,  ..., 5.0917e-04,
          1.7345e-01, 7.3097e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9932e-04, 9.4203e-04, 2.8413e-03,  ..., 5.0752e-03,
          4.8403e-06, 3.1366e-03],
         [2.9932e-04, 9.4203e-04, 2.8413e-03,  ..., 5.9792e-03,
          4.8403e-06, 3.1366e-03],
         [9.9910e-01, 9.4203e-04, 2.8413e-03,  ..., 9.8412e-01,
          4.8403e-06, 9.9059e-01],
         [2.9932e-04, 9.9717e-01, 9.9148e-01,  ..., 4.8292e-03,
          9.9999e-01, 3.1366e-03]],
        [[1.8588e-03, 4.9990e-04, 2.2232e-04,  ..., 6.1845e-05,
          9.9754e-01, 2.6548e-03],
         [1.8588e-03, 4.9990e-04, 2.2232e-04,  ..., 6.1845e-05,
          8.0652e-04, 2.6548e-03],
         [9.9442e-01, 4.9990e-04, 2.2232e-04,  ..., 6.1845e-05,
          8.0652e-04, 9.9142e-01],
         [1.8588e-03, 9.9850e-01, 9.9933e-01,  ..., 9.9981e-01,
          8.4523e-04, 3.2737e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 713:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 1.9255e-03, 1.0560e-03,  ..., 4.7478e-05,
          4.5285e-04, 9.9699e-01],
         [5.1204e-05, 1.9255e-03, 1.0560e-03,  ..., 4.7478e-05,
          4.5285e-04, 1.1279e-03],
         [5.1204e-05, 1.9255e-03, 1.0560e-03,  ..., 9.9986e-01,
          9.9864e-01, 9.3863e-04],
         [5.1204e-05, 9.9422e-01, 9.9683e-01,  ..., 4.7478e-05,
          4.5285e-04, 9.3863e-04]],
        [[9.9931e-01, 2.1658e-03, 1.8817e-03,  ..., 3.2118e-04,
          2.4760e-01, 4.7257e-04],
         [3.1410e-04, 2.1658e-03, 1.8817e-03,  ..., 3.2118e-04,
          2.8323e-01, 4.7257e-04],
         [1.8705e-04, 2.1658e-03, 2.2414e-03,  ..., 9.9904e-01,
          1.9587e-01, 9.9858e-01],
         [1.8705e-04, 9.9350e-01, 9.9400e-01,  ..., 3.2118e-04,
          2.7330e-01, 4.7257e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:00,294 [Process: 0] Synchronize training processes
2024-08-18 15:26:00,295 [Process: 0] Evaluating...
2024-08-18 15:26:00,297 [Process: 0] EPOCH 714:
2024-08-18 15:26:00,298 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:01,447 [Process: 0] Synchronize training processes
2024-08-18 15:26:01,447 [Process: 0] Evaluating...
2024-08-18 15:26:01,449 [Process: 0] EPOCH 715:
2024-08-18 15:26:01,451 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7557e-03, 2.3249e-04, 1.1291e-03,  ..., 1.1264e-03,
          1.8659e-05, 7.5292e-04],
         [1.7557e-03, 2.3249e-04, 1.1291e-03,  ..., 1.1264e-03,
          1.8659e-05, 7.5292e-04],
         [9.9473e-01, 2.3249e-04, 1.1291e-03,  ..., 9.9662e-01,
          1.8659e-05, 9.9774e-01],
         [1.7557e-03, 9.9930e-01, 9.9661e-01,  ..., 1.1264e-03,
          9.9994e-01, 7.5292e-04]],
        [[7.7940e-04, 2.5742e-06, 1.7130e-04,  ..., 6.0026e-05,
          7.0472e-04, 5.0336e-03],
         [7.7940e-04, 2.5742e-06, 1.7130e-04,  ..., 6.0026e-05,
          7.0472e-04, 5.0336e-03],
         [9.9766e-01, 2.5742e-06, 1.7130e-04,  ..., 6.0026e-05,
          7.0472e-04, 9.8472e-01],
         [7.7940e-04, 9.9999e-01, 9.9949e-01,  ..., 9.9982e-01,
          9.9789e-01, 5.2147e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 714:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 1.3194e-03, 6.2818e-04,  ..., 1.2633e-05,
          4.5291e-05, 9.9869e-01],
         [5.8448e-05, 1.3194e-03, 6.2818e-04,  ..., 1.2633e-05,
          4.5291e-05, 4.3604e-04],
         [5.8448e-05, 1.3194e-03, 6.2818e-04,  ..., 9.9996e-01,
          9.9986e-01, 4.3604e-04],
         [5.8448e-05, 9.9604e-01, 9.9812e-01,  ..., 1.2633e-05,
          4.5291e-05, 4.3604e-04]],
        [[9.9840e-01, 1.4971e-03, 7.4911e-04,  ..., 4.6797e-04,
          2.7265e-02, 1.1140e-04],
         [5.3262e-04, 1.4971e-03, 7.4911e-04,  ..., 4.6797e-04,
          3.6810e-02, 1.1140e-04],
         [5.3262e-04, 1.4971e-03, 7.4911e-04,  ..., 9.9860e-01,
          3.6841e-02, 9.9967e-01],
         [5.3262e-04, 9.9551e-01, 9.9775e-01,  ..., 4.6797e-04,
          8.9908e-01, 1.1140e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6260e-04, 1.5955e-04, 7.1583e-04,  ..., 8.3565e-04,
          1.0182e-04, 1.9870e-04],
         [2.6260e-04, 1.5955e-04, 7.1583e-04,  ..., 8.3565e-04,
          1.0182e-04, 1.9870e-04],
         [9.9921e-01, 1.5955e-04, 7.1583e-04,  ..., 9.9749e-01,
          1.0182e-04, 9.9940e-01],
         [2.6260e-04, 9.9952e-01, 9.9785e-01,  ..., 8.3565e-04,
          9.9969e-01, 1.9870e-04]],
        [[3.1627e-03, 7.3566e-05, 3.1717e-04,  ..., 2.7188e-04,
          1.2989e-04, 1.4680e-03],
         [3.1627e-03, 7.3566e-05, 3.1717e-04,  ..., 2.7188e-04,
          1.2989e-04, 1.4680e-03],
         [9.9051e-01, 7.3566e-05, 3.1717e-04,  ..., 2.7188e-04,
          1.2989e-04, 9.9560e-01],
         [3.1627e-03, 9.9978e-01, 9.9905e-01,  ..., 9.9918e-01,
          9.9961e-01, 1.4680e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 715:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9923e-01, 8.7519e-04, 1.1936e-03,  ..., 1.5778e-03,
          3.7888e-04, 9.9771e-01],
         [2.5747e-04, 8.7519e-04, 1.0441e-03,  ..., 1.5778e-03,
          3.7888e-04, 8.3581e-04],
         [2.5747e-04, 8.7519e-04, 1.0441e-03,  ..., 9.9527e-01,
          9.9886e-01, 7.2601e-04],
         [2.5747e-04, 9.9737e-01, 9.9672e-01,  ..., 1.5778e-03,
          3.7888e-04, 7.2601e-04]],
        [[9.9988e-01, 2.9472e-04, 1.1210e-03,  ..., 1.2832e-04,
          3.2759e-02, 7.5742e-04],
         [4.0139e-05, 2.9472e-04, 1.1210e-03,  ..., 1.2832e-04,
          2.4885e-02, 7.5742e-04],
         [4.0139e-05, 2.9472e-04, 1.1210e-03,  ..., 9.9961e-01,
          9.2527e-01, 9.9773e-01],
         [4.0139e-05, 9.9912e-01, 9.9664e-01,  ..., 1.2832e-04,
          1.7088e-02, 7.5742e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:02,576 [Process: 0] Synchronize training processes
2024-08-18 15:26:02,576 [Process: 0] Evaluating...
2024-08-18 15:26:02,578 [Process: 0] EPOCH 716:
2024-08-18 15:26:02,580 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0015e-03, 2.7201e-04, 7.0719e-04,  ..., 1.0421e-02,
          5.8544e-05, 1.1748e-03],
         [2.0015e-03, 2.7201e-04, 7.0719e-04,  ..., 6.4439e-03,
          5.8544e-05, 1.1748e-03],
         [9.9400e-01, 2.7201e-04, 7.0719e-04,  ..., 9.7669e-01,
          5.8544e-05, 9.9648e-01],
         [2.0015e-03, 9.9918e-01, 9.9788e-01,  ..., 6.4439e-03,
          9.9982e-01, 1.1748e-03]],
        [[6.9167e-04, 1.1617e-05, 2.8872e-05,  ..., 1.0390e-03,
          2.5918e-04, 8.3897e-04],
         [6.9167e-04, 1.1617e-05, 2.8872e-05,  ..., 1.0390e-03,
          2.5918e-04, 8.3897e-04],
         [9.9793e-01, 1.1617e-05, 2.8872e-05,  ..., 1.0390e-03,
          2.5918e-04, 9.9748e-01],
         [6.9167e-04, 9.9997e-01, 9.9991e-01,  ..., 9.9688e-01,
          9.9922e-01, 8.3897e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 716:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9987e-01, 2.7999e-04, 6.3465e-04,  ..., 1.1491e-05,
          1.2659e-04, 9.9863e-01],
         [4.1802e-05, 2.7999e-04, 6.3465e-04,  ..., 1.1491e-05,
          1.2659e-04, 4.5772e-04],
         [4.1802e-05, 2.7999e-04, 6.3465e-04,  ..., 9.9997e-01,
          9.9962e-01, 4.5772e-04],
         [4.1802e-05, 9.9916e-01, 9.9810e-01,  ..., 1.1491e-05,
          1.2659e-04, 4.5772e-04]],
        [[9.8744e-01, 6.8609e-04, 1.6730e-03,  ..., 3.0244e-04,
          2.9194e-01, 1.3052e-03],
         [6.9176e-03, 6.8609e-04, 1.6730e-03,  ..., 3.0244e-04,
          2.8384e-01, 1.3555e-03],
         [2.8230e-03, 6.8609e-04, 1.8166e-03,  ..., 9.9909e-01,
          2.0031e-01, 9.9603e-01],
         [2.8230e-03, 9.9794e-01, 9.9484e-01,  ..., 3.0244e-04,
          2.2390e-01, 1.3052e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5529e-04, 9.0267e-04, 1.2447e-04,  ..., 1.4733e-03,
          2.8438e-05, 1.6890e-03],
         [3.5529e-04, 9.0267e-04, 1.2447e-04,  ..., 1.4733e-03,
          2.8438e-05, 1.6890e-03],
         [9.9893e-01, 9.0267e-04, 1.2447e-04,  ..., 9.9558e-01,
          2.8438e-05, 9.9493e-01],
         [3.5529e-04, 9.9729e-01, 9.9963e-01,  ..., 1.4733e-03,
          9.9991e-01, 1.6890e-03]],
        [[1.4028e-03, 6.2606e-05, 7.4963e-05,  ..., 3.3861e-05,
          8.3618e-05, 1.0854e-03],
         [1.4028e-03, 6.2606e-05, 7.4963e-05,  ..., 3.3861e-05,
          8.3618e-05, 1.0854e-03],
         [9.9579e-01, 6.2606e-05, 7.4963e-05,  ..., 3.3861e-05,
          8.3618e-05, 9.9674e-01],
         [1.4028e-03, 9.9981e-01, 9.9978e-01,  ..., 9.9990e-01,
          9.9975e-01, 1.0854e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 717:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:03,708 [Process: 0] Synchronize training processes
2024-08-18 15:26:03,708 [Process: 0] Evaluating...
2024-08-18 15:26:03,710 [Process: 0] EPOCH 717:
2024-08-18 15:26:03,712 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:04,840 [Process: 0] Synchronize training processes
2024-08-18 15:26:04,840 [Process: 0] Evaluating...
2024-08-18 15:26:04,842 [Process: 0] EPOCH 718:
2024-08-18 15:26:04,844 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9975e-01, 1.9966e-03, 3.6504e-03,  ..., 1.1754e-04,
          1.8654e-03, 9.8886e-01],
         [8.4834e-05, 1.9966e-03, 3.6504e-03,  ..., 1.1754e-04,
          1.8654e-03, 5.8837e-03],
         [8.4834e-05, 1.9966e-03, 5.0244e-03,  ..., 9.9965e-01,
          9.9440e-01, 2.6267e-03],
         [8.4834e-05, 9.9401e-01, 9.8767e-01,  ..., 1.1754e-04,
          1.8654e-03, 2.6267e-03]],
        [[9.9307e-01, 2.4655e-04, 1.7267e-03,  ..., 6.9384e-05,
          2.4377e-01, 7.7205e-05],
         [4.0932e-03, 2.4655e-04, 1.7267e-03,  ..., 6.9384e-05,
          2.5374e-01, 7.7205e-05],
         [1.4207e-03, 2.4655e-04, 1.7267e-03,  ..., 9.9979e-01,
          1.7324e-01, 9.9977e-01],
         [1.4207e-03, 9.9926e-01, 9.9482e-01,  ..., 6.9384e-05,
          3.2924e-01, 7.7205e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2068e-03, 2.8007e-05, 2.5895e-05,  ..., 1.0557e-03,
          5.5790e-04, 6.3730e-04],
         [3.4023e-03, 2.8007e-05, 2.5895e-05,  ..., 1.0065e-03,
          5.5790e-04, 6.3730e-04],
         [9.8899e-01, 2.8007e-05, 2.5895e-05,  ..., 9.9693e-01,
          5.5790e-04, 9.9809e-01],
         [3.4023e-03, 9.9992e-01, 9.9992e-01,  ..., 1.0065e-03,
          9.9833e-01, 6.3730e-04]],
        [[1.2174e-03, 1.3979e-05, 3.5876e-04,  ..., 1.8529e-04,
          1.6315e-03, 1.2337e-03],
         [1.2174e-03, 1.3979e-05, 3.5876e-04,  ..., 1.8529e-04,
          1.6315e-03, 1.2337e-03],
         [9.9635e-01, 1.3979e-05, 3.5876e-04,  ..., 1.8529e-04,
          1.6315e-03, 9.9630e-01],
         [1.2174e-03, 9.9996e-01, 9.9892e-01,  ..., 9.9944e-01,
          9.9511e-01, 1.2337e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 718:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9994e-01, 2.0484e-03, 1.2752e-03,  ..., 7.9043e-07,
          8.4539e-04, 9.9800e-01],
         [2.0053e-05, 2.0484e-03, 1.2752e-03,  ..., 7.9043e-07,
          8.4539e-04, 6.6557e-04],
         [2.0053e-05, 2.0484e-03, 1.2752e-03,  ..., 1.0000e+00,
          9.9746e-01, 6.6557e-04],
         [2.0053e-05, 9.9385e-01, 9.9617e-01,  ..., 7.9043e-07,
          8.4539e-04, 6.6557e-04]],
        [[9.9903e-01, 2.2710e-03, 8.8410e-04,  ..., 3.6454e-04,
          3.3552e-01, 7.7927e-04],
         [3.2327e-04, 2.2710e-03, 8.8410e-04,  ..., 3.6454e-04,
          2.5197e-01, 7.7927e-04],
         [3.2327e-04, 2.6496e-03, 8.8410e-04,  ..., 9.9891e-01,
          1.8096e-01, 9.9766e-01],
         [3.2327e-04, 9.9281e-01, 9.9735e-01,  ..., 3.6454e-04,
          2.3156e-01, 7.7927e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4628e-03, 8.4699e-05, 6.1824e-04,  ..., 4.0209e-04,
          5.0017e-04, 2.1531e-03],
         [3.3556e-03, 8.4699e-05, 6.1824e-04,  ..., 4.0209e-04,
          5.0017e-04, 2.1531e-03],
         [9.8983e-01, 8.4699e-05, 6.1824e-04,  ..., 9.9879e-01,
          5.0017e-04, 9.9354e-01],
         [3.3556e-03, 9.9975e-01, 9.9815e-01,  ..., 4.0209e-04,
          9.9850e-01, 2.1531e-03]],
        [[4.8897e-04, 5.0785e-05, 1.5731e-05,  ..., 3.7453e-05,
          1.5421e-03, 6.6652e-03],
         [4.8897e-04, 5.0785e-05, 1.5731e-05,  ..., 3.7453e-05,
          1.3673e-03, 8.5505e-03],
         [9.9853e-01, 5.0785e-05, 1.5731e-05,  ..., 3.7453e-05,
          1.3673e-03, 9.7565e-01],
         [4.8897e-04, 9.9985e-01, 9.9995e-01,  ..., 9.9989e-01,
          9.9572e-01, 9.1298e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:05,965 [Process: 0] Synchronize training processes
2024-08-18 15:26:05,966 [Process: 0] Evaluating...
2024-08-18 15:26:05,968 [Process: 0] EPOCH 719:
2024-08-18 15:26:05,969 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:07,095 [Process: 0] Synchronize training processes
2024-08-18 15:26:07,095 [Process: 0] Evaluating...
2024-08-18 15:26:07,097 [Process: 0] EPOCH 720:
2024-08-18 15:26:07,099 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 719:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9883e-01, 4.2364e-03, 1.4650e-03,  ..., 3.2148e-04,
          1.7561e-05, 9.9898e-01],
         [3.8924e-04, 3.8988e-03, 1.4650e-03,  ..., 3.2148e-04,
          1.7561e-05, 3.4098e-04],
         [3.8924e-04, 4.0509e-03, 1.4650e-03,  ..., 9.9904e-01,
          9.9995e-01, 3.4098e-04],
         [3.8924e-04, 9.8781e-01, 9.9560e-01,  ..., 3.2148e-04,
          1.7561e-05, 3.4098e-04]],
        [[9.9453e-01, 1.4883e-03, 2.5424e-04,  ..., 3.4601e-03,
          3.7060e-01, 4.4276e-04],
         [2.0127e-03, 1.4883e-03, 2.5424e-04,  ..., 2.3670e-03,
          2.7754e-01, 4.4276e-04],
         [1.7267e-03, 1.4883e-03, 2.5424e-04,  ..., 9.9181e-01,
          1.7421e-01, 9.9867e-01],
         [1.7267e-03, 9.9554e-01, 9.9924e-01,  ..., 2.3670e-03,
          1.7765e-01, 4.4276e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.6261e-04, 5.0730e-05, 3.0726e-04,  ..., 1.3318e-03,
          3.1690e-04, 1.4494e-03],
         [4.6261e-04, 5.0730e-05, 3.0726e-04,  ..., 1.3318e-03,
          3.1690e-04, 1.4494e-03],
         [9.9861e-01, 5.0730e-05, 3.0726e-04,  ..., 9.9600e-01,
          3.1690e-04, 9.9565e-01],
         [4.6261e-04, 9.9985e-01, 9.9908e-01,  ..., 1.3318e-03,
          9.9905e-01, 1.4494e-03]],
        [[2.4514e-03, 1.2177e-04, 3.3722e-04,  ..., 2.0813e-05,
          1.9116e-04, 9.1508e-04],
         [2.4514e-03, 1.2177e-04, 3.3722e-04,  ..., 2.0813e-05,
          1.9116e-04, 9.1508e-04],
         [9.9238e-01, 1.2177e-04, 3.3722e-04,  ..., 2.0813e-05,
          1.9116e-04, 9.9725e-01],
         [2.7217e-03, 9.9963e-01, 9.9899e-01,  ..., 9.9994e-01,
          9.9943e-01, 9.1508e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 720:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 2.0398e-03, 4.4371e-04,  ..., 4.2641e-04,
          7.9918e-05, 9.9536e-01],
         [1.0734e-05, 2.0398e-03, 4.4371e-04,  ..., 4.2641e-04,
          7.9918e-05, 1.5275e-03],
         [1.0734e-05, 2.1522e-03, 4.4371e-04,  ..., 9.9872e-01,
          9.9976e-01, 1.5882e-03],
         [1.0734e-05, 9.9377e-01, 9.9867e-01,  ..., 4.2641e-04,
          7.9918e-05, 1.5275e-03]],
        [[9.9831e-01, 1.0735e-03, 7.2301e-04,  ..., 2.8568e-04,
          3.1216e-01, 6.3888e-05],
         [5.6455e-04, 1.0735e-03, 7.2301e-04,  ..., 2.8568e-04,
          2.3305e-01, 6.3888e-05],
         [5.6455e-04, 1.0735e-03, 7.2301e-04,  ..., 9.9914e-01,
          2.3634e-01, 9.9981e-01],
         [5.6455e-04, 9.9678e-01, 9.9783e-01,  ..., 2.8568e-04,
          2.1845e-01, 6.3888e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:08,227 [Process: 0] Synchronize training processes
2024-08-18 15:26:08,228 [Process: 0] Evaluating...
2024-08-18 15:26:08,230 [Process: 0] EPOCH 721:
2024-08-18 15:26:08,231 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:09,360 [Process: 0] Synchronize training processes
2024-08-18 15:26:09,360 [Process: 0] Evaluating...
2024-08-18 15:26:09,364 [Process: 0] EPOCH 722:
2024-08-18 15:26:09,366 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2531e-04, 2.5510e-05, 2.3604e-03,  ..., 6.0477e-04,
          1.1252e-04, 7.0029e-04],
         [4.2531e-04, 2.5510e-05, 2.3604e-03,  ..., 6.0477e-04,
          1.1252e-04, 7.0029e-04],
         [9.9872e-01, 2.5510e-05, 2.3604e-03,  ..., 9.9819e-01,
          1.1252e-04, 9.9790e-01],
         [4.2531e-04, 9.9992e-01, 9.9292e-01,  ..., 6.0477e-04,
          9.9966e-01, 7.0029e-04]],
        [[1.8594e-02, 2.4052e-04, 4.1553e-05,  ..., 5.6312e-04,
          3.6132e-04, 3.1580e-03],
         [1.2998e-02, 2.4052e-04, 4.1553e-05,  ..., 5.6312e-04,
          3.6132e-04, 3.1580e-03],
         [9.4217e-01, 2.4052e-04, 4.1553e-05,  ..., 5.6312e-04,
          3.6132e-04, 9.9053e-01],
         [2.6240e-02, 9.9928e-01, 9.9988e-01,  ..., 9.9831e-01,
          9.9892e-01, 3.1580e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 721:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9969e-01, 4.3661e-03, 2.1388e-04,  ..., 3.8384e-04,
          2.0695e-04, 9.9785e-01],
         [1.0261e-04, 4.3661e-03, 2.1388e-04,  ..., 3.8384e-04,
          2.0695e-04, 7.1797e-04],
         [1.0261e-04, 4.3661e-03, 2.1388e-04,  ..., 9.9885e-01,
          9.9938e-01, 7.1797e-04],
         [1.0261e-04, 9.8690e-01, 9.9936e-01,  ..., 3.8384e-04,
          2.0695e-04, 7.1797e-04]],
        [[9.9831e-01, 8.3071e-04, 1.3762e-03,  ..., 3.8115e-04,
          5.3169e-01, 3.5242e-04],
         [5.6416e-04, 8.3071e-04, 1.3762e-03,  ..., 3.8115e-04,
          1.3336e-01, 3.5242e-04],
         [5.6416e-04, 8.3071e-04, 1.3762e-03,  ..., 9.9886e-01,
          2.2050e-01, 9.9894e-01],
         [5.6416e-04, 9.9751e-01, 9.9587e-01,  ..., 3.8115e-04,
          1.1445e-01, 3.5242e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1422e-04, 8.6385e-05, 4.0693e-05,  ..., 4.9206e-03,
          2.3213e-05, 7.5100e-04],
         [3.1422e-04, 8.6385e-05, 4.0693e-05,  ..., 2.9709e-03,
          2.3213e-05, 7.5100e-04],
         [9.9906e-01, 8.6385e-05, 4.0693e-05,  ..., 9.8914e-01,
          2.3213e-05, 9.9775e-01],
         [3.1422e-04, 9.9974e-01, 9.9988e-01,  ..., 2.9709e-03,
          9.9993e-01, 7.5100e-04]],
        [[4.0595e-03, 2.2513e-04, 1.6324e-04,  ..., 2.3244e-04,
          9.7660e-05, 4.5441e-03],
         [4.0595e-03, 2.2513e-04, 1.6324e-04,  ..., 2.3244e-04,
          9.7660e-05, 4.3957e-03],
         [9.8686e-01, 2.2513e-04, 1.6324e-04,  ..., 2.3244e-04,
          9.7660e-05, 9.8666e-01],
         [5.0194e-03, 9.9932e-01, 9.9951e-01,  ..., 9.9930e-01,
          9.9971e-01, 4.3957e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 722:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9964e-01, 1.9696e-04, 5.5607e-04,  ..., 4.1807e-06,
          4.6859e-04, 9.9893e-01],
         [1.1879e-04, 1.9696e-04, 5.5607e-04,  ..., 4.1807e-06,
          4.6859e-04, 3.5518e-04],
         [1.1879e-04, 1.9696e-04, 5.5607e-04,  ..., 9.9999e-01,
          9.9859e-01, 3.5518e-04],
         [1.1879e-04, 9.9941e-01, 9.9833e-01,  ..., 4.1807e-06,
          4.6859e-04, 3.5518e-04]],
        [[9.9809e-01, 5.7705e-04, 1.9329e-03,  ..., 2.8781e-04,
          3.9417e-01, 3.0497e-04],
         [6.3732e-04, 5.7705e-04, 1.9329e-03,  ..., 2.8781e-04,
          2.8748e-01, 3.0497e-04],
         [6.3732e-04, 5.7705e-04, 1.9329e-03,  ..., 9.9914e-01,
          1.6914e-01, 9.9909e-01],
         [6.3732e-04, 9.9827e-01, 9.9420e-01,  ..., 2.8781e-04,
          1.4921e-01, 3.0497e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:10,494 [Process: 0] Synchronize training processes
2024-08-18 15:26:10,494 [Process: 0] Evaluating...
2024-08-18 15:26:10,496 [Process: 0] EPOCH 723:
2024-08-18 15:26:10,498 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:11,625 [Process: 0] Synchronize training processes
2024-08-18 15:26:11,625 [Process: 0] Evaluating...
2024-08-18 15:26:11,627 [Process: 0] EPOCH 724:
2024-08-18 15:26:11,629 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0973e-03, 8.4839e-05, 5.2921e-05,  ..., 5.5874e-04,
          4.9081e-05, 7.5200e-04],
         [3.5901e-03, 8.4839e-05, 5.2921e-05,  ..., 5.5874e-04,
          4.9081e-05, 7.5200e-04],
         [9.8872e-01, 8.4839e-05, 5.2921e-05,  ..., 9.9832e-01,
          4.9081e-05, 9.9774e-01],
         [3.5901e-03, 9.9975e-01, 9.9984e-01,  ..., 5.5874e-04,
          9.9985e-01, 7.5200e-04]],
        [[5.7784e-03, 2.6781e-04, 2.2884e-04,  ..., 7.4878e-06,
          1.2287e-04, 1.4739e-03],
         [5.7784e-03, 2.6781e-04, 2.2884e-04,  ..., 7.4878e-06,
          1.2287e-04, 1.4739e-03],
         [9.8123e-01, 2.6781e-04, 2.2884e-04,  ..., 7.4878e-06,
          1.2287e-04, 9.9558e-01],
         [7.2121e-03, 9.9920e-01, 9.9931e-01,  ..., 9.9998e-01,
          9.9963e-01, 1.4739e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 723:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9973e-01, 1.3657e-03, 4.5896e-03,  ..., 1.0839e-04,
          1.2209e-04, 9.9969e-01],
         [8.8828e-05, 1.3657e-03, 3.8103e-03,  ..., 1.0839e-04,
          1.2209e-04, 1.0313e-04],
         [8.8828e-05, 1.3657e-03, 3.8103e-03,  ..., 9.9967e-01,
          9.9963e-01, 1.0313e-04],
         [8.8828e-05, 9.9590e-01, 9.8779e-01,  ..., 1.0839e-04,
          1.2209e-04, 1.0313e-04]],
        [[9.9917e-01, 3.8220e-04, 3.6528e-04,  ..., 1.4961e-04,
          2.8412e-01, 2.4007e-04],
         [2.9819e-04, 3.8220e-04, 3.6528e-04,  ..., 1.4961e-04,
          2.6775e-01, 2.4007e-04],
         [2.6540e-04, 3.8220e-04, 3.6528e-04,  ..., 9.9955e-01,
          1.8857e-01, 9.9928e-01],
         [2.6540e-04, 9.9885e-01, 9.9890e-01,  ..., 1.4961e-04,
          2.5955e-01, 2.4007e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5608e-04, 2.8707e-05, 3.7236e-04,  ..., 3.9844e-03,
          3.3960e-05, 5.7870e-04],
         [3.5608e-04, 2.8707e-05, 3.7236e-04,  ..., 4.0384e-03,
          3.3960e-05, 5.7870e-04],
         [9.9893e-01, 2.8707e-05, 3.7236e-04,  ..., 9.8755e-01,
          3.3960e-05, 9.9826e-01],
         [3.5608e-04, 9.9991e-01, 9.9888e-01,  ..., 4.4259e-03,
          9.9990e-01, 5.7870e-04]],
        [[2.6524e-03, 1.6510e-04, 4.4960e-05,  ..., 2.8900e-05,
          1.3063e-03, 3.4891e-04],
         [2.6524e-03, 1.6510e-04, 4.4960e-05,  ..., 2.8900e-05,
          1.3063e-03, 3.4891e-04],
         [9.9204e-01, 1.6510e-04, 4.4960e-05,  ..., 2.8900e-05,
          1.3063e-03, 9.9895e-01],
         [2.6524e-03, 9.9950e-01, 9.9987e-01,  ..., 9.9991e-01,
          9.9608e-01, 3.4891e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 724:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:26:12,749 [Process: 0] Synchronize training processes
2024-08-18 15:26:12,749 [Process: 0] Evaluating...
2024-08-18 15:26:12,751 [Process: 0] EPOCH 725:
2024-08-18 15:26:12,752 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9981e-01, 1.1323e-03, 6.1463e-03,  ..., 3.0381e-05,
          3.0536e-04, 9.9937e-01],
         [6.4990e-05, 1.1323e-03, 5.0217e-03,  ..., 3.0381e-05,
          3.0536e-04, 2.1007e-04],
         [6.4990e-05, 1.1323e-03, 5.0217e-03,  ..., 9.9991e-01,
          9.9908e-01, 2.1007e-04],
         [6.4990e-05, 9.9660e-01, 9.8381e-01,  ..., 3.0381e-05,
          3.0536e-04, 2.1007e-04]],
        [[9.9944e-01, 1.2311e-03, 2.0056e-03,  ..., 3.2658e-04,
          3.2128e-01, 1.1038e-04],
         [1.8755e-04, 1.2311e-03, 2.0056e-03,  ..., 3.2658e-04,
          2.1086e-01, 1.1038e-04],
         [1.8755e-04, 1.2311e-03, 2.3340e-03,  ..., 9.9902e-01,
          2.2312e-01, 9.9967e-01],
         [1.8755e-04, 9.9631e-01, 9.9365e-01,  ..., 3.2658e-04,
          2.4474e-01, 1.1038e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5524e-03, 4.3740e-05, 1.2381e-04,  ..., 4.6337e-04,
          1.3179e-04, 8.4235e-04],
         [1.5524e-03, 4.3740e-05, 1.2381e-04,  ..., 4.6337e-04,
          1.3179e-04, 8.4235e-04],
         [9.9534e-01, 4.3740e-05, 1.2381e-04,  ..., 9.9861e-01,
          1.3179e-04, 9.9747e-01],
         [1.5524e-03, 9.9987e-01, 9.9963e-01,  ..., 4.6337e-04,
          9.9960e-01, 8.4235e-04]],
        [[3.3665e-04, 1.0356e-04, 1.1886e-04,  ..., 1.9961e-04,
          2.0089e-04, 2.7462e-03],
         [3.3665e-04, 1.0356e-04, 1.1886e-04,  ..., 1.9961e-04,
          2.0089e-04, 2.7462e-03],
         [9.9899e-01, 1.0356e-04, 1.1886e-04,  ..., 1.9961e-04,
          2.0089e-04, 9.9176e-01],
         [3.3665e-04, 9.9969e-01, 9.9964e-01,  ..., 9.9940e-01,
          9.9940e-01, 2.7462e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 725:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9744e-01, 1.4545e-03, 1.5806e-03,  ..., 1.0807e-05,
          1.3002e-04, 9.9831e-01],
         [7.0270e-04, 1.4545e-03, 1.5621e-03,  ..., 1.0807e-05,
          1.3002e-04, 5.6452e-04],
         [7.0270e-04, 1.4545e-03, 1.5621e-03,  ..., 9.9997e-01,
          9.9961e-01, 5.6452e-04],
         [1.1566e-03, 9.9564e-01, 9.9530e-01,  ..., 1.0807e-05,
          1.3002e-04, 5.6452e-04]],
        [[9.9967e-01, 2.0988e-03, 1.2714e-03,  ..., 3.9951e-04,
          3.3834e-01, 2.6746e-04],
         [1.0986e-04, 2.0988e-03, 1.2714e-03,  ..., 3.9951e-04,
          2.2711e-01, 2.6746e-04],
         [1.0986e-04, 2.0988e-03, 1.2714e-03,  ..., 9.9880e-01,
          2.2685e-01, 9.9920e-01],
         [1.0986e-04, 9.9370e-01, 9.9619e-01,  ..., 3.9951e-04,
          2.0770e-01, 2.6746e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.6175e-04, 8.9611e-06, 5.2844e-04,  ..., 2.4336e-03,
          4.2544e-05, 7.0046e-04],
         [7.6175e-04, 8.9611e-06, 5.2844e-04,  ..., 2.3003e-03,
          4.2544e-05, 7.0046e-04],
         [9.9771e-01, 8.9611e-06, 5.2844e-04,  ..., 9.9297e-01,
          4.2544e-05, 9.9790e-01],
         [7.6175e-04, 9.9997e-01, 9.9841e-01,  ..., 2.3003e-03,
          9.9987e-01, 7.0046e-04]],
        [[2.6832e-03, 3.9523e-05, 9.0370e-05,  ..., 1.3432e-05,
          6.3782e-05, 1.0008e-03],
         [2.6832e-03, 3.9523e-05, 9.0370e-05,  ..., 1.3432e-05,
          6.3782e-05, 1.0008e-03],
         [9.9195e-01, 3.9523e-05, 9.0370e-05,  ..., 1.3432e-05,
          6.3782e-05, 9.9700e-01],
         [2.6832e-03, 9.9988e-01, 9.9973e-01,  ..., 9.9996e-01,
          9.9981e-01, 1.0008e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 726:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:13,879 [Process: 0] Synchronize training processes
2024-08-18 15:26:13,879 [Process: 0] Evaluating...
2024-08-18 15:26:13,881 [Process: 0] EPOCH 726:
2024-08-18 15:26:13,882 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:15,013 [Process: 0] Synchronize training processes
2024-08-18 15:26:15,013 [Process: 0] Evaluating...
2024-08-18 15:26:15,015 [Process: 0] EPOCH 727:
2024-08-18 15:26:15,017 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9917e-01, 3.1945e-03, 7.7441e-04,  ..., 6.2975e-05,
          3.8053e-04, 9.9906e-01],
         [2.7566e-04, 3.1945e-03, 7.7441e-04,  ..., 6.2975e-05,
          3.8053e-04, 3.1275e-04],
         [2.7566e-04, 3.2337e-03, 7.7441e-04,  ..., 9.9981e-01,
          9.9886e-01, 3.1275e-04],
         [2.7566e-04, 9.9038e-01, 9.9768e-01,  ..., 6.2975e-05,
          3.8053e-04, 3.1275e-04]],
        [[9.9947e-01, 1.5385e-03, 3.0201e-03,  ..., 2.9428e-04,
          3.0643e-01, 7.6818e-04],
         [1.7568e-04, 1.5385e-03, 3.6912e-03,  ..., 2.9428e-04,
          2.5643e-01, 7.6818e-04],
         [1.8183e-04, 1.5385e-03, 3.0201e-03,  ..., 9.9912e-01,
          2.3252e-01, 9.9770e-01],
         [1.7568e-04, 9.9538e-01, 9.9027e-01,  ..., 2.9428e-04,
          2.0463e-01, 7.6818e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.1255e-04, 1.9526e-05, 2.6991e-04,  ..., 8.2023e-04,
          6.1075e-06, 1.5638e-03],
         [8.1255e-04, 1.9526e-05, 2.6991e-04,  ..., 8.2023e-04,
          6.1075e-06, 1.5638e-03],
         [9.9756e-01, 1.9526e-05, 2.6991e-04,  ..., 9.9754e-01,
          6.1075e-06, 9.9531e-01],
         [8.1255e-04, 9.9994e-01, 9.9919e-01,  ..., 8.2023e-04,
          9.9998e-01, 1.5638e-03]],
        [[9.0890e-04, 9.3223e-06, 1.3986e-04,  ..., 2.8772e-05,
          2.2545e-04, 1.6162e-03],
         [9.0890e-04, 9.3223e-06, 1.3986e-04,  ..., 2.8772e-05,
          2.2545e-04, 1.6162e-03],
         [9.9727e-01, 9.3223e-06, 1.3986e-04,  ..., 2.8772e-05,
          2.2545e-04, 9.9515e-01],
         [9.0890e-04, 9.9997e-01, 9.9958e-01,  ..., 9.9991e-01,
          9.9932e-01, 1.6162e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 727:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 1.0396e-03, 6.8285e-03,  ..., 4.3239e-05,
          4.9706e-04, 9.9825e-01],
         [6.0468e-05, 1.0396e-03, 9.0121e-03,  ..., 4.3239e-05,
          4.9706e-04, 5.8171e-04],
         [6.0468e-05, 1.0396e-03, 7.7315e-03,  ..., 9.9987e-01,
          9.9851e-01, 5.8171e-04],
         [6.0468e-05, 9.9688e-01, 9.7643e-01,  ..., 4.3239e-05,
          4.9706e-04, 5.8171e-04]],
        [[9.9255e-01, 1.5975e-03, 8.0020e-04,  ..., 1.8633e-04,
          2.5312e-01, 3.3712e-05],
         [3.1271e-03, 1.5975e-03, 8.0020e-04,  ..., 1.8633e-04,
          2.2436e-01, 3.3712e-05],
         [2.1621e-03, 1.5975e-03, 8.0020e-04,  ..., 9.9944e-01,
          2.3858e-01, 9.9990e-01],
         [2.1621e-03, 9.9521e-01, 9.9760e-01,  ..., 1.8633e-04,
          2.8394e-01, 3.3712e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9745e-04, 9.7068e-05, 1.6403e-04,  ..., 6.1819e-04,
          1.1881e-04, 1.9984e-03],
         [6.9745e-04, 9.7068e-05, 1.6403e-04,  ..., 6.1819e-04,
          1.1881e-04, 1.9984e-03],
         [9.9791e-01, 9.7068e-05, 1.6403e-04,  ..., 9.9815e-01,
          1.1881e-04, 9.9400e-01],
         [6.9745e-04, 9.9971e-01, 9.9951e-01,  ..., 6.1819e-04,
          9.9964e-01, 1.9984e-03]],
        [[1.1999e-03, 2.9502e-05, 2.5890e-05,  ..., 3.8151e-04,
          9.9556e-06, 8.1341e-03],
         [1.1999e-03, 2.9502e-05, 2.5890e-05,  ..., 3.8151e-04,
          9.9556e-06, 6.7485e-03],
         [9.9640e-01, 2.9502e-05, 2.5890e-05,  ..., 3.8151e-04,
          9.9556e-06, 9.7826e-01],
         [1.1999e-03, 9.9991e-01, 9.9992e-01,  ..., 9.9886e-01,
          9.9997e-01, 6.8612e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:16,142 [Process: 0] Synchronize training processes
2024-08-18 15:26:16,143 [Process: 0] Evaluating...
2024-08-18 15:26:16,144 [Process: 0] EPOCH 728:
2024-08-18 15:26:16,146 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:17,291 [Process: 0] Synchronize training processes
2024-08-18 15:26:17,291 [Process: 0] Evaluating...
2024-08-18 15:26:17,293 [Process: 0] EPOCH 729:
2024-08-18 15:26:17,295 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 728:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9994e-01, 1.6238e-03, 3.3019e-03,  ..., 1.3701e-05,
          1.0810e-03, 9.9653e-01],
         [2.0741e-05, 1.6238e-03, 3.2867e-03,  ..., 1.3701e-05,
          1.0810e-03, 1.1119e-03],
         [2.0741e-05, 1.6238e-03, 3.6194e-03,  ..., 9.9996e-01,
          9.9676e-01, 1.2490e-03],
         [2.0741e-05, 9.9513e-01, 9.8979e-01,  ..., 1.3701e-05,
          1.0810e-03, 1.1119e-03]],
        [[9.9987e-01, 3.3659e-04, 3.7819e-04,  ..., 4.7102e-05,
          2.3926e-01, 1.0320e-04],
         [4.2048e-05, 3.3659e-04, 3.7819e-04,  ..., 4.7102e-05,
          3.4050e-01, 1.0320e-04],
         [4.2048e-05, 3.3659e-04, 3.7819e-04,  ..., 9.9986e-01,
          1.7625e-01, 9.9969e-01],
         [4.2048e-05, 9.9899e-01, 9.9887e-01,  ..., 4.7102e-05,
          2.4400e-01, 1.0320e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5862e-03, 3.8516e-06, 6.7133e-05,  ..., 5.7183e-04,
          1.4106e-05, 1.2851e-02],
         [1.5862e-03, 3.8516e-06, 6.7133e-05,  ..., 5.7183e-04,
          1.4106e-05, 9.0924e-03],
         [9.9524e-01, 3.8516e-06, 6.7133e-05,  ..., 9.9828e-01,
          1.4106e-05, 9.6409e-01],
         [1.5862e-03, 9.9999e-01, 9.9980e-01,  ..., 5.7183e-04,
          9.9996e-01, 1.3962e-02]],
        [[9.3477e-04, 1.0403e-04, 1.7001e-05,  ..., 8.4119e-06,
          3.8788e-04, 5.3053e-04],
         [9.3477e-04, 1.0403e-04, 1.7001e-05,  ..., 8.4119e-06,
          3.8788e-04, 5.3053e-04],
         [9.9720e-01, 1.0403e-04, 1.7001e-05,  ..., 8.4119e-06,
          3.8788e-04, 9.9841e-01],
         [9.3477e-04, 9.9969e-01, 9.9995e-01,  ..., 9.9997e-01,
          9.9884e-01, 5.3053e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 729:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9947e-01, 4.8098e-04, 1.7330e-03,  ..., 2.1267e-04,
          4.7830e-05, 9.9988e-01],
         [1.7628e-04, 4.8098e-04, 1.7330e-03,  ..., 2.1267e-04,
          4.7830e-05, 3.9223e-05],
         [1.7628e-04, 4.8098e-04, 1.7330e-03,  ..., 9.9936e-01,
          9.9986e-01, 3.9223e-05],
         [1.7628e-04, 9.9856e-01, 9.9480e-01,  ..., 2.1267e-04,
          4.7830e-05, 3.9223e-05]],
        [[9.9567e-01, 7.2811e-04, 9.8713e-04,  ..., 6.1244e-04,
          2.2287e-01, 8.9516e-04],
         [1.4419e-03, 7.2811e-04, 9.8713e-04,  ..., 6.1244e-04,
          2.3992e-01, 8.9516e-04],
         [1.4419e-03, 7.2811e-04, 9.8713e-04,  ..., 9.9816e-01,
          2.2292e-01, 9.9731e-01],
         [1.4419e-03, 9.9782e-01, 9.9704e-01,  ..., 6.1244e-04,
          3.1430e-01, 8.9516e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:18,428 [Process: 0] Synchronize training processes
2024-08-18 15:26:18,428 [Process: 0] Evaluating...
2024-08-18 15:26:18,430 [Process: 0] EPOCH 730:
2024-08-18 15:26:18,432 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:19,563 [Process: 0] Synchronize training processes
2024-08-18 15:26:19,563 [Process: 0] Evaluating...
2024-08-18 15:26:19,565 [Process: 0] EPOCH 731:
2024-08-18 15:26:19,567 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7566e-04, 4.0281e-06, 7.0739e-04,  ..., 1.8531e-03,
          2.8872e-05, 3.1045e-04],
         [3.7566e-04, 4.0281e-06, 7.0739e-04,  ..., 1.8531e-03,
          2.8872e-05, 3.1045e-04],
         [9.9887e-01, 4.0281e-06, 7.0739e-04,  ..., 9.9444e-01,
          2.8872e-05, 9.9907e-01],
         [3.7566e-04, 9.9999e-01, 9.9788e-01,  ..., 1.8531e-03,
          9.9991e-01, 3.1045e-04]],
        [[2.2538e-04, 8.3973e-05, 2.2818e-05,  ..., 2.4164e-04,
          1.7993e-05, 3.1130e-04],
         [2.2538e-04, 8.3973e-05, 2.2818e-05,  ..., 2.4164e-04,
          1.7993e-05, 3.1130e-04],
         [9.9932e-01, 8.3973e-05, 2.2818e-05,  ..., 2.4164e-04,
          1.7993e-05, 9.9907e-01],
         [2.2538e-04, 9.9975e-01, 9.9993e-01,  ..., 9.9928e-01,
          9.9995e-01, 3.1130e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 730:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7915e-01, 9.4012e-04, 6.0841e-03,  ..., 2.0932e-04,
          8.8919e-04, 9.9867e-01],
         [4.2477e-03, 9.4012e-04, 5.4197e-03,  ..., 2.0932e-04,
          8.8919e-04, 4.4456e-04],
         [4.2477e-03, 9.4012e-04, 7.1751e-03,  ..., 9.9937e-01,
          9.9733e-01, 4.4456e-04],
         [1.2355e-02, 9.9718e-01, 9.8132e-01,  ..., 2.0932e-04,
          8.8919e-04, 4.4456e-04]],
        [[9.9099e-01, 6.9376e-04, 1.4693e-03,  ..., 6.9341e-04,
          2.1635e-01, 3.6513e-04],
         [2.3065e-03, 6.9376e-04, 1.4693e-03,  ..., 6.9341e-04,
          3.1198e-01, 3.6513e-04],
         [4.3950e-03, 6.9376e-04, 1.4693e-03,  ..., 9.9792e-01,
          2.3389e-01, 9.9890e-01],
         [2.3065e-03, 9.9792e-01, 9.9559e-01,  ..., 6.9341e-04,
          2.3778e-01, 3.6513e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3257e-03, 8.4124e-06, 3.4694e-03,  ..., 8.5830e-04,
          4.9222e-06, 1.6712e-03],
         [1.9011e-03, 8.4124e-06, 3.4694e-03,  ..., 8.5830e-04,
          4.9222e-06, 1.6712e-03],
         [9.9387e-01, 8.4124e-06, 3.4694e-03,  ..., 9.9743e-01,
          4.9222e-06, 9.9499e-01],
         [1.9011e-03, 9.9997e-01, 9.8959e-01,  ..., 8.5830e-04,
          9.9999e-01, 1.6712e-03]],
        [[1.6230e-03, 2.9838e-05, 1.1247e-05,  ..., 3.6815e-05,
          1.0481e-03, 4.8894e-04],
         [1.6230e-03, 2.9838e-05, 1.1247e-05,  ..., 3.6815e-05,
          1.0481e-03, 4.8894e-04],
         [9.9513e-01, 2.9838e-05, 1.1247e-05,  ..., 3.6815e-05,
          1.0481e-03, 9.9853e-01],
         [1.6230e-03, 9.9991e-01, 9.9997e-01,  ..., 9.9989e-01,
          9.9686e-01, 4.8894e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 731:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9925e-01, 2.1845e-03, 8.6604e-04,  ..., 8.5084e-06,
          5.6786e-04, 9.7888e-01],
         [2.4871e-04, 2.1845e-03, 8.6604e-04,  ..., 8.5084e-06,
          5.6786e-04, 1.0278e-02],
         [2.4871e-04, 2.1845e-03, 8.6604e-04,  ..., 9.9997e-01,
          9.9830e-01, 6.1776e-03],
         [2.4871e-04, 9.9345e-01, 9.9740e-01,  ..., 8.5084e-06,
          5.6786e-04, 4.6689e-03]],
        [[9.9958e-01, 1.0101e-03, 7.6822e-04,  ..., 1.1725e-04,
          2.5013e-01, 3.6617e-04],
         [1.3940e-04, 1.0101e-03, 7.6822e-04,  ..., 1.1725e-04,
          3.8347e-01, 3.6617e-04],
         [1.3940e-04, 1.0101e-03, 7.6822e-04,  ..., 9.9965e-01,
          1.8385e-01, 9.9890e-01],
         [1.3940e-04, 9.9697e-01, 9.9770e-01,  ..., 1.1725e-04,
          1.8255e-01, 3.6617e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5308e-03, 3.5861e-05, 2.8577e-02,  ..., 1.3323e-03,
          7.8705e-05, 2.3750e-03],
         [5.4642e-03, 3.5861e-05, 2.2321e-02,  ..., 1.3323e-03,
          7.8705e-05, 2.3750e-03],
         [9.8334e-01, 3.5861e-05, 2.8601e-02,  ..., 9.9600e-01,
          7.8705e-05, 9.9287e-01],
         [5.6644e-03, 9.9989e-01, 9.2050e-01,  ..., 1.3323e-03,
          9.9976e-01, 2.3750e-03]],
        [[3.1944e-03, 1.6019e-05, 9.2041e-05,  ..., 7.4255e-05,
          1.3169e-04, 7.8825e-04],
         [3.1944e-03, 1.6019e-05, 9.2041e-05,  ..., 7.4255e-05,
          1.3169e-04, 7.8825e-04],
         [9.9019e-01, 1.6019e-05, 9.2041e-05,  ..., 7.4255e-05,
          1.3169e-04, 9.9764e-01],
         [3.4231e-03, 9.9995e-01, 9.9972e-01,  ..., 9.9978e-01,
          9.9961e-01, 7.8825e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 732:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9654e-01, 1.9815e-03, 1.8954e-03,  ..., 7.3819e-05,
          7.6112e-05, 9.9948e-01],
         [1.1525e-03, 1.9815e-03, 1.8232e-03,  ..., 7.3819e-05,
          7.6112e-05, 1.7452e-04],
         [1.1525e-03, 1.9815e-03, 1.8232e-03,  ..., 9.9978e-01,
          9.9977e-01, 1.7452e-04],
         [1.1525e-03, 9.9406e-01, 9.9446e-01,  ..., 7.3819e-05,
          7.6112e-05, 1.7452e-04]],
        [[9.9611e-01, 5.4941e-04, 2.7294e-03,  ..., 2.5505e-04,
          1.9944e-01, 5.8771e-05],
         [1.0325e-03, 5.4941e-04, 3.6508e-03,  ..., 2.5505e-04,
          3.5370e-01, 5.8771e-05],
         [1.8233e-03, 5.4941e-04, 2.7294e-03,  ..., 9.9923e-01,
          1.9332e-01, 9.9982e-01],
         [1.0325e-03, 9.9835e-01, 9.9089e-01,  ..., 2.5505e-04,
          2.5355e-01, 5.8771e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3454e-03, 2.7392e-05, 7.2327e-04,  ..., 6.7981e-04,
          3.3647e-05, 2.4034e-03],
         [2.4622e-03, 2.7392e-05, 7.7194e-04,  ..., 6.7981e-04,
          3.3647e-05, 2.4034e-03],
         [9.9285e-01, 2.7392e-05, 7.2327e-04,  ..., 9.9796e-01,
          3.3647e-05, 9.9279e-01],
         [2.3454e-03, 9.9992e-01, 9.9778e-01,  ..., 6.7981e-04,
          9.9990e-01, 2.4034e-03]],
        [[2.7903e-03, 2.2128e-05, 6.0637e-05,  ..., 7.8653e-05,
          3.2045e-05, 1.1172e-03],
         [2.7903e-03, 2.2128e-05, 6.0637e-05,  ..., 7.8653e-05,
          3.2045e-05, 1.1172e-03],
         [9.9055e-01, 2.2128e-05, 6.0637e-05,  ..., 7.8653e-05,
          3.2045e-05, 9.9665e-01],
         [3.8722e-03, 9.9993e-01, 9.9982e-01,  ..., 9.9976e-01,
          9.9990e-01, 1.1172e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 733:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9861e-01, 1.1501e-02, 9.6805e-03,  ..., 7.4313e-05,
          1.3587e-04, 9.9323e-01],
         [3.7737e-04, 9.0880e-03, 6.7078e-03,  ..., 7.4313e-05,
          1.3587e-04, 2.2421e-03],
         [6.3468e-04, 8.4064e-03, 6.7078e-03,  ..., 9.9978e-01,
          9.9959e-01, 2.2872e-03],
         [3.7737e-04, 9.7101e-01, 9.7690e-01,  ..., 7.4313e-05,
          1.3587e-04, 2.2421e-03]],
        [[9.9985e-01, 7.8415e-03, 1.7998e-03,  ..., 9.2557e-05,
          1.5333e-01, 5.8754e-05],
         [4.9439e-05, 7.5394e-03, 1.7998e-03,  ..., 9.2557e-05,
          3.6887e-01, 5.8754e-05],
         [4.9439e-05, 6.1704e-03, 1.7998e-03,  ..., 9.9972e-01,
          1.6107e-01, 9.9982e-01],
         [4.9439e-05, 9.7845e-01, 9.9460e-01,  ..., 9.2557e-05,
          3.1673e-01, 5.8754e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.6648e-04, 3.0778e-04, 7.2625e-05,  ..., 4.1428e-03,
          8.9470e-06, 1.3274e-03],
         [7.6648e-04, 3.0778e-04, 7.2625e-05,  ..., 4.1428e-03,
          8.9470e-06, 1.3274e-03],
         [9.9770e-01, 3.0778e-04, 7.2625e-05,  ..., 9.8539e-01,
          8.9470e-06, 9.9602e-01],
         [7.6648e-04, 9.9908e-01, 9.9978e-01,  ..., 6.3206e-03,
          9.9997e-01, 1.3274e-03]],
        [[7.2757e-03, 3.6483e-05, 8.9834e-05,  ..., 5.2963e-05,
          2.5442e-04, 3.9972e-03],
         [9.1016e-03, 3.6483e-05, 8.9834e-05,  ..., 5.2963e-05,
          2.5442e-04, 3.1891e-03],
         [9.7405e-01, 3.6483e-05, 8.9834e-05,  ..., 5.2963e-05,
          2.5442e-04, 9.8962e-01],
         [9.5731e-03, 9.9989e-01, 9.9973e-01,  ..., 9.9984e-01,
          9.9924e-01, 3.1891e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 734:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9268e-01, 1.5320e-03, 3.3942e-03,  ..., 7.5325e-05,
          2.0319e-05, 9.9924e-01],
         [2.1522e-03, 1.5320e-03, 2.5368e-03,  ..., 7.5325e-05,
          2.0319e-05, 2.5266e-04],
         [2.7251e-03, 1.5320e-03, 2.5368e-03,  ..., 9.9977e-01,
          9.9994e-01, 2.5266e-04],
         [2.4392e-03, 9.9540e-01, 9.9153e-01,  ..., 7.5325e-05,
          2.0319e-05, 2.5266e-04]],
        [[9.9979e-01, 6.2063e-04, 3.4147e-03,  ..., 1.1359e-03,
          1.9952e-01, 2.1361e-04],
         [7.1115e-05, 6.2063e-04, 5.3512e-03,  ..., 1.1359e-03,
          4.1230e-01, 2.1361e-04],
         [7.1115e-05, 6.2063e-04, 3.4147e-03,  ..., 9.9659e-01,
          1.9415e-01, 9.9936e-01],
         [7.1115e-05, 9.9814e-01, 9.8782e-01,  ..., 1.1359e-03,
          1.9404e-01, 2.1361e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.8179e-03, 2.0872e-05, 6.5794e-06,  ..., 5.8628e-04,
          5.6368e-05, 7.3543e-04],
         [1.0122e-02, 2.0872e-05, 6.5794e-06,  ..., 5.8628e-04,
          5.6368e-05, 7.3543e-04],
         [9.7187e-01, 2.0872e-05, 6.5794e-06,  ..., 9.9824e-01,
          5.6368e-05, 9.9779e-01],
         [1.0194e-02, 9.9994e-01, 9.9998e-01,  ..., 5.8628e-04,
          9.9983e-01, 7.3543e-04]],
        [[6.0396e-03, 2.7336e-05, 7.4220e-05,  ..., 6.1334e-06,
          1.6226e-05, 5.2279e-03],
         [6.0396e-03, 2.7336e-05, 7.4220e-05,  ..., 6.1334e-06,
          1.6226e-05, 5.2279e-03],
         [9.8094e-01, 2.7336e-05, 7.4220e-05,  ..., 6.1334e-06,
          1.6226e-05, 9.8274e-01],
         [6.9850e-03, 9.9992e-01, 9.9978e-01,  ..., 9.9998e-01,
          9.9995e-01, 6.8065e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 735:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9899e-01, 7.8255e-03, 1.3246e-03,  ..., 5.0508e-04,
          2.9796e-04, 9.9781e-01],
         [3.3665e-04, 1.0419e-02, 1.3246e-03,  ..., 5.0508e-04,
          2.9796e-04, 7.2853e-04],
         [3.3665e-04, 8.2450e-03, 1.3246e-03,  ..., 9.9848e-01,
          9.9911e-01, 7.2853e-04],
         [3.3665e-04, 9.7351e-01, 9.9603e-01,  ..., 5.0508e-04,
          2.9796e-04, 7.2853e-04]],
        [[9.9932e-01, 1.3232e-03, 7.3835e-03,  ..., 5.9414e-04,
          2.0202e-01, 1.3329e-03],
         [2.1697e-04, 1.1412e-03, 5.6321e-03,  ..., 5.9414e-04,
          3.7894e-01, 1.3329e-03],
         [2.4630e-04, 1.1412e-03, 5.9503e-03,  ..., 9.9822e-01,
          2.0266e-01, 9.9600e-01],
         [2.1697e-04, 9.9639e-01, 9.8103e-01,  ..., 5.9414e-04,
          2.1638e-01, 1.3329e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.9322e-04, 1.2673e-05, 7.0539e-06,  ..., 1.9244e-03,
          6.6146e-05, 2.7978e-03],
         [7.9322e-04, 1.2673e-05, 7.0539e-06,  ..., 1.9244e-03,
          6.6146e-05, 2.7978e-03],
         [9.9762e-01, 1.2673e-05, 7.0539e-06,  ..., 9.9423e-01,
          6.6146e-05, 9.9161e-01],
         [7.9322e-04, 9.9996e-01, 9.9998e-01,  ..., 1.9244e-03,
          9.9980e-01, 2.7978e-03]],
        [[9.9000e-04, 4.5638e-05, 1.2454e-05,  ..., 5.2284e-05,
          1.2991e-04, 1.3842e-03],
         [9.9000e-04, 4.5638e-05, 1.2454e-05,  ..., 5.2284e-05,
          1.2991e-04, 1.3842e-03],
         [9.9703e-01, 4.5638e-05, 1.2454e-05,  ..., 5.2284e-05,
          1.2991e-04, 9.9585e-01],
         [9.9000e-04, 9.9986e-01, 9.9996e-01,  ..., 9.9984e-01,
          9.9961e-01, 1.3842e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 736:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7692e-01, 3.6569e-03, 2.3108e-03,  ..., 4.6162e-06,
          4.4165e-05, 9.9593e-01],
         [6.0020e-03, 4.3879e-03, 2.2540e-03,  ..., 4.6162e-06,
          4.4165e-05, 1.0895e-03],
         [6.0020e-03, 3.6569e-03, 2.2540e-03,  ..., 9.9999e-01,
          9.9987e-01, 1.8898e-03],
         [1.1077e-02, 9.8830e-01, 9.9318e-01,  ..., 4.6162e-06,
          4.4165e-05, 1.0895e-03]],
        [[9.9948e-01, 1.8959e-03, 1.2659e-03,  ..., 4.4121e-04,
          2.2225e-01, 2.5103e-04],
         [1.7232e-04, 1.8959e-03, 1.2659e-03,  ..., 4.4121e-04,
          4.5959e-01, 2.5103e-04],
         [1.7232e-04, 1.8959e-03, 1.2659e-03,  ..., 9.9868e-01,
          1.6770e-01, 9.9925e-01],
         [1.7232e-04, 9.9431e-01, 9.9620e-01,  ..., 4.4121e-04,
          1.5047e-01, 2.5103e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:20,696 [Process: 0] Synchronize training processes
2024-08-18 15:26:20,696 [Process: 0] Evaluating...
2024-08-18 15:26:20,700 [Process: 0] EPOCH 732:
2024-08-18 15:26:20,702 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:21,829 [Process: 0] Synchronize training processes
2024-08-18 15:26:21,830 [Process: 0] Evaluating...
2024-08-18 15:26:21,831 [Process: 0] EPOCH 733:
2024-08-18 15:26:21,833 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:22,960 [Process: 0] Synchronize training processes
2024-08-18 15:26:22,961 [Process: 0] Evaluating...
2024-08-18 15:26:22,963 [Process: 0] EPOCH 734:
2024-08-18 15:26:22,964 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:24,103 [Process: 0] Synchronize training processes
2024-08-18 15:26:24,104 [Process: 0] Evaluating...
2024-08-18 15:26:24,105 [Process: 0] EPOCH 735:
2024-08-18 15:26:24,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:25,231 [Process: 0] Synchronize training processes
2024-08-18 15:26:25,231 [Process: 0] Evaluating...
2024-08-18 15:26:25,233 [Process: 0] EPOCH 736:
2024-08-18 15:26:25,235 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:26,358 [Process: 0] Synchronize training processes
2024-08-18 15:26:26,359 [Process: 0] Evaluating...
2024-08-18 15:26:26,360 [Process: 0] EPOCH 737:
2024-08-18 15:26:26,362 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:27,496 [Process: 0] Synchronize training processes
2024-08-18 15:26:27,497 [Process: 0] Evaluating...
2024-08-18 15:26:27,498 [Process: 0] EPOCH 738:
2024-08-18 15:26:27,500 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2893e-03, 8.9352e-05, 2.4078e-06,  ..., 6.1893e-03,
          3.2241e-04, 6.5139e-04],
         [2.2893e-03, 8.9352e-05, 2.4078e-06,  ..., 6.7243e-03,
          3.2241e-04, 6.5139e-04],
         [9.9313e-01, 8.9352e-05, 2.4078e-06,  ..., 9.8067e-01,
          3.2241e-04, 9.9805e-01],
         [2.2893e-03, 9.9973e-01, 9.9999e-01,  ..., 6.4198e-03,
          9.9903e-01, 6.5139e-04]],
        [[1.4666e-03, 9.8053e-05, 1.2281e-05,  ..., 5.5640e-05,
          1.2070e-04, 1.4255e-03],
         [1.4666e-03, 9.8053e-05, 1.2281e-05,  ..., 5.5640e-05,
          1.2070e-04, 1.4255e-03],
         [9.9560e-01, 9.8053e-05, 1.2281e-05,  ..., 5.5640e-05,
          1.2070e-04, 9.9572e-01],
         [1.4666e-03, 9.9971e-01, 9.9996e-01,  ..., 9.9983e-01,
          9.9964e-01, 1.4255e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 737:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8683e-01, 4.6066e-03, 6.8088e-03,  ..., 1.8370e-04,
          3.9955e-05, 9.9943e-01],
         [2.8068e-03, 4.1397e-03, 7.9612e-03,  ..., 1.8370e-04,
          3.9955e-05, 1.9052e-04],
         [2.8068e-03, 4.1397e-03, 6.8088e-03,  ..., 9.9945e-01,
          9.9988e-01, 1.9052e-04],
         [7.5583e-03, 9.8711e-01, 9.7842e-01,  ..., 1.8370e-04,
          3.9955e-05, 1.9052e-04]],
        [[9.7377e-01, 6.8895e-04, 5.6612e-04,  ..., 1.7468e-04,
          2.1422e-01, 7.5935e-04],
         [6.2358e-03, 6.8895e-04, 5.6612e-04,  ..., 1.7468e-04,
          3.4544e-01, 7.5935e-04],
         [1.4138e-02, 6.8895e-04, 5.6612e-04,  ..., 9.9948e-01,
          2.0973e-01, 9.9772e-01],
         [5.8605e-03, 9.9793e-01, 9.9830e-01,  ..., 1.7468e-04,
          2.3061e-01, 7.5935e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1357e-03, 4.8952e-05, 2.0758e-08,  ..., 1.0248e-03,
          5.2212e-04, 7.2433e-03],
         [1.1357e-03, 4.8952e-05, 2.0758e-08,  ..., 1.0248e-03,
          5.0717e-04, 5.4939e-03],
         [9.9659e-01, 4.8952e-05, 2.0758e-08,  ..., 9.9693e-01,
          5.0717e-04, 9.8177e-01],
         [1.1357e-03, 9.9985e-01, 1.0000e+00,  ..., 1.0248e-03,
          9.9846e-01, 5.4939e-03]],
        [[3.6308e-03, 1.1490e-04, 2.4450e-05,  ..., 3.8984e-05,
          1.7144e-04, 7.2688e-03],
         [3.6308e-03, 1.1490e-04, 2.4450e-05,  ..., 3.8984e-05,
          1.7144e-04, 4.6775e-03],
         [9.8911e-01, 1.1490e-04, 2.4450e-05,  ..., 3.8984e-05,
          1.7144e-04, 9.8338e-01],
         [3.6308e-03, 9.9966e-01, 9.9993e-01,  ..., 9.9988e-01,
          9.9949e-01, 4.6775e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 738:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9799e-01, 8.3380e-04, 6.7377e-04,  ..., 6.6383e-05,
          1.4571e-04, 9.9867e-01],
         [6.0672e-04, 8.3380e-04, 6.7377e-04,  ..., 6.6383e-05,
          1.4571e-04, 4.1003e-04],
         [6.2039e-04, 8.3380e-04, 6.7377e-04,  ..., 9.9980e-01,
          9.9956e-01, 5.0888e-04],
         [7.7800e-04, 9.9750e-01, 9.9798e-01,  ..., 6.6383e-05,
          1.4571e-04, 4.1003e-04]],
        [[9.9156e-01, 1.0231e-03, 2.3733e-03,  ..., 6.1654e-05,
          3.0042e-01, 3.0123e-04],
         [2.6507e-03, 1.0231e-03, 2.3733e-03,  ..., 6.1654e-05,
          3.7075e-01, 3.0123e-04],
         [2.6507e-03, 1.0231e-03, 2.3733e-03,  ..., 9.9982e-01,
          1.9117e-01, 9.9910e-01],
         [3.1407e-03, 9.9693e-01, 9.9288e-01,  ..., 6.1654e-05,
          1.3766e-01, 3.0123e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:28,631 [Process: 0] Synchronize training processes
2024-08-18 15:26:28,631 [Process: 0] Evaluating...
2024-08-18 15:26:28,633 [Process: 0] EPOCH 739:
2024-08-18 15:26:28,635 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:29,760 [Process: 0] Synchronize training processes
2024-08-18 15:26:29,761 [Process: 0] Evaluating...
2024-08-18 15:26:29,762 [Process: 0] EPOCH 740:
2024-08-18 15:26:29,764 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8701e-04, 8.5603e-05, 3.5418e-07,  ..., 3.0399e-03,
          8.2798e-05, 1.0412e-03],
         [3.8701e-04, 8.5603e-05, 3.5418e-07,  ..., 3.0399e-03,
          8.2798e-05, 1.0412e-03],
         [9.9884e-01, 8.5603e-05, 3.5418e-07,  ..., 9.9088e-01,
          8.2798e-05, 9.9688e-01],
         [3.8701e-04, 9.9974e-01, 1.0000e+00,  ..., 3.0399e-03,
          9.9975e-01, 1.0412e-03]],
        [[1.2100e-03, 4.2227e-04, 4.8225e-02,  ..., 1.8905e-05,
          2.1906e-05, 4.2298e-03],
         [1.2100e-03, 4.2227e-04, 3.8303e-02,  ..., 1.8905e-05,
          2.1906e-05, 4.4238e-03],
         [9.9637e-01, 4.2227e-04, 4.1351e-01,  ..., 1.8905e-05,
          2.1906e-05, 9.8686e-01],
         [1.2100e-03, 9.9873e-01, 4.9997e-01,  ..., 9.9994e-01,
          9.9993e-01, 4.4875e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 739:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9481e-01, 1.0916e-03, 1.2238e-03,  ..., 8.0673e-05,
          8.4041e-05, 9.9914e-01],
         [1.5952e-03, 1.0916e-03, 1.2238e-03,  ..., 8.0673e-05,
          8.4041e-05, 2.8377e-04],
         [1.9988e-03, 1.0916e-03, 1.2238e-03,  ..., 9.9976e-01,
          9.9975e-01, 2.9167e-04],
         [1.5952e-03, 9.9673e-01, 9.9633e-01,  ..., 8.0673e-05,
          8.4041e-05, 2.8377e-04]],
        [[9.9675e-01, 7.7773e-04, 1.9850e-04,  ..., 1.5773e-04,
          6.1830e-01, 4.3574e-04],
         [1.0823e-03, 7.7773e-04, 1.9850e-04,  ..., 1.5773e-04,
          9.7167e-02, 4.3574e-04],
         [1.0823e-03, 7.7773e-04, 1.9850e-04,  ..., 9.9953e-01,
          2.0877e-01, 9.9869e-01],
         [1.0823e-03, 9.9767e-01, 9.9940e-01,  ..., 1.5773e-04,
          7.5767e-02, 4.3574e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4760e-03, 2.8124e-05, 6.1579e-07,  ..., 1.1118e-03,
          9.1831e-01, 9.5918e-04],
         [1.4760e-03, 2.8124e-05, 6.1579e-07,  ..., 1.1118e-03,
          1.0319e-02, 9.5918e-04],
         [9.9557e-01, 2.8124e-05, 6.1579e-07,  ..., 9.9666e-01,
          9.9440e-03, 9.9712e-01],
         [1.4760e-03, 9.9992e-01, 1.0000e+00,  ..., 1.1118e-03,
          6.1429e-02, 9.5918e-04]],
        [[6.8945e-03, 1.1562e-04, 2.8731e-04,  ..., 3.8622e-05,
          3.3657e-04, 4.7664e-04],
         [6.8945e-03, 1.1562e-04, 2.8731e-04,  ..., 3.8622e-05,
          3.3657e-04, 4.7664e-04],
         [9.7419e-01, 1.1562e-04, 2.8731e-04,  ..., 3.8622e-05,
          3.3657e-04, 9.9857e-01],
         [1.2024e-02, 9.9965e-01, 9.9914e-01,  ..., 9.9988e-01,
          9.9899e-01, 4.7664e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 740:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 15:26:30,892 [Process: 0] Synchronize training processes
2024-08-18 15:26:30,892 [Process: 0] Evaluating...
2024-08-18 15:26:30,894 [Process: 0] EPOCH 741:
2024-08-18 15:26:30,896 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.3695e-01, 7.2691e-04, 1.1567e-03,  ..., 1.9854e-02,
          1.4795e-04, 9.9738e-01],
         [1.1621e-02, 7.2691e-04, 1.1567e-03,  ..., 1.9854e-02,
          1.4795e-04, 8.7295e-04],
         [1.7734e-02, 7.2691e-04, 1.1567e-03,  ..., 2.3252e-01,
          9.9956e-01, 8.7295e-04],
         [3.3695e-02, 9.9782e-01, 9.9653e-01,  ..., 7.2778e-01,
          1.4795e-04, 8.7295e-04]],
        [[9.9897e-01, 1.3596e-03, 4.1999e-04,  ..., 9.3125e-05,
          3.0979e-01, 4.1481e-04],
         [3.4490e-04, 1.3596e-03, 4.1999e-04,  ..., 9.3125e-05,
          3.5769e-01, 4.1481e-04],
         [3.4490e-04, 1.3596e-03, 4.1999e-04,  ..., 9.9972e-01,
          2.2863e-01, 9.9876e-01],
         [3.4490e-04, 9.9592e-01, 9.9874e-01,  ..., 9.3125e-05,
          1.0389e-01, 4.1481e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4598e-03, 1.4815e-03, 1.3474e-07,  ..., 8.6575e-04,
          5.2638e-04, 1.8342e-04],
         [1.4598e-03, 1.4815e-03, 1.3474e-07,  ..., 8.6575e-04,
          5.2638e-04, 1.8342e-04],
         [9.9562e-01, 1.4815e-03, 1.3474e-07,  ..., 9.9740e-01,
          5.2638e-04, 9.9945e-01],
         [1.4598e-03, 9.9556e-01, 1.0000e+00,  ..., 8.6575e-04,
          9.9842e-01, 1.8342e-04]],
        [[7.6311e-04, 1.7404e-04, 9.1556e-05,  ..., 5.0083e-04,
          2.4550e-04, 1.9092e-03],
         [7.6311e-04, 1.7404e-04, 9.1556e-05,  ..., 5.0083e-04,
          2.4550e-04, 1.9092e-03],
         [7.6311e-04, 1.7404e-04, 9.1556e-05,  ..., 5.0083e-04,
          2.4550e-04, 9.9375e-01],
         [9.9771e-01, 9.9948e-01, 9.9973e-01,  ..., 9.9850e-01,
          9.9926e-01, 2.4277e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 741:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8326e-01, 1.1616e-03, 2.6415e-03,  ..., 1.1677e-02,
          5.6201e-06, 9.9936e-01],
         [3.0461e-03, 1.1616e-03, 2.6415e-03,  ..., 1.1677e-02,
          5.6201e-06, 2.1387e-04],
         [3.0461e-03, 1.1616e-03, 2.6415e-03,  ..., 6.0449e-02,
          9.9998e-01, 2.1387e-04],
         [1.0651e-02, 9.9652e-01, 9.9208e-01,  ..., 9.1620e-01,
          5.6201e-06, 2.1387e-04]],
        [[9.9837e-01, 1.2035e-03, 1.7200e-03,  ..., 4.3189e-05,
          3.0052e-01, 2.3307e-05],
         [5.3941e-04, 1.2035e-03, 1.6827e-03,  ..., 4.3189e-05,
          3.2691e-01, 2.3307e-05],
         [5.4645e-04, 1.2035e-03, 1.6827e-03,  ..., 9.9987e-01,
          2.2132e-01, 9.9993e-01],
         [5.3941e-04, 9.9639e-01, 9.9491e-01,  ..., 4.3189e-05,
          1.5126e-01, 2.3307e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7744e-04, 1.0747e-04, 2.4068e-06,  ..., 6.9155e-04,
          2.0744e-04, 1.7365e-04],
         [3.7744e-04, 1.0747e-04, 2.4068e-06,  ..., 6.9155e-04,
          2.0744e-04, 1.7365e-04],
         [9.9887e-01, 1.0747e-04, 2.4068e-06,  ..., 9.9793e-01,
          2.0744e-04, 9.9948e-01],
         [3.7744e-04, 9.9968e-01, 9.9999e-01,  ..., 6.9155e-04,
          9.9938e-01, 1.7365e-04]],
        [[1.2596e-02, 8.4876e-03, 2.0217e-02,  ..., 9.4459e-05,
          1.3495e-03, 9.3615e-03],
         [9.7168e-03, 6.4052e-03, 1.8995e-02,  ..., 9.4459e-05,
          1.3495e-03, 6.8704e-03],
         [1.2386e-02, 6.4052e-03, 3.2404e-02,  ..., 9.4459e-05,
          1.3495e-03, 7.7712e-03],
         [9.6530e-01, 9.7870e-01, 9.2838e-01,  ..., 9.9972e-01,
          9.9595e-01, 9.7600e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 742:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:32,027 [Process: 0] Synchronize training processes
2024-08-18 15:26:32,027 [Process: 0] Evaluating...
2024-08-18 15:26:32,031 [Process: 0] EPOCH 742:
2024-08-18 15:26:32,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:33,159 [Process: 0] Synchronize training processes
2024-08-18 15:26:33,159 [Process: 0] Evaluating...
2024-08-18 15:26:33,161 [Process: 0] EPOCH 743:
2024-08-18 15:26:33,163 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.2376e-01, 2.0527e-03, 1.4843e-03,  ..., 6.5203e-03,
          5.6656e-05, 9.9684e-01],
         [9.8563e-03, 2.0527e-03, 1.4142e-03,  ..., 6.5203e-03,
          5.6656e-05, 7.9829e-04],
         [9.8563e-03, 2.0527e-03, 1.4142e-03,  ..., 9.7455e-01,
          9.9983e-01, 1.5643e-03],
         [5.6523e-02, 9.9384e-01, 9.9569e-01,  ..., 1.2407e-02,
          5.6656e-05, 7.9829e-04]],
        [[9.9845e-01, 1.0146e-03, 8.9104e-03,  ..., 5.5121e-04,
          1.8719e-01, 2.0697e-05],
         [4.5190e-04, 1.0146e-03, 6.5022e-03,  ..., 9.3332e-04,
          5.7750e-01, 2.0697e-05],
         [6.4648e-04, 1.0146e-03, 5.7176e-03,  ..., 9.9796e-01,
          1.4253e-01, 9.9994e-01],
         [4.5190e-04, 9.9696e-01, 9.7887e-01,  ..., 5.5121e-04,
          9.2782e-02, 2.0697e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7829e-03, 4.4941e-02, 1.4275e-06,  ..., 1.6172e-04,
          1.5406e-05, 1.0121e-03],
         [1.7829e-03, 3.6781e-02, 1.4275e-06,  ..., 1.6172e-04,
          1.5406e-05, 1.0121e-03],
         [9.9465e-01, 8.1010e-01, 1.4275e-06,  ..., 9.9951e-01,
          1.5406e-05, 9.9696e-01],
         [1.7829e-03, 1.0818e-01, 1.0000e+00,  ..., 1.6172e-04,
          9.9995e-01, 1.0121e-03]],
        [[1.6774e-03, 3.0412e-02, 1.7150e-02,  ..., 1.7413e-03,
          5.3883e-02, 4.0799e-03],
         [1.6774e-03, 1.7562e-02, 1.7537e-02,  ..., 1.7413e-03,
          5.1533e-02, 4.0799e-03],
         [1.6774e-03, 2.2511e-02, 2.4357e-02,  ..., 1.7413e-03,
          2.2078e-01, 4.4857e-03],
         [9.9497e-01, 9.2951e-01, 9.4096e-01,  ..., 9.9478e-01,
          6.7381e-01, 9.8735e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 743:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9194e-01, 1.4182e-03, 1.2274e-03,  ..., 3.9758e-04,
          3.2335e-06, 9.9604e-01],
         [1.4992e-03, 1.4182e-03, 1.2274e-03,  ..., 3.9758e-04,
          3.2335e-06, 1.2355e-03],
         [1.4992e-03, 1.4962e-03, 1.3325e-03,  ..., 9.9881e-01,
          9.9999e-01, 1.4865e-03],
         [5.0594e-03, 9.9567e-01, 9.9621e-01,  ..., 3.9758e-04,
          3.2335e-06, 1.2355e-03]],
        [[9.9933e-01, 3.6765e-03, 4.0268e-04,  ..., 1.3167e-04,
          2.7386e-01, 1.6966e-03],
         [2.2466e-04, 3.6765e-03, 4.0268e-04,  ..., 1.3167e-04,
          4.2818e-01, 1.6966e-03],
         [2.2466e-04, 5.0883e-03, 4.0268e-04,  ..., 9.9961e-01,
          1.6728e-01, 9.9491e-01],
         [2.2466e-04, 9.8756e-01, 9.9879e-01,  ..., 1.3167e-04,
          1.3068e-01, 1.6966e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2539e-03, 9.9811e-01, 5.7944e-06,  ..., 1.0009e-03,
          2.5001e-05, 1.1070e-03],
         [1.2539e-03, 6.3126e-04, 5.7944e-06,  ..., 1.0009e-03,
          2.5001e-05, 1.1070e-03],
         [9.9624e-01, 6.3126e-04, 5.7944e-06,  ..., 9.9700e-01,
          2.5001e-05, 9.9668e-01],
         [1.2539e-03, 6.3126e-04, 9.9998e-01,  ..., 1.0009e-03,
          9.9993e-01, 1.1070e-03]],
        [[1.3703e-02, 1.2989e-02, 8.1977e-03,  ..., 6.1588e-02,
          4.0041e-03, 1.1320e-02],
         [2.0753e-02, 1.5590e-02, 1.1651e-02,  ..., 4.2488e-02,
          4.9042e-03, 1.1320e-02],
         [9.3412e-01, 9.3416e-01, 9.7041e-01,  ..., 7.5453e-01,
          9.8672e-01, 9.4570e-01],
         [3.1419e-02, 3.7265e-02, 9.7418e-03,  ..., 1.4139e-01,
          4.3748e-03, 3.1664e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:34,284 [Process: 0] Synchronize training processes
2024-08-18 15:26:34,284 [Process: 0] Evaluating...
2024-08-18 15:26:34,286 [Process: 0] EPOCH 744:
2024-08-18 15:26:34,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:35,415 [Process: 0] Synchronize training processes
2024-08-18 15:26:35,415 [Process: 0] Evaluating...
2024-08-18 15:26:35,417 [Process: 0] EPOCH 745:
2024-08-18 15:26:35,419 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 744:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8239e-01, 6.6036e-03, 4.4214e-04,  ..., 1.3254e-03,
          6.3478e-05, 9.9934e-01],
         [1.8669e-03, 3.5756e-03, 4.4214e-04,  ..., 1.3254e-03,
          6.3478e-05, 2.2112e-04],
         [1.8669e-03, 3.9389e-03, 4.4214e-04,  ..., 9.9602e-01,
          9.9981e-01, 2.2112e-04],
         [1.3880e-02, 9.8588e-01, 9.9867e-01,  ..., 1.3254e-03,
          6.3478e-05, 2.2112e-04]],
        [[9.9925e-01, 1.3661e-04, 1.0588e-03,  ..., 4.2559e-04,
          2.2057e-01, 8.3244e-04],
         [2.5121e-04, 1.3661e-04, 1.0588e-03,  ..., 4.2559e-04,
          5.5910e-01, 8.3244e-04],
         [2.5121e-04, 1.3661e-04, 1.0588e-03,  ..., 9.9872e-01,
          1.2318e-01, 9.9750e-01],
         [2.5121e-04, 9.9959e-01, 9.9682e-01,  ..., 4.2559e-04,
          9.7145e-02, 8.3244e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4080e-04, 9.9960e-01, 3.6220e-07,  ..., 1.5948e-03,
          8.5962e-05, 2.4112e-03],
         [4.4080e-04, 1.3435e-04, 3.6220e-07,  ..., 1.5948e-03,
          8.5962e-05, 2.4112e-03],
         [9.9868e-01, 1.3435e-04, 3.6220e-07,  ..., 9.9507e-01,
          8.5962e-05, 9.9256e-01],
         [4.4080e-04, 1.3435e-04, 1.0000e+00,  ..., 1.7428e-03,
          9.9974e-01, 2.6154e-03]],
        [[2.4442e-02, 4.3801e-02, 1.7236e-02,  ..., 1.6456e-02,
          7.8446e-03, 3.8303e-02],
         [3.6684e-02, 5.9834e-02, 1.5795e-02,  ..., 1.6456e-02,
          9.1890e-03, 5.8350e-02],
         [8.8304e-01, 7.3119e-01, 9.3650e-01,  ..., 6.2632e-02,
          9.6906e-01, 7.8803e-01],
         [5.5835e-02, 1.6518e-01, 3.0466e-02,  ..., 9.0446e-01,
          1.3906e-02, 1.1532e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 745:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9793e-01, 1.5602e-03, 1.1198e-03,  ..., 3.2230e-03,
          1.1999e-05, 9.8729e-01],
         [5.5222e-04, 1.5602e-03, 1.1198e-03,  ..., 3.2230e-03,
          1.1999e-05, 7.8804e-03],
         [5.5222e-04, 1.9715e-03, 1.5036e-03,  ..., 9.9033e-01,
          9.9996e-01, 2.4140e-03],
         [9.6213e-04, 9.9491e-01, 9.9626e-01,  ..., 3.2230e-03,
          1.1999e-05, 2.4140e-03]],
        [[9.9374e-01, 2.7890e-03, 7.4939e-03,  ..., 3.8408e-04,
          3.1042e-01, 1.2700e-05],
         [2.0876e-03, 2.7890e-03, 4.3283e-03,  ..., 3.8408e-04,
          4.4045e-01, 1.2700e-05],
         [2.0876e-03, 4.5002e-03, 7.0495e-03,  ..., 9.9885e-01,
          1.6844e-01, 9.9996e-01],
         [2.0876e-03, 9.8992e-01, 9.8113e-01,  ..., 3.8408e-04,
          8.0694e-02, 1.2700e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:36,546 [Process: 0] Synchronize training processes
2024-08-18 15:26:36,546 [Process: 0] Evaluating...
2024-08-18 15:26:36,548 [Process: 0] EPOCH 746:
2024-08-18 15:26:36,550 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:37,679 [Process: 0] Synchronize training processes
2024-08-18 15:26:37,679 [Process: 0] Evaluating...
2024-08-18 15:26:37,681 [Process: 0] EPOCH 747:
2024-08-18 15:26:37,683 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.6041e-04, 9.8745e-01, 1.7883e-06,  ..., 3.0966e-04,
          3.4357e-04, 1.6836e-03],
         [6.6041e-04, 5.1021e-03, 1.7883e-06,  ..., 3.0966e-04,
          3.4357e-04, 1.6836e-03],
         [9.9802e-01, 3.7228e-03, 1.7883e-06,  ..., 9.9907e-01,
          3.4357e-04, 9.9477e-01],
         [6.6041e-04, 3.7228e-03, 9.9999e-01,  ..., 3.0966e-04,
          9.9897e-01, 1.8617e-03]],
        [[7.0345e-02, 1.7422e-02, 6.3739e-02,  ..., 7.2887e-03,
          2.9961e-02, 4.0036e-02],
         [7.8501e-02, 1.9329e-02, 6.1201e-02,  ..., 5.7393e-03,
          3.5741e-02, 3.1844e-02],
         [4.5684e-01, 6.2619e-02, 2.7210e-01,  ..., 8.5054e-03,
          7.2580e-01, 8.1282e-02],
         [3.9431e-01, 9.0063e-01, 6.0296e-01,  ..., 9.7847e-01,
          2.0850e-01, 8.4684e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 746:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9674e-01, 1.2115e-03, 1.7634e-03,  ..., 1.2080e-03,
          1.6451e-04, 9.9937e-01],
         [9.5483e-04, 1.2115e-03, 1.7802e-03,  ..., 1.2080e-03,
          1.6451e-04, 2.0862e-04],
         [9.5483e-04, 1.8092e-03, 2.4912e-03,  ..., 9.9638e-01,
          9.9951e-01, 2.0862e-04],
         [1.3497e-03, 9.9577e-01, 9.9397e-01,  ..., 1.2080e-03,
          1.6451e-04, 2.0862e-04]],
        [[9.9977e-01, 1.1014e-03, 3.5051e-03,  ..., 6.2085e-05,
          2.1645e-01, 2.7672e-04],
         [7.6386e-05, 1.1014e-03, 3.5051e-03,  ..., 6.2085e-05,
          5.0882e-01, 2.7672e-04],
         [7.6386e-05, 1.5083e-03, 6.1737e-03,  ..., 9.9981e-01,
          1.6540e-01, 9.9917e-01],
         [7.6386e-05, 9.9629e-01, 9.8682e-01,  ..., 6.2085e-05,
          1.0932e-01, 2.7672e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3770e-03, 9.9945e-01, 1.2195e-07,  ..., 8.1384e-04,
          4.4114e-04, 3.3878e-03],
         [2.3770e-03, 1.8452e-04, 1.2195e-07,  ..., 8.1384e-04,
          4.4114e-04, 3.3878e-03],
         [9.9130e-01, 1.8452e-04, 1.2195e-07,  ..., 9.9756e-01,
          4.4114e-04, 9.8743e-01],
         [3.9501e-03, 1.8452e-04, 1.0000e+00,  ..., 8.1384e-04,
          9.9868e-01, 5.7960e-03]],
        [[9.1399e-03, 2.0112e-02, 5.3992e-02,  ..., 3.8764e-02,
          5.7194e-03, 1.1233e-02],
         [1.1523e-02, 2.3284e-02, 6.3566e-02,  ..., 5.8678e-02,
          5.7194e-03, 1.1339e-02],
         [9.5556e-01, 8.4880e-01, 5.6894e-01,  ..., 4.1758e-01,
          9.7781e-01, 9.5474e-01],
         [2.3777e-02, 1.0781e-01, 3.1350e-01,  ..., 4.8497e-01,
          1.0748e-02, 2.2688e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 747:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9978e-01, 1.6135e-03, 2.1036e-02,  ..., 1.5946e-03,
          3.8607e-05, 9.9364e-01],
         [7.3370e-05, 1.3725e-03, 1.0529e-02,  ..., 1.5946e-03,
          3.8607e-05, 2.1189e-03],
         [7.3370e-05, 2.6110e-03, 2.0153e-02,  ..., 9.9522e-01,
          9.9988e-01, 2.1189e-03],
         [7.3370e-05, 9.9440e-01, 9.4828e-01,  ..., 1.5946e-03,
          3.8607e-05, 2.1189e-03]],
        [[9.9935e-01, 3.5773e-03, 2.4586e-03,  ..., 4.7309e-05,
          2.9014e-01, 2.1340e-04],
         [2.1552e-04, 3.1340e-03, 2.4586e-03,  ..., 4.7309e-05,
          2.6685e-01, 2.1340e-04],
         [2.1552e-04, 7.3686e-03, 5.5309e-03,  ..., 9.9986e-01,
          2.4164e-01, 9.9936e-01],
         [2.1552e-04, 9.8592e-01, 9.8955e-01,  ..., 4.7309e-05,
          2.0137e-01, 2.1340e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:38,803 [Process: 0] Synchronize training processes
2024-08-18 15:26:38,803 [Process: 0] Evaluating...
2024-08-18 15:26:38,805 [Process: 0] EPOCH 748:
2024-08-18 15:26:38,807 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3647e-03, 9.9924e-01, 1.0377e-07,  ..., 1.1941e-03,
          1.5622e-04, 1.2161e-03],
         [1.3647e-03, 2.5296e-04, 1.0377e-07,  ..., 1.1941e-03,
          1.5622e-04, 1.2161e-03],
         [9.9587e-01, 2.5296e-04, 1.0377e-07,  ..., 9.9638e-01,
          1.5622e-04, 9.9617e-01],
         [1.3988e-03, 2.5296e-04, 1.0000e+00,  ..., 1.2269e-03,
          9.9953e-01, 1.3955e-03]],
        [[4.1460e-02, 2.8468e-02, 6.5273e-02,  ..., 3.7339e-02,
          3.9912e-02, 4.5390e-03],
         [4.5610e-02, 5.1483e-02, 7.4756e-02,  ..., 3.9243e-02,
          3.0699e-02, 4.2263e-03],
         [8.5654e-01, 7.9524e-01, 4.7320e-01,  ..., 8.4948e-01,
          8.7961e-01, 9.8562e-01],
         [5.6391e-02, 1.2481e-01, 3.8677e-01,  ..., 7.3940e-02,
          4.9777e-02, 5.6138e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 748:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9954e-01, 2.1216e-03, 2.2644e-03,  ..., 3.1067e-05,
          4.4947e-07, 9.9870e-01],
         [1.4725e-04, 2.1216e-03, 1.5611e-03,  ..., 3.1067e-05,
          4.4947e-07, 4.3416e-04],
         [1.4725e-04, 6.3815e-03, 3.0539e-03,  ..., 9.9991e-01,
          1.0000e+00, 4.3416e-04],
         [1.6429e-04, 9.8938e-01, 9.9312e-01,  ..., 3.1067e-05,
          4.4947e-07, 4.3416e-04]],
        [[9.9922e-01, 1.0845e-03, 2.0848e-02,  ..., 5.2779e-04,
          3.6544e-01, 5.9324e-05],
         [2.6159e-04, 9.8306e-04, 1.0238e-02,  ..., 5.2779e-04,
          3.0365e-01, 5.9324e-05],
         [2.6159e-04, 1.5570e-03, 2.5592e-02,  ..., 9.9842e-01,
          1.7109e-01, 9.9982e-01],
         [2.6159e-04, 9.9638e-01, 9.4332e-01,  ..., 5.2779e-04,
          1.5981e-01, 5.9324e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.4732e-04, 9.9911e-01, 5.2357e-09,  ..., 1.7396e-03,
          1.7996e-03, 1.2244e-03],
         [7.4732e-04, 2.9780e-04, 5.2357e-09,  ..., 1.7396e-03,
          1.7996e-03, 1.2244e-03],
         [9.9776e-01, 2.9780e-04, 5.2357e-09,  ..., 9.9436e-01,
          1.7996e-03, 9.9633e-01],
         [7.4732e-04, 2.9780e-04, 1.0000e+00,  ..., 2.1657e-03,
          9.9460e-01, 1.2244e-03]],
        [[3.0670e-02, 5.5354e-02, 7.2470e-02,  ..., 3.3701e-02,
          4.8985e-02, 1.0994e-02],
         [4.8157e-02, 1.2844e-01, 1.2490e-01,  ..., 5.2000e-02,
          4.9044e-02, 1.4303e-02],
         [8.6318e-01, 6.2003e-01, 2.0106e-01,  ..., 5.7795e-02,
          8.0171e-01, 9.6015e-01],
         [5.7994e-02, 1.9617e-01, 6.0157e-01,  ..., 8.5650e-01,
          1.0026e-01, 1.4554e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 749:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:39,931 [Process: 0] Synchronize training processes
2024-08-18 15:26:39,932 [Process: 0] Evaluating...
2024-08-18 15:26:39,933 [Process: 0] EPOCH 749:
2024-08-18 15:26:39,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:41,052 [Process: 0] Synchronize training processes
2024-08-18 15:26:41,052 [Process: 0] Evaluating...
2024-08-18 15:26:41,054 [Process: 0] EPOCH 750:
2024-08-18 15:26:41,056 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9903e-01, 1.7563e-03, 5.9659e-03,  ..., 1.8397e-03,
          2.0935e-05, 9.9985e-01],
         [3.2486e-04, 1.7563e-03, 4.9134e-03,  ..., 1.8397e-03,
          2.0935e-05, 4.8970e-05],
         [3.2486e-04, 4.1438e-03, 1.1424e-02,  ..., 9.9448e-01,
          9.9994e-01, 4.8970e-05],
         [3.2486e-04, 9.9234e-01, 9.7770e-01,  ..., 1.8397e-03,
          2.0935e-05, 4.8970e-05]],
        [[9.9787e-01, 4.2341e-03, 6.6939e-04,  ..., 1.5245e-04,
          2.9795e-01, 1.9368e-04],
         [7.1073e-04, 3.0680e-03, 6.6939e-04,  ..., 1.5245e-04,
          4.4553e-01, 1.9368e-04],
         [7.1073e-04, 7.7210e-03, 1.1807e-03,  ..., 9.9954e-01,
          1.0908e-01, 9.9942e-01],
         [7.1073e-04, 9.8498e-01, 9.9748e-01,  ..., 1.5245e-04,
          1.4744e-01, 1.9368e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5681e-03, 9.9888e-01, 1.5160e-10,  ..., 1.8464e-03,
          7.2746e-04, 6.4357e-04],
         [2.5681e-03, 3.7331e-04, 1.5160e-10,  ..., 1.8464e-03,
          7.2746e-04, 6.4357e-04],
         [9.9080e-01, 3.7331e-04, 1.5160e-10,  ..., 9.9446e-01,
          7.2746e-04, 9.9807e-01],
         [4.0620e-03, 3.7331e-04, 1.0000e+00,  ..., 1.8464e-03,
          9.9782e-01, 6.4357e-04]],
        [[2.8874e-02, 6.4700e-02, 2.5998e-02,  ..., 1.3530e-03,
          4.0288e-02, 4.8253e-03],
         [6.2701e-02, 1.1019e-01, 4.7772e-02,  ..., 1.5879e-03,
          6.3416e-02, 4.8253e-03],
         [8.4780e-01, 4.7160e-01, 3.4258e-02,  ..., 1.7507e-03,
          5.0061e-02, 9.7997e-01],
         [6.0621e-02, 3.5351e-01, 8.9197e-01,  ..., 9.9531e-01,
          8.4623e-01, 1.0378e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 750:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9970e-01, 2.2679e-03, 6.7712e-03,  ..., 5.4278e-04,
          3.5726e-06, 9.9983e-01],
         [1.0158e-04, 2.2679e-03, 5.8561e-03,  ..., 5.4278e-04,
          3.5726e-06, 5.7003e-05],
         [1.0158e-04, 6.2487e-03, 1.4918e-02,  ..., 9.9837e-01,
          9.9999e-01, 5.7003e-05],
         [1.0158e-04, 9.8922e-01, 9.7245e-01,  ..., 5.4278e-04,
          3.5726e-06, 5.7003e-05]],
        [[9.9863e-01, 1.1379e-02, 4.0458e-04,  ..., 4.8869e-04,
          4.5256e-01, 1.3231e-04],
         [4.5506e-04, 7.8710e-03, 4.0458e-04,  ..., 4.8869e-04,
          2.0843e-01, 1.3231e-04],
         [4.5506e-04, 2.0189e-02, 5.9838e-04,  ..., 9.9853e-01,
          1.8859e-01, 9.9960e-01],
         [4.5506e-04, 9.6056e-01, 9.9859e-01,  ..., 4.8869e-04,
          1.5042e-01, 1.3231e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7590e-03, 9.6709e-01, 1.2065e-07,  ..., 7.5573e-04,
          1.3144e-04, 3.3688e-03],
         [1.7590e-03, 1.7000e-02, 1.2065e-07,  ..., 7.5573e-04,
          1.3144e-04, 3.3688e-03],
         [9.9456e-01, 7.6705e-03, 1.2065e-07,  ..., 9.9773e-01,
          1.3144e-04, 9.8917e-01],
         [1.9240e-03, 8.2367e-03, 1.0000e+00,  ..., 7.5573e-04,
          9.9961e-01, 4.0917e-03]],
        [[6.1356e-02, 9.2201e-02, 3.4402e-04,  ..., 4.1504e-04,
          8.3828e-03, 1.7203e-02],
         [1.3849e-01, 1.5357e-01, 3.4402e-04,  ..., 4.1504e-04,
          7.8098e-03, 2.3582e-02],
         [6.1431e-01, 1.3096e-01, 3.4443e-04,  ..., 4.1504e-04,
          1.2266e-02, 9.1478e-01],
         [1.8584e-01, 6.2328e-01, 9.9897e-01,  ..., 9.9875e-01,
          9.7154e-01, 4.4438e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 751:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:42,182 [Process: 0] Synchronize training processes
2024-08-18 15:26:42,182 [Process: 0] Evaluating...
2024-08-18 15:26:42,184 [Process: 0] EPOCH 751:
2024-08-18 15:26:42,185 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:43,314 [Process: 0] Synchronize training processes
2024-08-18 15:26:43,314 [Process: 0] Evaluating...
2024-08-18 15:26:43,318 [Process: 0] EPOCH 752:
2024-08-18 15:26:43,320 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9864e-01, 6.3055e-03, 1.2716e-03,  ..., 4.7586e-04,
          8.1087e-06, 9.9889e-01],
         [4.5371e-04, 3.8204e-03, 1.2498e-03,  ..., 4.7586e-04,
          8.1087e-06, 3.6944e-04],
         [4.5371e-04, 1.0057e-02, 2.9053e-03,  ..., 9.9857e-01,
          9.9998e-01, 3.6944e-04],
         [4.5371e-04, 9.7982e-01, 9.9457e-01,  ..., 4.7586e-04,
          8.1087e-06, 3.6944e-04]],
        [[9.9961e-01, 1.0546e-02, 9.8034e-04,  ..., 5.5753e-04,
          3.8288e-01, 4.8585e-04],
         [1.2934e-04, 5.1357e-03, 9.6367e-04,  ..., 5.5753e-04,
          4.0487e-01, 4.8585e-04],
         [1.2934e-04, 1.2561e-02, 1.7780e-03,  ..., 9.9833e-01,
          1.1750e-01, 9.9854e-01],
         [1.2934e-04, 9.7176e-01, 9.9628e-01,  ..., 5.5753e-04,
          9.4756e-02, 4.8585e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3059e-03, 1.5009e-02, 9.7949e-09,  ..., 9.9933e-04,
          1.6105e-03, 8.2742e-04],
         [1.3059e-03, 1.6443e-02, 9.7949e-09,  ..., 9.9933e-04,
          1.6105e-03, 8.2742e-04],
         [9.9608e-01, 9.5211e-01, 9.7949e-09,  ..., 9.9700e-01,
          2.8688e-03, 9.9752e-01],
         [1.3059e-03, 1.6437e-02, 1.0000e+00,  ..., 9.9933e-04,
          9.9391e-01, 8.2742e-04]],
        [[5.8049e-02, 3.0274e-02, 4.6677e-04,  ..., 2.0270e-04,
          3.4879e-03, 5.1983e-03],
         [1.6672e-01, 1.5229e-01, 4.9509e-04,  ..., 2.0270e-04,
          3.1785e-03, 5.1983e-03],
         [5.8285e-01, 4.1856e-02, 4.6677e-04,  ..., 2.3403e-04,
          5.1082e-03, 9.8197e-01],
         [1.9238e-01, 7.7558e-01, 9.9857e-01,  ..., 9.9936e-01,
          9.8823e-01, 7.6297e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 752:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9979e-01, 1.6282e-03, 1.8563e-03,  ..., 1.0675e-03,
          1.5299e-05, 9.9887e-01],
         [7.0133e-05, 1.6282e-03, 1.8563e-03,  ..., 1.0675e-03,
          1.5299e-05, 3.7707e-04],
         [7.0133e-05, 4.1272e-03, 4.8989e-03,  ..., 9.9680e-01,
          9.9995e-01, 3.7707e-04],
         [7.0133e-05, 9.9262e-01, 9.9139e-01,  ..., 1.0675e-03,
          1.5299e-05, 3.7707e-04]],
        [[9.9925e-01, 1.2083e-03, 7.0626e-04,  ..., 1.9034e-04,
          2.5728e-01, 7.0182e-05],
         [2.4863e-04, 1.2083e-03, 7.0626e-04,  ..., 1.9034e-04,
          1.7674e-01, 7.0182e-05],
         [2.4863e-04, 2.3145e-03, 1.6257e-03,  ..., 9.9943e-01,
          1.2607e-01, 9.9979e-01],
         [2.4863e-04, 9.9527e-01, 9.9696e-01,  ..., 1.9034e-04,
          4.3991e-01, 7.0182e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 15:26:44,443 [Process: 0] Synchronize training processes
2024-08-18 15:26:44,443 [Process: 0] Evaluating...
2024-08-18 15:26:44,445 [Process: 0] EPOCH 753:
2024-08-18 15:26:44,447 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:45,563 [Process: 0] Synchronize training processes
2024-08-18 15:26:45,563 [Process: 0] Evaluating...
2024-08-18 15:26:45,565 [Process: 0] EPOCH 754:
2024-08-18 15:26:45,567 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.2646e-04, 1.5802e-02, 4.6898e-06,  ..., 1.0714e-03,
          9.4147e-05, 1.3714e-03],
         [9.2646e-04, 2.9871e-02, 4.6898e-06,  ..., 1.0714e-03,
          9.4147e-05, 1.3714e-03],
         [9.9718e-01, 9.2572e-01, 4.6898e-06,  ..., 9.9678e-01,
          9.4147e-05, 9.9589e-01],
         [9.6569e-04, 2.8603e-02, 9.9999e-01,  ..., 1.0782e-03,
          9.9972e-01, 1.3714e-03]],
        [[2.0004e-02, 7.1757e-04, 1.4916e-05,  ..., 2.8868e-04,
          3.4227e-03, 3.4241e-03],
         [4.7226e-02, 7.1757e-04, 1.4916e-05,  ..., 2.8868e-04,
          3.4227e-03, 3.4241e-03],
         [8.6410e-01, 7.4967e-04, 1.4916e-05,  ..., 3.8030e-04,
          5.9402e-03, 9.8888e-01],
         [6.8675e-02, 9.9782e-01, 9.9996e-01,  ..., 9.9904e-01,
          9.8721e-01, 4.2704e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 753:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.5644e-01, 3.0357e-03, 1.1868e-03,  ..., 1.3238e-04,
          3.8717e-05, 9.9938e-01],
         [6.4883e-03, 2.4518e-03, 1.1868e-03,  ..., 1.3238e-04,
          3.8717e-05, 2.0530e-04],
         [6.4883e-03, 5.6537e-03, 2.3026e-03,  ..., 9.9960e-01,
          9.9988e-01, 2.0530e-04],
         [3.0580e-02, 9.8886e-01, 9.9532e-01,  ..., 1.3238e-04,
          3.8717e-05, 2.0530e-04]],
        [[9.9975e-01, 1.9863e-03, 8.3891e-03,  ..., 7.0799e-04,
          1.8700e-01, 1.2304e-04],
         [8.4055e-05, 1.9061e-03, 5.0830e-03,  ..., 7.0799e-04,
          5.2498e-01, 1.2304e-04],
         [8.4055e-05, 4.4878e-03, 1.4453e-02,  ..., 9.9788e-01,
          1.0847e-01, 9.9963e-01],
         [8.4055e-05, 9.9162e-01, 9.7207e-01,  ..., 7.0799e-04,
          1.7955e-01, 1.2304e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2971e-03, 1.8925e-02, 7.0269e-09,  ..., 1.6285e-03,
          7.0261e-05, 7.0140e-04],
         [2.2971e-03, 2.8683e-02, 7.0269e-09,  ..., 1.6285e-03,
          7.0261e-05, 7.0140e-04],
         [9.9227e-01, 8.9715e-01, 7.0269e-09,  ..., 9.9510e-01,
          7.0261e-05, 9.9790e-01],
         [3.1373e-03, 5.5241e-02, 1.0000e+00,  ..., 1.6463e-03,
          9.9979e-01, 7.0140e-04]],
        [[3.0441e-02, 2.2005e-04, 9.0446e-05,  ..., 4.3238e-04,
          7.6476e-03, 6.9528e-03],
         [4.9278e-02, 2.2005e-04, 9.0446e-05,  ..., 4.3238e-04,
          7.3632e-03, 7.1962e-03],
         [8.2173e-01, 2.2005e-04, 9.0446e-05,  ..., 6.1487e-04,
          1.0760e-02, 9.7474e-01],
         [9.8553e-02, 9.9934e-01, 9.9973e-01,  ..., 9.9852e-01,
          9.7423e-01, 1.1114e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 754:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9833e-01, 2.4127e-03, 3.8502e-04,  ..., 2.2660e-03,
          1.5860e-05, 9.9872e-01],
         [5.5728e-04, 2.1431e-03, 3.8502e-04,  ..., 2.2660e-03,
          1.5860e-05, 4.2553e-04],
         [5.5728e-04, 4.7795e-03, 7.2210e-04,  ..., 9.9320e-01,
          9.9995e-01, 4.2553e-04],
         [5.5728e-04, 9.9066e-01, 9.9851e-01,  ..., 2.2660e-03,
          1.5860e-05, 4.2553e-04]],
        [[9.9960e-01, 2.3595e-03, 4.4683e-04,  ..., 1.5267e-04,
          1.7107e-01, 7.7147e-05],
         [1.3329e-04, 2.1463e-03, 4.4683e-04,  ..., 1.5267e-04,
          5.8221e-01, 7.7147e-05],
         [1.3329e-04, 5.0432e-03, 9.9636e-04,  ..., 9.9954e-01,
          1.2409e-01, 9.9977e-01],
         [1.3329e-04, 9.9045e-01, 9.9811e-01,  ..., 1.5267e-04,
          1.2263e-01, 7.7147e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:46,688 [Process: 0] Synchronize training processes
2024-08-18 15:26:46,688 [Process: 0] Evaluating...
2024-08-18 15:26:46,690 [Process: 0] EPOCH 755:
2024-08-18 15:26:46,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7011e-03, 4.1976e-02, 4.7519e-08,  ..., 1.2338e-03,
          4.5318e-05, 2.1724e-03],
         [3.7011e-03, 6.9917e-02, 4.7519e-08,  ..., 1.2338e-03,
          4.5318e-05, 2.1724e-03],
         [9.8745e-01, 8.3501e-01, 4.7519e-08,  ..., 9.9623e-01,
          4.5318e-05, 9.9265e-01],
         [5.1455e-03, 5.3094e-02, 1.0000e+00,  ..., 1.2986e-03,
          9.9986e-01, 3.0097e-03]],
        [[2.0426e-02, 1.6376e-04, 1.8231e-04,  ..., 2.2214e-04,
          1.0189e-03, 8.3330e-03],
         [3.0913e-02, 1.6376e-04, 1.8231e-04,  ..., 2.2214e-04,
          1.0189e-03, 8.3330e-03],
         [8.9134e-01, 1.6376e-04, 1.8231e-04,  ..., 2.2214e-04,
          1.3576e-03, 9.6516e-01],
         [5.7317e-02, 9.9951e-01, 9.9945e-01,  ..., 9.9933e-01,
          9.9660e-01, 1.8170e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 755:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9770e-01, 3.4447e-03, 7.5639e-04,  ..., 6.7179e-04,
          4.3155e-05, 9.9754e-01],
         [7.0875e-04, 2.7258e-03, 7.5639e-04,  ..., 6.7179e-04,
          4.3155e-05, 8.1912e-04],
         [7.0875e-04, 8.4344e-03, 1.3006e-03,  ..., 9.9798e-01,
          9.9987e-01, 8.1912e-04],
         [8.7984e-04, 9.8540e-01, 9.9719e-01,  ..., 6.7179e-04,
          4.3155e-05, 8.1912e-04]],
        [[9.9831e-01, 2.3194e-03, 4.4070e-04,  ..., 2.9199e-04,
          1.4374e-01, 7.7283e-05],
         [5.6226e-04, 2.3194e-03, 4.4070e-04,  ..., 2.9199e-04,
          3.1266e-01, 7.7283e-05],
         [5.6226e-04, 6.8196e-03, 9.0753e-04,  ..., 9.9912e-01,
          4.2461e-01, 9.9977e-01],
         [5.6226e-04, 9.8854e-01, 9.9821e-01,  ..., 2.9199e-04,
          1.1899e-01, 7.7283e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0452e-03, 5.3523e-02, 7.2173e-08,  ..., 2.6877e-03,
          9.2966e-04, 1.1529e-03],
         [1.0452e-03, 7.1135e-02, 7.2173e-08,  ..., 2.6877e-03,
          8.0323e-04, 1.1529e-03],
         [9.9686e-01, 7.5425e-01, 7.2173e-08,  ..., 9.9190e-01,
          8.0323e-04, 9.9654e-01],
         [1.0452e-03, 1.2110e-01, 1.0000e+00,  ..., 2.7232e-03,
          9.9746e-01, 1.1529e-03]],
        [[1.8002e-02, 2.4792e-04, 9.4561e-05,  ..., 2.6727e-03,
          1.4499e-03, 3.9019e-03],
         [2.5472e-02, 2.4792e-04, 9.4561e-05,  ..., 2.6727e-03,
          1.4721e-03, 3.9019e-03],
         [9.0152e-01, 2.4792e-04, 9.4561e-05,  ..., 3.8149e-03,
          1.7920e-03, 9.8715e-01],
         [5.5006e-02, 9.9926e-01, 9.9972e-01,  ..., 9.9084e-01,
          9.9529e-01, 5.0509e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 756:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:26:47,905 [Process: 0] Synchronize training processes
2024-08-18 15:26:47,906 [Process: 0] Evaluating...
2024-08-18 15:26:47,907 [Process: 0] EPOCH 756:
2024-08-18 15:26:47,909 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:49,023 [Process: 0] Synchronize training processes
2024-08-18 15:26:49,023 [Process: 0] Evaluating...
2024-08-18 15:26:49,025 [Process: 0] EPOCH 757:
2024-08-18 15:26:49,027 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9932e-01, 6.8435e-04, 1.2604e-03,  ..., 1.2471e-03,
          5.7319e-06, 9.9734e-01],
         [2.2785e-04, 6.6817e-04, 1.2604e-03,  ..., 1.2471e-03,
          5.7319e-06, 8.8823e-04],
         [2.2785e-04, 9.6067e-04, 2.4577e-03,  ..., 9.9626e-01,
          9.9998e-01, 8.8823e-04],
         [2.2785e-04, 9.9769e-01, 9.9502e-01,  ..., 1.2471e-03,
          5.7319e-06, 8.8823e-04]],
        [[9.9872e-01, 6.5493e-03, 1.9738e-03,  ..., 8.5167e-04,
          1.4198e-01, 3.8126e-04],
         [4.2566e-04, 4.5087e-03, 1.9738e-03,  ..., 8.5167e-04,
          4.9911e-01, 3.8126e-04],
         [4.2566e-04, 9.9663e-03, 3.5395e-03,  ..., 9.9744e-01,
          1.9111e-01, 9.9886e-01],
         [4.2566e-04, 9.7898e-01, 9.9251e-01,  ..., 8.5167e-04,
          1.6780e-01, 3.8126e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3643e-03, 5.0931e-02, 2.2663e-05,  ..., 7.2400e-04,
          5.9058e-05, 6.1468e-04],
         [2.3643e-03, 6.9713e-02, 2.2663e-05,  ..., 7.2400e-04,
          5.9058e-05, 6.1468e-04],
         [9.9279e-01, 4.9743e-01, 2.2663e-05,  ..., 9.9783e-01,
          5.9058e-05, 9.9816e-01],
         [2.4850e-03, 3.8193e-01, 9.9993e-01,  ..., 7.2400e-04,
          9.9982e-01, 6.1468e-04]],
        [[3.3172e-02, 3.1554e-04, 8.7620e-05,  ..., 1.0809e-03,
          8.0122e-03, 1.9932e-02],
         [3.6497e-02, 3.1554e-04, 8.7620e-05,  ..., 1.0809e-03,
          6.3319e-03, 1.5913e-02],
         [8.0321e-01, 3.1554e-04, 8.7620e-05,  ..., 1.1033e-03,
          9.6581e-03, 9.3776e-01],
         [1.2712e-01, 9.9905e-01, 9.9974e-01,  ..., 9.9673e-01,
          9.7600e-01, 2.6398e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 757:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9761e-01, 1.2960e-03, 5.1236e-04,  ..., 5.4736e-04,
          1.6301e-04, 9.9960e-01],
         [7.9601e-04, 1.2960e-03, 5.1236e-04,  ..., 5.4736e-04,
          1.6301e-04, 1.3391e-04],
         [7.9601e-04, 2.1206e-03, 7.7677e-04,  ..., 9.9836e-01,
          9.9951e-01, 1.3391e-04],
         [7.9601e-04, 9.9529e-01, 9.9820e-01,  ..., 5.4736e-04,
          1.6301e-04, 1.3391e-04]],
        [[9.9945e-01, 4.6613e-03, 1.0443e-03,  ..., 6.3458e-04,
          3.9832e-02, 6.1520e-05],
         [1.8230e-04, 4.7756e-03, 1.0443e-03,  ..., 6.3458e-04,
          8.1390e-02, 6.1520e-05],
         [1.8230e-04, 7.7182e-03, 1.5175e-03,  ..., 9.9810e-01,
          8.4822e-01, 9.9982e-01],
         [1.8230e-04, 9.8284e-01, 9.9639e-01,  ..., 6.3458e-04,
          3.0559e-02, 6.1520e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4719e-03, 1.5080e-05, 5.6818e-08,  ..., 9.3475e-04,
          1.8483e-02, 1.4157e-03],
         [2.4719e-03, 1.5080e-05, 5.6818e-08,  ..., 9.3475e-04,
          1.8019e-02, 1.4157e-03],
         [9.9225e-01, 1.5080e-05, 5.6818e-08,  ..., 9.9720e-01,
          2.1053e-02, 9.9558e-01],
         [2.8078e-03, 9.9995e-01, 1.0000e+00,  ..., 9.3475e-04,
          9.4245e-01, 1.5931e-03]],
        [[8.6719e-03, 2.7818e-04, 1.4456e-04,  ..., 6.9986e-04,
          2.4939e-01, 2.2502e-03],
         [7.0904e-03, 2.7818e-04, 1.4456e-04,  ..., 6.9986e-04,
          1.4247e-01, 2.2502e-03],
         [9.7551e-01, 2.7818e-04, 1.4456e-04,  ..., 6.9986e-04,
          1.3951e-01, 9.9236e-01],
         [8.7264e-03, 9.9917e-01, 9.9957e-01,  ..., 9.9790e-01,
          4.6863e-01, 3.1408e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 758:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:50,150 [Process: 0] Synchronize training processes
2024-08-18 15:26:50,150 [Process: 0] Evaluating...
2024-08-18 15:26:50,152 [Process: 0] EPOCH 758:
2024-08-18 15:26:50,154 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:51,275 [Process: 0] Synchronize training processes
2024-08-18 15:26:51,275 [Process: 0] Evaluating...
2024-08-18 15:26:51,277 [Process: 0] EPOCH 759:
2024-08-18 15:26:51,279 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9880e-01, 5.0733e-04, 1.4884e-03,  ..., 6.1503e-05,
          3.1893e-04, 9.9886e-01],
         [3.9900e-04, 5.0733e-04, 1.4884e-03,  ..., 6.1503e-05,
          3.1893e-04, 3.8046e-04],
         [3.9900e-04, 7.4909e-04, 1.9406e-03,  ..., 9.9982e-01,
          9.9904e-01, 3.8046e-04],
         [3.9900e-04, 9.9824e-01, 9.9508e-01,  ..., 6.1503e-05,
          3.1893e-04, 3.8046e-04]],
        [[9.9810e-01, 1.5219e-03, 1.0882e-03,  ..., 9.2667e-04,
          1.1926e-01, 2.7084e-05],
         [6.3421e-04, 1.5219e-03, 1.0882e-03,  ..., 9.2667e-04,
          2.3728e-01, 2.7084e-05],
         [6.3421e-04, 2.9655e-03, 1.5758e-03,  ..., 9.9722e-01,
          4.6421e-01, 9.9992e-01],
         [6.3421e-04, 9.9399e-01, 9.9625e-01,  ..., 9.2667e-04,
          1.7925e-01, 2.7084e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1672e-03, 6.2394e-02, 1.4561e-07,  ..., 2.6605e-03,
          1.1395e-03, 4.4225e-03],
         [3.1672e-03, 7.1494e-02, 1.4561e-07,  ..., 3.1579e-03,
          1.1395e-03, 4.0235e-03],
         [9.8977e-01, 2.9210e-01, 1.4561e-07,  ..., 9.9113e-01,
          1.1395e-03, 9.8701e-01],
         [3.8932e-03, 5.7401e-01, 1.0000e+00,  ..., 3.0502e-03,
          9.9658e-01, 4.5405e-03]],
        [[3.3694e-02, 2.9582e-02, 7.7087e-02,  ..., 2.6900e-04,
          1.0447e-03, 2.7249e-03],
         [3.4535e-02, 6.8661e-02, 8.9768e-02,  ..., 2.6900e-04,
          1.0447e-03, 2.7249e-03],
         [8.6275e-01, 5.5007e-02, 2.3580e-01,  ..., 2.6900e-04,
          1.0447e-03, 9.9172e-01],
         [6.9018e-02, 8.4675e-01, 5.9734e-01,  ..., 9.9919e-01,
          9.9687e-01, 2.8255e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 759:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9984e-01, 4.7560e-03, 6.2482e-03,  ..., 6.1870e-04,
          5.0530e-05, 9.9858e-01],
         [5.3341e-05, 4.8202e-03, 5.5178e-03,  ..., 6.1870e-04,
          5.0530e-05, 4.6990e-04],
         [5.3341e-05, 6.7603e-03, 5.8268e-03,  ..., 9.9814e-01,
          9.9985e-01, 4.8195e-04],
         [5.3341e-05, 9.8366e-01, 9.8241e-01,  ..., 6.1870e-04,
          5.0530e-05, 4.6990e-04]],
        [[9.9985e-01, 2.0764e-03, 3.3402e-04,  ..., 6.8767e-04,
          1.9238e-01, 3.3240e-04],
         [5.0831e-05, 3.2052e-03, 3.3402e-04,  ..., 6.8767e-04,
          3.5839e-01, 3.3240e-04],
         [5.0831e-05, 2.9445e-03, 3.7123e-04,  ..., 9.9794e-01,
          3.1864e-01, 9.9900e-01],
         [5.0831e-05, 9.9177e-01, 9.9896e-01,  ..., 6.8767e-04,
          1.3060e-01, 3.3240e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4725e-03, 6.5172e-02, 8.0483e-06,  ..., 5.3222e-03,
          2.0266e-04, 7.8094e-04],
         [2.4725e-03, 9.5483e-02, 8.0483e-06,  ..., 4.8838e-03,
          2.0266e-04, 7.8094e-04],
         [9.9258e-01, 2.3663e-01, 8.0483e-06,  ..., 9.8269e-01,
          2.0266e-04, 9.9766e-01],
         [2.4725e-03, 6.0271e-01, 9.9998e-01,  ..., 7.1020e-03,
          9.9939e-01, 7.8094e-04]],
        [[6.4167e-02, 4.7765e-02, 6.8562e-02,  ..., 6.8302e-05,
          1.0291e-03, 1.3631e-02],
         [7.0875e-02, 5.2923e-02, 6.7822e-02,  ..., 6.8302e-05,
          1.0291e-03, 1.6457e-02],
         [6.9048e-01, 6.6223e-02, 1.4353e-01,  ..., 6.8302e-05,
          1.0291e-03, 9.2718e-01],
         [1.7448e-01, 8.3309e-01, 7.2008e-01,  ..., 9.9980e-01,
          9.9691e-01, 4.2727e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:52,401 [Process: 0] Synchronize training processes
2024-08-18 15:26:52,401 [Process: 0] Evaluating...
2024-08-18 15:26:52,403 [Process: 0] EPOCH 760:
2024-08-18 15:26:52,404 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:53,531 [Process: 0] Synchronize training processes
2024-08-18 15:26:53,532 [Process: 0] Evaluating...
2024-08-18 15:26:53,533 [Process: 0] EPOCH 761:
2024-08-18 15:26:53,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 760:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9895e-01, 1.3111e-03, 3.1836e-03,  ..., 8.2728e-04,
          3.3193e-04, 9.9834e-01],
         [3.4893e-04, 1.3111e-03, 2.3019e-03,  ..., 8.2728e-04,
          3.3193e-04, 5.5293e-04],
         [3.4893e-04, 1.6524e-03, 3.1481e-03,  ..., 9.9752e-01,
          9.9900e-01, 5.5293e-04],
         [3.4893e-04, 9.9573e-01, 9.9137e-01,  ..., 8.2728e-04,
          3.3193e-04, 5.5293e-04]],
        [[9.9982e-01, 3.1397e-03, 1.1441e-03,  ..., 1.1350e-04,
          9.7141e-02, 6.5646e-05],
         [6.0065e-05, 2.3463e-03, 1.3369e-03,  ..., 1.1350e-04,
          4.2230e-01, 6.5646e-05],
         [6.0065e-05, 3.3246e-03, 1.1441e-03,  ..., 9.9966e-01,
          3.7068e-01, 9.9980e-01],
         [6.0065e-05, 9.9119e-01, 9.9638e-01,  ..., 1.1350e-04,
          1.0988e-01, 6.5646e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6963e-03, 1.9019e-02, 1.7907e-07,  ..., 3.0162e-04,
          3.4843e-01, 9.0434e-04],
         [1.6963e-03, 3.8865e-02, 1.7907e-07,  ..., 3.0162e-04,
          1.5057e-01, 9.0434e-04],
         [9.9491e-01, 4.0953e-02, 1.7907e-07,  ..., 9.9910e-01,
          1.9088e-01, 9.9729e-01],
         [1.6963e-03, 9.0116e-01, 1.0000e+00,  ..., 3.0162e-04,
          3.1012e-01, 9.0434e-04]],
        [[5.9647e-02, 2.3277e-02, 3.5030e-02,  ..., 8.5281e-05,
          8.1279e-04, 1.5105e-02],
         [6.0853e-02, 3.1306e-02, 2.9775e-02,  ..., 8.5281e-05,
          8.1279e-04, 1.2671e-02],
         [5.0829e-01, 2.9321e-02, 3.8149e-02,  ..., 8.5281e-05,
          8.1279e-04, 9.4229e-01],
         [3.7121e-01, 9.1610e-01, 8.9705e-01,  ..., 9.9974e-01,
          9.9756e-01, 2.9938e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 761:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9872e-01, 9.0430e-04, 1.5177e-03,  ..., 2.0702e-05,
          5.2124e-04, 9.9976e-01],
         [4.2815e-04, 9.0430e-04, 1.3668e-03,  ..., 2.0702e-05,
          5.2124e-04, 8.1073e-05],
         [4.2815e-04, 1.0718e-03, 1.7066e-03,  ..., 9.9994e-01,
          9.9844e-01, 8.1073e-05],
         [4.2815e-04, 9.9712e-01, 9.9541e-01,  ..., 2.0702e-05,
          5.2124e-04, 8.1073e-05]],
        [[9.9816e-01, 5.7510e-04, 8.0176e-04,  ..., 7.0478e-03,
          1.4296e-01, 1.3051e-04],
         [6.1181e-04, 5.7510e-04, 8.0176e-04,  ..., 7.0478e-03,
          6.3581e-01, 1.3051e-04],
         [6.1181e-04, 5.7510e-04, 9.5718e-04,  ..., 9.7581e-01,
          1.1105e-01, 9.9961e-01],
         [6.1181e-04, 9.9827e-01, 9.9744e-01,  ..., 1.0091e-02,
          1.1018e-01, 1.3051e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:54,658 [Process: 0] Synchronize training processes
2024-08-18 15:26:54,658 [Process: 0] Evaluating...
2024-08-18 15:26:54,662 [Process: 0] EPOCH 762:
2024-08-18 15:26:54,664 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:55,778 [Process: 0] Synchronize training processes
2024-08-18 15:26:55,779 [Process: 0] Evaluating...
2024-08-18 15:26:55,780 [Process: 0] EPOCH 763:
2024-08-18 15:26:55,782 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0336e-03, 5.8380e-03, 2.6608e-08,  ..., 2.1954e-03,
          3.7262e-04, 1.4113e-03],
         [1.0336e-03, 1.4160e-02, 2.6608e-08,  ..., 2.1954e-03,
          3.7262e-04, 1.4113e-03],
         [9.9679e-01, 5.6811e-03, 2.6608e-08,  ..., 9.9341e-01,
          3.7262e-04, 9.9532e-01],
         [1.1432e-03, 9.7432e-01, 1.0000e+00,  ..., 2.1954e-03,
          9.9888e-01, 1.8623e-03]],
        [[8.4723e-02, 7.1292e-03, 4.1712e-03,  ..., 8.0982e-04,
          9.3385e-04, 1.3472e-02],
         [7.0057e-02, 1.2399e-02, 5.3005e-03,  ..., 8.0982e-04,
          1.3450e-03, 9.0315e-03],
         [4.7375e-01, 9.0472e-03, 4.3975e-03,  ..., 8.0982e-04,
          9.3385e-04, 9.6228e-01],
         [3.7147e-01, 9.7142e-01, 9.8613e-01,  ..., 9.9757e-01,
          9.9679e-01, 1.5215e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 762:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9844e-01, 1.6580e-03, 2.1917e-03,  ..., 9.3503e-05,
          7.1246e-07, 9.9177e-01],
         [5.1970e-04, 1.6580e-03, 2.1917e-03,  ..., 9.3503e-05,
          7.1246e-07, 2.7446e-03],
         [5.1970e-04, 2.4246e-03, 3.8424e-03,  ..., 9.9972e-01,
          1.0000e+00, 2.7446e-03],
         [5.1970e-04, 9.9426e-01, 9.9177e-01,  ..., 9.3503e-05,
          7.1246e-07, 2.7446e-03]],
        [[9.9963e-01, 1.0355e-03, 3.4264e-04,  ..., 2.8135e-04,
          1.3282e-01, 8.9646e-05],
         [1.2293e-04, 1.0355e-03, 3.4264e-04,  ..., 2.8135e-04,
          1.8942e-01, 8.9646e-05],
         [1.2293e-04, 1.0355e-03, 3.4264e-04,  ..., 9.9916e-01,
          2.7162e-01, 9.9973e-01],
         [1.2293e-04, 9.9689e-01, 9.9897e-01,  ..., 2.8135e-04,
          4.0614e-01, 8.9646e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5775e-03, 6.4953e-03, 7.5618e-05,  ..., 5.2019e-03,
          3.5729e-04, 5.0889e-04],
         [3.5775e-03, 5.2220e-03, 7.5618e-05,  ..., 4.0450e-03,
          3.5729e-04, 5.0889e-04],
         [9.8865e-01, 6.4156e-03, 7.5618e-05,  ..., 9.8671e-01,
          3.5729e-04, 9.9847e-01],
         [4.1960e-03, 9.8187e-01, 9.9977e-01,  ..., 4.0450e-03,
          9.9893e-01, 5.0889e-04]],
        [[3.4857e-02, 2.7139e-03, 4.0634e-03,  ..., 1.1092e-03,
          5.4792e-04, 3.0124e-03],
         [2.6633e-02, 2.7139e-03, 4.0634e-03,  ..., 1.1441e-03,
          5.4792e-04, 2.8055e-03],
         [8.7215e-01, 2.7139e-03, 5.2672e-03,  ..., 1.1092e-03,
          5.4792e-04, 9.9138e-01],
         [6.6364e-02, 9.9186e-01, 9.8661e-01,  ..., 9.9664e-01,
          9.9836e-01, 2.8055e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 763:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9552e-01, 9.9430e-04, 3.1252e-03,  ..., 1.3164e-05,
          2.5459e-05, 9.9662e-01],
         [1.4624e-03, 9.9430e-04, 3.4681e-03,  ..., 1.3164e-05,
          2.5459e-05, 1.1269e-03],
         [1.4624e-03, 1.1007e-03, 4.9806e-03,  ..., 9.9996e-01,
          9.9992e-01, 1.1269e-03],
         [1.5573e-03, 9.9691e-01, 9.8843e-01,  ..., 1.3164e-05,
          2.5459e-05, 1.1269e-03]],
        [[9.9685e-01, 1.9869e-03, 5.6465e-04,  ..., 1.8344e-03,
          3.3466e-01, 4.9343e-05],
         [1.0490e-03, 1.9869e-03, 5.6465e-04,  ..., 1.8344e-03,
          3.2855e-01, 4.9343e-05],
         [1.0490e-03, 2.1153e-03, 5.7971e-04,  ..., 9.9450e-01,
          1.6477e-01, 9.9985e-01],
         [1.0490e-03, 9.9391e-01, 9.9829e-01,  ..., 1.8344e-03,
          1.7202e-01, 4.9343e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:26:56,908 [Process: 0] Synchronize training processes
2024-08-18 15:26:56,908 [Process: 0] Evaluating...
2024-08-18 15:26:56,910 [Process: 0] EPOCH 764:
2024-08-18 15:26:56,912 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.2229e-03, 1.8924e-03, 1.8124e-06,  ..., 7.9240e-04,
          3.0890e-04, 1.0906e-03],
         [4.7261e-03, 2.8732e-03, 1.8124e-06,  ..., 7.9240e-04,
          3.0890e-04, 1.0906e-03],
         [9.8433e-01, 1.8924e-03, 1.8124e-06,  ..., 9.9762e-01,
          3.0890e-04, 9.9673e-01],
         [4.7261e-03, 9.9334e-01, 9.9999e-01,  ..., 7.9240e-04,
          9.9907e-01, 1.0906e-03]],
        [[6.5039e-02, 2.2411e-02, 3.7777e-03,  ..., 2.6534e-04,
          9.6882e-03, 5.5066e-02],
         [5.4350e-02, 2.7799e-02, 6.6518e-03,  ..., 2.6534e-04,
          1.5178e-02, 4.6913e-02],
         [7.3085e-01, 1.8854e-02, 3.7777e-03,  ..., 2.6534e-04,
          1.4434e-02, 8.1595e-01],
         [1.4976e-01, 9.3094e-01, 9.8579e-01,  ..., 9.9920e-01,
          9.6070e-01, 8.2074e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 764:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9812e-01, 2.8211e-03, 1.1415e-03,  ..., 1.0842e-04,
          1.5707e-05, 9.9802e-01],
         [6.2668e-04, 2.8211e-03, 1.1415e-03,  ..., 1.0842e-04,
          1.5707e-05, 6.6027e-04],
         [6.2668e-04, 3.6303e-03, 1.3026e-03,  ..., 9.9967e-01,
          9.9995e-01, 6.6027e-04],
         [6.2668e-04, 9.9073e-01, 9.9641e-01,  ..., 1.0842e-04,
          1.5707e-05, 6.6027e-04]],
        [[9.9851e-01, 2.8318e-03, 1.1902e-03,  ..., 1.5719e-03,
          5.5626e-02, 7.4125e-05],
         [4.9539e-04, 2.1222e-03, 1.1902e-03,  ..., 1.5719e-03,
          4.0930e-02, 7.4125e-05],
         [4.9539e-04, 2.4070e-03, 1.8405e-03,  ..., 9.9528e-01,
          9.1687e-02, 9.9978e-01],
         [4.9539e-04, 9.9264e-01, 9.9578e-01,  ..., 1.5719e-03,
          8.1176e-01, 7.4125e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.5761e-04, 2.6916e-03, 1.1669e-05,  ..., 1.7435e-03,
          1.0447e-02, 9.2964e-03],
         [8.5761e-04, 3.6379e-03, 1.1669e-05,  ..., 1.7435e-03,
          9.0669e-03, 9.2964e-03],
         [9.9743e-01, 2.6916e-03, 1.1669e-05,  ..., 9.9477e-01,
          1.0647e-02, 9.5671e-01],
         [8.5761e-04, 9.9098e-01, 9.9996e-01,  ..., 1.7435e-03,
          9.6984e-01, 2.4700e-02]],
        [[4.3845e-02, 2.5900e-03, 7.2588e-04,  ..., 7.0663e-04,
          2.0520e-03, 1.0714e-02],
         [3.9580e-02, 3.4448e-03, 7.2588e-04,  ..., 7.0663e-04,
          1.9723e-03, 8.4124e-03],
         [7.2970e-01, 2.5900e-03, 7.2588e-04,  ..., 7.0663e-04,
          1.9723e-03, 9.6646e-01],
         [1.8688e-01, 9.9138e-01, 9.9782e-01,  ..., 9.9788e-01,
          9.9400e-01, 1.4410e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 765:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:58,063 [Process: 0] Synchronize training processes
2024-08-18 15:26:58,064 [Process: 0] Evaluating...
2024-08-18 15:26:58,065 [Process: 0] EPOCH 765:
2024-08-18 15:26:58,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:26:59,192 [Process: 0] Synchronize training processes
2024-08-18 15:26:59,193 [Process: 0] Evaluating...
2024-08-18 15:26:59,194 [Process: 0] EPOCH 766:
2024-08-18 15:26:59,196 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9793e-01, 2.6690e-03, 1.2249e-02,  ..., 9.2755e-05,
          1.4169e-04, 9.9930e-01],
         [6.0998e-04, 2.1095e-03, 6.6737e-03,  ..., 9.2755e-05,
          1.4169e-04, 2.3494e-04],
         [6.0998e-04, 2.8418e-03, 9.0268e-03,  ..., 9.9972e-01,
          9.9957e-01, 2.3494e-04],
         [8.5429e-04, 9.9238e-01, 9.7205e-01,  ..., 9.2755e-05,
          1.4169e-04, 2.3494e-04]],
        [[9.9994e-01, 2.3830e-04, 9.0428e-04,  ..., 3.7171e-04,
          2.5494e-01, 2.1734e-04],
         [2.0100e-05, 2.3830e-04, 9.0744e-04,  ..., 3.7171e-04,
          2.5689e-01, 2.1734e-04],
         [2.0100e-05, 2.3830e-04, 9.0428e-04,  ..., 9.9888e-01,
          2.5839e-01, 9.9935e-01],
         [2.0100e-05, 9.9929e-01, 9.9728e-01,  ..., 3.7171e-04,
          2.2978e-01, 2.1734e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7209e-04, 1.8145e-03, 2.7115e-04,  ..., 9.0167e-04,
          7.3128e-04, 5.6021e-03],
         [3.7209e-04, 1.8145e-03, 2.7115e-04,  ..., 9.0167e-04,
          7.3128e-04, 5.6021e-03],
         [9.9888e-01, 1.8145e-03, 2.7115e-04,  ..., 9.9730e-01,
          7.3128e-04, 9.7596e-01],
         [3.7209e-04, 9.9456e-01, 9.9919e-01,  ..., 9.0167e-04,
          9.9781e-01, 1.2839e-02]],
        [[5.3511e-02, 6.0501e-03, 4.6846e-03,  ..., 2.0554e-04,
          2.4380e-03, 1.7120e-02],
         [3.8589e-02, 4.7779e-03, 3.8236e-03,  ..., 2.0554e-04,
          2.4380e-03, 1.1564e-02],
         [7.7269e-01, 4.7779e-03, 3.8236e-03,  ..., 2.0554e-04,
          2.4380e-03, 9.5037e-01],
         [1.3521e-01, 9.8439e-01, 9.8767e-01,  ..., 9.9938e-01,
          9.9269e-01, 2.0951e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 766:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8445e-01, 4.6991e-04, 4.0549e-04,  ..., 2.1078e-04,
          1.6990e-05, 9.9936e-01],
         [4.2443e-03, 4.6991e-04, 4.0549e-04,  ..., 2.1078e-04,
          1.6990e-05, 2.1319e-04],
         [4.2443e-03, 4.6991e-04, 4.0549e-04,  ..., 9.9937e-01,
          9.9995e-01, 2.1319e-04],
         [7.0570e-03, 9.9859e-01, 9.9878e-01,  ..., 2.1078e-04,
          1.6990e-05, 2.1319e-04]],
        [[9.9990e-01, 3.0456e-04, 5.8959e-03,  ..., 2.4109e-04,
          2.2937e-04, 3.6918e-05],
         [3.1666e-05, 3.0456e-04, 3.7183e-03,  ..., 2.4109e-04,
          9.9931e-01, 3.6918e-05],
         [3.1666e-05, 3.0456e-04, 4.6814e-03,  ..., 9.9928e-01,
          2.2937e-04, 9.9989e-01],
         [3.1666e-05, 9.9909e-01, 9.8570e-01,  ..., 2.4109e-04,
          2.2937e-04, 3.6918e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0405e-03, 7.8577e-03, 4.5931e-05,  ..., 1.4810e-03,
          2.8093e-04, 2.8580e-04],
         [2.0405e-03, 5.6244e-03, 4.5931e-05,  ..., 1.4810e-03,
          2.8093e-04, 2.8580e-04],
         [9.9371e-01, 7.1298e-03, 4.5931e-05,  ..., 9.9556e-01,
          2.8093e-04, 9.9914e-01],
         [2.2110e-03, 9.7939e-01, 9.9986e-01,  ..., 1.4810e-03,
          9.9916e-01, 2.8580e-04]],
        [[2.1079e-02, 6.6139e-03, 5.5616e-03,  ..., 4.0294e-04,
          7.6300e-03, 3.5921e-01],
         [1.5118e-02, 4.5836e-03, 5.5616e-03,  ..., 4.0294e-04,
          7.0488e-03, 1.5649e-01],
         [9.2268e-01, 4.5836e-03, 7.4987e-03,  ..., 4.0294e-04,
          9.4845e-03, 2.1583e-01],
         [4.1124e-02, 9.8422e-01, 9.8138e-01,  ..., 9.9879e-01,
          9.7584e-01, 2.6847e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 767:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:00,325 [Process: 0] Synchronize training processes
2024-08-18 15:27:00,325 [Process: 0] Evaluating...
2024-08-18 15:27:00,327 [Process: 0] EPOCH 767:
2024-08-18 15:27:00,329 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:01,458 [Process: 0] Synchronize training processes
2024-08-18 15:27:01,458 [Process: 0] Evaluating...
2024-08-18 15:27:01,460 [Process: 0] EPOCH 768:
2024-08-18 15:27:01,462 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9896e-01, 2.5964e-03, 6.5358e-04,  ..., 9.7226e-05,
          1.6353e-05, 9.9710e-01],
         [3.4648e-04, 2.1669e-03, 6.5358e-04,  ..., 9.7226e-05,
          1.6353e-05, 8.8268e-04],
         [3.4648e-04, 2.1669e-03, 6.5358e-04,  ..., 9.9971e-01,
          9.9995e-01, 1.1391e-03],
         [3.4648e-04, 9.9307e-01, 9.9804e-01,  ..., 9.7226e-05,
          1.6353e-05, 8.8268e-04]],
        [[9.9979e-01, 2.8118e-04, 3.9525e-04,  ..., 1.6166e-04,
          2.8742e-05, 5.1794e-04],
         [7.1120e-05, 2.8118e-04, 3.9525e-04,  ..., 1.6166e-04,
          9.9991e-01, 5.1794e-04],
         [7.1120e-05, 2.8118e-04, 3.9525e-04,  ..., 9.9952e-01,
          2.8742e-05, 9.9845e-01],
         [7.1120e-05, 9.9916e-01, 9.9881e-01,  ..., 1.6166e-04,
          2.8742e-05, 5.1794e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2741e-03, 3.2918e-03, 4.7187e-06,  ..., 2.2916e-03,
          4.8429e-04, 3.9445e-04],
         [2.2741e-03, 3.2918e-03, 4.7187e-06,  ..., 2.2916e-03,
          4.8429e-04, 3.9445e-04],
         [9.9288e-01, 3.2918e-03, 4.7187e-06,  ..., 9.9285e-01,
          4.8429e-04, 9.9882e-01],
         [2.5719e-03, 9.9012e-01, 9.9999e-01,  ..., 2.5707e-03,
          9.9855e-01, 3.9445e-04]],
        [[2.9498e-02, 3.8335e-03, 7.8609e-03,  ..., 9.1951e-05,
          1.6691e-02, 7.0016e-03],
         [2.0561e-02, 3.8335e-03, 6.8899e-03,  ..., 9.1951e-05,
          1.2105e-02, 6.2796e-03],
         [9.0285e-01, 3.9087e-03, 6.6304e-03,  ..., 9.1951e-05,
          1.9470e-02, 9.7663e-01],
         [4.7093e-02, 9.8842e-01, 9.7862e-01,  ..., 9.9972e-01,
          9.5173e-01, 1.0094e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 768:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9913e-01, 8.3592e-04, 8.0884e-04,  ..., 2.5780e-04,
          3.9812e-06, 9.9777e-01],
         [2.8841e-04, 8.3592e-04, 8.0884e-04,  ..., 2.5780e-04,
          3.9812e-06, 7.4181e-04],
         [2.8841e-04, 8.3592e-04, 8.0884e-04,  ..., 9.9923e-01,
          9.9999e-01, 7.4181e-04],
         [2.8841e-04, 9.9749e-01, 9.9757e-01,  ..., 2.5780e-04,
          3.9812e-06, 7.4181e-04]],
        [[9.9949e-01, 2.8012e-04, 5.5637e-04,  ..., 1.4059e-04,
          1.9299e-02, 2.9365e-03],
         [1.7070e-04, 2.8012e-04, 5.5637e-04,  ..., 1.4059e-04,
          8.6843e-01, 1.7553e-03],
         [1.7070e-04, 2.8012e-04, 5.5637e-04,  ..., 9.9958e-01,
          9.3459e-02, 9.9355e-01],
         [1.7070e-04, 9.9916e-01, 9.9833e-01,  ..., 1.4059e-04,
          1.8810e-02, 1.7553e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:02,590 [Process: 0] Synchronize training processes
2024-08-18 15:27:02,591 [Process: 0] Evaluating...
2024-08-18 15:27:02,592 [Process: 0] EPOCH 769:
2024-08-18 15:27:02,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:03,727 [Process: 0] Synchronize training processes
2024-08-18 15:27:03,728 [Process: 0] Evaluating...
2024-08-18 15:27:03,729 [Process: 0] EPOCH 770:
2024-08-18 15:27:03,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9076e-03, 8.7776e-04, 2.1365e-05,  ..., 1.5079e-03,
          3.5633e-03, 1.3735e-03],
         [1.9076e-03, 8.7776e-04, 2.1365e-05,  ..., 1.5079e-03,
          3.7481e-03, 1.3735e-03],
         [9.9428e-01, 8.7776e-04, 2.1365e-05,  ..., 9.9502e-01,
          3.5633e-03, 9.9588e-01],
         [1.9076e-03, 9.9737e-01, 9.9994e-01,  ..., 1.9685e-03,
          9.8913e-01, 1.3735e-03]],
        [[1.1750e-01, 2.7871e-03, 2.1265e-03,  ..., 8.6239e-05,
          1.2856e-02, 1.6225e-02],
         [5.0284e-02, 2.7871e-03, 2.0480e-03,  ..., 8.6239e-05,
          8.8974e-03, 1.0629e-02],
         [5.9902e-01, 2.7871e-03, 2.0480e-03,  ..., 8.6239e-05,
          1.2182e-02, 9.5435e-01],
         [2.3320e-01, 9.9164e-01, 9.9378e-01,  ..., 9.9974e-01,
          9.6606e-01, 1.8793e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 769:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9955e-01, 3.5554e-04, 1.6716e-04,  ..., 7.6025e-05,
          1.8669e-04, 9.9820e-01],
         [1.4839e-04, 3.5554e-04, 1.6716e-04,  ..., 7.6025e-05,
          1.8669e-04, 5.9887e-04],
         [1.4839e-04, 3.5554e-04, 1.6716e-04,  ..., 9.9977e-01,
          9.9944e-01, 5.9887e-04],
         [1.4839e-04, 9.9893e-01, 9.9950e-01,  ..., 7.6025e-05,
          1.8669e-04, 5.9887e-04]],
        [[9.9937e-01, 2.2770e-03, 1.2727e-03,  ..., 1.7635e-04,
          9.4091e-03, 6.0690e-05],
         [2.0945e-04, 2.2770e-03, 1.2727e-03,  ..., 1.7635e-04,
          9.6010e-01, 6.0690e-05],
         [2.0945e-04, 2.2770e-03, 1.2727e-03,  ..., 9.9947e-01,
          1.8444e-02, 9.9982e-01],
         [2.0945e-04, 9.9317e-01, 9.9618e-01,  ..., 1.7635e-04,
          1.2046e-02, 6.0690e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9531e-03, 1.4652e-02, 6.4506e-06,  ..., 1.3498e-03,
          4.3789e-03, 3.2988e-03],
         [2.9183e-03, 7.6122e-03, 6.4506e-06,  ..., 1.3498e-03,
          4.3789e-03, 3.2988e-03],
         [9.9121e-01, 1.0684e-02, 6.4506e-06,  ..., 9.9595e-01,
          4.3789e-03, 9.8752e-01],
         [2.9183e-03, 9.6705e-01, 9.9998e-01,  ..., 1.3498e-03,
          9.8686e-01, 5.8814e-03]],
        [[6.5475e-02, 6.7211e-04, 9.6263e-04,  ..., 3.9432e-05,
          2.9237e-03, 1.3343e-02],
         [3.4225e-02, 6.7211e-04, 9.6263e-04,  ..., 3.9432e-05,
          2.9237e-03, 7.0723e-03],
         [6.9089e-01, 6.7211e-04, 9.6263e-04,  ..., 3.9432e-05,
          2.9237e-03, 9.6964e-01],
         [2.0941e-01, 9.9798e-01, 9.9711e-01,  ..., 9.9988e-01,
          9.9123e-01, 9.9448e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 770:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 1.1264e-03, 1.7965e-03,  ..., 1.4763e-04,
          4.5475e-05, 9.9689e-01],
         [7.9875e-06, 1.0604e-03, 1.7474e-03,  ..., 1.4763e-04,
          4.5475e-05, 1.0379e-03],
         [7.9875e-06, 1.0604e-03, 1.7474e-03,  ..., 9.9956e-01,
          9.9986e-01, 1.0379e-03],
         [7.9875e-06, 9.9675e-01, 9.9471e-01,  ..., 1.4763e-04,
          4.5475e-05, 1.0379e-03]],
        [[9.9986e-01, 3.2697e-04, 5.2224e-04,  ..., 7.6926e-04,
          7.6305e-02, 1.6375e-04],
         [4.5325e-05, 3.2697e-04, 5.2224e-04,  ..., 7.6926e-04,
          8.0519e-01, 1.6375e-04],
         [4.5325e-05, 3.2697e-04, 5.2224e-04,  ..., 9.9769e-01,
          7.5752e-02, 9.9951e-01],
         [4.5325e-05, 9.9902e-01, 9.9843e-01,  ..., 7.6926e-04,
          4.2757e-02, 1.6375e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:04,855 [Process: 0] Synchronize training processes
2024-08-18 15:27:04,856 [Process: 0] Evaluating...
2024-08-18 15:27:04,857 [Process: 0] EPOCH 771:
2024-08-18 15:27:04,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.5442e-04, 4.0863e-03, 2.9375e-08,  ..., 1.2383e-03,
          2.9034e-03, 5.6232e-03],
         [8.5442e-04, 4.0863e-03, 2.9375e-08,  ..., 1.2383e-03,
          2.7532e-03, 3.4671e-03],
         [9.9744e-01, 4.0863e-03, 2.9375e-08,  ..., 9.9629e-01,
          2.7532e-03, 9.8744e-01],
         [8.5442e-04, 9.8774e-01, 1.0000e+00,  ..., 1.2383e-03,
          9.9159e-01, 3.4671e-03]],
        [[9.3127e-02, 2.2284e-03, 6.9630e-03,  ..., 5.9116e-05,
          1.5000e-02, 1.6318e-02],
         [3.7379e-02, 2.2284e-03, 6.1531e-03,  ..., 5.9116e-05,
          9.6212e-03, 1.2134e-02],
         [7.1114e-01, 2.2284e-03, 6.2941e-03,  ..., 5.9116e-05,
          1.5743e-02, 9.4542e-01],
         [1.5835e-01, 9.9331e-01, 9.8059e-01,  ..., 9.9982e-01,
          9.5964e-01, 2.6128e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 771:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9951e-01, 3.2852e-04, 6.9759e-04,  ..., 2.8315e-05,
          1.0273e-04, 9.9957e-01],
         [1.6233e-04, 3.2852e-04, 6.9759e-04,  ..., 2.8315e-05,
          1.0273e-04, 1.4471e-04],
         [1.6233e-04, 3.2852e-04, 6.9759e-04,  ..., 9.9992e-01,
          9.9969e-01, 1.4471e-04],
         [1.6233e-04, 9.9901e-01, 9.9791e-01,  ..., 2.8315e-05,
          1.0273e-04, 1.4471e-04]],
        [[9.9951e-01, 1.0542e-04, 2.1799e-04,  ..., 3.9114e-04,
          1.0809e-01, 2.8177e-05],
         [1.6305e-04, 1.0542e-04, 2.1799e-04,  ..., 3.9114e-04,
          5.3653e-01, 2.8177e-05],
         [1.6305e-04, 1.0542e-04, 2.1799e-04,  ..., 9.9883e-01,
          2.5863e-01, 9.9992e-01],
         [1.6305e-04, 9.9968e-01, 9.9935e-01,  ..., 3.9114e-04,
          9.6745e-02, 2.8177e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.4086e-04, 5.6714e-03, 3.5942e-06,  ..., 1.8329e-03,
          5.2015e-03, 1.4222e-03],
         [8.4086e-04, 4.9483e-03, 3.5942e-06,  ..., 1.8329e-03,
          5.2015e-03, 1.4222e-03],
         [9.9739e-01, 4.9483e-03, 3.5942e-06,  ..., 9.9447e-01,
          5.2015e-03, 9.9573e-01],
         [9.3182e-04, 9.8443e-01, 9.9999e-01,  ..., 1.8626e-03,
          9.8440e-01, 1.4222e-03]],
        [[3.3196e-02, 1.2803e-03, 9.7825e-04,  ..., 1.6606e-04,
          1.8382e-02, 1.9797e-02],
         [1.9894e-02, 1.2803e-03, 9.7825e-04,  ..., 1.6606e-04,
          1.2235e-02, 1.3227e-02],
         [8.8561e-01, 1.2803e-03, 9.7825e-04,  ..., 1.6606e-04,
          2.1583e-02, 9.3352e-01],
         [6.1296e-02, 9.9616e-01, 9.9707e-01,  ..., 9.9950e-01,
          9.4780e-01, 3.3456e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 772:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:27:05,976 [Process: 0] Synchronize training processes
2024-08-18 15:27:05,976 [Process: 0] Evaluating...
2024-08-18 15:27:05,980 [Process: 0] EPOCH 772:
2024-08-18 15:27:05,982 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:07,107 [Process: 0] Synchronize training processes
2024-08-18 15:27:07,107 [Process: 0] Evaluating...
2024-08-18 15:27:07,109 [Process: 0] EPOCH 773:
2024-08-18 15:27:07,111 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9691e-01, 1.1068e-03, 4.5170e-04,  ..., 1.8649e-04,
          1.3001e-04, 9.9865e-01],
         [1.0311e-03, 1.1068e-03, 4.5170e-04,  ..., 1.8649e-04,
          1.3001e-04, 4.5113e-04],
         [1.0311e-03, 1.1068e-03, 4.5170e-04,  ..., 9.9944e-01,
          9.9961e-01, 4.5113e-04],
         [1.0311e-03, 9.9668e-01, 9.9864e-01,  ..., 1.8649e-04,
          1.3001e-04, 4.5113e-04]],
        [[9.9811e-01, 1.9192e-03, 2.1494e-04,  ..., 9.7595e-05,
          2.8225e-01, 2.1086e-04],
         [6.2926e-04, 1.9192e-03, 2.1494e-04,  ..., 9.7595e-05,
          1.7213e-01, 2.1086e-04],
         [6.2926e-04, 1.9192e-03, 2.1494e-04,  ..., 9.9971e-01,
          3.9291e-01, 9.9937e-01],
         [6.2926e-04, 9.9424e-01, 9.9936e-01,  ..., 9.7595e-05,
          1.5270e-01, 2.1086e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.8456e-04, 4.6155e-03, 1.2136e-07,  ..., 2.2554e-04,
          2.2412e-03, 1.1348e-03],
         [8.8456e-04, 3.5932e-03, 1.2136e-07,  ..., 2.2554e-04,
          2.2412e-03, 1.1348e-03],
         [9.9735e-01, 3.5932e-03, 1.2136e-07,  ..., 9.9932e-01,
          2.2412e-03, 9.9660e-01],
         [8.8456e-04, 9.8820e-01, 1.0000e+00,  ..., 2.2554e-04,
          9.9328e-01, 1.1348e-03]],
        [[8.8304e-03, 4.5368e-03, 2.9298e-03,  ..., 3.8498e-05,
          1.8853e-02, 7.5359e-03],
         [8.8304e-03, 2.7567e-03, 2.7497e-03,  ..., 3.8498e-05,
          1.7092e-02, 7.5359e-03],
         [9.5919e-01, 2.7567e-03, 2.7497e-03,  ..., 3.8498e-05,
          2.0960e-02, 9.6849e-01],
         [2.3154e-02, 9.8995e-01, 9.9157e-01,  ..., 9.9988e-01,
          9.4310e-01, 1.6440e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 773:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9991e-01, 3.8859e-04, 1.0231e-03,  ..., 1.7541e-05,
          1.1480e-04, 9.9788e-01],
         [3.1392e-05, 3.8859e-04, 1.0231e-03,  ..., 1.7541e-05,
          1.1480e-04, 7.0800e-04],
         [3.1392e-05, 3.8859e-04, 1.0231e-03,  ..., 9.9995e-01,
          9.9966e-01, 7.0800e-04],
         [3.1392e-05, 9.9883e-01, 9.9693e-01,  ..., 1.7541e-05,
          1.1480e-04, 7.0800e-04]],
        [[9.9753e-01, 2.6561e-03, 2.1994e-04,  ..., 3.4803e-04,
          2.0695e-01, 1.7865e-04],
         [8.2460e-04, 1.9171e-03, 2.1994e-04,  ..., 3.4803e-04,
          2.9255e-01, 1.7865e-04],
         [8.2460e-04, 1.9171e-03, 2.1994e-04,  ..., 9.9896e-01,
          2.7835e-01, 9.9946e-01],
         [8.2460e-04, 9.9351e-01, 9.9934e-01,  ..., 3.4803e-04,
          2.2215e-01, 1.7865e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.1889e-04, 4.1328e-03, 1.1519e-08,  ..., 2.3487e-03,
          6.5317e-03, 6.4977e-04],
         [8.1889e-04, 4.1328e-03, 1.1519e-08,  ..., 2.3487e-03,
          5.2078e-03, 6.4977e-04],
         [9.9742e-01, 4.1328e-03, 1.1519e-08,  ..., 9.9241e-01,
          5.2078e-03, 9.9805e-01],
         [9.4654e-04, 9.8760e-01, 1.0000e+00,  ..., 2.8920e-03,
          9.8305e-01, 6.4977e-04]],
        [[1.3425e-02, 2.3520e-03, 2.1259e-03,  ..., 1.5316e-04,
          4.5225e-02, 9.7849e-03],
         [1.0723e-02, 2.3520e-03, 2.1259e-03,  ..., 1.5316e-04,
          2.6839e-02, 6.2244e-03],
         [9.5072e-01, 2.3520e-03, 2.1259e-03,  ..., 1.5316e-04,
          5.1334e-02, 9.7430e-01],
         [2.5136e-02, 9.9294e-01, 9.9362e-01,  ..., 9.9954e-01,
          8.7660e-01, 9.6933e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 774:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:08,239 [Process: 0] Synchronize training processes
2024-08-18 15:27:08,240 [Process: 0] Evaluating...
2024-08-18 15:27:08,241 [Process: 0] EPOCH 774:
2024-08-18 15:27:08,243 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:09,394 [Process: 0] Synchronize training processes
2024-08-18 15:27:09,394 [Process: 0] Evaluating...
2024-08-18 15:27:09,395 [Process: 0] EPOCH 775:
2024-08-18 15:27:09,397 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9941e-01, 2.1322e-03, 4.7137e-04,  ..., 6.6676e-05,
          2.4342e-05, 9.9972e-01],
         [1.9701e-04, 1.9031e-03, 4.7137e-04,  ..., 6.6676e-05,
          2.4342e-05, 9.3247e-05],
         [1.9701e-04, 1.9031e-03, 4.7137e-04,  ..., 9.9980e-01,
          9.9993e-01, 9.3247e-05],
         [1.9701e-04, 9.9406e-01, 9.9859e-01,  ..., 6.6676e-05,
          2.4342e-05, 9.3247e-05]],
        [[9.9893e-01, 5.5159e-04, 1.7740e-04,  ..., 5.8222e-04,
          1.5792e-01, 1.5182e-04],
         [3.5632e-04, 5.5159e-04, 1.7740e-04,  ..., 5.8222e-04,
          4.1901e-01, 1.5182e-04],
         [3.5632e-04, 5.5159e-04, 1.7740e-04,  ..., 9.9825e-01,
          2.3783e-01, 9.9954e-01],
         [3.5632e-04, 9.9835e-01, 9.9947e-01,  ..., 5.8222e-04,
          1.8524e-01, 1.5182e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4218e-03, 9.7628e-03, 2.4512e-07,  ..., 1.9952e-03,
          2.1577e-04, 3.4150e-04],
         [1.4218e-03, 7.5998e-03, 2.4512e-07,  ..., 1.8790e-03,
          2.1577e-04, 3.4150e-04],
         [9.9573e-01, 9.1433e-03, 2.4512e-07,  ..., 9.9425e-01,
          2.1577e-04, 9.9898e-01],
         [1.4218e-03, 9.7349e-01, 1.0000e+00,  ..., 1.8790e-03,
          9.9935e-01, 3.4150e-04]],
        [[6.5016e-03, 6.9720e-04, 9.3678e-03,  ..., 6.1990e-04,
          5.6255e-02, 7.7963e-03],
         [6.0849e-03, 6.9720e-04, 6.6480e-03,  ..., 6.1990e-04,
          3.2104e-02, 5.9858e-03],
         [9.7647e-01, 6.9720e-04, 6.6480e-03,  ..., 6.1990e-04,
          6.6758e-02, 9.7593e-01],
         [1.0943e-02, 9.9791e-01, 9.7734e-01,  ..., 9.9814e-01,
          8.4488e-01, 1.0292e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 775:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9687e-01, 5.6405e-04, 1.4139e-03,  ..., 1.9760e-04,
          5.0994e-05, 9.9218e-01],
         [1.0421e-03, 5.6405e-04, 1.3780e-03,  ..., 1.9760e-04,
          5.0994e-05, 1.8534e-03],
         [1.0421e-03, 5.6405e-04, 1.3780e-03,  ..., 9.9941e-01,
          9.9985e-01, 4.1138e-03],
         [1.0421e-03, 9.9831e-01, 9.9583e-01,  ..., 1.9760e-04,
          5.0994e-05, 1.8534e-03]],
        [[9.9900e-01, 1.1910e-03, 1.1062e-04,  ..., 1.2266e-03,
          1.6394e-01, 5.2391e-05],
         [3.3411e-04, 1.0974e-03, 1.1062e-04,  ..., 1.2266e-03,
          3.8030e-01, 5.2391e-05],
         [3.3411e-04, 1.0974e-03, 1.1062e-04,  ..., 9.9632e-01,
          3.2056e-01, 9.9984e-01],
         [3.3411e-04, 9.9661e-01, 9.9967e-01,  ..., 1.2266e-03,
          1.3520e-01, 5.2391e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4151e-03, 1.2815e-02, 6.4940e-07,  ..., 6.2477e-04,
          2.5382e-03, 2.8869e-03],
         [4.4151e-03, 8.5817e-03, 6.4940e-07,  ..., 6.2477e-04,
          2.5114e-03, 2.8869e-03],
         [9.8493e-01, 1.0172e-02, 6.4940e-07,  ..., 9.9813e-01,
          2.5114e-03, 9.8989e-01],
         [6.2364e-03, 9.6843e-01, 1.0000e+00,  ..., 6.2477e-04,
          9.9244e-01, 4.3314e-03]],
        [[1.1570e-02, 6.8874e-05, 1.4648e-03,  ..., 1.2580e-04,
          3.0562e-02, 2.2656e-03],
         [1.1032e-02, 6.8874e-05, 1.4648e-03,  ..., 1.2580e-04,
          1.5802e-02, 2.2656e-03],
         [9.4642e-01, 6.8874e-05, 1.4648e-03,  ..., 1.2580e-04,
          2.5868e-02, 9.9193e-01],
         [3.0976e-02, 9.9979e-01, 9.9561e-01,  ..., 9.9962e-01,
          9.2777e-01, 3.5423e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:10,514 [Process: 0] Synchronize training processes
2024-08-18 15:27:10,515 [Process: 0] Evaluating...
2024-08-18 15:27:10,516 [Process: 0] EPOCH 776:
2024-08-18 15:27:10,518 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:11,647 [Process: 0] Synchronize training processes
2024-08-18 15:27:11,647 [Process: 0] Evaluating...
2024-08-18 15:27:11,649 [Process: 0] EPOCH 777:
2024-08-18 15:27:11,651 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 776:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 6.7720e-04, 7.7828e-04,  ..., 6.3428e-04,
          1.6718e-04, 9.9970e-01],
         [3.6905e-05, 6.7720e-04, 7.7828e-04,  ..., 6.3428e-04,
          1.6718e-04, 9.9206e-05],
         [3.6905e-05, 6.7720e-04, 7.7828e-04,  ..., 9.9810e-01,
          9.9950e-01, 9.9206e-05],
         [3.6905e-05, 9.9797e-01, 9.9767e-01,  ..., 6.3428e-04,
          1.6718e-04, 9.9206e-05]],
        [[9.9994e-01, 2.3612e-03, 5.8607e-03,  ..., 3.9927e-04,
          2.7194e-01, 1.4923e-05],
         [1.9463e-05, 2.3612e-03, 5.3406e-03,  ..., 3.9927e-04,
          1.7213e-01, 1.4923e-05],
         [1.9463e-05, 2.5026e-03, 6.3719e-03,  ..., 9.9880e-01,
          3.7767e-01, 9.9996e-01],
         [1.9463e-05, 9.9278e-01, 9.8243e-01,  ..., 3.9927e-04,
          1.7827e-01, 1.4923e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9019e-03, 1.6092e-02, 7.4045e-09,  ..., 4.8899e-04,
          8.3808e-04, 4.4251e-04],
         [5.2764e-03, 1.0358e-02, 7.4045e-09,  ..., 4.8899e-04,
          8.3808e-04, 4.4251e-04],
         [9.8102e-01, 1.6478e-02, 7.4045e-09,  ..., 9.9853e-01,
          8.3808e-04, 9.9867e-01],
         [6.8048e-03, 9.5707e-01, 1.0000e+00,  ..., 4.8899e-04,
          9.9749e-01, 4.4251e-04]],
        [[8.9247e-03, 5.3866e-04, 6.4866e-03,  ..., 1.4060e-03,
          6.8447e-02, 6.4399e-03],
         [8.9247e-03, 5.3866e-04, 5.6313e-03,  ..., 1.4060e-03,
          3.0878e-02, 4.6990e-03],
         [9.5960e-01, 5.3866e-04, 5.6313e-03,  ..., 1.4060e-03,
          6.6087e-02, 9.8350e-01],
         [2.2549e-02, 9.9838e-01, 9.8225e-01,  ..., 9.9578e-01,
          8.3459e-01, 5.3570e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 777:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 1.1809e-04, 8.2418e-04,  ..., 4.9570e-04,
          5.2892e-05, 9.9767e-01],
         [8.7146e-06, 1.1809e-04, 8.2187e-04,  ..., 4.9570e-04,
          5.2892e-05, 7.7582e-04],
         [8.7146e-06, 1.1809e-04, 8.2187e-04,  ..., 9.9851e-01,
          9.9984e-01, 7.7582e-04],
         [8.7146e-06, 9.9965e-01, 9.9753e-01,  ..., 4.9570e-04,
          5.2892e-05, 7.7582e-04]],
        [[9.9904e-01, 5.3146e-03, 1.1778e-03,  ..., 1.3593e-04,
          2.6303e-01, 5.5264e-04],
         [3.1889e-04, 3.8632e-03, 1.1778e-03,  ..., 1.3593e-04,
          1.9773e-01, 5.5264e-04],
         [3.1889e-04, 5.3568e-03, 1.1778e-03,  ..., 9.9959e-01,
          3.6142e-01, 9.9834e-01],
         [3.1889e-04, 9.8547e-01, 9.9647e-01,  ..., 1.3593e-04,
          1.7782e-01, 5.5264e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:12,781 [Process: 0] Synchronize training processes
2024-08-18 15:27:12,781 [Process: 0] Evaluating...
2024-08-18 15:27:12,783 [Process: 0] EPOCH 778:
2024-08-18 15:27:12,785 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:13,910 [Process: 0] Synchronize training processes
2024-08-18 15:27:13,911 [Process: 0] Evaluating...
2024-08-18 15:27:13,912 [Process: 0] EPOCH 779:
2024-08-18 15:27:13,914 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8113e-03, 8.2448e-03, 1.7040e-07,  ..., 4.9587e-03,
          2.6978e-04, 1.1402e-03],
         [1.8113e-03, 5.5575e-03, 1.7040e-07,  ..., 4.9587e-03,
          2.6978e-04, 1.1402e-03],
         [9.9439e-01, 5.5575e-03, 1.7040e-07,  ..., 9.8034e-01,
          2.6978e-04, 9.9658e-01],
         [1.9924e-03, 9.8064e-01, 1.0000e+00,  ..., 9.7448e-03,
          9.9919e-01, 1.1402e-03]],
        [[2.2680e-03, 3.6373e-04, 7.7580e-03,  ..., 2.2464e-04,
          9.3886e-02, 5.0119e-03],
         [2.2680e-03, 3.6373e-04, 5.6029e-03,  ..., 2.2464e-04,
          5.3380e-02, 4.1367e-03],
         [9.9287e-01, 3.6373e-04, 6.0019e-03,  ..., 2.2464e-04,
          1.1103e-01, 9.8621e-01],
         [2.5919e-03, 9.9891e-01, 9.8064e-01,  ..., 9.9933e-01,
          7.4170e-01, 4.6460e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 778:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9917e-01, 8.4083e-04, 1.0666e-03,  ..., 2.2312e-04,
          2.3408e-04, 9.9957e-01],
         [2.7736e-04, 6.8759e-04, 1.0191e-03,  ..., 2.2312e-04,
          2.3408e-04, 1.4211e-04],
         [2.7736e-04, 6.8759e-04, 1.0191e-03,  ..., 9.9933e-01,
          9.9930e-01, 1.4211e-04],
         [2.7736e-04, 9.9778e-01, 9.9690e-01,  ..., 2.2312e-04,
          2.3408e-04, 1.4211e-04]],
        [[9.9960e-01, 6.5513e-04, 6.6454e-04,  ..., 4.2359e-04,
          9.3231e-02, 2.2959e-05],
         [1.7690e-04, 6.5513e-04, 6.6454e-04,  ..., 4.2359e-04,
          3.2713e-01, 2.2959e-05],
         [1.1026e-04, 6.5513e-04, 6.6454e-04,  ..., 9.9873e-01,
          4.4989e-01, 9.9993e-01],
         [1.1026e-04, 9.9803e-01, 9.9801e-01,  ..., 4.2359e-04,
          1.2975e-01, 2.2959e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5499e-03, 5.4181e-03, 5.7021e-07,  ..., 7.4733e-04,
          1.7420e-04, 8.2329e-04],
         [1.5499e-03, 4.4572e-03, 5.7021e-07,  ..., 7.4733e-04,
          1.7420e-04, 8.2329e-04],
         [9.9535e-01, 4.4572e-03, 5.7021e-07,  ..., 9.9776e-01,
          1.7420e-04, 9.9753e-01],
         [1.5499e-03, 9.8567e-01, 1.0000e+00,  ..., 7.4733e-04,
          9.9948e-01, 8.2329e-04]],
        [[1.0269e-02, 2.7356e-04, 5.4035e-03,  ..., 6.8121e-04,
          2.3127e-01, 1.8672e-03],
         [8.3399e-03, 2.7356e-04, 3.6160e-03,  ..., 6.8121e-04,
          1.0017e-01, 1.8672e-03],
         [9.6611e-01, 2.7356e-04, 3.6160e-03,  ..., 6.8121e-04,
          2.6313e-01, 9.9424e-01],
         [1.5284e-02, 9.9918e-01, 9.8736e-01,  ..., 9.9796e-01,
          4.0543e-01, 2.0216e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 779:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:15,038 [Process: 0] Synchronize training processes
2024-08-18 15:27:15,038 [Process: 0] Evaluating...
2024-08-18 15:27:15,040 [Process: 0] EPOCH 780:
2024-08-18 15:27:15,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9990e-01, 2.4548e-03, 4.7268e-04,  ..., 9.9223e-05,
          2.7130e-04, 9.9687e-01],
         [3.2545e-05, 2.4548e-03, 4.7268e-04,  ..., 9.9223e-05,
          2.7130e-04, 9.9305e-04],
         [3.2545e-05, 2.8258e-03, 4.7268e-04,  ..., 9.9970e-01,
          9.9919e-01, 1.1394e-03],
         [3.2545e-05, 9.9226e-01, 9.9858e-01,  ..., 9.9223e-05,
          2.7130e-04, 9.9305e-04]],
        [[9.9912e-01, 3.4628e-04, 5.1638e-04,  ..., 4.5045e-04,
          8.5073e-02, 3.0193e-04],
         [2.9379e-04, 3.4628e-04, 5.1050e-04,  ..., 4.5045e-04,
          5.6897e-01, 3.0193e-04],
         [2.9379e-04, 3.4628e-04, 5.1050e-04,  ..., 9.9865e-01,
          2.4960e-01, 9.9909e-01],
         [2.9379e-04, 9.9896e-01, 9.9846e-01,  ..., 4.5045e-04,
          9.6358e-02, 3.0193e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7710e-04, 2.4293e-03, 1.7865e-05,  ..., 7.7932e-04,
          4.8462e-05, 3.0791e-04],
         [6.7710e-04, 2.4293e-03, 1.7865e-05,  ..., 7.7932e-04,
          4.8462e-05, 3.0791e-04],
         [9.9797e-01, 2.4293e-03, 1.7865e-05,  ..., 9.9766e-01,
          4.8462e-05, 9.9908e-01],
         [6.7710e-04, 9.9271e-01, 9.9995e-01,  ..., 7.7932e-04,
          9.9985e-01, 3.0791e-04]],
        [[2.4504e-03, 5.4574e-04, 4.0670e-03,  ..., 4.7125e-05,
          2.8734e-01, 8.3188e-03],
         [2.4504e-03, 5.3659e-04, 2.8466e-03,  ..., 4.7125e-05,
          9.7345e-02, 6.7746e-03],
         [9.9232e-01, 5.3659e-04, 2.8466e-03,  ..., 4.7125e-05,
          2.8185e-01, 9.7586e-01],
         [2.7820e-03, 9.9838e-01, 9.9024e-01,  ..., 9.9986e-01,
          3.3347e-01, 9.0511e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 780:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9942e-01, 5.2364e-04, 1.0134e-03,  ..., 1.7949e-04,
          2.5713e-05, 9.9973e-01],
         [1.7709e-04, 5.2364e-04, 9.9274e-04,  ..., 1.7949e-04,
          2.5713e-05, 9.1392e-05],
         [1.7709e-04, 5.2364e-04, 9.9274e-04,  ..., 9.9946e-01,
          9.9992e-01, 9.1392e-05],
         [2.2453e-04, 9.9843e-01, 9.9700e-01,  ..., 1.7949e-04,
          2.5713e-05, 9.1392e-05]],
        [[9.9992e-01, 5.0479e-03, 2.4924e-03,  ..., 1.5984e-04,
          3.7185e-02, 9.9460e-06],
         [2.5632e-05, 3.3633e-03, 2.0180e-03,  ..., 1.5984e-04,
          8.8091e-01, 9.9460e-06],
         [2.5632e-05, 3.9659e-03, 2.0180e-03,  ..., 9.9952e-01,
          4.9035e-02, 9.9997e-01],
         [2.5632e-05, 9.8762e-01, 9.9347e-01,  ..., 1.5984e-04,
          3.2874e-02, 9.9460e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:27:16,169 [Process: 0] Synchronize training processes
2024-08-18 15:27:16,169 [Process: 0] Evaluating...
2024-08-18 15:27:16,171 [Process: 0] EPOCH 781:
2024-08-18 15:27:16,173 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:17,299 [Process: 0] Synchronize training processes
2024-08-18 15:27:17,299 [Process: 0] Evaluating...
2024-08-18 15:27:17,303 [Process: 0] EPOCH 782:
2024-08-18 15:27:17,305 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.6188e-04, 7.0091e-03, 3.7256e-06,  ..., 2.9284e-03,
          1.3822e-04, 2.0815e-03],
         [7.6188e-04, 4.9168e-03, 3.7256e-06,  ..., 2.9284e-03,
          1.3822e-04, 2.0815e-03],
         [9.9771e-01, 4.9168e-03, 3.7256e-06,  ..., 9.9081e-01,
          1.3822e-04, 9.9376e-01],
         [7.6188e-04, 9.8316e-01, 9.9999e-01,  ..., 3.3294e-03,
          9.9959e-01, 2.0815e-03]],
        [[1.7240e-03, 1.7461e-03, 4.2790e-03,  ..., 3.5495e-04,
          3.0323e-01, 2.2018e-03],
         [1.7240e-03, 1.7329e-03, 3.6814e-03,  ..., 3.5495e-04,
          9.7240e-02, 2.2018e-03],
         [9.9483e-01, 1.7329e-03, 3.6814e-03,  ..., 3.5495e-04,
          2.6807e-01, 9.9339e-01],
         [1.7240e-03, 9.9479e-01, 9.8836e-01,  ..., 9.9894e-01,
          3.3146e-01, 2.2018e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 781:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9916e-01, 4.3206e-04, 3.7101e-03,  ..., 4.0773e-04,
          3.7274e-04, 9.9132e-01],
         [2.7967e-04, 4.3206e-04, 2.0190e-03,  ..., 4.0773e-04,
          3.7274e-04, 2.3076e-03],
         [2.7967e-04, 4.3206e-04, 2.0190e-03,  ..., 9.9878e-01,
          9.9888e-01, 4.0599e-03],
         [2.7967e-04, 9.9870e-01, 9.9225e-01,  ..., 4.0773e-04,
          3.7274e-04, 2.3076e-03]],
        [[9.9960e-01, 3.3587e-04, 1.5213e-03,  ..., 2.1485e-04,
          5.7746e-02, 4.0894e-04],
         [1.3419e-04, 3.3587e-04, 1.1783e-03,  ..., 2.1485e-04,
          7.8330e-01, 4.0894e-04],
         [1.3419e-04, 3.3587e-04, 1.1783e-03,  ..., 9.9936e-01,
          6.8537e-02, 9.9877e-01],
         [1.3419e-04, 9.9899e-01, 9.9612e-01,  ..., 2.1485e-04,
          9.0416e-02, 4.0894e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8182e-03, 4.3156e-03, 2.9941e-08,  ..., 1.4724e-03,
          3.4912e-05, 6.3010e-04],
         [1.8182e-03, 2.4417e-03, 2.9941e-08,  ..., 1.4724e-03,
          3.4912e-05, 6.3010e-04],
         [9.9454e-01, 2.4417e-03, 2.9941e-08,  ..., 9.9558e-01,
          3.4912e-05, 9.9811e-01],
         [1.8279e-03, 9.9080e-01, 1.0000e+00,  ..., 1.4724e-03,
          9.9990e-01, 6.3010e-04]],
        [[5.7694e-03, 7.2294e-04, 3.3789e-03,  ..., 1.4366e-04,
          3.0679e-01, 8.5873e-03],
         [4.8232e-03, 7.2294e-04, 2.8974e-03,  ..., 1.4366e-04,
          9.6180e-02, 6.6337e-03],
         [9.8342e-01, 7.2294e-04, 2.8974e-03,  ..., 1.4366e-04,
          2.7667e-01, 9.7361e-01],
         [5.9837e-03, 9.9783e-01, 9.9083e-01,  ..., 9.9957e-01,
          3.2036e-01, 1.1168e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 782:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9924e-01, 8.5358e-04, 6.9136e-04,  ..., 5.0563e-04,
          1.6641e-04, 9.9988e-01],
         [2.5368e-04, 7.3038e-04, 6.6913e-04,  ..., 5.0563e-04,
          1.6641e-04, 4.1558e-05],
         [2.5368e-04, 7.3038e-04, 6.6913e-04,  ..., 9.9848e-01,
          9.9950e-01, 4.1558e-05],
         [2.5368e-04, 9.9769e-01, 9.9797e-01,  ..., 5.0563e-04,
          1.6641e-04, 4.1558e-05]],
        [[9.9930e-01, 1.5967e-03, 6.3518e-04,  ..., 9.1065e-04,
          2.1206e-02, 2.2185e-05],
         [2.3686e-04, 1.5967e-03, 6.3518e-04,  ..., 9.1065e-04,
          8.7948e-01, 2.2185e-05],
         [2.3112e-04, 1.5967e-03, 6.3518e-04,  ..., 9.9727e-01,
          6.0094e-02, 9.9993e-01],
         [2.3112e-04, 9.9521e-01, 9.9809e-01,  ..., 9.1065e-04,
          3.9216e-02, 2.2185e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:18,419 [Process: 0] Synchronize training processes
2024-08-18 15:27:18,419 [Process: 0] Evaluating...
2024-08-18 15:27:18,421 [Process: 0] EPOCH 783:
2024-08-18 15:27:18,423 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:19,539 [Process: 0] Synchronize training processes
2024-08-18 15:27:19,539 [Process: 0] Evaluating...
2024-08-18 15:27:19,541 [Process: 0] EPOCH 784:
2024-08-18 15:27:19,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2440e-03, 1.4046e-03, 3.4337e-06,  ..., 1.2777e-03,
          1.0219e-04, 1.7056e-03],
         [3.2440e-03, 1.3892e-03, 3.4337e-06,  ..., 1.2777e-03,
          1.0219e-04, 1.7056e-03],
         [9.8943e-01, 1.3892e-03, 3.4337e-06,  ..., 9.9617e-01,
          1.0219e-04, 9.9488e-01],
         [4.0822e-03, 9.9582e-01, 9.9999e-01,  ..., 1.2777e-03,
          9.9969e-01, 1.7056e-03]],
        [[5.3252e-04, 2.2941e-03, 1.9468e-03,  ..., 9.3815e-05,
          3.4796e-01, 6.5828e-03],
         [5.3252e-04, 2.2509e-03, 1.9468e-03,  ..., 9.3815e-05,
          9.7285e-02, 6.5828e-03],
         [9.9840e-01, 2.2509e-03, 1.9468e-03,  ..., 9.3815e-05,
          2.7111e-01, 9.7608e-01],
         [5.3252e-04, 9.9320e-01, 9.9416e-01,  ..., 9.9972e-01,
          2.8365e-01, 1.0759e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 783:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9956e-01, 1.3455e-03, 1.5099e-03,  ..., 4.0175e-05,
          3.6216e-05, 9.9923e-01],
         [1.4722e-04, 1.1424e-03, 1.5099e-03,  ..., 4.0175e-05,
          3.6216e-05, 2.5662e-04],
         [1.4722e-04, 1.1424e-03, 1.5099e-03,  ..., 9.9988e-01,
          9.9989e-01, 2.5662e-04],
         [1.4722e-04, 9.9637e-01, 9.9547e-01,  ..., 4.0175e-05,
          3.6216e-05, 2.5662e-04]],
        [[9.9962e-01, 4.1989e-03, 8.2447e-04,  ..., 9.0784e-04,
          1.7559e-02, 4.2574e-04],
         [1.2691e-04, 3.2080e-03, 7.8942e-04,  ..., 9.0784e-04,
          9.2407e-01, 4.2574e-04],
         [1.2691e-04, 3.2080e-03, 7.8942e-04,  ..., 9.9728e-01,
          3.6790e-02, 9.9872e-01],
         [1.2691e-04, 9.8939e-01, 9.9760e-01,  ..., 9.0784e-04,
          2.1580e-02, 4.2574e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.9779e-03, 3.7543e-03, 1.5466e-06,  ..., 3.8395e-04,
          4.5652e-05, 1.9263e-03],
         [3.9779e-03, 2.7703e-03, 1.5466e-06,  ..., 3.8395e-04,
          4.5652e-05, 1.9263e-03],
         [9.8754e-01, 2.7703e-03, 1.5466e-06,  ..., 9.9885e-01,
          4.5652e-05, 9.9408e-01],
         [4.5086e-03, 9.9071e-01, 1.0000e+00,  ..., 3.8395e-04,
          9.9986e-01, 2.0643e-03]],
        [[1.9675e-03, 1.9377e-03, 3.3754e-03,  ..., 9.4231e-05,
          3.4994e-01, 3.1223e-03],
         [1.9675e-03, 1.9377e-03, 3.3754e-03,  ..., 9.4231e-05,
          1.0528e-01, 2.1878e-03],
         [9.9401e-01, 1.9377e-03, 3.3754e-03,  ..., 9.4231e-05,
          2.4883e-01, 9.9250e-01],
         [2.0544e-03, 9.9419e-01, 9.8987e-01,  ..., 9.9972e-01,
          2.9595e-01, 2.1878e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 784:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9933e-01, 1.3502e-03, 2.4388e-03,  ..., 6.3918e-04,
          1.4795e-05, 9.9849e-01],
         [2.1960e-04, 1.3502e-03, 2.1663e-03,  ..., 6.3918e-04,
          1.4795e-05, 4.9598e-04],
         [2.1960e-04, 1.3502e-03, 2.1663e-03,  ..., 9.9808e-01,
          9.9996e-01, 5.1698e-04],
         [2.2899e-04, 9.9595e-01, 9.9323e-01,  ..., 6.3918e-04,
          1.4795e-05, 4.9598e-04]],
        [[9.9975e-01, 1.0263e-03, 1.6431e-03,  ..., 6.9099e-04,
          1.8942e-02, 1.3376e-04],
         [8.1860e-05, 1.0263e-03, 1.5996e-03,  ..., 6.9099e-04,
          9.0099e-01, 1.3376e-04],
         [8.1860e-05, 1.0263e-03, 1.5996e-03,  ..., 9.9793e-01,
          3.9002e-02, 9.9960e-01],
         [8.1860e-05, 9.9692e-01, 9.9516e-01,  ..., 6.9099e-04,
          4.1061e-02, 1.3376e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:20,673 [Process: 0] Synchronize training processes
2024-08-18 15:27:20,673 [Process: 0] Evaluating...
2024-08-18 15:27:20,675 [Process: 0] EPOCH 785:
2024-08-18 15:27:20,677 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:21,797 [Process: 0] Synchronize training processes
2024-08-18 15:27:21,797 [Process: 0] Evaluating...
2024-08-18 15:27:21,799 [Process: 0] EPOCH 786:
2024-08-18 15:27:21,801 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.3036e-04, 9.5428e-04, 5.6232e-08,  ..., 2.1220e-03,
          1.3898e-05, 1.0384e-03],
         [8.3036e-04, 9.5428e-04, 5.6232e-08,  ..., 2.1220e-03,
          1.3898e-05, 1.0384e-03],
         [9.9751e-01, 9.5428e-04, 5.6232e-08,  ..., 9.9363e-01,
          1.3898e-05, 9.9688e-01],
         [8.3036e-04, 9.9714e-01, 1.0000e+00,  ..., 2.1220e-03,
          9.9996e-01, 1.0384e-03]],
        [[2.1950e-03, 1.7075e-03, 7.9291e-04,  ..., 1.9415e-04,
          3.7271e-01, 2.7239e-03],
         [2.1950e-03, 1.7075e-03, 7.5417e-04,  ..., 1.9415e-04,
          9.9309e-02, 2.7239e-03],
         [9.9341e-01, 1.7075e-03, 7.5417e-04,  ..., 1.9415e-04,
          2.3536e-01, 9.9183e-01],
         [2.1950e-03, 9.9488e-01, 9.9770e-01,  ..., 9.9942e-01,
          2.9263e-01, 2.7239e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 785:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9850e-01, 4.5932e-04, 1.2322e-03,  ..., 3.9028e-04,
          1.9359e-04, 9.9928e-01],
         [5.0003e-04, 4.5932e-04, 1.2322e-03,  ..., 3.9028e-04,
          1.9359e-04, 2.3952e-04],
         [5.0003e-04, 4.5932e-04, 1.2322e-03,  ..., 9.9883e-01,
          9.9942e-01, 2.3952e-04],
         [5.0003e-04, 9.9862e-01, 9.9630e-01,  ..., 3.9028e-04,
          1.9359e-04, 2.3952e-04]],
        [[9.9600e-01, 4.2123e-03, 1.9994e-03,  ..., 1.3395e-04,
          1.1137e-01, 3.4088e-05],
         [1.3347e-03, 2.7000e-03, 1.9994e-03,  ..., 1.3395e-04,
          7.1775e-01, 3.4088e-05],
         [1.3347e-03, 2.7000e-03, 1.9994e-03,  ..., 9.9960e-01,
          7.7727e-02, 9.9990e-01],
         [1.3347e-03, 9.9039e-01, 9.9400e-01,  ..., 1.3395e-04,
          9.3160e-02, 3.4088e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9943e-03, 7.1571e-04, 8.8850e-08,  ..., 1.8991e-03,
          8.7506e-05, 2.0769e-03],
         [1.9943e-03, 7.1571e-04, 8.8850e-08,  ..., 1.8991e-03,
          8.7506e-05, 2.0769e-03],
         [9.9402e-01, 7.1571e-04, 8.8850e-08,  ..., 9.9430e-01,
          8.7506e-05, 9.9377e-01],
         [1.9943e-03, 9.9785e-01, 1.0000e+00,  ..., 1.8991e-03,
          9.9974e-01, 2.0769e-03]],
        [[3.5784e-04, 2.5351e-04, 2.6132e-03,  ..., 2.0848e-04,
          4.2027e-01, 1.2273e-02],
         [3.5784e-04, 2.5351e-04, 2.5409e-03,  ..., 2.0848e-04,
          9.4452e-02, 8.6663e-03],
         [9.9893e-01, 2.5351e-04, 2.5409e-03,  ..., 2.0848e-04,
          2.0251e-01, 9.6538e-01],
         [3.5784e-04, 9.9924e-01, 9.9230e-01,  ..., 9.9937e-01,
          2.8277e-01, 1.3685e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 786:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:22,926 [Process: 0] Synchronize training processes
2024-08-18 15:27:22,926 [Process: 0] Evaluating...
2024-08-18 15:27:22,928 [Process: 0] EPOCH 787:
2024-08-18 15:27:22,930 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9971e-01, 4.9851e-04, 2.8627e-03,  ..., 2.3829e-04,
          2.3813e-05, 9.9953e-01],
         [9.5452e-05, 4.9851e-04, 2.6792e-03,  ..., 2.3829e-04,
          2.3813e-05, 1.4601e-04],
         [9.5452e-05, 4.9851e-04, 2.6792e-03,  ..., 9.9929e-01,
          9.9993e-01, 1.8265e-04],
         [9.5452e-05, 9.9850e-01, 9.9178e-01,  ..., 2.3829e-04,
          2.3813e-05, 1.4601e-04]],
        [[9.9990e-01, 1.1546e-03, 3.2683e-04,  ..., 4.7003e-05,
          2.8178e-02, 2.8620e-04],
         [3.3463e-05, 1.1022e-03, 3.2683e-04,  ..., 4.7003e-05,
          8.7487e-01, 2.8620e-04],
         [3.3463e-05, 1.1022e-03, 3.2683e-04,  ..., 9.9986e-01,
          5.6112e-02, 9.9914e-01],
         [3.3463e-05, 9.9664e-01, 9.9902e-01,  ..., 4.7003e-05,
          4.0840e-02, 2.8620e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8735e-03, 9.5680e-04, 8.3464e-07,  ..., 9.3488e-04,
          4.8450e-05, 4.8938e-04],
         [2.8717e-03, 9.5680e-04, 8.3464e-07,  ..., 9.3488e-04,
          4.8450e-05, 4.8938e-04],
         [9.9138e-01, 9.5680e-04, 8.3464e-07,  ..., 9.9720e-01,
          4.8450e-05, 9.9853e-01],
         [2.8717e-03, 9.9713e-01, 1.0000e+00,  ..., 9.3488e-04,
          9.9985e-01, 4.8938e-04]],
        [[9.4966e-04, 6.4135e-04, 6.1341e-03,  ..., 3.1310e-04,
          4.3593e-01, 4.8851e-03],
         [9.4966e-04, 6.4135e-04, 5.7051e-03,  ..., 3.1310e-04,
          7.3317e-02, 4.8851e-03],
         [9.9715e-01, 6.4135e-04, 5.3810e-03,  ..., 3.1310e-04,
          2.3244e-01, 9.8300e-01],
         [9.4966e-04, 9.9808e-01, 9.8278e-01,  ..., 9.9906e-01,
          2.5831e-01, 7.2288e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 787:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9700e-01, 6.2936e-03, 2.1048e-03,  ..., 2.8511e-04,
          5.8377e-05, 9.9976e-01],
         [9.5065e-04, 3.5360e-03, 1.9216e-03,  ..., 2.8511e-04,
          5.8377e-05, 8.1289e-05],
         [9.5065e-04, 3.5595e-03, 1.9216e-03,  ..., 9.9914e-01,
          9.9982e-01, 8.1289e-05],
         [1.0988e-03, 9.8661e-01, 9.9405e-01,  ..., 2.8511e-04,
          5.8377e-05, 8.1289e-05]],
        [[9.9943e-01, 7.1923e-03, 8.4615e-04,  ..., 7.1331e-04,
          9.7617e-02, 2.1147e-05],
         [1.8922e-04, 6.6040e-03, 8.4615e-04,  ..., 7.1331e-04,
          5.4573e-01, 2.1147e-05],
         [1.8922e-04, 6.3917e-03, 8.4615e-04,  ..., 9.9786e-01,
          1.2287e-01, 9.9994e-01],
         [1.8922e-04, 9.7981e-01, 9.9746e-01,  ..., 7.1331e-04,
          2.3378e-01, 2.1147e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.7710e-04, 1.4455e-03, 1.9693e-08,  ..., 5.1576e-04,
          6.1164e-05, 7.3414e-04],
         [6.7710e-04, 1.4455e-03, 1.9693e-08,  ..., 5.1576e-04,
          6.1164e-05, 7.3414e-04],
         [9.9797e-01, 1.4455e-03, 1.9693e-08,  ..., 9.9845e-01,
          6.1164e-05, 9.9780e-01],
         [6.7710e-04, 9.9566e-01, 1.0000e+00,  ..., 5.1576e-04,
          9.9982e-01, 7.3414e-04]],
        [[1.3924e-03, 5.6650e-05, 7.6288e-04,  ..., 1.1384e-04,
          4.8048e-01, 1.6349e-02],
         [1.3924e-03, 5.6650e-05, 7.6288e-04,  ..., 1.1384e-04,
          8.0837e-02, 5.6474e-03],
         [9.9582e-01, 5.6650e-05, 7.6288e-04,  ..., 1.1384e-04,
          2.1997e-01, 9.7236e-01],
         [1.3924e-03, 9.9983e-01, 9.9771e-01,  ..., 9.9966e-01,
          2.1872e-01, 5.6474e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:24,055 [Process: 0] Synchronize training processes
2024-08-18 15:27:24,055 [Process: 0] Evaluating...
2024-08-18 15:27:24,057 [Process: 0] EPOCH 788:
2024-08-18 15:27:24,059 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:25,189 [Process: 0] Synchronize training processes
2024-08-18 15:27:25,190 [Process: 0] Evaluating...
2024-08-18 15:27:25,191 [Process: 0] EPOCH 789:
2024-08-18 15:27:25,193 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 788:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9897e-01, 5.6741e-04, 3.5353e-03,  ..., 3.7377e-04,
          1.4475e-05, 9.8722e-01],
         [3.4484e-04, 5.6741e-04, 3.0713e-03,  ..., 3.7377e-04,
          1.4475e-05, 6.2400e-03],
         [3.4484e-04, 5.6741e-04, 3.4935e-03,  ..., 9.9888e-01,
          9.9996e-01, 3.2717e-03],
         [3.4484e-04, 9.9830e-01, 9.8990e-01,  ..., 3.7377e-04,
          1.4475e-05, 3.2717e-03]],
        [[9.9960e-01, 1.8055e-03, 3.5747e-03,  ..., 9.3472e-05,
          4.7909e-03, 1.2323e-04],
         [1.3468e-04, 1.8055e-03, 2.7407e-03,  ..., 9.3472e-05,
          9.7854e-01, 1.2323e-04],
         [1.3468e-04, 1.8055e-03, 2.7407e-03,  ..., 9.9972e-01,
          1.1883e-02, 9.9963e-01],
         [1.3468e-04, 9.9458e-01, 9.9094e-01,  ..., 9.3472e-05,
          4.7909e-03, 1.2323e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.5037e-03, 4.6197e-04, 1.2870e-06,  ..., 4.1964e-03,
          7.5982e-05, 7.5250e-03],
         [3.0320e-03, 4.6197e-04, 1.2870e-06,  ..., 3.9850e-03,
          7.5982e-05, 7.2755e-03],
         [9.9043e-01, 4.6197e-04, 1.2870e-06,  ..., 9.8726e-01,
          7.5982e-05, 9.7516e-01],
         [3.0320e-03, 9.9861e-01, 1.0000e+00,  ..., 4.5539e-03,
          9.9977e-01, 1.0041e-02]],
        [[1.5380e-03, 7.1418e-04, 1.2579e-03,  ..., 1.4365e-05,
          4.7123e-01, 1.1932e-03],
         [1.5380e-03, 7.1418e-04, 1.2579e-03,  ..., 1.4365e-05,
          7.2637e-02, 1.1932e-03],
         [9.9539e-01, 7.1418e-04, 1.2579e-03,  ..., 1.4365e-05,
          2.3532e-01, 9.9642e-01],
         [1.5380e-03, 9.9786e-01, 9.9623e-01,  ..., 9.9996e-01,
          2.2081e-01, 1.1932e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 789:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9915e-01, 2.1159e-03, 1.7252e-03,  ..., 9.8151e-04,
          2.3410e-05, 9.9695e-01],
         [2.8168e-04, 2.1159e-03, 1.7252e-03,  ..., 9.8151e-04,
          2.3410e-05, 1.0993e-03],
         [2.8168e-04, 2.1159e-03, 1.7252e-03,  ..., 9.9706e-01,
          9.9993e-01, 9.7657e-04],
         [2.8168e-04, 9.9365e-01, 9.9482e-01,  ..., 9.8151e-04,
          2.3410e-05, 9.7657e-04]],
        [[9.9244e-01, 1.3031e-03, 1.3403e-03,  ..., 1.5223e-04,
          3.6833e-02, 2.9956e-04],
         [3.0787e-03, 1.3031e-03, 1.3403e-03,  ..., 1.5223e-04,
          9.0833e-01, 2.9956e-04],
         [2.2422e-03, 1.3031e-03, 1.3403e-03,  ..., 9.9954e-01,
          3.6826e-02, 9.9910e-01],
         [2.2422e-03, 9.9609e-01, 9.9598e-01,  ..., 1.5223e-04,
          1.8011e-02, 2.9956e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:26,321 [Process: 0] Synchronize training processes
2024-08-18 15:27:26,322 [Process: 0] Evaluating...
2024-08-18 15:27:26,323 [Process: 0] EPOCH 790:
2024-08-18 15:27:26,325 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:27,451 [Process: 0] Synchronize training processes
2024-08-18 15:27:27,452 [Process: 0] Evaluating...
2024-08-18 15:27:27,453 [Process: 0] EPOCH 791:
2024-08-18 15:27:27,455 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6980e-03, 5.9673e-04, 1.6493e-08,  ..., 3.4168e-03,
          1.1248e-05, 1.3267e-03],
         [2.6980e-03, 5.9673e-04, 1.6493e-08,  ..., 3.4168e-03,
          1.1248e-05, 1.3267e-03],
         [9.9183e-01, 5.9673e-04, 1.6493e-08,  ..., 9.8975e-01,
          1.1248e-05, 9.9602e-01],
         [2.7728e-03, 9.9821e-01, 1.0000e+00,  ..., 3.4168e-03,
          9.9997e-01, 1.3267e-03]],
        [[2.9998e-03, 8.8948e-04, 8.6011e-04,  ..., 8.8881e-05,
          5.2740e-01, 6.2064e-03],
         [2.9998e-03, 8.8948e-04, 8.6011e-04,  ..., 8.8881e-05,
          9.9099e-02, 4.4669e-03],
         [9.9085e-01, 8.8948e-04, 8.6011e-04,  ..., 8.8881e-05,
          1.7095e-01, 9.8486e-01],
         [3.1487e-03, 9.9733e-01, 9.9742e-01,  ..., 9.9973e-01,
          2.0255e-01, 4.4669e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 790:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9983e-01, 9.4473e-04, 5.8435e-04,  ..., 6.9568e-04,
          9.6870e-05, 9.9959e-01],
         [5.6708e-05, 9.4473e-04, 5.8435e-04,  ..., 6.9568e-04,
          9.6870e-05, 1.3535e-04],
         [5.6708e-05, 9.4473e-04, 5.8435e-04,  ..., 9.9791e-01,
          9.9971e-01, 1.3535e-04],
         [5.6708e-05, 9.9717e-01, 9.9825e-01,  ..., 6.9568e-04,
          9.6870e-05, 1.3535e-04]],
        [[9.9963e-01, 1.8694e-03, 2.5320e-03,  ..., 7.3001e-04,
          5.6027e-03, 4.8610e-05],
         [1.2175e-04, 1.8694e-03, 2.5320e-03,  ..., 7.3001e-04,
          9.8563e-01, 4.8610e-05],
         [1.2175e-04, 1.8694e-03, 2.5320e-03,  ..., 9.9781e-01,
          5.3860e-03, 9.9985e-01],
         [1.2175e-04, 9.9439e-01, 9.9240e-01,  ..., 7.3001e-04,
          3.3853e-03, 4.8610e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8162e-03, 1.7450e-03, 1.9811e-06,  ..., 1.1357e-02,
          7.1628e-05, 4.9189e-03],
         [1.8162e-03, 1.7450e-03, 1.9811e-06,  ..., 7.0636e-03,
          7.1628e-05, 3.2853e-03],
         [9.9455e-01, 1.7450e-03, 1.9811e-06,  ..., 9.7334e-01,
          7.1628e-05, 9.8851e-01],
         [1.8162e-03, 9.9477e-01, 9.9999e-01,  ..., 8.2375e-03,
          9.9979e-01, 3.2853e-03]],
        [[1.8147e-02, 1.6689e-03, 1.2251e-03,  ..., 7.3485e-06,
          4.5290e-01, 2.5059e-03],
         [6.0610e-03, 1.6689e-03, 1.2251e-03,  ..., 7.3485e-06,
          8.5892e-02, 2.4360e-03],
         [9.6973e-01, 1.6689e-03, 1.2251e-03,  ..., 7.3485e-06,
          2.0746e-01, 9.9262e-01],
         [6.0610e-03, 9.9499e-01, 9.9632e-01,  ..., 9.9998e-01,
          2.5375e-01, 2.4360e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 791:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9967e-01, 2.5089e-03, 5.6396e-04,  ..., 3.8911e-03,
          4.8876e-05, 9.9928e-01],
         [1.1044e-04, 2.5089e-03, 5.6396e-04,  ..., 2.8231e-03,
          4.8876e-05, 2.4051e-04],
         [1.1044e-04, 2.5089e-03, 5.6396e-04,  ..., 9.9046e-01,
          9.9985e-01, 2.4051e-04],
         [1.1044e-04, 9.9247e-01, 9.9831e-01,  ..., 2.8231e-03,
          4.8876e-05, 2.4051e-04]],
        [[9.9760e-01, 2.5813e-03, 3.8534e-03,  ..., 8.5172e-04,
          9.4794e-04, 1.9579e-04],
         [1.1684e-03, 2.4120e-03, 3.5762e-03,  ..., 8.5172e-04,
          9.9659e-01, 1.9579e-04],
         [6.1405e-04, 2.4120e-03, 3.5762e-03,  ..., 9.9744e-01,
          1.5184e-03, 9.9941e-01],
         [6.1405e-04, 9.9259e-01, 9.8899e-01,  ..., 8.5172e-04,
          9.4794e-04, 1.9579e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:28,582 [Process: 0] Synchronize training processes
2024-08-18 15:27:28,582 [Process: 0] Evaluating...
2024-08-18 15:27:28,586 [Process: 0] EPOCH 792:
2024-08-18 15:27:28,587 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:29,714 [Process: 0] Synchronize training processes
2024-08-18 15:27:29,715 [Process: 0] Evaluating...
2024-08-18 15:27:29,716 [Process: 0] EPOCH 793:
2024-08-18 15:27:29,718 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5280e-03, 1.8925e-03, 1.0698e-07,  ..., 1.2829e-03,
          8.3410e-05, 7.4651e-03],
         [1.5280e-03, 1.8925e-03, 1.0698e-07,  ..., 1.2829e-03,
          8.3410e-05, 6.9515e-03],
         [9.9542e-01, 1.8925e-03, 1.0698e-07,  ..., 9.9615e-01,
          8.3410e-05, 9.7533e-01],
         [1.5280e-03, 9.9432e-01, 1.0000e+00,  ..., 1.2829e-03,
          9.9975e-01, 1.0258e-02]],
        [[4.4793e-03, 1.0486e-04, 1.6891e-03,  ..., 9.7092e-05,
          6.4095e-01, 3.5604e-03],
         [2.8421e-03, 1.0486e-04, 1.4896e-03,  ..., 9.7092e-05,
          7.6313e-02, 2.7247e-03],
         [9.8984e-01, 1.0486e-04, 1.4896e-03,  ..., 9.7092e-05,
          1.5141e-01, 9.9099e-01],
         [2.8421e-03, 9.9969e-01, 9.9533e-01,  ..., 9.9971e-01,
          1.3133e-01, 2.7247e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 792:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9739e-01, 3.3102e-03, 3.8141e-03,  ..., 5.6629e-04,
          8.3637e-05, 9.9993e-01],
         [6.6965e-04, 3.3102e-03, 3.0868e-03,  ..., 5.6629e-04,
          8.3637e-05, 2.3131e-05],
         [6.6965e-04, 3.8081e-03, 3.0868e-03,  ..., 9.9830e-01,
          9.9975e-01, 2.3131e-05],
         [1.2738e-03, 9.8957e-01, 9.9001e-01,  ..., 5.6629e-04,
          8.3637e-05, 2.3131e-05]],
        [[9.9932e-01, 8.6157e-03, 5.5690e-03,  ..., 8.4273e-04,
          3.6032e-03, 1.3410e-05],
         [2.2523e-04, 7.0757e-03, 5.5690e-03,  ..., 8.4273e-04,
          9.8830e-01, 1.3410e-05],
         [2.2523e-04, 8.5474e-03, 6.9457e-03,  ..., 9.9747e-01,
          4.4921e-03, 9.9996e-01],
         [2.2523e-04, 9.7576e-01, 9.8192e-01,  ..., 8.4273e-04,
          3.6032e-03, 1.3410e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7132e-03, 1.1445e-03, 2.2504e-06,  ..., 1.4545e-03,
          1.7148e-05, 1.0273e-03],
         [1.7132e-03, 1.1445e-03, 2.2504e-06,  ..., 1.4545e-03,
          1.7148e-05, 1.0273e-03],
         [9.9486e-01, 1.1445e-03, 2.2504e-06,  ..., 9.9564e-01,
          1.7148e-05, 9.9692e-01],
         [1.7132e-03, 9.9657e-01, 9.9999e-01,  ..., 1.4545e-03,
          9.9995e-01, 1.0273e-03]],
        [[5.9063e-03, 1.4692e-04, 1.3394e-03,  ..., 2.8682e-05,
          6.4404e-01, 3.1222e-04],
         [3.1057e-03, 1.4692e-04, 1.3394e-03,  ..., 2.8682e-05,
          9.1379e-02, 3.1222e-04],
         [9.8788e-01, 1.4692e-04, 1.3394e-03,  ..., 2.8682e-05,
          1.2371e-01, 9.9906e-01],
         [3.1057e-03, 9.9956e-01, 9.9598e-01,  ..., 9.9991e-01,
          1.4087e-01, 3.1222e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 793:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 15:27:30,844 [Process: 0] Synchronize training processes
2024-08-18 15:27:30,844 [Process: 0] Evaluating...
2024-08-18 15:27:30,846 [Process: 0] EPOCH 794:
2024-08-18 15:27:30,848 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:31,973 [Process: 0] Synchronize training processes
2024-08-18 15:27:31,973 [Process: 0] Evaluating...
2024-08-18 15:27:31,975 [Process: 0] EPOCH 795:
2024-08-18 15:27:31,977 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9881e-01, 9.3178e-04, 1.8058e-03,  ..., 1.3159e-04,
          8.8088e-05, 9.9869e-01],
         [3.9360e-04, 9.3178e-04, 1.8058e-03,  ..., 1.3159e-04,
          8.8088e-05, 4.3540e-04],
         [3.9360e-04, 9.3178e-04, 1.8058e-03,  ..., 9.9961e-01,
          9.9974e-01, 4.3540e-04],
         [3.9926e-04, 9.9720e-01, 9.9458e-01,  ..., 1.3159e-04,
          8.8088e-05, 4.3540e-04]],
        [[9.9851e-01, 1.4768e-03, 7.8720e-04,  ..., 3.0518e-04,
          4.1669e-02, 4.9637e-04],
         [4.9698e-04, 1.4768e-03, 7.8720e-04,  ..., 3.0518e-04,
          9.0501e-01, 4.9637e-04],
         [4.9698e-04, 1.4768e-03, 7.8720e-04,  ..., 9.9908e-01,
          4.1171e-02, 9.9851e-01],
         [4.9698e-04, 9.9557e-01, 9.9764e-01,  ..., 3.0518e-04,
          1.2152e-02, 4.9637e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2794e-02, 3.4375e-03, 1.4457e-08,  ..., 5.2445e-04,
          3.5210e-06, 6.6976e-04],
         [5.7328e-03, 3.4375e-03, 1.4457e-08,  ..., 5.2445e-04,
          3.5210e-06, 6.6976e-04],
         [9.7574e-01, 3.4375e-03, 1.4457e-08,  ..., 9.9843e-01,
          3.5210e-06, 9.9799e-01],
         [5.7328e-03, 9.8969e-01, 1.0000e+00,  ..., 5.2445e-04,
          9.9999e-01, 6.6976e-04]],
        [[1.2678e-03, 1.0469e-03, 5.9938e-04,  ..., 2.0509e-05,
          9.0653e-01, 3.4682e-03],
         [1.2678e-03, 1.0469e-03, 5.9938e-04,  ..., 2.0509e-05,
          2.9899e-02, 1.8129e-03],
         [9.9620e-01, 1.0469e-03, 5.9938e-04,  ..., 2.0509e-05,
          3.4202e-02, 9.9291e-01],
         [1.2678e-03, 9.9686e-01, 9.9820e-01,  ..., 9.9994e-01,
          2.9369e-02, 1.8129e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 794:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9701e-01, 6.6399e-03, 4.7800e-03,  ..., 9.6777e-05,
          3.5683e-04, 9.9746e-01],
         [9.9569e-04, 6.0957e-03, 4.6150e-03,  ..., 9.6777e-05,
          3.5683e-04, 8.4530e-04],
         [9.9569e-04, 9.6321e-03, 5.1260e-03,  ..., 9.9971e-01,
          9.9893e-01, 8.4530e-04],
         [9.9569e-04, 9.7763e-01, 9.8548e-01,  ..., 9.6777e-05,
          3.5683e-04, 8.4530e-04]],
        [[9.9926e-01, 1.1903e-03, 2.4343e-03,  ..., 5.5019e-05,
          6.3261e-02, 3.9477e-05],
         [2.6059e-04, 1.1903e-03, 2.4343e-03,  ..., 5.5019e-05,
          8.7712e-01, 3.9477e-05],
         [2.4106e-04, 1.1903e-03, 2.4343e-03,  ..., 9.9983e-01,
          2.6001e-02, 9.9988e-01],
         [2.4106e-04, 9.9643e-01, 9.9270e-01,  ..., 5.5019e-05,
          3.3623e-02, 3.9477e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.3958e-03, 1.3329e-03, 4.9828e-08,  ..., 4.9390e-03,
          5.7596e-05, 2.5970e-03],
         [5.4575e-03, 1.3329e-03, 4.9828e-08,  ..., 4.9390e-03,
          5.7596e-05, 2.5970e-03],
         [9.7969e-01, 1.3329e-03, 4.9828e-08,  ..., 9.8431e-01,
          5.7596e-05, 9.9221e-01],
         [5.4575e-03, 9.9600e-01, 1.0000e+00,  ..., 5.8139e-03,
          9.9983e-01, 2.5970e-03]],
        [[1.2073e-03, 1.7853e-03, 1.4510e-03,  ..., 2.1475e-04,
          9.9639e-01, 1.0387e-02],
         [1.2073e-03, 1.6175e-03, 1.3634e-03,  ..., 2.1475e-04,
          1.1855e-03, 6.0364e-03],
         [9.9638e-01, 1.6175e-03, 1.3634e-03,  ..., 2.1475e-04,
          1.2372e-03, 9.7754e-01],
         [1.2073e-03, 9.9498e-01, 9.9582e-01,  ..., 9.9936e-01,
          1.1855e-03, 6.0364e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 795:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:33,094 [Process: 0] Synchronize training processes
2024-08-18 15:27:33,094 [Process: 0] Evaluating...
2024-08-18 15:27:33,096 [Process: 0] EPOCH 796:
2024-08-18 15:27:33,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9812e-01, 2.5091e-03, 1.4401e-03,  ..., 5.5960e-04,
          1.8298e-04, 9.8210e-01],
         [6.2735e-04, 2.5091e-03, 1.4401e-03,  ..., 5.5960e-04,
          1.8298e-04, 8.2384e-03],
         [6.2735e-04, 2.5091e-03, 1.4401e-03,  ..., 9.9832e-01,
          9.9945e-01, 4.8315e-03],
         [6.2735e-04, 9.9247e-01, 9.9568e-01,  ..., 5.5960e-04,
          1.8298e-04, 4.8315e-03]],
        [[9.9909e-01, 8.3012e-04, 1.2312e-03,  ..., 1.9192e-04,
          2.2917e-03, 7.3579e-05],
         [3.0433e-04, 8.3012e-04, 1.2312e-03,  ..., 1.9192e-04,
          9.9118e-01, 7.3579e-05],
         [3.0433e-04, 8.3012e-04, 1.2312e-03,  ..., 9.9942e-01,
          2.2917e-03, 9.9978e-01],
         [3.0433e-04, 9.9751e-01, 9.9631e-01,  ..., 1.9192e-04,
          4.2383e-03, 7.3579e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.6429e-03, 1.5212e-03, 2.9121e-06,  ..., 2.9288e-02,
          1.8749e-05, 3.3842e-04],
         [3.6429e-03, 1.5212e-03, 2.9121e-06,  ..., 1.0942e-02,
          1.8749e-05, 3.3842e-04],
         [9.8827e-01, 1.5212e-03, 2.9121e-06,  ..., 9.4595e-01,
          1.8749e-05, 9.9898e-01],
         [4.4405e-03, 9.9544e-01, 9.9999e-01,  ..., 1.3823e-02,
          9.9994e-01, 3.3842e-04]],
        [[3.1355e-03, 8.7762e-04, 3.6339e-04,  ..., 6.0449e-06,
          9.9102e-01, 3.0539e-03],
         [3.1355e-03, 8.7762e-04, 3.6339e-04,  ..., 6.0449e-06,
          2.4712e-03, 3.0539e-03],
         [9.9059e-01, 8.7762e-04, 3.6339e-04,  ..., 6.0449e-06,
          2.4712e-03, 9.9084e-01],
         [3.1355e-03, 9.9737e-01, 9.9891e-01,  ..., 9.9998e-01,
          4.0407e-03, 3.0539e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 796:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9463e-01, 3.3719e-03, 5.0624e-04,  ..., 1.0168e-03,
          7.0015e-04, 9.9539e-01],
         [1.3439e-03, 3.3719e-03, 5.0624e-04,  ..., 1.0168e-03,
          7.0015e-04, 1.6578e-03],
         [1.3439e-03, 3.3719e-03, 5.0624e-04,  ..., 9.9695e-01,
          9.9790e-01, 1.4750e-03],
         [2.6858e-03, 9.8988e-01, 9.9848e-01,  ..., 1.0168e-03,
          7.0015e-04, 1.4750e-03]],
        [[9.9908e-01, 1.3473e-03, 3.6878e-03,  ..., 3.6093e-04,
          1.1473e-02, 4.7038e-05],
         [3.0825e-04, 1.3473e-03, 2.5044e-03,  ..., 3.6093e-04,
          9.7800e-01, 4.7038e-05],
         [3.0825e-04, 1.3473e-03, 2.5044e-03,  ..., 9.9892e-01,
          6.0646e-03, 9.9986e-01],
         [3.0825e-04, 9.9596e-01, 9.9130e-01,  ..., 3.6093e-04,
          4.4572e-03, 4.7038e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.5353e-04, 3.1759e-03, 1.1748e-06,  ..., 3.8567e-04,
          1.1862e-05, 5.9561e-03],
         [2.5353e-04, 3.2721e-03, 1.1748e-06,  ..., 3.8567e-04,
          1.1862e-05, 4.1617e-03],
         [9.9924e-01, 3.1759e-03, 1.1748e-06,  ..., 9.9884e-01,
          1.1862e-05, 9.8572e-01],
         [2.5353e-04, 9.9038e-01, 1.0000e+00,  ..., 3.8567e-04,
          9.9996e-01, 4.1617e-03]],
        [[1.9485e-02, 7.7938e-04, 9.4046e-04,  ..., 2.7972e-05,
          9.7255e-01, 2.6063e-03],
         [6.2734e-03, 7.7938e-04, 9.4046e-04,  ..., 2.7972e-05,
          8.4405e-03, 2.4701e-03],
         [9.6797e-01, 7.7938e-04, 9.4046e-04,  ..., 2.7972e-05,
          9.3689e-03, 9.9245e-01],
         [6.2734e-03, 9.9766e-01, 9.9718e-01,  ..., 9.9992e-01,
          9.6387e-03, 2.4701e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:34,227 [Process: 0] Synchronize training processes
2024-08-18 15:27:34,227 [Process: 0] Evaluating...
2024-08-18 15:27:34,229 [Process: 0] EPOCH 797:
2024-08-18 15:27:34,231 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:35,396 [Process: 0] Synchronize training processes
2024-08-18 15:27:35,397 [Process: 0] Evaluating...
2024-08-18 15:27:35,398 [Process: 0] EPOCH 798:
2024-08-18 15:27:35,400 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 797:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9552e-01, 2.6150e-03, 8.8457e-04,  ..., 1.1445e-04,
          6.1143e-05, 9.9601e-01],
         [1.4945e-03, 2.5860e-03, 8.8457e-04,  ..., 1.1445e-04,
          6.1143e-05, 1.1840e-03],
         [1.4945e-03, 2.5860e-03, 8.8457e-04,  ..., 9.9966e-01,
          9.9982e-01, 1.6226e-03],
         [1.4945e-03, 9.9221e-01, 9.9735e-01,  ..., 1.1445e-04,
          6.1143e-05, 1.1840e-03]],
        [[9.9983e-01, 4.0291e-03, 9.4293e-04,  ..., 1.7150e-04,
          5.0626e-03, 7.7631e-05],
         [5.6355e-05, 3.4459e-03, 9.4293e-04,  ..., 1.7150e-04,
          9.7854e-01, 7.7631e-05],
         [5.6355e-05, 3.6162e-03, 9.4293e-04,  ..., 9.9949e-01,
          7.1104e-03, 9.9977e-01],
         [5.6355e-05, 9.8891e-01, 9.9717e-01,  ..., 1.7150e-04,
          9.2900e-03, 7.7631e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9097e-03, 4.2682e-04, 1.5898e-04,  ..., 9.9308e-04,
          9.3133e-06, 2.3979e-03],
         [1.9097e-03, 4.2682e-04, 1.5898e-04,  ..., 9.9308e-04,
          9.3133e-06, 2.3979e-03],
         [9.9427e-01, 4.2682e-04, 1.5898e-04,  ..., 9.9702e-01,
          9.3133e-06, 9.9281e-01],
         [1.9097e-03, 9.9872e-01, 9.9952e-01,  ..., 9.9308e-04,
          9.9997e-01, 2.3979e-03]],
        [[2.5086e-03, 1.9426e-03, 9.5409e-04,  ..., 7.8343e-05,
          9.9710e-01, 4.8666e-04],
         [2.5086e-03, 1.9426e-03, 9.5409e-04,  ..., 7.8343e-05,
          9.6775e-04, 4.8666e-04],
         [9.9237e-01, 1.9426e-03, 9.5409e-04,  ..., 7.8343e-05,
          9.6775e-04, 9.9854e-01],
         [2.6157e-03, 9.9417e-01, 9.9714e-01,  ..., 9.9976e-01,
          9.6775e-04, 4.8666e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 798:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9729e-01, 1.3721e-03, 2.6397e-02,  ..., 2.2005e-03,
          3.5323e-04, 9.9978e-01],
         [8.4258e-04, 1.3721e-03, 1.5485e-02,  ..., 2.2005e-03,
          3.5323e-04, 7.1928e-05],
         [8.4258e-04, 1.3721e-03, 3.6508e-02,  ..., 9.9340e-01,
          9.9894e-01, 7.1928e-05],
         [1.0247e-03, 9.9588e-01, 9.2161e-01,  ..., 2.2005e-03,
          3.5323e-04, 7.1928e-05]],
        [[9.9980e-01, 4.0229e-03, 7.0894e-04,  ..., 2.1063e-04,
          1.5872e-03, 9.5334e-05],
         [6.6388e-05, 3.7088e-03, 7.0894e-04,  ..., 2.1063e-04,
          9.9389e-01, 9.5334e-05],
         [6.6388e-05, 4.8153e-03, 7.0894e-04,  ..., 9.9937e-01,
          2.9331e-03, 9.9971e-01],
         [6.6388e-05, 9.8745e-01, 9.9787e-01,  ..., 2.1063e-04,
          1.5872e-03, 9.5334e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:36,534 [Process: 0] Synchronize training processes
2024-08-18 15:27:36,534 [Process: 0] Evaluating...
2024-08-18 15:27:36,536 [Process: 0] EPOCH 799:
2024-08-18 15:27:36,537 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:37,668 [Process: 0] Synchronize training processes
2024-08-18 15:27:37,669 [Process: 0] Evaluating...
2024-08-18 15:27:37,670 [Process: 0] EPOCH 800:
2024-08-18 15:27:37,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5552e-04, 4.9190e-04, 4.2309e-06,  ..., 4.5602e-04,
          6.0565e-06, 2.9168e-03],
         [4.5552e-04, 4.9190e-04, 4.2309e-06,  ..., 4.5602e-04,
          6.0565e-06, 2.9168e-03],
         [9.9863e-01, 4.9190e-04, 4.2309e-06,  ..., 9.9863e-01,
          6.0565e-06, 9.9125e-01],
         [4.5552e-04, 9.9852e-01, 9.9999e-01,  ..., 4.5602e-04,
          9.9998e-01, 2.9168e-03]],
        [[9.5312e-04, 7.4473e-04, 2.5153e-03,  ..., 2.0614e-05,
          9.5514e-01, 9.5046e-04],
         [9.5312e-04, 7.4473e-04, 2.5153e-03,  ..., 2.0614e-05,
          7.3818e-03, 9.5046e-04],
         [9.9714e-01, 7.4473e-04, 2.5153e-03,  ..., 2.0614e-05,
          1.7638e-02, 9.9715e-01],
         [9.5312e-04, 9.9777e-01, 9.9245e-01,  ..., 9.9994e-01,
          1.9842e-02, 9.5046e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 799:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9642e-01, 3.6758e-03, 1.0215e-03,  ..., 3.5226e-04,
          3.7620e-05, 9.9930e-01],
         [1.1939e-03, 3.6758e-03, 1.0215e-03,  ..., 3.5226e-04,
          3.7620e-05, 2.2873e-04],
         [1.1939e-03, 4.8923e-03, 1.0215e-03,  ..., 9.9894e-01,
          9.9989e-01, 2.4646e-04],
         [1.1939e-03, 9.8776e-01, 9.9694e-01,  ..., 3.5226e-04,
          3.7620e-05, 2.2873e-04]],
        [[9.9938e-01, 1.8174e-03, 3.2577e-03,  ..., 4.2246e-04,
          8.1983e-03, 1.2783e-04],
         [2.0631e-04, 1.8174e-03, 3.2577e-03,  ..., 4.2246e-04,
          9.6484e-01, 1.2783e-04],
         [2.0631e-04, 1.8174e-03, 3.7288e-03,  ..., 9.9873e-01,
          1.8951e-02, 9.9962e-01],
         [2.0631e-04, 9.9455e-01, 9.8976e-01,  ..., 4.2246e-04,
          8.0062e-03, 1.2783e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5744e-04, 5.5914e-03, 1.4467e-06,  ..., 2.5122e-03,
          8.6095e-06, 1.6620e-03],
         [4.5744e-04, 6.0281e-03, 1.4467e-06,  ..., 2.5122e-03,
          8.6095e-06, 1.6620e-03],
         [9.9863e-01, 5.5914e-03, 1.4467e-06,  ..., 9.9246e-01,
          8.6095e-06, 9.9501e-01],
         [4.5744e-04, 9.8279e-01, 1.0000e+00,  ..., 2.5122e-03,
          9.9997e-01, 1.6620e-03]],
        [[1.4575e-03, 6.4455e-04, 2.5633e-03,  ..., 1.5109e-05,
          9.9654e-01, 2.7314e-03],
         [1.4575e-03, 6.4455e-04, 1.8521e-03,  ..., 1.5109e-05,
          1.1544e-03, 2.7314e-03],
         [9.9563e-01, 6.4455e-04, 1.8521e-03,  ..., 1.5109e-05,
          1.1544e-03, 9.9181e-01],
         [1.4575e-03, 9.9807e-01, 9.9373e-01,  ..., 9.9995e-01,
          1.1544e-03, 2.7314e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 800:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9783e-01, 1.9633e-03, 9.8640e-04,  ..., 2.9130e-04,
          7.5586e-05, 9.9980e-01],
         [7.2500e-04, 1.9633e-03, 9.8640e-04,  ..., 2.9130e-04,
          7.5586e-05, 6.5485e-05],
         [7.2500e-04, 1.9633e-03, 9.8640e-04,  ..., 9.9913e-01,
          9.9977e-01, 6.5485e-05],
         [7.2500e-04, 9.9411e-01, 9.9704e-01,  ..., 2.9130e-04,
          7.5586e-05, 6.5485e-05]],
        [[9.9605e-01, 6.3340e-04, 2.9002e-03,  ..., 2.2470e-04,
          9.2331e-03, 4.8364e-05],
         [1.0905e-03, 6.3340e-04, 2.9002e-03,  ..., 2.2470e-04,
          9.7501e-01, 4.8364e-05],
         [1.7707e-03, 6.3340e-04, 2.9002e-03,  ..., 9.9933e-01,
          9.9639e-03, 9.9985e-01],
         [1.0905e-03, 9.9810e-01, 9.9130e-01,  ..., 2.2470e-04,
          5.7967e-03, 4.8364e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:38,796 [Process: 0] Synchronize training processes
2024-08-18 15:27:38,796 [Process: 0] Evaluating...
2024-08-18 15:27:38,798 [Process: 0] EPOCH 801:
2024-08-18 15:27:38,800 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:39,927 [Process: 0] Synchronize training processes
2024-08-18 15:27:39,927 [Process: 0] Evaluating...
2024-08-18 15:27:39,931 [Process: 0] EPOCH 802:
2024-08-18 15:27:39,933 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.6789e-04, 5.1001e-04, 6.8454e-08,  ..., 2.6434e-03,
          7.9730e-04, 2.3782e-03],
         [6.6789e-04, 5.1001e-04, 6.8454e-08,  ..., 2.6434e-03,
          7.9730e-04, 2.2676e-03],
         [9.9800e-01, 5.1001e-04, 6.8454e-08,  ..., 9.9207e-01,
          7.9730e-04, 9.9309e-01],
         [6.6789e-04, 9.9847e-01, 1.0000e+00,  ..., 2.6434e-03,
          9.9761e-01, 2.2676e-03]],
        [[3.2869e-03, 2.1780e-04, 8.9301e-05,  ..., 6.8242e-05,
          9.6957e-01, 7.3555e-04],
         [3.2869e-03, 2.1780e-04, 8.9301e-05,  ..., 6.8242e-05,
          6.4187e-03, 7.3555e-04],
         [9.9014e-01, 2.1780e-04, 8.9301e-05,  ..., 6.8242e-05,
          1.2516e-02, 9.9779e-01],
         [3.2869e-03, 9.9935e-01, 9.9973e-01,  ..., 9.9980e-01,
          1.1497e-02, 7.3555e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 801:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9891e-01, 3.7989e-03, 4.2872e-04,  ..., 6.2475e-04,
          6.8372e-04, 9.9967e-01],
         [2.9674e-04, 3.9634e-03, 4.2872e-04,  ..., 6.2475e-04,
          6.8372e-04, 1.1084e-04],
         [2.9674e-04, 4.1698e-03, 4.2872e-04,  ..., 9.9813e-01,
          9.9795e-01, 1.1084e-04],
         [4.9778e-04, 9.8807e-01, 9.9871e-01,  ..., 6.2475e-04,
          6.8372e-04, 1.1084e-04]],
        [[9.9972e-01, 7.1942e-04, 1.8192e-03,  ..., 8.4573e-05,
          7.8671e-02, 1.5772e-04],
         [9.4496e-05, 7.1942e-04, 1.8192e-03,  ..., 8.4573e-05,
          7.2340e-01, 1.5772e-04],
         [9.4496e-05, 7.1942e-04, 1.8192e-03,  ..., 9.9975e-01,
          1.5978e-01, 9.9953e-01],
         [9.4496e-05, 9.9784e-01, 9.9454e-01,  ..., 8.4573e-05,
          3.8146e-02, 1.5772e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9745e-04, 5.3412e-04, 1.2967e-06,  ..., 2.8537e-03,
          8.0817e-05, 6.2192e-03],
         [2.9745e-04, 5.3412e-04, 1.2967e-06,  ..., 2.8537e-03,
          8.0817e-05, 4.8777e-03],
         [9.9911e-01, 5.3412e-04, 1.2967e-06,  ..., 9.9144e-01,
          8.0817e-05, 9.8403e-01],
         [2.9745e-04, 9.9840e-01, 1.0000e+00,  ..., 2.8537e-03,
          9.9976e-01, 4.8777e-03]],
        [[1.4358e-03, 2.3488e-04, 3.4155e-04,  ..., 5.1448e-06,
          9.8457e-01, 1.6275e-03],
         [1.4358e-03, 2.3488e-04, 3.4155e-04,  ..., 5.1448e-06,
          5.1326e-03, 1.6275e-03],
         [9.9569e-01, 2.3488e-04, 3.4155e-04,  ..., 5.1448e-06,
          6.0859e-03, 9.9512e-01],
         [1.4358e-03, 9.9930e-01, 9.9898e-01,  ..., 9.9998e-01,
          4.2136e-03, 1.6275e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 802:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:41,061 [Process: 0] Synchronize training processes
2024-08-18 15:27:41,061 [Process: 0] Evaluating...
2024-08-18 15:27:41,063 [Process: 0] EPOCH 803:
2024-08-18 15:27:41,065 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9557e-01, 3.9808e-04, 1.8332e-03,  ..., 1.9512e-04,
          1.9205e-04, 9.9749e-01],
         [1.3946e-03, 3.9808e-04, 1.7151e-03,  ..., 1.9512e-04,
          1.9205e-04, 7.3148e-04],
         [1.6392e-03, 3.9808e-04, 1.7151e-03,  ..., 9.9941e-01,
          9.9942e-01, 1.0467e-03],
         [1.3946e-03, 9.9881e-01, 9.9474e-01,  ..., 1.9512e-04,
          1.9205e-04, 7.3148e-04]],
        [[9.9955e-01, 5.9821e-03, 1.6953e-03,  ..., 1.2648e-04,
          6.5417e-02, 5.2076e-05],
         [1.5140e-04, 4.5755e-03, 1.6953e-03,  ..., 1.2648e-04,
          7.4884e-01, 5.2076e-05],
         [1.5140e-04, 4.5755e-03, 1.6953e-03,  ..., 9.9962e-01,
          1.4013e-01, 9.9984e-01],
         [1.5140e-04, 9.8487e-01, 9.9491e-01,  ..., 1.2648e-04,
          4.5613e-02, 5.2076e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2675e-03, 5.0886e-05, 1.9633e-06,  ..., 1.1740e-03,
          3.7254e-05, 7.7376e-04],
         [1.2675e-03, 5.0886e-05, 1.9633e-06,  ..., 1.1740e-03,
          3.7254e-05, 7.7376e-04],
         [9.9620e-01, 5.0886e-05, 1.9633e-06,  ..., 9.9648e-01,
          3.7254e-05, 9.9768e-01],
         [1.2675e-03, 9.9985e-01, 9.9999e-01,  ..., 1.1740e-03,
          9.9989e-01, 7.7376e-04]],
        [[2.5304e-03, 5.6024e-04, 1.6237e-04,  ..., 4.7363e-05,
          9.5936e-01, 1.2735e-02],
         [2.5304e-03, 5.6024e-04, 1.6237e-04,  ..., 4.7363e-05,
          8.7839e-03, 8.8517e-03],
         [9.9241e-01, 5.6024e-04, 1.6237e-04,  ..., 4.7363e-05,
          1.8951e-02, 9.6422e-01],
         [2.5304e-03, 9.9832e-01, 9.9951e-01,  ..., 9.9986e-01,
          1.2908e-02, 1.4196e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 803:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9672e-01, 5.6185e-03, 2.5479e-03,  ..., 8.2923e-04,
          2.4838e-05, 9.9990e-01],
         [1.0020e-03, 4.7800e-03, 2.5479e-03,  ..., 8.2923e-04,
          2.4838e-05, 3.2523e-05],
         [1.0020e-03, 4.9403e-03, 2.5479e-03,  ..., 9.9751e-01,
          9.9993e-01, 3.2523e-05],
         [1.2717e-03, 9.8466e-01, 9.9236e-01,  ..., 8.2923e-04,
          2.4838e-05, 3.2523e-05]],
        [[9.9971e-01, 8.8755e-03, 7.8389e-04,  ..., 1.3327e-04,
          6.0663e-02, 1.5640e-04],
         [1.4846e-04, 7.0368e-03, 7.8389e-04,  ..., 1.3327e-04,
          7.9027e-01, 1.5640e-04],
         [7.2586e-05, 1.3794e-02, 7.8389e-04,  ..., 9.9960e-01,
          1.1818e-01, 9.9953e-01],
         [7.2586e-05, 9.7029e-01, 9.9765e-01,  ..., 1.3327e-04,
          3.0887e-02, 1.5640e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3212e-03, 4.2625e-03, 4.9720e-07,  ..., 4.3674e-03,
          2.1890e-05, 1.5630e-03],
         [2.3212e-03, 3.7837e-03, 4.9720e-07,  ..., 3.0186e-03,
          2.1890e-05, 1.5630e-03],
         [9.9304e-01, 4.0561e-03, 4.9720e-07,  ..., 9.8960e-01,
          2.1890e-05, 9.9531e-01],
         [2.3212e-03, 9.8790e-01, 1.0000e+00,  ..., 3.0186e-03,
          9.9993e-01, 1.5630e-03]],
        [[1.5600e-03, 2.9798e-05, 5.7993e-04,  ..., 1.7519e-05,
          9.5678e-01, 8.3024e-04],
         [1.5600e-03, 2.9798e-05, 5.7993e-04,  ..., 1.7519e-05,
          1.0629e-02, 8.2210e-04],
         [9.9532e-01, 2.9798e-05, 5.7993e-04,  ..., 1.7519e-05,
          1.7862e-02, 9.9753e-01],
         [1.5600e-03, 9.9991e-01, 9.9826e-01,  ..., 9.9995e-01,
          1.4726e-02, 8.2210e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:42,216 [Process: 0] Synchronize training processes
2024-08-18 15:27:42,217 [Process: 0] Evaluating...
2024-08-18 15:27:42,218 [Process: 0] EPOCH 804:
2024-08-18 15:27:42,220 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:43,342 [Process: 0] Synchronize training processes
2024-08-18 15:27:43,343 [Process: 0] Evaluating...
2024-08-18 15:27:43,344 [Process: 0] EPOCH 805:
2024-08-18 15:27:43,346 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 804:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9937e-01, 2.0415e-03, 8.2191e-04,  ..., 7.6576e-04,
          9.0951e-05, 9.9923e-01],
         [2.0891e-04, 2.0415e-03, 8.2191e-04,  ..., 7.6576e-04,
          9.0951e-05, 2.5603e-04],
         [2.0891e-04, 2.2682e-03, 8.2191e-04,  ..., 9.9770e-01,
          9.9973e-01, 2.5603e-04],
         [2.0891e-04, 9.9365e-01, 9.9753e-01,  ..., 7.6576e-04,
          9.0951e-05, 2.5603e-04]],
        [[9.8999e-01, 1.5885e-03, 1.0919e-03,  ..., 1.2635e-03,
          6.5490e-03, 1.2096e-04],
         [2.2703e-03, 1.5885e-03, 1.0919e-03,  ..., 1.2635e-03,
          9.7998e-01, 1.2096e-04],
         [5.4713e-03, 1.5885e-03, 1.0919e-03,  ..., 9.9621e-01,
          8.4600e-03, 9.9964e-01],
         [2.2703e-03, 9.9523e-01, 9.9672e-01,  ..., 1.2635e-03,
          5.0128e-03, 1.2096e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2270e-03, 5.9673e-04, 9.1913e-08,  ..., 6.3985e-04,
          3.7319e-05, 3.1788e-03],
         [2.2270e-03, 5.9673e-04, 9.1913e-08,  ..., 6.3985e-04,
          3.7319e-05, 3.1788e-03],
         [9.9332e-01, 5.9673e-04, 9.1913e-08,  ..., 9.9808e-01,
          3.7319e-05, 9.9046e-01],
         [2.2270e-03, 9.9821e-01, 1.0000e+00,  ..., 6.3985e-04,
          9.9989e-01, 3.1788e-03]],
        [[1.6538e-03, 4.7642e-04, 9.6052e-04,  ..., 2.0977e-05,
          9.9095e-01, 3.1415e-03],
         [1.6538e-03, 4.7642e-04, 9.6052e-04,  ..., 2.0977e-05,
          3.4746e-03, 3.1415e-03],
         [9.9504e-01, 4.7642e-04, 9.6052e-04,  ..., 2.0977e-05,
          2.6488e-03, 9.9058e-01],
         [1.6538e-03, 9.9857e-01, 9.9712e-01,  ..., 9.9994e-01,
          2.9311e-03, 3.1415e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 805:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9844e-01, 2.7087e-03, 2.3772e-03,  ..., 4.6119e-04,
          1.1934e-04, 9.9928e-01],
         [5.2062e-04, 2.2025e-03, 2.3772e-03,  ..., 4.6119e-04,
          1.1934e-04, 2.3917e-04],
         [5.2062e-04, 2.2025e-03, 2.3772e-03,  ..., 9.9862e-01,
          9.9964e-01, 2.3917e-04],
         [5.2062e-04, 9.9289e-01, 9.9287e-01,  ..., 4.6119e-04,
          1.1934e-04, 2.3917e-04]],
        [[9.9271e-01, 1.0271e-03, 1.5605e-03,  ..., 3.2955e-04,
          2.1994e-02, 9.6562e-05],
         [3.5873e-03, 1.0271e-03, 1.5605e-03,  ..., 3.2955e-04,
          9.0654e-01, 9.6562e-05],
         [1.8524e-03, 1.0271e-03, 1.5605e-03,  ..., 9.9901e-01,
          5.6514e-02, 9.9971e-01],
         [1.8524e-03, 9.9692e-01, 9.9532e-01,  ..., 3.2955e-04,
          1.4951e-02, 9.6562e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:44,473 [Process: 0] Synchronize training processes
2024-08-18 15:27:44,473 [Process: 0] Evaluating...
2024-08-18 15:27:44,475 [Process: 0] EPOCH 806:
2024-08-18 15:27:44,477 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:45,598 [Process: 0] Synchronize training processes
2024-08-18 15:27:45,598 [Process: 0] Evaluating...
2024-08-18 15:27:45,600 [Process: 0] EPOCH 807:
2024-08-18 15:27:45,602 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.5296e-04, 2.0531e-03, 1.4370e-06,  ..., 1.2451e-03,
          6.0989e-06, 3.5563e-03],
         [5.5296e-04, 2.0531e-03, 1.4370e-06,  ..., 1.2451e-03,
          6.0989e-06, 3.1480e-03],
         [9.9834e-01, 2.0531e-03, 1.4370e-06,  ..., 9.9626e-01,
          6.0989e-06, 9.9015e-01],
         [5.5296e-04, 9.9384e-01, 1.0000e+00,  ..., 1.2451e-03,
          9.9998e-01, 3.1480e-03]],
        [[1.6099e-03, 3.1830e-04, 4.9208e-04,  ..., 2.7374e-05,
          9.9447e-01, 7.4134e-04],
         [1.6099e-03, 3.1830e-04, 4.9208e-04,  ..., 2.7374e-05,
          2.5203e-03, 7.4134e-04],
         [9.9517e-01, 3.1830e-04, 4.9208e-04,  ..., 2.7374e-05,
          1.5037e-03, 9.9778e-01],
         [1.6099e-03, 9.9905e-01, 9.9852e-01,  ..., 9.9992e-01,
          1.5037e-03, 7.4134e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 806:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9986e-01, 1.0666e-03, 1.4199e-04,  ..., 3.3028e-04,
          1.2748e-04, 9.9893e-01],
         [4.8065e-05, 1.0666e-03, 1.4199e-04,  ..., 3.3028e-04,
          1.2748e-04, 3.5659e-04],
         [4.8065e-05, 1.0666e-03, 1.4199e-04,  ..., 9.9901e-01,
          9.9962e-01, 3.5659e-04],
         [4.8065e-05, 9.9680e-01, 9.9957e-01,  ..., 3.3028e-04,
          1.2748e-04, 3.5659e-04]],
        [[9.9597e-01, 1.2574e-03, 4.5071e-04,  ..., 1.4547e-04,
          1.5311e-03, 9.6683e-04],
         [1.3448e-03, 1.2574e-03, 4.5071e-04,  ..., 1.4547e-04,
          9.9375e-01, 1.0727e-03],
         [1.3448e-03, 1.2574e-03, 4.5071e-04,  ..., 9.9956e-01,
          3.1866e-03, 9.9699e-01],
         [1.3448e-03, 9.9623e-01, 9.9865e-01,  ..., 1.4547e-04,
          1.5311e-03, 9.6683e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.9765e-04, 1.6102e-02, 1.3207e-04,  ..., 1.0269e-03,
          1.9569e-05, 2.5991e-03],
         [7.9765e-04, 1.7634e-02, 1.3207e-04,  ..., 1.0269e-03,
          1.9569e-05, 2.5991e-03],
         [9.9761e-01, 2.1085e-02, 1.3207e-04,  ..., 9.9692e-01,
          1.9569e-05, 9.9210e-01],
         [7.9765e-04, 9.4518e-01, 9.9960e-01,  ..., 1.0269e-03,
          9.9994e-01, 2.6984e-03]],
        [[7.2372e-04, 8.0905e-04, 7.7026e-05,  ..., 2.8199e-05,
          9.3758e-01, 5.2790e-03],
         [7.2372e-04, 8.0905e-04, 7.7026e-05,  ..., 2.8199e-05,
          1.1067e-02, 5.2790e-03],
         [9.9783e-01, 8.0905e-04, 7.7026e-05,  ..., 2.8199e-05,
          2.5876e-02, 9.8363e-01],
         [7.2372e-04, 9.9757e-01, 9.9977e-01,  ..., 9.9992e-01,
          2.5481e-02, 5.8138e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 807:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9959e-01, 3.5649e-03, 6.2610e-04,  ..., 8.2819e-05,
          5.9660e-04, 9.9927e-01],
         [1.2094e-04, 2.8716e-03, 6.2610e-04,  ..., 8.2819e-05,
          5.9660e-04, 2.4336e-04],
         [1.2094e-04, 3.6400e-03, 6.2610e-04,  ..., 9.9975e-01,
          9.9821e-01, 2.4336e-04],
         [1.6686e-04, 9.8992e-01, 9.9812e-01,  ..., 8.2819e-05,
          5.9660e-04, 2.4336e-04]],
        [[9.9669e-01, 3.2559e-03, 5.4305e-04,  ..., 7.4228e-05,
          1.3813e-03, 3.5848e-05],
         [1.8086e-03, 3.2559e-03, 5.4305e-04,  ..., 7.4228e-05,
          9.9440e-01, 3.5848e-05],
         [7.5191e-04, 3.2559e-03, 5.4305e-04,  ..., 9.9978e-01,
          2.8869e-03, 9.9989e-01],
         [7.5191e-04, 9.9023e-01, 9.9837e-01,  ..., 7.4228e-05,
          1.3311e-03, 3.5848e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:46,722 [Process: 0] Synchronize training processes
2024-08-18 15:27:46,722 [Process: 0] Evaluating...
2024-08-18 15:27:46,724 [Process: 0] EPOCH 808:
2024-08-18 15:27:46,726 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:47,851 [Process: 0] Synchronize training processes
2024-08-18 15:27:47,851 [Process: 0] Evaluating...
2024-08-18 15:27:47,853 [Process: 0] EPOCH 809:
2024-08-18 15:27:47,854 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7801e-03, 1.5588e-03, 3.1453e-06,  ..., 6.4076e-04,
          8.9935e-04, 7.6345e-04],
         [1.7801e-03, 1.5588e-03, 3.1453e-06,  ..., 6.4076e-04,
          8.9935e-04, 7.6345e-04],
         [9.9466e-01, 1.5588e-03, 3.1453e-06,  ..., 9.9808e-01,
          8.9935e-04, 9.9771e-01],
         [1.7801e-03, 9.9532e-01, 9.9999e-01,  ..., 6.4076e-04,
          9.9730e-01, 7.6345e-04]],
        [[4.1980e-03, 2.0966e-04, 5.3541e-04,  ..., 3.7785e-05,
          9.3495e-01, 7.6851e-04],
         [4.1980e-03, 2.0966e-04, 5.3541e-04,  ..., 3.7785e-05,
          1.5049e-02, 7.6851e-04],
         [9.8665e-01, 2.0966e-04, 5.3541e-04,  ..., 3.7785e-05,
          2.6196e-02, 9.9769e-01],
         [4.9501e-03, 9.9937e-01, 9.9839e-01,  ..., 9.9989e-01,
          2.3802e-02, 7.6851e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 808:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9653e-01, 1.1316e-02, 4.0209e-03,  ..., 3.6894e-05,
          2.8064e-04, 9.9970e-01],
         [1.1573e-03, 7.7537e-03, 3.8947e-03,  ..., 3.6894e-05,
          2.8064e-04, 9.9828e-05],
         [1.1573e-03, 1.3584e-02, 5.2835e-03,  ..., 9.9989e-01,
          9.9916e-01, 9.9828e-05],
         [1.1573e-03, 9.6735e-01, 9.8680e-01,  ..., 3.6894e-05,
          2.8064e-04, 9.9828e-05]],
        [[9.9938e-01, 8.6701e-04, 2.2523e-03,  ..., 1.9422e-04,
          4.1954e-04, 6.7362e-05],
         [2.1357e-04, 8.6701e-04, 2.2362e-03,  ..., 1.9422e-04,
          9.9865e-01, 6.7362e-05],
         [2.0241e-04, 8.6701e-04, 2.2988e-03,  ..., 9.9942e-01,
          4.9296e-04, 9.9980e-01],
         [2.0241e-04, 9.9740e-01, 9.9321e-01,  ..., 1.9422e-04,
          4.3301e-04, 6.7362e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.2115e-04, 2.3308e-01, 5.7560e-07,  ..., 3.1080e-03,
          1.6628e-04, 1.0508e-03],
         [7.2115e-04, 2.1772e-01, 5.7560e-07,  ..., 3.1080e-03,
          1.6628e-04, 1.0508e-03],
         [9.9784e-01, 8.6266e-02, 5.7560e-07,  ..., 9.9047e-01,
          1.6628e-04, 9.9685e-01],
         [7.2115e-04, 4.6293e-01, 1.0000e+00,  ..., 3.3158e-03,
          9.9950e-01, 1.0508e-03]],
        [[7.9908e-04, 4.4504e-04, 2.2555e-04,  ..., 1.5149e-04,
          9.9133e-01, 3.8887e-03],
         [7.9908e-04, 4.4504e-04, 2.2555e-04,  ..., 1.5149e-04,
          2.3203e-03, 3.8887e-03],
         [9.9760e-01, 4.4504e-04, 2.2555e-04,  ..., 1.5149e-04,
          3.8263e-03, 9.8716e-01],
         [7.9908e-04, 9.9866e-01, 9.9932e-01,  ..., 9.9955e-01,
          2.5266e-03, 5.0611e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 809:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 15:27:48,983 [Process: 0] Synchronize training processes
2024-08-18 15:27:48,983 [Process: 0] Evaluating...
2024-08-18 15:27:48,985 [Process: 0] EPOCH 810:
2024-08-18 15:27:48,987 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9979e-01, 1.7890e-03, 9.2671e-03,  ..., 3.0308e-04,
          1.1155e-04, 9.9785e-01],
         [7.1666e-05, 1.7890e-03, 6.2793e-03,  ..., 3.0308e-04,
          1.1155e-04, 6.9574e-04],
         [7.1666e-05, 1.9167e-03, 8.7505e-03,  ..., 9.9909e-01,
          9.9967e-01, 7.5552e-04],
         [7.1666e-05, 9.9451e-01, 9.7570e-01,  ..., 3.0308e-04,
          1.1155e-04, 6.9574e-04]],
        [[9.9862e-01, 2.1809e-03, 1.1091e-03,  ..., 9.3568e-05,
          2.2073e-04, 1.9737e-05],
         [4.6079e-04, 2.1809e-03, 1.1091e-03,  ..., 9.3568e-05,
          9.9934e-01, 1.9737e-05],
         [4.6079e-04, 2.3814e-03, 1.1091e-03,  ..., 9.9972e-01,
          2.2073e-04, 9.9994e-01],
         [4.6079e-04, 9.9326e-01, 9.9667e-01,  ..., 9.3568e-05,
          2.2073e-04, 1.9737e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.1071e-04, 4.8916e-03, 7.8693e-06,  ..., 1.4198e-03,
          1.7691e-05, 3.0138e-03],
         [9.1071e-04, 4.8916e-03, 7.8693e-06,  ..., 1.4198e-03,
          1.7691e-05, 3.0138e-03],
         [9.9727e-01, 5.2246e-03, 7.8693e-06,  ..., 9.9574e-01,
          1.7691e-05, 9.9096e-01],
         [9.1071e-04, 9.8499e-01, 9.9998e-01,  ..., 1.4198e-03,
          9.9995e-01, 3.0138e-03]],
        [[1.7074e-03, 1.7138e-03, 1.1455e-02,  ..., 5.8091e-05,
          9.9900e-01, 9.0528e-04],
         [1.5714e-03, 1.7138e-03, 5.5696e-03,  ..., 5.8091e-05,
          3.3425e-04, 9.0528e-04],
         [9.9515e-01, 1.7138e-03, 6.1858e-03,  ..., 5.8091e-05,
          3.3425e-04, 9.9728e-01],
         [1.5714e-03, 9.9486e-01, 9.7679e-01,  ..., 9.9983e-01,
          3.3425e-04, 9.0528e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 810:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9888e-01, 2.7023e-03, 1.7467e-03,  ..., 1.3391e-03,
          3.0547e-05, 9.9398e-01],
         [3.5319e-04, 2.0596e-03, 1.2849e-03,  ..., 1.3391e-03,
          3.0547e-05, 1.8602e-03],
         [3.5319e-04, 2.0596e-03, 1.2849e-03,  ..., 9.9598e-01,
          9.9991e-01, 2.3008e-03],
         [4.1046e-04, 9.9318e-01, 9.9568e-01,  ..., 1.3391e-03,
          3.0547e-05, 1.8602e-03]],
        [[9.9816e-01, 3.0898e-03, 6.9123e-04,  ..., 1.2289e-04,
          8.4156e-04, 1.0668e-04],
         [7.1473e-04, 2.7108e-03, 6.9123e-04,  ..., 1.2289e-04,
          9.9781e-01, 1.0668e-04],
         [5.6165e-04, 3.3045e-03, 6.9123e-04,  ..., 9.9963e-01,
          7.9211e-04, 9.9968e-01],
         [5.6165e-04, 9.9089e-01, 9.9793e-01,  ..., 1.2289e-04,
          5.5498e-04, 1.0668e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4557e-04, 1.7573e-03, 4.3435e-06,  ..., 8.7751e-03,
          2.0082e-05, 5.6354e-03],
         [4.4557e-04, 1.7573e-03, 4.3435e-06,  ..., 8.1929e-03,
          2.0082e-05, 5.0051e-03],
         [9.9866e-01, 1.7573e-03, 4.3435e-06,  ..., 9.6892e-01,
          2.0082e-05, 9.8336e-01],
         [4.4557e-04, 9.9473e-01, 9.9999e-01,  ..., 1.4109e-02,
          9.9994e-01, 6.0001e-03]],
        [[4.8211e-03, 8.4722e-04, 1.7061e-03,  ..., 7.1627e-04,
          9.8708e-01, 6.7999e-03],
         [4.9039e-03, 8.4722e-04, 1.7061e-03,  ..., 7.1627e-04,
          3.4292e-03, 6.7999e-03],
         [9.8498e-01, 8.4722e-04, 1.7061e-03,  ..., 7.1627e-04,
          5.5369e-03, 9.7561e-01],
         [5.2973e-03, 9.9746e-01, 9.9488e-01,  ..., 9.9785e-01,
          3.9559e-03, 1.0794e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 811:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:50,107 [Process: 0] Synchronize training processes
2024-08-18 15:27:50,107 [Process: 0] Evaluating...
2024-08-18 15:27:50,109 [Process: 0] EPOCH 811:
2024-08-18 15:27:50,110 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:51,233 [Process: 0] Synchronize training processes
2024-08-18 15:27:51,233 [Process: 0] Evaluating...
2024-08-18 15:27:51,237 [Process: 0] EPOCH 812:
2024-08-18 15:27:51,239 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9784e-01, 7.8827e-04, 8.2186e-04,  ..., 1.1285e-04,
          5.6293e-05, 9.9934e-01],
         [7.2040e-04, 7.3789e-04, 7.8176e-04,  ..., 1.1285e-04,
          5.6293e-05, 2.2104e-04],
         [7.2040e-04, 7.3789e-04, 7.8176e-04,  ..., 9.9966e-01,
          9.9983e-01, 2.2104e-04],
         [7.2040e-04, 9.9774e-01, 9.9761e-01,  ..., 1.1285e-04,
          5.6293e-05, 2.2104e-04]],
        [[9.9987e-01, 1.1325e-03, 1.5500e-03,  ..., 1.2674e-03,
          2.0673e-03, 3.2601e-05],
         [6.1307e-05, 1.1325e-03, 1.5500e-03,  ..., 1.2674e-03,
          9.9199e-01, 3.2601e-05],
         [3.2656e-05, 1.1325e-03, 1.5500e-03,  ..., 9.9620e-01,
          4.1726e-03, 9.9990e-01],
         [3.2656e-05, 9.9660e-01, 9.9535e-01,  ..., 1.2674e-03,
          1.7688e-03, 3.2601e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.5101e-04, 1.5035e-04, 2.0231e-05,  ..., 8.6742e-03,
          2.5573e-05, 4.9371e-04],
         [7.5101e-04, 1.5035e-04, 2.0231e-05,  ..., 6.3945e-03,
          2.5573e-05, 4.9371e-04],
         [9.9775e-01, 1.5035e-04, 2.0231e-05,  ..., 9.7699e-01,
          2.5573e-05, 9.9852e-01],
         [7.5101e-04, 9.9955e-01, 9.9994e-01,  ..., 7.9390e-03,
          9.9992e-01, 4.9371e-04]],
        [[8.2230e-04, 1.1062e-04, 8.0809e-04,  ..., 6.0218e-05,
          9.9585e-01, 2.6544e-03],
         [8.2230e-04, 1.1062e-04, 8.0809e-04,  ..., 6.0218e-05,
          1.2290e-03, 2.6544e-03],
         [9.9753e-01, 1.1062e-04, 8.0809e-04,  ..., 6.0218e-05,
          1.6905e-03, 9.9204e-01],
         [8.2230e-04, 9.9967e-01, 9.9758e-01,  ..., 9.9982e-01,
          1.2290e-03, 2.6544e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 812:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9886e-01, 1.2844e-03, 1.4126e-03,  ..., 9.0566e-05,
          1.8962e-04, 9.8967e-01],
         [3.7932e-04, 1.2844e-03, 1.4126e-03,  ..., 9.0566e-05,
          1.8962e-04, 4.2485e-03],
         [3.7932e-04, 1.2844e-03, 1.4126e-03,  ..., 9.9973e-01,
          9.9943e-01, 3.0411e-03],
         [3.7932e-04, 9.9615e-01, 9.9576e-01,  ..., 9.0566e-05,
          1.8962e-04, 3.0411e-03]],
        [[9.9941e-01, 3.6392e-03, 9.1054e-04,  ..., 1.1448e-04,
          6.3718e-03, 3.5832e-04],
         [1.9579e-04, 3.0129e-03, 9.1054e-04,  ..., 1.1448e-04,
          9.8521e-01, 3.5832e-04],
         [1.9579e-04, 3.0129e-03, 9.1054e-04,  ..., 9.9966e-01,
          4.1089e-03, 9.9893e-01],
         [1.9579e-04, 9.9033e-01, 9.9727e-01,  ..., 1.1448e-04,
          4.3118e-03, 3.5832e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9420e-03, 1.2528e-03, 9.3306e-06,  ..., 1.4182e-03,
          9.7701e-06, 1.7734e-03],
         [1.9420e-03, 1.1202e-03, 9.3306e-06,  ..., 1.4182e-03,
          9.7701e-06, 1.7734e-03],
         [9.9417e-01, 1.1202e-03, 9.3306e-06,  ..., 9.9575e-01,
          9.7701e-06, 9.9468e-01],
         [1.9420e-03, 9.9651e-01, 9.9997e-01,  ..., 1.4182e-03,
          9.9997e-01, 1.7734e-03]],
        [[2.4967e-03, 2.1366e-04, 2.0389e-03,  ..., 1.2102e-05,
          9.8367e-01, 2.5892e-03],
         [2.4967e-03, 2.1366e-04, 2.0389e-03,  ..., 1.2102e-05,
          4.1787e-03, 2.2606e-03],
         [9.9230e-01, 2.1366e-04, 2.0389e-03,  ..., 1.2102e-05,
          7.7116e-03, 9.9289e-01],
         [2.7113e-03, 9.9936e-01, 9.9388e-01,  ..., 9.9996e-01,
          4.4372e-03, 2.2606e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:52,357 [Process: 0] Synchronize training processes
2024-08-18 15:27:52,357 [Process: 0] Evaluating...
2024-08-18 15:27:52,359 [Process: 0] EPOCH 813:
2024-08-18 15:27:52,361 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:53,484 [Process: 0] Synchronize training processes
2024-08-18 15:27:53,484 [Process: 0] Evaluating...
2024-08-18 15:27:53,486 [Process: 0] EPOCH 814:
2024-08-18 15:27:53,488 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 813:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9945e-01, 2.1291e-03, 2.3329e-03,  ..., 8.9747e-05,
          2.2360e-04, 9.9963e-01],
         [1.8472e-04, 1.5790e-03, 2.3329e-03,  ..., 8.9747e-05,
          2.2360e-04, 1.2200e-04],
         [1.8472e-04, 1.5790e-03, 2.3329e-03,  ..., 9.9973e-01,
          9.9933e-01, 1.2200e-04],
         [1.8472e-04, 9.9471e-01, 9.9300e-01,  ..., 8.9747e-05,
          2.2360e-04, 1.2200e-04]],
        [[9.9973e-01, 2.2339e-03, 1.2578e-03,  ..., 1.4799e-04,
          1.4289e-01, 1.2637e-04],
         [8.8506e-05, 2.2339e-03, 1.2578e-03,  ..., 1.4799e-04,
          4.2972e-01, 1.2637e-04],
         [8.8506e-05, 2.3431e-03, 1.2578e-03,  ..., 9.9956e-01,
          3.3681e-01, 9.9962e-01],
         [8.8506e-05, 9.9319e-01, 9.9623e-01,  ..., 1.4799e-04,
          9.0577e-02, 1.2637e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.3885e-03, 1.3516e-03, 1.9659e-05,  ..., 3.4267e-03,
          1.8700e-05, 1.4744e-03],
         [3.3885e-03, 1.3516e-03, 1.9659e-05,  ..., 3.4267e-03,
          1.8700e-05, 1.4744e-03],
         [9.8973e-01, 1.3516e-03, 1.9659e-05,  ..., 9.8914e-01,
          1.8700e-05, 9.9558e-01],
         [3.4929e-03, 9.9595e-01, 9.9994e-01,  ..., 4.0076e-03,
          9.9994e-01, 1.4744e-03]],
        [[6.7119e-04, 8.2797e-03, 1.4200e-03,  ..., 4.8734e-05,
          9.8481e-01, 3.7084e-03],
         [6.7119e-04, 7.2548e-03, 1.0267e-03,  ..., 4.8734e-05,
          3.9198e-03, 3.7084e-03],
         [9.9799e-01, 7.2548e-03, 1.0267e-03,  ..., 4.8734e-05,
          6.9255e-03, 9.8887e-01],
         [6.7119e-04, 9.7721e-01, 9.9653e-01,  ..., 9.9985e-01,
          4.3454e-03, 3.7084e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 814:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 6.4907e-03, 2.1302e-03,  ..., 2.1220e-04,
          1.2264e-05, 9.9838e-01],
         [2.4001e-05, 5.5657e-03, 2.1302e-03,  ..., 2.1220e-04,
          1.2264e-05, 5.0380e-04],
         [2.4001e-05, 9.8501e-03, 2.1302e-03,  ..., 9.9936e-01,
          9.9996e-01, 6.0809e-04],
         [2.4001e-05, 9.7809e-01, 9.9361e-01,  ..., 2.1220e-04,
          1.2264e-05, 5.0380e-04]],
        [[9.9769e-01, 9.8956e-04, 2.0157e-04,  ..., 1.3182e-04,
          4.7141e-03, 1.0770e-04],
         [7.5882e-04, 9.8956e-04, 2.0157e-04,  ..., 1.3182e-04,
          9.6306e-01, 1.0770e-04],
         [7.9487e-04, 9.8956e-04, 2.0157e-04,  ..., 9.9960e-01,
          2.7509e-02, 9.9968e-01],
         [7.5882e-04, 9.9703e-01, 9.9940e-01,  ..., 1.3182e-04,
          4.7141e-03, 1.0770e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:54,612 [Process: 0] Synchronize training processes
2024-08-18 15:27:54,613 [Process: 0] Evaluating...
2024-08-18 15:27:54,614 [Process: 0] EPOCH 815:
2024-08-18 15:27:54,616 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:55,731 [Process: 0] Synchronize training processes
2024-08-18 15:27:55,731 [Process: 0] Evaluating...
2024-08-18 15:27:55,733 [Process: 0] EPOCH 816:
2024-08-18 15:27:55,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7847e-03, 1.1102e-03, 4.2945e-05,  ..., 3.8327e-03,
          1.4726e-06, 2.9803e-03],
         [1.7847e-03, 1.1102e-03, 4.2945e-05,  ..., 3.8327e-03,
          1.4726e-06, 2.9803e-03],
         [9.9465e-01, 1.1102e-03, 4.2945e-05,  ..., 9.8720e-01,
          1.4726e-06, 9.9058e-01],
         [1.7847e-03, 9.9667e-01, 9.9987e-01,  ..., 5.1339e-03,
          1.0000e+00, 3.4605e-03]],
        [[1.9513e-03, 6.4533e-04, 2.0813e-03,  ..., 6.2744e-05,
          8.8110e-01, 2.4057e-03],
         [1.9513e-03, 6.4533e-04, 2.0813e-03,  ..., 6.2744e-05,
          3.4459e-02, 2.4057e-03],
         [9.9415e-01, 6.4533e-04, 2.0813e-03,  ..., 6.2744e-05,
          5.8421e-02, 9.9278e-01],
         [1.9513e-03, 9.9806e-01, 9.9376e-01,  ..., 9.9981e-01,
          2.6016e-02, 2.4085e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 815:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9522e-01, 6.7879e-04, 1.0879e-03,  ..., 2.8413e-04,
          3.7220e-05, 9.9991e-01],
         [1.5096e-03, 6.7879e-04, 1.0879e-03,  ..., 2.8413e-04,
          3.7220e-05, 2.9731e-05],
         [1.5096e-03, 6.7879e-04, 1.0879e-03,  ..., 9.9915e-01,
          9.9989e-01, 2.9731e-05],
         [1.7591e-03, 9.9796e-01, 9.9674e-01,  ..., 2.8413e-04,
          3.7220e-05, 2.9731e-05]],
        [[9.9892e-01, 5.1225e-04, 8.4062e-04,  ..., 1.4775e-04,
          7.8704e-02, 7.9926e-05],
         [5.6555e-04, 5.1225e-04, 8.4062e-04,  ..., 1.4775e-04,
          7.8278e-01, 7.9926e-05],
         [2.5572e-04, 5.1225e-04, 8.4062e-04,  ..., 9.9956e-01,
          1.1242e-01, 9.9976e-01],
         [2.5572e-04, 9.9846e-01, 9.9748e-01,  ..., 1.4775e-04,
          2.6094e-02, 7.9926e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1894e-03, 7.2208e-04, 3.3882e-07,  ..., 8.5880e-03,
          4.9646e-05, 3.5449e-03],
         [1.1894e-03, 7.2208e-04, 3.3882e-07,  ..., 6.9833e-03,
          4.9646e-05, 2.9150e-03],
         [9.9643e-01, 7.2208e-04, 3.3882e-07,  ..., 9.7693e-01,
          4.9646e-05, 9.9063e-01],
         [1.1894e-03, 9.9783e-01, 1.0000e+00,  ..., 7.4968e-03,
          9.9985e-01, 2.9150e-03]],
        [[3.2395e-03, 6.2065e-04, 3.4123e-03,  ..., 2.9968e-05,
          9.7722e-01, 1.6602e-03],
         [3.2395e-03, 6.2065e-04, 2.8607e-03,  ..., 2.9968e-05,
          4.9120e-03, 1.6602e-03],
         [9.8943e-01, 6.2065e-04, 2.8607e-03,  ..., 2.9968e-05,
          1.1363e-02, 9.9502e-01],
         [4.0906e-03, 9.9814e-01, 9.9087e-01,  ..., 9.9991e-01,
          6.5018e-03, 1.6602e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 816:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9960e-01, 1.1629e-03, 1.2181e-03,  ..., 7.3368e-04,
          1.0646e-04, 9.9672e-01],
         [1.3411e-04, 1.1629e-03, 1.2181e-03,  ..., 7.3368e-04,
          1.0646e-04, 1.0246e-03],
         [1.3411e-04, 1.1629e-03, 1.2181e-03,  ..., 9.9780e-01,
          9.9968e-01, 1.2299e-03],
         [1.3411e-04, 9.9651e-01, 9.9635e-01,  ..., 7.3368e-04,
          1.0646e-04, 1.0246e-03]],
        [[9.9983e-01, 1.7939e-03, 3.9993e-04,  ..., 6.6965e-05,
          1.6333e-02, 8.0098e-04],
         [5.8287e-05, 1.6418e-03, 3.9993e-04,  ..., 6.6965e-05,
          8.0731e-01, 8.0098e-04],
         [5.8287e-05, 1.6418e-03, 3.9993e-04,  ..., 9.9980e-01,
          1.4835e-01, 9.9760e-01],
         [5.8287e-05, 9.9492e-01, 9.9880e-01,  ..., 6.6965e-05,
          2.7999e-02, 8.0098e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:27:56,855 [Process: 0] Synchronize training processes
2024-08-18 15:27:56,855 [Process: 0] Evaluating...
2024-08-18 15:27:56,857 [Process: 0] EPOCH 817:
2024-08-18 15:27:56,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:57,980 [Process: 0] Synchronize training processes
2024-08-18 15:27:57,980 [Process: 0] Evaluating...
2024-08-18 15:27:57,982 [Process: 0] EPOCH 818:
2024-08-18 15:27:57,984 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.2877e-03, 4.4652e-03, 8.8775e-05,  ..., 1.3006e-03,
          1.4924e-04, 1.1550e-03],
         [5.2877e-03, 4.4652e-03, 8.8775e-05,  ..., 1.3006e-03,
          1.4924e-04, 1.1550e-03],
         [9.8323e-01, 4.4652e-03, 8.8775e-05,  ..., 9.9610e-01,
          1.4924e-04, 9.9653e-01],
         [6.1990e-03, 9.8660e-01, 9.9973e-01,  ..., 1.3006e-03,
          9.9955e-01, 1.1550e-03]],
        [[8.9452e-04, 9.7957e-04, 8.8249e-04,  ..., 1.6419e-04,
          9.8153e-01, 6.8674e-04],
         [8.9452e-04, 9.7957e-04, 8.8249e-04,  ..., 1.6419e-04,
          4.8024e-03, 6.8674e-04],
         [9.9732e-01, 9.7957e-04, 8.8249e-04,  ..., 1.6419e-04,
          9.2858e-03, 9.9794e-01],
         [8.9452e-04, 9.9706e-01, 9.9735e-01,  ..., 9.9951e-01,
          4.3780e-03, 6.8674e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 817:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9950e-01, 3.6444e-04, 4.2829e-03,  ..., 2.6794e-03,
          1.3157e-04, 9.9917e-01],
         [1.6665e-04, 3.6444e-04, 4.2829e-03,  ..., 2.6794e-03,
          1.3157e-04, 2.6111e-04],
         [1.6665e-04, 3.6444e-04, 5.1303e-03,  ..., 9.9148e-01,
          9.9961e-01, 3.0401e-04],
         [1.6665e-04, 9.9891e-01, 9.8630e-01,  ..., 3.1624e-03,
          1.3157e-04, 2.6111e-04]],
        [[9.9697e-01, 2.9321e-04, 1.2115e-03,  ..., 2.5896e-04,
          1.3167e-02, 1.6146e-04],
         [1.4910e-03, 2.9321e-04, 1.2115e-03,  ..., 2.8601e-04,
          9.0938e-01, 1.6146e-04],
         [7.6897e-04, 2.9321e-04, 1.2115e-03,  ..., 9.9920e-01,
          5.8062e-02, 9.9952e-01],
         [7.6897e-04, 9.9912e-01, 9.9637e-01,  ..., 2.5896e-04,
          1.9394e-02, 1.6146e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.6404e-04, 4.9649e-04, 9.6066e-05,  ..., 2.1340e-03,
          4.5665e-05, 7.7336e-04],
         [8.6404e-04, 4.9649e-04, 9.6066e-05,  ..., 2.1340e-03,
          4.5665e-05, 7.7336e-04],
         [9.9741e-01, 4.9649e-04, 9.6066e-05,  ..., 9.9360e-01,
          4.5665e-05, 9.9768e-01],
         [8.6404e-04, 9.9851e-01, 9.9971e-01,  ..., 2.1340e-03,
          9.9986e-01, 7.7336e-04]],
        [[2.1015e-03, 4.3096e-04, 1.7410e-03,  ..., 5.6932e-05,
          9.8854e-01, 8.9140e-04],
         [2.1015e-03, 4.3096e-04, 1.7410e-03,  ..., 5.6932e-05,
          3.0301e-03, 8.9140e-04],
         [9.9370e-01, 4.3096e-04, 1.7410e-03,  ..., 5.6932e-05,
          4.2930e-03, 9.9733e-01],
         [2.1015e-03, 9.9871e-01, 9.9478e-01,  ..., 9.9983e-01,
          4.1392e-03, 8.9140e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 818:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:27:59,103 [Process: 0] Synchronize training processes
2024-08-18 15:27:59,103 [Process: 0] Evaluating...
2024-08-18 15:27:59,105 [Process: 0] EPOCH 819:
2024-08-18 15:27:59,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9894e-01, 8.8688e-04, 2.7454e-03,  ..., 3.6712e-04,
          1.8151e-04, 9.9833e-01],
         [3.5235e-04, 8.8688e-04, 2.7454e-03,  ..., 3.6712e-04,
          1.8151e-04, 5.5536e-04],
         [3.5235e-04, 8.8688e-04, 3.7632e-03,  ..., 9.9890e-01,
          9.9946e-01, 5.5536e-04],
         [3.5235e-04, 9.9734e-01, 9.9075e-01,  ..., 3.6712e-04,
          1.8151e-04, 5.5536e-04]],
        [[9.9780e-01, 1.6124e-03, 9.3791e-04,  ..., 6.7619e-05,
          3.0460e-04, 1.6266e-05],
         [9.7356e-04, 1.6124e-03, 9.3791e-04,  ..., 6.7619e-05,
          9.9872e-01, 1.6266e-05],
         [6.1470e-04, 1.6124e-03, 9.3791e-04,  ..., 9.9980e-01,
          6.7032e-04, 9.9995e-01],
         [6.1470e-04, 9.9516e-01, 9.9719e-01,  ..., 6.7619e-05,
          3.0460e-04, 1.6266e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.2738e-03, 8.0030e-05, 9.2548e-08,  ..., 9.4355e-04,
          6.7008e-05, 3.5603e-03],
         [3.2738e-03, 8.0030e-05, 9.2548e-08,  ..., 9.4355e-04,
          6.7008e-05, 3.5603e-03],
         [9.8993e-01, 8.0030e-05, 9.2548e-08,  ..., 9.9717e-01,
          6.7008e-05, 9.8932e-01],
         [3.5263e-03, 9.9976e-01, 1.0000e+00,  ..., 9.4355e-04,
          9.9980e-01, 3.5603e-03]],
        [[1.5413e-03, 3.7291e-04, 4.7876e-04,  ..., 2.9901e-05,
          9.9791e-01, 3.8332e-03],
         [1.5413e-03, 3.7291e-04, 4.7876e-04,  ..., 2.9901e-05,
          6.8360e-04, 3.8332e-03],
         [9.9538e-01, 3.7291e-04, 4.7876e-04,  ..., 2.9901e-05,
          7.2542e-04, 9.8723e-01],
         [1.5413e-03, 9.9888e-01, 9.9856e-01,  ..., 9.9991e-01,
          6.8360e-04, 5.1020e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 819:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 4.6245e-04, 5.9594e-04,  ..., 6.6221e-04,
          3.3610e-04, 9.7040e-01],
         [3.7899e-05, 4.6245e-04, 5.9594e-04,  ..., 6.6221e-04,
          3.3610e-04, 1.0713e-02],
         [3.7899e-05, 4.6245e-04, 5.9594e-04,  ..., 9.9801e-01,
          9.9899e-01, 1.2898e-02],
         [3.7899e-05, 9.9861e-01, 9.9821e-01,  ..., 6.6221e-04,
          3.3610e-04, 5.9887e-03]],
        [[9.9897e-01, 1.8947e-04, 4.9666e-04,  ..., 2.3367e-04,
          1.1194e-04, 8.8999e-05],
         [3.7442e-04, 1.8947e-04, 4.9666e-04,  ..., 2.3367e-04,
          9.9966e-01, 8.8999e-05],
         [3.2982e-04, 1.8947e-04, 4.9666e-04,  ..., 9.9930e-01,
          1.1194e-04, 9.9973e-01],
         [3.2982e-04, 9.9943e-01, 9.9851e-01,  ..., 2.3367e-04,
          1.1194e-04, 8.8999e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3060e-03, 5.9090e-04, 9.0090e-07,  ..., 4.1079e-03,
          8.9716e-05, 5.0706e-03],
         [1.3060e-03, 5.9090e-04, 9.0090e-07,  ..., 3.8618e-03,
          8.9716e-05, 4.7022e-03],
         [9.9608e-01, 5.9090e-04, 9.0090e-07,  ..., 9.8810e-01,
          8.9716e-05, 9.8533e-01],
         [1.3060e-03, 9.9823e-01, 1.0000e+00,  ..., 3.9324e-03,
          9.9973e-01, 4.8983e-03]],
        [[1.3899e-03, 8.1312e-05, 2.8373e-04,  ..., 3.2215e-05,
          9.9456e-01, 2.4790e-03],
         [1.3899e-03, 8.1312e-05, 2.8373e-04,  ..., 3.2215e-05,
          1.8022e-03, 2.4790e-03],
         [9.9583e-01, 8.1312e-05, 2.8373e-04,  ..., 3.2215e-05,
          1.8376e-03, 9.9190e-01],
         [1.3899e-03, 9.9976e-01, 9.9915e-01,  ..., 9.9990e-01,
          1.8022e-03, 3.1392e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 820:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:00,240 [Process: 0] Synchronize training processes
2024-08-18 15:28:00,240 [Process: 0] Evaluating...
2024-08-18 15:28:00,242 [Process: 0] EPOCH 820:
2024-08-18 15:28:00,244 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:01,370 [Process: 0] Synchronize training processes
2024-08-18 15:28:01,371 [Process: 0] Evaluating...
2024-08-18 15:28:01,372 [Process: 0] EPOCH 821:
2024-08-18 15:28:01,374 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9898e-01, 1.9506e-03, 2.2880e-04,  ..., 1.2977e-04,
          1.0466e-04, 9.7466e-01],
         [3.3896e-04, 1.9506e-03, 2.2880e-04,  ..., 1.2977e-04,
          1.0466e-04, 4.2255e-03],
         [3.3896e-04, 1.9506e-03, 2.2880e-04,  ..., 9.9961e-01,
          9.9969e-01, 1.6886e-02],
         [3.3896e-04, 9.9415e-01, 9.9931e-01,  ..., 1.2977e-04,
          1.0466e-04, 4.2255e-03]],
        [[9.9918e-01, 3.8941e-04, 1.5279e-03,  ..., 4.3128e-04,
          3.9297e-05, 1.0234e-04],
         [3.0215e-04, 3.8941e-04, 1.5279e-03,  ..., 4.3128e-04,
          9.9988e-01, 1.0234e-04],
         [2.5789e-04, 3.8941e-04, 1.5279e-03,  ..., 9.9871e-01,
          3.9297e-05, 9.9969e-01],
         [2.5789e-04, 9.9883e-01, 9.9542e-01,  ..., 4.3128e-04,
          3.9297e-05, 1.0234e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1103e-03, 2.4086e-03, 2.0694e-05,  ..., 2.1934e-03,
          1.8796e-05, 1.7562e-03],
         [1.1103e-03, 2.4086e-03, 2.0694e-05,  ..., 2.1934e-03,
          1.8796e-05, 1.7562e-03],
         [9.9667e-01, 2.4086e-03, 2.0694e-05,  ..., 9.9342e-01,
          1.8796e-05, 9.9473e-01],
         [1.1103e-03, 9.9277e-01, 9.9994e-01,  ..., 2.1934e-03,
          9.9994e-01, 1.7562e-03]],
        [[5.5460e-04, 2.4081e-04, 1.2078e-03,  ..., 2.2182e-05,
          9.9549e-01, 1.5321e-03],
         [5.5460e-04, 2.4081e-04, 1.2078e-03,  ..., 2.2182e-05,
          1.3708e-03, 1.5321e-03],
         [9.9834e-01, 2.4081e-04, 1.2078e-03,  ..., 2.2182e-05,
          1.7661e-03, 9.9540e-01],
         [5.5460e-04, 9.9928e-01, 9.9638e-01,  ..., 9.9993e-01,
          1.3708e-03, 1.5321e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 821:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9976e-01, 9.8506e-04, 2.5522e-03,  ..., 4.8924e-04,
          4.7585e-04, 9.9791e-01],
         [8.1226e-05, 9.8506e-04, 2.5522e-03,  ..., 4.8924e-04,
          4.7585e-04, 4.7545e-04],
         [8.1226e-05, 9.8506e-04, 2.7807e-03,  ..., 9.9853e-01,
          9.9857e-01, 1.1440e-03],
         [8.1226e-05, 9.9704e-01, 9.9211e-01,  ..., 4.8924e-04,
          4.7585e-04, 4.7545e-04]],
        [[9.9964e-01, 3.0133e-04, 1.2160e-03,  ..., 1.0210e-04,
          1.2634e-04, 2.3138e-04],
         [1.1915e-04, 3.0133e-04, 1.2160e-03,  ..., 1.0210e-04,
          9.9962e-01, 2.3138e-04],
         [1.1915e-04, 3.0133e-04, 1.2160e-03,  ..., 9.9969e-01,
          1.2634e-04, 9.9931e-01],
         [1.1915e-04, 9.9910e-01, 9.9635e-01,  ..., 1.0210e-04,
          1.2634e-04, 2.3138e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:28:02,504 [Process: 0] Synchronize training processes
2024-08-18 15:28:02,504 [Process: 0] Evaluating...
2024-08-18 15:28:02,507 [Process: 0] EPOCH 822:
2024-08-18 15:28:02,509 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:03,638 [Process: 0] Synchronize training processes
2024-08-18 15:28:03,638 [Process: 0] Evaluating...
2024-08-18 15:28:03,640 [Process: 0] EPOCH 823:
2024-08-18 15:28:03,642 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0503e-03, 5.1651e-03, 2.7248e-06,  ..., 1.3343e-03,
          4.4182e-05, 1.5244e-03],
         [1.0503e-03, 5.1651e-03, 2.7248e-06,  ..., 1.3343e-03,
          4.4182e-05, 1.5244e-03],
         [9.9685e-01, 5.1651e-03, 2.7248e-06,  ..., 9.9600e-01,
          4.4182e-05, 9.9543e-01],
         [1.0503e-03, 9.8450e-01, 9.9999e-01,  ..., 1.3343e-03,
          9.9987e-01, 1.5244e-03]],
        [[5.8893e-04, 7.3275e-04, 2.4552e-04,  ..., 4.7039e-05,
          9.9488e-01, 3.3368e-03],
         [5.8893e-04, 5.9221e-04, 2.4552e-04,  ..., 4.7039e-05,
          1.2674e-03, 3.3368e-03],
         [9.9823e-01, 5.9221e-04, 2.4552e-04,  ..., 4.7039e-05,
          2.5819e-03, 9.8999e-01],
         [5.8893e-04, 9.9808e-01, 9.9926e-01,  ..., 9.9986e-01,
          1.2674e-03, 3.3368e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 822:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8534e-01, 1.4367e-03, 1.1550e-03,  ..., 9.5349e-04,
          2.0096e-04, 9.9932e-01],
         [3.8515e-03, 1.4367e-03, 1.1550e-03,  ..., 9.5349e-04,
          2.0096e-04, 2.2713e-04],
         [7.0622e-03, 1.4367e-03, 1.1550e-03,  ..., 9.9696e-01,
          9.9940e-01, 2.2713e-04],
         [3.7415e-03, 9.9569e-01, 9.9653e-01,  ..., 1.1379e-03,
          2.0096e-04, 2.2713e-04]],
        [[9.9707e-01, 1.8431e-03, 2.1482e-03,  ..., 1.3420e-04,
          3.5125e-04, 1.3693e-04],
         [9.2594e-04, 1.5102e-03, 1.9421e-03,  ..., 1.3420e-04,
          9.9895e-01, 1.3693e-04],
         [1.0816e-03, 1.5102e-03, 1.9421e-03,  ..., 9.9960e-01,
          3.5125e-04, 9.9959e-01],
         [9.2594e-04, 9.9514e-01, 9.9397e-01,  ..., 1.3420e-04,
          3.5125e-04, 1.3693e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4562e-03, 9.2215e-04, 7.1271e-05,  ..., 5.3105e-03,
          4.7697e-05, 2.0728e-03],
         [1.4562e-03, 9.2215e-04, 7.1271e-05,  ..., 3.9050e-03,
          4.7697e-05, 2.0728e-03],
         [9.9563e-01, 9.2215e-04, 7.1271e-05,  ..., 9.8688e-01,
          4.7697e-05, 9.9378e-01],
         [1.4562e-03, 9.9723e-01, 9.9979e-01,  ..., 3.9050e-03,
          9.9986e-01, 2.0728e-03]],
        [[2.9535e-03, 7.6461e-04, 2.2967e-04,  ..., 6.6666e-06,
          9.7862e-01, 1.2326e-03],
         [2.1755e-03, 7.1732e-04, 2.2967e-04,  ..., 6.6666e-06,
          4.5708e-03, 1.2326e-03],
         [9.9270e-01, 7.1732e-04, 2.2967e-04,  ..., 6.6666e-06,
          1.0475e-02, 9.9630e-01],
         [2.1755e-03, 9.9780e-01, 9.9931e-01,  ..., 9.9998e-01,
          6.3311e-03, 1.2326e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 823:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9926e-01, 1.4621e-03, 5.3413e-04,  ..., 1.2577e-03,
          3.0868e-05, 9.9678e-01],
         [2.4706e-04, 1.4621e-03, 5.3413e-04,  ..., 1.2577e-03,
          3.0868e-05, 1.0324e-03],
         [2.4706e-04, 1.4621e-03, 5.3413e-04,  ..., 9.9590e-01,
          9.9991e-01, 1.1566e-03],
         [2.4706e-04, 9.9561e-01, 9.9840e-01,  ..., 1.5878e-03,
          3.0868e-05, 1.0324e-03]],
        [[9.8747e-01, 1.9246e-03, 8.9905e-04,  ..., 1.0470e-03,
          2.1127e-03, 5.1807e-05],
         [4.8433e-03, 1.9246e-03, 8.9905e-04,  ..., 1.0470e-03,
          9.8465e-01, 5.1807e-05],
         [4.1488e-03, 1.9246e-03, 8.9905e-04,  ..., 9.9686e-01,
          1.1124e-02, 9.9984e-01],
         [3.5405e-03, 9.9423e-01, 9.9730e-01,  ..., 1.0470e-03,
          2.1127e-03, 5.1807e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:04,767 [Process: 0] Synchronize training processes
2024-08-18 15:28:04,768 [Process: 0] Evaluating...
2024-08-18 15:28:04,770 [Process: 0] EPOCH 824:
2024-08-18 15:28:04,772 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:05,902 [Process: 0] Synchronize training processes
2024-08-18 15:28:05,902 [Process: 0] Evaluating...
2024-08-18 15:28:05,904 [Process: 0] EPOCH 825:
2024-08-18 15:28:05,906 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8636e-03, 4.1901e-04, 8.4451e-06,  ..., 7.4551e-04,
          1.2914e-04, 3.5959e-03],
         [1.8636e-03, 4.1901e-04, 8.4451e-06,  ..., 7.4551e-04,
          1.2914e-04, 3.5959e-03],
         [9.9441e-01, 4.1901e-04, 8.4451e-06,  ..., 9.9776e-01,
          1.2914e-04, 9.8921e-01],
         [1.8636e-03, 9.9874e-01, 9.9997e-01,  ..., 7.4551e-04,
          9.9961e-01, 3.5959e-03]],
        [[2.5089e-03, 1.3596e-03, 3.1117e-04,  ..., 5.2766e-05,
          9.7156e-01, 8.6339e-04],
         [2.4633e-03, 1.2110e-03, 3.1117e-04,  ..., 5.2766e-05,
          5.9435e-03, 8.6339e-04],
         [9.9256e-01, 1.2110e-03, 3.1117e-04,  ..., 5.2766e-05,
          1.5124e-02, 9.9741e-01],
         [2.4633e-03, 9.9622e-01, 9.9907e-01,  ..., 9.9984e-01,
          7.3761e-03, 8.6339e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 824:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9919e-01, 4.2599e-04, 2.6278e-04,  ..., 4.6791e-04,
          2.6162e-05, 9.9963e-01],
         [2.7062e-04, 4.2599e-04, 2.6278e-04,  ..., 4.6791e-04,
          2.6162e-05, 1.2173e-04],
         [2.7062e-04, 4.2599e-04, 2.6278e-04,  ..., 9.9860e-01,
          9.9992e-01, 1.2173e-04],
         [2.7062e-04, 9.9872e-01, 9.9921e-01,  ..., 4.6791e-04,
          2.6162e-05, 1.2173e-04]],
        [[9.9864e-01, 2.5826e-03, 1.1478e-03,  ..., 7.4860e-05,
          6.3050e-04, 4.4865e-04],
         [4.5330e-04, 2.5826e-03, 1.1478e-03,  ..., 7.4860e-05,
          9.9782e-01, 4.4865e-04],
         [4.5330e-04, 2.5826e-03, 1.1478e-03,  ..., 9.9978e-01,
          9.1490e-04, 9.9865e-01],
         [4.5330e-04, 9.9225e-01, 9.9656e-01,  ..., 7.4860e-05,
          6.3050e-04, 4.4865e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7762e-03, 1.8602e-04, 5.9656e-06,  ..., 2.4063e-03,
          7.3881e-06, 1.3764e-03],
         [1.7762e-03, 1.8602e-04, 5.9656e-06,  ..., 2.4063e-03,
          7.3881e-06, 1.3764e-03],
         [9.9467e-01, 1.8602e-04, 5.9656e-06,  ..., 9.9278e-01,
          7.3881e-06, 9.9587e-01],
         [1.7762e-03, 9.9944e-01, 9.9998e-01,  ..., 2.4063e-03,
          9.9998e-01, 1.3764e-03]],
        [[8.4899e-04, 2.2143e-03, 3.9297e-04,  ..., 6.4515e-07,
          9.9899e-01, 1.3159e-03],
         [8.4899e-04, 1.8037e-03, 3.9297e-04,  ..., 6.4515e-07,
          3.3762e-04, 1.3159e-03],
         [9.9745e-01, 1.8037e-03, 3.9297e-04,  ..., 6.4515e-07,
          3.3762e-04, 9.9605e-01],
         [8.4899e-04, 9.9418e-01, 9.9882e-01,  ..., 1.0000e+00,
          3.3762e-04, 1.3159e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 825:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9968e-01, 1.5237e-02, 1.1390e-03,  ..., 8.4657e-05,
          2.1668e-05, 9.9959e-01],
         [1.0558e-04, 1.2702e-02, 1.1390e-03,  ..., 8.4657e-05,
          2.1668e-05, 1.3658e-04],
         [1.0558e-04, 3.1010e-02, 1.1390e-03,  ..., 9.9975e-01,
          9.9993e-01, 1.3658e-04],
         [1.0558e-04, 9.4105e-01, 9.9658e-01,  ..., 8.4657e-05,
          2.1668e-05, 1.3658e-04]],
        [[9.9163e-01, 1.4859e-03, 1.0214e-03,  ..., 6.8280e-05,
          3.7310e-05, 1.2090e-05],
         [3.3073e-03, 1.4859e-03, 1.0214e-03,  ..., 6.8280e-05,
          9.9988e-01, 1.2090e-05],
         [2.5300e-03, 1.4859e-03, 1.0214e-03,  ..., 9.9980e-01,
          4.4538e-05, 9.9996e-01],
         [2.5300e-03, 9.9554e-01, 9.9694e-01,  ..., 6.8280e-05,
          3.7310e-05, 1.2090e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:07,026 [Process: 0] Synchronize training processes
2024-08-18 15:28:07,026 [Process: 0] Evaluating...
2024-08-18 15:28:07,028 [Process: 0] EPOCH 826:
2024-08-18 15:28:07,030 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7097e-03, 6.9457e-04, 2.9429e-04,  ..., 1.9721e-03,
          1.2742e-05, 9.9922e-04],
         [2.7097e-03, 6.9457e-04, 2.9429e-04,  ..., 1.9721e-03,
          1.2742e-05, 9.9922e-04],
         [9.9187e-01, 6.9457e-04, 2.9429e-04,  ..., 9.9408e-01,
          1.2742e-05, 9.9700e-01],
         [2.7097e-03, 9.9792e-01, 9.9912e-01,  ..., 1.9721e-03,
          9.9996e-01, 9.9922e-04]],
        [[1.1459e-03, 7.1015e-05, 2.5069e-03,  ..., 1.7274e-04,
          9.9968e-01, 1.2679e-03],
         [1.1459e-03, 7.1015e-05, 2.5069e-03,  ..., 1.7274e-04,
          1.0757e-04, 1.2679e-03],
         [9.9656e-01, 7.1015e-05, 2.5069e-03,  ..., 1.7274e-04,
          1.0757e-04, 9.9620e-01],
         [1.1459e-03, 9.9979e-01, 9.9248e-01,  ..., 9.9948e-01,
          1.0757e-04, 1.2679e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 826:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 6.3582e-04, 1.4597e-03,  ..., 1.9042e-03,
          6.3767e-05, 9.9727e-01],
         [3.7904e-05, 6.3582e-04, 1.4597e-03,  ..., 1.9042e-03,
          6.3767e-05, 8.4473e-04],
         [3.7904e-05, 6.3582e-04, 1.4597e-03,  ..., 9.9429e-01,
          9.9981e-01, 1.0417e-03],
         [3.7904e-05, 9.9809e-01, 9.9562e-01,  ..., 1.9042e-03,
          6.3767e-05, 8.4473e-04]],
        [[9.9900e-01, 2.7934e-03, 9.5770e-04,  ..., 2.3852e-04,
          1.0942e-03, 5.2961e-05],
         [3.3209e-04, 2.7934e-03, 9.5770e-04,  ..., 2.3852e-04,
          9.9542e-01, 5.2961e-05],
         [3.3209e-04, 2.9031e-03, 9.5770e-04,  ..., 9.9928e-01,
          2.5375e-03, 9.9984e-01],
         [3.3209e-04, 9.9151e-01, 9.9713e-01,  ..., 2.3852e-04,
          9.5084e-04, 5.2961e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9053e-04, 4.8189e-04, 1.3067e-04,  ..., 1.5167e-03,
          1.2240e-05, 2.2819e-03],
         [9.9053e-04, 4.8189e-04, 1.3067e-04,  ..., 1.5167e-03,
          1.2240e-05, 2.2819e-03],
         [9.9703e-01, 4.8189e-04, 1.3067e-04,  ..., 9.9545e-01,
          1.2240e-05, 9.9315e-01],
         [9.9053e-04, 9.9855e-01, 9.9961e-01,  ..., 1.5167e-03,
          9.9996e-01, 2.2819e-03]],
        [[1.7937e-03, 4.4048e-04, 3.5870e-04,  ..., 3.5888e-05,
          9.9188e-01, 3.6177e-03],
         [1.7937e-03, 4.4048e-04, 3.5870e-04,  ..., 3.5888e-05,
          2.2828e-03, 2.5572e-03],
         [9.9462e-01, 4.4048e-04, 3.5870e-04,  ..., 3.5888e-05,
          2.9622e-03, 9.9127e-01],
         [1.7937e-03, 9.9868e-01, 9.9892e-01,  ..., 9.9989e-01,
          2.8713e-03, 2.5572e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 827:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:08,154 [Process: 0] Synchronize training processes
2024-08-18 15:28:08,155 [Process: 0] Evaluating...
2024-08-18 15:28:08,156 [Process: 0] EPOCH 827:
2024-08-18 15:28:08,158 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:09,286 [Process: 0] Synchronize training processes
2024-08-18 15:28:09,286 [Process: 0] Evaluating...
2024-08-18 15:28:09,288 [Process: 0] EPOCH 828:
2024-08-18 15:28:09,289 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9964e-01, 8.6307e-04, 1.0443e-03,  ..., 4.0980e-04,
          6.3252e-04, 9.9905e-01],
         [1.1991e-04, 8.6307e-04, 1.0443e-03,  ..., 4.0980e-04,
          6.3252e-04, 3.1766e-04],
         [1.1991e-04, 8.6307e-04, 1.0443e-03,  ..., 9.9877e-01,
          9.9810e-01, 3.1766e-04],
         [1.1991e-04, 9.9741e-01, 9.9687e-01,  ..., 4.0980e-04,
          6.3252e-04, 3.1766e-04]],
        [[9.9775e-01, 9.0679e-04, 3.3792e-03,  ..., 7.9517e-05,
          7.0800e-05, 8.3686e-05],
         [9.9202e-04, 9.0679e-04, 3.2089e-03,  ..., 7.9517e-05,
          9.9966e-01, 8.3686e-05],
         [6.2838e-04, 9.0679e-04, 3.3598e-03,  ..., 9.9976e-01,
          1.9877e-04, 9.9975e-01],
         [6.2838e-04, 9.9728e-01, 9.9005e-01,  ..., 7.9517e-05,
          7.0800e-05, 8.3686e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.3305e-03, 2.4957e-04, 3.8196e-03,  ..., 1.6419e-03,
          1.9808e-05, 2.0634e-03],
         [2.3305e-03, 2.4957e-04, 1.6161e-03,  ..., 1.6419e-03,
          1.9808e-05, 2.0634e-03],
         [9.9301e-01, 2.4957e-04, 1.6161e-03,  ..., 9.9507e-01,
          1.9808e-05, 9.9381e-01],
         [2.3305e-03, 9.9925e-01, 9.9295e-01,  ..., 1.6419e-03,
          9.9994e-01, 2.0634e-03]],
        [[6.0759e-03, 1.3064e-04, 1.0132e-04,  ..., 1.5748e-05,
          9.9518e-01, 2.6918e-03],
         [5.5588e-03, 1.3064e-04, 1.0132e-04,  ..., 1.5748e-05,
          1.4710e-03, 2.6918e-03],
         [9.8132e-01, 1.3064e-04, 1.0132e-04,  ..., 1.5748e-05,
          1.8735e-03, 9.9192e-01],
         [7.0434e-03, 9.9961e-01, 9.9970e-01,  ..., 9.9995e-01,
          1.4710e-03, 2.6918e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 828:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9986e-01, 1.0660e-03, 2.9254e-04,  ..., 1.9800e-03,
          2.7633e-04, 9.9623e-01],
         [4.7354e-05, 1.0660e-03, 2.9254e-04,  ..., 1.9800e-03,
          2.7633e-04, 8.3242e-04],
         [4.7354e-05, 1.0660e-03, 2.9254e-04,  ..., 9.9406e-01,
          9.9917e-01, 2.1013e-03],
         [4.7354e-05, 9.9680e-01, 9.9912e-01,  ..., 1.9800e-03,
          2.7633e-04, 8.3242e-04]],
        [[9.9926e-01, 1.6682e-03, 2.6981e-03,  ..., 2.1798e-04,
          7.5616e-05, 1.9596e-04],
         [2.4660e-04, 1.6682e-03, 2.6981e-03,  ..., 2.1798e-04,
          9.9977e-01, 1.9596e-04],
         [2.4660e-04, 1.6682e-03, 2.9854e-03,  ..., 9.9935e-01,
          7.5616e-05, 9.9941e-01],
         [2.4660e-04, 9.9500e-01, 9.9162e-01,  ..., 2.1798e-04,
          7.5616e-05, 1.9596e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3971e-03, 1.2517e-04, 8.2047e-05,  ..., 1.6062e-03,
          5.5173e-06, 1.5660e-03],
         [1.3971e-03, 1.2517e-04, 8.2047e-05,  ..., 1.6062e-03,
          5.5173e-06, 1.5660e-03],
         [9.9581e-01, 1.2517e-04, 8.2047e-05,  ..., 9.9518e-01,
          5.5173e-06, 9.9530e-01],
         [1.3971e-03, 9.9962e-01, 9.9975e-01,  ..., 1.6062e-03,
          9.9998e-01, 1.5660e-03]],
        [[1.3530e-03, 2.3187e-04, 8.4576e-04,  ..., 1.3495e-05,
          9.9930e-01, 3.4340e-03],
         [1.3530e-03, 2.3187e-04, 8.4576e-04,  ..., 1.3495e-05,
          2.3489e-04, 3.4340e-03],
         [9.9594e-01, 2.3187e-04, 8.4576e-04,  ..., 1.3495e-05,
          2.3489e-04, 9.8970e-01],
         [1.3530e-03, 9.9930e-01, 9.9746e-01,  ..., 9.9996e-01,
          2.3489e-04, 3.4340e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:10,416 [Process: 0] Synchronize training processes
2024-08-18 15:28:10,417 [Process: 0] Evaluating...
2024-08-18 15:28:10,418 [Process: 0] EPOCH 829:
2024-08-18 15:28:10,420 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:11,551 [Process: 0] Synchronize training processes
2024-08-18 15:28:11,551 [Process: 0] Evaluating...
2024-08-18 15:28:11,553 [Process: 0] EPOCH 830:
2024-08-18 15:28:11,555 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 829:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9981e-01, 6.6979e-04, 7.5245e-04,  ..., 5.4156e-05,
          3.4026e-04, 9.9966e-01],
         [6.4886e-05, 6.6979e-04, 7.5245e-04,  ..., 5.4156e-05,
          3.4026e-04, 1.1405e-04],
         [6.4886e-05, 6.6979e-04, 7.5245e-04,  ..., 9.9984e-01,
          9.9898e-01, 1.1442e-04],
         [6.4886e-05, 9.9799e-01, 9.9774e-01,  ..., 5.4156e-05,
          3.4026e-04, 1.1405e-04]],
        [[9.9869e-01, 1.4315e-03, 7.3902e-04,  ..., 2.0167e-04,
          1.4224e-04, 5.0148e-05],
         [4.3501e-04, 1.4315e-03, 7.3902e-04,  ..., 2.0167e-04,
          9.9957e-01, 5.0148e-05],
         [4.3501e-04, 1.4315e-03, 7.3902e-04,  ..., 9.9940e-01,
          1.4224e-04, 9.9985e-01],
         [4.3501e-04, 9.9571e-01, 9.9778e-01,  ..., 2.0167e-04,
          1.4224e-04, 5.0148e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2509e-03, 1.1957e-04, 1.7003e-05,  ..., 1.9781e-03,
          4.4136e-06, 1.3955e-03],
         [1.2509e-03, 1.1957e-04, 1.7003e-05,  ..., 1.9781e-03,
          4.4136e-06, 1.3955e-03],
         [9.9625e-01, 1.1957e-04, 1.7003e-05,  ..., 9.9407e-01,
          4.4136e-06, 9.9581e-01],
         [1.2509e-03, 9.9964e-01, 9.9995e-01,  ..., 1.9781e-03,
          9.9999e-01, 1.3955e-03]],
        [[1.0644e-03, 2.8786e-05, 1.0065e-04,  ..., 1.0121e-04,
          9.9924e-01, 8.5102e-04],
         [1.0644e-03, 2.8786e-05, 1.0065e-04,  ..., 1.0121e-04,
          2.5202e-04, 8.5102e-04],
         [9.9681e-01, 2.8786e-05, 1.0065e-04,  ..., 1.0121e-04,
          2.5202e-04, 9.9745e-01],
         [1.0644e-03, 9.9991e-01, 9.9970e-01,  ..., 9.9970e-01,
          2.5202e-04, 8.5102e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 830:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9762e-01, 4.4631e-03, 3.3029e-04,  ..., 2.8597e-05,
          3.6837e-05, 9.8408e-01],
         [7.9187e-04, 4.4288e-03, 3.3029e-04,  ..., 2.8597e-05,
          3.6837e-05, 2.6054e-03],
         [7.9187e-04, 6.0777e-03, 3.3029e-04,  ..., 9.9991e-01,
          9.9989e-01, 1.0706e-02],
         [7.9187e-04, 9.8503e-01, 9.9901e-01,  ..., 2.8597e-05,
          3.6837e-05, 2.6054e-03]],
        [[9.9791e-01, 5.5058e-04, 9.2989e-04,  ..., 7.1420e-04,
          5.3961e-04, 9.7873e-05],
         [6.9721e-04, 5.5058e-04, 9.2989e-04,  ..., 7.1420e-04,
          9.9802e-01, 9.7873e-05],
         [6.9721e-04, 5.5058e-04, 9.2989e-04,  ..., 9.9786e-01,
          8.9828e-04, 9.9971e-01],
         [6.9721e-04, 9.9835e-01, 9.9721e-01,  ..., 7.1420e-04,
          5.3961e-04, 9.7873e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:12,683 [Process: 0] Synchronize training processes
2024-08-18 15:28:12,683 [Process: 0] Evaluating...
2024-08-18 15:28:12,685 [Process: 0] EPOCH 831:
2024-08-18 15:28:12,686 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:13,814 [Process: 0] Synchronize training processes
2024-08-18 15:28:13,814 [Process: 0] Evaluating...
2024-08-18 15:28:13,817 [Process: 0] EPOCH 832:
2024-08-18 15:28:13,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3433e-03, 4.2994e-04, 1.4230e-06,  ..., 3.0387e-03,
          9.5699e-07, 1.9706e-03],
         [1.3433e-03, 4.2994e-04, 1.4230e-06,  ..., 3.0387e-03,
          9.5699e-07, 1.9706e-03],
         [9.9597e-01, 4.2994e-04, 1.4230e-06,  ..., 9.8983e-01,
          9.5699e-07, 9.9409e-01],
         [1.3433e-03, 9.9871e-01, 1.0000e+00,  ..., 4.0914e-03,
          1.0000e+00, 1.9706e-03]],
        [[1.5132e-03, 5.6095e-05, 4.8343e-04,  ..., 8.3285e-05,
          9.9955e-01, 1.7553e-03],
         [1.5132e-03, 5.6095e-05, 4.8343e-04,  ..., 8.3285e-05,
          1.5026e-04, 1.7553e-03],
         [9.9546e-01, 5.6095e-05, 4.8343e-04,  ..., 8.3285e-05,
          1.5026e-04, 9.9473e-01],
         [1.5132e-03, 9.9983e-01, 9.9855e-01,  ..., 9.9975e-01,
          1.5026e-04, 1.7553e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 831:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9992e-01, 2.8281e-04, 2.2090e-03,  ..., 1.9911e-03,
          7.8260e-05, 9.9932e-01],
         [2.6203e-05, 2.8281e-04, 2.2090e-03,  ..., 1.9911e-03,
          7.8260e-05, 2.3060e-04],
         [2.6203e-05, 2.8281e-04, 3.3145e-03,  ..., 9.9403e-01,
          9.9977e-01, 2.2657e-04],
         [2.6203e-05, 9.9915e-01, 9.9227e-01,  ..., 1.9911e-03,
          7.8260e-05, 2.2657e-04]],
        [[9.9654e-01, 5.6420e-04, 9.6843e-04,  ..., 1.8800e-04,
          1.3038e-02, 5.4501e-05],
         [1.1536e-03, 5.6420e-04, 9.6843e-04,  ..., 1.8800e-04,
          9.6234e-01, 5.4501e-05],
         [1.1536e-03, 5.6420e-04, 9.6843e-04,  ..., 9.9944e-01,
          1.8466e-02, 9.9984e-01],
         [1.1536e-03, 9.9831e-01, 9.9709e-01,  ..., 1.8800e-04,
          6.1516e-03, 5.4501e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2024e-03, 1.2331e-03, 6.8940e-04,  ..., 4.6968e-03,
          2.1638e-04, 1.9301e-03],
         [1.2024e-03, 1.3532e-03, 6.8940e-04,  ..., 3.3176e-03,
          2.1638e-04, 1.9301e-03],
         [9.9639e-01, 1.2331e-03, 6.8940e-04,  ..., 9.8867e-01,
          2.1638e-04, 9.9421e-01],
         [1.2024e-03, 9.9618e-01, 9.9793e-01,  ..., 3.3176e-03,
          9.9935e-01, 1.9301e-03]],
        [[2.1749e-03, 3.5709e-03, 5.7609e-04,  ..., 3.7080e-05,
          9.9700e-01, 2.1113e-03],
         [2.1749e-03, 3.3893e-03, 5.7609e-04,  ..., 3.7080e-05,
          9.0854e-04, 2.1113e-03],
         [9.9348e-01, 3.3893e-03, 5.7609e-04,  ..., 3.7080e-05,
          1.1793e-03, 9.9367e-01],
         [2.1749e-03, 9.8965e-01, 9.9827e-01,  ..., 9.9989e-01,
          9.0854e-04, 2.1113e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 832:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9916e-01, 7.9216e-04, 1.5843e-03,  ..., 3.9706e-04,
          1.1131e-04, 9.9928e-01],
         [2.7874e-04, 7.9216e-04, 1.5843e-03,  ..., 3.9706e-04,
          1.1131e-04, 2.3835e-04],
         [2.7874e-04, 7.9216e-04, 1.5843e-03,  ..., 9.9881e-01,
          9.9967e-01, 2.3835e-04],
         [2.7874e-04, 9.9762e-01, 9.9525e-01,  ..., 3.9706e-04,
          1.1131e-04, 2.3835e-04]],
        [[9.9910e-01, 1.1354e-03, 3.5234e-04,  ..., 1.8691e-04,
          6.7407e-05, 1.7455e-04],
         [2.9829e-04, 1.1354e-03, 3.5234e-04,  ..., 1.8691e-04,
          9.9960e-01, 1.7455e-04],
         [2.9829e-04, 1.1354e-03, 3.5234e-04,  ..., 9.9944e-01,
          2.6516e-04, 9.9948e-01],
         [2.9829e-04, 9.9659e-01, 9.9894e-01,  ..., 1.8691e-04,
          6.7407e-05, 1.7455e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:14,947 [Process: 0] Synchronize training processes
2024-08-18 15:28:14,948 [Process: 0] Evaluating...
2024-08-18 15:28:14,949 [Process: 0] EPOCH 833:
2024-08-18 15:28:14,951 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1499e-03, 1.2171e-04, 1.2088e-03,  ..., 3.7168e-04,
          1.5845e-05, 1.1449e-03],
         [1.1499e-03, 1.2171e-04, 1.2088e-03,  ..., 3.7168e-04,
          1.5845e-05, 1.1449e-03],
         [9.9655e-01, 1.2171e-04, 1.2088e-03,  ..., 9.9888e-01,
          1.5845e-05, 9.9657e-01],
         [1.1499e-03, 9.9963e-01, 9.9637e-01,  ..., 3.7168e-04,
          9.9995e-01, 1.1449e-03]],
        [[1.1073e-03, 6.2683e-04, 2.0580e-04,  ..., 9.4893e-06,
          9.9775e-01, 8.8499e-04],
         [1.1073e-03, 6.2683e-04, 2.0580e-04,  ..., 9.4893e-06,
          7.3534e-04, 8.8499e-04],
         [9.9668e-01, 6.2683e-04, 2.0580e-04,  ..., 9.4893e-06,
          7.3534e-04, 9.9735e-01],
         [1.1073e-03, 9.9812e-01, 9.9938e-01,  ..., 9.9997e-01,
          7.7639e-04, 8.8499e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 833:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9950e-01, 1.7220e-03, 6.5895e-04,  ..., 1.7267e-04,
          6.8658e-05, 9.9769e-01],
         [1.6537e-04, 1.7220e-03, 6.5895e-04,  ..., 1.7267e-04,
          6.8658e-05, 7.2346e-04],
         [1.6537e-04, 1.7220e-03, 6.5895e-04,  ..., 9.9948e-01,
          9.9979e-01, 8.6377e-04],
         [1.6537e-04, 9.9483e-01, 9.9802e-01,  ..., 1.7267e-04,
          6.8658e-05, 7.2346e-04]],
        [[9.9641e-01, 4.5432e-04, 3.8122e-03,  ..., 2.3859e-04,
          1.4174e-03, 2.2078e-04],
         [1.1560e-03, 4.5432e-04, 3.1696e-03,  ..., 2.3859e-04,
          9.9348e-01, 2.2078e-04],
         [1.2797e-03, 4.5432e-04, 4.0321e-03,  ..., 9.9928e-01,
          3.6891e-03, 9.9934e-01],
         [1.1560e-03, 9.9864e-01, 9.8899e-01,  ..., 2.3859e-04,
          1.4174e-03, 2.2078e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6912e-03, 3.8848e-04, 1.5820e-06,  ..., 2.3832e-03,
          1.2767e-05, 9.7691e-04],
         [1.6912e-03, 3.8848e-04, 1.5820e-06,  ..., 2.3832e-03,
          1.2767e-05, 9.7691e-04],
         [9.9466e-01, 3.8848e-04, 1.5820e-06,  ..., 9.9285e-01,
          1.2767e-05, 9.9707e-01],
         [1.9602e-03, 9.9883e-01, 1.0000e+00,  ..., 2.3832e-03,
          9.9996e-01, 9.7691e-04]],
        [[2.2820e-03, 2.1705e-04, 1.5500e-03,  ..., 1.8958e-05,
          9.9784e-01, 1.8228e-03],
         [2.2820e-03, 2.1705e-04, 1.5500e-03,  ..., 1.8958e-05,
          6.8228e-04, 1.8228e-03],
         [9.9315e-01, 2.1705e-04, 1.5500e-03,  ..., 1.8958e-05,
          7.9940e-04, 9.9453e-01],
         [2.2820e-03, 9.9935e-01, 9.9535e-01,  ..., 9.9994e-01,
          6.8228e-04, 1.8228e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 834:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:16,087 [Process: 0] Synchronize training processes
2024-08-18 15:28:16,087 [Process: 0] Evaluating...
2024-08-18 15:28:16,089 [Process: 0] EPOCH 834:
2024-08-18 15:28:16,090 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:17,219 [Process: 0] Synchronize training processes
2024-08-18 15:28:17,219 [Process: 0] Evaluating...
2024-08-18 15:28:17,221 [Process: 0] EPOCH 835:
2024-08-18 15:28:17,223 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9415e-01, 8.1705e-04, 2.2070e-03,  ..., 2.6699e-04,
          3.6434e-05, 9.9935e-01],
         [1.8718e-03, 8.1705e-04, 2.2070e-03,  ..., 2.6699e-04,
          3.6434e-05, 2.0649e-04],
         [2.1502e-03, 8.1705e-04, 2.4902e-03,  ..., 9.9920e-01,
          9.9989e-01, 2.4074e-04],
         [1.8273e-03, 9.9755e-01, 9.9310e-01,  ..., 2.6699e-04,
          3.6434e-05, 2.0649e-04]],
        [[9.9700e-01, 1.5861e-03, 6.8268e-04,  ..., 2.1155e-04,
          3.8504e-04, 3.0034e-05],
         [9.9852e-04, 1.5861e-03, 6.8268e-04,  ..., 2.1155e-04,
          9.9780e-01, 3.0034e-05],
         [9.9852e-04, 1.5861e-03, 6.8268e-04,  ..., 9.9937e-01,
          1.4342e-03, 9.9991e-01],
         [9.9852e-04, 9.9524e-01, 9.9795e-01,  ..., 2.1155e-04,
          3.8504e-04, 3.0034e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.0570e-04, 2.8783e-04, 1.9733e-05,  ..., 1.4418e-03,
          1.5399e-05, 7.8617e-04],
         [5.0570e-04, 2.8783e-04, 1.9733e-05,  ..., 1.4418e-03,
          1.5399e-05, 7.8617e-04],
         [9.9848e-01, 2.8783e-04, 1.9733e-05,  ..., 9.9567e-01,
          1.5399e-05, 9.9764e-01],
         [5.0570e-04, 9.9914e-01, 9.9994e-01,  ..., 1.4418e-03,
          9.9995e-01, 7.8617e-04]],
        [[7.8737e-04, 4.5688e-04, 8.0547e-04,  ..., 9.4614e-05,
          9.9715e-01, 1.3287e-03],
         [7.8737e-04, 4.5688e-04, 8.0547e-04,  ..., 9.4614e-05,
          9.0042e-04, 1.3287e-03],
         [9.9764e-01, 4.5688e-04, 8.0547e-04,  ..., 9.4614e-05,
          1.0476e-03, 9.9601e-01],
         [7.8737e-04, 9.9863e-01, 9.9758e-01,  ..., 9.9972e-01,
          9.0042e-04, 1.3287e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 835:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9796e-01, 1.0060e-03, 4.5917e-04,  ..., 3.6833e-04,
          6.8261e-05, 9.9927e-01],
         [6.7983e-04, 1.0060e-03, 4.5917e-04,  ..., 3.6833e-04,
          6.8261e-05, 2.4198e-04],
         [6.7983e-04, 1.0060e-03, 4.5917e-04,  ..., 9.9890e-01,
          9.9980e-01, 2.4198e-04],
         [6.7983e-04, 9.9698e-01, 9.9862e-01,  ..., 3.6833e-04,
          6.8261e-05, 2.4198e-04]],
        [[9.9922e-01, 3.7691e-04, 3.1481e-03,  ..., 7.0275e-04,
          7.1547e-04, 1.2033e-04],
         [2.5859e-04, 3.7691e-04, 4.0753e-03,  ..., 7.0275e-04,
          9.9603e-01, 1.2033e-04],
         [2.5859e-04, 3.7691e-04, 4.4457e-03,  ..., 9.9789e-01,
          2.3278e-03, 9.9964e-01],
         [2.5859e-04, 9.9887e-01, 9.8833e-01,  ..., 7.0275e-04,
          9.2325e-04, 1.2033e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.8882e-04, 5.5939e-04, 6.4144e-05,  ..., 2.4004e-03,
          1.8845e-04, 1.7259e-03],
         [7.8882e-04, 5.5939e-04, 6.4144e-05,  ..., 2.4004e-03,
          1.8845e-04, 1.7259e-03],
         [9.9763e-01, 5.5939e-04, 6.4144e-05,  ..., 9.9280e-01,
          1.8845e-04, 9.9482e-01],
         [7.8882e-04, 9.9832e-01, 9.9981e-01,  ..., 2.4004e-03,
          9.9943e-01, 1.7259e-03]],
        [[1.4649e-03, 8.7942e-05, 1.1398e-03,  ..., 2.5462e-05,
          9.9843e-01, 2.4942e-03],
         [1.4649e-03, 8.7942e-05, 1.2396e-03,  ..., 2.5462e-05,
          5.2175e-04, 2.4942e-03],
         [9.9561e-01, 8.7942e-05, 1.1398e-03,  ..., 2.5462e-05,
          5.2175e-04, 9.9252e-01],
         [1.4649e-03, 9.9974e-01, 9.9648e-01,  ..., 9.9992e-01,
          5.2175e-04, 2.4942e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 836:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:18,348 [Process: 0] Synchronize training processes
2024-08-18 15:28:18,348 [Process: 0] Evaluating...
2024-08-18 15:28:18,350 [Process: 0] EPOCH 836:
2024-08-18 15:28:18,352 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:19,466 [Process: 0] Synchronize training processes
2024-08-18 15:28:19,466 [Process: 0] Evaluating...
2024-08-18 15:28:19,468 [Process: 0] EPOCH 837:
2024-08-18 15:28:19,470 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9996e-01, 9.5714e-03, 1.6886e-03,  ..., 4.4472e-04,
          9.9370e-05, 9.9950e-01],
         [1.2273e-05, 8.8153e-03, 1.6886e-03,  ..., 4.4472e-04,
          9.9370e-05, 1.6777e-04],
         [1.2273e-05, 2.6492e-02, 1.6886e-03,  ..., 9.9867e-01,
          9.9970e-01, 1.6777e-04],
         [1.2273e-05, 9.5512e-01, 9.9493e-01,  ..., 4.4472e-04,
          9.9370e-05, 1.6777e-04]],
        [[9.9926e-01, 2.5171e-03, 6.5035e-04,  ..., 2.6966e-04,
          1.9528e-04, 1.2808e-04],
         [2.4651e-04, 2.5171e-03, 6.5035e-04,  ..., 2.6966e-04,
          9.9938e-01, 1.2808e-04],
         [2.4651e-04, 3.7874e-03, 6.5035e-04,  ..., 9.9919e-01,
          2.3181e-04, 9.9962e-01],
         [2.4651e-04, 9.9118e-01, 9.9805e-01,  ..., 2.6966e-04,
          1.9528e-04, 1.2808e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0903e-03, 3.8091e-05, 5.1253e-05,  ..., 4.9962e-03,
          1.0125e-05, 8.9787e-04],
         [1.0903e-03, 3.8091e-05, 5.1253e-05,  ..., 4.9962e-03,
          1.0125e-05, 8.9787e-04],
         [9.9673e-01, 3.8091e-05, 5.1253e-05,  ..., 9.8289e-01,
          1.0125e-05, 9.9731e-01],
         [1.0903e-03, 9.9989e-01, 9.9985e-01,  ..., 7.1180e-03,
          9.9997e-01, 8.9787e-04]],
        [[7.0941e-04, 2.8415e-03, 4.5989e-04,  ..., 4.9846e-05,
          9.9972e-01, 1.2419e-03],
         [7.0941e-04, 2.8415e-03, 4.5989e-04,  ..., 4.9846e-05,
          9.4440e-05, 1.2419e-03],
         [9.9787e-01, 2.8415e-03, 4.5989e-04,  ..., 4.9846e-05,
          9.4440e-05, 9.9627e-01],
         [7.0941e-04, 9.9148e-01, 9.9862e-01,  ..., 9.9985e-01,
          9.4440e-05, 1.2419e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 837:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9961e-01, 8.0490e-03, 6.4428e-04,  ..., 9.2585e-05,
          2.5887e-05, 9.9961e-01],
         [1.2988e-04, 5.4988e-03, 6.4428e-04,  ..., 9.2585e-05,
          2.5887e-05, 1.3038e-04],
         [1.2988e-04, 9.2933e-03, 6.4428e-04,  ..., 9.9972e-01,
          9.9992e-01, 1.3038e-04],
         [1.2988e-04, 9.7716e-01, 9.9807e-01,  ..., 9.2585e-05,
          2.5887e-05, 1.3038e-04]],
        [[9.9989e-01, 7.6816e-03, 1.1769e-03,  ..., 4.8696e-04,
          1.7116e-02, 1.8262e-04],
         [3.9579e-05, 7.6816e-03, 1.1769e-03,  ..., 4.8696e-04,
          8.9235e-01, 1.8262e-04],
         [3.3450e-05, 1.6139e-02, 1.1769e-03,  ..., 9.9854e-01,
          8.2524e-02, 9.9945e-01],
         [3.3450e-05, 9.6850e-01, 9.9647e-01,  ..., 4.8696e-04,
          8.0066e-03, 1.8262e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
2024-08-18 15:28:20,585 [Process: 0] Synchronize training processes
2024-08-18 15:28:20,585 [Process: 0] Evaluating...
2024-08-18 15:28:20,587 [Process: 0] EPOCH 838:
2024-08-18 15:28:20,588 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:21,705 [Process: 0] Synchronize training processes
2024-08-18 15:28:21,706 [Process: 0] Evaluating...
2024-08-18 15:28:21,708 [Process: 0] EPOCH 839:
2024-08-18 15:28:21,709 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[1.3180e-03, 9.1740e-05, 3.0039e-05,  ..., 2.9888e-03,
          1.5767e-05, 1.8889e-03],
         [1.3180e-03, 9.1740e-05, 3.0039e-05,  ..., 2.3514e-03,
          1.5767e-05, 1.8889e-03],
         [9.9605e-01, 9.1740e-05, 3.0039e-05,  ..., 9.9231e-01,
          1.5767e-05, 9.9433e-01],
         [1.3180e-03, 9.9972e-01, 9.9991e-01,  ..., 2.3514e-03,
          9.9995e-01, 1.8889e-03]],
        [[1.8838e-03, 9.2299e-05, 7.1538e-04,  ..., 1.6845e-05,
          9.9891e-01, 9.4090e-04],
         [1.8838e-03, 9.2299e-05, 7.1538e-04,  ..., 1.6845e-05,
          3.6407e-04, 9.4090e-04],
         [9.9435e-01, 9.2299e-05, 7.1538e-04,  ..., 1.6845e-05,
          3.6407e-04, 9.9718e-01],
         [1.8838e-03, 9.9972e-01, 9.9785e-01,  ..., 9.9995e-01,
          3.6407e-04, 9.4090e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 838:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9916e-01, 6.1947e-03, 1.1548e-03,  ..., 5.4591e-04,
          6.9151e-05, 9.9962e-01],
         [2.7868e-04, 4.8209e-03, 1.1548e-03,  ..., 5.4591e-04,
          6.9151e-05, 1.2801e-04],
         [2.7868e-04, 8.2091e-03, 1.1548e-03,  ..., 9.9836e-01,
          9.9979e-01, 1.2801e-04],
         [2.7868e-04, 9.8078e-01, 9.9654e-01,  ..., 5.4591e-04,
          6.9151e-05, 1.2801e-04]],
        [[9.9731e-01, 1.0007e-03, 7.1254e-04,  ..., 3.3000e-04,
          1.1680e-04, 9.3220e-05],
         [8.5334e-04, 1.0007e-03, 8.6947e-04,  ..., 3.3000e-04,
          9.9965e-01, 9.6455e-05],
         [9.8492e-04, 1.0007e-03, 7.1254e-04,  ..., 9.9901e-01,
          1.1680e-04, 9.9972e-01],
         [8.5334e-04, 9.9700e-01, 9.9771e-01,  ..., 3.3000e-04,
          1.1680e-04, 9.3220e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4991e-03, 9.8970e-04, 5.3238e-06,  ..., 7.2903e-04,
          2.4293e-05, 2.9129e-03],
         [1.4991e-03, 9.8970e-04, 5.3238e-06,  ..., 7.2903e-04,
          2.4293e-05, 2.9129e-03],
         [9.9550e-01, 9.8970e-04, 5.3238e-06,  ..., 9.9781e-01,
          2.4293e-05, 9.9089e-01],
         [1.4991e-03, 9.9703e-01, 9.9998e-01,  ..., 7.2903e-04,
          9.9993e-01, 3.2839e-03]],
        [[1.5909e-03, 1.2091e-03, 7.8243e-04,  ..., 1.6587e-06,
          9.9973e-01, 1.7737e-03],
         [1.5909e-03, 1.2091e-03, 7.8243e-04,  ..., 1.6587e-06,
          9.0768e-05, 1.7737e-03],
         [9.9523e-01, 1.2091e-03, 7.8243e-04,  ..., 1.6587e-06,
          9.0768e-05, 9.9468e-01],
         [1.5909e-03, 9.9637e-01, 9.9765e-01,  ..., 9.9999e-01,
          9.0768e-05, 1.7737e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 839:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9914e-01, 3.3742e-03, 2.5836e-03,  ..., 9.6025e-05,
          6.4688e-05, 9.9988e-01],
         [2.8816e-04, 3.3742e-03, 2.5836e-03,  ..., 9.6025e-05,
          6.4688e-05, 4.0618e-05],
         [2.8816e-04, 5.3977e-03, 3.0824e-03,  ..., 9.9971e-01,
          9.9981e-01, 4.0618e-05],
         [2.8816e-04, 9.8785e-01, 9.9175e-01,  ..., 9.6025e-05,
          6.4688e-05, 4.0618e-05]],
        [[9.9946e-01, 2.1821e-03, 1.8023e-03,  ..., 1.8713e-04,
          6.2845e-04, 4.0695e-04],
         [1.8002e-04, 2.1821e-03, 2.2745e-03,  ..., 1.8713e-04,
          9.9803e-01, 4.0695e-04],
         [1.8002e-04, 2.1821e-03, 1.8023e-03,  ..., 9.9944e-01,
          7.1235e-04, 9.9878e-01],
         [1.8002e-04, 9.9345e-01, 9.9412e-01,  ..., 1.8713e-04,
          6.2845e-04, 4.0695e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:22,836 [Process: 0] Synchronize training processes
2024-08-18 15:28:22,836 [Process: 0] Evaluating...
2024-08-18 15:28:22,838 [Process: 0] EPOCH 840:
2024-08-18 15:28:22,840 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:23,969 [Process: 0] Synchronize training processes
2024-08-18 15:28:23,969 [Process: 0] Evaluating...
2024-08-18 15:28:23,971 [Process: 0] EPOCH 841:
2024-08-18 15:28:23,973 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2270e-03, 4.0880e-05, 1.6805e-05,  ..., 8.7290e-04,
          6.5642e-04, 6.5451e-04],
         [1.2270e-03, 4.0880e-05, 1.6805e-05,  ..., 8.7290e-04,
          6.5642e-04, 6.5451e-04],
         [9.9632e-01, 4.0880e-05, 1.6805e-05,  ..., 9.9738e-01,
          6.5642e-04, 9.9804e-01],
         [1.2270e-03, 9.9988e-01, 9.9995e-01,  ..., 8.7290e-04,
          9.9803e-01, 6.5451e-04]],
        [[9.1357e-04, 2.7050e-04, 3.1932e-04,  ..., 1.4345e-04,
          9.9529e-01, 1.7196e-03],
         [9.1357e-04, 2.7050e-04, 3.1932e-04,  ..., 1.4345e-04,
          1.5027e-03, 1.7196e-03],
         [9.9726e-01, 2.7050e-04, 3.1932e-04,  ..., 1.4345e-04,
          1.5733e-03, 9.9484e-01],
         [9.1357e-04, 9.9919e-01, 9.9904e-01,  ..., 9.9957e-01,
          1.6321e-03, 1.7196e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 840:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9711e-01, 4.6585e-03, 1.4311e-03,  ..., 2.3558e-04,
          3.2421e-05, 9.9476e-01],
         [8.4901e-04, 4.6585e-03, 1.4311e-03,  ..., 2.3558e-04,
          3.2421e-05, 9.6923e-04],
         [8.4901e-04, 7.6250e-03, 1.4311e-03,  ..., 9.9929e-01,
          9.9990e-01, 3.2971e-03],
         [1.1891e-03, 9.8306e-01, 9.9571e-01,  ..., 2.3558e-04,
          3.2421e-05, 9.6923e-04]],
        [[9.9938e-01, 5.3810e-04, 8.4465e-04,  ..., 2.0846e-04,
          1.6482e-05, 8.7440e-05],
         [2.0677e-04, 5.3810e-04, 8.4465e-04,  ..., 2.0846e-04,
          9.9995e-01, 8.7440e-05],
         [2.0677e-04, 5.3810e-04, 8.4465e-04,  ..., 9.9937e-01,
          1.6482e-05, 9.9974e-01],
         [2.0677e-04, 9.9839e-01, 9.9747e-01,  ..., 2.0846e-04,
          1.6482e-05, 8.7440e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5207e-03, 4.7927e-05, 1.3978e-05,  ..., 5.8822e-04,
          1.1044e-05, 9.2294e-04],
         [1.5207e-03, 4.7927e-05, 1.3978e-05,  ..., 5.8822e-04,
          1.1044e-05, 9.2294e-04],
         [9.9544e-01, 4.7927e-05, 1.3978e-05,  ..., 9.9824e-01,
          1.1044e-05, 9.9723e-01],
         [1.5207e-03, 9.9986e-01, 9.9996e-01,  ..., 5.8822e-04,
          9.9997e-01, 9.2294e-04]],
        [[1.8346e-03, 3.0076e-04, 4.2867e-04,  ..., 6.5022e-06,
          9.9722e-01, 6.3842e-04],
         [1.8346e-03, 3.0076e-04, 4.2867e-04,  ..., 6.5022e-06,
          8.9186e-04, 6.3842e-04],
         [9.9450e-01, 3.0076e-04, 4.2867e-04,  ..., 6.5022e-06,
          1.0013e-03, 9.9808e-01],
         [1.8346e-03, 9.9910e-01, 9.9871e-01,  ..., 9.9998e-01,
          8.9186e-04, 6.3842e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 841:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9972e-01, 1.4657e-03, 1.1063e-04,  ..., 4.3471e-04,
          8.2378e-05, 9.9991e-01],
         [9.2058e-05, 1.4657e-03, 1.1063e-04,  ..., 4.3471e-04,
          8.2378e-05, 2.8856e-05],
         [9.2058e-05, 1.4657e-03, 1.1063e-04,  ..., 9.9870e-01,
          9.9975e-01, 2.8856e-05],
         [9.2058e-05, 9.9560e-01, 9.9967e-01,  ..., 4.3471e-04,
          8.2378e-05, 2.8856e-05]],
        [[9.9930e-01, 1.8123e-03, 3.5123e-03,  ..., 6.7559e-05,
          1.8668e-04, 3.5737e-05],
         [2.3290e-04, 1.8123e-03, 4.3760e-03,  ..., 6.7559e-05,
          9.9917e-01, 3.5737e-05],
         [2.3290e-04, 1.8123e-03, 4.2101e-03,  ..., 9.9980e-01,
          4.5533e-04, 9.9989e-01],
         [2.3290e-04, 9.9456e-01, 9.8790e-01,  ..., 6.7559e-05,
          1.8668e-04, 3.5737e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:25,099 [Process: 0] Synchronize training processes
2024-08-18 15:28:25,099 [Process: 0] Evaluating...
2024-08-18 15:28:25,103 [Process: 0] EPOCH 842:
2024-08-18 15:28:25,105 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.5991e-04, 2.2138e-04, 4.5564e-06,  ..., 2.1998e-03,
          2.3412e-04, 1.7014e-03],
         [6.5991e-04, 2.2138e-04, 4.5564e-06,  ..., 2.1998e-03,
          2.3412e-04, 1.7014e-03],
         [9.9802e-01, 2.2138e-04, 4.5564e-06,  ..., 9.9340e-01,
          2.3412e-04, 9.9490e-01],
         [6.5991e-04, 9.9934e-01, 9.9999e-01,  ..., 2.1998e-03,
          9.9930e-01, 1.7014e-03]],
        [[1.5316e-03, 3.3644e-04, 3.9943e-04,  ..., 4.7004e-05,
          9.9936e-01, 5.1649e-04],
         [1.5316e-03, 3.3644e-04, 3.9943e-04,  ..., 4.7004e-05,
          2.1369e-04, 5.1649e-04],
         [9.9541e-01, 3.3644e-04, 3.9943e-04,  ..., 4.7004e-05,
          2.1369e-04, 9.9845e-01],
         [1.5316e-03, 9.9899e-01, 9.9880e-01,  ..., 9.9986e-01,
          2.1369e-04, 5.1649e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 842:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9955e-01, 1.7570e-03, 1.1498e-02,  ..., 3.8055e-05,
          6.0234e-05, 9.9992e-01],
         [1.4985e-04, 1.7570e-03, 7.4225e-03,  ..., 3.8055e-05,
          6.0234e-05, 2.6222e-05],
         [1.4985e-04, 1.7570e-03, 1.4802e-02,  ..., 9.9989e-01,
          9.9982e-01, 2.6222e-05],
         [1.4985e-04, 9.9473e-01, 9.6628e-01,  ..., 3.8055e-05,
          6.0234e-05, 2.6222e-05]],
        [[9.9536e-01, 1.1007e-03, 3.3918e-03,  ..., 1.7255e-04,
          2.2449e-03, 2.5143e-05],
         [1.5464e-03, 1.0910e-03, 3.3185e-03,  ..., 1.7255e-04,
          9.8828e-01, 2.5143e-05],
         [1.5464e-03, 1.0910e-03, 3.9419e-03,  ..., 9.9948e-01,
          7.2303e-03, 9.9992e-01],
         [1.5464e-03, 9.9672e-01, 9.8935e-01,  ..., 1.7255e-04,
          2.2449e-03, 2.5143e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3552e-03, 8.6429e-05, 6.0743e-04,  ..., 8.4003e-04,
          9.3300e-06, 4.5459e-04],
         [1.3552e-03, 8.6429e-05, 6.0743e-04,  ..., 8.4003e-04,
          9.3300e-06, 4.5459e-04],
         [9.9593e-01, 8.6429e-05, 6.0743e-04,  ..., 9.9748e-01,
          9.3300e-06, 9.9864e-01],
         [1.3552e-03, 9.9974e-01, 9.9818e-01,  ..., 8.4003e-04,
          9.9997e-01, 4.5459e-04]],
        [[3.0511e-03, 6.3677e-05, 7.3876e-04,  ..., 2.2622e-05,
          9.9930e-01, 1.5432e-03],
         [3.0511e-03, 6.3677e-05, 7.3876e-04,  ..., 2.2622e-05,
          2.3298e-04, 1.5432e-03],
         [9.9085e-01, 6.3677e-05, 7.3876e-04,  ..., 2.2622e-05,
          2.3298e-04, 9.9537e-01],
         [3.0511e-03, 9.9981e-01, 9.9778e-01,  ..., 9.9993e-01,
          2.3298e-04, 1.5432e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 843:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:26,225 [Process: 0] Synchronize training processes
2024-08-18 15:28:26,225 [Process: 0] Evaluating...
2024-08-18 15:28:26,227 [Process: 0] EPOCH 843:
2024-08-18 15:28:26,229 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:27,379 [Process: 0] Synchronize training processes
2024-08-18 15:28:27,379 [Process: 0] Evaluating...
2024-08-18 15:28:27,381 [Process: 0] EPOCH 844:
2024-08-18 15:28:27,383 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9978e-01, 2.4020e-04, 3.4309e-03,  ..., 1.3197e-04,
          2.1757e-04, 9.9979e-01],
         [7.3941e-05, 2.4020e-04, 2.7210e-03,  ..., 1.3197e-04,
          2.1757e-04, 7.1203e-05],
         [7.3941e-05, 2.4020e-04, 2.9594e-03,  ..., 9.9960e-01,
          9.9935e-01, 7.1203e-05],
         [7.3941e-05, 9.9928e-01, 9.9089e-01,  ..., 1.3197e-04,
          2.1757e-04, 7.1203e-05]],
        [[9.9963e-01, 3.4806e-03, 2.5635e-03,  ..., 1.2525e-04,
          3.8760e-05, 3.5968e-05],
         [1.2223e-04, 3.4806e-03, 2.3489e-03,  ..., 1.2525e-04,
          9.9978e-01, 3.5968e-05],
         [1.2223e-04, 3.9952e-03, 2.3489e-03,  ..., 9.9962e-01,
          1.3796e-04, 9.9989e-01],
         [1.2223e-04, 9.8904e-01, 9.9274e-01,  ..., 1.2525e-04,
          3.8760e-05, 3.5968e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0181e-03, 4.5637e-05, 1.2223e-05,  ..., 1.0907e-03,
          7.7703e-06, 9.2502e-04],
         [1.0181e-03, 4.5637e-05, 1.2223e-05,  ..., 1.0907e-03,
          7.7703e-06, 9.2502e-04],
         [9.9695e-01, 4.5637e-05, 1.2223e-05,  ..., 9.9673e-01,
          7.7703e-06, 9.9722e-01],
         [1.0181e-03, 9.9986e-01, 9.9996e-01,  ..., 1.0907e-03,
          9.9998e-01, 9.2502e-04]],
        [[2.8800e-03, 4.6245e-04, 3.4016e-04,  ..., 4.7435e-05,
          9.9772e-01, 8.2458e-04],
         [2.8800e-03, 4.6245e-04, 3.4016e-04,  ..., 4.7435e-05,
          7.0681e-04, 8.2458e-04],
         [9.9136e-01, 4.6245e-04, 3.4016e-04,  ..., 4.7435e-05,
          7.0681e-04, 9.9753e-01],
         [2.8800e-03, 9.9861e-01, 9.9898e-01,  ..., 9.9986e-01,
          8.6886e-04, 8.2458e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 844:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9551e-01, 5.0473e-03, 1.6866e-03,  ..., 6.2151e-04,
          4.3353e-05, 9.9935e-01],
         [1.4056e-03, 5.0473e-03, 1.6866e-03,  ..., 6.2151e-04,
          4.3353e-05, 2.0878e-04],
         [1.4056e-03, 1.1855e-02, 2.0538e-03,  ..., 9.9814e-01,
          9.9987e-01, 2.3385e-04],
         [1.6832e-03, 9.7805e-01, 9.9457e-01,  ..., 6.2151e-04,
          4.3353e-05, 2.0878e-04]],
        [[9.9911e-01, 4.3883e-03, 2.7511e-03,  ..., 5.7377e-05,
          2.4500e-05, 3.5209e-05],
         [2.9544e-04, 4.3883e-03, 2.4963e-03,  ..., 5.7377e-05,
          9.9993e-01, 3.5209e-05],
         [2.9544e-04, 1.0447e-02, 3.1081e-03,  ..., 9.9983e-01,
          2.4500e-05, 9.9989e-01],
         [2.9544e-04, 9.8078e-01, 9.9164e-01,  ..., 5.7377e-05,
          2.4500e-05, 3.5209e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.9311e-04, 8.6607e-05, 4.5801e-05,  ..., 8.2275e-04,
          2.3071e-05, 9.8827e-04],
         [5.9311e-04, 8.6607e-05, 4.5801e-05,  ..., 8.2275e-04,
          2.3071e-05, 9.8827e-04],
         [9.9822e-01, 8.6607e-05, 4.5801e-05,  ..., 9.9753e-01,
          2.3071e-05, 9.9704e-01],
         [5.9311e-04, 9.9974e-01, 9.9986e-01,  ..., 8.2275e-04,
          9.9993e-01, 9.8827e-04]],
        [[1.0150e-03, 5.8471e-05, 3.5296e-03,  ..., 5.2055e-05,
          9.9889e-01, 1.1966e-03],
         [1.0150e-03, 5.8471e-05, 3.5296e-03,  ..., 5.2055e-05,
          3.4380e-04, 1.1966e-03],
         [9.9696e-01, 5.8471e-05, 3.5296e-03,  ..., 5.2055e-05,
          3.4380e-04, 9.9641e-01],
         [1.0150e-03, 9.9982e-01, 9.8941e-01,  ..., 9.9984e-01,
          4.2115e-04, 1.1966e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 845:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:28,512 [Process: 0] Synchronize training processes
2024-08-18 15:28:28,512 [Process: 0] Evaluating...
2024-08-18 15:28:28,514 [Process: 0] EPOCH 845:
2024-08-18 15:28:28,516 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:29,667 [Process: 0] Synchronize training processes
2024-08-18 15:28:29,667 [Process: 0] Evaluating...
2024-08-18 15:28:29,669 [Process: 0] EPOCH 846:
2024-08-18 15:28:29,671 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9988e-01, 1.3585e-03, 1.5865e-04,  ..., 1.1958e-03,
          5.5510e-05, 9.9980e-01],
         [4.0592e-05, 1.3585e-03, 1.5865e-04,  ..., 1.1958e-03,
          5.5510e-05, 6.6274e-05],
         [4.0592e-05, 1.3585e-03, 1.5865e-04,  ..., 9.9641e-01,
          9.9983e-01, 6.6274e-05],
         [4.0592e-05, 9.9592e-01, 9.9952e-01,  ..., 1.1958e-03,
          5.5510e-05, 6.6274e-05]],
        [[9.9881e-01, 2.8245e-04, 2.2349e-03,  ..., 7.5963e-05,
          2.0986e-03, 2.9750e-05],
         [3.9658e-04, 2.8245e-04, 2.2349e-03,  ..., 7.5963e-05,
          9.8952e-01, 2.9750e-05],
         [3.9658e-04, 2.8245e-04, 2.5780e-03,  ..., 9.9977e-01,
          6.2802e-03, 9.9991e-01],
         [3.9658e-04, 9.9915e-01, 9.9295e-01,  ..., 7.5963e-05,
          2.0986e-03, 2.9750e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8920e-03, 7.8809e-05, 2.5631e-06,  ..., 3.2301e-03,
          8.6978e-06, 5.4673e-04],
         [1.8920e-03, 7.8809e-05, 2.5631e-06,  ..., 3.2301e-03,
          8.6978e-06, 5.4673e-04],
         [9.9432e-01, 7.8809e-05, 2.5631e-06,  ..., 9.8951e-01,
          8.6978e-06, 9.9836e-01],
         [1.8920e-03, 9.9976e-01, 9.9999e-01,  ..., 4.0250e-03,
          9.9997e-01, 5.4673e-04]],
        [[8.1723e-04, 5.5405e-04, 6.3843e-04,  ..., 7.7714e-05,
          9.9265e-01, 2.7620e-03],
         [8.1723e-04, 5.5405e-04, 6.3843e-04,  ..., 7.7714e-05,
          2.0689e-03, 2.7620e-03],
         [9.9755e-01, 5.5405e-04, 6.3843e-04,  ..., 7.7714e-05,
          2.5391e-03, 9.9109e-01],
         [8.1723e-04, 9.9834e-01, 9.9808e-01,  ..., 9.9977e-01,
          2.7381e-03, 3.3850e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 846:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9738e-01, 1.8256e-03, 3.9425e-03,  ..., 2.4446e-03,
          5.9748e-05, 9.9912e-01],
         [8.7330e-04, 1.8256e-03, 3.9425e-03,  ..., 2.4446e-03,
          5.9748e-05, 2.9446e-04],
         [8.7330e-04, 1.8256e-03, 6.4953e-03,  ..., 9.9200e-01,
          9.9982e-01, 2.9446e-04],
         [8.7330e-04, 9.9452e-01, 9.8562e-01,  ..., 3.1076e-03,
          5.9748e-05, 2.9446e-04]],
        [[9.8793e-01, 2.5066e-03, 5.9064e-04,  ..., 1.0947e-04,
          1.8973e-04, 8.3496e-05],
         [6.6792e-03, 3.6826e-03, 5.9064e-04,  ..., 1.0947e-04,
          9.9943e-01, 8.3496e-05],
         [2.6930e-03, 2.6906e-03, 5.9064e-04,  ..., 9.9967e-01,
          1.8973e-04, 9.9975e-01],
         [2.6930e-03, 9.9112e-01, 9.9823e-01,  ..., 1.0947e-04,
          1.8973e-04, 8.3496e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:30,799 [Process: 0] Synchronize training processes
2024-08-18 15:28:30,799 [Process: 0] Evaluating...
2024-08-18 15:28:30,801 [Process: 0] EPOCH 847:
2024-08-18 15:28:30,803 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:31,930 [Process: 0] Synchronize training processes
2024-08-18 15:28:31,930 [Process: 0] Evaluating...
2024-08-18 15:28:31,932 [Process: 0] EPOCH 848:
2024-08-18 15:28:31,934 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2693e-03, 2.3274e-04, 1.3664e-05,  ..., 1.0641e-03,
          3.3206e-05, 1.0682e-03],
         [1.2693e-03, 2.3274e-04, 1.3664e-05,  ..., 1.0641e-03,
          3.3206e-05, 1.0682e-03],
         [9.9619e-01, 2.3274e-04, 1.3664e-05,  ..., 9.9681e-01,
          3.3206e-05, 9.9680e-01],
         [1.2693e-03, 9.9930e-01, 9.9996e-01,  ..., 1.0641e-03,
          9.9990e-01, 1.0682e-03]],
        [[7.5400e-04, 3.0778e-04, 2.4378e-03,  ..., 1.4427e-04,
          9.9635e-01, 1.6422e-03],
         [7.5400e-04, 3.0778e-04, 2.9367e-03,  ..., 1.4427e-04,
          1.1125e-03, 1.6422e-03],
         [9.9774e-01, 3.0778e-04, 2.4378e-03,  ..., 1.4427e-04,
          1.4210e-03, 9.9507e-01],
         [7.5400e-04, 9.9908e-01, 9.9219e-01,  ..., 9.9957e-01,
          1.1125e-03, 1.6422e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 847:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9908e-01, 1.5246e-02, 1.1952e-03,  ..., 5.1634e-05,
          4.0050e-05, 9.9949e-01],
         [3.0540e-04, 1.0664e-02, 1.1978e-03,  ..., 5.1634e-05,
          4.0050e-05, 1.7099e-04],
         [3.0540e-04, 3.0657e-02, 1.1952e-03,  ..., 9.9985e-01,
          9.9988e-01, 1.7099e-04],
         [3.0540e-04, 9.4343e-01, 9.9641e-01,  ..., 5.1634e-05,
          4.0050e-05, 1.7099e-04]],
        [[9.9691e-01, 7.8178e-04, 4.3036e-04,  ..., 5.8733e-05,
          1.4389e-03, 6.3920e-05],
         [1.2474e-03, 7.8178e-04, 4.3036e-04,  ..., 5.8733e-05,
          9.9456e-01, 6.3920e-05],
         [9.2331e-04, 7.8178e-04, 4.3036e-04,  ..., 9.9982e-01,
          2.5588e-03, 9.9981e-01],
         [9.2331e-04, 9.9765e-01, 9.9871e-01,  ..., 5.8733e-05,
          1.4389e-03, 6.3920e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5200e-03, 4.4553e-04, 2.0522e-05,  ..., 6.2243e-04,
          9.8250e-06, 1.1274e-03],
         [1.5200e-03, 4.4553e-04, 2.0522e-05,  ..., 6.2243e-04,
          9.8250e-06, 1.1274e-03],
         [9.9544e-01, 4.4553e-04, 2.0522e-05,  ..., 9.9813e-01,
          9.8250e-06, 9.9662e-01],
         [1.5200e-03, 9.9866e-01, 9.9994e-01,  ..., 6.2243e-04,
          9.9997e-01, 1.1274e-03]],
        [[1.5597e-03, 4.6248e-04, 6.1638e-04,  ..., 2.2754e-05,
          9.9956e-01, 9.3768e-04],
         [1.5597e-03, 4.6248e-04, 6.1638e-04,  ..., 2.2754e-05,
          1.4809e-04, 9.3768e-04],
         [9.9532e-01, 4.6248e-04, 6.1638e-04,  ..., 2.2754e-05,
          1.4809e-04, 9.9719e-01],
         [1.5597e-03, 9.9861e-01, 9.9815e-01,  ..., 9.9993e-01,
          1.4809e-04, 9.3768e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 848:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9888e-01, 3.4320e-04, 1.7386e-03,  ..., 4.1169e-04,
          3.1929e-04, 9.9671e-01],
         [3.7230e-04, 3.4320e-04, 1.7386e-03,  ..., 4.1169e-04,
          3.1929e-04, 1.0972e-03],
         [3.7230e-04, 3.4320e-04, 1.7386e-03,  ..., 9.9876e-01,
          9.9904e-01, 1.0972e-03],
         [3.7230e-04, 9.9897e-01, 9.9478e-01,  ..., 4.1169e-04,
          3.1929e-04, 1.0972e-03]],
        [[9.9963e-01, 4.0375e-04, 2.1206e-03,  ..., 4.2772e-05,
          2.7145e-04, 2.0594e-04],
         [1.2392e-04, 4.0375e-04, 2.0910e-03,  ..., 4.2772e-05,
          9.9845e-01, 2.0594e-04],
         [1.2392e-04, 4.0375e-04, 2.1224e-03,  ..., 9.9987e-01,
          1.0091e-03, 9.9938e-01],
         [1.2392e-04, 9.9879e-01, 9.9367e-01,  ..., 4.2772e-05,
          2.7145e-04, 2.0594e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:33,061 [Process: 0] Synchronize training processes
2024-08-18 15:28:33,062 [Process: 0] Evaluating...
2024-08-18 15:28:33,064 [Process: 0] EPOCH 849:
2024-08-18 15:28:33,065 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4648e-03, 1.4426e-04, 1.3734e-06,  ..., 1.0631e-03,
          5.5032e-05, 7.7339e-04],
         [1.4648e-03, 1.4426e-04, 1.3734e-06,  ..., 1.0631e-03,
          5.5032e-05, 7.7339e-04],
         [9.9561e-01, 1.4426e-04, 1.3734e-06,  ..., 9.9681e-01,
          5.5032e-05, 9.9768e-01],
         [1.4648e-03, 9.9957e-01, 1.0000e+00,  ..., 1.0631e-03,
          9.9983e-01, 7.7339e-04]],
        [[6.6936e-04, 1.8280e-03, 2.0196e-04,  ..., 2.8548e-06,
          9.9936e-01, 2.7175e-03],
         [6.6936e-04, 2.1777e-03, 2.0196e-04,  ..., 2.8548e-06,
          2.1205e-04, 2.7175e-03],
         [9.9799e-01, 1.8280e-03, 2.0196e-04,  ..., 2.8548e-06,
          2.1205e-04, 9.9185e-01],
         [6.6936e-04, 9.9417e-01, 9.9939e-01,  ..., 9.9999e-01,
          2.1205e-04, 2.7175e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 849:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9919e-01, 7.3508e-03, 1.9089e-03,  ..., 3.3783e-04,
          1.0129e-03, 9.9895e-01],
         [2.6975e-04, 9.3170e-03, 1.9089e-03,  ..., 3.3783e-04,
          1.0129e-03, 3.4852e-04],
         [2.6975e-04, 1.3429e-02, 1.9089e-03,  ..., 9.9899e-01,
          9.9696e-01, 3.4852e-04],
         [2.6975e-04, 9.6990e-01, 9.9427e-01,  ..., 3.3783e-04,
          1.0129e-03, 3.4852e-04]],
        [[9.9984e-01, 2.3725e-03, 3.2111e-04,  ..., 7.0397e-05,
          6.3679e-04, 3.0116e-04],
         [5.3074e-05, 2.3725e-03, 3.2111e-04,  ..., 7.0397e-05,
          9.9699e-01, 3.0116e-04],
         [5.3074e-05, 3.3247e-03, 3.2111e-04,  ..., 9.9979e-01,
          1.7379e-03, 9.9910e-01],
         [5.3074e-05, 9.9193e-01, 9.9904e-01,  ..., 7.0397e-05,
          6.3679e-04, 3.0116e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.6540e-04, 1.8423e-05, 2.8016e-04,  ..., 1.6541e-03,
          1.9010e-05, 7.6609e-04],
         [8.6540e-04, 1.8423e-05, 2.8016e-04,  ..., 1.6541e-03,
          1.9010e-05, 7.6609e-04],
         [9.9740e-01, 1.8423e-05, 2.8016e-04,  ..., 9.9504e-01,
          1.9010e-05, 9.9770e-01],
         [8.6540e-04, 9.9994e-01, 9.9916e-01,  ..., 1.6541e-03,
          9.9994e-01, 7.6609e-04]],
        [[2.4308e-03, 3.3361e-04, 1.9874e-04,  ..., 2.0651e-05,
          9.9941e-01, 1.7280e-03],
         [2.4308e-03, 3.3361e-04, 1.9874e-04,  ..., 2.0651e-05,
          1.9817e-04, 1.7280e-03],
         [9.9271e-01, 3.3361e-04, 1.9874e-04,  ..., 2.0651e-05,
          1.9817e-04, 9.9482e-01],
         [2.4308e-03, 9.9900e-01, 9.9940e-01,  ..., 9.9994e-01,
          1.9817e-04, 1.7280e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 850:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:34,193 [Process: 0] Synchronize training processes
2024-08-18 15:28:34,193 [Process: 0] Evaluating...
2024-08-18 15:28:34,195 [Process: 0] EPOCH 850:
2024-08-18 15:28:34,197 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:35,326 [Process: 0] Synchronize training processes
2024-08-18 15:28:35,326 [Process: 0] Evaluating...
2024-08-18 15:28:35,328 [Process: 0] EPOCH 851:
2024-08-18 15:28:35,330 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9983e-01, 4.5170e-04, 1.6808e-04,  ..., 1.0361e-03,
          6.9107e-05, 9.9975e-01],
         [5.8126e-05, 4.5170e-04, 1.6808e-04,  ..., 1.0361e-03,
          6.9107e-05, 8.3624e-05],
         [5.8126e-05, 4.5170e-04, 1.6808e-04,  ..., 9.9689e-01,
          9.9979e-01, 8.3624e-05],
         [5.8126e-05, 9.9864e-01, 9.9950e-01,  ..., 1.0361e-03,
          6.9107e-05, 8.3624e-05]],
        [[9.9965e-01, 4.9208e-04, 1.9442e-03,  ..., 1.1357e-04,
          4.4187e-03, 2.8118e-05],
         [1.1642e-04, 4.9208e-04, 1.9442e-03,  ..., 1.1357e-04,
          9.6668e-01, 2.8118e-05],
         [1.1642e-04, 4.9208e-04, 1.9442e-03,  ..., 9.9966e-01,
          2.0112e-02, 9.9992e-01],
         [1.1642e-04, 9.9852e-01, 9.9417e-01,  ..., 1.1357e-04,
          8.7918e-03, 2.8118e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3594e-03, 1.9959e-03, 2.1192e-03,  ..., 6.4659e-04,
          5.3766e-05, 6.5010e-04],
         [1.3594e-03, 1.9959e-03, 2.1192e-03,  ..., 6.4659e-04,
          5.3766e-05, 6.5010e-04],
         [9.9592e-01, 1.9959e-03, 2.1192e-03,  ..., 9.9806e-01,
          5.3766e-05, 9.9805e-01],
         [1.3594e-03, 9.9401e-01, 9.9364e-01,  ..., 6.4659e-04,
          9.9984e-01, 6.5010e-04]],
        [[4.0496e-03, 1.2664e-04, 3.2569e-04,  ..., 4.8618e-05,
          9.9878e-01, 8.2615e-04],
         [4.0496e-03, 1.2664e-04, 3.2569e-04,  ..., 4.8618e-05,
          4.0816e-04, 8.2615e-04],
         [9.8721e-01, 1.2664e-04, 3.2569e-04,  ..., 4.8618e-05,
          4.0816e-04, 9.9752e-01],
         [4.6927e-03, 9.9962e-01, 9.9902e-01,  ..., 9.9985e-01,
          4.0816e-04, 8.2615e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 851:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9988e-01, 4.0681e-03, 6.6311e-04,  ..., 1.0412e-03,
          1.7183e-04, 9.9937e-01],
         [3.9907e-05, 4.0681e-03, 6.6311e-04,  ..., 1.0412e-03,
          1.7183e-04, 2.1076e-04],
         [3.9907e-05, 5.6377e-03, 6.6311e-04,  ..., 9.9688e-01,
          9.9948e-01, 2.1076e-04],
         [3.9907e-05, 9.8623e-01, 9.9801e-01,  ..., 1.0412e-03,
          1.7183e-04, 2.1076e-04]],
        [[9.9957e-01, 6.6926e-03, 8.9124e-04,  ..., 1.7275e-03,
          5.0189e-04, 1.3740e-04],
         [1.4241e-04, 6.6926e-03, 8.9124e-04,  ..., 1.9049e-03,
          9.9806e-01, 1.3740e-04],
         [1.4241e-04, 1.3985e-02, 8.9124e-04,  ..., 9.9465e-01,
          9.3270e-04, 9.9959e-01],
         [1.4241e-04, 9.7263e-01, 9.9733e-01,  ..., 1.7199e-03,
          5.0189e-04, 1.3740e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.1823e-04, 9.1110e-05, 2.5634e-04,  ..., 8.0776e-04,
          2.4868e-05, 1.8605e-03],
         [9.1823e-04, 9.1110e-05, 2.5634e-04,  ..., 8.0776e-04,
          2.4868e-05, 1.8605e-03],
         [9.9725e-01, 9.1110e-05, 2.5634e-04,  ..., 9.9758e-01,
          2.4868e-05, 9.9442e-01],
         [9.1823e-04, 9.9973e-01, 9.9923e-01,  ..., 8.0776e-04,
          9.9993e-01, 1.8605e-03]],
        [[2.7465e-03, 6.7229e-04, 3.1663e-04,  ..., 4.2654e-05,
          9.8701e-01, 9.8861e-04],
         [2.4285e-03, 6.7229e-04, 3.1663e-04,  ..., 4.2654e-05,
          3.0134e-03, 9.8861e-04],
         [9.9240e-01, 6.7229e-04, 3.1663e-04,  ..., 4.2654e-05,
          5.8193e-03, 9.9703e-01],
         [2.4285e-03, 9.9798e-01, 9.9905e-01,  ..., 9.9987e-01,
          4.1549e-03, 9.8861e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 852:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:36,480 [Process: 0] Synchronize training processes
2024-08-18 15:28:36,480 [Process: 0] Evaluating...
2024-08-18 15:28:36,484 [Process: 0] EPOCH 852:
2024-08-18 15:28:36,486 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:37,612 [Process: 0] Synchronize training processes
2024-08-18 15:28:37,612 [Process: 0] Evaluating...
2024-08-18 15:28:37,614 [Process: 0] EPOCH 853:
2024-08-18 15:28:37,616 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 1.2335e-03, 6.1297e-04,  ..., 3.3586e-04,
          2.2834e-04, 9.9976e-01],
         [5.8521e-05, 1.2335e-03, 6.1297e-04,  ..., 3.3586e-04,
          2.2834e-04, 7.9186e-05],
         [5.8521e-05, 1.2335e-03, 6.1297e-04,  ..., 9.9899e-01,
          9.9931e-01, 7.9186e-05],
         [5.8521e-05, 9.9630e-01, 9.9816e-01,  ..., 3.3586e-04,
          2.2834e-04, 7.9186e-05]],
        [[9.9977e-01, 7.0435e-04, 4.9136e-04,  ..., 2.4145e-04,
          4.5403e-03, 1.0192e-04],
         [7.6234e-05, 7.0435e-04, 4.9136e-04,  ..., 2.4145e-04,
          9.7144e-01, 1.0192e-04],
         [7.6234e-05, 7.0435e-04, 4.9136e-04,  ..., 9.9928e-01,
          1.9579e-02, 9.9969e-01],
         [7.6234e-05, 9.9789e-01, 9.9853e-01,  ..., 2.4145e-04,
          4.4448e-03, 1.0192e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.7714e-03, 5.1508e-04, 3.6318e-06,  ..., 1.2944e-03,
          6.2654e-05, 2.0716e-03],
         [1.7714e-03, 5.1508e-04, 3.6318e-06,  ..., 1.2944e-03,
          6.2654e-05, 2.0716e-03],
         [9.9469e-01, 5.1508e-04, 3.6318e-06,  ..., 9.9612e-01,
          6.2654e-05, 9.9379e-01],
         [1.7714e-03, 9.9845e-01, 9.9999e-01,  ..., 1.2944e-03,
          9.9981e-01, 2.0716e-03]],
        [[1.3775e-03, 2.7863e-04, 2.2921e-04,  ..., 6.5901e-04,
          9.9404e-01, 7.4139e-04],
         [1.3775e-03, 2.7863e-04, 2.2921e-04,  ..., 6.5901e-04,
          1.8890e-03, 7.4139e-04],
         [9.9587e-01, 2.7863e-04, 2.2921e-04,  ..., 6.5901e-04,
          2.1858e-03, 9.9778e-01],
         [1.3775e-03, 9.9916e-01, 9.9931e-01,  ..., 9.9802e-01,
          1.8890e-03, 7.4139e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 853:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9965e-01, 2.6692e-03, 5.3803e-04,  ..., 7.7348e-04,
          5.3118e-05, 9.9990e-01],
         [1.1576e-04, 2.7378e-03, 5.3803e-04,  ..., 7.7348e-04,
          5.3118e-05, 3.3906e-05],
         [1.1576e-04, 3.1194e-03, 5.3803e-04,  ..., 9.9768e-01,
          9.9984e-01, 3.3906e-05],
         [1.1576e-04, 9.9147e-01, 9.9839e-01,  ..., 7.7348e-04,
          5.3118e-05, 3.3906e-05]],
        [[9.9940e-01, 2.0428e-03, 3.8896e-04,  ..., 9.4898e-05,
          7.8381e-04, 2.3455e-04],
         [2.7170e-04, 2.0428e-03, 3.8896e-04,  ..., 9.4898e-05,
          2.0098e-03, 2.3455e-04],
         [1.6218e-04, 2.1456e-03, 3.8896e-04,  ..., 9.9972e-01,
          9.9642e-01, 9.9930e-01],
         [1.6218e-04, 9.9377e-01, 9.9883e-01,  ..., 9.4898e-05,
          7.8381e-04, 2.3455e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:28:38,737 [Process: 0] Synchronize training processes
2024-08-18 15:28:38,738 [Process: 0] Evaluating...
2024-08-18 15:28:38,739 [Process: 0] EPOCH 854:
2024-08-18 15:28:38,741 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:39,868 [Process: 0] Synchronize training processes
2024-08-18 15:28:39,868 [Process: 0] Evaluating...
2024-08-18 15:28:39,870 [Process: 0] EPOCH 855:
2024-08-18 15:28:39,872 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6944e-03, 1.2255e-04, 4.9755e-06,  ..., 1.0010e-03,
          4.8436e-05, 9.8108e-04],
         [1.6944e-03, 1.2255e-04, 4.9755e-06,  ..., 1.0010e-03,
          4.8436e-05, 9.8108e-04],
         [9.9492e-01, 1.2255e-04, 4.9755e-06,  ..., 9.9700e-01,
          4.8436e-05, 9.9706e-01],
         [1.6944e-03, 9.9963e-01, 9.9999e-01,  ..., 1.0010e-03,
          9.9985e-01, 9.8108e-04]],
        [[4.1589e-03, 7.9751e-05, 5.7561e-04,  ..., 2.9048e-06,
          9.9752e-01, 1.4338e-03],
         [4.1589e-03, 7.9751e-05, 5.7561e-04,  ..., 2.9048e-06,
          8.2759e-04, 1.3258e-03],
         [9.8676e-01, 7.9751e-05, 5.7561e-04,  ..., 2.9048e-06,
          8.2759e-04, 9.9591e-01],
         [4.9215e-03, 9.9976e-01, 9.9827e-01,  ..., 9.9999e-01,
          8.2759e-04, 1.3258e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 854:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9885e-01, 1.4961e-03, 5.0035e-03,  ..., 4.4003e-04,
          1.6037e-05, 9.9978e-01],
         [3.5514e-04, 1.4961e-03, 5.0035e-03,  ..., 4.4003e-04,
          1.6037e-05, 7.3135e-05],
         [3.5514e-04, 1.4961e-03, 9.1123e-03,  ..., 9.9868e-01,
          9.9995e-01, 7.3135e-05],
         [4.3708e-04, 9.9551e-01, 9.8088e-01,  ..., 4.4003e-04,
          1.6037e-05, 7.3135e-05]],
        [[9.9476e-01, 7.5196e-03, 2.2300e-03,  ..., 6.9833e-05,
          1.7689e-03, 1.0069e-04],
         [1.5200e-03, 7.5196e-03, 2.2300e-03,  ..., 6.9833e-05,
          2.5144e-02, 1.0069e-04],
         [2.1991e-03, 1.9551e-02, 3.2902e-03,  ..., 9.9979e-01,
          9.7132e-01, 9.9970e-01],
         [1.5200e-03, 9.6541e-01, 9.9225e-01,  ..., 6.9833e-05,
          1.7689e-03, 1.0069e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6017e-03, 3.4971e-04, 2.9634e-06,  ..., 1.3480e-03,
          1.4536e-04, 7.2870e-04],
         [1.6017e-03, 3.4971e-04, 2.9634e-06,  ..., 1.3480e-03,
          1.4536e-04, 7.2870e-04],
         [9.9519e-01, 3.4971e-04, 2.9634e-06,  ..., 9.9596e-01,
          1.4536e-04, 9.9781e-01],
         [1.6017e-03, 9.9895e-01, 9.9999e-01,  ..., 1.3480e-03,
          9.9956e-01, 7.2870e-04]],
        [[2.4164e-03, 1.4739e-03, 1.9821e-04,  ..., 1.1835e-04,
          9.9965e-01, 1.0603e-03],
         [2.4164e-03, 1.4739e-03, 1.9821e-04,  ..., 1.1835e-04,
          1.1546e-04, 9.6479e-04],
         [9.9275e-01, 1.4739e-03, 1.9821e-04,  ..., 1.1835e-04,
          1.1546e-04, 9.9701e-01],
         [2.4164e-03, 9.9558e-01, 9.9941e-01,  ..., 9.9964e-01,
          1.1546e-04, 9.6479e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 855:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9973e-01, 3.2050e-03, 6.3206e-04,  ..., 9.0068e-05,
          3.0327e-05, 9.9974e-01],
         [8.8978e-05, 3.2050e-03, 6.3206e-04,  ..., 9.0068e-05,
          3.0327e-05, 8.5655e-05],
         [8.8978e-05, 3.9778e-03, 6.3206e-04,  ..., 9.9973e-01,
          9.9991e-01, 8.5655e-05],
         [8.8978e-05, 9.8961e-01, 9.9810e-01,  ..., 9.0068e-05,
          3.0327e-05, 8.5655e-05]],
        [[9.9997e-01, 4.0292e-04, 6.6830e-04,  ..., 2.4695e-04,
          5.9597e-02, 1.1013e-04],
         [9.1858e-06, 4.0292e-04, 6.6830e-04,  ..., 2.4695e-04,
          2.5444e-01, 1.1013e-04],
         [9.1858e-06, 4.0292e-04, 6.6830e-04,  ..., 9.9926e-01,
          6.5428e-01, 9.9967e-01],
         [9.1858e-06, 9.9879e-01, 9.9800e-01,  ..., 2.4695e-04,
          3.1683e-02, 1.1013e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:40,996 [Process: 0] Synchronize training processes
2024-08-18 15:28:40,997 [Process: 0] Evaluating...
2024-08-18 15:28:40,998 [Process: 0] EPOCH 856:
2024-08-18 15:28:41,000 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1670e-04, 9.2453e-05, 7.1847e-07,  ..., 8.6306e-04,
          4.8871e-06, 1.6568e-03],
         [2.1670e-04, 9.2453e-05, 7.1847e-07,  ..., 8.6306e-04,
          4.8871e-06, 1.6568e-03],
         [9.9935e-01, 9.2453e-05, 7.1847e-07,  ..., 9.9741e-01,
          4.8871e-06, 9.9503e-01],
         [2.1670e-04, 9.9972e-01, 1.0000e+00,  ..., 8.6306e-04,
          9.9999e-01, 1.6568e-03]],
        [[1.7871e-03, 1.5396e-03, 6.0193e-04,  ..., 8.5786e-06,
          9.9975e-01, 7.4931e-04],
         [1.7447e-03, 1.5396e-03, 6.0193e-04,  ..., 8.5786e-06,
          8.2764e-05, 7.4931e-04],
         [9.9472e-01, 1.5396e-03, 6.0193e-04,  ..., 8.5786e-06,
          8.2764e-05, 9.9775e-01],
         [1.7447e-03, 9.9538e-01, 9.9819e-01,  ..., 9.9997e-01,
          8.2764e-05, 7.4931e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 856:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9981e-01, 1.2111e-03, 2.7326e-03,  ..., 9.4992e-05,
          3.7415e-04, 9.9855e-01],
         [6.2620e-05, 1.2111e-03, 2.7326e-03,  ..., 9.4992e-05,
          3.7415e-04, 4.4739e-04],
         [6.2620e-05, 1.2111e-03, 5.6926e-03,  ..., 9.9972e-01,
          9.9888e-01, 5.6034e-04],
         [6.2620e-05, 9.9637e-01, 9.8884e-01,  ..., 9.4992e-05,
          3.7415e-04, 4.4739e-04]],
        [[9.9990e-01, 9.3112e-04, 2.2733e-03,  ..., 1.0494e-04,
          2.7194e-04, 4.9101e-05],
         [3.4175e-05, 9.3112e-04, 2.2733e-03,  ..., 1.0494e-04,
          9.9896e-01, 4.9101e-05],
         [3.4175e-05, 1.1298e-03, 2.5119e-03,  ..., 9.9969e-01,
          4.9754e-04, 9.9985e-01],
         [3.4175e-05, 9.9701e-01, 9.9294e-01,  ..., 1.0494e-04,
          2.7194e-04, 4.9101e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.3177e-04, 2.5916e-04, 1.6863e-06,  ..., 3.0877e-03,
          1.7167e-04, 4.3978e-04],
         [9.3177e-04, 2.5916e-04, 1.6863e-06,  ..., 3.0877e-03,
          1.7167e-04, 4.3978e-04],
         [9.9720e-01, 2.5916e-04, 1.6863e-06,  ..., 9.9074e-01,
          1.7167e-04, 9.9868e-01],
         [9.3177e-04, 9.9922e-01, 9.9999e-01,  ..., 3.0877e-03,
          9.9949e-01, 4.3978e-04]],
        [[1.8688e-03, 7.0962e-04, 5.0583e-05,  ..., 7.2656e-05,
          9.9930e-01, 9.6405e-04],
         [1.8688e-03, 7.0962e-04, 5.0583e-05,  ..., 7.2656e-05,
          2.3195e-04, 9.6405e-04],
         [9.9439e-01, 7.0962e-04, 5.0583e-05,  ..., 7.2656e-05,
          2.3195e-04, 9.9711e-01],
         [1.8688e-03, 9.9787e-01, 9.9985e-01,  ..., 9.9978e-01,
          2.3195e-04, 9.6405e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 857:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9988e-01, 1.5948e-03, 3.1428e-04,  ..., 1.9823e-04,
          1.9607e-04, 9.9970e-01],
         [3.9717e-05, 1.5948e-03, 3.1428e-04,  ..., 1.9823e-04,
          1.9607e-04, 9.9604e-05],
         [3.9717e-05, 2.5159e-03, 3.1428e-04,  ..., 9.9941e-01,
          9.9941e-01, 9.9604e-05],
         [3.9717e-05, 9.9429e-01, 9.9906e-01,  ..., 1.9823e-04,
          1.9607e-04, 9.9604e-05]],
        [[9.9951e-01, 2.8754e-03, 7.0763e-04,  ..., 8.6895e-05,
          2.6972e-03, 6.3901e-05],
         [1.6390e-04, 3.3024e-03, 7.0763e-04,  ..., 8.6895e-05,
          9.9387e-01, 6.3901e-05],
         [1.6390e-04, 3.6427e-03, 7.0763e-04,  ..., 9.9974e-01,
          1.7148e-03, 9.9981e-01],
         [1.6390e-04, 9.9018e-01, 9.9788e-01,  ..., 8.6895e-05,
          1.7148e-03, 6.3901e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:42,123 [Process: 0] Synchronize training processes
2024-08-18 15:28:42,123 [Process: 0] Evaluating...
2024-08-18 15:28:42,125 [Process: 0] EPOCH 857:
2024-08-18 15:28:42,126 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:43,254 [Process: 0] Synchronize training processes
2024-08-18 15:28:43,254 [Process: 0] Evaluating...
2024-08-18 15:28:43,256 [Process: 0] EPOCH 858:
2024-08-18 15:28:43,258 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0034e-03, 1.0574e-04, 4.4702e-06,  ..., 2.6969e-04,
          1.8902e-05, 7.1162e-04],
         [2.0034e-03, 1.0574e-04, 4.4702e-06,  ..., 2.6969e-04,
          1.8902e-05, 7.1162e-04],
         [9.9399e-01, 1.0574e-04, 4.4702e-06,  ..., 9.9919e-01,
          1.8902e-05, 9.9787e-01],
         [2.0034e-03, 9.9968e-01, 9.9999e-01,  ..., 2.6969e-04,
          9.9994e-01, 7.1162e-04]],
        [[8.1129e-04, 1.6105e-04, 8.6082e-04,  ..., 1.0232e-05,
          9.9929e-01, 2.1392e-04],
         [8.1129e-04, 1.6105e-04, 8.6082e-04,  ..., 1.0232e-05,
          2.3731e-04, 2.1392e-04],
         [9.9757e-01, 1.6105e-04, 8.6082e-04,  ..., 1.0232e-05,
          2.3731e-04, 9.9936e-01],
         [8.1129e-04, 9.9952e-01, 9.9742e-01,  ..., 9.9997e-01,
          2.3731e-04, 2.1392e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 858:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9556e-01, 9.6000e-04, 9.2896e-04,  ..., 1.8698e-04,
          2.5006e-04, 9.9582e-01],
         [1.3461e-03, 9.6000e-04, 9.2896e-04,  ..., 1.8698e-04,
          2.5006e-04, 1.3099e-03],
         [1.7525e-03, 9.6000e-04, 9.2896e-04,  ..., 9.9944e-01,
          9.9925e-01, 1.5615e-03],
         [1.3461e-03, 9.9712e-01, 9.9721e-01,  ..., 1.8698e-04,
          2.5006e-04, 1.3099e-03]],
        [[9.9970e-01, 4.8945e-03, 3.0714e-03,  ..., 8.2880e-05,
          1.6880e-01, 7.0921e-05],
         [1.0092e-04, 4.8945e-03, 2.5926e-03,  ..., 8.2880e-05,
          6.8905e-01, 7.0921e-05],
         [1.0092e-04, 8.6573e-03, 2.8738e-03,  ..., 9.9975e-01,
          1.0590e-01, 9.9979e-01],
         [1.0092e-04, 9.8155e-01, 9.9146e-01,  ..., 8.2880e-05,
          3.6258e-02, 7.0921e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.4212e-04, 1.1774e-04, 3.6773e-05,  ..., 9.9492e-04,
          3.0835e-04, 2.8369e-03],
         [5.4212e-04, 1.1774e-04, 3.6773e-05,  ..., 9.9492e-04,
          3.0835e-04, 2.8369e-03],
         [9.9837e-01, 1.1774e-04, 3.6773e-05,  ..., 9.9702e-01,
          3.0835e-04, 9.9060e-01],
         [5.4212e-04, 9.9965e-01, 9.9989e-01,  ..., 9.9492e-04,
          9.9907e-01, 3.7236e-03]],
        [[1.0635e-03, 7.0897e-05, 2.5193e-04,  ..., 5.9640e-05,
          9.9997e-01, 2.3094e-03],
         [1.0635e-03, 7.0897e-05, 2.5193e-04,  ..., 5.9640e-05,
          8.4882e-06, 2.3094e-03],
         [9.9681e-01, 7.0897e-05, 2.5193e-04,  ..., 5.9640e-05,
          8.4882e-06, 9.9307e-01],
         [1.0635e-03, 9.9979e-01, 9.9924e-01,  ..., 9.9982e-01,
          8.4882e-06, 2.3094e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 859:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:44,385 [Process: 0] Synchronize training processes
2024-08-18 15:28:44,386 [Process: 0] Evaluating...
2024-08-18 15:28:44,388 [Process: 0] EPOCH 859:
2024-08-18 15:28:44,389 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:45,517 [Process: 0] Synchronize training processes
2024-08-18 15:28:45,517 [Process: 0] Evaluating...
2024-08-18 15:28:45,519 [Process: 0] EPOCH 860:
2024-08-18 15:28:45,521 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9698e-01, 9.0888e-04, 4.8152e-04,  ..., 3.3761e-04,
          6.5596e-04, 9.9978e-01],
         [8.2091e-04, 9.0888e-04, 4.8152e-04,  ..., 3.3761e-04,
          6.5596e-04, 7.3458e-05],
         [1.3754e-03, 9.0888e-04, 4.8152e-04,  ..., 9.9899e-01,
          9.9803e-01, 7.3458e-05],
         [8.2091e-04, 9.9727e-01, 9.9856e-01,  ..., 3.3761e-04,
          6.5596e-04, 7.3458e-05]],
        [[9.9809e-01, 2.9689e-03, 9.3725e-04,  ..., 1.9226e-04,
          6.2802e-04, 1.0123e-05],
         [6.7161e-04, 2.9689e-03, 9.3725e-04,  ..., 1.9226e-04,
          9.9804e-01, 1.0123e-05],
         [6.1691e-04, 4.3782e-03, 9.3725e-04,  ..., 9.9942e-01,
          7.0079e-04, 9.9997e-01],
         [6.1691e-04, 9.8968e-01, 9.9719e-01,  ..., 1.9226e-04,
          6.2802e-04, 1.0123e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2772e-03, 1.6018e-02, 6.2559e-05,  ..., 1.3624e-03,
          1.2028e-04, 1.0443e-03],
         [2.2772e-03, 7.3926e-03, 6.2559e-05,  ..., 1.3624e-03,
          1.2028e-04, 1.0443e-03],
         [9.9317e-01, 1.0132e-02, 6.2559e-05,  ..., 9.9591e-01,
          1.2028e-04, 9.9687e-01],
         [2.2772e-03, 9.6646e-01, 9.9981e-01,  ..., 1.3624e-03,
          9.9964e-01, 1.0443e-03]],
        [[3.5970e-03, 6.3984e-04, 5.1813e-04,  ..., 9.4049e-05,
          9.9986e-01, 9.4874e-04],
         [3.5970e-03, 6.3984e-04, 5.1813e-04,  ..., 9.4049e-05,
          4.5397e-05, 9.4874e-04],
         [9.8888e-01, 6.3984e-04, 5.1813e-04,  ..., 9.4049e-05,
          4.5397e-05, 9.9715e-01],
         [3.9273e-03, 9.9808e-01, 9.9845e-01,  ..., 9.9972e-01,
          4.5397e-05, 9.4874e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 860:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9525e-01, 7.5096e-04, 3.1076e-03,  ..., 3.1058e-04,
          1.4562e-04, 9.9987e-01],
         [1.5830e-03, 7.5096e-04, 2.8214e-03,  ..., 3.1058e-04,
          1.4562e-04, 4.2954e-05],
         [1.5830e-03, 7.5096e-04, 3.4005e-03,  ..., 9.9907e-01,
          9.9956e-01, 4.2954e-05],
         [1.5830e-03, 9.9775e-01, 9.9067e-01,  ..., 3.1058e-04,
          1.4562e-04, 4.2954e-05]],
        [[9.9879e-01, 1.0399e-03, 4.1349e-04,  ..., 6.8470e-05,
          3.9200e-03, 1.6471e-04],
         [4.0468e-04, 1.0399e-03, 3.8351e-04,  ..., 6.8470e-05,
          9.8370e-01, 1.6471e-04],
         [4.0468e-04, 1.0399e-03, 3.8351e-04,  ..., 9.9979e-01,
          6.1775e-03, 9.9951e-01],
         [4.0468e-04, 9.9688e-01, 9.9882e-01,  ..., 6.8470e-05,
          6.2075e-03, 1.6471e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.2727e-03, 3.0352e-04, 1.5683e-05,  ..., 9.8622e-04,
          4.8529e-05, 1.8463e-03],
         [1.2727e-03, 3.0352e-04, 1.5683e-05,  ..., 9.8622e-04,
          4.8529e-05, 1.8463e-03],
         [9.9618e-01, 3.0352e-04, 1.5683e-05,  ..., 9.9704e-01,
          4.8529e-05, 9.9446e-01],
         [1.2727e-03, 9.9909e-01, 9.9995e-01,  ..., 9.8622e-04,
          9.9985e-01, 1.8463e-03]],
        [[9.9909e-01, 7.6558e-05, 1.9913e-04,  ..., 4.0187e-05,
          9.9648e-01, 8.9679e-01],
         [3.0208e-04, 7.6558e-05, 1.9913e-04,  ..., 4.0187e-05,
          1.0826e-03, 1.3231e-02],
         [3.0208e-04, 7.6558e-05, 1.9913e-04,  ..., 4.0187e-05,
          1.3595e-03, 7.3906e-02],
         [3.0208e-04, 9.9977e-01, 9.9940e-01,  ..., 9.9988e-01,
          1.0826e-03, 1.6077e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:46,651 [Process: 0] Synchronize training processes
2024-08-18 15:28:46,652 [Process: 0] Evaluating...
2024-08-18 15:28:46,653 [Process: 0] EPOCH 861:
2024-08-18 15:28:46,655 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:47,783 [Process: 0] Synchronize training processes
2024-08-18 15:28:47,783 [Process: 0] Evaluating...
2024-08-18 15:28:47,787 [Process: 0] EPOCH 862:
2024-08-18 15:28:47,789 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 861:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9876e-01, 2.1680e-03, 1.1434e-03,  ..., 9.1833e-05,
          7.0227e-05, 9.9943e-01],
         [4.1418e-04, 2.1680e-03, 1.1434e-03,  ..., 9.1833e-05,
          7.0227e-05, 1.8836e-04],
         [4.1418e-04, 2.5154e-03, 1.1434e-03,  ..., 9.9972e-01,
          9.9979e-01, 1.8836e-04],
         [4.1418e-04, 9.9315e-01, 9.9657e-01,  ..., 9.1833e-05,
          7.0227e-05, 1.8836e-04]],
        [[9.9950e-01, 9.4518e-04, 1.4677e-04,  ..., 6.4230e-04,
          4.7317e-02, 1.6628e-04],
         [1.6821e-04, 9.4518e-04, 1.4677e-04,  ..., 9.9453e-04,
          7.2239e-01, 1.6628e-04],
         [1.6821e-04, 9.4518e-04, 1.4677e-04,  ..., 9.9772e-01,
          1.8465e-01, 9.9950e-01],
         [1.6821e-04, 9.9716e-01, 9.9956e-01,  ..., 6.4230e-04,
          4.5648e-02, 1.6628e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3695e-03, 1.5818e-04, 1.1898e-05,  ..., 9.7392e-04,
          7.4187e-05, 1.4420e-03],
         [1.3695e-03, 1.5818e-04, 1.1898e-05,  ..., 9.7392e-04,
          7.4187e-05, 1.4420e-03],
         [9.9589e-01, 1.5818e-04, 1.1898e-05,  ..., 9.9708e-01,
          7.4187e-05, 9.9567e-01],
         [1.3695e-03, 9.9953e-01, 9.9996e-01,  ..., 9.7392e-04,
          9.9978e-01, 1.4420e-03]],
        [[9.9959e-01, 3.5893e-04, 1.0244e-04,  ..., 4.3355e-05,
          9.9910e-01, 4.6751e-01],
         [1.3688e-04, 3.5893e-04, 1.0244e-04,  ..., 4.3355e-05,
          3.0077e-04, 2.7191e-02],
         [1.3688e-04, 3.5893e-04, 1.0244e-04,  ..., 4.3355e-05,
          3.0077e-04, 4.5283e-01],
         [1.3688e-04, 9.9892e-01, 9.9969e-01,  ..., 9.9987e-01,
          3.0077e-04, 5.2470e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 862:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8469e-01, 1.0102e-03, 1.7137e-03,  ..., 2.4103e-04,
          5.6160e-05, 9.9970e-01],
         [3.3216e-03, 1.0102e-03, 1.7137e-03,  ..., 2.4103e-04,
          5.6160e-05, 9.9579e-05],
         [3.7661e-03, 1.0102e-03, 1.7137e-03,  ..., 9.9928e-01,
          9.9983e-01, 9.9579e-05],
         [8.2197e-03, 9.9697e-01, 9.9486e-01,  ..., 2.4103e-04,
          5.6160e-05, 9.9579e-05]],
        [[9.9893e-01, 4.1692e-03, 2.4478e-04,  ..., 8.7198e-05,
          1.5133e-03, 5.5117e-05],
         [3.5628e-04, 3.9600e-03, 2.4478e-04,  ..., 8.7198e-05,
          9.9473e-01, 5.5117e-05],
         [3.5628e-04, 5.3338e-03, 2.4478e-04,  ..., 9.9974e-01,
          1.5133e-03, 9.9983e-01],
         [3.5628e-04, 9.8654e-01, 9.9927e-01,  ..., 8.7198e-05,
          2.2468e-03, 5.5117e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:48,918 [Process: 0] Synchronize training processes
2024-08-18 15:28:48,918 [Process: 0] Evaluating...
2024-08-18 15:28:48,920 [Process: 0] EPOCH 863:
2024-08-18 15:28:48,922 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:50,044 [Process: 0] Synchronize training processes
2024-08-18 15:28:50,044 [Process: 0] Evaluating...
2024-08-18 15:28:50,046 [Process: 0] EPOCH 864:
2024-08-18 15:28:50,048 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8074e-03, 4.0076e-05, 7.5904e-07,  ..., 6.7813e-04,
          5.1107e-06, 5.6411e-04],
         [1.8074e-03, 4.0076e-05, 7.5904e-07,  ..., 6.7813e-04,
          5.1107e-06, 5.6411e-04],
         [9.9458e-01, 4.0076e-05, 7.5904e-07,  ..., 9.9797e-01,
          5.1107e-06, 9.9831e-01],
         [1.8074e-03, 9.9988e-01, 1.0000e+00,  ..., 6.7813e-04,
          9.9998e-01, 5.6411e-04]],
        [[1.3944e-03, 4.3246e-04, 7.3364e-04,  ..., 2.7052e-05,
          9.9073e-01, 1.5133e-03],
         [1.3944e-03, 4.3246e-04, 7.3364e-04,  ..., 2.7052e-05,
          1.9698e-03, 1.5133e-03],
         [9.9582e-01, 4.3246e-04, 7.3364e-04,  ..., 2.7052e-05,
          5.3332e-03, 9.9546e-01],
         [1.3944e-03, 9.9870e-01, 9.9780e-01,  ..., 9.9992e-01,
          1.9698e-03, 1.5133e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 863:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9918e-01, 4.0793e-03, 5.9976e-04,  ..., 9.6323e-05,
          1.3903e-04, 9.9983e-01],
         [2.7294e-04, 4.0793e-03, 5.8825e-04,  ..., 9.6323e-05,
          1.3903e-04, 5.6404e-05],
         [2.7294e-04, 5.5488e-03, 5.8825e-04,  ..., 9.9971e-01,
          9.9958e-01, 5.6404e-05],
         [2.7294e-04, 9.8629e-01, 9.9822e-01,  ..., 9.6323e-05,
          1.3903e-04, 5.6404e-05]],
        [[9.9649e-01, 8.3556e-04, 1.5604e-03,  ..., 1.3178e-05,
          2.2508e-03, 5.2618e-05],
         [1.7190e-03, 8.3556e-04, 1.5604e-03,  ..., 1.3178e-05,
          2.2508e-03, 5.3924e-05],
         [8.9384e-04, 8.3556e-04, 1.5604e-03,  ..., 9.9996e-01,
          2.7502e-03, 9.9984e-01],
         [8.9384e-04, 9.9749e-01, 9.9532e-01,  ..., 1.3178e-05,
          9.9275e-01, 5.2618e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1723e-03, 1.6842e-03, 1.1465e-04,  ..., 1.6093e-03,
          1.5825e-06, 5.8508e-04],
         [1.1723e-03, 1.7118e-03, 2.6459e-04,  ..., 1.6093e-03,
          1.5825e-06, 5.8508e-04],
         [9.9648e-01, 1.6842e-03, 1.1465e-04,  ..., 9.9517e-01,
          1.5825e-06, 9.9824e-01],
         [1.1723e-03, 9.9492e-01, 9.9951e-01,  ..., 1.6093e-03,
          1.0000e+00, 5.8508e-04]],
        [[9.3829e-04, 9.1777e-05, 7.3744e-04,  ..., 1.2315e-05,
          6.9775e-01, 3.3597e-03],
         [9.3829e-04, 9.1777e-05, 7.3744e-04,  ..., 1.2315e-05,
          2.1473e-02, 3.3597e-03],
         [9.9719e-01, 9.1777e-05, 7.3744e-04,  ..., 1.2315e-05,
          2.4484e-01, 9.8934e-01],
         [9.3829e-04, 9.9972e-01, 9.9779e-01,  ..., 9.9996e-01,
          3.5935e-02, 3.9370e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 864:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 1.2975e-03, 1.7049e-03,  ..., 8.3005e-04,
          8.3798e-05, 9.9853e-01],
         [4.9490e-05, 1.2975e-03, 1.7049e-03,  ..., 8.3005e-04,
          8.3798e-05, 4.8845e-04],
         [4.9490e-05, 1.2975e-03, 1.7049e-03,  ..., 9.9751e-01,
          9.9975e-01, 4.8845e-04],
         [4.9490e-05, 9.9611e-01, 9.9489e-01,  ..., 8.3005e-04,
          8.3798e-05, 4.8845e-04]],
        [[9.9990e-01, 1.5285e-03, 5.3175e-04,  ..., 1.9892e-04,
          3.6826e-03, 2.1820e-04],
         [3.4546e-05, 1.5285e-03, 5.3175e-04,  ..., 2.2715e-04,
          3.6826e-03, 2.1820e-04],
         [3.4546e-05, 1.5285e-03, 5.3175e-04,  ..., 9.9938e-01,
          5.8082e-03, 9.9935e-01],
         [3.4546e-05, 9.9541e-01, 9.9840e-01,  ..., 1.9892e-04,
          9.8683e-01, 2.1820e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:51,173 [Process: 0] Synchronize training processes
2024-08-18 15:28:51,173 [Process: 0] Evaluating...
2024-08-18 15:28:51,175 [Process: 0] EPOCH 865:
2024-08-18 15:28:51,177 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1578e-03, 4.1615e-04, 1.0217e-06,  ..., 1.2956e-03,
          5.1232e-05, 1.4579e-03],
         [2.1578e-03, 4.1615e-04, 1.0217e-06,  ..., 1.2956e-03,
          5.1232e-05, 1.4579e-03],
         [9.9353e-01, 4.1615e-04, 1.0217e-06,  ..., 9.9611e-01,
          5.1232e-05, 9.9563e-01],
         [2.1578e-03, 9.9875e-01, 1.0000e+00,  ..., 1.2956e-03,
          9.9985e-01, 1.4579e-03]],
        [[1.2746e-03, 1.0266e-03, 4.4817e-04,  ..., 1.2473e-04,
          5.0790e-01, 1.3673e-03],
         [1.2746e-03, 1.0266e-03, 4.4817e-04,  ..., 1.2473e-04,
          2.2791e-02, 1.3673e-03],
         [9.9618e-01, 1.0266e-03, 4.4817e-04,  ..., 1.2473e-04,
          4.4109e-01, 9.9590e-01],
         [1.2746e-03, 9.9692e-01, 9.9866e-01,  ..., 9.9963e-01,
          2.8218e-02, 1.3673e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 865:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 1.5226e-03, 3.1370e-03,  ..., 1.3553e-03,
          1.3949e-04, 9.9735e-01],
         [2.3914e-05, 1.5226e-03, 3.1370e-03,  ..., 1.3553e-03,
          1.3949e-04, 7.2140e-04],
         [2.3914e-05, 1.5226e-03, 3.9085e-03,  ..., 9.9580e-01,
          9.9958e-01, 1.2073e-03],
         [2.3914e-05, 9.9543e-01, 9.8982e-01,  ..., 1.4897e-03,
          1.3949e-04, 7.2140e-04]],
        [[9.9968e-01, 3.3945e-04, 1.1940e-03,  ..., 2.2847e-05,
          4.4243e-03, 1.5942e-04],
         [9.9573e-05, 3.3945e-04, 1.1089e-03,  ..., 2.2847e-05,
          5.6158e-02, 1.5942e-04],
         [1.2412e-04, 3.3945e-04, 1.1089e-03,  ..., 9.9993e-01,
          4.4243e-03, 9.9952e-01],
         [9.9573e-05, 9.9898e-01, 9.9659e-01,  ..., 2.2847e-05,
          9.3499e-01, 1.5942e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8809e-03, 7.3678e-04, 3.7833e-05,  ..., 3.6672e-03,
          1.3282e-04, 1.3420e-03],
         [3.8809e-03, 8.4111e-04, 3.7833e-05,  ..., 3.1766e-03,
          1.3282e-04, 1.3420e-03],
         [9.8739e-01, 7.3678e-04, 3.7833e-05,  ..., 9.8998e-01,
          1.3282e-04, 9.9597e-01],
         [4.8482e-03, 9.9769e-01, 9.9989e-01,  ..., 3.1766e-03,
          9.9960e-01, 1.3420e-03]],
        [[2.6228e-03, 3.2237e-04, 1.5774e-03,  ..., 4.5016e-04,
          8.7507e-01, 1.4361e-03],
         [2.6228e-03, 3.2237e-04, 1.0130e-03,  ..., 4.5016e-04,
          1.0918e-02, 1.4361e-03],
         [9.9166e-01, 3.2237e-04, 1.0130e-03,  ..., 4.5016e-04,
          1.0172e-01, 9.9569e-01],
         [3.0947e-03, 9.9903e-01, 9.9640e-01,  ..., 9.9865e-01,
          1.2290e-02, 1.4361e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 866:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:28:52,304 [Process: 0] Synchronize training processes
2024-08-18 15:28:52,304 [Process: 0] Evaluating...
2024-08-18 15:28:52,306 [Process: 0] EPOCH 866:
2024-08-18 15:28:52,308 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:53,439 [Process: 0] Synchronize training processes
2024-08-18 15:28:53,439 [Process: 0] Evaluating...
2024-08-18 15:28:53,441 [Process: 0] EPOCH 867:
2024-08-18 15:28:53,442 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9973e-01, 1.2379e-03, 1.1442e-02,  ..., 3.9454e-04,
          2.3836e-04, 9.9922e-01],
         [8.8829e-05, 1.2379e-03, 1.3715e-02,  ..., 3.9454e-04,
          2.3836e-04, 1.6994e-04],
         [8.8829e-05, 1.2379e-03, 1.9524e-02,  ..., 9.9882e-01,
          9.9928e-01, 4.3593e-04],
         [8.8829e-05, 9.9629e-01, 9.5532e-01,  ..., 3.9454e-04,
          2.3836e-04, 1.6994e-04]],
        [[9.9989e-01, 1.8517e-03, 5.9186e-04,  ..., 2.4356e-05,
          1.4904e-04, 6.8678e-05],
         [3.6212e-05, 1.9190e-03, 5.9186e-04,  ..., 2.4356e-05,
          9.9955e-01, 6.8678e-05],
         [3.6212e-05, 1.8517e-03, 5.9186e-04,  ..., 9.9993e-01,
          1.4858e-04, 9.9979e-01],
         [3.6212e-05, 9.9438e-01, 9.9822e-01,  ..., 2.4356e-05,
          1.4858e-04, 6.8678e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.3092e-04, 1.8988e-04, 6.4016e-06,  ..., 1.9265e-03,
          7.7358e-05, 1.6565e-03],
         [4.3092e-04, 1.8988e-04, 6.4016e-06,  ..., 1.9265e-03,
          7.7358e-05, 1.6565e-03],
         [9.9871e-01, 1.8988e-04, 6.4016e-06,  ..., 9.9422e-01,
          7.7358e-05, 9.9503e-01],
         [4.3092e-04, 9.9943e-01, 9.9998e-01,  ..., 1.9265e-03,
          9.9977e-01, 1.6565e-03]],
        [[3.4484e-03, 3.1856e-04, 2.1389e-04,  ..., 1.7207e-04,
          9.5420e-01, 8.0003e-04],
         [3.4484e-03, 3.1856e-04, 2.1389e-04,  ..., 1.7207e-04,
          4.9184e-03, 8.0003e-04],
         [9.8853e-01, 3.1856e-04, 2.1389e-04,  ..., 1.7207e-04,
          3.5959e-02, 9.9760e-01],
         [4.5767e-03, 9.9904e-01, 9.9936e-01,  ..., 9.9948e-01,
          4.9184e-03, 8.0003e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 867:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9701e-01, 8.4422e-04, 1.7648e-04,  ..., 2.1073e-03,
          1.8513e-04, 9.9928e-01],
         [8.2736e-04, 8.4422e-04, 1.7648e-04,  ..., 2.1073e-03,
          1.8513e-04, 2.4128e-04],
         [1.3387e-03, 8.4422e-04, 1.7648e-04,  ..., 9.9368e-01,
          9.9944e-01, 2.4128e-04],
         [8.2736e-04, 9.9747e-01, 9.9947e-01,  ..., 2.1073e-03,
          1.8513e-04, 2.4128e-04]],
        [[9.9862e-01, 2.6763e-03, 1.3188e-03,  ..., 3.1001e-05,
          6.5511e-02, 2.0463e-04],
         [4.5855e-04, 2.6763e-03, 1.3188e-03,  ..., 3.1001e-05,
          9.0350e-01, 2.0463e-04],
         [4.5855e-04, 2.6763e-03, 1.3188e-03,  ..., 9.9991e-01,
          1.3857e-02, 9.9939e-01],
         [4.5855e-04, 9.9197e-01, 9.9604e-01,  ..., 3.1001e-05,
          1.7135e-02, 2.0463e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6060e-03, 5.7224e-04, 8.0497e-05,  ..., 1.3118e-03,
          4.6092e-05, 2.0534e-03],
         [1.6060e-03, 5.7224e-04, 8.0497e-05,  ..., 1.3118e-03,
          4.6092e-05, 2.0534e-03],
         [9.9518e-01, 5.7224e-04, 8.0497e-05,  ..., 9.9606e-01,
          4.6092e-05, 9.9384e-01],
         [1.6060e-03, 9.9828e-01, 9.9976e-01,  ..., 1.3118e-03,
          9.9986e-01, 2.0534e-03]],
        [[4.5535e-03, 3.4445e-03, 1.1645e-03,  ..., 4.0706e-04,
          9.2968e-01, 5.5751e-04],
         [4.5535e-03, 2.5158e-03, 1.1645e-03,  ..., 4.0706e-04,
          9.2799e-03, 5.5751e-04],
         [9.8432e-01, 2.5158e-03, 1.1645e-03,  ..., 4.0706e-04,
          4.5164e-02, 9.9833e-01],
         [6.5759e-03, 9.9152e-01, 9.9651e-01,  ..., 9.9878e-01,
          1.5879e-02, 5.5751e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 868:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:54,566 [Process: 0] Synchronize training processes
2024-08-18 15:28:54,566 [Process: 0] Evaluating...
2024-08-18 15:28:54,568 [Process: 0] EPOCH 868:
2024-08-18 15:28:54,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:55,698 [Process: 0] Synchronize training processes
2024-08-18 15:28:55,698 [Process: 0] Evaluating...
2024-08-18 15:28:55,700 [Process: 0] EPOCH 869:
2024-08-18 15:28:55,701 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9937e-01, 1.7307e-03, 2.2505e-03,  ..., 6.5245e-04,
          3.1810e-05, 9.9949e-01],
         [2.1063e-04, 1.7307e-03, 2.2505e-03,  ..., 6.5245e-04,
          3.1810e-05, 1.6912e-04],
         [2.1063e-04, 1.7307e-03, 2.2505e-03,  ..., 9.9795e-01,
          9.9990e-01, 1.6912e-04],
         [2.1063e-04, 9.9481e-01, 9.9325e-01,  ..., 7.4716e-04,
          3.1810e-05, 1.6912e-04]],
        [[9.9978e-01, 1.3631e-03, 8.2587e-04,  ..., 1.0892e-04,
          7.7136e-04, 3.5638e-04],
         [7.4958e-05, 1.6796e-03, 8.2587e-04,  ..., 1.0892e-04,
          9.9725e-01, 3.5638e-04],
         [7.4958e-05, 1.3631e-03, 8.2587e-04,  ..., 9.9967e-01,
          7.7136e-04, 9.9893e-01],
         [7.4958e-05, 9.9559e-01, 9.9752e-01,  ..., 1.0892e-04,
          1.2109e-03, 3.5638e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2180e-03, 1.5041e-04, 2.8888e-04,  ..., 8.4222e-04,
          8.3594e-06, 1.6539e-03],
         [4.2180e-03, 1.5041e-04, 2.8888e-04,  ..., 8.4222e-04,
          8.3594e-06, 1.6539e-03],
         [9.8692e-01, 1.5041e-04, 2.8888e-04,  ..., 9.9747e-01,
          8.3594e-06, 9.9504e-01],
         [4.6452e-03, 9.9955e-01, 9.9913e-01,  ..., 8.4222e-04,
          9.9997e-01, 1.6539e-03]],
        [[2.6053e-02, 4.0539e-03, 9.9902e-01,  ..., 1.4068e-03,
          9.7843e-01, 9.2500e-04],
         [2.6053e-02, 4.0539e-03, 3.2730e-04,  ..., 1.2762e-03,
          4.0523e-03, 9.2500e-04],
         [6.3733e-01, 5.6811e-03, 3.2730e-04,  ..., 1.2762e-03,
          1.3291e-02, 9.9723e-01],
         [3.1057e-01, 9.8621e-01, 3.2730e-04,  ..., 9.9604e-01,
          4.2281e-03, 9.2500e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 869:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9960e-01, 2.2658e-04, 3.8824e-03,  ..., 1.6933e-03,
          1.3009e-05, 9.9797e-01],
         [1.3196e-04, 2.2658e-04, 2.7554e-03,  ..., 1.6933e-03,
          1.3009e-05, 5.3517e-04],
         [1.3196e-04, 2.2658e-04, 2.7554e-03,  ..., 9.9371e-01,
          9.9996e-01, 9.6046e-04],
         [1.3196e-04, 9.9932e-01, 9.9061e-01,  ..., 2.9062e-03,
          1.3009e-05, 5.3517e-04]],
        [[9.9986e-01, 7.7174e-04, 5.1168e-03,  ..., 3.9758e-05,
          9.3439e-05, 4.2220e-05],
         [4.7693e-05, 7.7174e-04, 3.5915e-03,  ..., 3.9758e-05,
          9.9972e-01, 4.2220e-05],
         [4.7693e-05, 7.7174e-04, 4.2660e-03,  ..., 9.9988e-01,
          9.3439e-05, 9.9987e-01],
         [4.7693e-05, 9.9768e-01, 9.8703e-01,  ..., 3.9758e-05,
          9.3439e-05, 4.2220e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.2417e-04, 2.0217e-04, 4.0205e-06,  ..., 1.5616e-03,
          5.9416e-06, 1.7185e-03],
         [6.2417e-04, 2.0217e-04, 4.0205e-06,  ..., 1.5616e-03,
          5.9416e-06, 1.7185e-03],
         [9.9813e-01, 2.0217e-04, 4.0205e-06,  ..., 9.9532e-01,
          5.9416e-06, 9.9484e-01],
         [6.2417e-04, 9.9939e-01, 9.9999e-01,  ..., 1.5616e-03,
          9.9998e-01, 1.7185e-03]],
        [[1.8151e-02, 2.2224e-02, 9.9899e-01,  ..., 7.4111e-04,
          9.7299e-01, 1.2256e-03],
         [1.8151e-02, 2.2224e-02, 3.3608e-04,  ..., 7.4111e-04,
          4.6284e-03, 1.2256e-03],
         [8.1765e-01, 6.5127e-01, 3.3608e-04,  ..., 7.4111e-04,
          1.6072e-02, 9.9632e-01],
         [1.4605e-01, 3.0428e-01, 3.3608e-04,  ..., 9.9778e-01,
          6.3070e-03, 1.2256e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:56,831 [Process: 0] Synchronize training processes
2024-08-18 15:28:56,832 [Process: 0] Evaluating...
2024-08-18 15:28:56,833 [Process: 0] EPOCH 870:
2024-08-18 15:28:56,835 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:28:57,955 [Process: 0] Synchronize training processes
2024-08-18 15:28:57,955 [Process: 0] Evaluating...
2024-08-18 15:28:57,957 [Process: 0] EPOCH 871:
2024-08-18 15:28:57,959 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 870:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9962e-01, 1.2238e-03, 9.6819e-04,  ..., 2.6811e-04,
          1.9395e-05, 9.9787e-01],
         [1.2312e-04, 1.2238e-03, 9.6819e-04,  ..., 2.6811e-04,
          1.9395e-05, 7.0289e-04],
         [1.2312e-04, 1.2238e-03, 9.6819e-04,  ..., 9.9920e-01,
          9.9994e-01, 7.2594e-04],
         [1.3200e-04, 9.9633e-01, 9.9710e-01,  ..., 2.6811e-04,
          1.9395e-05, 7.0289e-04]],
        [[9.9873e-01, 9.5130e-04, 2.9314e-04,  ..., 6.8735e-05,
          2.6555e-05, 2.7092e-05],
         [3.0861e-04, 8.2731e-04, 2.9314e-04,  ..., 6.8735e-05,
          9.9992e-01, 2.7092e-05],
         [6.5594e-04, 8.2731e-04, 2.9314e-04,  ..., 9.9979e-01,
          2.6555e-05, 9.9992e-01],
         [3.0861e-04, 9.9739e-01, 9.9912e-01,  ..., 6.8735e-05,
          2.6555e-05, 2.7092e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1618e-03, 2.8067e-05, 2.9897e-07,  ..., 4.7422e-04,
          4.8457e-05, 1.8257e-03],
         [1.1618e-03, 2.8067e-05, 2.9897e-07,  ..., 4.7422e-04,
          4.8457e-05, 1.8257e-03],
         [9.9651e-01, 2.8067e-05, 2.9897e-07,  ..., 9.9858e-01,
          4.8457e-05, 9.9452e-01],
         [1.1618e-03, 9.9992e-01, 1.0000e+00,  ..., 4.7422e-04,
          9.9985e-01, 1.8257e-03]],
        [[3.1804e-02, 9.7022e-03, 9.9785e-01,  ..., 1.1419e-04,
          9.9598e-01, 1.8657e-03],
         [3.1058e-02, 9.7022e-03, 7.1484e-04,  ..., 1.1419e-04,
          1.3399e-03, 1.8657e-03],
         [3.4064e-01, 2.8377e-02, 7.1484e-04,  ..., 1.1419e-04,
          1.3399e-03, 9.9440e-01],
         [5.9649e-01, 9.5222e-01, 7.2171e-04,  ..., 9.9966e-01,
          1.3399e-03, 1.8657e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 871:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9807e-01, 1.1021e-03, 4.1504e-04,  ..., 5.9532e-04,
          1.5603e-04, 9.9936e-01],
         [5.5648e-04, 1.1021e-03, 4.1504e-04,  ..., 5.9532e-04,
          1.5603e-04, 2.1350e-04],
         [8.2158e-04, 1.1021e-03, 4.1504e-04,  ..., 9.9821e-01,
          9.9953e-01, 2.1350e-04],
         [5.5648e-04, 9.9669e-01, 9.9875e-01,  ..., 5.9532e-04,
          1.5603e-04, 2.1350e-04]],
        [[9.9765e-01, 7.2836e-04, 9.4044e-04,  ..., 6.4027e-04,
          4.4714e-05, 8.6936e-06],
         [5.5684e-04, 7.2836e-04, 9.4044e-04,  ..., 6.4027e-04,
          9.9987e-01, 8.6936e-06],
         [1.2336e-03, 7.2836e-04, 9.4044e-04,  ..., 9.9808e-01,
          4.4714e-05, 9.9997e-01],
         [5.5684e-04, 9.9781e-01, 9.9718e-01,  ..., 6.4027e-04,
          4.4714e-05, 8.6936e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:28:59,074 [Process: 0] Synchronize training processes
2024-08-18 15:28:59,075 [Process: 0] Evaluating...
2024-08-18 15:28:59,079 [Process: 0] EPOCH 872:
2024-08-18 15:28:59,081 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5458e-03, 7.9620e-05, 6.5366e-07,  ..., 1.8449e-03,
          8.4691e-06, 6.7139e-04],
         [1.5458e-03, 7.9620e-05, 6.5366e-07,  ..., 1.8449e-03,
          9.9020e-06, 6.7139e-04],
         [9.9536e-01, 7.9620e-05, 6.5366e-07,  ..., 9.9447e-01,
          8.4691e-06, 9.9799e-01],
         [1.5458e-03, 9.9976e-01, 1.0000e+00,  ..., 1.8449e-03,
          9.9997e-01, 6.7139e-04]],
        [[4.4977e-02, 2.0207e-03, 9.9820e-01,  ..., 8.2119e-05,
          9.1939e-01, 7.1860e-04],
         [2.6431e-02, 1.7261e-03, 5.0464e-04,  ..., 8.2119e-05,
          1.4378e-02, 7.1860e-04],
         [1.6136e-01, 1.7261e-03, 5.0464e-04,  ..., 8.2119e-05,
          3.6600e-02, 9.9784e-01],
         [7.6723e-01, 9.9453e-01, 7.9418e-04,  ..., 9.9975e-01,
          2.9637e-02, 7.1860e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 872:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9904e-01, 7.0675e-04, 4.9512e-04,  ..., 6.3949e-04,
          1.1577e-04, 9.9949e-01],
         [2.8859e-04, 7.0675e-04, 4.9512e-04,  ..., 6.3949e-04,
          1.1577e-04, 1.6870e-04],
         [3.8081e-04, 7.0675e-04, 4.9512e-04,  ..., 9.9808e-01,
          9.9965e-01, 1.6870e-04],
         [2.8859e-04, 9.9788e-01, 9.9851e-01,  ..., 6.3949e-04,
          1.1577e-04, 1.6870e-04]],
        [[9.9817e-01, 3.4601e-03, 8.7006e-04,  ..., 3.5984e-05,
          1.8351e-03, 1.6527e-04],
         [3.9612e-04, 3.9559e-03, 8.8931e-04,  ..., 3.5984e-05,
          9.9420e-01, 1.6527e-04],
         [1.0374e-03, 3.6558e-03, 8.7006e-04,  ..., 9.9989e-01,
          2.1261e-03, 9.9950e-01],
         [3.9612e-04, 9.8893e-01, 9.9737e-01,  ..., 3.5984e-05,
          1.8351e-03, 1.6527e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8477e-03, 5.4293e-04, 2.2776e-05,  ..., 1.0105e-03,
          7.9320e-06, 2.1205e-03],
         [1.8477e-03, 5.4293e-04, 2.2776e-05,  ..., 1.0105e-03,
          7.9320e-06, 2.1205e-03],
         [9.9446e-01, 5.4293e-04, 2.2776e-05,  ..., 9.9697e-01,
          7.9320e-06, 9.9364e-01],
         [1.8477e-03, 9.9837e-01, 9.9993e-01,  ..., 1.0105e-03,
          9.9998e-01, 2.1205e-03]],
        [[2.1965e-02, 2.5158e-03, 9.9452e-01,  ..., 2.0102e-05,
          1.6714e-01, 7.4541e-03],
         [2.1965e-02, 2.5158e-03, 1.9646e-03,  ..., 2.0102e-05,
          6.5064e-02, 7.4541e-03],
         [7.2831e-01, 2.5158e-03, 1.6735e-03,  ..., 2.0102e-05,
          3.0676e-01, 9.6929e-01],
         [2.2776e-01, 9.9245e-01, 1.8441e-03,  ..., 9.9994e-01,
          4.6105e-01, 1.5802e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 873:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9936e-01, 5.8169e-04, 6.0060e-04,  ..., 4.8273e-03,
          3.2640e-04, 9.9908e-01],
         [2.1217e-04, 6.4188e-04, 6.0060e-04,  ..., 4.8273e-03,
          3.2640e-04, 2.0563e-04],
         [2.1217e-04, 5.8169e-04, 6.0060e-04,  ..., 9.8397e-01,
          9.9902e-01, 5.0452e-04],
         [2.1217e-04, 9.9819e-01, 9.9820e-01,  ..., 6.3728e-03,
          3.2640e-04, 2.0563e-04]],
        [[9.9974e-01, 1.8253e-03, 4.6185e-04,  ..., 8.9786e-05,
          4.4381e-02, 1.5282e-04],
         [8.5102e-05, 1.6127e-03, 4.6185e-04,  ..., 8.9786e-05,
          8.1884e-01, 1.5282e-04],
         [8.5102e-05, 1.6127e-03, 4.6185e-04,  ..., 9.9973e-01,
          6.9746e-02, 9.9954e-01],
         [8.5102e-05, 9.9495e-01, 9.9861e-01,  ..., 8.9786e-05,
          6.7038e-02, 1.5282e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:00,197 [Process: 0] Synchronize training processes
2024-08-18 15:29:00,197 [Process: 0] Evaluating...
2024-08-18 15:29:00,199 [Process: 0] EPOCH 873:
2024-08-18 15:29:00,201 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:01,318 [Process: 0] Synchronize training processes
2024-08-18 15:29:01,318 [Process: 0] Evaluating...
2024-08-18 15:29:01,320 [Process: 0] EPOCH 874:
2024-08-18 15:29:01,322 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4145e-04, 1.6028e-04, 2.1688e-07,  ..., 1.5912e-03,
          1.6540e-05, 1.2368e-03],
         [4.4145e-04, 1.6028e-04, 2.1688e-07,  ..., 1.5912e-03,
          1.6540e-05, 1.2368e-03],
         [9.9868e-01, 1.6028e-04, 2.1688e-07,  ..., 9.9523e-01,
          1.6540e-05, 9.9629e-01],
         [4.4145e-04, 9.9952e-01, 1.0000e+00,  ..., 1.5912e-03,
          9.9995e-01, 1.2368e-03]],
        [[9.5888e-03, 7.0014e-04, 9.9903e-01,  ..., 5.1954e-05,
          9.3956e-01, 8.9711e-03],
         [9.5888e-03, 7.0014e-04, 3.2249e-04,  ..., 5.1954e-05,
          1.1660e-02, 8.8536e-03],
         [9.3675e-01, 7.0014e-04, 3.2249e-04,  ..., 5.1954e-05,
          2.3666e-02, 9.6612e-01],
         [4.4076e-02, 9.9790e-01, 3.2249e-04,  ..., 9.9984e-01,
          2.5111e-02, 1.6052e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 874:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9954e-01, 1.9121e-03, 1.4932e-03,  ..., 8.5056e-04,
          1.2006e-04, 9.9937e-01],
         [1.5370e-04, 1.5016e-03, 1.4932e-03,  ..., 8.5056e-04,
          1.2006e-04, 2.0878e-04],
         [1.5370e-04, 1.5016e-03, 1.4932e-03,  ..., 9.9745e-01,
          9.9964e-01, 2.0878e-04],
         [1.5370e-04, 9.9508e-01, 9.9552e-01,  ..., 8.5056e-04,
          1.2006e-04, 2.0878e-04]],
        [[9.9995e-01, 2.3050e-03, 1.0238e-03,  ..., 1.7541e-04,
          6.6032e-02, 6.7170e-05],
         [1.5709e-05, 2.7037e-03, 1.0238e-03,  ..., 1.7541e-04,
          7.5502e-02, 6.7170e-05],
         [1.5709e-05, 2.3050e-03, 1.0238e-03,  ..., 9.9947e-01,
          2.3581e-01, 9.9980e-01],
         [1.5709e-05, 9.9269e-01, 9.9693e-01,  ..., 1.7541e-04,
          6.2266e-01, 6.7170e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9036e-04, 3.0341e-03, 5.5465e-06,  ..., 5.6040e-04,
          3.6191e-05, 2.0361e-03],
         [6.9036e-04, 2.5209e-03, 5.5465e-06,  ..., 5.6040e-04,
          3.6191e-05, 2.0361e-03],
         [9.9793e-01, 2.5209e-03, 5.5465e-06,  ..., 9.9832e-01,
          3.6191e-05, 9.9354e-01],
         [6.9036e-04, 9.9192e-01, 9.9998e-01,  ..., 5.6040e-04,
          9.9989e-01, 2.3899e-03]],
        [[6.4962e-03, 1.4510e-04, 9.9986e-01,  ..., 1.8187e-04,
          9.8822e-01, 1.1295e-03],
         [6.4962e-03, 1.4510e-04, 4.7428e-05,  ..., 1.8952e-04,
          2.7409e-03, 1.1295e-03],
         [9.7617e-01, 1.4510e-04, 4.7428e-05,  ..., 1.8187e-04,
          6.3012e-03, 9.9661e-01],
         [1.0841e-02, 9.9956e-01, 4.7428e-05,  ..., 9.9945e-01,
          2.7409e-03, 1.1295e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 875:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:02,437 [Process: 0] Synchronize training processes
2024-08-18 15:29:02,437 [Process: 0] Evaluating...
2024-08-18 15:29:02,439 [Process: 0] EPOCH 875:
2024-08-18 15:29:02,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:03,562 [Process: 0] Synchronize training processes
2024-08-18 15:29:03,562 [Process: 0] Evaluating...
2024-08-18 15:29:03,564 [Process: 0] EPOCH 876:
2024-08-18 15:29:03,566 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 2.3827e-04, 4.4130e-04,  ..., 2.1096e-05,
          9.7471e-04, 9.9005e-01],
         [2.3974e-05, 2.3827e-04, 4.4130e-04,  ..., 2.1096e-05,
          9.7471e-04, 1.8096e-03],
         [2.3974e-05, 2.3827e-04, 4.4130e-04,  ..., 9.9994e-01,
          9.9708e-01, 6.3352e-03],
         [2.3974e-05, 9.9929e-01, 9.9868e-01,  ..., 2.1096e-05,
          9.7471e-04, 1.8096e-03]],
        [[9.9975e-01, 1.5516e-03, 3.0757e-04,  ..., 2.7174e-05,
          4.0102e-03, 2.3246e-05],
         [8.0525e-05, 1.5516e-03, 3.0757e-04,  ..., 2.7174e-05,
          7.9319e-03, 2.3246e-05],
         [9.0868e-05, 1.5516e-03, 3.0757e-04,  ..., 9.9992e-01,
          4.0102e-03, 9.9993e-01],
         [8.0525e-05, 9.9535e-01, 9.9908e-01,  ..., 2.7174e-05,
          9.8405e-01, 2.3246e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.7819e-04, 8.8787e-04, 9.7001e-08,  ..., 1.6635e-03,
          9.6104e-05, 1.1464e-03],
         [4.7819e-04, 8.8787e-04, 9.7001e-08,  ..., 1.6635e-03,
          9.6104e-05, 1.1464e-03],
         [9.9857e-01, 8.8787e-04, 9.7001e-08,  ..., 9.9501e-01,
          9.6104e-05, 9.9656e-01],
         [4.7819e-04, 9.9734e-01, 1.0000e+00,  ..., 1.6635e-03,
          9.9971e-01, 1.1464e-03]],
        [[1.5246e-03, 9.2153e-06, 9.9979e-01,  ..., 3.9593e-04,
          9.9667e-01, 1.5305e-03],
         [1.5246e-03, 9.2153e-06, 7.1631e-05,  ..., 4.8761e-04,
          9.7023e-04, 1.5305e-03],
         [9.9543e-01, 9.2153e-06, 7.1631e-05,  ..., 3.9593e-04,
          1.3924e-03, 9.9541e-01],
         [1.5246e-03, 9.9997e-01, 7.1631e-05,  ..., 9.9872e-01,
          9.7023e-04, 1.5305e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 876:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9991e-01, 7.1324e-04, 7.0530e-04,  ..., 3.9014e-05,
          1.1862e-04, 9.9498e-01],
         [2.9650e-05, 7.1324e-04, 7.0530e-04,  ..., 3.9014e-05,
          1.1862e-04, 9.7385e-04],
         [2.9650e-05, 7.1324e-04, 7.0530e-04,  ..., 9.9988e-01,
          9.9964e-01, 3.0715e-03],
         [2.9650e-05, 9.9786e-01, 9.9788e-01,  ..., 3.9014e-05,
          1.1862e-04, 9.7385e-04]],
        [[9.9960e-01, 6.6347e-04, 1.0372e-03,  ..., 6.5416e-05,
          1.7773e-02, 3.7129e-05],
         [1.3258e-04, 6.6347e-04, 1.0372e-03,  ..., 6.5416e-05,
          1.7351e-02, 3.7129e-05],
         [1.3258e-04, 6.6347e-04, 1.0372e-03,  ..., 9.9980e-01,
          3.7408e-02, 9.9989e-01],
         [1.3258e-04, 9.9801e-01, 9.9689e-01,  ..., 6.5416e-05,
          9.2747e-01, 3.7129e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8714e-03, 3.9080e-04, 1.8563e-05,  ..., 1.1537e-03,
          5.8425e-04, 3.9769e-03],
         [1.8714e-03, 4.5689e-04, 1.8563e-05,  ..., 1.1537e-03,
          5.8425e-04, 3.9769e-03],
         [9.9439e-01, 3.9080e-04, 1.8563e-05,  ..., 9.9654e-01,
          5.8425e-04, 9.8651e-01],
         [1.8714e-03, 9.9876e-01, 9.9994e-01,  ..., 1.1537e-03,
          9.9825e-01, 5.5314e-03]],
        [[1.7504e-03, 1.3820e-04, 9.9953e-01,  ..., 2.3544e-05,
          9.8989e-01, 1.0041e-03],
         [1.7504e-03, 1.3820e-04, 1.2433e-04,  ..., 2.3544e-05,
          2.3775e-03, 1.0041e-03],
         [9.9460e-01, 1.3820e-04, 2.2223e-04,  ..., 2.3544e-05,
          4.3080e-03, 9.9699e-01],
         [1.8961e-03, 9.9959e-01, 1.2433e-04,  ..., 9.9993e-01,
          3.4262e-03, 1.0041e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 877:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:04,694 [Process: 0] Synchronize training processes
2024-08-18 15:29:04,695 [Process: 0] Evaluating...
2024-08-18 15:29:04,696 [Process: 0] EPOCH 877:
2024-08-18 15:29:04,698 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:05,827 [Process: 0] Synchronize training processes
2024-08-18 15:29:05,828 [Process: 0] Evaluating...
2024-08-18 15:29:05,830 [Process: 0] EPOCH 878:
2024-08-18 15:29:05,831 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9964e-01, 9.2080e-04, 1.1304e-03,  ..., 7.1533e-05,
          6.8115e-05, 9.9960e-01],
         [1.1137e-04, 8.2425e-04, 1.1304e-03,  ..., 7.1533e-05,
          6.8115e-05, 1.2924e-04],
         [1.3214e-04, 8.2425e-04, 1.1304e-03,  ..., 9.9979e-01,
          9.9980e-01, 1.3986e-04],
         [1.1137e-04, 9.9743e-01, 9.9661e-01,  ..., 7.1533e-05,
          6.8115e-05, 1.2924e-04]],
        [[9.9933e-01, 1.3618e-03, 3.5947e-03,  ..., 7.8809e-06,
          5.1102e-02, 2.4781e-05],
         [2.2368e-04, 1.2762e-03, 2.7825e-03,  ..., 7.8809e-06,
          5.7072e-02, 2.4781e-05],
         [2.2368e-04, 1.2762e-03, 2.7825e-03,  ..., 9.9998e-01,
          6.5792e-01, 9.9993e-01],
         [2.2368e-04, 9.9609e-01, 9.9084e-01,  ..., 7.8809e-06,
          2.3391e-01, 2.4781e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.4769e-04, 4.1712e-04, 1.2368e-06,  ..., 6.3289e-03,
          4.6665e-05, 7.3660e-04],
         [4.4769e-04, 4.1712e-04, 1.2368e-06,  ..., 6.3289e-03,
          4.6665e-05, 7.3660e-04],
         [9.9866e-01, 4.1712e-04, 1.2368e-06,  ..., 9.7564e-01,
          4.6665e-05, 9.9779e-01],
         [4.4769e-04, 9.9875e-01, 1.0000e+00,  ..., 1.1700e-02,
          9.9986e-01, 7.3660e-04]],
        [[7.1128e-02, 7.0143e-05, 9.9729e-01,  ..., 1.9011e-04,
          9.9599e-01, 4.6564e-03],
         [1.7037e-02, 7.0143e-05, 7.0826e-04,  ..., 1.9011e-04,
          1.2387e-03, 4.6564e-03],
         [8.8244e-01, 7.0143e-05, 1.0010e-03,  ..., 1.9011e-04,
          1.5304e-03, 9.8434e-01],
         [2.9399e-02, 9.9979e-01, 1.0048e-03,  ..., 9.9943e-01,
          1.2387e-03, 6.3452e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 878:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9938e-01, 1.3788e-03, 2.9035e-03,  ..., 1.0959e-04,
          9.5848e-05, 9.9987e-01],
         [2.0761e-04, 1.3572e-03, 1.9326e-03,  ..., 1.0959e-04,
          9.5848e-05, 4.4386e-05],
         [2.0761e-04, 1.3572e-03, 1.9326e-03,  ..., 9.9967e-01,
          9.9971e-01, 4.6191e-05],
         [2.0761e-04, 9.9591e-01, 9.9323e-01,  ..., 1.0959e-04,
          9.5848e-05, 4.4386e-05]],
        [[9.9995e-01, 1.2413e-03, 1.5149e-03,  ..., 3.7426e-04,
          4.5560e-02, 5.2368e-05],
         [1.8086e-05, 1.2413e-03, 1.5149e-03,  ..., 3.7426e-04,
          5.7242e-02, 5.2368e-05],
         [1.8319e-05, 1.2413e-03, 1.5149e-03,  ..., 9.9888e-01,
          7.3762e-01, 9.9984e-01],
         [1.8086e-05, 9.9628e-01, 9.9546e-01,  ..., 3.7426e-04,
          1.5958e-01, 5.2368e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:29:06,959 [Process: 0] Synchronize training processes
2024-08-18 15:29:06,959 [Process: 0] Evaluating...
2024-08-18 15:29:06,961 [Process: 0] EPOCH 879:
2024-08-18 15:29:06,963 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:08,094 [Process: 0] Synchronize training processes
2024-08-18 15:29:08,094 [Process: 0] Evaluating...
2024-08-18 15:29:08,096 [Process: 0] EPOCH 880:
2024-08-18 15:29:08,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4283e-03, 6.6615e-04, 3.8620e-08,  ..., 1.5743e-03,
          1.9999e-04, 3.9319e-03],
         [2.4283e-03, 6.6615e-04, 3.8620e-08,  ..., 1.5743e-03,
          1.9999e-04, 3.9319e-03],
         [9.9272e-01, 6.6615e-04, 3.8620e-08,  ..., 9.9528e-01,
          1.9999e-04, 9.8739e-01],
         [2.4283e-03, 9.9800e-01, 1.0000e+00,  ..., 1.5743e-03,
          9.9940e-01, 4.7507e-03]],
        [[1.1854e-03, 1.0427e-04, 9.9992e-01,  ..., 1.2890e-04,
          9.9642e-01, 2.5709e-03],
         [1.1854e-03, 1.0427e-04, 2.5774e-05,  ..., 1.3343e-04,
          1.2302e-03, 2.5709e-03],
         [9.9644e-01, 1.0427e-04, 2.5774e-05,  ..., 1.2890e-04,
          1.1711e-03, 9.9195e-01],
         [1.1854e-03, 9.9969e-01, 2.5774e-05,  ..., 9.9961e-01,
          1.1758e-03, 2.9093e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 879:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8766e-01, 1.3072e-03, 6.2775e-04,  ..., 3.0426e-04,
          1.5003e-04, 9.9881e-01],
         [1.6528e-03, 1.3072e-03, 6.2775e-04,  ..., 3.0426e-04,
          1.5003e-04, 3.4784e-04],
         [9.0392e-03, 1.3072e-03, 6.2775e-04,  ..., 9.9909e-01,
          9.9955e-01, 4.9925e-04],
         [1.6528e-03, 9.9608e-01, 9.9812e-01,  ..., 3.0426e-04,
          1.5003e-04, 3.4784e-04]],
        [[8.2673e-01, 8.6831e-04, 1.5503e-03,  ..., 2.4075e-05,
          4.0514e-02, 3.8243e-05],
         [1.6873e-02, 8.6831e-04, 1.4076e-03,  ..., 2.4075e-05,
          2.3662e-02, 3.8243e-05],
         [1.3593e-01, 8.6831e-04, 1.4076e-03,  ..., 9.9993e-01,
          8.7313e-01, 9.9989e-01],
         [2.0461e-02, 9.9740e-01, 9.9563e-01,  ..., 2.4075e-05,
          6.2692e-02, 3.8243e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.2607e-04, 2.3323e-04, 3.4207e-06,  ..., 1.3747e-03,
          1.4198e-05, 6.9547e-04],
         [7.2607e-04, 2.3323e-04, 3.4207e-06,  ..., 1.3747e-03,
          1.4198e-05, 6.9547e-04],
         [9.9782e-01, 2.3323e-04, 3.4207e-06,  ..., 9.9588e-01,
          1.4198e-05, 9.9791e-01],
         [7.2607e-04, 9.9930e-01, 9.9999e-01,  ..., 1.3747e-03,
          9.9996e-01, 6.9547e-04]],
        [[7.7832e-04, 3.4496e-04, 9.9908e-01,  ..., 8.2002e-05,
          9.9673e-01, 1.8060e-03],
         [7.7832e-04, 3.4496e-04, 2.9649e-04,  ..., 8.2002e-05,
          1.4877e-03, 1.7264e-03],
         [9.9767e-01, 3.4496e-04, 3.2226e-04,  ..., 8.2002e-05,
          8.9276e-04, 9.9474e-01],
         [7.7832e-04, 9.9897e-01, 2.9649e-04,  ..., 9.9975e-01,
          8.9276e-04, 1.7264e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 880:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9967e-01, 8.3715e-04, 3.6087e-03,  ..., 1.1752e-03,
          3.2446e-05, 9.9887e-01],
         [1.0950e-04, 8.3715e-04, 3.0229e-03,  ..., 1.1752e-03,
          3.2446e-05, 3.7801e-04],
         [1.0950e-04, 8.3715e-04, 3.0229e-03,  ..., 9.9647e-01,
          9.9990e-01, 3.7801e-04],
         [1.0950e-04, 9.9749e-01, 9.9035e-01,  ..., 1.1752e-03,
          3.2446e-05, 3.7801e-04]],
        [[9.9720e-01, 9.6873e-04, 1.6622e-03,  ..., 5.1413e-05,
          7.4512e-02, 9.5912e-06],
         [9.3172e-04, 9.3946e-04, 1.6622e-03,  ..., 5.1413e-05,
          8.4362e-02, 9.5912e-06],
         [9.3172e-04, 9.3946e-04, 1.6622e-03,  ..., 9.9985e-01,
          2.3844e-01, 9.9997e-01],
         [9.3172e-04, 9.9715e-01, 9.9501e-01,  ..., 5.1413e-05,
          6.0269e-01, 9.5912e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:09,230 [Process: 0] Synchronize training processes
2024-08-18 15:29:09,230 [Process: 0] Evaluating...
2024-08-18 15:29:09,232 [Process: 0] EPOCH 881:
2024-08-18 15:29:09,234 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.1134e-04, 5.2406e-05, 9.5823e-06,  ..., 2.5495e-03,
          2.1713e-04, 2.5160e-03],
         [7.1134e-04, 5.2406e-05, 9.5823e-06,  ..., 2.5495e-03,
          2.1713e-04, 2.5160e-03],
         [9.9787e-01, 5.2406e-05, 9.5823e-06,  ..., 9.9222e-01,
          2.1713e-04, 9.9230e-01],
         [7.1134e-04, 9.9984e-01, 9.9997e-01,  ..., 2.6789e-03,
          9.9935e-01, 2.6662e-03]],
        [[4.0079e-03, 5.9309e-04, 9.9965e-01,  ..., 1.6602e-04,
          9.9952e-01, 4.5508e-04],
         [4.0079e-03, 5.9309e-04, 9.7899e-05,  ..., 1.6602e-04,
          1.5969e-04, 4.5508e-04],
         [9.8683e-01, 5.9309e-04, 9.7899e-05,  ..., 1.6602e-04,
          1.5969e-04, 9.9863e-01],
         [5.1560e-03, 9.9822e-01, 1.5632e-04,  ..., 9.9950e-01,
          1.5969e-04, 4.5508e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 881:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9781e-01, 1.0832e-03, 4.5619e-04,  ..., 5.7868e-03,
          1.2788e-04, 9.9983e-01],
         [7.3092e-04, 1.0832e-03, 4.5337e-04,  ..., 5.7868e-03,
          1.2788e-04, 3.1896e-05],
         [7.3092e-04, 1.0832e-03, 4.5337e-04,  ..., 9.5911e-01,
          9.9962e-01, 1.0857e-04],
         [7.3092e-04, 9.9675e-01, 9.9864e-01,  ..., 2.9316e-02,
          1.2788e-04, 3.1896e-05]],
        [[9.9978e-01, 1.9022e-03, 1.1423e-03,  ..., 2.4370e-05,
          3.5752e-01, 1.0482e-04],
         [5.0618e-05, 1.9022e-03, 1.0404e-03,  ..., 2.4370e-05,
          1.1376e-01, 1.0482e-04],
         [1.2121e-04, 1.9022e-03, 1.0404e-03,  ..., 9.9993e-01,
          3.3167e-01, 9.9969e-01],
         [5.0618e-05, 9.9429e-01, 9.9678e-01,  ..., 2.4370e-05,
          1.9706e-01, 1.0482e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0593e-03, 4.7238e-04, 4.2512e-05,  ..., 1.7270e-03,
          1.2870e-04, 4.2850e-03],
         [1.0593e-03, 4.7238e-04, 4.2512e-05,  ..., 1.7270e-03,
          1.2870e-04, 4.2850e-03],
         [9.9682e-01, 4.7238e-04, 4.2512e-05,  ..., 9.9482e-01,
          1.2870e-04, 9.8595e-01],
         [1.0593e-03, 9.9858e-01, 9.9987e-01,  ..., 1.7270e-03,
          9.9961e-01, 5.4792e-03]],
        [[1.3146e-03, 2.1014e-03, 9.9995e-01,  ..., 2.2551e-04,
          9.9858e-01, 3.0369e-03],
         [1.3146e-03, 2.1014e-03, 1.6968e-05,  ..., 2.2551e-04,
          4.5736e-04, 3.0163e-03],
         [9.9606e-01, 2.1014e-03, 1.6968e-05,  ..., 2.2551e-04,
          4.5736e-04, 9.9070e-01],
         [1.3146e-03, 9.9370e-01, 1.6968e-05,  ..., 9.9932e-01,
          5.0878e-04, 3.2507e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 882:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8937e-01, 7.9755e-04, 5.1494e-04,  ..., 2.8948e-03,
          3.1229e-04, 9.9969e-01],
         [2.9891e-03, 7.9755e-04, 5.1494e-04,  ..., 2.8948e-03,
          3.1229e-04, 1.0392e-04],
         [3.1258e-03, 7.9755e-04, 5.1494e-04,  ..., 9.9112e-01,
          9.9906e-01, 1.0392e-04],
         [4.5196e-03, 9.9761e-01, 9.9846e-01,  ..., 3.0879e-03,
          3.1229e-04, 1.0392e-04]],
        [[9.8950e-01, 6.6256e-04, 4.8968e-04,  ..., 2.2564e-04,
          1.6557e-01, 1.8834e-05],
         [2.2067e-03, 6.6256e-04, 4.8968e-04,  ..., 2.2564e-04,
          6.7208e-01, 1.8834e-05],
         [6.0848e-03, 6.6256e-04, 4.8968e-04,  ..., 9.9932e-01,
          6.4553e-02, 9.9994e-01],
         [2.2067e-03, 9.9801e-01, 9.9853e-01,  ..., 2.2564e-04,
          9.7794e-02, 1.8834e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:10,365 [Process: 0] Synchronize training processes
2024-08-18 15:29:10,365 [Process: 0] Evaluating...
2024-08-18 15:29:10,369 [Process: 0] EPOCH 882:
2024-08-18 15:29:10,371 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:11,502 [Process: 0] Synchronize training processes
2024-08-18 15:29:11,502 [Process: 0] Evaluating...
2024-08-18 15:29:11,504 [Process: 0] EPOCH 883:
2024-08-18 15:29:11,506 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.1222e-03, 5.1818e-04, 2.8998e-06,  ..., 6.1598e-04,
          1.8810e-04, 1.8144e-03],
         [2.1222e-03, 5.1818e-04, 2.8998e-06,  ..., 6.1598e-04,
          1.8810e-04, 1.8144e-03],
         [9.9344e-01, 5.1818e-04, 2.8998e-06,  ..., 9.9815e-01,
          1.8810e-04, 9.9456e-01],
         [2.3205e-03, 9.9845e-01, 9.9999e-01,  ..., 6.1598e-04,
          9.9944e-01, 1.8144e-03]],
        [[6.6792e-04, 3.3609e-04, 9.9979e-01,  ..., 2.9420e-05,
          9.9859e-01, 7.3060e-04],
         [6.6792e-04, 3.3609e-04, 6.9951e-05,  ..., 2.9420e-05,
          4.5818e-04, 7.3060e-04],
         [9.9800e-01, 3.3609e-04, 6.9951e-05,  ..., 2.9420e-05,
          4.9088e-04, 9.9781e-01],
         [6.6792e-04, 9.9899e-01, 6.9951e-05,  ..., 9.9991e-01,
          4.5818e-04, 7.3060e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 883:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 1.0390e-04, 4.7312e-04,  ..., 1.8645e-03,
          1.8748e-04, 9.9972e-01],
         [5.9460e-05, 1.0390e-04, 4.7312e-04,  ..., 1.8645e-03,
          1.8748e-04, 7.9246e-05],
         [5.9460e-05, 1.0390e-04, 4.7312e-04,  ..., 9.9376e-01,
          9.9944e-01, 1.1837e-04],
         [5.9460e-05, 9.9969e-01, 9.9858e-01,  ..., 2.5060e-03,
          1.8748e-04, 7.9246e-05]],
        [[9.9670e-01, 5.2622e-04, 3.1741e-04,  ..., 1.5803e-05,
          3.7521e-01, 6.6582e-05],
         [1.1016e-03, 5.2622e-04, 3.1741e-04,  ..., 1.5803e-05,
          3.3805e-01, 6.6582e-05],
         [1.1016e-03, 5.2622e-04, 3.1741e-04,  ..., 9.9995e-01,
          2.0544e-01, 9.9980e-01],
         [1.1016e-03, 9.9842e-01, 9.9905e-01,  ..., 1.5803e-05,
          8.1297e-02, 6.6582e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.5364e-04, 7.6397e-04, 2.5412e-09,  ..., 4.7215e-04,
          9.6670e-05, 1.2851e-03],
         [8.5364e-04, 7.6397e-04, 2.5412e-09,  ..., 4.7215e-04,
          9.6670e-05, 1.2851e-03],
         [9.9744e-01, 7.6397e-04, 2.5412e-09,  ..., 9.9858e-01,
          9.6670e-05, 9.9614e-01],
         [8.5364e-04, 9.9771e-01, 1.0000e+00,  ..., 4.7215e-04,
          9.9971e-01, 1.2851e-03]],
        [[1.5671e-03, 2.0360e-04, 9.9892e-01,  ..., 8.0960e-05,
          9.9135e-01, 7.8564e-04],
         [1.5671e-03, 2.0360e-04, 3.0673e-04,  ..., 8.0960e-05,
          2.2694e-03, 7.8564e-04],
         [9.9530e-01, 2.0360e-04, 3.0673e-04,  ..., 8.0960e-05,
          2.3027e-03, 9.9764e-01],
         [1.5671e-03, 9.9939e-01, 4.6188e-04,  ..., 9.9976e-01,
          4.0809e-03, 7.8564e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 884:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:12,627 [Process: 0] Synchronize training processes
2024-08-18 15:29:12,627 [Process: 0] Evaluating...
2024-08-18 15:29:12,629 [Process: 0] EPOCH 884:
2024-08-18 15:29:12,631 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:13,749 [Process: 0] Synchronize training processes
2024-08-18 15:29:13,750 [Process: 0] Evaluating...
2024-08-18 15:29:13,751 [Process: 0] EPOCH 885:
2024-08-18 15:29:13,753 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9707e-01, 9.0126e-04, 7.6032e-04,  ..., 5.9104e-04,
          1.1926e-04, 9.9940e-01],
         [6.7893e-04, 9.0126e-04, 7.6032e-04,  ..., 5.9104e-04,
          1.1926e-04, 1.9206e-04],
         [1.5711e-03, 9.0126e-04, 7.6032e-04,  ..., 9.9823e-01,
          9.9964e-01, 2.1620e-04],
         [6.7893e-04, 9.9730e-01, 9.9772e-01,  ..., 5.9104e-04,
          1.1926e-04, 1.9206e-04]],
        [[9.9754e-01, 7.5327e-04, 1.7141e-03,  ..., 3.9190e-06,
          1.0531e-01, 6.0456e-05],
         [9.2911e-04, 7.5327e-04, 1.7141e-03,  ..., 3.9190e-06,
          7.4144e-01, 6.0456e-05],
         [7.6413e-04, 7.5327e-04, 1.7141e-03,  ..., 9.9999e-01,
          4.0629e-02, 9.9982e-01],
         [7.6413e-04, 9.9774e-01, 9.9486e-01,  ..., 3.9190e-06,
          1.1262e-01, 6.0456e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.5973e-03, 1.3472e-03, 2.5505e-09,  ..., 8.1050e-04,
          1.4694e-04, 1.3622e-03],
         [1.5973e-03, 1.3472e-03, 2.5505e-09,  ..., 8.1050e-04,
          1.4694e-04, 1.3622e-03],
         [9.9521e-01, 1.3472e-03, 2.5505e-09,  ..., 9.9757e-01,
          1.4694e-04, 9.9591e-01],
         [1.5973e-03, 9.9596e-01, 1.0000e+00,  ..., 8.1050e-04,
          9.9956e-01, 1.3622e-03]],
        [[5.6968e-04, 1.8287e-03, 9.9962e-01,  ..., 5.4106e-06,
          9.9778e-01, 8.0628e-04],
         [5.6968e-04, 1.8287e-03, 1.2668e-04,  ..., 5.4106e-06,
          7.4102e-04, 8.0628e-04],
         [9.9829e-01, 1.8287e-03, 1.2668e-04,  ..., 5.4106e-06,
          7.4102e-04, 9.9758e-01],
         [5.6968e-04, 9.9451e-01, 1.2668e-04,  ..., 9.9998e-01,
          7.4102e-04, 8.0628e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 885:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9332e-01, 3.7187e-03, 1.6892e-03,  ..., 9.5873e-04,
          1.3756e-03, 9.9919e-01],
         [1.7264e-03, 3.7187e-03, 1.6892e-03,  ..., 9.5873e-04,
          1.3756e-03, 2.7059e-04],
         [1.7264e-03, 4.4014e-03, 1.6892e-03,  ..., 9.9687e-01,
          9.9587e-01, 2.7059e-04],
         [3.2321e-03, 9.8816e-01, 9.9493e-01,  ..., 1.2094e-03,
          1.3756e-03, 2.7059e-04]],
        [[9.9982e-01, 1.3406e-03, 1.3741e-03,  ..., 1.4143e-04,
          2.0252e-02, 2.6518e-05],
         [6.0043e-05, 1.3204e-03, 1.3741e-03,  ..., 1.4143e-04,
          9.4151e-01, 2.6518e-05],
         [6.0043e-05, 1.3204e-03, 1.3741e-03,  ..., 9.9958e-01,
          9.9891e-03, 9.9992e-01],
         [6.0043e-05, 9.9602e-01, 9.9588e-01,  ..., 1.4143e-04,
          2.8246e-02, 2.6518e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.0518e-04, 1.1965e-04, 2.7816e-08,  ..., 1.5065e-03,
          1.0634e-04, 2.0232e-03],
         [4.0518e-04, 1.1965e-04, 2.7816e-08,  ..., 1.5065e-03,
          1.0634e-04, 2.0232e-03],
         [9.9878e-01, 1.1965e-04, 2.7816e-08,  ..., 9.9548e-01,
          1.0634e-04, 9.9393e-01],
         [4.0518e-04, 9.9964e-01, 1.0000e+00,  ..., 1.5065e-03,
          9.9968e-01, 2.0232e-03]],
        [[8.3408e-04, 8.6891e-04, 9.9924e-01,  ..., 2.8368e-05,
          9.0689e-01, 6.3248e-04],
         [8.3408e-04, 8.6891e-04, 2.2748e-04,  ..., 2.8368e-05,
          1.3154e-02, 6.3248e-04],
         [9.9750e-01, 8.6891e-04, 2.2748e-04,  ..., 2.8368e-05,
          5.4069e-02, 9.9810e-01],
         [8.3408e-04, 9.9739e-01, 3.0889e-04,  ..., 9.9991e-01,
          2.5891e-02, 6.3248e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:14,882 [Process: 0] Synchronize training processes
2024-08-18 15:29:14,883 [Process: 0] Evaluating...
2024-08-18 15:29:14,884 [Process: 0] EPOCH 886:
2024-08-18 15:29:14,886 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:16,005 [Process: 0] Synchronize training processes
2024-08-18 15:29:16,006 [Process: 0] Evaluating...
2024-08-18 15:29:16,007 [Process: 0] EPOCH 887:
2024-08-18 15:29:16,009 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 886:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9904e-01, 1.3302e-03, 4.5321e-03,  ..., 2.3738e-03,
          2.0592e-04, 9.9926e-01],
         [3.0893e-04, 1.3302e-03, 5.2126e-03,  ..., 2.3738e-03,
          2.0592e-04, 2.4634e-04],
         [3.3965e-04, 1.3302e-03, 5.9596e-03,  ..., 9.9154e-01,
          9.9938e-01, 2.4634e-04],
         [3.0893e-04, 9.9601e-01, 9.8430e-01,  ..., 3.7148e-03,
          2.0592e-04, 2.4634e-04]],
        [[9.9971e-01, 9.9568e-04, 8.0574e-04,  ..., 4.4934e-04,
          1.3671e-02, 1.4174e-05],
         [9.6141e-05, 9.9568e-04, 8.0574e-04,  ..., 4.4934e-04,
          9.7598e-01, 1.4174e-05],
         [9.6141e-05, 9.9568e-04, 8.0574e-04,  ..., 9.9865e-01,
          5.1765e-03, 9.9996e-01],
         [9.6141e-05, 9.9701e-01, 9.9758e-01,  ..., 4.4934e-04,
          5.1765e-03, 1.4174e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.0314e-04, 1.5075e-04, 2.3756e-08,  ..., 2.5024e-03,
          5.9394e-05, 1.1886e-03],
         [7.0314e-04, 1.5075e-04, 2.3756e-08,  ..., 2.5024e-03,
          5.9394e-05, 1.1886e-03],
         [9.9789e-01, 1.5075e-04, 2.3756e-08,  ..., 9.9217e-01,
          5.9394e-05, 9.9643e-01],
         [7.0314e-04, 9.9955e-01, 1.0000e+00,  ..., 2.8243e-03,
          9.9982e-01, 1.1886e-03]],
        [[1.2524e-02, 7.9984e-04, 9.9992e-01,  ..., 3.0596e-04,
          9.9144e-01, 2.0744e-04],
         [8.4843e-03, 7.9984e-04, 2.6636e-05,  ..., 3.0596e-04,
          2.5249e-03, 2.0744e-04],
         [9.6394e-01, 7.9984e-04, 2.6636e-05,  ..., 3.0596e-04,
          2.5745e-03, 9.9938e-01],
         [1.5055e-02, 9.9760e-01, 2.6636e-05,  ..., 9.9908e-01,
          3.4631e-03, 2.0744e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 887:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.7519e-01, 8.4924e-04, 6.3651e-04,  ..., 2.9451e-04,
          7.4287e-05, 9.9609e-01],
         [6.4961e-03, 8.4924e-04, 6.3651e-04,  ..., 2.9451e-04,
          7.4287e-05, 7.5123e-04],
         [6.4961e-03, 8.4924e-04, 6.3651e-04,  ..., 9.9912e-01,
          9.9978e-01, 2.4027e-03],
         [1.1814e-02, 9.9745e-01, 9.9809e-01,  ..., 2.9451e-04,
          7.4287e-05, 7.5123e-04]],
        [[9.9992e-01, 5.9832e-04, 5.3123e-03,  ..., 1.1878e-04,
          5.9624e-03, 3.2132e-05],
         [2.7931e-05, 5.9832e-04, 3.7351e-03,  ..., 1.1878e-04,
          9.8608e-01, 3.2132e-05],
         [2.7931e-05, 5.9832e-04, 4.1161e-03,  ..., 9.9964e-01,
          4.0224e-03, 9.9990e-01],
         [2.7931e-05, 9.9821e-01, 9.8684e-01,  ..., 1.1878e-04,
          3.9320e-03, 3.2132e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:17,129 [Process: 0] Synchronize training processes
2024-08-18 15:29:17,129 [Process: 0] Evaluating...
2024-08-18 15:29:17,131 [Process: 0] EPOCH 888:
2024-08-18 15:29:17,133 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8668e-03, 4.5998e-05, 9.2304e-06,  ..., 4.0545e-03,
          5.7618e-04, 1.0155e-03],
         [1.8668e-03, 4.5998e-05, 9.2304e-06,  ..., 3.3005e-03,
          5.7618e-04, 1.0155e-03],
         [9.9440e-01, 4.5998e-05, 9.2304e-06,  ..., 9.8929e-01,
          5.7618e-04, 9.9695e-01],
         [1.8668e-03, 9.9986e-01, 9.9997e-01,  ..., 3.3506e-03,
          9.9827e-01, 1.0155e-03]],
        [[1.3930e-02, 1.3783e-04, 9.9933e-01,  ..., 4.4328e-05,
          9.9925e-01, 1.4102e-03],
         [6.1165e-03, 1.3783e-04, 2.2225e-04,  ..., 4.4328e-05,
          2.4910e-04, 1.4102e-03],
         [9.7336e-01, 1.3783e-04, 2.2225e-04,  ..., 4.4328e-05,
          2.4910e-04, 9.9577e-01],
         [6.5883e-03, 9.9959e-01, 2.2225e-04,  ..., 9.9987e-01,
          2.4910e-04, 1.4102e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 888:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6368e-03, 1.1545e-03, 1.7590e-03,  ..., 1.8731e-03,
          1.2742e-04, 9.9994e-01],
         [1.6861e-02, 1.1545e-03, 1.7590e-03,  ..., 1.8731e-03,
          1.2742e-04, 2.0785e-05],
         [2.6368e-03, 1.1545e-03, 1.7590e-03,  ..., 9.9438e-01,
          9.9962e-01, 2.0785e-05],
         [9.7787e-01, 9.9654e-01, 9.9472e-01,  ..., 1.8731e-03,
          1.2742e-04, 2.0785e-05]],
        [[9.9942e-01, 1.2523e-03, 9.8096e-04,  ..., 1.6323e-04,
          1.8441e-01, 1.3696e-04],
         [2.8447e-04, 1.2523e-03, 9.8096e-04,  ..., 1.6323e-04,
          2.3094e-01, 1.3696e-04],
         [1.4996e-04, 1.2523e-03, 9.8096e-04,  ..., 9.9951e-01,
          4.7282e-01, 9.9959e-01],
         [1.4996e-04, 9.9624e-01, 9.9706e-01,  ..., 1.6323e-04,
          1.1182e-01, 1.3696e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0089e-03, 2.5797e-04, 2.9851e-07,  ..., 1.8725e-03,
          7.7689e-05, 1.0032e-03],
         [1.0089e-03, 2.5797e-04, 2.9851e-07,  ..., 1.8725e-03,
          7.7689e-05, 1.0032e-03],
         [9.9697e-01, 2.5797e-04, 2.9851e-07,  ..., 9.9438e-01,
          7.7689e-05, 9.9699e-01],
         [1.0089e-03, 9.9923e-01, 1.0000e+00,  ..., 1.8725e-03,
          9.9977e-01, 1.0032e-03]],
        [[1.4954e-03, 1.4236e-03, 9.9952e-01,  ..., 5.3661e-04,
          9.9989e-01, 5.3268e-04],
         [1.4954e-03, 1.2499e-03, 1.3473e-04,  ..., 5.3661e-04,
          3.5997e-05, 5.3268e-04],
         [9.9551e-01, 1.2499e-03, 1.3473e-04,  ..., 5.3661e-04,
          3.5997e-05, 9.9840e-01],
         [1.4954e-03, 9.9608e-01, 2.0780e-04,  ..., 9.9839e-01,
          3.5997e-05, 5.3268e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 889:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0399e-03, 3.7526e-03, 4.9583e-04,  ..., 5.1483e-04,
          1.7817e-04, 9.9793e-01],
         [1.9709e-03, 3.4193e-03, 4.9583e-04,  ..., 5.1483e-04,
          1.7817e-04, 6.2235e-04],
         [1.0399e-03, 3.7473e-03, 4.9583e-04,  ..., 9.9846e-01,
          9.9947e-01, 8.2918e-04],
         [9.9595e-01, 9.8908e-01, 9.9851e-01,  ..., 5.1483e-04,
          1.7817e-04, 6.2235e-04]],
        [[9.9751e-01, 4.2776e-03, 6.7646e-03,  ..., 5.0402e-04,
          1.7446e-01, 1.5097e-04],
         [6.2565e-04, 4.2776e-03, 5.8781e-03,  ..., 5.0402e-04,
          5.7665e-01, 1.5097e-04],
         [1.2416e-03, 7.8495e-03, 1.1302e-02,  ..., 9.9849e-01,
          1.3476e-01, 9.9955e-01],
         [6.2565e-04, 9.8360e-01, 9.7606e-01,  ..., 5.0402e-04,
          1.1413e-01, 1.5097e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:18,263 [Process: 0] Synchronize training processes
2024-08-18 15:29:18,263 [Process: 0] Evaluating...
2024-08-18 15:29:18,265 [Process: 0] EPOCH 889:
2024-08-18 15:29:18,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:19,386 [Process: 0] Synchronize training processes
2024-08-18 15:29:19,386 [Process: 0] Evaluating...
2024-08-18 15:29:19,388 [Process: 0] EPOCH 890:
2024-08-18 15:29:19,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4145e-03, 2.0083e-05, 6.0069e-08,  ..., 9.1739e-03,
          6.4243e-05, 1.2200e-03],
         [2.4145e-03, 2.0083e-05, 6.0069e-08,  ..., 5.6401e-03,
          6.4243e-05, 1.2200e-03],
         [9.9214e-01, 2.0083e-05, 6.0069e-08,  ..., 9.7691e-01,
          6.4243e-05, 9.9634e-01],
         [3.0340e-03, 9.9994e-01, 1.0000e+00,  ..., 8.2791e-03,
          9.9981e-01, 1.2200e-03]],
        [[2.0964e-02, 3.8809e-04, 9.9454e-01,  ..., 3.4161e-04,
          9.9783e-01, 1.4671e-03],
         [9.0058e-03, 3.8809e-04, 1.2896e-03,  ..., 3.4161e-04,
          5.6280e-04, 1.4671e-03],
         [9.5689e-01, 3.8809e-04, 1.2896e-03,  ..., 3.4161e-04,
          5.6280e-04, 9.9560e-01],
         [1.3141e-02, 9.9884e-01, 2.8786e-03,  ..., 9.9898e-01,
          1.0446e-03, 1.4671e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 890:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.7989e-01, 5.8398e-03, 4.0704e-04,  ..., 1.1616e-04,
          3.8327e-04, 9.9842e-01],
         [1.9510e-01, 4.8013e-03, 4.0704e-04,  ..., 1.1616e-04,
          3.8327e-04, 3.8280e-04],
         [4.0028e-02, 7.0486e-03, 4.0704e-04,  ..., 9.9965e-01,
          9.9885e-01, 8.1863e-04],
         [2.8498e-01, 9.8231e-01, 9.9878e-01,  ..., 1.1616e-04,
          3.8327e-04, 3.8280e-04]],
        [[9.9975e-01, 4.0596e-04, 1.2024e-02,  ..., 9.0788e-04,
          3.4087e-03, 4.6169e-05],
         [7.3815e-05, 4.0596e-04, 4.8992e-03,  ..., 9.0788e-04,
          9.9317e-01, 4.6169e-05],
         [1.0702e-04, 4.0596e-04, 5.2945e-03,  ..., 9.9728e-01,
          1.7087e-03, 9.9986e-01],
         [7.3815e-05, 9.9878e-01, 9.7778e-01,  ..., 9.0788e-04,
          1.7087e-03, 4.6169e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4709e-03, 2.7077e-04, 1.8706e-04,  ..., 1.4307e-03,
          5.6219e-05, 9.7870e-04],
         [2.3693e-03, 2.7077e-04, 1.8706e-04,  ..., 1.4307e-03,
          5.6219e-05, 9.7870e-04],
         [9.9279e-01, 2.7077e-04, 1.8706e-04,  ..., 9.9571e-01,
          5.6219e-05, 9.9706e-01],
         [2.3693e-03, 9.9919e-01, 9.9944e-01,  ..., 1.4307e-03,
          9.9983e-01, 9.7870e-04]],
        [[1.1811e-02, 2.6114e-04, 9.9951e-01,  ..., 7.5855e-05,
          9.8066e-01, 5.0465e-03],
         [7.0437e-03, 2.6114e-04, 1.6419e-04,  ..., 7.5855e-05,
          4.7424e-03, 5.0465e-03],
         [9.7072e-01, 2.6114e-04, 1.6419e-04,  ..., 7.5855e-05,
          9.8551e-03, 9.8328e-01],
         [1.0424e-02, 9.9922e-01, 1.6419e-04,  ..., 9.9977e-01,
          4.7424e-03, 6.6263e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 891:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:29:20,504 [Process: 0] Synchronize training processes
2024-08-18 15:29:20,505 [Process: 0] Evaluating...
2024-08-18 15:29:20,507 [Process: 0] EPOCH 891:
2024-08-18 15:29:20,508 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:21,637 [Process: 0] Synchronize training processes
2024-08-18 15:29:21,637 [Process: 0] Evaluating...
2024-08-18 15:29:21,641 [Process: 0] EPOCH 892:
2024-08-18 15:29:21,643 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.0411e-01, 1.1865e-03, 1.7028e-03,  ..., 2.7347e-03,
          2.2208e-04, 9.9988e-01],
         [4.2957e-02, 1.1865e-03, 1.3251e-03,  ..., 2.7347e-03,
          2.2208e-04, 3.8969e-05],
         [1.9282e-02, 1.1865e-03, 1.3251e-03,  ..., 9.8831e-01,
          9.9933e-01, 3.8969e-05],
         [3.3654e-02, 9.9644e-01, 9.9565e-01,  ..., 6.2185e-03,
          2.2208e-04, 3.8969e-05]],
        [[9.9966e-01, 1.1466e-04, 9.9308e-04,  ..., 2.5022e-04,
          6.2444e-03, 9.1003e-05],
         [1.1311e-04, 1.1466e-04, 9.9308e-04,  ..., 2.5022e-04,
          9.7490e-01, 9.1003e-05],
         [1.1311e-04, 1.1466e-04, 9.9308e-04,  ..., 9.9925e-01,
          6.2444e-03, 9.9973e-01],
         [1.1311e-04, 9.9966e-01, 9.9702e-01,  ..., 2.5022e-04,
          1.2613e-02, 9.1003e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6621e-03, 3.2025e-05, 4.6113e-07,  ..., 1.3179e-02,
          1.8242e-05, 9.6492e-04],
         [1.6621e-03, 3.2025e-05, 4.6113e-07,  ..., 5.8787e-03,
          1.8242e-05, 9.6492e-04],
         [9.9501e-01, 3.2025e-05, 4.6113e-07,  ..., 9.7465e-01,
          1.8242e-05, 9.9711e-01],
         [1.6621e-03, 9.9990e-01, 1.0000e+00,  ..., 6.2951e-03,
          9.9995e-01, 9.6492e-04]],
        [[3.5020e-03, 4.1491e-04, 9.9973e-01,  ..., 3.6311e-04,
          9.5804e-01, 7.3525e-04],
         [3.3175e-03, 4.1491e-04, 9.1357e-05,  ..., 3.6311e-04,
          7.8507e-03, 7.3525e-04],
         [9.8925e-01, 4.1491e-04, 9.1357e-05,  ..., 3.6311e-04,
          2.2051e-02, 9.9779e-01],
         [3.9265e-03, 9.9876e-01, 9.1357e-05,  ..., 9.9891e-01,
          1.2062e-02, 7.3525e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 892:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4362e-01, 1.5349e-03, 7.7553e-04,  ..., 1.5020e-02,
          4.5492e-05, 9.9636e-01],
         [7.0493e-01, 1.4315e-03, 7.7553e-04,  ..., 1.5020e-02,
          4.5492e-05, 1.0968e-03],
         [2.6804e-02, 1.4315e-03, 7.7553e-04,  ..., 5.0264e-01,
          9.9986e-01, 1.4461e-03],
         [2.4652e-02, 9.9560e-01, 9.9767e-01,  ..., 4.6732e-01,
          4.5492e-05, 1.0968e-03]],
        [[9.9983e-01, 2.7444e-03, 8.8920e-04,  ..., 3.8251e-05,
          4.0056e-02, 3.0518e-05],
         [5.7727e-05, 2.7444e-03, 8.8920e-04,  ..., 3.8251e-05,
          8.2154e-01, 3.0518e-05],
         [5.7727e-05, 3.9880e-03, 9.6613e-04,  ..., 9.9989e-01,
          1.0358e-01, 9.9991e-01],
         [5.7727e-05, 9.9052e-01, 9.9726e-01,  ..., 3.8251e-05,
          3.4827e-02, 3.0518e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.5247e-04, 8.5739e-05, 7.5657e-10,  ..., 3.1886e-03,
          4.9469e-05, 2.2082e-03],
         [4.5247e-04, 8.5739e-05, 7.5657e-10,  ..., 3.1886e-03,
          4.9469e-05, 2.2082e-03],
         [9.9864e-01, 8.5739e-05, 7.5657e-10,  ..., 9.9043e-01,
          4.9469e-05, 9.9338e-01],
         [4.5247e-04, 9.9974e-01, 1.0000e+00,  ..., 3.1886e-03,
          9.9985e-01, 2.2082e-03]],
        [[7.0138e-04, 2.9004e-03, 9.9938e-01,  ..., 9.1592e-05,
          6.8332e-01, 2.3343e-03],
         [7.0138e-04, 2.9004e-03, 1.7894e-04,  ..., 9.1592e-05,
          3.2853e-02, 2.3343e-03],
         [9.9790e-01, 2.9004e-03, 1.7894e-04,  ..., 9.1592e-05,
          1.9620e-01, 9.9300e-01],
         [7.0138e-04, 9.9130e-01, 2.6714e-04,  ..., 9.9973e-01,
          8.7627e-02, 2.3343e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 893:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:22,771 [Process: 0] Synchronize training processes
2024-08-18 15:29:22,771 [Process: 0] Evaluating...
2024-08-18 15:29:22,773 [Process: 0] EPOCH 893:
2024-08-18 15:29:22,774 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:23,898 [Process: 0] Synchronize training processes
2024-08-18 15:29:23,899 [Process: 0] Evaluating...
2024-08-18 15:29:23,900 [Process: 0] EPOCH 894:
2024-08-18 15:29:23,902 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9958e-01, 5.6567e-04, 3.4570e-03,  ..., 1.8885e-03,
          2.4645e-05, 9.9927e-01],
         [1.3986e-04, 5.6567e-04, 3.4570e-03,  ..., 1.8885e-03,
          2.4645e-05, 2.4432e-04],
         [1.3986e-04, 5.6567e-04, 7.1442e-03,  ..., 9.8930e-01,
          9.9993e-01, 2.4432e-04],
         [1.3986e-04, 9.9830e-01, 9.8594e-01,  ..., 6.9241e-03,
          2.4645e-05, 2.4432e-04]],
        [[9.9855e-01, 1.4422e-03, 3.7893e-03,  ..., 1.6461e-05,
          1.7606e-01, 1.2389e-05],
         [4.2361e-04, 1.4422e-03, 3.4581e-03,  ..., 1.6461e-05,
          3.4695e-01, 1.2389e-05],
         [6.0488e-04, 2.5063e-03, 5.7804e-03,  ..., 9.9995e-01,
          3.8022e-01, 9.9996e-01],
         [4.2361e-04, 9.9461e-01, 9.8697e-01,  ..., 1.6461e-05,
          9.6767e-02, 1.2389e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6505e-03, 4.9632e-05, 1.4010e-06,  ..., 3.0214e-03,
          2.3690e-06, 5.8143e-04],
         [2.6505e-03, 4.9632e-05, 1.4010e-06,  ..., 2.2425e-03,
          2.3690e-06, 5.8143e-04],
         [9.9205e-01, 4.9632e-05, 1.4010e-06,  ..., 9.9249e-01,
          2.3690e-06, 9.9826e-01],
         [2.6505e-03, 9.9985e-01, 1.0000e+00,  ..., 2.2425e-03,
          9.9999e-01, 5.8143e-04]],
        [[2.2723e-03, 3.8090e-04, 9.9876e-01,  ..., 2.1068e-05,
          9.5164e-01, 1.7409e-03],
         [2.2723e-03, 3.8090e-04, 4.1245e-04,  ..., 2.1068e-05,
          1.2077e-02, 1.7409e-03],
         [9.9318e-01, 3.8090e-04, 4.1245e-04,  ..., 2.1068e-05,
          1.7065e-02, 9.9478e-01],
         [2.2723e-03, 9.9886e-01, 4.1245e-04,  ..., 9.9994e-01,
          1.9219e-02, 1.7409e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 894:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 5.7338e-04, 9.5889e-03,  ..., 3.2259e-04,
          8.8076e-05, 9.9590e-01],
         [3.9449e-06, 5.7338e-04, 6.3645e-03,  ..., 3.2259e-04,
          8.8076e-05, 1.3030e-03],
         [3.9449e-06, 5.7338e-04, 1.3788e-02,  ..., 9.9903e-01,
          9.9974e-01, 1.4915e-03],
         [3.9449e-06, 9.9828e-01, 9.7026e-01,  ..., 3.2259e-04,
          8.8076e-05, 1.3030e-03]],
        [[9.9997e-01, 2.3392e-02, 1.3484e-03,  ..., 3.0644e-04,
          4.0885e-02, 5.5471e-06],
         [9.3588e-06, 7.5130e-03, 1.3484e-03,  ..., 3.0644e-04,
          6.9292e-01, 5.5471e-06],
         [9.3588e-06, 1.5247e-02, 1.6862e-03,  ..., 9.9908e-01,
          2.3436e-01, 9.9998e-01],
         [9.3588e-06, 9.5385e-01, 9.9562e-01,  ..., 3.0644e-04,
          3.1842e-02, 5.5471e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3222e-03, 1.4256e-05, 1.3473e-06,  ..., 7.8912e-04,
          7.5560e-05, 2.0079e-03],
         [1.3222e-03, 1.4256e-05, 1.3473e-06,  ..., 7.8912e-04,
          7.5560e-05, 2.0079e-03],
         [9.9603e-01, 1.4256e-05, 1.3473e-06,  ..., 9.9763e-01,
          7.5560e-05, 9.9398e-01],
         [1.3222e-03, 9.9996e-01, 1.0000e+00,  ..., 7.8912e-04,
          9.9977e-01, 2.0079e-03]],
        [[4.4572e-03, 1.0877e-04, 9.9985e-01,  ..., 9.4460e-05,
          9.7205e-01, 3.9843e-03],
         [3.7058e-03, 1.0877e-04, 5.0244e-05,  ..., 9.4460e-05,
          5.1917e-03, 3.9843e-03],
         [9.8813e-01, 1.0877e-04, 5.0244e-05,  ..., 9.4460e-05,
          1.6545e-02, 9.8649e-01],
         [3.7058e-03, 9.9967e-01, 5.0244e-05,  ..., 9.9972e-01,
          6.2107e-03, 5.5462e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:25,022 [Process: 0] Synchronize training processes
2024-08-18 15:29:25,022 [Process: 0] Evaluating...
2024-08-18 15:29:25,024 [Process: 0] EPOCH 895:
2024-08-18 15:29:25,026 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:26,149 [Process: 0] Synchronize training processes
2024-08-18 15:29:26,149 [Process: 0] Evaluating...
2024-08-18 15:29:26,151 [Process: 0] EPOCH 896:
2024-08-18 15:29:26,152 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 895:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 7.0875e-04, 1.4154e-03,  ..., 8.4234e-04,
          1.1584e-05, 9.9914e-01],
         [3.4110e-06, 7.0875e-04, 1.4154e-03,  ..., 8.4234e-04,
          1.1584e-05, 2.8636e-04],
         [3.4110e-06, 7.0875e-04, 1.4154e-03,  ..., 9.9747e-01,
          9.9997e-01, 2.8743e-04],
         [3.4110e-06, 9.9787e-01, 9.9575e-01,  ..., 8.4234e-04,
          1.1584e-05, 2.8636e-04]],
        [[9.9672e-01, 5.3384e-04, 3.3911e-03,  ..., 1.1639e-04,
          7.0637e-02, 1.9440e-06],
         [1.0924e-03, 5.3384e-04, 2.8674e-03,  ..., 1.1639e-04,
          4.3374e-01, 1.9440e-06],
         [1.0924e-03, 5.3384e-04, 4.9651e-03,  ..., 9.9965e-01,
          4.6853e-01, 9.9999e-01],
         [1.0924e-03, 9.9840e-01, 9.8878e-01,  ..., 1.1639e-04,
          2.7096e-02, 1.9440e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1424e-04, 1.1765e-05, 1.2525e-03,  ..., 1.3381e-03,
          6.0555e-05, 6.4953e-04],
         [4.1424e-04, 1.1765e-05, 9.5407e-04,  ..., 1.3381e-03,
          6.0555e-05, 6.4953e-04],
         [9.9876e-01, 1.1765e-05, 9.5407e-04,  ..., 9.9599e-01,
          6.0555e-05, 9.9805e-01],
         [4.1424e-04, 9.9996e-01, 9.9684e-01,  ..., 1.3381e-03,
          9.9982e-01, 6.4953e-04]],
        [[2.9335e-02, 2.0902e-04, 9.9960e-01,  ..., 3.7628e-06,
          9.9381e-01, 3.2691e-03],
         [1.1303e-02, 2.0902e-04, 1.3439e-04,  ..., 3.7628e-06,
          1.7823e-03, 2.5938e-03],
         [9.4203e-01, 2.0902e-04, 1.3439e-04,  ..., 3.7628e-06,
          2.2158e-03, 9.9154e-01],
         [1.7336e-02, 9.9937e-01, 1.3439e-04,  ..., 9.9999e-01,
          2.1941e-03, 2.5938e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 896:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 3.8276e-04, 4.4875e-04,  ..., 1.6465e-03,
          4.0270e-05, 9.7292e-01],
         [4.7105e-06, 3.8276e-04, 4.4875e-04,  ..., 1.6465e-03,
          4.0270e-05, 6.4402e-03],
         [4.7105e-06, 3.8276e-04, 4.4875e-04,  ..., 9.9440e-01,
          9.9988e-01, 1.2504e-02],
         [4.7105e-06, 9.9885e-01, 9.9865e-01,  ..., 2.3025e-03,
          4.0270e-05, 8.1341e-03]],
        [[9.9952e-01, 1.5571e-04, 4.1225e-03,  ..., 1.8388e-05,
          4.6957e-02, 8.2240e-05],
         [1.5848e-04, 1.5571e-04, 3.0917e-03,  ..., 1.8388e-05,
          1.9090e-01, 8.2240e-05],
         [1.5848e-04, 1.5571e-04, 3.5094e-03,  ..., 9.9994e-01,
          7.2834e-01, 9.9975e-01],
         [1.5848e-04, 9.9953e-01, 9.8928e-01,  ..., 1.8388e-05,
          3.3801e-02, 8.2240e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:27,275 [Process: 0] Synchronize training processes
2024-08-18 15:29:27,275 [Process: 0] Evaluating...
2024-08-18 15:29:27,277 [Process: 0] EPOCH 897:
2024-08-18 15:29:27,279 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0201e-03, 6.0936e-07, 3.0417e-02,  ..., 1.1274e-03,
          4.8249e-05, 9.7431e-04],
         [1.0201e-03, 6.0936e-07, 1.5849e-03,  ..., 1.1274e-03,
          4.8249e-05, 9.7431e-04],
         [9.9694e-01, 6.0936e-07, 1.5849e-03,  ..., 9.9662e-01,
          4.8249e-05, 9.9708e-01],
         [1.0201e-03, 1.0000e+00, 9.6641e-01,  ..., 1.1274e-03,
          9.9986e-01, 9.7431e-04]],
        [[5.9280e-03, 3.1766e-04, 9.9980e-01,  ..., 4.1125e-05,
          9.9410e-01, 9.8106e-04],
         [4.2718e-03, 3.1766e-04, 6.6793e-05,  ..., 4.1125e-05,
          1.7885e-03, 9.8106e-04],
         [9.8553e-01, 3.1766e-04, 6.6793e-05,  ..., 4.1125e-05,
          1.7885e-03, 9.9706e-01],
         [4.2718e-03, 9.9905e-01, 6.6793e-05,  ..., 9.9988e-01,
          2.3219e-03, 9.8106e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 897:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9992e-01, 1.4440e-03, 1.3536e-03,  ..., 2.3170e-04,
          4.5828e-04, 9.9821e-01],
         [2.6992e-05, 1.4440e-03, 1.3536e-03,  ..., 2.3170e-04,
          4.5828e-04, 5.9582e-04],
         [2.6992e-05, 1.8776e-03, 1.5727e-03,  ..., 9.9930e-01,
          9.9863e-01, 5.9582e-04],
         [2.6992e-05, 9.9523e-01, 9.9572e-01,  ..., 2.3170e-04,
          4.5828e-04, 5.9582e-04]],
        [[9.9992e-01, 1.4210e-04, 1.7692e-04,  ..., 2.6962e-04,
          1.4207e-02, 1.5483e-05],
         [2.6654e-05, 1.4210e-04, 1.7692e-04,  ..., 2.6962e-04,
          7.9686e-01, 1.5483e-05],
         [2.6654e-05, 1.4210e-04, 1.7692e-04,  ..., 9.9919e-01,
          1.7472e-01, 9.9995e-01],
         [2.6654e-05, 9.9957e-01, 9.9947e-01,  ..., 2.6962e-04,
          1.4207e-02, 1.5483e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.8848e-04, 1.4201e-06, 8.2880e-03,  ..., 2.6523e-03,
          2.5365e-05, 7.7191e-03],
         [2.8848e-04, 1.4201e-06, 9.8301e-04,  ..., 2.3279e-03,
          2.5365e-05, 5.0019e-03],
         [9.9913e-01, 1.4201e-06, 9.8301e-04,  ..., 9.9269e-01,
          2.5365e-05, 9.8213e-01],
         [2.8848e-04, 1.0000e+00, 9.8975e-01,  ..., 2.3279e-03,
          9.9992e-01, 5.1527e-03]],
        [[1.6833e-02, 7.3344e-07, 9.9954e-01,  ..., 1.7687e-05,
          9.9732e-01, 1.2054e-03],
         [6.9547e-03, 7.3344e-07, 1.3965e-04,  ..., 1.7687e-05,
          8.7163e-04, 1.2054e-03],
         [9.6926e-01, 7.3344e-07, 1.3965e-04,  ..., 1.7687e-05,
          8.7163e-04, 9.9638e-01],
         [6.9547e-03, 1.0000e+00, 1.8462e-04,  ..., 9.9995e-01,
          9.3544e-04, 1.2054e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 898:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 3.5577e-04, 2.5769e-03,  ..., 2.1684e-04,
          2.3166e-04, 9.9849e-01],
         [7.7666e-06, 3.5577e-04, 1.9332e-03,  ..., 2.1684e-04,
          2.3166e-04, 5.0451e-04],
         [7.7666e-06, 3.8946e-04, 2.1937e-03,  ..., 9.9935e-01,
          9.9931e-01, 5.0451e-04],
         [7.7666e-06, 9.9890e-01, 9.9330e-01,  ..., 2.1684e-04,
          2.3166e-04, 5.0451e-04]],
        [[9.9994e-01, 2.4431e-03, 1.6631e-03,  ..., 1.2795e-05,
          1.3428e-01, 1.3631e-05],
         [1.8681e-05, 2.1725e-03, 1.3406e-03,  ..., 1.2795e-05,
          5.5799e-01, 1.3631e-05],
         [1.8681e-05, 2.5922e-03, 1.3406e-03,  ..., 9.9996e-01,
          1.8956e-01, 9.9996e-01],
         [1.8681e-05, 9.9279e-01, 9.9566e-01,  ..., 1.2795e-05,
          1.1816e-01, 1.3631e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:28,406 [Process: 0] Synchronize training processes
2024-08-18 15:29:28,406 [Process: 0] Evaluating...
2024-08-18 15:29:28,408 [Process: 0] EPOCH 898:
2024-08-18 15:29:28,410 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:29,534 [Process: 0] Synchronize training processes
2024-08-18 15:29:29,534 [Process: 0] Evaluating...
2024-08-18 15:29:29,536 [Process: 0] EPOCH 899:
2024-08-18 15:29:29,537 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.1177e-04, 4.7991e-05, 2.1932e-02,  ..., 3.3725e-04,
          7.8880e-04, 4.2490e-04],
         [4.1177e-04, 4.7991e-05, 5.8130e-04,  ..., 3.3725e-04,
          7.8880e-04, 4.2490e-04],
         [9.9876e-01, 4.7991e-05, 5.8130e-04,  ..., 9.9899e-01,
          7.8880e-04, 9.9873e-01],
         [4.1177e-04, 9.9986e-01, 9.7690e-01,  ..., 3.3725e-04,
          9.9763e-01, 4.2490e-04]],
        [[4.7866e-03, 1.2813e-05, 9.9958e-01,  ..., 1.4274e-05,
          9.3355e-01, 1.1746e-03],
         [4.1732e-03, 1.2813e-05, 1.3957e-04,  ..., 1.4274e-05,
          1.1534e-02, 1.1746e-03],
         [9.8666e-01, 1.2813e-05, 1.3957e-04,  ..., 1.4274e-05,
          2.1859e-02, 9.9648e-01],
         [4.3791e-03, 9.9996e-01, 1.3957e-04,  ..., 9.9996e-01,
          3.3059e-02, 1.1746e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 899:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9988e-01, 6.8056e-04, 1.5813e-03,  ..., 1.4538e-03,
          7.7642e-06, 9.9697e-01],
         [3.8792e-05, 6.8056e-04, 1.5813e-03,  ..., 1.4538e-03,
          7.7642e-06, 9.5030e-04],
         [3.8792e-05, 6.8056e-04, 2.2077e-03,  ..., 9.9564e-01,
          9.9998e-01, 1.1276e-03],
         [3.8792e-05, 9.9796e-01, 9.9463e-01,  ..., 1.4538e-03,
          7.7642e-06, 9.5030e-04]],
        [[9.9999e-01, 1.1919e-03, 2.5988e-04,  ..., 1.1849e-05,
          2.0415e-01, 1.6585e-05],
         [3.9259e-06, 1.1919e-03, 2.5988e-04,  ..., 1.1849e-05,
          2.8694e-01, 1.6585e-05],
         [3.9259e-06, 1.1919e-03, 2.5988e-04,  ..., 9.9996e-01,
          4.1506e-01, 9.9995e-01],
         [3.9259e-06, 9.9642e-01, 9.9922e-01,  ..., 1.1849e-05,
          9.3845e-02, 1.6585e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6313e-03, 3.2132e-05, 1.1989e-01,  ..., 1.7842e-03,
          1.5465e-01, 1.5881e-04],
         [2.5861e-03, 3.2132e-05, 1.1159e-03,  ..., 1.7842e-03,
          3.3683e-02, 1.5881e-04],
         [9.9220e-01, 3.2132e-05, 1.1159e-03,  ..., 9.9465e-01,
          4.3238e-02, 9.9952e-01],
         [2.5861e-03, 9.9990e-01, 8.7788e-01,  ..., 1.7842e-03,
          7.6843e-01, 1.5881e-04]],
        [[1.2826e-03, 6.1677e-06, 9.9993e-01,  ..., 4.2347e-07,
          9.9718e-01, 1.5336e-03],
         [1.2826e-03, 6.1677e-06, 2.3897e-05,  ..., 4.2347e-07,
          8.9874e-04, 1.5336e-03],
         [9.9615e-01, 6.1677e-06, 2.3897e-05,  ..., 4.2347e-07,
          9.3230e-04, 9.9540e-01],
         [1.2826e-03, 9.9998e-01, 2.3897e-05,  ..., 1.0000e+00,
          9.9135e-04, 1.5336e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 900:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:30,660 [Process: 0] Synchronize training processes
2024-08-18 15:29:30,661 [Process: 0] Evaluating...
2024-08-18 15:29:30,662 [Process: 0] EPOCH 900:
2024-08-18 15:29:30,664 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:31,788 [Process: 0] Synchronize training processes
2024-08-18 15:29:31,789 [Process: 0] Evaluating...
2024-08-18 15:29:31,790 [Process: 0] EPOCH 901:
2024-08-18 15:29:31,792 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 2.3250e-04, 5.4506e-04,  ..., 3.9174e-04,
          4.4702e-05, 9.9963e-01],
         [6.8401e-06, 2.3250e-04, 5.4506e-04,  ..., 3.9174e-04,
          4.4702e-05, 1.2472e-04],
         [6.8401e-06, 2.3250e-04, 5.6895e-04,  ..., 9.9882e-01,
          9.9987e-01, 1.2472e-04],
         [6.8401e-06, 9.9930e-01, 9.9834e-01,  ..., 3.9174e-04,
          4.4702e-05, 1.2472e-04]],
        [[9.9997e-01, 7.6079e-04, 4.0445e-04,  ..., 5.5419e-05,
          6.0550e-02, 4.2110e-05],
         [9.7170e-06, 7.6079e-04, 4.0445e-04,  ..., 5.5419e-05,
          7.8107e-02, 4.2110e-05],
         [9.7170e-06, 8.0564e-04, 4.0445e-04,  ..., 9.9983e-01,
          1.5539e-01, 9.9987e-01],
         [9.7170e-06, 9.9767e-01, 9.9879e-01,  ..., 5.5419e-05,
          7.0595e-01, 4.2110e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.8230e-03, 1.1538e-04, 9.7535e-02,  ..., 1.0183e-03,
          1.4276e-03, 6.7999e-04],
         [4.1877e-03, 1.1538e-04, 1.1674e-02,  ..., 1.0183e-03,
          1.1859e-03, 6.7999e-04],
         [9.8680e-01, 1.1538e-04, 1.1674e-02,  ..., 9.9695e-01,
          1.1859e-03, 9.9796e-01],
         [4.1877e-03, 9.9965e-01, 8.7912e-01,  ..., 1.0183e-03,
          9.9620e-01, 6.7999e-04]],
        [[6.1346e-03, 4.8870e-05, 9.9958e-01,  ..., 4.9989e-06,
          9.9199e-01, 1.3326e-03],
         [4.5580e-03, 4.8870e-05, 1.2962e-04,  ..., 4.9989e-06,
          2.6484e-03, 1.3326e-03],
         [9.8475e-01, 4.8870e-05, 1.2962e-04,  ..., 4.9989e-06,
          2.6484e-03, 9.9600e-01],
         [4.5580e-03, 9.9985e-01, 1.6016e-04,  ..., 9.9998e-01,
          2.7173e-03, 1.3326e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 901:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9974e-01, 4.3266e-03, 4.8137e-04,  ..., 2.7744e-04,
          9.8716e-06, 9.9943e-01],
         [8.5708e-05, 4.0379e-03, 4.8137e-04,  ..., 2.7744e-04,
          9.8716e-06, 1.8965e-04],
         [8.5708e-05, 6.5633e-03, 4.8137e-04,  ..., 9.9917e-01,
          9.9997e-01, 1.8965e-04],
         [8.5708e-05, 9.8507e-01, 9.9856e-01,  ..., 2.7744e-04,
          9.8716e-06, 1.8965e-04]],
        [[9.9999e-01, 3.2284e-03, 2.4688e-02,  ..., 2.9576e-05,
          4.5754e-02, 1.0830e-04],
         [2.2878e-06, 2.5127e-03, 1.5803e-02,  ..., 2.9576e-05,
          4.5099e-02, 1.0830e-04],
         [2.2878e-06, 3.0515e-03, 6.4399e-02,  ..., 9.9991e-01,
          5.7838e-02, 9.9968e-01],
         [2.2878e-06, 9.9121e-01, 8.9511e-01,  ..., 2.9576e-05,
          8.5131e-01, 1.0830e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0924e-03, 4.8864e-05, 6.1319e-05,  ..., 5.7182e-04,
          3.1511e-05, 1.9400e-03],
         [1.0924e-03, 4.8864e-05, 4.5825e-05,  ..., 5.7182e-04,
          3.1511e-05, 1.9400e-03],
         [9.9672e-01, 4.8864e-05, 4.5825e-05,  ..., 9.9828e-01,
          3.1511e-05, 9.9418e-01],
         [1.0924e-03, 9.9985e-01, 9.9985e-01,  ..., 5.7182e-04,
          9.9991e-01, 1.9400e-03]],
        [[1.7458e-03, 1.5803e-05, 9.9802e-01,  ..., 3.5372e-05,
          9.9820e-01, 2.0902e-04],
         [1.7458e-03, 1.5803e-05, 6.4605e-04,  ..., 3.5372e-05,
          5.4909e-04, 2.0902e-04],
         [9.9476e-01, 1.5803e-05, 6.8484e-04,  ..., 3.5372e-05,
          5.4909e-04, 9.9937e-01],
         [1.7458e-03, 9.9995e-01, 6.4932e-04,  ..., 9.9989e-01,
          7.0338e-04, 2.0902e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 902:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:32,908 [Process: 0] Synchronize training processes
2024-08-18 15:29:32,908 [Process: 0] Evaluating...
2024-08-18 15:29:32,911 [Process: 0] EPOCH 902:
2024-08-18 15:29:32,913 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:34,033 [Process: 0] Synchronize training processes
2024-08-18 15:29:34,033 [Process: 0] Evaluating...
2024-08-18 15:29:34,035 [Process: 0] EPOCH 903:
2024-08-18 15:29:34,037 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 4.8766e-04, 9.9413e-04,  ..., 8.6421e-04,
          7.7891e-05, 9.9612e-01],
         [6.5839e-06, 4.8766e-04, 9.9413e-04,  ..., 8.6421e-04,
          7.7891e-05, 9.8019e-04],
         [6.5839e-06, 4.8766e-04, 9.9413e-04,  ..., 9.9741e-01,
          9.9977e-01, 1.9220e-03],
         [6.5839e-06, 9.9854e-01, 9.9702e-01,  ..., 8.6421e-04,
          7.7891e-05, 9.8019e-04]],
        [[9.9989e-01, 4.3243e-04, 1.6692e-02,  ..., 5.4069e-04,
          2.4593e-01, 2.7047e-04],
         [3.6028e-05, 4.3243e-04, 1.0583e-02,  ..., 5.4069e-04,
          2.6543e-01, 2.7047e-04],
         [3.6028e-05, 4.3243e-04, 3.5338e-02,  ..., 9.9838e-01,
          3.2535e-01, 9.9919e-01],
         [3.6028e-05, 9.9870e-01, 9.3739e-01,  ..., 5.4069e-04,
          1.6329e-01, 2.7047e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1945e-03, 3.7922e-04, 4.5520e-05,  ..., 7.1080e-04,
          1.2379e-04, 8.8761e-04],
         [1.1945e-03, 3.7922e-04, 4.5520e-05,  ..., 7.1080e-04,
          1.2379e-04, 8.8761e-04],
         [9.9642e-01, 3.7922e-04, 4.5520e-05,  ..., 9.9787e-01,
          1.2379e-04, 9.9734e-01],
         [1.1945e-03, 9.9886e-01, 9.9986e-01,  ..., 7.1080e-04,
          9.9963e-01, 8.8761e-04]],
        [[1.0232e-02, 2.6357e-05, 9.9932e-01,  ..., 1.7979e-05,
          9.9888e-01, 1.9001e-03],
         [4.9163e-03, 2.6357e-05, 1.6984e-04,  ..., 1.7979e-05,
          3.7325e-04, 1.9001e-03],
         [9.7994e-01, 2.6357e-05, 1.6984e-04,  ..., 1.7979e-05,
          3.7325e-04, 9.9430e-01],
         [4.9163e-03, 9.9992e-01, 3.4428e-04,  ..., 9.9995e-01,
          3.7325e-04, 1.9001e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 903:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 4.6831e-04, 9.9284e-05,  ..., 7.3804e-04,
          1.5829e-04, 9.9022e-01],
         [4.9855e-05, 4.6831e-04, 9.9284e-05,  ..., 7.3804e-04,
          1.5829e-04, 2.6605e-03],
         [4.9855e-05, 4.6831e-04, 9.9284e-05,  ..., 9.9779e-01,
          9.9953e-01, 4.4550e-03],
         [4.9855e-05, 9.9860e-01, 9.9970e-01,  ..., 7.3804e-04,
          1.5829e-04, 2.6605e-03]],
        [[9.9997e-01, 1.3994e-03, 7.7280e-04,  ..., 4.9772e-05,
          3.0060e-01, 8.5301e-05],
         [1.1029e-05, 1.3994e-03, 7.7280e-04,  ..., 4.9772e-05,
          2.0265e-01, 8.5301e-05],
         [1.1029e-05, 1.3994e-03, 7.7280e-04,  ..., 9.9985e-01,
          3.4782e-01, 9.9974e-01],
         [1.1029e-05, 9.9580e-01, 9.9768e-01,  ..., 4.9772e-05,
          1.4892e-01, 8.5301e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
2024-08-18 15:29:35,173 [Process: 0] Synchronize training processes
2024-08-18 15:29:35,173 [Process: 0] Evaluating...
2024-08-18 15:29:35,175 [Process: 0] EPOCH 904:
2024-08-18 15:29:35,177 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6588e-03, 2.1197e-04, 1.0612e-06,  ..., 1.4623e-03,
          2.0199e-04, 1.0384e-03],
         [1.6588e-03, 2.1197e-04, 1.0612e-06,  ..., 1.3902e-03,
          2.0199e-04, 1.0384e-03],
         [9.9502e-01, 2.1197e-04, 1.0612e-06,  ..., 9.9576e-01,
          2.0199e-04, 9.9688e-01],
         [1.6588e-03, 9.9936e-01, 1.0000e+00,  ..., 1.3902e-03,
          9.9939e-01, 1.0384e-03]],
        [[6.8870e-03, 6.9306e-04, 9.9903e-01,  ..., 4.0549e-04,
          9.9875e-01, 2.7595e-03],
         [3.6918e-03, 6.9306e-04, 2.7269e-04,  ..., 4.0549e-04,
          3.6009e-04, 2.6473e-03],
         [9.8573e-01, 6.9306e-04, 2.7269e-04,  ..., 4.0549e-04,
          3.6009e-04, 9.9195e-01],
         [3.6918e-03, 9.9792e-01, 4.2024e-04,  ..., 9.9878e-01,
          5.3463e-04, 2.6473e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 904:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0000e+00, 1.0735e-03, 5.3338e-03,  ..., 7.7436e-04,
          1.0172e-05, 9.9695e-01],
         [1.0272e-06, 1.0735e-03, 5.3338e-03,  ..., 7.7436e-04,
          1.0172e-05, 1.0162e-03],
         [1.0272e-06, 1.3080e-03, 9.2754e-03,  ..., 9.9768e-01,
          9.9997e-01, 1.0162e-03],
         [1.0272e-06, 9.9655e-01, 9.8006e-01,  ..., 7.7436e-04,
          1.0172e-05, 1.0162e-03]],
        [[9.9990e-01, 3.8992e-03, 3.1413e-04,  ..., 1.5851e-04,
          1.8144e-01, 3.3518e-05],
         [3.4175e-05, 3.8992e-03, 3.1413e-04,  ..., 1.5851e-04,
          3.9215e-01, 3.3518e-05],
         [3.4175e-05, 8.9596e-03, 3.1413e-04,  ..., 9.9952e-01,
          3.2932e-01, 9.9990e-01],
         [3.4175e-05, 9.8324e-01, 9.9906e-01,  ..., 1.5851e-04,
          9.7088e-02, 3.3518e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3667e-03, 1.7545e-04, 5.3748e-07,  ..., 3.9722e-04,
          3.7696e-04, 4.6744e-04],
         [1.3667e-03, 1.7545e-04, 5.3748e-07,  ..., 3.9722e-04,
          3.7696e-04, 4.6744e-04],
         [9.9590e-01, 1.7545e-04, 5.3748e-07,  ..., 9.9881e-01,
          3.7696e-04, 9.9860e-01],
         [1.3667e-03, 9.9947e-01, 1.0000e+00,  ..., 3.9722e-04,
          9.9887e-01, 4.6744e-04]],
        [[3.6633e-03, 1.0863e-04, 9.9985e-01,  ..., 1.1432e-05,
          9.9916e-01, 7.6960e-04],
         [3.6633e-03, 1.0863e-04, 5.0983e-05,  ..., 1.1432e-05,
          2.8095e-04, 7.6960e-04],
         [9.8848e-01, 1.0863e-04, 5.0983e-05,  ..., 1.1432e-05,
          2.8095e-04, 9.9769e-01],
         [4.1957e-03, 9.9967e-01, 5.0983e-05,  ..., 9.9997e-01,
          2.8095e-04, 7.6960e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 905:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 1.8379e-03, 1.1361e-04,  ..., 2.1878e-05,
          4.8640e-04, 9.9961e-01],
         [1.9460e-06, 1.7914e-03, 1.1361e-04,  ..., 2.1878e-05,
          4.8640e-04, 1.3094e-04],
         [1.9460e-06, 2.0026e-03, 1.1361e-04,  ..., 9.9993e-01,
          9.9854e-01, 1.3094e-04],
         [2.4125e-06, 9.9437e-01, 9.9966e-01,  ..., 2.1878e-05,
          4.8640e-04, 1.3094e-04]],
        [[9.9989e-01, 6.3359e-04, 8.2061e-03,  ..., 7.7965e-06,
          2.0128e-01, 3.2854e-05],
         [3.6199e-05, 6.3359e-04, 8.2061e-03,  ..., 7.7965e-06,
          3.1391e-01, 3.2854e-05],
         [3.6199e-05, 6.3359e-04, 2.4636e-02,  ..., 9.9998e-01,
          3.8574e-01, 9.9990e-01],
         [3.6199e-05, 9.9810e-01, 9.5895e-01,  ..., 7.7965e-06,
          9.9067e-02, 3.2854e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:36,305 [Process: 0] Synchronize training processes
2024-08-18 15:29:36,305 [Process: 0] Evaluating...
2024-08-18 15:29:36,307 [Process: 0] EPOCH 905:
2024-08-18 15:29:36,308 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:37,437 [Process: 0] Synchronize training processes
2024-08-18 15:29:37,437 [Process: 0] Evaluating...
2024-08-18 15:29:37,439 [Process: 0] EPOCH 906:
2024-08-18 15:29:37,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0516e-03, 6.7999e-05, 1.2434e-06,  ..., 1.7850e-03,
          9.1643e-04, 1.4469e-03],
         [1.0516e-03, 6.7999e-05, 1.2434e-06,  ..., 1.7850e-03,
          9.1643e-04, 1.4469e-03],
         [9.9685e-01, 6.7999e-05, 1.2434e-06,  ..., 9.9464e-01,
          9.1643e-04, 9.9566e-01],
         [1.0516e-03, 9.9980e-01, 1.0000e+00,  ..., 1.7850e-03,
          9.9725e-01, 1.4469e-03]],
        [[4.8285e-03, 2.5278e-05, 9.9985e-01,  ..., 3.7727e-05,
          9.9827e-01, 1.0353e-03],
         [3.2009e-03, 2.5278e-05, 5.0506e-05,  ..., 3.7727e-05,
          5.4932e-04, 1.0353e-03],
         [9.8877e-01, 2.5278e-05, 5.0506e-05,  ..., 3.7727e-05,
          5.4932e-04, 9.9689e-01],
         [3.2009e-03, 9.9992e-01, 5.0506e-05,  ..., 9.9989e-01,
          6.3183e-04, 1.0353e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 906:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9972e-01, 2.5832e-04, 8.4369e-04,  ..., 3.6245e-04,
          4.0198e-06, 9.9900e-01],
         [8.1972e-05, 2.5832e-04, 8.4369e-04,  ..., 3.6245e-04,
          4.0198e-06, 3.3486e-04],
         [8.1972e-05, 2.5832e-04, 1.0312e-03,  ..., 9.9891e-01,
          9.9999e-01, 3.3486e-04],
         [1.2002e-04, 9.9923e-01, 9.9728e-01,  ..., 3.6245e-04,
          4.0198e-06, 3.3486e-04]],
        [[9.9989e-01, 6.5998e-04, 6.8978e-04,  ..., 7.8791e-05,
          1.1166e-01, 5.1466e-05],
         [3.6442e-05, 6.5998e-04, 6.8978e-04,  ..., 7.8791e-05,
          6.4040e-01, 5.1466e-05],
         [3.6442e-05, 6.5998e-04, 6.8978e-04,  ..., 9.9976e-01,
          1.6832e-01, 9.9985e-01],
         [3.6442e-05, 9.9802e-01, 9.9793e-01,  ..., 7.8791e-05,
          7.9617e-02, 5.1466e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4926e-04, 2.7308e-06, 1.9756e-05,  ..., 1.7691e-03,
          2.8796e-04, 2.0714e-03],
         [3.4926e-04, 2.7308e-06, 1.9756e-05,  ..., 1.7691e-03,
          2.8796e-04, 2.0714e-03],
         [9.9895e-01, 2.7308e-06, 1.9756e-05,  ..., 9.9469e-01,
          2.8796e-04, 9.9379e-01],
         [3.4926e-04, 9.9999e-01, 9.9994e-01,  ..., 1.7691e-03,
          9.9914e-01, 2.0714e-03]],
        [[1.9483e-03, 1.0353e-04, 9.9910e-01,  ..., 1.8785e-06,
          9.9690e-01, 1.4917e-03],
         [1.9483e-03, 1.0353e-04, 2.9983e-04,  ..., 1.8785e-06,
          8.9780e-04, 1.4917e-03],
         [9.9416e-01, 1.0353e-04, 2.9983e-04,  ..., 1.8785e-06,
          8.9780e-04, 9.9552e-01],
         [1.9483e-03, 9.9969e-01, 2.9983e-04,  ..., 9.9999e-01,
          1.3053e-03, 1.4917e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 907:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 1.2647e-04, 8.6541e-04,  ..., 1.9865e-04,
          4.2081e-05, 9.9745e-01],
         [1.0149e-05, 1.2647e-04, 8.6541e-04,  ..., 1.9865e-04,
          4.2081e-05, 8.5089e-04],
         [1.0149e-05, 1.2647e-04, 8.6541e-04,  ..., 9.9940e-01,
          9.9987e-01, 8.5089e-04],
         [1.1101e-05, 9.9962e-01, 9.9740e-01,  ..., 1.9865e-04,
          4.2081e-05, 8.5089e-04]],
        [[9.9984e-01, 2.3386e-03, 1.9521e-04,  ..., 9.6636e-05,
          9.7481e-02, 1.7529e-04],
         [5.2060e-05, 2.3386e-03, 1.9521e-04,  ..., 9.6636e-05,
          8.0800e-01, 1.7529e-04],
         [5.2060e-05, 3.2656e-03, 1.9521e-04,  ..., 9.9971e-01,
          6.5594e-02, 9.9947e-01],
         [5.2060e-05, 9.9206e-01, 9.9941e-01,  ..., 9.6636e-05,
          2.8926e-02, 1.7529e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:38,568 [Process: 0] Synchronize training processes
2024-08-18 15:29:38,568 [Process: 0] Evaluating...
2024-08-18 15:29:38,570 [Process: 0] EPOCH 907:
2024-08-18 15:29:38,572 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:39,697 [Process: 0] Synchronize training processes
2024-08-18 15:29:39,697 [Process: 0] Evaluating...
2024-08-18 15:29:39,699 [Process: 0] EPOCH 908:
2024-08-18 15:29:39,701 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1825e-03, 3.3047e-05, 1.2589e-07,  ..., 8.8062e-04,
          1.5019e-03, 1.0517e-03],
         [1.1825e-03, 3.3047e-05, 1.2589e-07,  ..., 8.8062e-04,
          1.5019e-03, 1.0517e-03],
         [9.9645e-01, 3.3047e-05, 1.2589e-07,  ..., 9.9736e-01,
          1.5019e-03, 9.9685e-01],
         [1.1825e-03, 9.9990e-01, 1.0000e+00,  ..., 8.8062e-04,
          9.9549e-01, 1.0517e-03]],
        [[3.2164e-03, 1.7015e-04, 9.9942e-01,  ..., 1.5444e-05,
          9.7933e-01, 1.2731e-03],
         [2.7742e-03, 1.7015e-04, 1.9321e-04,  ..., 1.5444e-05,
          6.0520e-03, 1.2731e-03],
         [9.9124e-01, 1.7015e-04, 1.9321e-04,  ..., 1.5444e-05,
          8.8622e-03, 9.9618e-01],
         [2.7742e-03, 9.9949e-01, 1.9321e-04,  ..., 9.9995e-01,
          5.7572e-03, 1.2731e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 908:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9973e-01, 1.5422e-03, 1.7652e-03,  ..., 2.2701e-04,
          3.0399e-04, 9.9947e-01],
         [9.0023e-05, 1.3198e-03, 1.7652e-03,  ..., 2.2701e-04,
          3.0399e-04, 1.7672e-04],
         [9.0023e-05, 1.3198e-03, 2.1470e-03,  ..., 9.9932e-01,
          9.9909e-01, 1.7672e-04],
         [9.0023e-05, 9.9582e-01, 9.9432e-01,  ..., 2.2701e-04,
          3.0399e-04, 1.7672e-04]],
        [[9.9997e-01, 5.7278e-04, 1.3830e-03,  ..., 2.6555e-04,
          4.1928e-02, 3.1790e-05],
         [9.4842e-06, 5.7278e-04, 1.3830e-03,  ..., 2.6555e-04,
          8.4643e-01, 3.1790e-05],
         [9.4842e-06, 5.7278e-04, 1.3830e-03,  ..., 9.9920e-01,
          6.5286e-02, 9.9990e-01],
         [9.4842e-06, 9.9828e-01, 9.9585e-01,  ..., 2.6555e-04,
          4.6356e-02, 3.1790e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1722e-04, 3.7624e-04, 1.5644e-06,  ..., 1.2783e-03,
          1.6624e-03, 1.4010e-03],
         [1.1722e-04, 3.7624e-04, 1.5644e-06,  ..., 1.2783e-03,
          1.8629e-03, 1.4010e-03],
         [9.9965e-01, 3.7624e-04, 1.5644e-06,  ..., 9.9617e-01,
          1.6624e-03, 9.9580e-01],
         [1.1722e-04, 9.9887e-01, 1.0000e+00,  ..., 1.2783e-03,
          9.9481e-01, 1.4010e-03]],
        [[3.3894e-03, 4.1629e-04, 9.9925e-01,  ..., 1.7715e-06,
          9.9563e-01, 1.8970e-03],
         [3.3798e-03, 4.1629e-04, 2.3817e-04,  ..., 1.7715e-06,
          1.2353e-03, 1.8970e-03],
         [9.8985e-01, 4.1629e-04, 2.3817e-04,  ..., 1.7715e-06,
          1.4657e-03, 9.9431e-01],
         [3.3798e-03, 9.9875e-01, 2.7852e-04,  ..., 9.9999e-01,
          1.6717e-03, 1.8970e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 909:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:40,815 [Process: 0] Synchronize training processes
2024-08-18 15:29:40,815 [Process: 0] Evaluating...
2024-08-18 15:29:40,817 [Process: 0] EPOCH 909:
2024-08-18 15:29:40,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:41,940 [Process: 0] Synchronize training processes
2024-08-18 15:29:41,941 [Process: 0] Evaluating...
2024-08-18 15:29:41,942 [Process: 0] EPOCH 910:
2024-08-18 15:29:41,944 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9982e-01, 3.9114e-04, 1.1361e-03,  ..., 1.0990e-03,
          1.0251e-04, 9.9781e-01],
         [3.4064e-05, 3.9114e-04, 1.1361e-03,  ..., 1.0990e-03,
          1.0251e-04, 6.5529e-04],
         [3.4064e-05, 3.9114e-04, 1.1569e-03,  ..., 9.9670e-01,
          9.9969e-01, 8.8120e-04],
         [1.1127e-04, 9.9883e-01, 9.9657e-01,  ..., 1.0990e-03,
          1.0251e-04, 6.5529e-04]],
        [[9.9992e-01, 1.5541e-03, 2.4960e-04,  ..., 6.4117e-05,
          6.7503e-02, 1.9261e-04],
         [2.6990e-05, 1.5541e-03, 2.4960e-04,  ..., 6.4117e-05,
          7.9904e-01, 1.9261e-04],
         [2.6990e-05, 1.5541e-03, 2.4960e-04,  ..., 9.9981e-01,
          1.0915e-01, 9.9942e-01],
         [2.6990e-05, 9.9534e-01, 9.9925e-01,  ..., 6.4117e-05,
          2.4301e-02, 1.9261e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.1200e-04, 2.4654e-04, 1.2418e-06,  ..., 9.5098e-03,
          4.2645e-04, 3.1686e-04],
         [3.1200e-04, 2.4654e-04, 1.2418e-06,  ..., 7.5448e-03,
          4.2645e-04, 3.1686e-04],
         [9.9906e-01, 2.4654e-04, 1.2418e-06,  ..., 9.6998e-01,
          4.2645e-04, 9.9905e-01],
         [3.1200e-04, 9.9926e-01, 1.0000e+00,  ..., 1.2964e-02,
          9.9872e-01, 3.1686e-04]],
        [[1.8845e-03, 5.2412e-04, 9.9976e-01,  ..., 2.4497e-06,
          9.9718e-01, 1.4094e-03],
         [1.8845e-03, 5.2412e-04, 6.5687e-05,  ..., 2.4497e-06,
          8.4527e-04, 1.4094e-03],
         [9.9435e-01, 5.2412e-04, 6.5687e-05,  ..., 2.4497e-06,
          8.4527e-04, 9.9577e-01],
         [1.8845e-03, 9.9843e-01, 1.0568e-04,  ..., 9.9999e-01,
          1.1252e-03, 1.4094e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 910:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9952e-01, 3.3197e-03, 3.9731e-04,  ..., 1.7520e-04,
          6.6068e-05, 9.9832e-01],
         [1.6095e-04, 2.6517e-03, 3.9731e-04,  ..., 1.7520e-04,
          6.6068e-05, 5.5982e-04],
         [1.6095e-04, 2.6517e-03, 3.9731e-04,  ..., 9.9947e-01,
          9.9980e-01, 5.5982e-04],
         [1.6095e-04, 9.9138e-01, 9.9881e-01,  ..., 1.7520e-04,
          6.6068e-05, 5.5982e-04]],
        [[9.9992e-01, 1.5398e-03, 6.8619e-04,  ..., 1.1761e-04,
          1.5434e-01, 1.9906e-05],
         [2.8280e-05, 1.5398e-03, 6.8619e-04,  ..., 1.1761e-04,
          5.0236e-01, 1.9906e-05],
         [2.8280e-05, 1.5398e-03, 6.8619e-04,  ..., 9.9965e-01,
          2.6845e-01, 9.9994e-01],
         [2.8280e-05, 9.9538e-01, 9.9794e-01,  ..., 1.1761e-04,
          7.4845e-02, 1.9906e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.9832e-03, 2.5935e-04, 9.3074e-06,  ..., 1.4348e-03,
          2.0041e-04, 2.1895e-03],
         [2.9832e-03, 2.5935e-04, 9.3074e-06,  ..., 1.4348e-03,
          2.0041e-04, 2.1895e-03],
         [9.9105e-01, 2.5935e-04, 9.3074e-06,  ..., 9.9570e-01,
          2.0041e-04, 9.9343e-01],
         [2.9832e-03, 9.9922e-01, 9.9997e-01,  ..., 1.4348e-03,
          9.9940e-01, 2.1895e-03]],
        [[1.6029e-03, 6.1270e-04, 9.9977e-01,  ..., 6.2159e-05,
          9.8839e-01, 2.7301e-03],
         [1.3330e-03, 6.1270e-04, 7.6796e-05,  ..., 6.2159e-05,
          3.3207e-03, 2.7301e-03],
         [9.9573e-01, 6.1270e-04, 7.6796e-05,  ..., 6.2159e-05,
          4.1174e-03, 9.9181e-01],
         [1.3330e-03, 9.9816e-01, 7.6796e-05,  ..., 9.9981e-01,
          4.1728e-03, 2.7301e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:43,074 [Process: 0] Synchronize training processes
2024-08-18 15:29:43,074 [Process: 0] Evaluating...
2024-08-18 15:29:43,076 [Process: 0] EPOCH 911:
2024-08-18 15:29:43,078 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:44,204 [Process: 0] Synchronize training processes
2024-08-18 15:29:44,204 [Process: 0] Evaluating...
2024-08-18 15:29:44,208 [Process: 0] EPOCH 912:
2024-08-18 15:29:44,210 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 911:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9950e-01, 1.1114e-03, 1.5358e-03,  ..., 8.8270e-05,
          2.2171e-05, 9.9912e-01],
         [1.6520e-04, 1.1114e-03, 1.5358e-03,  ..., 8.8270e-05,
          2.2171e-05, 2.9275e-04],
         [1.6520e-04, 1.1114e-03, 1.5358e-03,  ..., 9.9974e-01,
          9.9993e-01, 2.9275e-04],
         [1.6520e-04, 9.9667e-01, 9.9539e-01,  ..., 8.8270e-05,
          2.2171e-05, 2.9275e-04]],
        [[9.9994e-01, 3.9918e-04, 2.4354e-03,  ..., 1.7479e-05,
          3.0195e-02, 3.6724e-05],
         [1.8731e-05, 3.9918e-04, 2.4354e-03,  ..., 1.7479e-05,
          8.1435e-01, 3.6724e-05],
         [1.8731e-05, 3.9918e-04, 2.7900e-03,  ..., 9.9995e-01,
          1.2839e-01, 9.9989e-01],
         [1.8731e-05, 9.9880e-01, 9.9234e-01,  ..., 1.7479e-05,
          2.7069e-02, 3.6724e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3315e-03, 3.3764e-05, 3.4897e-07,  ..., 7.2721e-04,
          5.0207e-04, 9.6019e-04],
         [1.3315e-03, 3.3764e-05, 3.4897e-07,  ..., 7.2721e-04,
          5.0207e-04, 9.6019e-04],
         [9.9601e-01, 3.3764e-05, 3.4897e-07,  ..., 9.9782e-01,
          5.0207e-04, 9.9712e-01],
         [1.3315e-03, 9.9990e-01, 1.0000e+00,  ..., 7.2721e-04,
          9.9849e-01, 9.6019e-04]],
        [[1.2286e-03, 4.9725e-04, 9.9847e-01,  ..., 6.0760e-05,
          9.9874e-01, 1.3322e-03],
         [1.2286e-03, 4.9725e-04, 4.3531e-04,  ..., 6.0760e-05,
          4.2022e-04, 1.3322e-03],
         [9.9631e-01, 4.9725e-04, 6.5845e-04,  ..., 6.0760e-05,
          4.2022e-04, 9.9600e-01],
         [1.2286e-03, 9.9851e-01, 4.3531e-04,  ..., 9.9982e-01,
          4.2022e-04, 1.3322e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 912:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9981e-01, 2.1082e-04, 3.6289e-04,  ..., 2.1340e-04,
          1.8620e-04, 9.9767e-01],
         [6.3130e-05, 2.1082e-04, 3.6289e-04,  ..., 2.1340e-04,
          1.8620e-04, 7.7530e-04],
         [6.3130e-05, 2.1082e-04, 3.6289e-04,  ..., 9.9936e-01,
          9.9944e-01, 7.7530e-04],
         [6.3130e-05, 9.9937e-01, 9.9891e-01,  ..., 2.1340e-04,
          1.8620e-04, 7.7530e-04]],
        [[9.9995e-01, 4.5225e-04, 1.0996e-03,  ..., 1.8426e-05,
          5.8215e-03, 2.0433e-04],
         [1.7590e-05, 4.5225e-04, 1.0996e-03,  ..., 1.8426e-05,
          9.7833e-01, 2.0433e-04],
         [1.7590e-05, 4.5225e-04, 1.0996e-03,  ..., 9.9994e-01,
          6.0049e-03, 9.9939e-01],
         [1.7590e-05, 9.9864e-01, 9.9670e-01,  ..., 1.8426e-05,
          9.8419e-03, 2.0433e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:45,341 [Process: 0] Synchronize training processes
2024-08-18 15:29:45,342 [Process: 0] Evaluating...
2024-08-18 15:29:45,343 [Process: 0] EPOCH 913:
2024-08-18 15:29:45,345 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.7190e-03, 3.1714e-04, 2.0568e-08,  ..., 2.4290e-03,
          5.1939e-04, 1.2180e-03],
         [3.7190e-03, 3.1714e-04, 2.0568e-08,  ..., 2.4290e-03,
          5.1939e-04, 1.2180e-03],
         [9.8755e-01, 3.1714e-04, 2.0568e-08,  ..., 9.9271e-01,
          5.1939e-04, 9.9635e-01],
         [5.0116e-03, 9.9905e-01, 1.0000e+00,  ..., 2.4290e-03,
          9.9844e-01, 1.2180e-03]],
        [[1.9018e-03, 9.2120e-04, 9.9997e-01,  ..., 1.2106e-04,
          9.6050e-01, 1.7288e-03],
         [1.9018e-03, 1.3132e-03, 9.6744e-06,  ..., 1.2106e-04,
          1.1258e-02, 1.7288e-03],
         [9.9429e-01, 9.2120e-04, 9.6744e-06,  ..., 1.2106e-04,
          1.2734e-02, 9.9481e-01],
         [1.9018e-03, 9.9684e-01, 9.6744e-06,  ..., 9.9964e-01,
          1.5509e-02, 1.7288e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 913:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9975e-01, 2.5032e-03, 3.5075e-04,  ..., 1.3294e-04,
          2.3690e-04, 9.9359e-01],
         [8.2411e-05, 2.5032e-03, 3.5075e-04,  ..., 1.3294e-04,
          2.3690e-04, 2.1353e-03],
         [8.2411e-05, 3.3443e-03, 3.5075e-04,  ..., 9.9960e-01,
          9.9929e-01, 2.1353e-03],
         [8.2411e-05, 9.9165e-01, 9.9895e-01,  ..., 1.3294e-04,
          2.3690e-04, 2.1353e-03]],
        [[9.9706e-01, 4.2719e-04, 6.0321e-04,  ..., 5.8102e-05,
          1.8216e-02, 1.8615e-04],
         [8.5280e-04, 4.2719e-04, 6.0321e-04,  ..., 5.8102e-05,
          8.9001e-01, 1.8615e-04],
         [8.5280e-04, 4.2719e-04, 6.0321e-04,  ..., 9.9983e-01,
          5.8078e-02, 9.9944e-01],
         [1.2381e-03, 9.9872e-01, 9.9819e-01,  ..., 5.8102e-05,
          3.3692e-02, 1.8615e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[7.5340e-04, 2.7821e-04, 1.2119e-06,  ..., 1.0034e-03,
          1.0258e-03, 2.5299e-03],
         [7.5340e-04, 4.8785e-04, 1.2119e-06,  ..., 1.0034e-03,
          1.0258e-03, 2.5299e-03],
         [9.9774e-01, 2.7821e-04, 1.2119e-06,  ..., 9.9699e-01,
          1.0258e-03, 9.9238e-01],
         [7.5340e-04, 9.9896e-01, 1.0000e+00,  ..., 1.0034e-03,
          9.9692e-01, 2.5647e-03]],
        [[2.1665e-03, 2.0292e-04, 9.9762e-01,  ..., 9.2390e-05,
          9.9740e-01, 1.4458e-03],
         [2.0552e-03, 2.0292e-04, 5.8532e-04,  ..., 9.2390e-05,
          7.2981e-04, 1.4458e-03],
         [9.9372e-01, 2.0292e-04, 5.8532e-04,  ..., 9.2390e-05,
          7.2981e-04, 9.9566e-01],
         [2.0552e-03, 9.9939e-01, 1.2130e-03,  ..., 9.9972e-01,
          1.1403e-03, 1.4458e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 914:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:46,472 [Process: 0] Synchronize training processes
2024-08-18 15:29:46,473 [Process: 0] Evaluating...
2024-08-18 15:29:46,474 [Process: 0] EPOCH 914:
2024-08-18 15:29:46,476 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:47,606 [Process: 0] Synchronize training processes
2024-08-18 15:29:47,606 [Process: 0] Evaluating...
2024-08-18 15:29:47,608 [Process: 0] EPOCH 915:
2024-08-18 15:29:47,609 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9997e-01, 1.3515e-03, 1.5804e-03,  ..., 1.2865e-04,
          1.8365e-04, 9.9988e-01],
         [1.0595e-05, 1.3515e-03, 1.5804e-03,  ..., 1.2865e-04,
          1.8365e-04, 3.9030e-05],
         [1.0595e-05, 1.3515e-03, 2.0329e-03,  ..., 9.9961e-01,
          9.9945e-01, 3.9030e-05],
         [1.3185e-05, 9.9595e-01, 9.9481e-01,  ..., 1.2865e-04,
          1.8365e-04, 3.9030e-05]],
        [[9.9983e-01, 2.5976e-03, 2.2404e-03,  ..., 1.1275e-04,
          2.4644e-02, 8.0624e-06],
         [5.6711e-05, 2.5976e-03, 2.2404e-03,  ..., 1.1275e-04,
          8.9029e-01, 8.0624e-06],
         [5.6711e-05, 3.9757e-03, 2.6301e-03,  ..., 9.9966e-01,
          7.0197e-02, 9.9998e-01],
         [5.6711e-05, 9.9083e-01, 9.9289e-01,  ..., 1.1275e-04,
          1.4871e-02, 8.0624e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.1252e-04, 1.6378e-05, 4.5531e-08,  ..., 5.2033e-03,
          6.6449e-05, 2.5580e-03],
         [8.1252e-04, 1.6378e-05, 4.5531e-08,  ..., 4.9578e-03,
          6.6449e-05, 2.5580e-03],
         [9.9756e-01, 1.6378e-05, 4.5531e-08,  ..., 9.8312e-01,
          6.6449e-05, 9.9233e-01],
         [8.1252e-04, 9.9995e-01, 1.0000e+00,  ..., 6.7204e-03,
          9.9980e-01, 2.5580e-03]],
        [[3.3541e-03, 1.1094e-02, 9.9990e-01,  ..., 1.0216e-03,
          9.9405e-01, 8.7517e-04],
         [3.3541e-03, 6.7052e-03, 3.4378e-05,  ..., 1.0216e-03,
          1.3722e-03, 8.7517e-04],
         [9.8993e-01, 9.5833e-03, 3.4378e-05,  ..., 1.0216e-03,
          1.3722e-03, 9.9737e-01],
         [3.3637e-03, 9.7262e-01, 3.4378e-05,  ..., 9.9694e-01,
          3.2011e-03, 8.7517e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 915:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 2.1881e-03, 3.8493e-04,  ..., 1.1729e-03,
          5.8789e-05, 9.9814e-01],
         [2.2457e-05, 2.0801e-03, 3.8493e-04,  ..., 1.1729e-03,
          5.8789e-05, 5.7975e-04],
         [2.2457e-05, 2.0801e-03, 3.8493e-04,  ..., 9.9648e-01,
          9.9982e-01, 7.0240e-04],
         [2.2457e-05, 9.9365e-01, 9.9885e-01,  ..., 1.1729e-03,
          5.8789e-05, 5.7975e-04]],
        [[9.9997e-01, 1.4451e-03, 2.3557e-04,  ..., 4.1044e-05,
          1.1099e-02, 4.2610e-04],
         [9.7854e-06, 1.4451e-03, 2.3557e-04,  ..., 4.1044e-05,
          9.3602e-01, 4.2610e-04],
         [9.7854e-06, 1.4451e-03, 2.3557e-04,  ..., 9.9988e-01,
          2.9202e-02, 9.9872e-01],
         [9.7854e-06, 9.9566e-01, 9.9929e-01,  ..., 4.1044e-05,
          2.3683e-02, 4.2610e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:29:48,738 [Process: 0] Synchronize training processes
2024-08-18 15:29:48,738 [Process: 0] Evaluating...
2024-08-18 15:29:48,740 [Process: 0] EPOCH 916:
2024-08-18 15:29:48,742 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:49,869 [Process: 0] Synchronize training processes
2024-08-18 15:29:49,869 [Process: 0] Evaluating...
2024-08-18 15:29:49,871 [Process: 0] EPOCH 917:
2024-08-18 15:29:49,872 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.8083e-04, 1.9945e-04, 1.4095e-08,  ..., 8.0071e-04,
          1.6253e-04, 5.5493e-04],
         [3.8083e-04, 1.9945e-04, 1.4095e-08,  ..., 8.0071e-04,
          1.6253e-04, 5.5493e-04],
         [9.9886e-01, 1.9945e-04, 1.4095e-08,  ..., 9.9760e-01,
          1.6253e-04, 9.9834e-01],
         [3.8083e-04, 9.9940e-01, 1.0000e+00,  ..., 8.0071e-04,
          9.9951e-01, 5.5493e-04]],
        [[9.0267e-04, 1.0319e-03, 9.9934e-01,  ..., 5.0972e-04,
          9.6798e-01, 5.9939e-04],
         [9.0267e-04, 1.1370e-03, 2.1733e-04,  ..., 5.0972e-04,
          6.1233e-03, 5.9939e-04],
         [9.9729e-01, 1.0319e-03, 2.1733e-04,  ..., 5.0972e-04,
          9.6420e-03, 9.9820e-01],
         [9.0267e-04, 9.9680e-01, 2.2303e-04,  ..., 9.9847e-01,
          1.6252e-02, 5.9939e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 916:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.8968e-01, 6.5565e-04, 2.3867e-03,  ..., 9.4277e-05,
          5.2569e-05, 9.9684e-01],
         [1.9086e-03, 6.5565e-04, 2.3867e-03,  ..., 9.4277e-05,
          5.2569e-05, 9.1836e-04],
         [1.9086e-03, 6.5565e-04, 2.8015e-03,  ..., 9.9972e-01,
          9.9984e-01, 1.3241e-03],
         [6.5075e-03, 9.9803e-01, 9.9243e-01,  ..., 9.4277e-05,
          5.2569e-05, 9.1836e-04]],
        [[9.9847e-01, 7.2925e-04, 2.8024e-03,  ..., 2.4335e-05,
          7.5678e-03, 1.3574e-05],
         [5.0547e-04, 7.2925e-04, 2.8024e-03,  ..., 2.4335e-05,
          9.7304e-01, 1.3574e-05],
         [5.0547e-04, 7.2925e-04, 2.9047e-03,  ..., 9.9993e-01,
          1.2384e-02, 9.9996e-01],
         [5.2044e-04, 9.9781e-01, 9.9149e-01,  ..., 2.4335e-05,
          7.0134e-03, 1.3574e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.9688e-03, 1.1708e-04, 7.5812e-09,  ..., 1.2821e-03,
          4.3152e-04, 3.3573e-03],
         [1.9688e-03, 1.4711e-04, 7.5812e-09,  ..., 1.2821e-03,
          4.3152e-04, 3.3573e-03],
         [9.9409e-01, 1.1708e-04, 7.5812e-09,  ..., 9.9615e-01,
          4.3152e-04, 9.8993e-01],
         [1.9688e-03, 9.9962e-01, 1.0000e+00,  ..., 1.2821e-03,
          9.9871e-01, 3.3573e-03]],
        [[1.5703e-03, 1.3611e-02, 9.9698e-01,  ..., 3.5272e-04,
          9.9964e-01, 8.6415e-04],
         [1.5703e-03, 9.2965e-03, 1.0075e-03,  ..., 3.5272e-04,
          1.2065e-04, 8.6415e-04],
         [9.9529e-01, 1.4795e-02, 1.0075e-03,  ..., 3.5272e-04,
          1.2065e-04, 9.9741e-01],
         [1.5703e-03, 9.6230e-01, 1.0075e-03,  ..., 9.9894e-01,
          1.2065e-04, 8.6415e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 917:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9998e-01, 2.0957e-03, 4.1151e-04,  ..., 2.2168e-04,
          1.5913e-04, 9.9974e-01],
         [6.0821e-06, 2.0957e-03, 4.1151e-04,  ..., 2.2168e-04,
          1.5913e-04, 8.6995e-05],
         [6.0821e-06, 2.3376e-03, 4.1151e-04,  ..., 9.9933e-01,
          9.9952e-01, 8.6995e-05],
         [6.0821e-06, 9.9347e-01, 9.9877e-01,  ..., 2.2168e-04,
          1.5913e-04, 8.6995e-05]],
        [[9.9996e-01, 7.8774e-04, 1.5918e-03,  ..., 2.0819e-05,
          1.6696e-02, 3.2682e-06],
         [1.3486e-05, 7.8774e-04, 1.5918e-03,  ..., 2.0819e-05,
          9.4353e-01, 3.2682e-06],
         [1.3486e-05, 7.8774e-04, 1.5918e-03,  ..., 9.9994e-01,
          2.2239e-02, 9.9999e-01],
         [1.3486e-05, 9.9764e-01, 9.9522e-01,  ..., 2.0819e-05,
          1.7540e-02, 3.2682e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:50,987 [Process: 0] Synchronize training processes
2024-08-18 15:29:50,987 [Process: 0] Evaluating...
2024-08-18 15:29:50,989 [Process: 0] EPOCH 918:
2024-08-18 15:29:50,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:52,108 [Process: 0] Synchronize training processes
2024-08-18 15:29:52,108 [Process: 0] Evaluating...
2024-08-18 15:29:52,110 [Process: 0] EPOCH 919:
2024-08-18 15:29:52,112 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.0999e-03, 1.1352e-04, 1.5450e-07,  ..., 9.6929e-04,
          7.3093e-05, 4.5927e-03],
         [1.0999e-03, 1.1352e-04, 1.5450e-07,  ..., 9.6929e-04,
          7.3093e-05, 4.5927e-03],
         [9.9670e-01, 1.1352e-04, 1.5450e-07,  ..., 9.9709e-01,
          7.3093e-05, 9.8552e-01],
         [1.0999e-03, 9.9966e-01, 1.0000e+00,  ..., 9.6929e-04,
          9.9978e-01, 5.2958e-03]],
        [[1.8412e-03, 1.7733e-03, 9.9962e-01,  ..., 4.6978e-04,
          9.9824e-01, 1.1666e-03],
         [1.8412e-03, 1.7733e-03, 1.1466e-04,  ..., 4.6978e-04,
          5.8636e-04, 1.1666e-03],
         [9.9448e-01, 1.7733e-03, 1.1466e-04,  ..., 4.6978e-04,
          5.8636e-04, 9.9650e-01],
         [1.8412e-03, 9.9468e-01, 1.4683e-04,  ..., 9.9859e-01,
          5.8636e-04, 1.1666e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 918:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9986e-01, 6.3772e-04, 1.8939e-03,  ..., 1.1472e-04,
          7.1006e-04, 9.9770e-01],
         [4.7081e-05, 6.3772e-04, 1.4790e-03,  ..., 1.1472e-04,
          7.1006e-04, 7.6535e-04],
         [4.7081e-05, 6.3772e-04, 1.4790e-03,  ..., 9.9966e-01,
          9.9787e-01, 7.6535e-04],
         [4.7081e-05, 9.9809e-01, 9.9515e-01,  ..., 1.1472e-04,
          7.1006e-04, 7.6535e-04]],
        [[9.9960e-01, 3.5146e-04, 2.1829e-04,  ..., 2.3006e-05,
          1.9473e-02, 3.1714e-05],
         [1.3377e-04, 3.5146e-04, 2.1829e-04,  ..., 2.3006e-05,
          8.5119e-01, 3.1714e-05],
         [1.3377e-04, 3.5146e-04, 2.1829e-04,  ..., 9.9993e-01,
          7.2324e-02, 9.9990e-01],
         [1.3377e-04, 9.9895e-01, 9.9935e-01,  ..., 2.3006e-05,
          5.7017e-02, 3.1714e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.0350e-03, 7.4713e-05, 5.2538e-07,  ..., 7.1564e-03,
          1.2523e-03, 9.1842e-03],
         [2.0350e-03, 7.4713e-05, 5.2538e-07,  ..., 3.8907e-03,
          1.2523e-03, 5.8956e-03],
         [9.9389e-01, 7.4713e-05, 5.2538e-07,  ..., 9.8506e-01,
          1.2523e-03, 9.7775e-01],
         [2.0350e-03, 9.9978e-01, 1.0000e+00,  ..., 3.8907e-03,
          9.9624e-01, 7.1670e-03]],
        [[5.7253e-04, 2.2364e-03, 9.9988e-01,  ..., 6.2684e-04,
          9.9062e-01, 1.2127e-03],
         [5.7253e-04, 2.7648e-03, 3.8902e-05,  ..., 5.3087e-04,
          2.1432e-03, 1.2127e-03],
         [9.9828e-01, 2.2364e-03, 3.8902e-05,  ..., 5.3087e-04,
          2.1432e-03, 9.9636e-01],
         [5.7253e-04, 9.9276e-01, 3.8902e-05,  ..., 9.9831e-01,
          5.0923e-03, 1.2127e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 919:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 2.4737e-03, 1.0330e-03,  ..., 4.2028e-05,
          4.5522e-05, 9.9979e-01],
         [3.5745e-05, 2.4737e-03, 1.0330e-03,  ..., 4.2028e-05,
          4.5522e-05, 6.9741e-05],
         [3.5745e-05, 3.6620e-03, 1.0330e-03,  ..., 9.9987e-01,
          9.9986e-01, 6.9741e-05],
         [3.5745e-05, 9.9139e-01, 9.9690e-01,  ..., 4.2028e-05,
          4.5522e-05, 6.9741e-05]],
        [[9.9930e-01, 3.9092e-03, 6.2232e-04,  ..., 7.4588e-05,
          6.6416e-02, 2.4772e-04],
         [2.3487e-04, 3.6323e-03, 6.2232e-04,  ..., 7.4588e-05,
          8.1845e-01, 2.4772e-04],
         [2.3487e-04, 6.2463e-03, 6.2232e-04,  ..., 9.9978e-01,
          8.5415e-02, 9.9926e-01],
         [2.3487e-04, 9.8621e-01, 9.9813e-01,  ..., 7.4588e-05,
          2.9715e-02, 2.4772e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:53,237 [Process: 0] Synchronize training processes
2024-08-18 15:29:53,237 [Process: 0] Evaluating...
2024-08-18 15:29:53,239 [Process: 0] EPOCH 920:
2024-08-18 15:29:53,241 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.6053e-04, 2.7730e-04, 7.4773e-07,  ..., 1.4498e-03,
          3.4628e-04, 1.8501e-03],
         [2.6053e-04, 2.7730e-04, 7.4773e-07,  ..., 1.4498e-03,
          3.4628e-04, 1.8501e-03],
         [9.9922e-01, 2.7730e-04, 7.4773e-07,  ..., 9.9565e-01,
          3.4628e-04, 9.9445e-01],
         [2.6053e-04, 9.9917e-01, 1.0000e+00,  ..., 1.4498e-03,
          9.9896e-01, 1.8501e-03]],
        [[1.2677e-03, 8.1185e-04, 9.9775e-01,  ..., 2.2918e-04,
          9.8128e-01, 1.6956e-03],
         [1.2677e-03, 8.2348e-04, 7.4114e-04,  ..., 2.2918e-04,
          4.8178e-03, 1.6956e-03],
         [9.9620e-01, 8.1185e-04, 7.4114e-04,  ..., 2.2918e-04,
          4.8178e-03, 9.9491e-01],
         [1.2677e-03, 9.9755e-01, 7.6742e-04,  ..., 9.9931e-01,
          9.0850e-03, 1.6956e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 920:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9991e-01, 4.0030e-04, 1.5545e-03,  ..., 3.4255e-05,
          2.0247e-04, 9.9553e-01],
         [2.9304e-05, 4.0030e-04, 1.5545e-03,  ..., 3.4255e-05,
          2.0247e-04, 1.1231e-03],
         [2.9304e-05, 4.0030e-04, 1.5545e-03,  ..., 9.9990e-01,
          9.9939e-01, 2.2208e-03],
         [2.9304e-05, 9.9880e-01, 9.9534e-01,  ..., 3.4255e-05,
          2.0247e-04, 1.1231e-03]],
        [[9.9987e-01, 1.5973e-04, 7.1756e-04,  ..., 3.2962e-04,
          2.3277e-02, 8.7637e-05],
         [4.4947e-05, 1.5973e-04, 7.1756e-04,  ..., 3.2962e-04,
          6.3560e-01, 8.7637e-05],
         [4.4947e-05, 1.5973e-04, 7.1756e-04,  ..., 9.9901e-01,
          2.9557e-01, 9.9974e-01],
         [4.4947e-05, 9.9952e-01, 9.9785e-01,  ..., 3.2962e-04,
          4.5553e-02, 8.7637e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.2258e-04, 1.0885e-03, 2.0906e-07,  ..., 1.3370e-03,
          4.3207e-04, 4.2985e-04],
         [6.2258e-04, 2.2121e-03, 2.0906e-07,  ..., 1.3370e-03,
          4.3207e-04, 4.2985e-04],
         [9.9813e-01, 1.0885e-03, 2.0906e-07,  ..., 9.9599e-01,
          4.3207e-04, 9.9871e-01],
         [6.2258e-04, 9.9561e-01, 1.0000e+00,  ..., 1.3370e-03,
          9.9870e-01, 4.2985e-04]],
        [[2.8237e-03, 6.0161e-03, 9.9977e-01,  ..., 4.4082e-05,
          9.7306e-01, 4.4983e-04],
         [2.6667e-03, 3.1516e-03, 7.7560e-05,  ..., 4.4082e-05,
          6.0004e-03, 4.4983e-04],
         [9.9184e-01, 3.1516e-03, 7.7560e-05,  ..., 4.4082e-05,
          1.1793e-02, 9.9865e-01],
         [2.6667e-03, 9.8768e-01, 7.7560e-05,  ..., 9.9987e-01,
          9.1436e-03, 4.4983e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 921:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:54,372 [Process: 0] Synchronize training processes
2024-08-18 15:29:54,373 [Process: 0] Evaluating...
2024-08-18 15:29:54,374 [Process: 0] EPOCH 921:
2024-08-18 15:29:54,376 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:55,510 [Process: 0] Synchronize training processes
2024-08-18 15:29:55,511 [Process: 0] Evaluating...
2024-08-18 15:29:55,514 [Process: 0] EPOCH 922:
2024-08-18 15:29:55,516 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9996e-01, 3.5120e-04, 1.0173e-03,  ..., 1.2578e-04,
          6.2344e-05, 9.9766e-01],
         [1.4562e-05, 3.5120e-04, 1.0173e-03,  ..., 1.2578e-04,
          6.2344e-05, 7.7966e-04],
         [1.4562e-05, 3.5120e-04, 1.0173e-03,  ..., 9.9962e-01,
          9.9981e-01, 7.7966e-04],
         [1.4562e-05, 9.9895e-01, 9.9695e-01,  ..., 1.2578e-04,
          6.2344e-05, 7.7966e-04]],
        [[9.9967e-01, 8.8414e-04, 4.3470e-03,  ..., 5.4367e-05,
          9.7315e-03, 7.7047e-05],
         [1.0899e-04, 8.8414e-04, 3.8892e-03,  ..., 5.4367e-05,
          9.4771e-01, 7.7047e-05],
         [1.0899e-04, 8.8414e-04, 7.9781e-03,  ..., 9.9984e-01,
          2.3575e-02, 9.9977e-01],
         [1.0899e-04, 9.9735e-01, 9.8379e-01,  ..., 5.4367e-05,
          1.8983e-02, 7.7047e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[5.0991e-04, 2.5228e-05, 4.5544e-07,  ..., 1.4430e-03,
          7.4020e-04, 5.9249e-04],
         [5.0991e-04, 2.5228e-05, 4.5544e-07,  ..., 1.4430e-03,
          7.4020e-04, 5.9249e-04],
         [9.9847e-01, 2.5228e-05, 4.5544e-07,  ..., 9.9567e-01,
          7.4020e-04, 9.9822e-01],
         [5.0991e-04, 9.9992e-01, 1.0000e+00,  ..., 1.4430e-03,
          9.9778e-01, 5.9249e-04]],
        [[7.0736e-04, 1.4317e-03, 9.9916e-01,  ..., 2.6365e-05,
          9.4422e-01, 1.1296e-03],
         [7.0736e-04, 1.4317e-03, 2.4024e-04,  ..., 2.6365e-05,
          1.1635e-02, 1.1296e-03],
         [9.9788e-01, 1.4317e-03, 2.4024e-04,  ..., 2.6365e-05,
          1.2283e-02, 9.9661e-01],
         [7.0736e-04, 9.9570e-01, 3.6215e-04,  ..., 9.9992e-01,
          3.1857e-02, 1.1296e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 922:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9911e-01, 1.5157e-04, 1.2601e-03,  ..., 7.6892e-04,
          4.9711e-05, 9.9659e-01],
         [2.8389e-04, 1.5157e-04, 1.2601e-03,  ..., 7.6892e-04,
          4.9711e-05, 9.5736e-04],
         [2.8389e-04, 1.5157e-04, 1.2601e-03,  ..., 9.9769e-01,
          9.9985e-01, 1.4989e-03],
         [3.2671e-04, 9.9955e-01, 9.9622e-01,  ..., 7.6892e-04,
          4.9711e-05, 9.5736e-04]],
        [[9.9989e-01, 7.7580e-04, 7.1093e-04,  ..., 1.3052e-05,
          9.3041e-03, 3.6316e-05],
         [3.5558e-05, 7.7580e-04, 7.1093e-04,  ..., 1.3052e-05,
          8.6171e-01, 3.6316e-05],
         [3.5558e-05, 7.9557e-04, 7.1093e-04,  ..., 9.9996e-01,
          1.1968e-01, 9.9989e-01],
         [3.5558e-05, 9.9765e-01, 9.9787e-01,  ..., 1.3052e-05,
          9.3041e-03, 3.6316e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.2947e-03, 9.7329e-05, 3.4949e-05,  ..., 2.5312e-03,
          2.6559e-04, 8.7589e-04],
         [2.2947e-03, 9.7329e-05, 3.4949e-05,  ..., 2.5312e-03,
          2.6559e-04, 8.7589e-04],
         [9.9312e-01, 9.7329e-05, 3.4949e-05,  ..., 9.9241e-01,
          2.6559e-04, 9.9737e-01],
         [2.2947e-03, 9.9971e-01, 9.9990e-01,  ..., 2.5312e-03,
          9.9920e-01, 8.7589e-04]],
        [[1.3595e-03, 8.6481e-05, 9.9981e-01,  ..., 7.2993e-06,
          9.7641e-01, 7.5041e-04],
         [1.3595e-03, 8.6481e-05, 6.3130e-05,  ..., 7.2993e-06,
          4.9923e-03, 7.5041e-04],
         [9.9592e-01, 8.6481e-05, 6.3130e-05,  ..., 7.2993e-06,
          8.2931e-03, 9.9775e-01],
         [1.3595e-03, 9.9974e-01, 6.3130e-05,  ..., 9.9998e-01,
          1.0308e-02, 7.5041e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:56,672 [Process: 0] Synchronize training processes
2024-08-18 15:29:56,672 [Process: 0] Evaluating...
2024-08-18 15:29:56,674 [Process: 0] EPOCH 923:
2024-08-18 15:29:56,676 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:29:57,803 [Process: 0] Synchronize training processes
2024-08-18 15:29:57,803 [Process: 0] Evaluating...
2024-08-18 15:29:57,805 [Process: 0] EPOCH 924:
2024-08-18 15:29:57,807 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 923:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9994e-01, 3.5579e-04, 8.2097e-03,  ..., 4.1188e-04,
          3.2588e-05, 9.9893e-01],
         [1.9168e-05, 3.5579e-04, 5.7643e-03,  ..., 4.1188e-04,
          3.2588e-05, 3.5793e-04],
         [1.9168e-05, 3.5579e-04, 9.8436e-03,  ..., 9.9876e-01,
          9.9990e-01, 3.5793e-04],
         [1.9168e-05, 9.9893e-01, 9.7618e-01,  ..., 4.1188e-04,
          3.2588e-05, 3.5793e-04]],
        [[9.9994e-01, 1.6309e-04, 2.3937e-03,  ..., 1.5938e-04,
          1.7035e-04, 2.3483e-05],
         [2.0563e-05, 1.6309e-04, 2.3937e-03,  ..., 1.5938e-04,
          9.9949e-01, 2.3483e-05],
         [2.0563e-05, 1.6309e-04, 2.7879e-03,  ..., 9.9952e-01,
          1.7035e-04, 9.9993e-01],
         [2.0563e-05, 9.9951e-01, 9.9242e-01,  ..., 1.5938e-04,
          1.7035e-04, 2.3483e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.9867e-04, 3.3954e-05, 6.4465e-06,  ..., 4.5966e-04,
          6.7502e-04, 1.0185e-03],
         [4.9867e-04, 3.3954e-05, 6.4465e-06,  ..., 4.5966e-04,
          6.7502e-04, 1.0185e-03],
         [9.9850e-01, 3.3954e-05, 6.4465e-06,  ..., 9.9862e-01,
          6.7502e-04, 9.9694e-01],
         [4.9867e-04, 9.9990e-01, 9.9998e-01,  ..., 4.5966e-04,
          9.9797e-01, 1.0185e-03]],
        [[1.5006e-03, 5.3123e-04, 9.9913e-01,  ..., 2.1707e-04,
          9.7860e-01, 3.1615e-03],
         [1.3438e-03, 5.3123e-04, 2.9141e-04,  ..., 2.1707e-04,
          4.5394e-03, 3.1615e-03],
         [9.9581e-01, 5.3123e-04, 2.9141e-04,  ..., 2.1707e-04,
          4.5394e-03, 9.9052e-01],
         [1.3438e-03, 9.9841e-01, 2.9141e-04,  ..., 9.9935e-01,
          1.2319e-02, 3.1615e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 924:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9947e-01, 4.2873e-03, 5.4560e-04,  ..., 5.1868e-04,
          8.4655e-05, 9.9909e-01],
         [1.7779e-04, 3.7088e-03, 5.4560e-04,  ..., 5.1868e-04,
          8.4655e-05, 3.0282e-04],
         [1.7779e-04, 5.8575e-03, 5.4560e-04,  ..., 9.9844e-01,
          9.9975e-01, 3.0282e-04],
         [1.7779e-04, 9.8615e-01, 9.9836e-01,  ..., 5.1868e-04,
          8.4655e-05, 3.0282e-04]],
        [[9.9999e-01, 2.2116e-03, 4.1736e-04,  ..., 1.0711e-04,
          1.7679e-02, 5.2742e-05],
         [2.5038e-06, 2.2116e-03, 4.1736e-04,  ..., 1.0711e-04,
          9.2285e-01, 5.2742e-05],
         [2.5038e-06, 3.3790e-03, 4.1736e-04,  ..., 9.9968e-01,
          4.4373e-02, 9.9984e-01],
         [2.5038e-06, 9.9220e-01, 9.9875e-01,  ..., 1.0711e-04,
          1.5094e-02, 5.2742e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:29:58,935 [Process: 0] Synchronize training processes
2024-08-18 15:29:58,936 [Process: 0] Evaluating...
2024-08-18 15:29:58,937 [Process: 0] EPOCH 925:
2024-08-18 15:29:58,939 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:30:00,067 [Process: 0] Synchronize training processes
2024-08-18 15:30:00,067 [Process: 0] Evaluating...
2024-08-18 15:30:00,069 [Process: 0] EPOCH 926:
2024-08-18 15:30:00,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.8913e-03, 7.1751e-05, 2.6435e-04,  ..., 3.8639e-04,
          4.1842e-03, 1.8195e-03],
         [1.7990e-03, 7.1751e-05, 2.3598e-04,  ..., 3.8639e-04,
          2.2626e-03, 1.8195e-03],
         [9.9451e-01, 7.1751e-05, 2.3598e-04,  ..., 9.9884e-01,
          2.2626e-03, 9.9454e-01],
         [1.7990e-03, 9.9978e-01, 9.9926e-01,  ..., 3.8639e-04,
          9.9129e-01, 1.8195e-03]],
        [[4.6654e-03, 2.9270e-04, 9.9603e-01,  ..., 1.8980e-04,
          9.8711e-01, 9.0545e-04],
         [3.3660e-03, 2.9270e-04, 1.2941e-03,  ..., 1.8980e-04,
          2.9472e-03, 9.0545e-04],
         [9.8860e-01, 2.9270e-04, 1.3010e-03,  ..., 1.8980e-04,
          3.3166e-03, 9.9728e-01],
         [3.3660e-03, 9.9912e-01, 1.3743e-03,  ..., 9.9943e-01,
          6.6279e-03, 9.0545e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 925:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9989e-01, 5.6296e-04, 4.8353e-03,  ..., 2.7061e-04,
          3.0219e-04, 9.9758e-01],
         [3.0533e-05, 5.6296e-04, 4.8353e-03,  ..., 2.7061e-04,
          3.0219e-04, 6.5522e-04],
         [3.0533e-05, 5.6296e-04, 1.0781e-02,  ..., 9.9919e-01,
          9.9909e-01, 1.1133e-03],
         [4.5972e-05, 9.9831e-01, 9.7955e-01,  ..., 2.7061e-04,
          3.0219e-04, 6.5522e-04]],
        [[9.9998e-01, 2.0243e-03, 6.1666e-05,  ..., 2.2644e-05,
          1.4135e-04, 7.8703e-06],
         [7.0428e-06, 2.0243e-03, 6.1666e-05,  ..., 2.2644e-05,
          9.9958e-01, 7.8703e-06],
         [7.0428e-06, 2.0243e-03, 6.1666e-05,  ..., 9.9993e-01,
          1.4135e-04, 9.9998e-01],
         [7.0428e-06, 9.9393e-01, 9.9982e-01,  ..., 2.2644e-05,
          1.4135e-04, 7.8703e-06]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.4669e-03, 7.5975e-05, 1.9147e-07,  ..., 1.1010e-03,
          4.8273e-03, 2.2302e-03],
         [1.9769e-03, 7.5975e-05, 1.9147e-07,  ..., 1.1010e-03,
          3.6598e-03, 2.2302e-03],
         [9.9358e-01, 7.5975e-05, 1.9147e-07,  ..., 9.9670e-01,
          3.6598e-03, 9.9331e-01],
         [1.9769e-03, 9.9977e-01, 1.0000e+00,  ..., 1.1010e-03,
          9.8785e-01, 2.2302e-03]],
        [[4.1385e-03, 4.5521e-04, 9.9855e-01,  ..., 1.4401e-04,
          9.9448e-01, 9.9348e-04],
         [4.1385e-03, 4.5521e-04, 4.7013e-04,  ..., 1.4401e-04,
          1.6604e-03, 9.9348e-04],
         [9.8584e-01, 4.5521e-04, 4.7013e-04,  ..., 1.4401e-04,
          1.6604e-03, 9.9702e-01],
         [5.8799e-03, 9.9863e-01, 5.0559e-04,  ..., 9.9957e-01,
          2.1966e-03, 9.9348e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 926:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9940e-01, 6.3102e-04, 2.8601e-03,  ..., 6.0780e-05,
          1.3826e-04, 9.9943e-01],
         [2.0135e-04, 6.3102e-04, 2.8601e-03,  ..., 6.0780e-05,
          1.3826e-04, 1.5490e-04],
         [2.0135e-04, 6.3102e-04, 6.0055e-03,  ..., 9.9982e-01,
          9.9959e-01, 2.5962e-04],
         [2.0135e-04, 9.9811e-01, 9.8827e-01,  ..., 6.0780e-05,
          1.3826e-04, 1.5490e-04]],
        [[9.9827e-01, 1.3023e-03, 5.1481e-04,  ..., 1.9925e-05,
          5.4792e-03, 9.0506e-05],
         [5.7732e-04, 1.3023e-03, 5.1481e-04,  ..., 1.9925e-05,
          9.7307e-01, 9.0506e-05],
         [5.7732e-04, 1.3023e-03, 5.1481e-04,  ..., 9.9994e-01,
          1.5596e-02, 9.9973e-01],
         [5.7732e-04, 9.9609e-01, 9.9846e-01,  ..., 1.9925e-05,
          5.8513e-03, 9.0506e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:30:01,202 [Process: 0] Synchronize training processes
2024-08-18 15:30:01,203 [Process: 0] Evaluating...
2024-08-18 15:30:01,204 [Process: 0] EPOCH 927:
2024-08-18 15:30:01,206 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[2.7470e-04, 9.2323e-06, 4.7028e-06,  ..., 2.9817e-03,
          1.6424e-03, 5.7704e-04],
         [2.7470e-04, 9.2323e-06, 4.7028e-06,  ..., 2.6734e-03,
          1.6424e-03, 5.7704e-04],
         [9.9918e-01, 9.2323e-06, 4.7028e-06,  ..., 9.9167e-01,
          1.6424e-03, 9.9827e-01],
         [2.7470e-04, 9.9997e-01, 9.9999e-01,  ..., 2.6734e-03,
          9.9507e-01, 5.7704e-04]],
        [[8.8479e-04, 2.1475e-04, 9.9975e-01,  ..., 1.3481e-04,
          9.5878e-01, 4.7396e-04],
         [8.8479e-04, 2.1475e-04, 8.2747e-05,  ..., 1.3481e-04,
          8.3717e-03, 4.7396e-04],
         [9.9735e-01, 2.1475e-04, 8.2747e-05,  ..., 1.3481e-04,
          1.6484e-02, 9.9858e-01],
         [8.8479e-04, 9.9936e-01, 8.2747e-05,  ..., 9.9960e-01,
          1.6361e-02, 4.7396e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 927:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9996e-01, 1.6324e-03, 1.9190e-03,  ..., 1.5511e-04,
          1.1041e-04, 9.9523e-01],
         [1.3837e-05, 1.1148e-03, 1.7011e-03,  ..., 1.5511e-04,
          1.1041e-04, 1.0113e-03],
         [1.3837e-05, 1.1148e-03, 1.7011e-03,  ..., 9.9953e-01,
          9.9967e-01, 2.7488e-03],
         [1.3837e-05, 9.9614e-01, 9.9468e-01,  ..., 1.5511e-04,
          1.1041e-04, 1.0113e-03]],
        [[9.9875e-01, 1.3787e-03, 1.2666e-03,  ..., 4.7648e-05,
          3.1210e-04, 4.7726e-05],
         [3.6867e-04, 1.3787e-03, 1.2666e-03,  ..., 4.7648e-05,
          9.9866e-01, 4.7726e-05],
         [5.0800e-04, 1.3787e-03, 1.2666e-03,  ..., 9.9986e-01,
          3.1210e-04, 9.9986e-01],
         [3.6867e-04, 9.9586e-01, 9.9620e-01,  ..., 4.7648e-05,
          7.1685e-04, 4.7726e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1522e-03, 2.0739e-05, 3.9401e-07,  ..., 2.0950e-03,
          7.4925e-04, 2.0300e-03],
         [1.1522e-03, 2.0739e-05, 3.9401e-07,  ..., 2.0950e-03,
          7.4925e-04, 2.0300e-03],
         [9.9654e-01, 2.0739e-05, 3.9401e-07,  ..., 9.9371e-01,
          7.4925e-04, 9.9391e-01],
         [1.1522e-03, 9.9994e-01, 1.0000e+00,  ..., 2.0950e-03,
          9.9775e-01, 2.0300e-03]],
        [[3.2202e-03, 3.9471e-04, 9.9860e-01,  ..., 2.7484e-05,
          9.9060e-01, 1.7086e-03],
         [2.2805e-03, 3.8893e-04, 4.6747e-04,  ..., 2.7484e-05,
          2.7332e-03, 1.7086e-03],
         [9.9222e-01, 3.8893e-04, 4.6747e-04,  ..., 2.7484e-05,
          2.7332e-03, 9.9487e-01],
         [2.2805e-03, 9.9883e-01, 4.6747e-04,  ..., 9.9992e-01,
          3.9334e-03, 1.7086e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 928:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 15:30:02,334 [Process: 0] Synchronize training processes
2024-08-18 15:30:02,335 [Process: 0] Evaluating...
2024-08-18 15:30:02,336 [Process: 0] EPOCH 928:
2024-08-18 15:30:02,338 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:30:03,497 [Process: 0] Synchronize training processes
2024-08-18 15:30:03,498 [Process: 0] Evaluating...
2024-08-18 15:30:03,499 [Process: 0] EPOCH 929:
2024-08-18 15:30:03,501 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9968e-01, 7.0022e-04, 3.8040e-04,  ..., 2.1203e-05,
          2.2557e-05, 9.9783e-01],
         [1.0003e-04, 7.0022e-04, 3.8040e-04,  ..., 2.1203e-05,
          2.2557e-05, 6.0184e-04],
         [1.0003e-04, 7.0022e-04, 3.8040e-04,  ..., 9.9994e-01,
          9.9993e-01, 9.6156e-04],
         [1.1796e-04, 9.9790e-01, 9.9886e-01,  ..., 2.1203e-05,
          2.2557e-05, 6.0184e-04]],
        [[9.9974e-01, 1.2296e-03, 5.2785e-04,  ..., 8.2428e-05,
          1.6499e-03, 3.7571e-05],
         [8.8050e-05, 1.1448e-03, 5.2785e-04,  ..., 8.2428e-05,
          9.9429e-01, 3.7571e-05],
         [8.8050e-05, 1.1448e-03, 5.2785e-04,  ..., 9.9975e-01,
          2.4088e-03, 9.9989e-01],
         [8.8050e-05, 9.9648e-01, 9.9842e-01,  ..., 8.2428e-05,
          1.6499e-03, 3.7571e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6410e-03, 8.0162e-05, 1.6430e-06,  ..., 1.2470e-03,
          9.3724e-04, 4.3720e-03],
         [1.6410e-03, 8.0162e-05, 1.6430e-06,  ..., 1.2470e-03,
          9.3724e-04, 4.3708e-03],
         [9.9508e-01, 8.0162e-05, 1.6430e-06,  ..., 9.9626e-01,
          9.3724e-04, 9.8562e-01],
         [1.6410e-03, 9.9976e-01, 1.0000e+00,  ..., 1.2470e-03,
          9.9719e-01, 5.6412e-03]],
        [[2.8762e-03, 1.0185e-04, 9.9891e-01,  ..., 1.5186e-04,
          9.8899e-01, 8.4303e-04],
         [2.2672e-03, 1.0185e-04, 3.2658e-04,  ..., 1.5186e-04,
          2.5517e-03, 8.4303e-04],
         [9.9259e-01, 1.0185e-04, 3.2658e-04,  ..., 1.5186e-04,
          2.5517e-03, 9.9747e-01],
         [2.2672e-03, 9.9969e-01, 4.3481e-04,  ..., 9.9954e-01,
          5.9077e-03, 8.4303e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 929:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9949e-01, 8.1606e-04, 3.1040e-04,  ..., 1.5991e-04,
          8.0049e-05, 9.9926e-01],
         [1.5785e-04, 8.1606e-04, 3.1040e-04,  ..., 1.5991e-04,
          8.0049e-05, 2.4567e-04],
         [1.5785e-04, 8.1606e-04, 3.1040e-04,  ..., 9.9952e-01,
          9.9976e-01, 2.4567e-04],
         [1.9016e-04, 9.9755e-01, 9.9907e-01,  ..., 1.5991e-04,
          8.0049e-05, 2.4567e-04]],
        [[9.9998e-01, 7.7331e-04, 3.5139e-04,  ..., 3.6296e-04,
          2.5632e-05, 1.5896e-05],
         [5.5661e-06, 7.7331e-04, 3.5139e-04,  ..., 3.6296e-04,
          9.9992e-01, 1.5896e-05],
         [5.5661e-06, 7.7331e-04, 3.5139e-04,  ..., 9.9891e-01,
          2.5632e-05, 9.9995e-01],
         [5.5661e-06, 9.9768e-01, 9.9895e-01,  ..., 3.6296e-04,
          2.5632e-05, 1.5896e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.6756e-03, 6.5766e-06, 1.5241e-06,  ..., 1.1435e-03,
          9.5614e-05, 1.2754e-03],
         [1.6756e-03, 6.5766e-06, 1.5241e-06,  ..., 1.1435e-03,
          9.5614e-05, 1.2754e-03],
         [9.9497e-01, 6.5766e-06, 1.5241e-06,  ..., 9.9657e-01,
          9.5614e-05, 9.9617e-01],
         [1.6756e-03, 9.9998e-01, 1.0000e+00,  ..., 1.1435e-03,
          9.9971e-01, 1.2754e-03]],
        [[1.1568e-03, 1.8093e-04, 9.9923e-01,  ..., 9.8140e-05,
          9.7116e-01, 8.2889e-04],
         [1.1568e-03, 1.8093e-04, 2.5817e-04,  ..., 9.8140e-05,
          7.2657e-03, 8.2889e-04],
         [9.9653e-01, 1.8093e-04, 2.5817e-04,  ..., 9.8140e-05,
          1.2086e-02, 9.9751e-01],
         [1.1568e-03, 9.9946e-01, 2.5817e-04,  ..., 9.9971e-01,
          9.4888e-03, 8.2889e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 930:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:30:04,629 [Process: 0] Synchronize training processes
2024-08-18 15:30:04,630 [Process: 0] Evaluating...
2024-08-18 15:30:04,631 [Process: 0] EPOCH 930:
2024-08-18 15:30:04,633 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:30:05,753 [Process: 0] Synchronize training processes
2024-08-18 15:30:05,753 [Process: 0] Evaluating...
2024-08-18 15:30:05,755 [Process: 0] EPOCH 931:
2024-08-18 15:30:05,757 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9987e-01, 4.3996e-04, 3.8454e-04,  ..., 4.8572e-05,
          1.3412e-03, 9.9808e-01],
         [4.4754e-05, 4.2111e-04, 3.8454e-04,  ..., 4.8572e-05,
          1.3412e-03, 6.3345e-04],
         [4.4754e-05, 4.2111e-04, 3.8454e-04,  ..., 9.9985e-01,
          9.9598e-01, 6.5431e-04],
         [4.4754e-05, 9.9872e-01, 9.9885e-01,  ..., 4.8572e-05,
          1.3412e-03, 6.3345e-04]],
        [[9.9994e-01, 6.6826e-03, 7.4003e-04,  ..., 8.5119e-05,
          1.6206e-03, 1.5027e-05],
         [2.1148e-05, 4.5941e-03, 7.4003e-04,  ..., 8.5119e-05,
          9.9551e-01, 1.5027e-05],
         [2.1148e-05, 8.8422e-03, 7.4003e-04,  ..., 9.9974e-01,
          1.4355e-03, 9.9995e-01],
         [2.1148e-05, 9.7988e-01, 9.9778e-01,  ..., 8.5119e-05,
          1.4355e-03, 1.5027e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.1754e-03, 4.8653e-05, 4.0841e-05,  ..., 5.7213e-04,
          1.0154e-02, 7.9655e-04],
         [1.1754e-03, 4.8653e-05, 4.0841e-05,  ..., 5.7213e-04,
          4.9432e-03, 7.9655e-04],
         [9.9647e-01, 4.8653e-05, 4.0841e-05,  ..., 9.9828e-01,
          4.9432e-03, 9.9761e-01],
         [1.1754e-03, 9.9985e-01, 9.9988e-01,  ..., 5.7213e-04,
          9.7996e-01, 7.9655e-04]],
        [[8.3860e-04, 7.0225e-04, 9.9903e-01,  ..., 3.1666e-04,
          9.9023e-01, 1.0762e-03],
         [8.3860e-04, 7.2634e-04, 3.1293e-04,  ..., 3.1666e-04,
          2.2442e-03, 1.0762e-03],
         [9.9748e-01, 7.0225e-04, 3.1293e-04,  ..., 3.1666e-04,
          2.4854e-03, 9.9677e-01],
         [8.3860e-04, 9.9787e-01, 3.4601e-04,  ..., 9.9905e-01,
          5.0359e-03, 1.0762e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 931:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9993e-01, 1.3606e-03, 7.8960e-04,  ..., 7.2210e-05,
          2.0232e-04, 9.9779e-01],
         [2.2530e-05, 1.3606e-03, 7.8960e-04,  ..., 7.2210e-05,
          2.0232e-04, 7.0608e-04],
         [2.2530e-05, 1.5213e-03, 7.8960e-04,  ..., 9.9978e-01,
          9.9939e-01, 8.0212e-04],
         [2.2530e-05, 9.9576e-01, 9.9763e-01,  ..., 7.2210e-05,
          2.0232e-04, 7.0608e-04]],
        [[9.9974e-01, 6.0543e-04, 5.6272e-04,  ..., 2.1518e-05,
          2.7962e-04, 1.7455e-04],
         [8.7924e-05, 6.0543e-04, 5.6272e-04,  ..., 2.1518e-05,
          9.9912e-01, 1.7455e-04],
         [8.7924e-05, 6.0543e-04, 5.6272e-04,  ..., 9.9994e-01,
          3.2182e-04, 9.9948e-01],
         [8.7924e-05, 9.9818e-01, 9.9831e-01,  ..., 2.1518e-05,
          2.7962e-04, 1.7455e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
2024-08-18 15:30:06,877 [Process: 0] Synchronize training processes
2024-08-18 15:30:06,877 [Process: 0] Evaluating...
2024-08-18 15:30:06,881 [Process: 0] EPOCH 932:
2024-08-18 15:30:06,883 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:30:08,000 [Process: 0] Synchronize training processes
2024-08-18 15:30:08,000 [Process: 0] Evaluating...
2024-08-18 15:30:08,002 [Process: 0] EPOCH 933:
2024-08-18 15:30:08,003 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.4790e-03, 1.2171e-04, 4.1445e-06,  ..., 1.9486e-04,
          3.4279e-03, 8.7404e-04],
         [1.4790e-03, 1.2171e-04, 4.1445e-06,  ..., 1.9486e-04,
          3.4279e-03, 8.7404e-04],
         [9.9556e-01, 1.2171e-04, 4.1445e-06,  ..., 9.9942e-01,
          3.4279e-03, 9.9738e-01],
         [1.4790e-03, 9.9963e-01, 9.9999e-01,  ..., 1.9486e-04,
          9.8972e-01, 8.7404e-04]],
        [[3.5329e-03, 5.7415e-04, 9.9998e-01,  ..., 1.6777e-04,
          9.9543e-01, 9.4204e-04],
         [3.3229e-03, 5.7415e-04, 5.3576e-06,  ..., 1.6777e-04,
          1.2435e-03, 9.4204e-04],
         [9.8917e-01, 5.7415e-04, 5.3576e-06,  ..., 1.6777e-04,
          1.8663e-03, 9.9717e-01],
         [3.9753e-03, 9.9828e-01, 5.3576e-06,  ..., 9.9950e-01,
          1.4576e-03, 9.4204e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 932:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 2.3588e-04, 5.4246e-04,  ..., 6.3303e-05,
          4.7954e-05, 9.9535e-01],
         [5.0310e-05, 2.3588e-04, 5.4246e-04,  ..., 6.3303e-05,
          4.7954e-05, 2.0956e-03],
         [5.0310e-05, 2.3588e-04, 5.4246e-04,  ..., 9.9981e-01,
          9.9986e-01, 1.2768e-03],
         [5.0310e-05, 9.9929e-01, 9.9837e-01,  ..., 6.3303e-05,
          4.7954e-05, 1.2768e-03]],
        [[9.9989e-01, 7.3457e-04, 4.7048e-04,  ..., 8.2344e-04,
          1.5581e-03, 9.9898e-04],
         [3.7574e-05, 7.3457e-04, 4.7048e-04,  ..., 8.1629e-04,
          9.9512e-01, 9.9898e-04],
         [3.7574e-05, 7.3457e-04, 4.7048e-04,  ..., 9.9754e-01,
          1.7680e-03, 9.9700e-01],
         [3.7574e-05, 9.9780e-01, 9.9859e-01,  ..., 8.1629e-04,
          1.5581e-03, 9.9898e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[6.9832e-03, 1.4731e-05, 2.6391e-03,  ..., 2.9331e-02,
          9.0808e-04, 2.0942e-03],
         [5.1190e-03, 1.4731e-05, 1.8031e-03,  ..., 9.7712e-03,
          9.0808e-04, 2.0942e-03],
         [9.8178e-01, 1.4731e-05, 1.8031e-03,  ..., 9.4950e-01,
          9.0808e-04, 9.9372e-01],
         [6.1216e-03, 9.9996e-01, 9.9375e-01,  ..., 1.1395e-02,
          9.9728e-01, 2.0942e-03]],
        [[2.0796e-03, 5.5341e-04, 9.9974e-01,  ..., 3.2532e-05,
          9.8809e-01, 1.7031e-03],
         [1.7919e-03, 5.5341e-04, 8.6528e-05,  ..., 3.2532e-05,
          2.7459e-03, 1.7031e-03],
         [9.9434e-01, 5.5341e-04, 8.6528e-05,  ..., 3.2532e-05,
          5.5713e-03, 9.9489e-01],
         [1.7919e-03, 9.9834e-01, 8.6528e-05,  ..., 9.9990e-01,
          3.5886e-03, 1.7031e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 933:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9978e-01, 8.3848e-03, 1.8745e-03,  ..., 4.1772e-05,
          5.3612e-05, 9.9129e-01],
         [6.9999e-05, 6.2308e-03, 1.8745e-03,  ..., 4.1772e-05,
          5.3612e-05, 2.7237e-03],
         [6.9999e-05, 1.1149e-02, 2.2198e-03,  ..., 9.9987e-01,
          9.9984e-01, 3.3419e-03],
         [8.1249e-05, 9.7424e-01, 9.9403e-01,  ..., 4.1772e-05,
          5.3612e-05, 2.6416e-03]],
        [[9.9854e-01, 1.0969e-03, 3.1639e-03,  ..., 1.4970e-05,
          1.6022e-04, 3.7459e-05],
         [4.8735e-04, 1.0969e-03, 3.1639e-03,  ..., 1.4970e-05,
          9.9952e-01, 3.7459e-05],
         [4.8735e-04, 1.0969e-03, 4.9607e-03,  ..., 9.9996e-01,
          1.6022e-04, 9.9989e-01],
         [4.8735e-04, 9.9671e-01, 9.8871e-01,  ..., 1.4970e-05,
          1.6022e-04, 3.7459e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:30:09,128 [Process: 0] Synchronize training processes
2024-08-18 15:30:09,128 [Process: 0] Evaluating...
2024-08-18 15:30:09,130 [Process: 0] EPOCH 934:
2024-08-18 15:30:09,131 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:30:10,256 [Process: 0] Synchronize training processes
2024-08-18 15:30:10,257 [Process: 0] Evaluating...
2024-08-18 15:30:10,258 [Process: 0] EPOCH 935:
2024-08-18 15:30:10,260 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[3.4576e-03, 2.3263e-04, 1.3526e-06,  ..., 1.1746e-03,
          4.4794e-03, 1.5497e-03],
         [3.4576e-03, 2.3263e-04, 1.3526e-06,  ..., 1.1746e-03,
          3.4479e-03, 1.5497e-03],
         [9.8879e-01, 2.3263e-04, 1.3526e-06,  ..., 9.9648e-01,
          3.4479e-03, 9.9535e-01],
         [4.2956e-03, 9.9930e-01, 1.0000e+00,  ..., 1.1746e-03,
          9.8862e-01, 1.5497e-03]],
        [[2.8394e-03, 4.8169e-05, 9.9840e-01,  ..., 3.0008e-04,
          9.9843e-01, 6.9957e-04],
         [2.8394e-03, 4.8169e-05, 5.0272e-04,  ..., 3.0008e-04,
          4.4376e-04, 6.9957e-04],
         [9.9123e-01, 4.8169e-05, 5.0272e-04,  ..., 3.0008e-04,
          4.4376e-04, 9.9790e-01],
         [3.0864e-03, 9.9986e-01, 5.9429e-04,  ..., 9.9910e-01,
          6.8315e-04, 6.9957e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 934:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9999e-01, 6.0243e-04, 2.0550e-03,  ..., 7.7017e-05,
          6.3173e-05, 9.9867e-01],
         [4.1904e-06, 6.0243e-04, 1.6743e-03,  ..., 7.7017e-05,
          6.3173e-05, 4.2394e-04],
         [4.1904e-06, 6.0243e-04, 1.6743e-03,  ..., 9.9977e-01,
          9.9981e-01, 4.8247e-04],
         [4.1904e-06, 9.9819e-01, 9.9460e-01,  ..., 7.7017e-05,
          6.3173e-05, 4.2394e-04]],
        [[9.9997e-01, 1.1899e-03, 2.9657e-04,  ..., 3.3137e-05,
          6.0672e-03, 2.2755e-04],
         [9.6383e-06, 1.1899e-03, 2.9657e-04,  ..., 3.3137e-05,
          9.8434e-01, 2.2755e-04],
         [9.6383e-06, 1.1899e-03, 2.9657e-04,  ..., 9.9990e-01,
          5.8588e-03, 9.9932e-01],
         [9.6383e-06, 9.9643e-01, 9.9911e-01,  ..., 3.3137e-05,
          3.7313e-03, 2.2755e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[1.3309e-03, 2.8010e-05, 8.9982e-06,  ..., 5.1212e-04,
          5.5872e-04, 6.4639e-04],
         [1.3309e-03, 2.8010e-05, 8.9982e-06,  ..., 5.1212e-04,
          5.5872e-04, 6.4639e-04],
         [9.9601e-01, 2.8010e-05, 8.9982e-06,  ..., 9.9846e-01,
          5.5872e-04, 9.9806e-01],
         [1.3309e-03, 9.9992e-01, 9.9997e-01,  ..., 5.1212e-04,
          9.9832e-01, 6.4639e-04]],
        [[2.4860e-03, 6.6750e-05, 9.9854e-01,  ..., 2.7498e-05,
          9.8893e-01, 1.0721e-03],
         [2.4860e-03, 6.6750e-05, 4.8791e-04,  ..., 2.7498e-05,
          2.4110e-03, 1.0721e-03],
         [9.9254e-01, 6.6750e-05, 4.8791e-04,  ..., 2.7498e-05,
          4.8866e-03, 9.9678e-01],
         [2.4860e-03, 9.9980e-01, 4.8791e-04,  ..., 9.9992e-01,
          3.7717e-03, 1.0721e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 935:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9987e-01, 3.5629e-03, 3.7158e-03,  ..., 5.4117e-05,
          4.2534e-05, 9.9990e-01],
         [4.2289e-05, 2.7257e-03, 2.7164e-03,  ..., 5.4117e-05,
          4.2534e-05, 3.4145e-05],
         [4.2289e-05, 2.7257e-03, 2.7164e-03,  ..., 9.9984e-01,
          9.9987e-01, 3.4145e-05],
         [4.2289e-05, 9.9099e-01, 9.9085e-01,  ..., 5.4117e-05,
          4.2534e-05, 3.4145e-05]],
        [[9.9983e-01, 1.4086e-03, 5.7733e-04,  ..., 3.6592e-05,
          6.0846e-03, 9.5626e-05],
         [5.6185e-05, 1.4086e-03, 5.7733e-04,  ..., 3.6592e-05,
          9.8823e-01, 9.5626e-05],
         [5.6185e-05, 1.4086e-03, 5.7733e-04,  ..., 9.9989e-01,
          2.8403e-03, 9.9971e-01],
         [5.6185e-05, 9.9577e-01, 9.9827e-01,  ..., 3.6592e-05,
          2.8403e-03, 9.5626e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
2024-08-18 15:30:11,387 [Process: 0] Synchronize training processes
2024-08-18 15:30:11,388 [Process: 0] Evaluating...
2024-08-18 15:30:11,390 [Process: 0] EPOCH 936:
2024-08-18 15:30:11,391 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[4.2957e-04, 8.3771e-05, 9.3517e-07,  ..., 7.1911e-04,
          8.5616e-04, 4.3739e-03],
         [4.2957e-04, 8.3771e-05, 9.3517e-07,  ..., 7.1911e-04,
          8.5616e-04, 3.6201e-03],
         [9.9871e-01, 8.3771e-05, 9.3517e-07,  ..., 9.9784e-01,
          8.5616e-04, 9.8839e-01],
         [4.2957e-04, 9.9975e-01, 1.0000e+00,  ..., 7.1911e-04,
          9.9743e-01, 3.6201e-03]],
        [[8.1482e-03, 8.3061e-04, 9.9990e-01,  ..., 3.5857e-04,
          9.7481e-01, 2.2312e-03],
         [4.3967e-03, 8.3061e-04, 3.3260e-05,  ..., 3.5857e-04,
          5.1090e-03, 2.2312e-03],
         [9.8306e-01, 8.3061e-04, 3.3260e-05,  ..., 3.5857e-04,
          6.6048e-03, 9.9331e-01],
         [4.3967e-03, 9.9751e-01, 3.3260e-05,  ..., 9.9892e-01,
          1.3481e-02, 2.2312e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 936:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9985e-01, 2.9857e-04, 1.6112e-04,  ..., 1.4926e-04,
          5.2882e-05, 9.9715e-01],
         [4.8712e-05, 2.9857e-04, 1.6112e-04,  ..., 1.4926e-04,
          5.2882e-05, 9.4944e-04],
         [4.8712e-05, 2.9857e-04, 1.6112e-04,  ..., 9.9955e-01,
          9.9984e-01, 9.4944e-04],
         [4.8712e-05, 9.9910e-01, 9.9952e-01,  ..., 1.4926e-04,
          5.2882e-05, 9.4944e-04]],
        [[9.9950e-01, 1.2065e-03, 8.8990e-04,  ..., 2.0646e-05,
          1.2859e-03, 1.9059e-04],
         [1.6785e-04, 1.2065e-03, 8.8990e-04,  ..., 2.0646e-05,
          9.9567e-01, 1.9059e-04],
         [1.6785e-04, 1.2065e-03, 8.8990e-04,  ..., 9.9994e-01,
          1.6011e-03, 9.9943e-01],
         [1.6785e-04, 9.9638e-01, 9.9733e-01,  ..., 2.0646e-05,
          1.4474e-03, 1.9059e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[8.5590e-04, 2.6328e-06, 1.5990e-04,  ..., 4.6589e-03,
          1.4564e-03, 1.7712e-03],
         [8.5590e-04, 2.6328e-06, 1.5990e-04,  ..., 3.7162e-03,
          1.4564e-03, 1.7712e-03],
         [9.9743e-01, 2.6328e-06, 1.5990e-04,  ..., 9.8772e-01,
          1.4564e-03, 9.9469e-01],
         [8.5590e-04, 9.9999e-01, 9.9952e-01,  ..., 3.9036e-03,
          9.9563e-01, 1.7712e-03]],
        [[1.0340e-03, 1.7622e-04, 9.9950e-01,  ..., 3.5482e-04,
          9.6094e-01, 8.1408e-04],
         [1.0340e-03, 1.7622e-04, 1.6657e-04,  ..., 3.5482e-04,
          1.1662e-02, 8.1408e-04],
         [9.9690e-01, 1.7622e-04, 1.6657e-04,  ..., 3.5482e-04,
          1.8238e-02, 9.9756e-01],
         [1.0340e-03, 9.9947e-01, 1.6657e-04,  ..., 9.9894e-01,
          9.1632e-03, 8.1408e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 937:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 15:30:12,521 [Process: 0] Synchronize training processes
2024-08-18 15:30:12,521 [Process: 0] Evaluating...
2024-08-18 15:30:12,523 [Process: 0] EPOCH 937:
2024-08-18 15:30:12,525 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 55, in is_yellow
    return (color[0] > 1 - tolerance and color[1] > 1 - tolerance and color[2] < tolerance)
KeyboardInterrupt
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 256])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 256, 3])
-----align shape: torch.Size([2, 16, 256])
------x shape: torch.Size([2, 35, 256])
------fusion x shape: torch.Size([2, 4, 256])
------target shape: torch.Size([2, 256, 4])
tensor([[[9.9868e-01, 6.1283e-04, 4.0360e-05,  ..., 3.2984e-05,
          1.5691e-04, 9.9656e-01],
         [4.8544e-04, 6.1283e-04, 4.0360e-05,  ..., 3.2984e-05,
          1.5691e-04, 6.7883e-04],
         [4.1793e-04, 6.1283e-04, 4.0360e-05,  ..., 9.9990e-01,
          9.9953e-01, 2.0817e-03],
         [4.1793e-04, 9.9816e-01, 9.9988e-01,  ..., 3.2984e-05,
          1.5691e-04, 6.7883e-04]],
        [[9.7996e-01, 1.1385e-03, 1.0920e-03,  ..., 2.6840e-05,
          8.8192e-03, 2.9274e-05],
         [5.0281e-03, 1.1385e-03, 1.0920e-03,  ..., 2.6840e-05,
          9.5545e-01, 2.9274e-05],
         [9.9802e-03, 1.1385e-03, 1.0920e-03,  ..., 9.9992e-01,
          2.6327e-02, 9.9991e-01],
         [5.0281e-03, 9.9658e-01, 9.9672e-01,  ..., 2.6840e-05,
          9.4057e-03, 2.9274e-05]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 256])
mask shape: torch.Size([2, 256, 4])