2024-08-16 16:26:56,535 [Worker 0] Is distributed: False
2024-08-16 16:26:56,536 [Process: 0] Starting training
2024-08-16 16:26:56,536 [Process: 0] EPOCH 1:
2024-08-16 16:26:56,539 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 4.3354e-01,
          2.0620e-01, 4.5928e-01],
         [2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 3.0070e-01,
          2.0620e-01, 1.8024e-01],
         [2.8603e-01, 6.5663e-01, 2.5000e-01,  ..., 1.3288e-01,
          3.8139e-01, 1.8024e-01],
         [2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 1.3288e-01,
          2.0620e-01, 1.8024e-01]],
        [[1.6186e-01, 4.9629e-01, 1.0041e-05,  ..., 2.4907e-01,
          3.8768e-01, 2.1944e-01],
         [1.5479e-01, 1.4618e-01, 3.8744e-04,  ..., 4.6661e-01,
          3.1204e-01, 3.4169e-01],
         [5.2856e-01, 2.2366e-01, 9.9488e-01,  ..., 1.1604e-01,
          1.5014e-01, 2.1944e-01],
         [1.5479e-01, 1.3387e-01, 4.7246e-03,  ..., 1.6828e-01,
          1.5014e-01, 2.1944e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:26:59,239 [Process: 0] Synchronize training processes
2024-08-16 16:26:59,239 [Process: 0] Evaluating...
2024-08-16 16:26:59,247 [Process: 0] EPOCH 2:
2024-08-16 16:26:59,249 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0848e-04, 1.7321e-01, 1.1641e-01,  ..., 2.4386e-01,
          3.0193e-01, 2.0893e-01],
         [1.0848e-04, 3.9852e-01, 1.1641e-01,  ..., 2.4386e-01,
          1.9545e-01, 2.4227e-01],
         [9.9967e-01, 2.6998e-01, 6.5076e-01,  ..., 2.4386e-01,
          1.6942e-01, 2.0893e-01],
         [1.0848e-04, 1.5828e-01, 1.1641e-01,  ..., 2.6842e-01,
          3.3320e-01, 3.3988e-01]],
        [[5.6983e-03, 1.9652e-01, 4.8882e-02,  ..., 2.2771e-01,
          3.0531e-01, 2.6375e-01],
         [5.6983e-03, 2.4015e-01, 4.8882e-02,  ..., 2.2771e-01,
          2.8764e-01, 2.3248e-01],
         [9.8291e-01, 3.6681e-01, 8.5335e-01,  ..., 3.1686e-01,
          1.9143e-01, 2.8069e-01],
         [5.6983e-03, 1.9652e-01, 4.8882e-02,  ..., 2.2771e-01,
          2.1563e-01, 2.2308e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2905, 0.1849, 0.3297,  ..., 0.3294, 0.2127, 0.2425],
         [0.3454, 0.1849, 0.3453,  ..., 0.2235, 0.2042, 0.2080],
         [0.1820, 0.1849, 0.1625,  ..., 0.2235, 0.2042, 0.2065],
         [0.1820, 0.4453, 0.1625,  ..., 0.2235, 0.3789, 0.3429]],
        [[0.2638, 0.2512, 0.2763,  ..., 0.3430, 0.2198, 0.2339],
         [0.3730, 0.3131, 0.2455,  ..., 0.2190, 0.2014, 0.2047],
         [0.1816, 0.2178, 0.2312,  ..., 0.2190, 0.2014, 0.2047],
         [0.1816, 0.2178, 0.2469,  ..., 0.2190, 0.3774, 0.3567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:01,259 [Process: 0] Synchronize training processes
2024-08-16 16:27:01,259 [Process: 0] Evaluating...
2024-08-16 16:27:01,261 [Process: 0] EPOCH 3:
2024-08-16 16:27:01,263 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1891, 0.1860, 0.1907,  ..., 0.1817, 0.1852, 0.2110],
         [0.1891, 0.1860, 0.1907,  ..., 0.1817, 0.1852, 0.2110],
         [0.1891, 0.1860, 0.1907,  ..., 0.1817, 0.1852, 0.2110],
         [0.4326, 0.4421, 0.4280,  ..., 0.4549, 0.4443, 0.3669]],
        [[0.3742, 0.1921, 0.3031,  ..., 0.3293, 0.1735, 0.1750],
         [0.2247, 0.1921, 0.1740,  ..., 0.2660, 0.1735, 0.2033],
         [0.2006, 0.1921, 0.3577,  ..., 0.2024, 0.1735, 0.1750],
         [0.2006, 0.4236, 0.1652,  ..., 0.2024, 0.4794, 0.4468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1496, 0.3323, 0.1737,  ..., 0.1686, 0.2955, 0.3434],
         [0.1503, 0.2670, 0.1932,  ..., 0.1714, 0.2608, 0.2458],
         [0.1496, 0.2340, 0.1737,  ..., 0.1686, 0.2218, 0.2271],
         [0.5505, 0.1666, 0.4594,  ..., 0.4915, 0.2218, 0.1837]],
        [[0.1800, 0.1390, 0.1773,  ..., 0.2379, 0.2767, 0.2500],
         [0.1800, 0.1403, 0.1776,  ..., 0.2379, 0.2411, 0.2500],
         [0.1800, 0.1390, 0.1773,  ..., 0.2379, 0.2411, 0.2500],
         [0.4599, 0.5818, 0.4679,  ..., 0.2864, 0.2411, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:03,313 [Process: 0] Synchronize training processes
2024-08-16 16:27:03,313 [Process: 0] Evaluating...
2024-08-16 16:27:03,315 [Process: 0] EPOCH 4:
2024-08-16 16:27:03,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1702, 0.1574, 0.1663,  ..., 0.1949, 0.3295, 0.1600],
         [0.1791, 0.1732, 0.1801,  ..., 0.2075, 0.2914, 0.1668],
         [0.1702, 0.1542, 0.1663,  ..., 0.1949, 0.1895, 0.1600],
         [0.4806, 0.5151, 0.4872,  ..., 0.4028, 0.1895, 0.5133]],
        [[0.1547, 0.2500, 0.1724,  ..., 0.2766, 0.3521, 0.2163],
         [0.1587, 0.2500, 0.1846,  ..., 0.2540, 0.2841, 0.2277],
         [0.1547, 0.2500, 0.1724,  ..., 0.2347, 0.1819, 0.2163],
         [0.5318, 0.2500, 0.4706,  ..., 0.2347, 0.1819, 0.3397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2562, 0.2494, 0.1637,  ..., 0.2771, 0.1839, 0.2332],
         [0.2781, 0.2668, 0.1606,  ..., 0.2780, 0.1820, 0.2462],
         [0.2329, 0.2419, 0.1664,  ..., 0.2224, 0.1820, 0.2301],
         [0.2329, 0.2419, 0.5093,  ..., 0.2224, 0.4522, 0.2905]],
        [[0.1485, 0.1570, 0.1733,  ..., 0.2847, 0.3178, 0.1805],
         [0.1441, 0.1533, 0.1733,  ..., 0.2758, 0.3356, 0.1643],
         [0.1491, 0.1533, 0.1733,  ..., 0.2197, 0.1733, 0.1643],
         [0.5583, 0.5364, 0.4802,  ..., 0.2197, 0.1733, 0.4908]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:05,404 [Process: 0] Synchronize training processes
2024-08-16 16:27:05,404 [Process: 0] Evaluating...
2024-08-16 16:27:05,406 [Process: 0] EPOCH 5:
2024-08-16 16:27:05,408 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1582, 0.2427, 0.2602,  ..., 0.2458, 0.2437, 0.2048],
         [0.1355, 0.2821, 0.2659,  ..., 0.2626, 0.2710, 0.1926],
         [0.1355, 0.2376, 0.2369,  ..., 0.2458, 0.2427, 0.1756],
         [0.5708, 0.2376, 0.2369,  ..., 0.2458, 0.2427, 0.4269]],
        [[0.1356, 0.1535, 0.1555,  ..., 0.2661, 0.1290, 0.1098],
         [0.1270, 0.1535, 0.1448,  ..., 0.2835, 0.1290, 0.1057],
         [0.1270, 0.1535, 0.1448,  ..., 0.2252, 0.6129, 0.1057],
         [0.6105, 0.5395, 0.5549,  ..., 0.2252, 0.1290, 0.6789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1778, 0.1617, 0.1812,  ..., 0.1965, 0.2539, 0.1768],
         [0.1735, 0.1456, 0.1676,  ..., 0.1969, 0.2560, 0.1688],
         [0.1609, 0.1438, 0.1646,  ..., 0.1868, 0.2451, 0.1620],
         [0.4879, 0.5490, 0.4866,  ..., 0.4198, 0.2451, 0.4925]],
        [[0.1203, 0.2612, 0.2473,  ..., 0.2562, 0.2562, 0.2657],
         [0.1171, 0.2723, 0.2580,  ..., 0.2773, 0.2680, 0.2589],
         [0.1171, 0.2332, 0.2473,  ..., 0.2333, 0.2379, 0.2377],
         [0.6455, 0.2332, 0.2473,  ..., 0.2333, 0.2379, 0.2377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:07,388 [Process: 0] Synchronize training processes
2024-08-16 16:27:07,388 [Process: 0] Evaluating...
2024-08-16 16:27:07,390 [Process: 0] EPOCH 6:
2024-08-16 16:27:07,392 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1387, 0.1310, 0.1548,  ..., 0.1778, 0.1279, 0.1731],
         [0.1402, 0.1310, 0.1554,  ..., 0.1745, 0.1304, 0.1740],
         [0.1305, 0.1310, 0.1510,  ..., 0.1745, 0.1239, 0.1730],
         [0.5906, 0.6071, 0.5388,  ..., 0.4732, 0.6179, 0.4799]],
        [[0.2637, 0.1594, 0.2700,  ..., 0.2144, 0.0510, 0.2688],
         [0.2614, 0.1598, 0.2777,  ..., 0.2144, 0.0510, 0.2630],
         [0.2375, 0.1559, 0.2261,  ..., 0.3568, 0.8470, 0.2341],
         [0.2375, 0.5250, 0.2261,  ..., 0.2144, 0.0510, 0.2341]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1511, 0.1497, 0.1431,  ..., 0.1438, 0.2562, 0.2849],
         [0.1580, 0.1509, 0.1431,  ..., 0.1438, 0.2515, 0.2755],
         [0.1511, 0.1497, 0.1431,  ..., 0.1438, 0.2462, 0.2198],
         [0.5398, 0.5497, 0.5706,  ..., 0.5686, 0.2462, 0.2198]],
        [[0.1671, 0.2500, 0.2500,  ..., 0.1513, 0.2561, 0.2505],
         [0.1671, 0.2500, 0.2500,  ..., 0.1575, 0.2480, 0.2498],
         [0.1671, 0.2500, 0.2500,  ..., 0.1513, 0.2480, 0.2498],
         [0.4986, 0.2500, 0.2500,  ..., 0.5398, 0.2480, 0.2498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:09,394 [Process: 0] Synchronize training processes
2024-08-16 16:27:09,395 [Process: 0] Evaluating...
2024-08-16 16:27:09,397 [Process: 0] EPOCH 7:
2024-08-16 16:27:09,399 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1752, 0.1610, 0.1458,  ..., 0.1864, 0.1599, 0.1415],
         [0.1774, 0.1610, 0.1458,  ..., 0.1864, 0.1704, 0.1415],
         [0.1752, 0.1610, 0.1458,  ..., 0.1864, 0.1545, 0.1415],
         [0.4722, 0.5170, 0.5627,  ..., 0.4408, 0.5152, 0.5755]],
        [[0.2713, 0.2500, 0.2806,  ..., 0.0098, 0.2366, 0.2663],
         [0.2563, 0.2500, 0.2552,  ..., 0.0098, 0.2366, 0.2470],
         [0.2362, 0.2500, 0.2321,  ..., 0.9707, 0.2901, 0.2434],
         [0.2362, 0.2500, 0.2321,  ..., 0.0098, 0.2366, 0.2434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1590, 0.1534, 0.1481,  ..., 0.1661, 0.1450, 0.1827],
         [0.1590, 0.1560, 0.1481,  ..., 0.1726, 0.1450, 0.1827],
         [0.1590, 0.1534, 0.1481,  ..., 0.1649, 0.1450, 0.1827],
         [0.5229, 0.5372, 0.5556,  ..., 0.4965, 0.5651, 0.4519]],
        [[0.1427, 0.1712, 0.2555,  ..., 0.2500, 0.2535, 0.2719],
         [0.1462, 0.1744, 0.2482,  ..., 0.2500, 0.2488, 0.2467],
         [0.1427, 0.1712, 0.2482,  ..., 0.2500, 0.2488, 0.2407],
         [0.5685, 0.4831, 0.2482,  ..., 0.2500, 0.2488, 0.2407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:11,412 [Process: 0] Synchronize training processes
2024-08-16 16:27:11,412 [Process: 0] Evaluating...
2024-08-16 16:27:11,414 [Process: 0] EPOCH 8:
2024-08-16 16:27:11,416 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8063e-01, 1.2815e-01, 1.7534e-01,  ..., 1.2724e-01,
          1.4571e-01, 1.3878e-01],
         [1.8063e-01, 1.2934e-01, 1.7863e-01,  ..., 1.2724e-01,
          1.4518e-01, 1.3878e-01],
         [1.8063e-01, 1.2815e-01, 1.7084e-01,  ..., 1.2724e-01,
          1.4518e-01, 1.3878e-01],
         [4.5812e-01, 6.1436e-01, 4.7520e-01,  ..., 6.1829e-01,
          5.6392e-01, 5.8366e-01]],
        [[2.6031e-01, 2.5000e-01, 2.4903e-01,  ..., 1.2671e-04,
          2.7424e-01, 2.5000e-01],
         [2.4656e-01, 2.5000e-01, 2.4903e-01,  ..., 1.2671e-04,
          2.7190e-01, 2.5000e-01],
         [2.4656e-01, 2.5000e-01, 2.5290e-01,  ..., 9.9960e-01,
          2.2693e-01, 2.5000e-01],
         [2.4656e-01, 2.5000e-01, 2.4903e-01,  ..., 1.4457e-04,
          2.2693e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1531, 0.1620, 0.1691,  ..., 0.1520, 0.1718, 0.1513],
         [0.1531, 0.1606, 0.1691,  ..., 0.1520, 0.1706, 0.1513],
         [0.1531, 0.1606, 0.1691,  ..., 0.1520, 0.1706, 0.1513],
         [0.5408, 0.5168, 0.4926,  ..., 0.5440, 0.4870, 0.5461]],
        [[0.1720, 0.1665, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.1720, 0.1654, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.1720, 0.1654, 0.2500,  ..., 0.2501, 0.2500, 0.2500],
         [0.4839, 0.5027, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:13,346 [Process: 0] Synchronize training processes
2024-08-16 16:27:13,346 [Process: 0] Evaluating...
2024-08-16 16:27:13,348 [Process: 0] EPOCH 9:
2024-08-16 16:27:13,350 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6933e-01, 1.3407e-01, 1.6587e-01,  ..., 1.5848e-01,
          1.4774e-01, 1.4226e-01],
         [1.6933e-01, 1.3407e-01, 1.6587e-01,  ..., 1.5815e-01,
          1.4774e-01, 1.4226e-01],
         [1.6933e-01, 1.3407e-01, 1.6587e-01,  ..., 1.5815e-01,
          1.4774e-01, 1.4226e-01],
         [4.9202e-01, 5.9778e-01, 5.0238e-01,  ..., 5.2523e-01,
          5.5678e-01, 5.7323e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.4189e-06,
          2.5000e-01, 2.4642e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.4189e-06,
          2.5000e-01, 2.4642e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9999e-01,
          2.5000e-01, 2.4642e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 2.4189e-06,
          2.5000e-01, 2.6074e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1441, 0.1687, 0.1518,  ..., 0.1384, 0.1678, 0.1584],
         [0.1441, 0.1686, 0.1518,  ..., 0.1384, 0.1678, 0.1570],
         [0.1441, 0.1686, 0.1518,  ..., 0.1384, 0.1678, 0.1570],
         [0.5676, 0.4941, 0.5445,  ..., 0.5848, 0.4967, 0.5276]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.1404, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.1379, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.1379, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.5838, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:15,378 [Process: 0] Synchronize training processes
2024-08-16 16:27:15,378 [Process: 0] Evaluating...
2024-08-16 16:27:15,380 [Process: 0] EPOCH 10:
2024-08-16 16:27:15,382 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7755e-01, 1.8755e-01, 1.4509e-01,  ..., 1.4978e-01,
          1.3270e-01, 1.5402e-01],
         [1.7755e-01, 1.8755e-01, 1.4509e-01,  ..., 1.4978e-01,
          1.3270e-01, 1.5402e-01],
         [1.7755e-01, 1.8755e-01, 1.4509e-01,  ..., 1.4978e-01,
          1.3270e-01, 1.5402e-01],
         [4.6734e-01, 4.3734e-01, 5.6472e-01,  ..., 5.5066e-01,
          6.0190e-01, 5.3794e-01]],
        [[2.5000e-01, 2.4989e-01, 2.4771e-01,  ..., 1.3956e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5033e-01, 2.4771e-01,  ..., 1.3956e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.4989e-01, 2.5686e-01,  ..., 9.9958e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.4989e-01, 2.4771e-01,  ..., 1.3956e-04,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1438, 0.1496, 0.1511,  ..., 0.1552, 0.2500, 0.2500],
         [0.1438, 0.1474, 0.1511,  ..., 0.1552, 0.2500, 0.2500],
         [0.1438, 0.1474, 0.1511,  ..., 0.1552, 0.2500, 0.2500],
         [0.5686, 0.5555, 0.5467,  ..., 0.5343, 0.2500, 0.2500]],
        [[0.1481, 0.1520, 0.2500,  ..., 0.1369, 0.2500, 0.1235],
         [0.1481, 0.1496, 0.2500,  ..., 0.1369, 0.2500, 0.1235],
         [0.1481, 0.1496, 0.2500,  ..., 0.1369, 0.2500, 0.1235],
         [0.5556, 0.5489, 0.2500,  ..., 0.5894, 0.2500, 0.6295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:17,434 [Process: 0] Synchronize training processes
2024-08-16 16:27:17,434 [Process: 0] Evaluating...
2024-08-16 16:27:17,436 [Process: 0] EPOCH 11:
2024-08-16 16:27:17,438 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6339e-01, 1.6918e-01, 1.4970e-01,  ..., 1.5720e-01,
          1.5442e-01, 1.6031e-01],
         [1.6339e-01, 1.6918e-01, 1.4970e-01,  ..., 1.5720e-01,
          1.5442e-01, 1.6031e-01],
         [1.6339e-01, 1.6918e-01, 1.4970e-01,  ..., 1.5720e-01,
          1.5442e-01, 1.6031e-01],
         [5.0984e-01, 4.9247e-01, 5.5089e-01,  ..., 5.2839e-01,
          5.3673e-01, 5.1906e-01]],
        [[2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.0197e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.0197e-04,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 9.9969e-01,
          2.5000e-01, 2.5000e-01],
         [2.5000e-01, 2.5000e-01, 2.5000e-01,  ..., 1.0197e-04,
          2.5000e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1541, 0.1415, 0.1550,  ..., 0.1593, 0.2500, 0.2500],
         [0.1541, 0.1415, 0.1550,  ..., 0.1593, 0.2500, 0.2500],
         [0.1541, 0.1415, 0.1550,  ..., 0.1593, 0.2500, 0.2500],
         [0.5376, 0.5756, 0.5351,  ..., 0.5221, 0.2500, 0.2500]],
        [[0.2500, 0.1313, 0.1697,  ..., 0.1684, 0.2500, 0.1883],
         [0.2500, 0.1313, 0.1697,  ..., 0.1684, 0.2500, 0.1883],
         [0.2500, 0.1313, 0.1697,  ..., 0.1684, 0.2500, 0.1883],
         [0.2500, 0.6060, 0.4908,  ..., 0.4948, 0.2500, 0.4350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:19,408 [Process: 0] Synchronize training processes
2024-08-16 16:27:19,409 [Process: 0] Evaluating...
2024-08-16 16:27:19,417 [Process: 0] EPOCH 12:
2024-08-16 16:27:19,419 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3952e-01, 1.5031e-01, 1.5727e-01,  ..., 1.7470e-01,
          1.6915e-01, 1.4974e-01],
         [1.3952e-01, 1.5031e-01, 1.5727e-01,  ..., 1.7455e-01,
          1.6915e-01, 1.4974e-01],
         [1.3952e-01, 1.5031e-01, 1.5727e-01,  ..., 1.7455e-01,
          1.6915e-01, 1.4974e-01],
         [5.8145e-01, 5.4906e-01, 5.2818e-01,  ..., 4.7621e-01,
          4.9256e-01, 5.5077e-01]],
        [[1.4252e-01, 1.5386e-01, 1.4723e-01,  ..., 5.9441e-04,
          2.5000e-01, 1.3461e-01],
         [1.4252e-01, 1.5386e-01, 1.4723e-01,  ..., 5.9441e-04,
          2.5000e-01, 1.3461e-01],
         [1.4252e-01, 1.5386e-01, 1.4723e-01,  ..., 9.9822e-01,
          2.5000e-01, 1.3461e-01],
         [5.7243e-01, 5.3843e-01, 5.5832e-01,  ..., 5.9441e-04,
          2.5000e-01, 5.9618e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1469, 0.1386, 0.1638,  ..., 0.2545, 0.2500, 0.2500],
         [0.1469, 0.1386, 0.1638,  ..., 0.2485, 0.2500, 0.2500],
         [0.1469, 0.1386, 0.1638,  ..., 0.2485, 0.2500, 0.2500],
         [0.5592, 0.5841, 0.5085,  ..., 0.2485, 0.2500, 0.2500]],
        [[0.1451, 0.1359, 0.1695,  ..., 0.1667, 0.2500, 0.1409],
         [0.1451, 0.1359, 0.1695,  ..., 0.1667, 0.2500, 0.1409],
         [0.1451, 0.1359, 0.1695,  ..., 0.1667, 0.2500, 0.1409],
         [0.5646, 0.5922, 0.4915,  ..., 0.4999, 0.2500, 0.5774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:21,398 [Process: 0] Synchronize training processes
2024-08-16 16:27:21,399 [Process: 0] Evaluating...
2024-08-16 16:27:21,401 [Process: 0] EPOCH 13:
2024-08-16 16:27:21,402 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3377e-01, 1.9139e-01, 1.6793e-01,  ..., 1.6092e-01,
          1.4434e-01, 1.5045e-01],
         [1.3377e-01, 1.9139e-01, 1.6793e-01,  ..., 1.6092e-01,
          1.4434e-01, 1.5045e-01],
         [1.3377e-01, 1.9139e-01, 1.6793e-01,  ..., 1.6092e-01,
          1.4434e-01, 1.5045e-01],
         [5.9868e-01, 4.2583e-01, 4.9622e-01,  ..., 5.1724e-01,
          5.6698e-01, 5.4864e-01]],
        [[1.8990e-01, 1.5490e-01, 1.5217e-01,  ..., 7.0435e-05,
          2.5000e-01, 1.5853e-01],
         [1.8990e-01, 1.5490e-01, 1.5217e-01,  ..., 7.0435e-05,
          2.5000e-01, 1.5853e-01],
         [1.8990e-01, 1.5490e-01, 1.5217e-01,  ..., 9.9979e-01,
          2.5000e-01, 1.5853e-01],
         [4.3031e-01, 5.3529e-01, 5.4348e-01,  ..., 7.0435e-05,
          2.5000e-01, 5.2442e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1520, 0.1743, 0.1572,  ..., 0.1656, 0.2500, 0.2500],
         [0.1520, 0.1743, 0.1572,  ..., 0.1656, 0.2500, 0.2500],
         [0.1520, 0.1743, 0.1572,  ..., 0.1656, 0.2500, 0.2500],
         [0.5440, 0.4770, 0.5283,  ..., 0.5031, 0.2500, 0.2500]],
        [[0.1388, 0.1529, 0.1680,  ..., 0.1533, 0.2500, 0.1454],
         [0.1388, 0.1529, 0.1680,  ..., 0.1533, 0.2500, 0.1454],
         [0.1388, 0.1529, 0.1680,  ..., 0.1533, 0.2500, 0.1454],
         [0.5837, 0.5413, 0.4959,  ..., 0.5400, 0.2500, 0.5639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:23,361 [Process: 0] Synchronize training processes
2024-08-16 16:27:23,361 [Process: 0] Evaluating...
2024-08-16 16:27:23,363 [Process: 0] EPOCH 14:
2024-08-16 16:27:23,365 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7835e-01, 1.8363e-01, 1.4697e-01,  ..., 1.6211e-01,
          1.4178e-01, 1.4772e-01],
         [1.7835e-01, 1.8363e-01, 1.4697e-01,  ..., 1.6211e-01,
          1.4178e-01, 1.4772e-01],
         [1.7835e-01, 1.8363e-01, 1.4697e-01,  ..., 1.6211e-01,
          1.4178e-01, 1.4772e-01],
         [4.6495e-01, 4.4910e-01, 5.5910e-01,  ..., 5.1366e-01,
          5.7467e-01, 5.5684e-01]],
        [[1.3181e-01, 1.6624e-01, 1.8829e-01,  ..., 3.4150e-04,
          2.5000e-01, 1.6352e-01],
         [1.3181e-01, 1.6624e-01, 1.8829e-01,  ..., 3.4150e-04,
          2.5000e-01, 1.6352e-01],
         [1.3181e-01, 1.6624e-01, 1.8829e-01,  ..., 9.9898e-01,
          2.5000e-01, 1.6352e-01],
         [6.0456e-01, 5.0127e-01, 4.3512e-01,  ..., 3.4150e-04,
          2.5000e-01, 5.0944e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1619, 0.1642, 0.1609,  ..., 0.1673, 0.2500, 0.2500],
         [0.1619, 0.1642, 0.1609,  ..., 0.1673, 0.2500, 0.2500],
         [0.1619, 0.1642, 0.1609,  ..., 0.1673, 0.2500, 0.2500],
         [0.5143, 0.5074, 0.5173,  ..., 0.4981, 0.2500, 0.2500]],
        [[0.1543, 0.1619, 0.1703,  ..., 0.1458, 0.2500, 0.1714],
         [0.1543, 0.1619, 0.1703,  ..., 0.1458, 0.2500, 0.1714],
         [0.1543, 0.1619, 0.1703,  ..., 0.1458, 0.2500, 0.1714],
         [0.5371, 0.5143, 0.4890,  ..., 0.5627, 0.2500, 0.4858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:25,318 [Process: 0] Synchronize training processes
2024-08-16 16:27:25,319 [Process: 0] Evaluating...
2024-08-16 16:27:25,321 [Process: 0] EPOCH 15:
2024-08-16 16:27:25,322 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1636, 0.1678, 0.1616,  ..., 0.1427, 0.1341, 0.1759],
         [0.1636, 0.1678, 0.1616,  ..., 0.1427, 0.1341, 0.1759],
         [0.1636, 0.1678, 0.1616,  ..., 0.1427, 0.1341, 0.1759],
         [0.5093, 0.4965, 0.5153,  ..., 0.5719, 0.5978, 0.4724]],
        [[0.1628, 0.1507, 0.1668,  ..., 0.0029, 0.2500, 0.1659],
         [0.1628, 0.1507, 0.1668,  ..., 0.0029, 0.2500, 0.1659],
         [0.1628, 0.1507, 0.1668,  ..., 0.9913, 0.2500, 0.1659],
         [0.5116, 0.5478, 0.4996,  ..., 0.0029, 0.2500, 0.5022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1702, 0.1432, 0.1549,  ..., 0.1564, 0.2500, 0.2500],
         [0.1702, 0.1432, 0.1549,  ..., 0.1564, 0.2500, 0.2500],
         [0.1702, 0.1432, 0.1549,  ..., 0.1564, 0.2500, 0.2500],
         [0.4894, 0.5703, 0.5353,  ..., 0.5308, 0.2500, 0.2500]],
        [[0.1456, 0.1532, 0.1670,  ..., 0.1511, 0.2500, 0.1446],
         [0.1456, 0.1532, 0.1670,  ..., 0.1511, 0.2500, 0.1446],
         [0.1456, 0.1532, 0.1670,  ..., 0.1511, 0.2500, 0.1446],
         [0.5631, 0.5404, 0.4989,  ..., 0.5468, 0.2500, 0.5663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:27,293 [Process: 0] Synchronize training processes
2024-08-16 16:27:27,294 [Process: 0] Evaluating...
2024-08-16 16:27:27,296 [Process: 0] EPOCH 16:
2024-08-16 16:27:27,298 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5423e-01, 1.3430e-01, 1.4928e-01,  ..., 1.5032e-01,
          1.7046e-01, 1.4959e-01],
         [1.5423e-01, 1.3430e-01, 1.4928e-01,  ..., 1.5032e-01,
          1.7046e-01, 1.4959e-01],
         [1.5423e-01, 1.3430e-01, 1.4928e-01,  ..., 1.5032e-01,
          1.7046e-01, 1.4959e-01],
         [5.3730e-01, 5.9711e-01, 5.5216e-01,  ..., 5.4905e-01,
          4.8863e-01, 5.5124e-01]],
        [[1.7651e-01, 1.5948e-01, 1.4346e-01,  ..., 6.7215e-04,
          2.5000e-01, 1.6354e-01],
         [1.7651e-01, 1.5948e-01, 1.4346e-01,  ..., 6.7215e-04,
          2.5000e-01, 1.6354e-01],
         [1.7651e-01, 1.5948e-01, 1.4346e-01,  ..., 9.9798e-01,
          2.5000e-01, 1.6354e-01],
         [4.7046e-01, 5.2157e-01, 5.6963e-01,  ..., 6.7215e-04,
          2.5000e-01, 5.0937e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1480, 0.1599, 0.1526,  ..., 0.1778, 0.2500, 0.2500],
         [0.1480, 0.1599, 0.1526,  ..., 0.1778, 0.2500, 0.2500],
         [0.1480, 0.1599, 0.1526,  ..., 0.1778, 0.2500, 0.2500],
         [0.5559, 0.5203, 0.5422,  ..., 0.4667, 0.2500, 0.2500]],
        [[0.1768, 0.1752, 0.1439,  ..., 0.1682, 0.2500, 0.1133],
         [0.1768, 0.1752, 0.1439,  ..., 0.1682, 0.2500, 0.1133],
         [0.1768, 0.1752, 0.1439,  ..., 0.1682, 0.2500, 0.1133],
         [0.4695, 0.4744, 0.5682,  ..., 0.4953, 0.2500, 0.6601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:29,274 [Process: 0] Synchronize training processes
2024-08-16 16:27:29,275 [Process: 0] Evaluating...
2024-08-16 16:27:29,277 [Process: 0] EPOCH 17:
2024-08-16 16:27:29,278 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5107e-01, 1.4803e-01, 1.5887e-01,  ..., 1.6615e-01,
          1.6120e-01, 1.5041e-01],
         [1.5107e-01, 1.4803e-01, 1.5887e-01,  ..., 1.6615e-01,
          1.6120e-01, 1.5041e-01],
         [1.5107e-01, 1.4803e-01, 1.5887e-01,  ..., 1.6615e-01,
          1.6120e-01, 1.5041e-01],
         [5.4680e-01, 5.5590e-01, 5.2339e-01,  ..., 5.0156e-01,
          5.1639e-01, 5.4876e-01]],
        [[1.6819e-01, 1.6894e-01, 1.5320e-01,  ..., 9.4572e-04,
          2.5000e-01, 1.2509e-01],
         [1.6819e-01, 1.6894e-01, 1.5320e-01,  ..., 9.4572e-04,
          2.5000e-01, 1.2509e-01],
         [1.6819e-01, 1.6894e-01, 1.5320e-01,  ..., 9.9716e-01,
          2.5000e-01, 1.2509e-01],
         [4.9542e-01, 4.9319e-01, 5.4040e-01,  ..., 9.4572e-04,
          2.5000e-01, 6.2474e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1578, 0.1659, 0.1453,  ..., 0.1648, 0.2500, 0.2500],
         [0.1578, 0.1659, 0.1453,  ..., 0.1648, 0.2500, 0.2500],
         [0.1578, 0.1659, 0.1453,  ..., 0.1648, 0.2500, 0.2500],
         [0.5265, 0.5023, 0.5642,  ..., 0.5057, 0.2500, 0.2500]],
        [[0.1493, 0.1709, 0.1382,  ..., 0.1468, 0.2500, 0.1289],
         [0.1493, 0.1709, 0.1382,  ..., 0.1468, 0.2500, 0.1289],
         [0.1493, 0.1709, 0.1382,  ..., 0.1468, 0.2500, 0.1289],
         [0.5520, 0.4872, 0.5855,  ..., 0.5595, 0.2500, 0.6134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:31,345 [Process: 0] Synchronize training processes
2024-08-16 16:27:31,346 [Process: 0] Evaluating...
2024-08-16 16:27:31,348 [Process: 0] EPOCH 18:
2024-08-16 16:27:31,349 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1827, 0.1462, 0.1677,  ..., 0.1696, 0.1558, 0.1517],
         [0.1827, 0.1462, 0.1677,  ..., 0.1696, 0.1558, 0.1517],
         [0.1827, 0.1462, 0.1677,  ..., 0.1696, 0.1558, 0.1517],
         [0.4518, 0.5613, 0.4968,  ..., 0.4911, 0.5326, 0.5449]],
        [[0.1734, 0.1632, 0.1567,  ..., 0.0016, 0.2500, 0.1472],
         [0.1734, 0.1632, 0.1567,  ..., 0.0016, 0.2500, 0.1472],
         [0.1734, 0.1632, 0.1567,  ..., 0.9952, 0.2500, 0.1472],
         [0.4799, 0.5104, 0.5299,  ..., 0.0016, 0.2500, 0.5584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1503, 0.1460, 0.1363,  ..., 0.1503, 0.2500, 0.2500],
         [0.1503, 0.1462, 0.1363,  ..., 0.1503, 0.2500, 0.2500],
         [0.1503, 0.1460, 0.1363,  ..., 0.1503, 0.2500, 0.2500],
         [0.5491, 0.5619, 0.5912,  ..., 0.5490, 0.2500, 0.2500]],
        [[0.1752, 0.1446, 0.1512,  ..., 0.1434, 0.2500, 0.1396],
         [0.1752, 0.1446, 0.1512,  ..., 0.1434, 0.2500, 0.1396],
         [0.1752, 0.1446, 0.1512,  ..., 0.1434, 0.2500, 0.1396],
         [0.4743, 0.5662, 0.5463,  ..., 0.5699, 0.2500, 0.5812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:33,310 [Process: 0] Synchronize training processes
2024-08-16 16:27:33,310 [Process: 0] Evaluating...
2024-08-16 16:27:33,312 [Process: 0] EPOCH 19:
2024-08-16 16:27:33,314 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7914e-01, 1.8337e-01, 1.7161e-01,  ..., 1.6709e-01,
          1.7326e-01, 1.5805e-01],
         [1.7914e-01, 1.8337e-01, 1.7161e-01,  ..., 1.6709e-01,
          1.7326e-01, 1.5805e-01],
         [1.7914e-01, 1.8337e-01, 1.7161e-01,  ..., 1.6709e-01,
          1.7326e-01, 1.5805e-01],
         [4.6258e-01, 4.4990e-01, 4.8516e-01,  ..., 4.9872e-01,
          4.8022e-01, 5.2584e-01]],
        [[1.4878e-01, 1.4671e-01, 1.7715e-01,  ..., 6.5746e-04,
          2.5000e-01, 9.7219e-02],
         [1.4878e-01, 1.4671e-01, 1.7715e-01,  ..., 6.5746e-04,
          2.5000e-01, 9.7219e-02],
         [1.4878e-01, 1.4671e-01, 1.7715e-01,  ..., 9.9803e-01,
          2.5000e-01, 9.7219e-02],
         [5.5366e-01, 5.5986e-01, 4.6854e-01,  ..., 6.5746e-04,
          2.5000e-01, 7.0834e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1458, 0.1647, 0.1374,  ..., 0.1439, 0.2500, 0.2500],
         [0.1458, 0.1647, 0.1374,  ..., 0.1439, 0.2500, 0.2500],
         [0.1458, 0.1647, 0.1374,  ..., 0.1439, 0.2500, 0.2500],
         [0.5627, 0.5058, 0.5878,  ..., 0.5684, 0.2500, 0.2500]],
        [[0.1524, 0.1575, 0.1588,  ..., 0.1549, 0.2500, 0.1470],
         [0.1524, 0.1575, 0.1588,  ..., 0.1549, 0.2500, 0.1470],
         [0.1524, 0.1575, 0.1588,  ..., 0.1549, 0.2500, 0.1470],
         [0.5427, 0.5275, 0.5235,  ..., 0.5353, 0.2500, 0.5591]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:35,228 [Process: 0] Synchronize training processes
2024-08-16 16:27:35,229 [Process: 0] Evaluating...
2024-08-16 16:27:35,231 [Process: 0] EPOCH 20:
2024-08-16 16:27:35,233 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1351, 0.1425, 0.1662,  ..., 0.1383, 0.1233, 0.1326],
         [0.1351, 0.1425, 0.1662,  ..., 0.1383, 0.1233, 0.1326],
         [0.1351, 0.1425, 0.1662,  ..., 0.1383, 0.1233, 0.1326],
         [0.5947, 0.5726, 0.5015,  ..., 0.5850, 0.6302, 0.6022]],
        [[0.1542, 0.1357, 0.1111,  ..., 0.0053, 0.2500, 0.0978],
         [0.1542, 0.1357, 0.1111,  ..., 0.0053, 0.2500, 0.0978],
         [0.1542, 0.1357, 0.1111,  ..., 0.9840, 0.2500, 0.0978],
         [0.5374, 0.5929, 0.6668,  ..., 0.0053, 0.2500, 0.7065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1347, 0.1086, 0.1406,  ..., 0.1312, 0.2500, 0.2500],
         [0.1347, 0.1086, 0.1406,  ..., 0.1312, 0.2500, 0.2500],
         [0.1347, 0.1086, 0.1406,  ..., 0.1312, 0.2500, 0.2500],
         [0.5960, 0.6743, 0.5781,  ..., 0.6064, 0.2500, 0.2500]],
        [[0.1486, 0.1451, 0.1654,  ..., 0.1405, 0.2500, 0.1334],
         [0.1486, 0.1451, 0.1654,  ..., 0.1405, 0.2500, 0.1334],
         [0.1486, 0.1451, 0.1654,  ..., 0.1405, 0.2500, 0.1334],
         [0.5543, 0.5647, 0.5039,  ..., 0.5785, 0.2500, 0.5999]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:37,165 [Process: 0] Synchronize training processes
2024-08-16 16:27:37,165 [Process: 0] Evaluating...
2024-08-16 16:27:37,167 [Process: 0] EPOCH 21:
2024-08-16 16:27:37,169 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5191e-01, 1.1881e-01, 1.3616e-01,  ..., 1.3589e-01,
          1.3981e-01, 1.3358e-01],
         [1.5191e-01, 1.1881e-01, 1.3616e-01,  ..., 1.3589e-01,
          1.3981e-01, 1.3358e-01],
         [1.5191e-01, 1.1881e-01, 1.3616e-01,  ..., 1.3589e-01,
          1.3981e-01, 1.3358e-01],
         [5.4428e-01, 6.4358e-01, 5.9151e-01,  ..., 5.9234e-01,
          5.8056e-01, 5.9927e-01]],
        [[1.3766e-01, 1.4603e-01, 1.4429e-01,  ..., 2.1699e-04,
          2.5000e-01, 1.0891e-01],
         [1.3766e-01, 1.4603e-01, 1.4429e-01,  ..., 2.1699e-04,
          2.5000e-01, 1.0891e-01],
         [1.3766e-01, 1.4603e-01, 1.4429e-01,  ..., 9.9935e-01,
          2.5000e-01, 1.0891e-01],
         [5.8701e-01, 5.6190e-01, 5.6712e-01,  ..., 2.1699e-04,
          2.5000e-01, 6.7328e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0940, 0.1096, 0.1235,  ..., 0.1051, 0.2528, 0.1176],
         [0.0940, 0.1096, 0.1235,  ..., 0.1051, 0.2491, 0.1176],
         [0.0940, 0.1096, 0.1235,  ..., 0.1051, 0.2491, 0.1176],
         [0.7180, 0.6713, 0.6296,  ..., 0.6848, 0.2491, 0.6471]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.1193, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.1193, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.1193, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.6422, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:39,081 [Process: 0] Synchronize training processes
2024-08-16 16:27:39,081 [Process: 0] Evaluating...
2024-08-16 16:27:39,089 [Process: 0] EPOCH 22:
2024-08-16 16:27:39,091 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2506e-01, 1.1773e-01, 1.1274e-01,  ..., 1.1599e-01,
          1.0781e-01, 1.3243e-01],
         [1.2506e-01, 1.1773e-01, 1.1274e-01,  ..., 1.1599e-01,
          1.0781e-01, 1.3243e-01],
         [1.2506e-01, 1.1773e-01, 1.1274e-01,  ..., 1.1599e-01,
          1.0781e-01, 1.3243e-01],
         [6.2482e-01, 6.4681e-01, 6.6177e-01,  ..., 6.5204e-01,
          6.7658e-01, 6.0271e-01]],
        [[1.4616e-01, 1.1096e-01, 1.2984e-01,  ..., 7.1016e-04,
          1.1703e-01, 9.9911e-02],
         [1.4616e-01, 1.1096e-01, 1.2984e-01,  ..., 7.1016e-04,
          1.1703e-01, 9.9911e-02],
         [1.4616e-01, 1.1096e-01, 1.2984e-01,  ..., 9.9787e-01,
          1.1703e-01, 9.9911e-02],
         [5.6152e-01, 6.6712e-01, 6.1048e-01,  ..., 7.1016e-04,
          6.4891e-01, 7.0027e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1220, 0.1237, 0.1156,  ..., 0.1210, 0.2500, 0.2500],
         [0.1220, 0.1237, 0.1156,  ..., 0.1210, 0.2500, 0.2500],
         [0.1220, 0.1237, 0.1156,  ..., 0.1210, 0.2500, 0.2500],
         [0.6340, 0.6288, 0.6531,  ..., 0.6371, 0.2500, 0.2500]],
        [[0.1288, 0.1490, 0.1304,  ..., 0.1308, 0.1349, 0.1477],
         [0.1288, 0.1490, 0.1304,  ..., 0.1308, 0.1349, 0.1477],
         [0.1288, 0.1490, 0.1304,  ..., 0.1308, 0.1349, 0.1477],
         [0.6136, 0.5529, 0.6089,  ..., 0.6076, 0.5954, 0.5570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:41,011 [Process: 0] Synchronize training processes
2024-08-16 16:27:41,012 [Process: 0] Evaluating...
2024-08-16 16:27:41,014 [Process: 0] EPOCH 23:
2024-08-16 16:27:41,016 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0983, 0.1155, 0.1214,  ..., 0.0980, 0.1297, 0.1126],
         [0.0983, 0.1155, 0.1214,  ..., 0.0980, 0.1297, 0.1126],
         [0.0983, 0.1155, 0.1214,  ..., 0.0980, 0.1297, 0.1126],
         [0.7050, 0.6535, 0.6358,  ..., 0.7060, 0.6109, 0.6621]],
        [[0.1067, 0.1193, 0.1080,  ..., 0.0031, 0.1265, 0.1016],
         [0.1067, 0.1193, 0.1080,  ..., 0.0031, 0.1265, 0.1016],
         [0.1067, 0.1193, 0.1080,  ..., 0.9907, 0.1265, 0.1016],
         [0.6799, 0.6421, 0.6761,  ..., 0.0031, 0.6204, 0.6951]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1451, 0.1200, 0.1134,  ..., 0.1226, 0.2500, 0.2500],
         [0.1451, 0.1200, 0.1134,  ..., 0.1226, 0.2500, 0.2500],
         [0.1451, 0.1200, 0.1134,  ..., 0.1226, 0.2500, 0.2500],
         [0.5647, 0.6399, 0.6598,  ..., 0.6323, 0.2500, 0.2500]],
        [[0.1450, 0.1321, 0.1228,  ..., 0.1441, 0.1326, 0.1460],
         [0.1450, 0.1321, 0.1228,  ..., 0.1441, 0.1326, 0.1460],
         [0.1450, 0.1321, 0.1228,  ..., 0.1441, 0.1326, 0.1460],
         [0.5650, 0.6037, 0.6317,  ..., 0.5676, 0.6022, 0.5620]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:42,930 [Process: 0] Synchronize training processes
2024-08-16 16:27:42,931 [Process: 0] Evaluating...
2024-08-16 16:27:42,933 [Process: 0] EPOCH 24:
2024-08-16 16:27:42,935 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1169, 0.1236, 0.1418,  ..., 0.1194, 0.1207, 0.1161],
         [0.1169, 0.1236, 0.1418,  ..., 0.1194, 0.1207, 0.1161],
         [0.1169, 0.1236, 0.1418,  ..., 0.1194, 0.1207, 0.1161],
         [0.6493, 0.6292, 0.5746,  ..., 0.6418, 0.6380, 0.6518]],
        [[0.1236, 0.1171, 0.1028,  ..., 0.0012, 0.1179, 0.1273],
         [0.1236, 0.1171, 0.1028,  ..., 0.0012, 0.1179, 0.1273],
         [0.1236, 0.1171, 0.1028,  ..., 0.9963, 0.1179, 0.1273],
         [0.6291, 0.6488, 0.6917,  ..., 0.0012, 0.6464, 0.6180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1241, 0.1238, 0.1433,  ..., 0.1266, 0.2500, 0.2154],
         [0.1241, 0.1238, 0.1433,  ..., 0.1266, 0.2500, 0.2154],
         [0.1241, 0.1238, 0.1433,  ..., 0.1266, 0.2500, 0.2154],
         [0.6276, 0.6287, 0.5701,  ..., 0.6202, 0.2500, 0.3539]],
        [[0.1307, 0.1120, 0.1308,  ..., 0.1191, 0.1283, 0.1283],
         [0.1307, 0.1120, 0.1308,  ..., 0.1191, 0.1283, 0.1283],
         [0.1307, 0.1120, 0.1308,  ..., 0.1191, 0.1283, 0.1283],
         [0.6079, 0.6640, 0.6075,  ..., 0.6428, 0.6150, 0.6151]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:44,848 [Process: 0] Synchronize training processes
2024-08-16 16:27:44,849 [Process: 0] Evaluating...
2024-08-16 16:27:44,851 [Process: 0] EPOCH 25:
2024-08-16 16:27:44,853 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1261, 0.1424, 0.1274,  ..., 0.1117, 0.1184, 0.1186],
         [0.1261, 0.1424, 0.1274,  ..., 0.1117, 0.1184, 0.1186],
         [0.1261, 0.1424, 0.1274,  ..., 0.1117, 0.1184, 0.1186],
         [0.6216, 0.5729, 0.6179,  ..., 0.6648, 0.6447, 0.6442]],
        [[0.1210, 0.1258, 0.1132,  ..., 0.0025, 0.1252, 0.1409],
         [0.1210, 0.1258, 0.1132,  ..., 0.0025, 0.1252, 0.1409],
         [0.1210, 0.1258, 0.1132,  ..., 0.9924, 0.1252, 0.1409],
         [0.6370, 0.6227, 0.6603,  ..., 0.0025, 0.6244, 0.5773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1072, 0.1049, 0.1061,  ..., 0.2500, 0.2500, 0.2500],
         [0.1072, 0.1049, 0.1061,  ..., 0.2500, 0.2500, 0.2500],
         [0.1072, 0.1049, 0.1061,  ..., 0.2500, 0.2500, 0.2500],
         [0.6785, 0.6852, 0.6816,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.1180, 0.1215, 0.1114,  ..., 0.1124, 0.1123, 0.2500],
         [0.1180, 0.1215, 0.1114,  ..., 0.1124, 0.1123, 0.2500],
         [0.1180, 0.1215, 0.1114,  ..., 0.1124, 0.1123, 0.2500],
         [0.6461, 0.6354, 0.6657,  ..., 0.6629, 0.6630, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:46,768 [Process: 0] Synchronize training processes
2024-08-16 16:27:46,769 [Process: 0] Evaluating...
2024-08-16 16:27:46,771 [Process: 0] EPOCH 26:
2024-08-16 16:27:46,772 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3257e-01, 1.2874e-01, 1.2692e-01,  ..., 1.4620e-01,
          1.2905e-01, 1.2678e-01],
         [1.3257e-01, 1.2874e-01, 1.2692e-01,  ..., 1.4620e-01,
          1.2905e-01, 1.2678e-01],
         [1.3257e-01, 1.2874e-01, 1.2692e-01,  ..., 1.4620e-01,
          1.2905e-01, 1.2678e-01],
         [6.0228e-01, 6.1378e-01, 6.1925e-01,  ..., 5.6141e-01,
          6.1285e-01, 6.1967e-01]],
        [[1.2055e-01, 1.3076e-01, 1.3105e-01,  ..., 4.3207e-04,
          1.2100e-01, 1.3721e-01],
         [1.2055e-01, 1.3076e-01, 1.3105e-01,  ..., 4.3207e-04,
          1.2100e-01, 1.3721e-01],
         [1.2055e-01, 1.3076e-01, 1.3105e-01,  ..., 9.9870e-01,
          1.2100e-01, 1.3721e-01],
         [6.3835e-01, 6.0771e-01, 6.0684e-01,  ..., 4.3207e-04,
          6.3700e-01, 5.8837e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1231, 0.1288, 0.1292,  ..., 0.2500, 0.2415, 0.1291],
         [0.1231, 0.1288, 0.1292,  ..., 0.2500, 0.2415, 0.1291],
         [0.1231, 0.1288, 0.1292,  ..., 0.2500, 0.2415, 0.1291],
         [0.6306, 0.6135, 0.6125,  ..., 0.2500, 0.2755, 0.6128]],
        [[0.1269, 0.1199, 0.1298,  ..., 0.1375, 0.2500, 0.1196],
         [0.1269, 0.1199, 0.1298,  ..., 0.1375, 0.2500, 0.1196],
         [0.1269, 0.1199, 0.1298,  ..., 0.1375, 0.2500, 0.1196],
         [0.6194, 0.6403, 0.6107,  ..., 0.5876, 0.2500, 0.6413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:48,681 [Process: 0] Synchronize training processes
2024-08-16 16:27:48,682 [Process: 0] Evaluating...
2024-08-16 16:27:48,683 [Process: 0] EPOCH 27:
2024-08-16 16:27:48,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1324, 0.1334, 0.1356,  ..., 0.1326, 0.1391, 0.1388],
         [0.1324, 0.1334, 0.1356,  ..., 0.1326, 0.1391, 0.1388],
         [0.1324, 0.1334, 0.1356,  ..., 0.1326, 0.1391, 0.1388],
         [0.6028, 0.5999, 0.5932,  ..., 0.6021, 0.5827, 0.5836]],
        [[0.1396, 0.1347, 0.1286,  ..., 0.0086, 0.1300, 0.1344],
         [0.1396, 0.1347, 0.1286,  ..., 0.0086, 0.1300, 0.1344],
         [0.1396, 0.1347, 0.1286,  ..., 0.9742, 0.1300, 0.1344],
         [0.5812, 0.5958, 0.6142,  ..., 0.0086, 0.6101, 0.5967]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1083, 0.1147, 0.1232,  ..., 0.2500, 0.1199, 0.1234],
         [0.1083, 0.1147, 0.1232,  ..., 0.2500, 0.1199, 0.1234],
         [0.1083, 0.1147, 0.1232,  ..., 0.2500, 0.1199, 0.1234],
         [0.6750, 0.6558, 0.6305,  ..., 0.2500, 0.6404, 0.6298]],
        [[0.1126, 0.1209, 0.1309,  ..., 0.1302, 0.2500, 0.1416],
         [0.1126, 0.1209, 0.1309,  ..., 0.1302, 0.2500, 0.1416],
         [0.1126, 0.1209, 0.1309,  ..., 0.1302, 0.2500, 0.1416],
         [0.6622, 0.6373, 0.6074,  ..., 0.6093, 0.2500, 0.5752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:27:50,593 [Process: 0] Synchronize training processes
2024-08-16 16:27:50,594 [Process: 0] Evaluating...
2024-08-16 16:27:50,596 [Process: 0] EPOCH 28:
2024-08-16 16:27:50,597 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2888e-01, 1.1900e-01, 1.1424e-01,  ..., 1.2947e-01,
          1.2032e-01, 1.1944e-01],
         [1.2888e-01, 1.1900e-01, 1.1424e-01,  ..., 1.2947e-01,
          1.2032e-01, 1.1944e-01],
         [1.2888e-01, 1.1900e-01, 1.1424e-01,  ..., 1.2947e-01,
          1.2032e-01, 1.1944e-01],
         [6.1336e-01, 6.4301e-01, 6.5729e-01,  ..., 6.1158e-01,
          6.3904e-01, 6.4168e-01]],
        [[1.2665e-01, 1.2450e-01, 1.3279e-01,  ..., 6.7875e-04,
          2.5000e-01, 1.1928e-01],
         [1.2665e-01, 1.2450e-01, 1.3279e-01,  ..., 6.7875e-04,
          2.5000e-01, 1.1928e-01],
         [1.2665e-01, 1.2450e-01, 1.3279e-01,  ..., 9.9796e-01,
          2.5000e-01, 1.1928e-01],
         [6.2005e-01, 6.2651e-01, 6.0164e-01,  ..., 6.7875e-04,
          2.5000e-01, 6.4216e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1281, 0.1226, 0.1330,  ..., 0.2500, 0.2500, 0.1454],
         [0.1281, 0.1226, 0.1330,  ..., 0.2500, 0.2500, 0.1454],
         [0.1281, 0.1226, 0.1330,  ..., 0.2500, 0.2500, 0.1454],
         [0.6158, 0.6323, 0.6009,  ..., 0.2500, 0.2500, 0.5637]],
        [[0.1417, 0.1370, 0.1404,  ..., 0.1386, 0.1348, 0.1368],
         [0.1417, 0.1370, 0.1404,  ..., 0.1386, 0.1348, 0.1373],
         [0.1417, 0.1370, 0.1404,  ..., 0.1386, 0.1348, 0.1368],
         [0.5748, 0.5891, 0.5788,  ..., 0.5842, 0.5957, 0.5890]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2193e-01, 1.2437e-01, 1.2377e-01,  ..., 1.2839e-01,
          1.2510e-01, 1.2279e-01],
         [1.2193e-01, 1.2437e-01, 1.2377e-01,  ..., 1.2839e-01,
          1.2510e-01, 1.2279e-01],
         [1.2193e-01, 1.2437e-01, 1.2377e-01,  ..., 1.2839e-01,
          1.2510e-01, 1.2279e-01],
         [6.3422e-01, 6.2689e-01, 6.2869e-01,  ..., 6.1484e-01,
          6.2470e-01, 6.3163e-01]],
        [[1.2684e-01, 1.2471e-01, 1.2705e-01,  ..., 3.0456e-04,
          2.5000e-01, 1.2607e-01],
         [1.2684e-01, 1.2471e-01, 1.2705e-01,  ..., 3.0456e-04,
          2.5000e-01, 1.2607e-01],
         [1.2684e-01, 1.2471e-01, 1.2705e-01,  ..., 9.9909e-01,
          2.5000e-01, 1.2607e-01],
         [6.1947e-01, 6.2588e-01, 6.1884e-01,  ..., 3.0456e-04,
          2.5000e-01, 6.2178e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:52,518 [Process: 0] Synchronize training processes
2024-08-16 16:27:52,519 [Process: 0] Evaluating...
2024-08-16 16:27:52,521 [Process: 0] EPOCH 29:
2024-08-16 16:27:52,523 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1363, 0.1249, 0.1153,  ..., 0.2500, 0.2500, 0.1460],
         [0.1363, 0.1249, 0.1153,  ..., 0.2500, 0.2500, 0.1460],
         [0.1363, 0.1249, 0.1153,  ..., 0.2500, 0.2500, 0.1460],
         [0.5911, 0.6253, 0.6540,  ..., 0.2500, 0.2500, 0.5619]],
        [[0.1170, 0.1159, 0.1303,  ..., 0.1328, 0.1197, 0.1356],
         [0.1170, 0.1159, 0.1303,  ..., 0.1328, 0.1197, 0.1356],
         [0.1170, 0.1159, 0.1303,  ..., 0.1328, 0.1197, 0.1356],
         [0.6491, 0.6523, 0.6090,  ..., 0.6017, 0.6408, 0.5933]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2074e-01, 1.0265e-01, 1.2761e-01,  ..., 2.1055e-01,
          1.2983e-01, 1.0930e-01],
         [1.2074e-01, 1.0265e-01, 1.2761e-01,  ..., 2.1055e-01,
          1.2983e-01, 1.0930e-01],
         [1.2074e-01, 1.0265e-01, 1.2761e-01,  ..., 2.1055e-01,
          1.2983e-01, 1.0930e-01],
         [6.3778e-01, 6.9206e-01, 6.1717e-01,  ..., 3.6836e-01,
          6.1051e-01, 6.7210e-01]],
        [[1.1480e-01, 1.1848e-01, 1.1878e-01,  ..., 1.4222e-04,
          2.5000e-01, 1.3759e-01],
         [1.1480e-01, 1.1848e-01, 1.1878e-01,  ..., 1.4222e-04,
          2.5000e-01, 1.3759e-01],
         [1.1480e-01, 1.1848e-01, 1.1878e-01,  ..., 9.9957e-01,
          2.5000e-01, 1.3759e-01],
         [6.5559e-01, 6.4457e-01, 6.4366e-01,  ..., 1.4222e-04,
          2.5000e-01, 5.8722e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:27:54,467 [Process: 0] Synchronize training processes
2024-08-16 16:27:54,468 [Process: 0] Evaluating...
2024-08-16 16:27:54,469 [Process: 0] EPOCH 30:
2024-08-16 16:27:54,471 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1146, 0.1078, 0.1064,  ..., 0.2500, 0.2500, 0.2242],
         [0.1146, 0.1078, 0.1064,  ..., 0.2500, 0.2500, 0.2242],
         [0.1146, 0.1078, 0.1064,  ..., 0.2500, 0.2500, 0.2242],
         [0.6563, 0.6765, 0.6807,  ..., 0.2500, 0.2500, 0.3275]],
        [[0.1110, 0.1299, 0.1459,  ..., 0.1294, 0.1100, 0.1184],
         [0.1110, 0.1299, 0.1459,  ..., 0.1294, 0.1100, 0.1184],
         [0.1110, 0.1299, 0.1459,  ..., 0.1294, 0.1100, 0.1184],
         [0.6670, 0.6102, 0.5622,  ..., 0.6118, 0.6701, 0.6449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1856e-01, 1.1073e-01, 1.1664e-01,  ..., 2.5000e-01,
          2.5000e-01, 1.2210e-01],
         [1.1856e-01, 1.1073e-01, 1.1664e-01,  ..., 2.5000e-01,
          2.5000e-01, 1.2210e-01],
         [1.1856e-01, 1.1073e-01, 1.1664e-01,  ..., 2.5000e-01,
          2.5000e-01, 1.2210e-01],
         [6.4432e-01, 6.6782e-01, 6.5008e-01,  ..., 2.5000e-01,
          2.5000e-01, 6.3369e-01]],
        [[1.1584e-01, 1.1607e-01, 1.2574e-01,  ..., 3.7982e-06,
          2.5000e-01, 1.2198e-01],
         [1.1584e-01, 1.1607e-01, 1.2574e-01,  ..., 3.7982e-06,
          2.5000e-01, 1.2198e-01],
         [1.1584e-01, 1.1607e-01, 1.2574e-01,  ..., 9.9999e-01,
          2.5000e-01, 1.2198e-01],
         [6.5249e-01, 6.5180e-01, 6.2278e-01,  ..., 3.7982e-06,
          2.5000e-01, 6.3406e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:27:56,422 [Process: 0] Synchronize training processes
2024-08-16 16:27:56,422 [Process: 0] Evaluating...
2024-08-16 16:27:56,424 [Process: 0] EPOCH 31:
2024-08-16 16:27:56,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:27:58,351 [Process: 0] Synchronize training processes
2024-08-16 16:27:58,352 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1054, 0.0982, 0.1147,  ..., 0.1144, 0.2500, 0.2500],
         [0.1054, 0.0982, 0.1147,  ..., 0.1144, 0.2500, 0.2500],
         [0.1054, 0.0982, 0.1147,  ..., 0.1144, 0.2500, 0.2500],
         [0.6838, 0.7054, 0.6560,  ..., 0.6567, 0.2500, 0.2500]],
        [[0.1165, 0.1049, 0.1128,  ..., 0.1173, 0.1188, 0.1107],
         [0.1165, 0.1049, 0.1128,  ..., 0.1173, 0.1188, 0.1107],
         [0.1165, 0.1049, 0.1128,  ..., 0.1173, 0.1188, 0.1107],
         [0.6504, 0.6853, 0.6617,  ..., 0.6482, 0.6436, 0.6680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1340e-01, 1.1890e-01, 1.1700e-01,  ..., 1.1715e-01,
          2.5000e-01, 1.2918e-01],
         [1.1340e-01, 1.1890e-01, 1.1700e-01,  ..., 1.1715e-01,
          2.5000e-01, 1.2918e-01],
         [1.1340e-01, 1.1890e-01, 1.1700e-01,  ..., 1.1715e-01,
          2.5000e-01, 1.2918e-01],
         [6.5981e-01, 6.4331e-01, 6.4900e-01,  ..., 6.4856e-01,
          2.5000e-01, 6.1247e-01]],
        [[1.1894e-01, 1.1987e-01, 1.0553e-01,  ..., 8.8709e-05,
          2.5000e-01, 1.1996e-01],
         [1.1894e-01, 1.1987e-01, 1.0553e-01,  ..., 8.8709e-05,
          2.5000e-01, 1.1996e-01],
         [1.1894e-01, 1.1987e-01, 1.0553e-01,  ..., 9.9973e-01,
          2.5000e-01, 1.1996e-01],
         [6.4317e-01, 6.4039e-01, 6.8340e-01,  ..., 8.8709e-05,
          2.5000e-01, 6.4011e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:27:58,360 [Process: 0] EPOCH 32:
2024-08-16 16:27:58,362 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:00,270 [Process: 0] Synchronize training processes
2024-08-16 16:28:00,270 [Process: 0] Evaluating...
2024-08-16 16:28:00,272 [Process: 0] EPOCH 33:
2024-08-16 16:28:00,274 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1095, 0.1139, 0.1162,  ..., 0.2500, 0.2500, 0.2500],
         [0.1095, 0.1139, 0.1162,  ..., 0.2500, 0.2500, 0.2500],
         [0.1095, 0.1139, 0.1162,  ..., 0.2500, 0.2500, 0.2500],
         [0.6714, 0.6583, 0.6515,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.1264, 0.1103, 0.1106,  ..., 0.1073, 0.0994, 0.1134],
         [0.1264, 0.1103, 0.1106,  ..., 0.1073, 0.0994, 0.1134],
         [0.1264, 0.1103, 0.1106,  ..., 0.1073, 0.0994, 0.1134],
         [0.6207, 0.6690, 0.6681,  ..., 0.6781, 0.7018, 0.6597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1369e-01, 1.1871e-01, 1.2511e-01,  ..., 1.1478e-01,
          2.5000e-01, 1.0847e-01],
         [1.1369e-01, 1.1871e-01, 1.2511e-01,  ..., 1.1478e-01,
          2.5000e-01, 1.0847e-01],
         [1.1369e-01, 1.1871e-01, 1.2511e-01,  ..., 1.1478e-01,
          2.5000e-01, 1.0847e-01],
         [6.5894e-01, 6.4386e-01, 6.2466e-01,  ..., 6.5567e-01,
          2.5000e-01, 6.7458e-01]],
        [[1.1282e-01, 1.1323e-01, 1.2209e-01,  ..., 3.9008e-04,
          1.2934e-01, 1.1861e-01],
         [1.1282e-01, 1.1323e-01, 1.2209e-01,  ..., 3.9008e-04,
          1.2934e-01, 1.1861e-01],
         [1.1282e-01, 1.1323e-01, 1.2209e-01,  ..., 9.9883e-01,
          1.2934e-01, 1.1861e-01],
         [6.6155e-01, 6.6032e-01, 6.3374e-01,  ..., 3.9008e-04,
          6.1197e-01, 6.4418e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:02,187 [Process: 0] Synchronize training processes
2024-08-16 16:28:02,188 [Process: 0] Evaluating...
2024-08-16 16:28:02,190 [Process: 0] EPOCH 34:
2024-08-16 16:28:02,191 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1012, 0.1104, 0.0998,  ..., 0.1022, 0.2500, 0.2500],
         [0.1012, 0.1104, 0.0998,  ..., 0.1022, 0.2500, 0.2500],
         [0.1012, 0.1104, 0.0998,  ..., 0.1022, 0.2500, 0.2500],
         [0.6965, 0.6687, 0.7005,  ..., 0.6935, 0.2500, 0.2500]],
        [[0.1183, 0.1089, 0.1207,  ..., 0.1140, 0.0966, 0.1143],
         [0.1183, 0.1089, 0.1207,  ..., 0.1140, 0.0966, 0.1143],
         [0.1183, 0.1089, 0.1207,  ..., 0.1140, 0.0966, 0.1143],
         [0.6450, 0.6734, 0.6379,  ..., 0.6579, 0.7101, 0.6570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2301e-01, 1.1125e-01, 1.1785e-01,  ..., 1.1993e-01,
          1.3051e-01, 1.0798e-01],
         [1.2301e-01, 1.1125e-01, 1.1785e-01,  ..., 1.1993e-01,
          1.3051e-01, 1.0798e-01],
         [1.2301e-01, 1.1125e-01, 1.1785e-01,  ..., 1.1993e-01,
          1.3051e-01, 1.0798e-01],
         [6.3098e-01, 6.6624e-01, 6.4646e-01,  ..., 6.4021e-01,
          6.0846e-01, 6.7606e-01]],
        [[1.1185e-01, 1.1691e-01, 1.2178e-01,  ..., 7.9191e-05,
          1.1082e-01, 1.2192e-01],
         [1.1185e-01, 1.1691e-01, 1.2178e-01,  ..., 7.9191e-05,
          1.1082e-01, 1.2192e-01],
         [1.1185e-01, 1.1691e-01, 1.2178e-01,  ..., 9.9976e-01,
          1.1082e-01, 1.2192e-01],
         [6.6444e-01, 6.4928e-01, 6.3467e-01,  ..., 7.9191e-05,
          6.6755e-01, 6.3423e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:04,108 [Process: 0] Synchronize training processes
2024-08-16 16:28:04,108 [Process: 0] Evaluating...
2024-08-16 16:28:04,110 [Process: 0] EPOCH 35:
2024-08-16 16:28:04,112 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1097, 0.1165, 0.1055,  ..., 0.0995, 0.2500, 0.1089],
         [0.1097, 0.1165, 0.1055,  ..., 0.0995, 0.2500, 0.1089],
         [0.1097, 0.1165, 0.1055,  ..., 0.0995, 0.2500, 0.1089],
         [0.6709, 0.6506, 0.6835,  ..., 0.7016, 0.2500, 0.6734]],
        [[0.1022, 0.0990, 0.1134,  ..., 0.1110, 0.1096, 0.1162],
         [0.1022, 0.0990, 0.1134,  ..., 0.1110, 0.1096, 0.1162],
         [0.1022, 0.0990, 0.1134,  ..., 0.1110, 0.1096, 0.1162],
         [0.6933, 0.7030, 0.6599,  ..., 0.6669, 0.6713, 0.6514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7019e-01, 1.3662e-01, 1.5740e-01,  ..., 1.0927e-01,
          1.2465e-01, 1.1458e-01],
         [1.7019e-01, 1.3662e-01, 1.5740e-01,  ..., 1.0927e-01,
          1.2465e-01, 1.1458e-01],
         [1.7019e-01, 1.3662e-01, 1.5740e-01,  ..., 1.0927e-01,
          1.2465e-01, 1.1458e-01],
         [4.8944e-01, 5.9013e-01, 5.2779e-01,  ..., 6.7219e-01,
          6.2604e-01, 6.5625e-01]],
        [[1.0774e-01, 1.1886e-01, 1.1203e-01,  ..., 3.8293e-05,
          1.1287e-01, 1.0139e-01],
         [1.0774e-01, 1.1886e-01, 1.1203e-01,  ..., 3.8293e-05,
          1.1287e-01, 1.0139e-01],
         [1.0774e-01, 1.1886e-01, 1.1203e-01,  ..., 9.9989e-01,
          1.1287e-01, 1.0139e-01],
         [6.7677e-01, 6.4343e-01, 6.6392e-01,  ..., 3.8293e-05,
          6.6138e-01, 6.9584e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:06,020 [Process: 0] Synchronize training processes
2024-08-16 16:28:06,020 [Process: 0] Evaluating...
2024-08-16 16:28:06,022 [Process: 0] EPOCH 36:
2024-08-16 16:28:06,024 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1082, 0.1054, 0.1060,  ..., 0.1108, 0.2500, 0.1190],
         [0.1082, 0.1054, 0.1060,  ..., 0.1108, 0.2500, 0.1190],
         [0.1082, 0.1054, 0.1060,  ..., 0.1108, 0.2500, 0.1190],
         [0.6755, 0.6837, 0.6820,  ..., 0.6675, 0.2500, 0.6431]],
        [[0.1195, 0.1136, 0.1075,  ..., 0.1060, 0.1225, 0.1110],
         [0.1195, 0.1136, 0.1075,  ..., 0.1060, 0.1225, 0.1110],
         [0.1195, 0.1136, 0.1075,  ..., 0.1060, 0.1225, 0.1110],
         [0.6415, 0.6593, 0.6774,  ..., 0.6819, 0.6326, 0.6670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1835e-01, 1.0541e-01, 1.1653e-01,  ..., 1.0456e-01,
          1.0996e-01, 1.0798e-01],
         [1.1835e-01, 1.0541e-01, 1.1653e-01,  ..., 1.0456e-01,
          1.0996e-01, 1.0798e-01],
         [1.1835e-01, 1.0541e-01, 1.1653e-01,  ..., 1.0456e-01,
          1.0996e-01, 1.0798e-01],
         [6.4496e-01, 6.8376e-01, 6.5041e-01,  ..., 6.8631e-01,
          6.7013e-01, 6.7605e-01]],
        [[1.1212e-01, 1.1572e-01, 1.2147e-01,  ..., 2.0398e-05,
          1.2110e-01, 1.0025e-01],
         [1.1212e-01, 1.1572e-01, 1.2147e-01,  ..., 2.0398e-05,
          1.2110e-01, 1.0025e-01],
         [1.1212e-01, 1.1572e-01, 1.2147e-01,  ..., 9.9994e-01,
          1.2110e-01, 1.0025e-01],
         [6.6365e-01, 6.5283e-01, 6.3560e-01,  ..., 2.0398e-05,
          6.3671e-01, 6.9924e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:07,922 [Process: 0] Synchronize training processes
2024-08-16 16:28:07,922 [Process: 0] Evaluating...
2024-08-16 16:28:07,924 [Process: 0] EPOCH 37:
2024-08-16 16:28:07,926 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1245, 0.1198, 0.1100,  ..., 0.1129, 0.2500, 0.0976],
         [0.1245, 0.1198, 0.1100,  ..., 0.1129, 0.2500, 0.0976],
         [0.1245, 0.1198, 0.1100,  ..., 0.1129, 0.2500, 0.0976],
         [0.6264, 0.6407, 0.6701,  ..., 0.6612, 0.2500, 0.7072]],
        [[0.1037, 0.1104, 0.1059,  ..., 0.1055, 0.2000, 0.1016],
         [0.1037, 0.1104, 0.1059,  ..., 0.1055, 0.2000, 0.1016],
         [0.1037, 0.1104, 0.1059,  ..., 0.1055, 0.2000, 0.1016],
         [0.6890, 0.6689, 0.6822,  ..., 0.6834, 0.4001, 0.6953]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0699e-01, 1.0828e-01, 1.1124e-01,  ..., 1.1269e-01,
          1.1168e-01, 1.0194e-01],
         [1.0699e-01, 1.0828e-01, 1.1124e-01,  ..., 1.1269e-01,
          1.1168e-01, 1.0194e-01],
         [1.0699e-01, 1.0828e-01, 1.1124e-01,  ..., 1.1269e-01,
          1.1168e-01, 1.0194e-01],
         [6.7904e-01, 6.7516e-01, 6.6627e-01,  ..., 6.6192e-01,
          6.6496e-01, 6.9417e-01]],
        [[1.1539e-01, 1.1263e-01, 1.1096e-01,  ..., 2.1378e-04,
          2.3460e-01, 1.6046e-01],
         [1.1539e-01, 1.1263e-01, 1.1096e-01,  ..., 2.1378e-04,
          2.3460e-01, 1.6046e-01],
         [1.1539e-01, 1.1263e-01, 1.1096e-01,  ..., 9.9936e-01,
          2.3460e-01, 1.6046e-01],
         [6.5384e-01, 6.6211e-01, 6.6711e-01,  ..., 2.1378e-04,
          2.9620e-01, 5.1863e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:09,931 [Process: 0] Synchronize training processes
2024-08-16 16:28:09,932 [Process: 0] Evaluating...
2024-08-16 16:28:09,934 [Process: 0] EPOCH 38:
2024-08-16 16:28:09,936 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1069, 0.1034, 0.1030,  ..., 0.2500, 0.2500, 0.0928],
         [0.1069, 0.1034, 0.1030,  ..., 0.2500, 0.2500, 0.0928],
         [0.1069, 0.1034, 0.1030,  ..., 0.2500, 0.2500, 0.0928],
         [0.6793, 0.6899, 0.6910,  ..., 0.2500, 0.2500, 0.7217]],
        [[0.1003, 0.1071, 0.1079,  ..., 0.1149, 0.1083, 0.1117],
         [0.1006, 0.1069, 0.1086,  ..., 0.1151, 0.1083, 0.1117],
         [0.1003, 0.1069, 0.1072,  ..., 0.1149, 0.1083, 0.1117],
         [0.6988, 0.6790, 0.6763,  ..., 0.6551, 0.6751, 0.6650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1158, 0.1042, 0.1162,  ..., 0.1140, 0.1131, 0.1095],
         [0.1158, 0.1042, 0.1162,  ..., 0.1140, 0.1131, 0.1095],
         [0.1158, 0.1042, 0.1162,  ..., 0.1140, 0.1131, 0.1095],
         [0.6526, 0.6874, 0.6513,  ..., 0.6580, 0.6607, 0.6715]],
        [[0.1072, 0.1102, 0.1115,  ..., 0.0131, 0.1092, 0.1139],
         [0.1072, 0.1102, 0.1115,  ..., 0.0131, 0.1092, 0.1139],
         [0.1072, 0.1102, 0.1115,  ..., 0.9608, 0.1092, 0.1139],
         [0.6783, 0.6693, 0.6654,  ..., 0.0131, 0.6723, 0.6584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:11,921 [Process: 0] Synchronize training processes
2024-08-16 16:28:11,921 [Process: 0] Evaluating...
2024-08-16 16:28:11,924 [Process: 0] EPOCH 39:
2024-08-16 16:28:11,927 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1045, 0.1087, 0.1073,  ..., 0.2500, 0.1050, 0.0997],
         [0.1045, 0.1087, 0.1073,  ..., 0.2500, 0.1050, 0.0997],
         [0.1045, 0.1087, 0.1073,  ..., 0.2500, 0.1050, 0.0997],
         [0.6864, 0.6739, 0.6782,  ..., 0.2500, 0.6851, 0.7009]],
        [[0.0955, 0.0954, 0.0888,  ..., 0.1035, 0.0963, 0.1023],
         [0.0955, 0.0954, 0.0888,  ..., 0.1035, 0.0963, 0.1023],
         [0.0955, 0.0954, 0.0888,  ..., 0.1035, 0.0963, 0.1023],
         [0.7135, 0.7139, 0.7337,  ..., 0.6894, 0.7111, 0.6931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1842e-01, 1.2102e-01, 1.0972e-01,  ..., 1.1190e-01,
          1.1321e-01, 1.0924e-01],
         [1.1842e-01, 1.2102e-01, 1.0972e-01,  ..., 1.1190e-01,
          1.1321e-01, 1.0924e-01],
         [1.1842e-01, 1.2102e-01, 1.0972e-01,  ..., 1.1190e-01,
          1.1321e-01, 1.0924e-01],
         [6.4475e-01, 6.3694e-01, 6.7083e-01,  ..., 6.6431e-01,
          6.6037e-01, 6.7229e-01]],
        [[1.1413e-01, 1.1163e-01, 1.1142e-01,  ..., 8.5129e-05,
          1.1400e-01, 1.0665e-01],
         [1.1413e-01, 1.1163e-01, 1.1142e-01,  ..., 8.5129e-05,
          1.1400e-01, 1.0665e-01],
         [1.1413e-01, 1.1163e-01, 1.1142e-01,  ..., 9.9974e-01,
          1.1400e-01, 1.0665e-01],
         [6.5762e-01, 6.6510e-01, 6.6573e-01,  ..., 8.5129e-05,
          6.5799e-01, 6.8004e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:13,897 [Process: 0] Synchronize training processes
2024-08-16 16:28:13,898 [Process: 0] Evaluating...
2024-08-16 16:28:13,900 [Process: 0] EPOCH 40:
2024-08-16 16:28:13,902 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1074, 0.1124, 0.1054,  ..., 0.2515, 0.1104, 0.1073],
         [0.1074, 0.1124, 0.1054,  ..., 0.2495, 0.1104, 0.1073],
         [0.1074, 0.1124, 0.1054,  ..., 0.2495, 0.1104, 0.1073],
         [0.6778, 0.6627, 0.6839,  ..., 0.2495, 0.6689, 0.6781]],
        [[0.1041, 0.1060, 0.1079,  ..., 0.1020, 0.1148, 0.0931],
         [0.1041, 0.1060, 0.1079,  ..., 0.1020, 0.1148, 0.0931],
         [0.1041, 0.1060, 0.1079,  ..., 0.1020, 0.1148, 0.0931],
         [0.6876, 0.6820, 0.6764,  ..., 0.6940, 0.6556, 0.7208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1805e-01, 1.1833e-01, 1.1945e-01,  ..., 1.0633e-01,
          1.1310e-01, 1.2285e-01],
         [1.1805e-01, 1.1833e-01, 1.1945e-01,  ..., 1.0633e-01,
          1.1310e-01, 1.2285e-01],
         [1.1805e-01, 1.1833e-01, 1.1945e-01,  ..., 1.0633e-01,
          1.1310e-01, 1.2285e-01],
         [6.4584e-01, 6.4502e-01, 6.4165e-01,  ..., 6.8101e-01,
          6.6069e-01, 6.3146e-01]],
        [[1.1301e-01, 1.1994e-01, 1.1978e-01,  ..., 1.4254e-04,
          1.1285e-01, 1.1376e-01],
         [1.1301e-01, 1.1994e-01, 1.1978e-01,  ..., 1.4254e-04,
          1.1285e-01, 1.1376e-01],
         [1.1301e-01, 1.1994e-01, 1.1978e-01,  ..., 9.9957e-01,
          1.1285e-01, 1.1376e-01],
         [6.6097e-01, 6.4018e-01, 6.4065e-01,  ..., 1.4254e-04,
          6.6144e-01, 6.5872e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:15,968 [Process: 0] Synchronize training processes
2024-08-16 16:28:15,968 [Process: 0] Evaluating...
2024-08-16 16:28:15,970 [Process: 0] EPOCH 41:
2024-08-16 16:28:15,972 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0988, 0.0953, 0.0997,  ..., 0.2508, 0.1013, 0.1124],
         [0.0988, 0.0953, 0.0997,  ..., 0.2497, 0.1013, 0.1124],
         [0.0988, 0.0953, 0.0997,  ..., 0.2497, 0.1013, 0.1124],
         [0.7036, 0.7140, 0.7009,  ..., 0.2497, 0.6961, 0.6628]],
        [[0.1019, 0.1031, 0.1078,  ..., 0.1058, 0.0986, 0.1045],
         [0.1019, 0.1031, 0.1078,  ..., 0.1058, 0.0986, 0.1045],
         [0.1019, 0.1031, 0.1078,  ..., 0.1058, 0.0986, 0.1045],
         [0.6943, 0.6906, 0.6767,  ..., 0.6827, 0.7041, 0.6864]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0791e-01, 1.0082e-01, 1.0037e-01,  ..., 1.0551e-01,
          1.1004e-01, 1.0676e-01],
         [1.0791e-01, 1.0082e-01, 1.0037e-01,  ..., 1.0551e-01,
          1.1004e-01, 1.0676e-01],
         [1.0791e-01, 1.0082e-01, 1.0037e-01,  ..., 1.0551e-01,
          1.1004e-01, 1.0676e-01],
         [6.7628e-01, 6.9753e-01, 6.9890e-01,  ..., 6.8346e-01,
          6.6988e-01, 6.7972e-01]],
        [[1.1286e-01, 1.0948e-01, 1.0151e-01,  ..., 1.2828e-04,
          1.0780e-01, 1.0474e-01],
         [1.1286e-01, 1.0948e-01, 1.0151e-01,  ..., 1.2828e-04,
          1.0780e-01, 1.0474e-01],
         [1.1286e-01, 1.0948e-01, 1.0151e-01,  ..., 9.9962e-01,
          1.0780e-01, 1.0474e-01],
         [6.6142e-01, 6.7156e-01, 6.9547e-01,  ..., 1.2828e-04,
          6.7659e-01, 6.8578e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:18,058 [Process: 0] Synchronize training processes
2024-08-16 16:28:18,058 [Process: 0] Evaluating...
2024-08-16 16:28:18,066 [Process: 0] EPOCH 42:
2024-08-16 16:28:18,068 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1095, 0.1032, 0.1007,  ..., 0.2500, 0.1007, 0.1034],
         [0.1095, 0.1032, 0.1007,  ..., 0.2500, 0.1007, 0.1034],
         [0.1095, 0.1032, 0.1007,  ..., 0.2500, 0.1007, 0.1034],
         [0.6714, 0.6903, 0.6980,  ..., 0.2500, 0.6980, 0.6899]],
        [[0.0944, 0.0985, 0.1069,  ..., 0.0921, 0.0998, 0.0927],
         [0.0944, 0.0985, 0.1069,  ..., 0.0921, 0.0998, 0.0927],
         [0.0944, 0.0985, 0.1069,  ..., 0.0921, 0.0998, 0.0927],
         [0.7168, 0.7046, 0.6793,  ..., 0.7237, 0.7005, 0.7220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0635e-01, 1.0734e-01, 1.0121e-01,  ..., 1.0746e-01,
          1.0785e-01, 1.0069e-01],
         [1.0635e-01, 1.0734e-01, 1.0121e-01,  ..., 1.0746e-01,
          1.0785e-01, 1.0069e-01],
         [1.0635e-01, 1.0734e-01, 1.0121e-01,  ..., 1.0746e-01,
          1.0785e-01, 1.0069e-01],
         [6.8095e-01, 6.7799e-01, 6.9638e-01,  ..., 6.7762e-01,
          6.7645e-01, 6.9794e-01]],
        [[1.0494e-01, 1.0895e-01, 1.0310e-01,  ..., 2.6471e-04,
          9.5557e-02, 9.6550e-02],
         [1.0494e-01, 1.0895e-01, 1.0310e-01,  ..., 2.6471e-04,
          9.5557e-02, 9.6550e-02],
         [1.0494e-01, 1.0895e-01, 1.0310e-01,  ..., 9.9921e-01,
          9.5557e-02, 9.6550e-02],
         [6.8518e-01, 6.7314e-01, 6.9071e-01,  ..., 2.6471e-04,
          7.1333e-01, 7.1035e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:20,134 [Process: 0] Synchronize training processes
2024-08-16 16:28:20,135 [Process: 0] Evaluating...
2024-08-16 16:28:20,137 [Process: 0] EPOCH 43:
2024-08-16 16:28:20,138 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1047, 0.0940, 0.0983,  ..., 0.2500, 0.1025, 0.0987],
         [0.1042, 0.0940, 0.0983,  ..., 0.2500, 0.1023, 0.0987],
         [0.1042, 0.0940, 0.0983,  ..., 0.2500, 0.1023, 0.0987],
         [0.6870, 0.7180, 0.7050,  ..., 0.2500, 0.6929, 0.7039]],
        [[0.0957, 0.1020, 0.0900,  ..., 0.0927, 0.1021, 0.1038],
         [0.0957, 0.1020, 0.0900,  ..., 0.0927, 0.1021, 0.1038],
         [0.0957, 0.1020, 0.0900,  ..., 0.0927, 0.1021, 0.1038],
         [0.7130, 0.6941, 0.7301,  ..., 0.7220, 0.6938, 0.6887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4535e-02, 1.0879e-01, 1.0023e-01,  ..., 1.1036e-01,
          1.0020e-01, 1.0035e-01],
         [9.4372e-02, 1.0896e-01, 1.0023e-01,  ..., 1.0940e-01,
          1.0020e-01, 1.0035e-01],
         [9.4372e-02, 1.0805e-01, 1.0023e-01,  ..., 1.0939e-01,
          1.0020e-01, 1.0035e-01],
         [7.1672e-01, 6.7420e-01, 6.9932e-01,  ..., 6.7085e-01,
          6.9939e-01, 6.9896e-01]],
        [[9.5558e-02, 1.0539e-01, 1.0960e-01,  ..., 3.3113e-04,
          9.8762e-02, 1.1435e-01],
         [9.5558e-02, 1.0539e-01, 1.0931e-01,  ..., 3.3113e-04,
          9.8762e-02, 1.1351e-01],
         [9.5558e-02, 1.0539e-01, 1.0931e-01,  ..., 9.9901e-01,
          9.8762e-02, 1.1351e-01],
         [7.1332e-01, 6.8384e-01, 6.7177e-01,  ..., 3.3113e-04,
          7.0371e-01, 6.5864e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:22,234 [Process: 0] Synchronize training processes
2024-08-16 16:28:22,234 [Process: 0] Evaluating...
2024-08-16 16:28:22,236 [Process: 0] EPOCH 44:
2024-08-16 16:28:22,238 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1039, 0.1016, 0.1001,  ..., 0.1028, 0.0971, 0.1000],
         [0.1039, 0.1016, 0.1001,  ..., 0.1031, 0.0971, 0.1000],
         [0.1039, 0.1016, 0.1001,  ..., 0.1028, 0.0971, 0.1000],
         [0.6883, 0.6953, 0.6997,  ..., 0.6913, 0.7087, 0.7000]],
        [[0.1052, 0.0988, 0.0950,  ..., 0.0967, 0.1026, 0.0923],
         [0.1052, 0.0988, 0.0950,  ..., 0.0967, 0.1026, 0.0923],
         [0.1052, 0.0988, 0.0950,  ..., 0.0967, 0.1026, 0.0923],
         [0.6843, 0.7035, 0.7151,  ..., 0.7099, 0.6922, 0.7232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1106, 0.0972, 0.1052,  ..., 0.1007, 0.1012, 0.1035],
         [0.1106, 0.0972, 0.1052,  ..., 0.1007, 0.1012, 0.1035],
         [0.1106, 0.0972, 0.1052,  ..., 0.1007, 0.1012, 0.1035],
         [0.6683, 0.7084, 0.6843,  ..., 0.6979, 0.6965, 0.6896]],
        [[0.0917, 0.0973, 0.0934,  ..., 0.0015, 0.1021, 0.0990],
         [0.0917, 0.0973, 0.0934,  ..., 0.0015, 0.1021, 0.0990],
         [0.0917, 0.0973, 0.0934,  ..., 0.9954, 0.1021, 0.0990],
         [0.7248, 0.7081, 0.7197,  ..., 0.0015, 0.6936, 0.7031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:24,334 [Process: 0] Synchronize training processes
2024-08-16 16:28:24,335 [Process: 0] Evaluating...
2024-08-16 16:28:24,337 [Process: 0] EPOCH 45:
2024-08-16 16:28:24,339 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1036, 0.0975, 0.1052,  ..., 0.2609, 0.0964, 0.0953],
         [0.1036, 0.0975, 0.1052,  ..., 0.2464, 0.0964, 0.0953],
         [0.1036, 0.0975, 0.1052,  ..., 0.2464, 0.0964, 0.0953],
         [0.6893, 0.7074, 0.6843,  ..., 0.2464, 0.7108, 0.7142]],
        [[0.0949, 0.1032, 0.0957,  ..., 0.1029, 0.1002, 0.0966],
         [0.0949, 0.1032, 0.0957,  ..., 0.1029, 0.1002, 0.0966],
         [0.0949, 0.1032, 0.0957,  ..., 0.1029, 0.1002, 0.0966],
         [0.7153, 0.6904, 0.7130,  ..., 0.6912, 0.6995, 0.7102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0119e-01, 1.0417e-01, 9.7138e-02,  ..., 1.1214e-01,
          1.1037e-01, 9.5486e-02],
         [1.0119e-01, 1.0417e-01, 9.7138e-02,  ..., 1.1214e-01,
          1.1037e-01, 9.5486e-02],
         [1.0119e-01, 1.0417e-01, 9.7138e-02,  ..., 1.1214e-01,
          1.1037e-01, 9.5486e-02],
         [6.9643e-01, 6.8748e-01, 7.0859e-01,  ..., 6.6358e-01,
          6.6889e-01, 7.1354e-01]],
        [[1.0097e-01, 1.1059e-01, 1.0039e-01,  ..., 2.0796e-04,
          1.0426e-01, 1.0323e-01],
         [1.0097e-01, 1.1059e-01, 1.0039e-01,  ..., 2.0796e-04,
          1.0426e-01, 1.0323e-01],
         [1.0097e-01, 1.1059e-01, 1.0039e-01,  ..., 9.9938e-01,
          1.0426e-01, 1.0323e-01],
         [6.9709e-01, 6.6824e-01, 6.9883e-01,  ..., 2.0796e-04,
          6.8723e-01, 6.9032e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0993, 0.0922, 0.0945,  ..., 0.0910, 0.1062, 0.0951],
         [0.0993, 0.0922, 0.0945,  ..., 0.0910, 0.1062, 0.0951],
         [0.0993, 0.0922, 0.0945,  ..., 0.0910, 0.1062, 0.0951],
         [0.7020, 0.7235, 0.7165,  ..., 0.7270, 0.6815, 0.7146]],
        [[0.0952, 0.1003, 0.1016,  ..., 0.0996, 0.1006, 0.0930],
         [0.0952, 0.1003, 0.1016,  ..., 0.0996, 0.1006, 0.0930],
         [0.0952, 0.1003, 0.1016,  ..., 0.0996, 0.1006, 0.0930],
         [0.7143, 0.6992, 0.6952,  ..., 0.7013, 0.6981, 0.7210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0386e-01, 1.0788e-01, 9.8187e-02,  ..., 1.0203e-01,
          9.9031e-02, 9.8107e-02],
         [1.0386e-01, 1.0788e-01, 9.8187e-02,  ..., 1.0203e-01,
          9.9031e-02, 9.8107e-02],
         [1.0386e-01, 1.0788e-01, 9.8187e-02,  ..., 1.0203e-01,
          9.9031e-02, 9.8107e-02],
         [6.8843e-01, 6.7637e-01, 7.0544e-01,  ..., 6.9391e-01,
          7.0291e-01, 7.0568e-01]],
        [[1.0435e-01, 9.8175e-02, 9.8535e-02,  ..., 6.4148e-05,
          1.0177e-01, 9.9142e-02],
         [1.0435e-01, 9.8175e-02, 9.8535e-02,  ..., 6.4148e-05,
          1.0177e-01, 9.9142e-02],
         [1.0435e-01, 9.8175e-02, 9.8535e-02,  ..., 9.9981e-01,
          1.0177e-01, 9.9142e-02],
         [6.8694e-01, 7.0547e-01, 7.0440e-01,  ..., 6.4148e-05,
          6.9469e-01, 7.0258e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:26,482 [Process: 0] Synchronize training processes
2024-08-16 16:28:26,482 [Process: 0] Evaluating...
2024-08-16 16:28:26,484 [Process: 0] EPOCH 46:
2024-08-16 16:28:26,487 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0976, 0.1061, 0.1070,  ..., 0.1006, 0.0994, 0.1054],
         [0.0976, 0.1061, 0.1070,  ..., 0.1006, 0.0994, 0.1054],
         [0.0976, 0.1061, 0.1070,  ..., 0.1006, 0.0994, 0.1054],
         [0.7071, 0.6818, 0.6790,  ..., 0.6983, 0.7019, 0.6837]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.1007, 0.1091, 0.1023],
         [0.2500, 0.2500, 0.2500,  ..., 0.1007, 0.1091, 0.1023],
         [0.2500, 0.2500, 0.2500,  ..., 0.1007, 0.1091, 0.1023],
         [0.2500, 0.2500, 0.2500,  ..., 0.6978, 0.6728, 0.6931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1042, 0.1015, 0.1004,  ..., 0.0952, 0.1074, 0.0969],
         [0.1043, 0.1015, 0.1000,  ..., 0.0952, 0.1070, 0.0969],
         [0.1042, 0.1015, 0.0998,  ..., 0.0952, 0.1070, 0.0969],
         [0.6872, 0.6954, 0.6998,  ..., 0.7143, 0.6787, 0.7094]],
        [[0.0981, 0.1019, 0.0962,  ..., 0.0011, 0.0978, 0.1003],
         [0.0981, 0.1019, 0.0962,  ..., 0.0011, 0.0979, 0.0997],
         [0.0981, 0.1019, 0.0962,  ..., 0.9967, 0.0978, 0.0994],
         [0.7058, 0.6943, 0.7114,  ..., 0.0011, 0.7065, 0.7007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:28,638 [Process: 0] Synchronize training processes
2024-08-16 16:28:28,638 [Process: 0] Evaluating...
2024-08-16 16:28:28,640 [Process: 0] EPOCH 47:
2024-08-16 16:28:28,642 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0973, 0.0911, 0.0904,  ..., 0.0931, 0.2500, 0.0950],
         [0.0973, 0.0911, 0.0904,  ..., 0.0931, 0.2500, 0.0950],
         [0.0973, 0.0911, 0.0904,  ..., 0.0931, 0.2500, 0.0950],
         [0.7082, 0.7268, 0.7287,  ..., 0.7207, 0.2500, 0.7149]],
        [[0.0954, 0.0974, 0.1000,  ..., 0.0979, 0.1000, 0.0946],
         [0.0954, 0.0974, 0.1000,  ..., 0.0979, 0.1000, 0.0946],
         [0.0954, 0.0974, 0.1000,  ..., 0.0979, 0.1000, 0.0946],
         [0.7138, 0.7077, 0.7000,  ..., 0.7062, 0.7001, 0.7163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:28:30,787 [Process: 0] Synchronize training processes
2024-08-16 16:28:30,788 [Process: 0] Evaluating...
2024-08-16 16:28:30,790 [Process: 0] EPOCH 48:
2024-08-16 16:28:30,792 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7944e-02, 9.5898e-02, 9.7836e-02,  ..., 9.4348e-02,
          9.1429e-02, 9.1019e-02],
         [8.7944e-02, 9.5898e-02, 9.7836e-02,  ..., 9.4348e-02,
          9.1429e-02, 9.1019e-02],
         [8.7944e-02, 9.5898e-02, 9.7836e-02,  ..., 9.4348e-02,
          9.1429e-02, 9.1019e-02],
         [7.3617e-01, 7.1231e-01, 7.0649e-01,  ..., 7.1696e-01,
          7.2571e-01, 7.2694e-01]],
        [[9.5736e-02, 9.5315e-02, 1.0159e-01,  ..., 6.1171e-04,
          9.9091e-02, 9.7313e-02],
         [9.5736e-02, 9.5315e-02, 1.0159e-01,  ..., 6.1171e-04,
          9.9091e-02, 9.7313e-02],
         [9.5736e-02, 9.5315e-02, 1.0159e-01,  ..., 9.9816e-01,
          9.9091e-02, 9.7313e-02],
         [7.1279e-01, 7.1405e-01, 6.9523e-01,  ..., 6.1171e-04,
          7.0273e-01, 7.0806e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1056, 0.0957, 0.0980,  ..., 0.1022, 0.1042, 0.1004],
         [0.1056, 0.0957, 0.0980,  ..., 0.1022, 0.1042, 0.1004],
         [0.1056, 0.0957, 0.0980,  ..., 0.1022, 0.1042, 0.1004],
         [0.6831, 0.7128, 0.7059,  ..., 0.6933, 0.6874, 0.6987]],
        [[0.0986, 0.0972, 0.0930,  ..., 0.0962, 0.0997, 0.1003],
         [0.0986, 0.0972, 0.0930,  ..., 0.0962, 0.0997, 0.1003],
         [0.0986, 0.0972, 0.0930,  ..., 0.0962, 0.0997, 0.1003],
         [0.7041, 0.7083, 0.7211,  ..., 0.7114, 0.7009, 0.6992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:32,915 [Process: 0] Synchronize training processes
2024-08-16 16:28:32,915 [Process: 0] Evaluating...
2024-08-16 16:28:32,917 [Process: 0] EPOCH 49:
2024-08-16 16:28:32,919 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0119e-01, 1.0056e-01, 1.0094e-01,  ..., 9.5471e-02,
          9.9733e-02, 9.5179e-02],
         [1.0119e-01, 1.0056e-01, 1.0094e-01,  ..., 9.5471e-02,
          9.9733e-02, 9.5179e-02],
         [1.0119e-01, 1.0056e-01, 1.0094e-01,  ..., 9.5471e-02,
          9.9733e-02, 9.5179e-02],
         [6.9642e-01, 6.9833e-01, 6.9717e-01,  ..., 7.1359e-01,
          7.0080e-01, 7.1446e-01]],
        [[9.6006e-02, 1.0004e-01, 9.4536e-02,  ..., 2.0442e-04,
          9.8354e-02, 9.6528e-02],
         [9.6006e-02, 1.0004e-01, 9.4536e-02,  ..., 2.0442e-04,
          9.8354e-02, 9.6528e-02],
         [9.6006e-02, 1.0004e-01, 9.4536e-02,  ..., 9.9939e-01,
          9.8354e-02, 9.6528e-02],
         [7.1198e-01, 6.9989e-01, 7.1639e-01,  ..., 2.0442e-04,
          7.0494e-01, 7.1042e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1088, 0.0990, 0.1024,  ..., 0.1015, 0.1000, 0.0982],
         [0.1088, 0.0990, 0.1024,  ..., 0.1015, 0.1000, 0.0982],
         [0.1088, 0.0990, 0.1024,  ..., 0.1015, 0.1000, 0.0982],
         [0.6737, 0.7031, 0.6928,  ..., 0.6956, 0.7001, 0.7054]],
        [[0.1837, 0.0998, 0.2009,  ..., 0.1001, 0.0987, 0.0971],
         [0.1837, 0.0998, 0.2009,  ..., 0.1001, 0.0987, 0.0971],
         [0.1837, 0.0998, 0.2009,  ..., 0.1001, 0.0987, 0.0971],
         [0.4490, 0.7007, 0.3973,  ..., 0.6998, 0.7039, 0.7087]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:35,023 [Process: 0] Synchronize training processes
2024-08-16 16:28:35,023 [Process: 0] Evaluating...
2024-08-16 16:28:35,025 [Process: 0] EPOCH 50:
2024-08-16 16:28:35,027 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0920, 0.1032, 0.1001,  ..., 0.0955, 0.1018, 0.0965],
         [0.0920, 0.1032, 0.1001,  ..., 0.0955, 0.1018, 0.0965],
         [0.0920, 0.1032, 0.1001,  ..., 0.0955, 0.1018, 0.0965],
         [0.7239, 0.6903, 0.6998,  ..., 0.7135, 0.6947, 0.7106]],
        [[0.1008, 0.0958, 0.1017,  ..., 0.0042, 0.1008, 0.0947],
         [0.1008, 0.0958, 0.1017,  ..., 0.0042, 0.1008, 0.0947],
         [0.1008, 0.0958, 0.1017,  ..., 0.9874, 0.1008, 0.0947],
         [0.6977, 0.7127, 0.6949,  ..., 0.0042, 0.6977, 0.7160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1036, 0.0969, 0.0953,  ..., 0.0982, 0.0964, 0.0959],
         [0.1036, 0.0969, 0.0953,  ..., 0.0982, 0.0964, 0.0959],
         [0.1036, 0.0969, 0.0953,  ..., 0.0982, 0.0964, 0.0959],
         [0.6891, 0.7092, 0.7141,  ..., 0.7055, 0.7108, 0.7123]],
        [[0.1041, 0.0945, 0.0953,  ..., 0.0974, 0.0975, 0.0941],
         [0.1041, 0.0945, 0.0953,  ..., 0.0974, 0.0975, 0.0941],
         [0.1041, 0.0945, 0.0953,  ..., 0.0974, 0.0975, 0.0941],
         [0.6878, 0.7166, 0.7140,  ..., 0.7079, 0.7076, 0.7178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:37,123 [Process: 0] Synchronize training processes
2024-08-16 16:28:37,124 [Process: 0] Evaluating...
2024-08-16 16:28:37,126 [Process: 0] EPOCH 51:
2024-08-16 16:28:37,128 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0967, 0.0997, 0.1040,  ..., 0.1002, 0.1248, 0.0998],
         [0.0967, 0.0997, 0.1040,  ..., 0.1002, 0.1248, 0.0998],
         [0.0967, 0.0997, 0.1040,  ..., 0.1002, 0.1248, 0.0998],
         [0.7100, 0.7008, 0.6881,  ..., 0.6994, 0.6257, 0.7005]],
        [[0.1025, 0.0958, 0.1025,  ..., 0.0016, 0.0956, 0.0959],
         [0.1025, 0.0958, 0.1025,  ..., 0.0016, 0.0956, 0.0959],
         [0.1025, 0.0958, 0.1025,  ..., 0.9951, 0.0956, 0.0959],
         [0.6926, 0.7127, 0.6925,  ..., 0.0016, 0.7133, 0.7122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0982, 0.0955, 0.1093,  ..., 0.0914, 0.0929, 0.0938],
         [0.0982, 0.0955, 0.1093,  ..., 0.0914, 0.0929, 0.0938],
         [0.0982, 0.0955, 0.1093,  ..., 0.0914, 0.0929, 0.0938],
         [0.7054, 0.7136, 0.6722,  ..., 0.7259, 0.7212, 0.7187]],
        [[0.0960, 0.0992, 0.0947,  ..., 0.0938, 0.0910, 0.0985],
         [0.0960, 0.0992, 0.0947,  ..., 0.0938, 0.0910, 0.0985],
         [0.0960, 0.0992, 0.0947,  ..., 0.0938, 0.0910, 0.0985],
         [0.7121, 0.7023, 0.7159,  ..., 0.7187, 0.7271, 0.7044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:39,242 [Process: 0] Synchronize training processes
2024-08-16 16:28:39,242 [Process: 0] Evaluating...
2024-08-16 16:28:39,250 [Process: 0] EPOCH 52:
2024-08-16 16:28:39,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0901, 0.0899, 0.1013,  ..., 0.0917, 0.2500, 0.0924],
         [0.0901, 0.0899, 0.1013,  ..., 0.0917, 0.2500, 0.0924],
         [0.0901, 0.0899, 0.1013,  ..., 0.0917, 0.2500, 0.0924],
         [0.7296, 0.7304, 0.6961,  ..., 0.7250, 0.2500, 0.7229]],
        [[0.1001, 0.1003, 0.0910,  ..., 0.0099, 0.0950, 0.0926],
         [0.1001, 0.1003, 0.0910,  ..., 0.0099, 0.0950, 0.0926],
         [0.1001, 0.1003, 0.0910,  ..., 0.9704, 0.0950, 0.0926],
         [0.6997, 0.6991, 0.7270,  ..., 0.0099, 0.7149, 0.7222]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2385, 0.2500, 0.2500,  ..., 0.0871, 0.0936, 0.0859],
         [0.2385, 0.2500, 0.2500,  ..., 0.0871, 0.0936, 0.0859],
         [0.2385, 0.2500, 0.2500,  ..., 0.0871, 0.0936, 0.0859],
         [0.2846, 0.2500, 0.2500,  ..., 0.7388, 0.7193, 0.7422]],
        [[0.0900, 0.0896, 0.0890,  ..., 0.0867, 0.0960, 0.0879],
         [0.0900, 0.0896, 0.0890,  ..., 0.0867, 0.0960, 0.0879],
         [0.0900, 0.0896, 0.0890,  ..., 0.0867, 0.0960, 0.0879],
         [0.7299, 0.7312, 0.7329,  ..., 0.7398, 0.7121, 0.7364]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:41,365 [Process: 0] Synchronize training processes
2024-08-16 16:28:41,366 [Process: 0] Evaluating...
2024-08-16 16:28:41,368 [Process: 0] EPOCH 53:
2024-08-16 16:28:41,370 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0860, 0.0911, 0.1837,  ..., 0.0910, 0.2500, 0.0896],
         [0.0860, 0.0911, 0.1837,  ..., 0.0910, 0.2500, 0.0896],
         [0.0860, 0.0911, 0.1837,  ..., 0.0910, 0.2500, 0.0896],
         [0.7419, 0.7267, 0.4489,  ..., 0.7271, 0.2500, 0.7311]],
        [[0.0878, 0.0928, 0.0950,  ..., 0.0040, 0.0852, 0.0887],
         [0.0878, 0.0928, 0.0950,  ..., 0.0040, 0.0852, 0.0887],
         [0.0878, 0.0928, 0.0950,  ..., 0.9880, 0.0852, 0.0887],
         [0.7367, 0.7217, 0.7149,  ..., 0.0040, 0.7444, 0.7340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0892, 0.0866, 0.0871,  ..., 0.0916, 0.0886, 0.0842],
         [0.0892, 0.0866, 0.0871,  ..., 0.0916, 0.0886, 0.0842],
         [0.0892, 0.0866, 0.0871,  ..., 0.0916, 0.0886, 0.0842],
         [0.7324, 0.7403, 0.7388,  ..., 0.7253, 0.7342, 0.7475]],
        [[0.0903, 0.0878, 0.0938,  ..., 0.1266, 0.0926, 0.0848],
         [0.0903, 0.0878, 0.0938,  ..., 0.1266, 0.0926, 0.0848],
         [0.0903, 0.0878, 0.0938,  ..., 0.1266, 0.0926, 0.0848],
         [0.7292, 0.7367, 0.7187,  ..., 0.6203, 0.7223, 0.7456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:43,500 [Process: 0] Synchronize training processes
2024-08-16 16:28:43,501 [Process: 0] Evaluating...
2024-08-16 16:28:43,503 [Process: 0] EPOCH 54:
2024-08-16 16:28:43,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0929, 0.0858, 0.0994,  ..., 0.0845, 0.2500, 0.0956],
         [0.0929, 0.0858, 0.0994,  ..., 0.0845, 0.2500, 0.0956],
         [0.0929, 0.0858, 0.0994,  ..., 0.0845, 0.2500, 0.0956],
         [0.7213, 0.7426, 0.7017,  ..., 0.7465, 0.2500, 0.7131]],
        [[0.0890, 0.0893, 0.0898,  ..., 0.0031, 0.0879, 0.0869],
         [0.0890, 0.0893, 0.0898,  ..., 0.0031, 0.0879, 0.0869],
         [0.0890, 0.0893, 0.0898,  ..., 0.9907, 0.0879, 0.0869],
         [0.7331, 0.7321, 0.7307,  ..., 0.0031, 0.7362, 0.7394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0882, 0.0839, 0.0904,  ..., 0.0891, 0.0899, 0.0922],
         [0.0882, 0.0839, 0.0904,  ..., 0.0891, 0.0899, 0.0922],
         [0.0882, 0.0839, 0.0904,  ..., 0.0891, 0.0899, 0.0922],
         [0.7355, 0.7484, 0.7289,  ..., 0.7328, 0.7304, 0.7235]],
        [[0.0841, 0.0834, 0.0883,  ..., 0.0839, 0.0872, 0.0810],
         [0.0841, 0.0834, 0.0883,  ..., 0.0839, 0.0872, 0.0810],
         [0.0841, 0.0834, 0.0883,  ..., 0.0839, 0.0872, 0.0810],
         [0.7477, 0.7499, 0.7350,  ..., 0.7483, 0.7384, 0.7571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:45,623 [Process: 0] Synchronize training processes
2024-08-16 16:28:45,623 [Process: 0] Evaluating...
2024-08-16 16:28:45,625 [Process: 0] EPOCH 55:
2024-08-16 16:28:45,627 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0875, 0.0905, 0.0887,  ..., 0.0879, 0.2512, 0.0931],
         [0.0875, 0.0905, 0.0887,  ..., 0.0879, 0.2496, 0.0931],
         [0.0875, 0.0905, 0.0887,  ..., 0.0879, 0.2496, 0.0931],
         [0.7376, 0.7284, 0.7338,  ..., 0.7362, 0.2496, 0.7206]],
        [[0.0890, 0.0875, 0.0861,  ..., 0.0175, 0.0842, 0.0849],
         [0.0890, 0.0875, 0.0861,  ..., 0.0175, 0.0842, 0.0849],
         [0.0890, 0.0875, 0.0861,  ..., 0.9474, 0.0842, 0.0849],
         [0.7331, 0.7374, 0.7417,  ..., 0.0175, 0.7473, 0.7454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0828, 0.0811, 0.0787,  ..., 0.0821, 0.1072, 0.0801],
         [0.0828, 0.0811, 0.0787,  ..., 0.0821, 0.1072, 0.0801],
         [0.0828, 0.0811, 0.0787,  ..., 0.0821, 0.1072, 0.0801],
         [0.7515, 0.7568, 0.7639,  ..., 0.7538, 0.6785, 0.7597]],
        [[0.0813, 0.0793, 0.0808,  ..., 0.0838, 0.0853, 0.0765],
         [0.0813, 0.0793, 0.0808,  ..., 0.0838, 0.0853, 0.0765],
         [0.0813, 0.0793, 0.0808,  ..., 0.0838, 0.0853, 0.0765],
         [0.7561, 0.7620, 0.7576,  ..., 0.7486, 0.7442, 0.7705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:28:47,770 [Process: 0] Synchronize training processes
2024-08-16 16:28:47,770 [Process: 0] Evaluating...
2024-08-16 16:28:47,772 [Process: 0] EPOCH 56:
2024-08-16 16:28:47,774 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0890, 0.0825, 0.0880,  ..., 0.0849, 0.1220, 0.0874],
         [0.0890, 0.0825, 0.0880,  ..., 0.0849, 0.1220, 0.0874],
         [0.0890, 0.0825, 0.0880,  ..., 0.0849, 0.6339, 0.0874],
         [0.7329, 0.7525, 0.7361,  ..., 0.7454, 0.1220, 0.7379]],
        [[0.0916, 0.0825, 0.0858,  ..., 0.0036, 0.0845, 0.0857],
         [0.0916, 0.0825, 0.0858,  ..., 0.0036, 0.0845, 0.0857],
         [0.0916, 0.0825, 0.0858,  ..., 0.9893, 0.0845, 0.0857],
         [0.7252, 0.7524, 0.7425,  ..., 0.0036, 0.7466, 0.7430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:28:49,891 [Process: 0] Synchronize training processes
2024-08-16 16:28:49,891 [Process: 0] Evaluating...
2024-08-16 16:28:49,893 [Process: 0] EPOCH 57:
2024-08-16 16:28:49,895 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0854, 0.0830, 0.0832,  ..., 0.0810, 0.0876, 0.0883],
         [0.0854, 0.0830, 0.0832,  ..., 0.0810, 0.0876, 0.0883],
         [0.0854, 0.0830, 0.0832,  ..., 0.0810, 0.0876, 0.0883],
         [0.7437, 0.7509, 0.7503,  ..., 0.7569, 0.7371, 0.7352]],
        [[0.0797, 0.0803, 0.0824,  ..., 0.0819, 0.0937, 0.0862],
         [0.0797, 0.0803, 0.0824,  ..., 0.0819, 0.0937, 0.0862],
         [0.0797, 0.0803, 0.0824,  ..., 0.0819, 0.0937, 0.0862],
         [0.7610, 0.7592, 0.7527,  ..., 0.7542, 0.7188, 0.7414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2170e-02, 7.4785e-02, 8.3117e-02,  ..., 8.0395e-02,
          7.9336e-02, 8.0860e-02],
         [8.2170e-02, 7.4785e-02, 8.3117e-02,  ..., 8.0395e-02,
          7.9336e-02, 8.0860e-02],
         [8.2170e-02, 7.4785e-02, 8.3117e-02,  ..., 8.0395e-02,
          7.6199e-01, 8.0860e-02],
         [7.5349e-01, 7.7564e-01, 7.5065e-01,  ..., 7.5881e-01,
          7.9336e-02, 7.5742e-01]],
        [[7.9082e-02, 8.1313e-02, 7.8594e-02,  ..., 1.9299e-04,
          7.6791e-02, 8.1980e-02],
         [7.9082e-02, 8.1313e-02, 7.8594e-02,  ..., 1.9299e-04,
          7.6791e-02, 8.1980e-02],
         [7.9082e-02, 8.1313e-02, 7.8594e-02,  ..., 9.9942e-01,
          7.6791e-02, 8.1980e-02],
         [7.6275e-01, 7.5606e-01, 7.6422e-01,  ..., 1.9299e-04,
          7.6963e-01, 7.5406e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:28:51,965 [Process: 0] Synchronize training processes
2024-08-16 16:28:51,965 [Process: 0] Evaluating...
2024-08-16 16:28:51,967 [Process: 0] EPOCH 58:
2024-08-16 16:28:51,969 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0864, 0.0894, 0.0851,  ..., 0.0788, 0.0816, 0.0836],
         [0.0864, 0.0894, 0.0851,  ..., 0.0788, 0.0816, 0.0836],
         [0.0864, 0.0894, 0.0851,  ..., 0.0788, 0.0816, 0.0836],
         [0.7408, 0.7317, 0.7448,  ..., 0.7635, 0.7552, 0.7492]],
        [[0.0855, 0.0850, 0.0840,  ..., 0.0840, 0.0873, 0.0793],
         [0.0855, 0.0850, 0.0840,  ..., 0.0840, 0.0873, 0.0793],
         [0.0855, 0.0850, 0.0840,  ..., 0.0840, 0.0873, 0.0793],
         [0.7434, 0.7449, 0.7481,  ..., 0.7479, 0.7381, 0.7621]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2375e-02, 7.9573e-02, 7.9164e-02,  ..., 8.0397e-02,
          2.5000e-01, 8.1121e-02],
         [7.2375e-02, 7.9573e-02, 7.9164e-02,  ..., 8.0397e-02,
          2.5000e-01, 8.1121e-02],
         [7.2375e-02, 7.9573e-02, 7.9164e-02,  ..., 8.0397e-02,
          2.5000e-01, 8.1121e-02],
         [7.8288e-01, 7.6128e-01, 7.6251e-01,  ..., 7.5881e-01,
          2.5000e-01, 7.5664e-01]],
        [[8.4111e-02, 7.9280e-02, 8.2615e-02,  ..., 2.7909e-05,
          8.2384e-02, 7.7010e-02],
         [8.4111e-02, 7.9280e-02, 8.2615e-02,  ..., 2.7909e-05,
          8.2384e-02, 7.7010e-02],
         [8.4111e-02, 7.9280e-02, 8.2615e-02,  ..., 9.9992e-01,
          8.2384e-02, 7.7010e-02],
         [7.4767e-01, 7.6216e-01, 7.5215e-01,  ..., 2.7909e-05,
          7.5285e-01, 7.6897e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:54,043 [Process: 0] Synchronize training processes
2024-08-16 16:28:54,043 [Process: 0] Evaluating...
2024-08-16 16:28:54,045 [Process: 0] EPOCH 59:
2024-08-16 16:28:54,047 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0811, 0.0881, 0.0879,  ..., 0.0861, 0.0875, 0.0859],
         [0.0811, 0.0881, 0.0879,  ..., 0.0861, 0.0875, 0.0859],
         [0.0811, 0.0881, 0.0879,  ..., 0.0861, 0.0875, 0.0859],
         [0.7567, 0.7358, 0.7362,  ..., 0.7417, 0.7374, 0.7423]],
        [[0.0877, 0.0880, 0.0879,  ..., 0.0844, 0.0880, 0.0819],
         [0.0877, 0.0880, 0.0879,  ..., 0.0844, 0.0880, 0.0819],
         [0.0877, 0.0880, 0.0879,  ..., 0.0844, 0.0880, 0.0819],
         [0.7369, 0.7361, 0.7363,  ..., 0.7469, 0.7360, 0.7543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0781, 0.0789, 0.0773,  ..., 0.0778, 0.0383, 0.0725],
         [0.0781, 0.0789, 0.0773,  ..., 0.0778, 0.0383, 0.0725],
         [0.0781, 0.0789, 0.0773,  ..., 0.0778, 0.8850, 0.0725],
         [0.7657, 0.7633, 0.7682,  ..., 0.7666, 0.0383, 0.7824]],
        [[0.0804, 0.0737, 0.0819,  ..., 0.0021, 0.0799, 0.0788],
         [0.0804, 0.0737, 0.0819,  ..., 0.0021, 0.0799, 0.0788],
         [0.0804, 0.0737, 0.0819,  ..., 0.9937, 0.0799, 0.0788],
         [0.7589, 0.7788, 0.7543,  ..., 0.0021, 0.7602, 0.7636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:56,133 [Process: 0] Synchronize training processes
2024-08-16 16:28:56,133 [Process: 0] Evaluating...
2024-08-16 16:28:56,135 [Process: 0] EPOCH 60:
2024-08-16 16:28:56,137 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0842, 0.0858, 0.0853,  ..., 0.0821, 0.0839, 0.0845],
         [0.0842, 0.0858, 0.0853,  ..., 0.0821, 0.0839, 0.0845],
         [0.0842, 0.0858, 0.0853,  ..., 0.0821, 0.0839, 0.0845],
         [0.7473, 0.7426, 0.7441,  ..., 0.7536, 0.7482, 0.7466]],
        [[0.0879, 0.0836, 0.0897,  ..., 0.0819, 0.0843, 0.0843],
         [0.0879, 0.0836, 0.0897,  ..., 0.0819, 0.0843, 0.0843],
         [0.0879, 0.0836, 0.0897,  ..., 0.0819, 0.0843, 0.0843],
         [0.7364, 0.7492, 0.7309,  ..., 0.7543, 0.7472, 0.7472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0781, 0.0816, 0.0745,  ..., 0.0837, 0.3266, 0.0756],
         [0.0781, 0.0816, 0.0745,  ..., 0.0837, 0.2245, 0.0756],
         [0.0781, 0.0816, 0.0745,  ..., 0.0837, 0.2245, 0.0756],
         [0.7657, 0.7551, 0.7765,  ..., 0.7490, 0.2245, 0.7733]],
        [[0.0772, 0.0771, 0.0776,  ..., 0.0219, 0.0783, 0.0826],
         [0.0772, 0.0771, 0.0776,  ..., 0.0219, 0.0783, 0.0826],
         [0.0772, 0.0771, 0.0776,  ..., 0.9342, 0.0783, 0.0826],
         [0.7684, 0.7686, 0.7671,  ..., 0.0219, 0.7652, 0.7523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:28:58,197 [Process: 0] Synchronize training processes
2024-08-16 16:28:58,197 [Process: 0] Evaluating...
2024-08-16 16:28:58,199 [Process: 0] EPOCH 61:
2024-08-16 16:28:58,201 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0836, 0.0846, 0.0834,  ..., 0.0812, 0.0832, 0.0806],
         [0.0836, 0.0846, 0.0834,  ..., 0.0812, 0.0832, 0.0806],
         [0.0836, 0.0846, 0.0834,  ..., 0.0812, 0.0832, 0.0806],
         [0.7491, 0.7461, 0.7498,  ..., 0.7564, 0.7505, 0.7582]],
        [[0.0834, 0.0839, 0.0870,  ..., 0.0854, 0.0850, 0.0824],
         [0.0834, 0.0839, 0.0870,  ..., 0.0854, 0.0850, 0.0824],
         [0.0834, 0.0839, 0.0870,  ..., 0.0854, 0.0850, 0.0824],
         [0.7497, 0.7482, 0.7390,  ..., 0.7437, 0.7449, 0.7527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2895e-02, 8.0286e-02, 8.0004e-02,  ..., 7.7584e-02,
          3.1271e-01, 8.0774e-02],
         [8.2895e-02, 8.0286e-02, 8.0004e-02,  ..., 7.7584e-02,
          2.2910e-01, 8.0774e-02],
         [8.2895e-02, 8.0286e-02, 8.0004e-02,  ..., 7.7584e-02,
          2.2910e-01, 8.0774e-02],
         [7.5131e-01, 7.5914e-01, 7.5999e-01,  ..., 7.6725e-01,
          2.2910e-01, 7.5768e-01]],
        [[7.5288e-02, 7.9379e-02, 7.7614e-02,  ..., 6.8061e-04,
          7.6552e-02, 7.7140e-02],
         [7.5288e-02, 7.9379e-02, 7.7614e-02,  ..., 6.8061e-04,
          7.6552e-02, 7.7140e-02],
         [7.5288e-02, 7.9379e-02, 7.7614e-02,  ..., 9.9796e-01,
          7.6552e-02, 7.7140e-02],
         [7.7414e-01, 7.6186e-01, 7.6716e-01,  ..., 6.8061e-04,
          7.7034e-01, 7.6858e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:00,298 [Process: 0] Synchronize training processes
2024-08-16 16:29:00,299 [Process: 0] Evaluating...
2024-08-16 16:29:00,307 [Process: 0] EPOCH 62:
2024-08-16 16:29:00,309 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0845, 0.0822, 0.0815,  ..., 0.0768, 0.0793, 0.0850],
         [0.0845, 0.0822, 0.0815,  ..., 0.0768, 0.0793, 0.0850],
         [0.0845, 0.0822, 0.0815,  ..., 0.0768, 0.0793, 0.0850],
         [0.7464, 0.7535, 0.7556,  ..., 0.7697, 0.7621, 0.7451]],
        [[0.0860, 0.0841, 0.0841,  ..., 0.0802, 0.0823, 0.0818],
         [0.0860, 0.0841, 0.0841,  ..., 0.0802, 0.0823, 0.0818],
         [0.0860, 0.0841, 0.0841,  ..., 0.0802, 0.0823, 0.0818],
         [0.7420, 0.7477, 0.7476,  ..., 0.7593, 0.7532, 0.7546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0844, 0.0829, 0.0832,  ..., 0.0819, 0.0935, 0.0786],
         [0.0844, 0.0829, 0.0832,  ..., 0.0819, 0.0935, 0.0786],
         [0.0844, 0.0829, 0.0832,  ..., 0.0819, 0.0935, 0.0786],
         [0.7469, 0.7512, 0.7505,  ..., 0.7543, 0.7196, 0.7643]],
        [[0.0841, 0.0818, 0.0808,  ..., 0.0036, 0.0828, 0.0839],
         [0.0841, 0.0818, 0.0808,  ..., 0.0036, 0.0828, 0.0839],
         [0.0841, 0.0818, 0.0808,  ..., 0.9891, 0.0828, 0.0839],
         [0.7476, 0.7547, 0.7576,  ..., 0.0036, 0.7516, 0.7483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:02,392 [Process: 0] Synchronize training processes
2024-08-16 16:29:02,393 [Process: 0] Evaluating...
2024-08-16 16:29:02,395 [Process: 0] EPOCH 63:
2024-08-16 16:29:02,397 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0807, 0.0804, 0.0811,  ..., 0.0765, 0.0814, 0.0820],
         [0.0807, 0.0804, 0.0811,  ..., 0.0765, 0.0814, 0.0820],
         [0.0807, 0.0804, 0.0811,  ..., 0.0765, 0.0814, 0.0820],
         [0.7580, 0.7589, 0.7566,  ..., 0.7705, 0.7559, 0.7539]],
        [[0.0844, 0.0847, 0.0844,  ..., 0.0825, 0.0830, 0.0847],
         [0.0844, 0.0847, 0.0844,  ..., 0.0825, 0.0830, 0.0847],
         [0.0844, 0.0847, 0.0844,  ..., 0.0825, 0.0830, 0.0847],
         [0.7468, 0.7460, 0.7467,  ..., 0.7524, 0.7511, 0.7460]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0816, 0.0838, 0.0853,  ..., 0.0788, 0.0860, 0.0853],
         [0.0816, 0.0838, 0.0853,  ..., 0.0788, 0.0860, 0.0853],
         [0.0816, 0.0838, 0.0853,  ..., 0.0788, 0.0860, 0.0853],
         [0.7551, 0.7486, 0.7440,  ..., 0.7636, 0.7420, 0.7441]],
        [[0.0853, 0.0809, 0.0784,  ..., 0.0126, 0.0802, 0.0800],
         [0.0853, 0.0809, 0.0784,  ..., 0.0126, 0.0802, 0.0800],
         [0.0853, 0.0809, 0.0784,  ..., 0.9621, 0.0802, 0.0800],
         [0.7441, 0.7574, 0.7648,  ..., 0.0126, 0.7594, 0.7600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0820, 0.0808, 0.0812,  ..., 0.0813, 0.0837, 0.0772],
         [0.0820, 0.0808, 0.0812,  ..., 0.0813, 0.0837, 0.0772],
         [0.0820, 0.0808, 0.0812,  ..., 0.0813, 0.0837, 0.0772],
         [0.7541, 0.7576, 0.7564,  ..., 0.7560, 0.7489, 0.7683]],
        [[0.0837, 0.0825, 0.0822,  ..., 0.0806, 0.0774, 0.0816],
         [0.0837, 0.0825, 0.0822,  ..., 0.0806, 0.0774, 0.0816],
         [0.0837, 0.0825, 0.0822,  ..., 0.0806, 0.0774, 0.0816],
         [0.7489, 0.7524, 0.7535,  ..., 0.7582, 0.7677, 0.7552]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3676e-02, 8.0799e-02, 8.1960e-02,  ..., 8.4882e-02,
          8.5475e-02, 8.0036e-02],
         [8.3676e-02, 8.0799e-02, 8.1960e-02,  ..., 8.4882e-02,
          8.5475e-02, 8.0036e-02],
         [8.3676e-02, 8.0799e-02, 8.1960e-02,  ..., 8.4882e-02,
          8.5475e-02, 8.0036e-02],
         [7.4897e-01, 7.5760e-01, 7.5412e-01,  ..., 7.4535e-01,
          7.4357e-01, 7.5989e-01]],
        [[8.2396e-02, 8.0775e-02, 8.1364e-02,  ..., 5.6197e-05,
          8.3376e-02, 8.2781e-02],
         [8.2396e-02, 8.0775e-02, 8.1364e-02,  ..., 5.6197e-05,
          8.3376e-02, 8.2781e-02],
         [8.2396e-02, 8.0775e-02, 8.1364e-02,  ..., 9.9983e-01,
          8.3376e-02, 8.2781e-02],
         [7.5281e-01, 7.5767e-01, 7.5591e-01,  ..., 5.6197e-05,
          7.4987e-01, 7.5166e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:04,473 [Process: 0] Synchronize training processes
2024-08-16 16:29:04,474 [Process: 0] Evaluating...
2024-08-16 16:29:04,476 [Process: 0] EPOCH 64:
2024-08-16 16:29:04,478 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0748, 0.0743, 0.0736,  ..., 0.0759, 0.0742, 0.0781],
         [0.0748, 0.0743, 0.0736,  ..., 0.0759, 0.0742, 0.0781],
         [0.0748, 0.0743, 0.0736,  ..., 0.0759, 0.0742, 0.0781],
         [0.7757, 0.7772, 0.7791,  ..., 0.7723, 0.7775, 0.7658]],
        [[0.0768, 0.0783, 0.0772,  ..., 0.0748, 0.0791, 0.0744],
         [0.0768, 0.0783, 0.0772,  ..., 0.0748, 0.0791, 0.0744],
         [0.0768, 0.0783, 0.0772,  ..., 0.0748, 0.0791, 0.0744],
         [0.7696, 0.7651, 0.7684,  ..., 0.7757, 0.7626, 0.7768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.2239e-02, 8.0863e-02, 8.2152e-02,  ..., 8.3395e-02,
          8.3177e-02, 8.1417e-02],
         [9.2239e-02, 8.0863e-02, 8.2152e-02,  ..., 8.3395e-02,
          8.3177e-02, 8.1417e-02],
         [9.2239e-02, 8.0863e-02, 8.2152e-02,  ..., 8.3395e-02,
          8.3177e-02, 8.1417e-02],
         [7.2328e-01, 7.5741e-01, 7.5354e-01,  ..., 7.4981e-01,
          7.5047e-01, 7.5575e-01]],
        [[8.2355e-02, 7.9762e-02, 8.3747e-02,  ..., 1.8742e-04,
          8.5197e-02, 8.3921e-02],
         [8.2355e-02, 7.9762e-02, 8.3747e-02,  ..., 1.8742e-04,
          8.5197e-02, 8.3921e-02],
         [8.2355e-02, 7.9762e-02, 8.3747e-02,  ..., 9.9944e-01,
          8.5197e-02, 8.3921e-02],
         [7.5294e-01, 7.6071e-01, 7.4876e-01,  ..., 1.8742e-04,
          7.4441e-01, 7.4824e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:06,558 [Process: 0] Synchronize training processes
2024-08-16 16:29:06,559 [Process: 0] Evaluating...
2024-08-16 16:29:06,561 [Process: 0] EPOCH 65:
2024-08-16 16:29:06,563 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0822, 0.0775, 0.0766,  ..., 0.0772, 0.0825, 0.0760],
         [0.0822, 0.0775, 0.0766,  ..., 0.0772, 0.0825, 0.0760],
         [0.0822, 0.0775, 0.0766,  ..., 0.0772, 0.0825, 0.0760],
         [0.7535, 0.7674, 0.7703,  ..., 0.7684, 0.7525, 0.7719]],
        [[0.0768, 0.0836, 0.0797,  ..., 0.0770, 0.0806, 0.0753],
         [0.0768, 0.0836, 0.0797,  ..., 0.0770, 0.0806, 0.0753],
         [0.0768, 0.0836, 0.0797,  ..., 0.0770, 0.0806, 0.0753],
         [0.7697, 0.7493, 0.7609,  ..., 0.7689, 0.7581, 0.7742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6386e-02, 6.5926e-02, 6.5498e-02,  ..., 6.4539e-02,
          6.8528e-02, 6.8759e-02],
         [6.6386e-02, 6.5926e-02, 6.5498e-02,  ..., 6.4539e-02,
          6.8528e-02, 6.8759e-02],
         [6.6386e-02, 6.5926e-02, 6.5498e-02,  ..., 6.4539e-02,
          6.8528e-02, 6.8759e-02],
         [8.0084e-01, 8.0222e-01, 8.0351e-01,  ..., 8.0638e-01,
          7.9442e-01, 7.9372e-01]],
        [[6.4017e-02, 6.9235e-02, 6.8695e-02,  ..., 1.2142e-04,
          6.6355e-02, 6.4318e-02],
         [6.4017e-02, 6.9235e-02, 6.8695e-02,  ..., 1.2142e-04,
          6.6355e-02, 6.4318e-02],
         [6.4017e-02, 6.9235e-02, 6.8695e-02,  ..., 9.9964e-01,
          6.6355e-02, 6.4318e-02],
         [8.0795e-01, 7.9229e-01, 7.9392e-01,  ..., 1.2142e-04,
          8.0094e-01, 8.0705e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:08,620 [Process: 0] Synchronize training processes
2024-08-16 16:29:08,621 [Process: 0] Evaluating...
2024-08-16 16:29:08,623 [Process: 0] EPOCH 66:
2024-08-16 16:29:08,625 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0740, 0.0763, 0.0753,  ..., 0.0762, 0.0763, 0.0757],
         [0.0740, 0.0763, 0.0753,  ..., 0.0762, 0.0763, 0.0757],
         [0.0740, 0.0763, 0.0753,  ..., 0.0762, 0.0763, 0.0757],
         [0.7781, 0.7710, 0.7740,  ..., 0.7714, 0.7711, 0.7730]],
        [[0.0770, 0.0728, 0.0756,  ..., 0.0743, 0.0764, 0.7022],
         [0.0770, 0.0728, 0.0756,  ..., 0.0743, 0.0764, 0.0993],
         [0.0770, 0.0728, 0.0756,  ..., 0.0743, 0.0764, 0.0993],
         [0.7689, 0.7816, 0.7732,  ..., 0.7770, 0.7707, 0.0993]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2780e-02, 8.2922e-02, 8.4868e-02,  ..., 8.3321e-02,
          8.2937e-02, 8.4521e-02],
         [8.2780e-02, 8.2922e-02, 8.4868e-02,  ..., 8.3321e-02,
          8.2937e-02, 8.4521e-02],
         [8.2780e-02, 8.2922e-02, 8.4868e-02,  ..., 8.3321e-02,
          8.2937e-02, 8.4521e-02],
         [7.5166e-01, 7.5124e-01, 7.4540e-01,  ..., 7.5004e-01,
          7.5119e-01, 7.4644e-01]],
        [[8.2973e-02, 8.3406e-02, 8.4149e-02,  ..., 9.6578e-04,
          8.4429e-02, 8.3355e-02],
         [8.2973e-02, 8.3406e-02, 8.4149e-02,  ..., 9.6578e-04,
          8.4429e-02, 8.3355e-02],
         [8.2973e-02, 8.3406e-02, 8.4149e-02,  ..., 9.9710e-01,
          8.4429e-02, 8.3355e-02],
         [7.5108e-01, 7.4978e-01, 7.4755e-01,  ..., 9.6578e-04,
          7.4671e-01, 7.4994e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:10,701 [Process: 0] Synchronize training processes
2024-08-16 16:29:10,702 [Process: 0] Evaluating...
2024-08-16 16:29:10,703 [Process: 0] EPOCH 67:
2024-08-16 16:29:10,705 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0960, 0.0937, 0.0946,  ..., 0.0927, 0.0972, 0.0948],
         [0.0960, 0.0937, 0.0946,  ..., 0.0927, 0.0972, 0.0948],
         [0.0960, 0.0937, 0.0946,  ..., 0.0927, 0.0972, 0.0948],
         [0.7121, 0.7190, 0.7162,  ..., 0.7219, 0.7083, 0.7157]],
        [[0.0962, 0.0964, 0.0951,  ..., 0.0962, 0.0966, 0.0966],
         [0.0962, 0.0964, 0.0951,  ..., 0.0962, 0.0966, 0.0966],
         [0.0962, 0.0964, 0.0951,  ..., 0.0962, 0.0966, 0.0966],
         [0.7114, 0.7108, 0.7148,  ..., 0.7114, 0.7101, 0.7102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.5230e-02, 9.5950e-02, 9.7439e-02,  ..., 9.6581e-02,
          9.7890e-02, 9.7755e-02],
         [9.5230e-02, 9.5950e-02, 9.7439e-02,  ..., 9.6581e-02,
          9.7890e-02, 9.7755e-02],
         [9.5230e-02, 9.5950e-02, 9.7439e-02,  ..., 9.6581e-02,
          9.7890e-02, 9.7755e-02],
         [7.1431e-01, 7.1215e-01, 7.0768e-01,  ..., 7.1026e-01,
          7.0633e-01, 7.0674e-01]],
        [[9.6362e-02, 9.4919e-02, 9.4957e-02,  ..., 1.0046e-04,
          9.5889e-02, 9.4770e-02],
         [9.6362e-02, 9.4919e-02, 9.4957e-02,  ..., 1.0046e-04,
          9.5889e-02, 9.4770e-02],
         [9.6362e-02, 9.4919e-02, 9.4957e-02,  ..., 9.9970e-01,
          9.5889e-02, 9.4770e-02],
         [7.1091e-01, 7.1524e-01, 7.1513e-01,  ..., 1.0046e-04,
          7.1233e-01, 7.1569e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:12,780 [Process: 0] Synchronize training processes
2024-08-16 16:29:12,780 [Process: 0] Evaluating...
2024-08-16 16:29:12,782 [Process: 0] EPOCH 68:
2024-08-16 16:29:12,784 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0983, 0.0995, 0.0979,  ..., 0.0945, 0.0957, 0.0931],
         [0.0983, 0.0995, 0.0979,  ..., 0.0945, 0.0957, 0.0931],
         [0.0983, 0.0995, 0.0979,  ..., 0.0945, 0.0957, 0.0931],
         [0.7052, 0.7014, 0.7064,  ..., 0.7164, 0.7129, 0.7206]],
        [[0.0956, 0.0959, 0.0958,  ..., 0.0942, 0.0946, 0.0929],
         [0.0956, 0.0959, 0.0958,  ..., 0.0942, 0.0946, 0.0929],
         [0.0956, 0.0959, 0.0958,  ..., 0.0942, 0.0946, 0.0929],
         [0.7131, 0.7122, 0.7125,  ..., 0.7174, 0.7162, 0.7213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4180e-02, 9.4718e-02, 9.5747e-02,  ..., 9.4012e-02,
          9.7326e-02, 9.4662e-02],
         [9.4180e-02, 9.4718e-02, 9.5747e-02,  ..., 9.4012e-02,
          9.7326e-02, 9.4662e-02],
         [9.4180e-02, 9.4718e-02, 9.5747e-02,  ..., 9.4012e-02,
          9.7326e-02, 9.4662e-02],
         [7.1746e-01, 7.1585e-01, 7.1276e-01,  ..., 7.1796e-01,
          7.0802e-01, 7.1601e-01]],
        [[9.4372e-02, 9.2350e-02, 9.2936e-02,  ..., 6.5616e-06,
          9.2177e-02, 9.2500e-02],
         [9.4372e-02, 9.2350e-02, 9.2936e-02,  ..., 2.6223e-06,
          9.2177e-02, 9.2500e-02],
         [9.4372e-02, 9.2350e-02, 9.2936e-02,  ..., 9.9999e-01,
          9.2177e-02, 9.2500e-02],
         [7.1688e-01, 7.2295e-01, 7.2119e-01,  ..., 2.6223e-06,
          7.2347e-01, 7.2250e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:14,872 [Process: 0] Synchronize training processes
2024-08-16 16:29:14,872 [Process: 0] Evaluating...
2024-08-16 16:29:14,874 [Process: 0] EPOCH 69:
2024-08-16 16:29:14,876 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0892, 0.0913, 0.0891,  ..., 0.0892, 0.0930, 0.0864],
         [0.0892, 0.0913, 0.0891,  ..., 0.0892, 0.0930, 0.0864],
         [0.0892, 0.0913, 0.0891,  ..., 0.0892, 0.0930, 0.0864],
         [0.7325, 0.7260, 0.7328,  ..., 0.7324, 0.7209, 0.7407]],
        [[0.0844, 0.0846, 0.0838,  ..., 0.0835, 0.0860, 0.0842],
         [0.0844, 0.0846, 0.0838,  ..., 0.0835, 0.0860, 0.0842],
         [0.0844, 0.0846, 0.0838,  ..., 0.0835, 0.0860, 0.0842],
         [0.7467, 0.7461, 0.7485,  ..., 0.7494, 0.7419, 0.7475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:29:16,961 [Process: 0] Synchronize training processes
2024-08-16 16:29:16,961 [Process: 0] Evaluating...
2024-08-16 16:29:16,963 [Process: 0] EPOCH 70:
2024-08-16 16:29:16,965 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6988e-02, 9.2294e-02, 8.9837e-02,  ..., 9.3238e-02,
          9.4317e-02, 9.5693e-02],
         [8.6988e-02, 9.2294e-02, 8.9837e-02,  ..., 9.3238e-02,
          9.4317e-02, 9.5693e-02],
         [8.6988e-02, 9.2294e-02, 8.9837e-02,  ..., 9.3238e-02,
          9.4317e-02, 9.5693e-02],
         [7.3903e-01, 7.2312e-01, 7.3049e-01,  ..., 7.2029e-01,
          7.1705e-01, 7.1292e-01]],
        [[8.7660e-02, 8.7485e-02, 8.8853e-02,  ..., 2.0906e-05,
          8.7871e-02, 8.6429e-02],
         [8.7660e-02, 8.7485e-02, 8.8853e-02,  ..., 1.5090e-05,
          8.7871e-02, 8.6429e-02],
         [8.7660e-02, 8.7485e-02, 8.8853e-02,  ..., 9.9995e-01,
          8.7871e-02, 8.6429e-02],
         [7.3702e-01, 7.3754e-01, 7.3344e-01,  ..., 1.5090e-05,
          7.3639e-01, 7.4071e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0995, 0.0925, 0.0915,  ..., 0.0893, 0.1053, 0.0961],
         [0.0995, 0.0925, 0.0915,  ..., 0.0893, 0.1053, 0.0961],
         [0.0995, 0.0925, 0.0915,  ..., 0.0893, 0.1053, 0.0961],
         [0.7016, 0.7225, 0.7256,  ..., 0.7321, 0.6841, 0.7118]],
        [[0.0824, 0.0762, 0.0757,  ..., 0.0722, 0.0714, 0.0717],
         [0.0824, 0.0762, 0.0757,  ..., 0.0722, 0.0714, 0.0717],
         [0.0824, 0.0762, 0.0757,  ..., 0.0722, 0.0714, 0.0717],
         [0.7528, 0.7713, 0.7729,  ..., 0.7835, 0.7858, 0.7849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:19,028 [Process: 0] Synchronize training processes
2024-08-16 16:29:19,028 [Process: 0] Evaluating...
2024-08-16 16:29:19,030 [Process: 0] EPOCH 71:
2024-08-16 16:29:19,032 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2616e-01, 1.2922e-01, 1.0637e-01,  ..., 1.2460e-01,
          1.0337e-01, 1.0637e-01],
         [1.2616e-01, 1.2922e-01, 1.0637e-01,  ..., 1.2460e-01,
          1.0337e-01, 1.0637e-01],
         [1.2616e-01, 1.2922e-01, 1.0637e-01,  ..., 1.2460e-01,
          1.0337e-01, 1.0637e-01],
         [6.2152e-01, 6.1235e-01, 6.8090e-01,  ..., 6.2620e-01,
          6.8990e-01, 6.8090e-01]],
        [[6.6937e-02, 6.4747e-02, 7.0059e-02,  ..., 2.0796e-04,
          6.6227e-02, 6.5937e-02],
         [6.6937e-02, 6.4747e-02, 7.0059e-02,  ..., 9.1391e-05,
          6.6227e-02, 6.5937e-02],
         [6.6937e-02, 6.4747e-02, 7.0059e-02,  ..., 9.9961e-01,
          6.6227e-02, 6.5937e-02],
         [7.9919e-01, 8.0576e-01, 7.8982e-01,  ..., 9.1391e-05,
          8.0132e-01, 8.0219e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0861, 0.0914, 0.0893,  ..., 0.0975, 0.0939, 0.0871],
         [0.0861, 0.0914, 0.0893,  ..., 0.0975, 0.0939, 0.0871],
         [0.0861, 0.0914, 0.0893,  ..., 0.0975, 0.0939, 0.0871],
         [0.7417, 0.7259, 0.7322,  ..., 0.7076, 0.7184, 0.7387]],
        [[0.0826, 0.0796, 0.0744,  ..., 0.0746, 0.0752, 0.0721],
         [0.0826, 0.0796, 0.0744,  ..., 0.0746, 0.0752, 0.0721],
         [0.0826, 0.0796, 0.0744,  ..., 0.0746, 0.0752, 0.0721],
         [0.7523, 0.7613, 0.7769,  ..., 0.7761, 0.7745, 0.7838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:21,059 [Process: 0] Synchronize training processes
2024-08-16 16:29:21,059 [Process: 0] Evaluating...
2024-08-16 16:29:21,068 [Process: 0] EPOCH 72:
2024-08-16 16:29:21,070 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.1661e-02, 1.0034e-01, 9.6213e-02,  ..., 9.3176e-02,
          8.9282e-02, 9.6206e-02],
         [9.1661e-02, 1.0034e-01, 9.6213e-02,  ..., 9.3176e-02,
          8.9282e-02, 9.6206e-02],
         [9.1661e-02, 1.0034e-01, 9.6213e-02,  ..., 9.3176e-02,
          8.9282e-02, 9.6206e-02],
         [7.2502e-01, 6.9899e-01, 7.1136e-01,  ..., 7.2047e-01,
          7.3215e-01, 7.1138e-01]],
        [[8.4823e-02, 8.7922e-02, 9.1412e-02,  ..., 1.3444e-05,
          8.3929e-02, 8.2423e-02],
         [8.4823e-02, 8.7922e-02, 9.1412e-02,  ..., 6.5580e-06,
          8.3929e-02, 8.2423e-02],
         [8.4823e-02, 8.7922e-02, 9.1412e-02,  ..., 9.9997e-01,
          8.3929e-02, 8.2423e-02],
         [7.4553e-01, 7.3623e-01, 7.2576e-01,  ..., 6.5580e-06,
          7.4821e-01, 7.5273e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0790, 0.0766, 0.0815,  ..., 0.0721, 0.1024, 0.0834],
         [0.0790, 0.0766, 0.0815,  ..., 0.0721, 0.1024, 0.0834],
         [0.0790, 0.0766, 0.0815,  ..., 0.0721, 0.1024, 0.0834],
         [0.7629, 0.7702, 0.7554,  ..., 0.7838, 0.6927, 0.7497]],
        [[0.0722, 0.0769, 0.0709,  ..., 0.0698, 0.0718, 0.0715],
         [0.0722, 0.0769, 0.0709,  ..., 0.0698, 0.0718, 0.0715],
         [0.0722, 0.0769, 0.0709,  ..., 0.0698, 0.0718, 0.0715],
         [0.7834, 0.7693, 0.7872,  ..., 0.7905, 0.7847, 0.7854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:23,165 [Process: 0] Synchronize training processes
2024-08-16 16:29:23,165 [Process: 0] Evaluating...
2024-08-16 16:29:23,167 [Process: 0] EPOCH 73:
2024-08-16 16:29:23,169 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5652e-02, 8.3376e-02, 8.1147e-02,  ..., 8.6446e-02,
          8.4512e-02, 8.2281e-02],
         [8.5652e-02, 8.3376e-02, 8.1147e-02,  ..., 8.6446e-02,
          8.4512e-02, 8.2281e-02],
         [8.5652e-02, 8.3376e-02, 8.1147e-02,  ..., 8.6446e-02,
          8.4512e-02, 8.2281e-02],
         [7.4304e-01, 7.4987e-01, 7.5656e-01,  ..., 7.4066e-01,
          7.4646e-01, 7.5316e-01]],
        [[8.8894e-02, 1.1192e-01, 9.4292e-02,  ..., 2.8684e-06,
          7.8457e-02, 7.7020e-02],
         [8.8894e-02, 1.1192e-01, 9.4292e-02,  ..., 2.8684e-06,
          7.8457e-02, 7.7020e-02],
         [8.8894e-02, 1.1192e-01, 9.4292e-02,  ..., 9.9999e-01,
          7.8457e-02, 7.7020e-02],
         [7.3332e-01, 6.6425e-01, 7.1712e-01,  ..., 2.8684e-06,
          7.6463e-01, 7.6894e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0608, 0.0614, 0.0627,  ..., 0.0600, 0.3916, 0.1349],
         [0.0608, 0.0614, 0.0627,  ..., 0.0600, 0.2028, 0.1349],
         [0.0608, 0.0614, 0.0627,  ..., 0.0600, 0.2028, 0.1349],
         [0.8177, 0.8159, 0.8119,  ..., 0.8200, 0.2028, 0.5952]],
        [[0.0586, 0.0627, 0.0608,  ..., 0.0590, 0.0570, 0.0606],
         [0.0586, 0.0627, 0.0608,  ..., 0.0590, 0.0570, 0.0606],
         [0.0586, 0.0627, 0.0608,  ..., 0.0590, 0.0570, 0.0606],
         [0.8242, 0.8118, 0.8177,  ..., 0.8230, 0.8290, 0.8182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:25,266 [Process: 0] Synchronize training processes
2024-08-16 16:29:25,267 [Process: 0] Evaluating...
2024-08-16 16:29:25,269 [Process: 0] EPOCH 74:
2024-08-16 16:29:25,271 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8285e-02, 7.3889e-02, 8.0816e-02,  ..., 7.5259e-02,
          7.6955e-02, 7.3910e-02],
         [7.8285e-02, 7.3889e-02, 8.0816e-02,  ..., 7.5259e-02,
          7.6955e-02, 7.3910e-02],
         [7.8285e-02, 7.3889e-02, 8.0816e-02,  ..., 7.5259e-02,
          7.6955e-02, 7.3910e-02],
         [7.6514e-01, 7.7833e-01, 7.5755e-01,  ..., 7.7422e-01,
          7.6913e-01, 7.7827e-01]],
        [[8.9974e-02, 1.0188e-01, 8.6750e-02,  ..., 3.7885e-06,
          7.3258e-02, 7.6301e-02],
         [8.9974e-02, 1.0188e-01, 8.6750e-02,  ..., 3.7885e-06,
          7.3258e-02, 7.6301e-02],
         [8.9974e-02, 1.0188e-01, 8.6750e-02,  ..., 9.9999e-01,
          7.3258e-02, 7.6301e-02],
         [7.3008e-01, 6.9436e-01, 7.3975e-01,  ..., 3.7885e-06,
          7.8023e-01, 7.7110e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0677, 0.0704, 0.0709,  ..., 0.0680, 0.0771, 0.0675],
         [0.0677, 0.0704, 0.0709,  ..., 0.0680, 0.0771, 0.0675],
         [0.0677, 0.0704, 0.0709,  ..., 0.0680, 0.0771, 0.0675],
         [0.7970, 0.7887, 0.7874,  ..., 0.7959, 0.7686, 0.7974]],
        [[0.0729, 0.0688, 0.0680,  ..., 0.0679, 0.0675, 0.0701],
         [0.0729, 0.0688, 0.0680,  ..., 0.0679, 0.0675, 0.0701],
         [0.0729, 0.0688, 0.0680,  ..., 0.0679, 0.0675, 0.0701],
         [0.7813, 0.7936, 0.7959,  ..., 0.7964, 0.7975, 0.7898]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:27,341 [Process: 0] Synchronize training processes
2024-08-16 16:29:27,342 [Process: 0] Evaluating...
2024-08-16 16:29:27,344 [Process: 0] EPOCH 75:
2024-08-16 16:29:27,345 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9499e-02, 8.0210e-02, 8.4354e-02,  ..., 8.7271e-02,
          1.0116e-01, 9.1697e-02],
         [7.9499e-02, 8.0210e-02, 8.4354e-02,  ..., 8.7271e-02,
          1.0116e-01, 9.1697e-02],
         [7.9499e-02, 8.0210e-02, 8.4354e-02,  ..., 8.7271e-02,
          1.0116e-01, 9.1697e-02],
         [7.6150e-01, 7.5937e-01, 7.4694e-01,  ..., 7.3819e-01,
          6.9651e-01, 7.2491e-01]],
        [[6.6135e-02, 6.4478e-02, 6.6685e-02,  ..., 6.4460e-05,
          6.2646e-02, 6.3748e-02],
         [6.6135e-02, 6.4478e-02, 6.6685e-02,  ..., 5.5148e-05,
          6.2646e-02, 6.3748e-02],
         [6.6135e-02, 6.4478e-02, 6.6685e-02,  ..., 9.9983e-01,
          6.2646e-02, 6.3748e-02],
         [8.0159e-01, 8.0657e-01, 7.9994e-01,  ..., 5.5148e-05,
          8.1206e-01, 8.0875e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0760, 0.0775, 0.0771,  ..., 0.0756, 0.0727, 0.0771],
         [0.0760, 0.0775, 0.0771,  ..., 0.0756, 0.0727, 0.0771],
         [0.0760, 0.0775, 0.0771,  ..., 0.0756, 0.0727, 0.0771],
         [0.7721, 0.7674, 0.7687,  ..., 0.7732, 0.7820, 0.7687]],
        [[0.0782, 0.0878, 0.0857,  ..., 0.0776, 0.1193, 0.0934],
         [0.0782, 0.0878, 0.0857,  ..., 0.0776, 0.1193, 0.0934],
         [0.0782, 0.0878, 0.0857,  ..., 0.0776, 0.1193, 0.0934],
         [0.7653, 0.7367, 0.7429,  ..., 0.7671, 0.6422, 0.7197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:29,420 [Process: 0] Synchronize training processes
2024-08-16 16:29:29,420 [Process: 0] Evaluating...
2024-08-16 16:29:29,422 [Process: 0] EPOCH 76:
2024-08-16 16:29:29,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.4826e-02, 8.8634e-02, 8.4901e-02,  ..., 8.4477e-02,
          8.8013e-02, 8.8800e-02],
         [8.4826e-02, 8.8634e-02, 8.4901e-02,  ..., 8.4477e-02,
          8.8013e-02, 8.8800e-02],
         [8.4826e-02, 8.8634e-02, 8.4901e-02,  ..., 8.4477e-02,
          8.8013e-02, 8.8800e-02],
         [7.4552e-01, 7.3410e-01, 7.4530e-01,  ..., 7.4657e-01,
          7.3596e-01, 7.3360e-01]],
        [[8.6158e-02, 8.6909e-02, 8.4298e-02,  ..., 1.6016e-03,
          8.0983e-02, 7.9665e-02],
         [8.6158e-02, 8.6909e-02, 8.4298e-02,  ..., 2.7868e-04,
          8.0983e-02, 7.9665e-02],
         [8.6158e-02, 8.6909e-02, 8.4298e-02,  ..., 9.9784e-01,
          8.0983e-02, 7.9665e-02],
         [7.4153e-01, 7.3927e-01, 7.4711e-01,  ..., 2.7868e-04,
          7.5705e-01, 7.6100e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0740, 0.0753, 0.0745,  ..., 0.0739, 0.0733, 0.0750],
         [0.0740, 0.0753, 0.0745,  ..., 0.0739, 0.0733, 0.0750],
         [0.0740, 0.0753, 0.0745,  ..., 0.0739, 0.0733, 0.0750],
         [0.7779, 0.7740, 0.7764,  ..., 0.7784, 0.7800, 0.7750]],
        [[0.0753, 0.0759, 0.0724,  ..., 0.0768, 0.0789, 0.0771],
         [0.0753, 0.0759, 0.0724,  ..., 0.0768, 0.0789, 0.0771],
         [0.0753, 0.0759, 0.0724,  ..., 0.0768, 0.0789, 0.0771],
         [0.7741, 0.7724, 0.7829,  ..., 0.7697, 0.7634, 0.7686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:31,508 [Process: 0] Synchronize training processes
2024-08-16 16:29:31,508 [Process: 0] Evaluating...
2024-08-16 16:29:31,510 [Process: 0] EPOCH 77:
2024-08-16 16:29:31,512 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9478e-02, 8.2705e-02, 8.5137e-02,  ..., 8.6726e-02,
          8.1255e-02, 8.1828e-02],
         [7.9478e-02, 8.2705e-02, 8.5137e-02,  ..., 8.6726e-02,
          8.1255e-02, 8.1828e-02],
         [7.9478e-02, 8.2705e-02, 8.5137e-02,  ..., 8.6726e-02,
          8.1255e-02, 8.1828e-02],
         [7.6157e-01, 7.5189e-01, 7.4459e-01,  ..., 7.3982e-01,
          7.5624e-01, 7.5452e-01]],
        [[8.4218e-02, 8.6703e-02, 8.5844e-02,  ..., 7.0387e-04,
          8.2787e-02, 8.6104e-02],
         [8.4218e-02, 8.6703e-02, 8.5844e-02,  ..., 3.4742e-04,
          8.2787e-02, 8.6104e-02],
         [8.4218e-02, 8.6703e-02, 8.5844e-02,  ..., 9.9860e-01,
          8.2787e-02, 8.6104e-02],
         [7.4735e-01, 7.3989e-01, 7.4247e-01,  ..., 3.4742e-04,
          7.5164e-01, 7.4169e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0658, 0.0639, 0.0610,  ..., 0.0654, 0.0663, 0.0631],
         [0.0658, 0.0639, 0.0610,  ..., 0.0654, 0.0663, 0.0631],
         [0.0658, 0.0639, 0.0610,  ..., 0.0654, 0.0663, 0.0631],
         [0.8027, 0.8083, 0.8171,  ..., 0.8037, 0.8010, 0.8107]],
        [[0.0640, 0.0644, 0.0652,  ..., 0.0701, 0.0677, 0.0653],
         [0.0640, 0.0644, 0.0652,  ..., 0.0701, 0.0677, 0.0653],
         [0.0640, 0.0644, 0.0652,  ..., 0.0701, 0.0677, 0.0653],
         [0.8080, 0.8069, 0.8044,  ..., 0.7896, 0.7969, 0.8040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:33,589 [Process: 0] Synchronize training processes
2024-08-16 16:29:33,590 [Process: 0] Evaluating...
2024-08-16 16:29:33,592 [Process: 0] EPOCH 78:
2024-08-16 16:29:33,593 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0798, 0.0764, 0.0774,  ..., 0.0748, 0.0760, 0.0777],
         [0.0798, 0.0764, 0.0774,  ..., 0.0748, 0.0760, 0.0777],
         [0.0798, 0.0764, 0.0774,  ..., 0.0748, 0.0760, 0.0777],
         [0.7607, 0.7709, 0.7678,  ..., 0.7756, 0.7721, 0.7669]],
        [[0.0812, 0.0815, 0.0839,  ..., 0.0126, 0.0738, 0.0735],
         [0.0812, 0.0815, 0.0839,  ..., 0.0091, 0.0738, 0.0735],
         [0.0812, 0.0815, 0.0839,  ..., 0.9692, 0.0738, 0.0735],
         [0.7563, 0.7555, 0.7482,  ..., 0.0091, 0.7785, 0.7796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0636, 0.0634, 0.0671,  ..., 0.0587, 0.0610, 0.0622],
         [0.0636, 0.0634, 0.0671,  ..., 0.0587, 0.0610, 0.0622],
         [0.0636, 0.0634, 0.0671,  ..., 0.0587, 0.0610, 0.0622],
         [0.8093, 0.8098, 0.7988,  ..., 0.8238, 0.8170, 0.8133]],
        [[0.0612, 0.0646, 0.0616,  ..., 0.0654, 0.0611, 0.0613],
         [0.0612, 0.0646, 0.0616,  ..., 0.0654, 0.0611, 0.0613],
         [0.0612, 0.0646, 0.0616,  ..., 0.0654, 0.0611, 0.0613],
         [0.8165, 0.8061, 0.8151,  ..., 0.8039, 0.8166, 0.8160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:35,674 [Process: 0] Synchronize training processes
2024-08-16 16:29:35,674 [Process: 0] Evaluating...
2024-08-16 16:29:35,676 [Process: 0] EPOCH 79:
2024-08-16 16:29:35,678 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0759, 0.0715, 0.0670,  ..., 0.0789, 0.0833, 0.0815],
         [0.0759, 0.0715, 0.0670,  ..., 0.0789, 0.0833, 0.0815],
         [0.0759, 0.0715, 0.0670,  ..., 0.0789, 0.0833, 0.0815],
         [0.7722, 0.7854, 0.7990,  ..., 0.7632, 0.7500, 0.7555]],
        [[0.0741, 0.0729, 0.0725,  ..., 0.0024, 0.0637, 0.0703],
         [0.0741, 0.0729, 0.0725,  ..., 0.0016, 0.0637, 0.0703],
         [0.0741, 0.0729, 0.0725,  ..., 0.9943, 0.0637, 0.0703],
         [0.7776, 0.7813, 0.7825,  ..., 0.0016, 0.8088, 0.7891]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0619, 0.0600, 0.0591,  ..., 0.0623, 0.0609, 0.0668],
         [0.0619, 0.0600, 0.0591,  ..., 0.0623, 0.0609, 0.0668],
         [0.0619, 0.0600, 0.0591,  ..., 0.0623, 0.0609, 0.0668],
         [0.8143, 0.8199, 0.8227,  ..., 0.8130, 0.8173, 0.7995]],
        [[0.0610, 0.0627, 0.0593,  ..., 0.0653, 0.0653, 0.0645],
         [0.0610, 0.0627, 0.0593,  ..., 0.0653, 0.0653, 0.0645],
         [0.0610, 0.0627, 0.0593,  ..., 0.0653, 0.0653, 0.0645],
         [0.8169, 0.8120, 0.8220,  ..., 0.8040, 0.8041, 0.8066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:37,758 [Process: 0] Synchronize training processes
2024-08-16 16:29:37,759 [Process: 0] Evaluating...
2024-08-16 16:29:37,760 [Process: 0] EPOCH 80:
2024-08-16 16:29:37,762 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0681, 0.0638, 0.0694,  ..., 0.0730, 0.0925, 0.0868],
         [0.0681, 0.0638, 0.0694,  ..., 0.0730, 0.0925, 0.0868],
         [0.0681, 0.0638, 0.0694,  ..., 0.0730, 0.0925, 0.0868],
         [0.7957, 0.8085, 0.7918,  ..., 0.7811, 0.7224, 0.7396]],
        [[0.0689, 0.0674, 0.0682,  ..., 0.0174, 0.0621, 0.0637],
         [0.0689, 0.0674, 0.0682,  ..., 0.0040, 0.0621, 0.0637],
         [0.0689, 0.0674, 0.0682,  ..., 0.9746, 0.0621, 0.0637],
         [0.7934, 0.7979, 0.7953,  ..., 0.0040, 0.8137, 0.8089]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0595, 0.0590, 0.0617,  ..., 0.0612, 0.0587, 0.0585],
         [0.0595, 0.0590, 0.0617,  ..., 0.0612, 0.0587, 0.0585],
         [0.0595, 0.0590, 0.0617,  ..., 0.0612, 0.0587, 0.0585],
         [0.8214, 0.8230, 0.8148,  ..., 0.8163, 0.8238, 0.8245]],
        [[0.0618, 0.0621, 0.0643,  ..., 0.0575, 0.0626, 0.0621],
         [0.0618, 0.0621, 0.0643,  ..., 0.0575, 0.0626, 0.0621],
         [0.0618, 0.0621, 0.0643,  ..., 0.0575, 0.0626, 0.0621],
         [0.8146, 0.8137, 0.8071,  ..., 0.8274, 0.8123, 0.8137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:39,843 [Process: 0] Synchronize training processes
2024-08-16 16:29:39,844 [Process: 0] Evaluating...
2024-08-16 16:29:39,846 [Process: 0] EPOCH 81:
2024-08-16 16:29:39,848 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1897e-02, 6.4875e-02, 6.0958e-02,  ..., 7.4954e-02,
          9.6119e-02, 8.0525e-02],
         [7.1897e-02, 6.4875e-02, 6.0958e-02,  ..., 7.4954e-02,
          9.6119e-02, 8.0525e-02],
         [7.1897e-02, 6.4875e-02, 6.0958e-02,  ..., 7.4954e-02,
          9.6119e-02, 8.0525e-02],
         [7.8431e-01, 8.0538e-01, 8.1713e-01,  ..., 7.7514e-01,
          7.1164e-01, 7.5843e-01]],
        [[6.6538e-02, 6.2939e-02, 6.8475e-02,  ..., 1.2279e-06,
          5.7117e-02, 6.2229e-02],
         [6.6538e-02, 6.2939e-02, 6.8475e-02,  ..., 1.2067e-06,
          5.7117e-02, 6.2229e-02],
         [6.6538e-02, 6.2939e-02, 6.8475e-02,  ..., 1.0000e+00,
          5.7117e-02, 6.2229e-02],
         [8.0039e-01, 8.1118e-01, 7.9457e-01,  ..., 1.2067e-06,
          8.2865e-01, 8.1331e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0600, 0.0585, 0.0590,  ..., 0.0551, 0.0639, 0.0592],
         [0.0600, 0.0585, 0.0590,  ..., 0.0551, 0.0639, 0.0592],
         [0.0600, 0.0585, 0.0590,  ..., 0.0551, 0.0639, 0.0592],
         [0.8199, 0.8246, 0.8229,  ..., 0.8347, 0.8083, 0.8225]],
        [[0.0635, 0.0628, 0.0639,  ..., 0.0621, 0.0602, 0.0622],
         [0.0635, 0.0628, 0.0639,  ..., 0.0621, 0.0602, 0.0622],
         [0.0635, 0.0628, 0.0639,  ..., 0.0621, 0.0602, 0.0622],
         [0.8096, 0.8115, 0.8082,  ..., 0.8138, 0.8195, 0.8133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:41,928 [Process: 0] Synchronize training processes
2024-08-16 16:29:41,928 [Process: 0] Evaluating...
2024-08-16 16:29:41,936 [Process: 0] EPOCH 82:
2024-08-16 16:29:41,938 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.0414e-02, 6.4952e-02, 7.0489e-02,  ..., 7.2954e-02,
          8.1171e-02, 8.0366e-02],
         [7.0414e-02, 6.4952e-02, 7.0489e-02,  ..., 7.2954e-02,
          8.1171e-02, 8.0366e-02],
         [7.0414e-02, 6.4952e-02, 7.0489e-02,  ..., 7.2954e-02,
          8.1171e-02, 8.0366e-02],
         [7.8876e-01, 8.0514e-01, 7.8853e-01,  ..., 7.8114e-01,
          7.5649e-01, 7.5890e-01]],
        [[6.9758e-02, 7.5002e-02, 7.2466e-02,  ..., 6.7288e-06,
          6.9469e-02, 7.0302e-02],
         [6.9758e-02, 7.5002e-02, 7.2466e-02,  ..., 2.6631e-06,
          6.9469e-02, 7.0302e-02],
         [6.9758e-02, 7.5002e-02, 7.2466e-02,  ..., 9.9999e-01,
          6.9469e-02, 7.0302e-02],
         [7.9073e-01, 7.7500e-01, 7.8260e-01,  ..., 2.6631e-06,
          7.9159e-01, 7.8909e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0554, 0.0602, 0.0608,  ..., 0.0564, 0.0574, 0.0583],
         [0.0554, 0.0602, 0.0608,  ..., 0.0564, 0.0574, 0.0583],
         [0.0554, 0.0602, 0.0608,  ..., 0.0564, 0.0574, 0.0583],
         [0.8337, 0.8195, 0.8175,  ..., 0.8307, 0.8279, 0.8251]],
        [[0.0654, 0.0614, 0.0640,  ..., 0.0616, 0.0650, 0.0624],
         [0.0654, 0.0614, 0.0640,  ..., 0.0616, 0.0650, 0.0624],
         [0.0654, 0.0614, 0.0640,  ..., 0.0616, 0.0650, 0.0624],
         [0.8038, 0.8157, 0.8079,  ..., 0.8152, 0.8050, 0.8129]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:43,999 [Process: 0] Synchronize training processes
2024-08-16 16:29:43,999 [Process: 0] Evaluating...
2024-08-16 16:29:44,001 [Process: 0] EPOCH 83:
2024-08-16 16:29:44,003 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0529e-02, 6.0183e-02, 6.1364e-02,  ..., 7.3823e-02,
          7.6721e-02, 8.0703e-02],
         [6.0529e-02, 6.0183e-02, 6.1364e-02,  ..., 7.3823e-02,
          7.6721e-02, 8.0703e-02],
         [6.0529e-02, 6.0183e-02, 6.1364e-02,  ..., 7.3823e-02,
          7.6721e-02, 8.0703e-02],
         [8.1841e-01, 8.1945e-01, 8.1591e-01,  ..., 7.7853e-01,
          7.6984e-01, 7.5789e-01]],
        [[6.8965e-02, 6.4355e-02, 6.6982e-02,  ..., 2.7566e-06,
          6.3332e-02, 6.3229e-02],
         [6.8965e-02, 6.4355e-02, 6.6982e-02,  ..., 2.7566e-06,
          6.3332e-02, 6.3229e-02],
         [6.8965e-02, 6.4355e-02, 6.6982e-02,  ..., 9.9999e-01,
          6.3332e-02, 6.3229e-02],
         [7.9310e-01, 8.0693e-01, 7.9905e-01,  ..., 2.7566e-06,
          8.1001e-01, 8.1031e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0567, 0.0558, 0.0573,  ..., 0.0590, 0.0563, 0.0566],
         [0.0567, 0.0558, 0.0573,  ..., 0.0590, 0.0563, 0.0566],
         [0.0567, 0.0558, 0.0573,  ..., 0.0590, 0.0563, 0.0566],
         [0.8300, 0.8325, 0.8281,  ..., 0.8231, 0.8312, 0.8303]],
        [[0.0630, 0.0595, 0.0639,  ..., 0.0603, 0.0642, 0.0617],
         [0.0630, 0.0595, 0.0639,  ..., 0.0603, 0.0642, 0.0617],
         [0.0630, 0.0595, 0.0639,  ..., 0.0603, 0.0642, 0.0617],
         [0.8111, 0.8216, 0.8084,  ..., 0.8190, 0.8073, 0.8148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:29:46,085 [Process: 0] Synchronize training processes
2024-08-16 16:29:46,086 [Process: 0] Evaluating...
2024-08-16 16:29:46,088 [Process: 0] EPOCH 84:
2024-08-16 16:29:46,089 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4369e-02, 6.4984e-02, 5.9273e-02,  ..., 6.2374e-02,
          8.3520e-02, 7.4110e-02],
         [6.4369e-02, 6.4984e-02, 5.9273e-02,  ..., 6.2374e-02,
          8.3520e-02, 7.4110e-02],
         [6.4369e-02, 6.4984e-02, 5.9273e-02,  ..., 6.2374e-02,
          8.3520e-02, 7.4110e-02],
         [8.0689e-01, 8.0505e-01, 8.2218e-01,  ..., 8.1288e-01,
          7.4944e-01, 7.7767e-01]],
        [[6.6438e-02, 5.6908e-02, 6.3289e-02,  ..., 5.5284e-05,
          6.6008e-02, 6.4583e-02],
         [6.6438e-02, 5.6908e-02, 6.3289e-02,  ..., 5.5284e-05,
          6.6008e-02, 6.4583e-02],
         [6.6438e-02, 5.6908e-02, 6.3289e-02,  ..., 9.9983e-01,
          6.6008e-02, 6.4583e-02],
         [8.0069e-01, 8.2928e-01, 8.1013e-01,  ..., 5.5284e-05,
          8.0198e-01, 8.0625e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:29:48,166 [Process: 0] Synchronize training processes
2024-08-16 16:29:48,166 [Process: 0] Evaluating...
2024-08-16 16:29:48,168 [Process: 0] EPOCH 85:
2024-08-16 16:29:48,170 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0473, 0.0534, 0.0510,  ..., 0.0488, 0.0568, 0.0531],
         [0.0473, 0.0534, 0.0510,  ..., 0.0488, 0.0568, 0.0531],
         [0.0473, 0.0534, 0.0510,  ..., 0.0488, 0.0568, 0.0531],
         [0.8580, 0.8397, 0.8470,  ..., 0.8535, 0.8296, 0.8407]],
        [[0.3231, 0.0556, 0.2944,  ..., 0.0585, 0.0584, 0.0590],
         [0.0277, 0.0556, 0.0496,  ..., 0.0585, 0.0584, 0.0590],
         [0.6216, 0.0556, 0.6063,  ..., 0.0585, 0.0584, 0.0590],
         [0.0277, 0.8331, 0.0496,  ..., 0.8246, 0.8249, 0.8231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2806e-02, 7.2201e-02, 6.9747e-02,  ..., 6.7677e-02,
          6.8153e-02, 7.0808e-02],
         [7.2806e-02, 7.2201e-02, 6.9747e-02,  ..., 6.7677e-02,
          6.8153e-02, 7.0808e-02],
         [7.2806e-02, 7.2201e-02, 6.9747e-02,  ..., 6.7677e-02,
          6.8153e-02, 7.0808e-02],
         [7.8158e-01, 7.8340e-01, 7.9076e-01,  ..., 7.9697e-01,
          7.9554e-01, 7.8758e-01]],
        [[7.2166e-02, 3.9842e-01, 2.6267e-01,  ..., 1.0566e-05,
          7.3347e-02, 7.3777e-02],
         [7.2166e-02, 8.6225e-02, 1.9547e-01,  ..., 1.0566e-05,
          7.3347e-02, 7.3777e-02],
         [7.2166e-02, 4.2913e-01, 2.7997e-01,  ..., 9.9997e-01,
          7.3347e-02, 7.3777e-02],
         [7.8350e-01, 8.6225e-02, 2.6188e-01,  ..., 1.0566e-05,
          7.7996e-01, 7.7867e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:50,256 [Process: 0] Synchronize training processes
2024-08-16 16:29:50,256 [Process: 0] Evaluating...
2024-08-16 16:29:50,258 [Process: 0] EPOCH 86:
2024-08-16 16:29:50,260 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0610, 0.0610, 0.0586,  ..., 0.0597, 0.3764, 0.0546],
         [0.0610, 0.0610, 0.0586,  ..., 0.0597, 0.1992, 0.0546],
         [0.0610, 0.0610, 0.0586,  ..., 0.0597, 0.1992, 0.0546],
         [0.8169, 0.8169, 0.8241,  ..., 0.8210, 0.2251, 0.8363]],
        [[0.0658, 0.0632, 0.0637,  ..., 0.0617, 0.0629, 0.0622],
         [0.0658, 0.0632, 0.0637,  ..., 0.0617, 0.0629, 0.0622],
         [0.0658, 0.0632, 0.0637,  ..., 0.0617, 0.0629, 0.0622],
         [0.8025, 0.8105, 0.8090,  ..., 0.8150, 0.8114, 0.8134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4687e-02, 7.2429e-02, 7.4824e-02,  ..., 7.1591e-02,
          7.4288e-02, 7.4476e-02],
         [7.4687e-02, 7.2429e-02, 7.4824e-02,  ..., 7.1591e-02,
          7.4288e-02, 7.4476e-02],
         [7.4687e-02, 7.2429e-02, 7.4824e-02,  ..., 7.1591e-02,
          7.4288e-02, 7.4476e-02],
         [7.7594e-01, 7.8271e-01, 7.7553e-01,  ..., 7.8523e-01,
          7.7714e-01, 7.7657e-01]],
        [[7.3932e-02, 7.4344e-02, 7.4071e-02,  ..., 8.6390e-05,
          7.1661e-02, 7.5948e-02],
         [7.3932e-02, 7.4344e-02, 7.4071e-02,  ..., 8.6390e-05,
          7.1661e-02, 7.5948e-02],
         [7.3932e-02, 7.4344e-02, 7.4071e-02,  ..., 9.9974e-01,
          7.1661e-02, 7.5948e-02],
         [7.7820e-01, 7.7697e-01, 7.7779e-01,  ..., 8.6390e-05,
          7.8502e-01, 7.7216e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:52,337 [Process: 0] Synchronize training processes
2024-08-16 16:29:52,337 [Process: 0] Evaluating...
2024-08-16 16:29:52,339 [Process: 0] EPOCH 87:
2024-08-16 16:29:52,341 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0729, 0.0688, 0.0710,  ..., 0.0737, 0.0752, 0.0725],
         [0.0729, 0.0688, 0.0710,  ..., 0.0737, 0.0752, 0.0725],
         [0.0729, 0.0688, 0.0710,  ..., 0.0737, 0.0752, 0.0725],
         [0.7812, 0.7937, 0.7871,  ..., 0.7790, 0.7743, 0.7825]],
        [[0.0737, 0.0752, 0.0730,  ..., 0.0708, 0.0735, 0.0766],
         [0.0737, 0.0752, 0.0730,  ..., 0.0708, 0.0735, 0.0766],
         [0.0737, 0.0752, 0.0730,  ..., 0.0708, 0.0735, 0.0766],
         [0.7789, 0.7743, 0.7811,  ..., 0.7876, 0.7795, 0.7703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5422e-02, 7.1668e-02, 7.2683e-02,  ..., 7.0916e-02,
          7.4650e-02, 7.4291e-02],
         [7.5422e-02, 7.1668e-02, 7.2683e-02,  ..., 7.0916e-02,
          7.4650e-02, 7.4291e-02],
         [7.5422e-02, 7.1668e-02, 7.2683e-02,  ..., 7.0916e-02,
          7.4650e-02, 7.4291e-02],
         [7.7374e-01, 7.8500e-01, 7.8195e-01,  ..., 7.8725e-01,
          7.7605e-01, 7.7713e-01]],
        [[7.0781e-02, 7.0505e-02, 7.2230e-02,  ..., 1.1869e-04,
          7.2072e-02, 7.1044e-02],
         [7.0781e-02, 7.0505e-02, 7.2230e-02,  ..., 7.6072e-05,
          7.2072e-02, 7.1044e-02],
         [7.0781e-02, 7.0505e-02, 7.2230e-02,  ..., 9.9973e-01,
          7.2072e-02, 7.1044e-02],
         [7.8766e-01, 7.8848e-01, 7.8331e-01,  ..., 7.6072e-05,
          7.8379e-01, 7.8687e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:54,436 [Process: 0] Synchronize training processes
2024-08-16 16:29:54,436 [Process: 0] Evaluating...
2024-08-16 16:29:54,439 [Process: 0] EPOCH 88:
2024-08-16 16:29:54,442 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0682, 0.0686, 0.0653,  ..., 0.0722, 0.0688, 0.0674],
         [0.0682, 0.0686, 0.0653,  ..., 0.0722, 0.0688, 0.0674],
         [0.0682, 0.0686, 0.0653,  ..., 0.0722, 0.0688, 0.0674],
         [0.7953, 0.7942, 0.8040,  ..., 0.7835, 0.7936, 0.7977]],
        [[0.0713, 0.0720, 0.0723,  ..., 0.0667, 0.0650, 0.0723],
         [0.0713, 0.0720, 0.0723,  ..., 0.0667, 0.0650, 0.0723],
         [0.0713, 0.0720, 0.0723,  ..., 0.0667, 0.0650, 0.0723],
         [0.7861, 0.7841, 0.7832,  ..., 0.7998, 0.8051, 0.7830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1901e-02, 7.0267e-02, 7.0472e-02,  ..., 6.9963e-02,
          7.1211e-02, 6.9789e-02],
         [7.1901e-02, 7.0267e-02, 7.0472e-02,  ..., 6.9963e-02,
          7.1211e-02, 6.9789e-02],
         [7.1901e-02, 7.0267e-02, 7.0472e-02,  ..., 6.9963e-02,
          7.1211e-02, 6.9789e-02],
         [7.8430e-01, 7.8920e-01, 7.8858e-01,  ..., 7.9011e-01,
          7.8637e-01, 7.9063e-01]],
        [[7.4916e-02, 7.0110e-02, 6.8535e-02,  ..., 1.9951e-07,
          7.3643e-02, 6.5915e-02],
         [7.4916e-02, 7.0110e-02, 6.8535e-02,  ..., 1.9951e-07,
          7.3643e-02, 6.5915e-02],
         [7.4916e-02, 7.0110e-02, 6.8535e-02,  ..., 1.0000e+00,
          7.3643e-02, 6.5915e-02],
         [7.7525e-01, 7.8967e-01, 7.9440e-01,  ..., 1.9951e-07,
          7.7907e-01, 8.0226e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0645, 0.0667, 0.0603,  ..., 0.0746, 0.0580, 0.0551],
         [0.0645, 0.0667, 0.0603,  ..., 0.0746, 0.0580, 0.0551],
         [0.0645, 0.0667, 0.0603,  ..., 0.0758, 0.0580, 0.0551],
         [0.8065, 0.7999, 0.8192,  ..., 0.7750, 0.8259, 0.8346]],
        [[0.0602, 0.0615, 0.0607,  ..., 0.0519, 0.0532, 0.0585],
         [0.0602, 0.0615, 0.0607,  ..., 0.0519, 0.0532, 0.0585],
         [0.0602, 0.0615, 0.0607,  ..., 0.0519, 0.0532, 0.0585],
         [0.8193, 0.8154, 0.8178,  ..., 0.8444, 0.8405, 0.8245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5462e-02, 6.6289e-02, 6.3629e-02,  ..., 6.4815e-02,
          6.6329e-02, 6.4230e-02],
         [6.5462e-02, 6.6289e-02, 6.3629e-02,  ..., 6.4815e-02,
          6.6329e-02, 6.4230e-02],
         [6.5462e-02, 6.6289e-02, 6.3629e-02,  ..., 6.4815e-02,
          6.6329e-02, 6.4230e-02],
         [8.0361e-01, 8.0113e-01, 8.0911e-01,  ..., 8.0556e-01,
          8.0101e-01, 8.0731e-01]],
        [[6.3602e-02, 6.2107e-02, 6.3093e-02,  ..., 8.8188e-04,
          6.4135e-02, 6.3958e-02],
         [6.3602e-02, 6.2107e-02, 6.3093e-02,  ..., 8.8188e-04,
          6.4135e-02, 6.3958e-02],
         [6.3602e-02, 6.2107e-02, 6.3093e-02,  ..., 9.9735e-01,
          6.4135e-02, 6.3958e-02],
         [8.0919e-01, 8.1368e-01, 8.1072e-01,  ..., 8.8188e-04,
          8.0760e-01, 8.0813e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:56,548 [Process: 0] Synchronize training processes
2024-08-16 16:29:56,548 [Process: 0] Evaluating...
2024-08-16 16:29:56,550 [Process: 0] EPOCH 89:
2024-08-16 16:29:56,552 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0577, 0.0562, 0.0570,  ..., 0.0655, 0.0525, 0.0550],
         [0.0577, 0.0562, 0.0570,  ..., 0.0655, 0.0525, 0.0550],
         [0.0577, 0.0562, 0.0570,  ..., 0.0655, 0.0525, 0.0550],
         [0.8269, 0.8314, 0.8290,  ..., 0.8035, 0.8425, 0.8350]],
        [[0.0583, 0.0579, 0.0556,  ..., 0.0478, 0.0466, 0.0550],
         [0.0583, 0.0579, 0.0556,  ..., 0.0478, 0.0466, 0.0550],
         [0.0583, 0.0579, 0.0556,  ..., 0.0478, 0.0466, 0.0550],
         [0.8251, 0.8262, 0.8332,  ..., 0.8565, 0.8601, 0.8351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6593e-02, 5.6811e-02, 5.6559e-02,  ..., 6.0173e-02,
          5.8497e-02, 5.5418e-02],
         [5.6593e-02, 5.6811e-02, 5.6559e-02,  ..., 6.0173e-02,
          5.8497e-02, 5.5418e-02],
         [5.6593e-02, 5.6811e-02, 5.6559e-02,  ..., 6.0173e-02,
          5.8497e-02, 5.5418e-02],
         [8.3022e-01, 8.2957e-01, 8.3032e-01,  ..., 8.1948e-01,
          8.2451e-01, 8.3375e-01]],
        [[5.5696e-02, 5.6428e-02, 5.4879e-02,  ..., 4.1660e-06,
          5.5509e-02, 5.2137e-02],
         [5.5696e-02, 5.6428e-02, 5.4879e-02,  ..., 4.1660e-06,
          5.5509e-02, 5.2137e-02],
         [5.5696e-02, 5.6428e-02, 5.4879e-02,  ..., 9.9999e-01,
          5.5509e-02, 5.2137e-02],
         [8.3291e-01, 8.3072e-01, 8.3536e-01,  ..., 4.1660e-06,
          8.3347e-01, 8.4359e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:29:58,640 [Process: 0] Synchronize training processes
2024-08-16 16:29:58,640 [Process: 0] Evaluating...
2024-08-16 16:29:58,643 [Process: 0] EPOCH 90:
2024-08-16 16:29:58,645 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0559, 0.0567, 0.0541,  ..., 0.0536, 0.0542, 0.0519],
         [0.0559, 0.0567, 0.0541,  ..., 0.0536, 0.0542, 0.0519],
         [0.0559, 0.0567, 0.0541,  ..., 0.0536, 0.0542, 0.0519],
         [0.8322, 0.8298, 0.8376,  ..., 0.8393, 0.8375, 0.8444]],
        [[0.0582, 0.0566, 0.0580,  ..., 0.0515, 0.0502, 0.0579],
         [0.0582, 0.0566, 0.0580,  ..., 0.0515, 0.0502, 0.0579],
         [0.0582, 0.0566, 0.0580,  ..., 0.0515, 0.0502, 0.0579],
         [0.8255, 0.8303, 0.8261,  ..., 0.8455, 0.8494, 0.8263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0534, 0.0527, 0.0529,  ..., 0.0523, 0.0529, 0.0545],
         [0.0534, 0.0527, 0.0529,  ..., 0.0523, 0.0529, 0.0545],
         [0.0534, 0.0527, 0.0529,  ..., 0.0523, 0.0529, 0.0545],
         [0.8397, 0.8418, 0.8412,  ..., 0.8430, 0.8412, 0.8364]],
        [[0.0499, 0.0502, 0.0493,  ..., 0.0026, 0.0520, 0.0507],
         [0.0499, 0.0502, 0.0493,  ..., 0.0026, 0.0520, 0.0507],
         [0.0499, 0.0502, 0.0493,  ..., 0.9922, 0.0520, 0.0507],
         [0.8504, 0.8494, 0.8520,  ..., 0.0026, 0.8440, 0.8479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:00,724 [Process: 0] Synchronize training processes
2024-08-16 16:30:00,725 [Process: 0] Evaluating...
2024-08-16 16:30:00,727 [Process: 0] EPOCH 91:
2024-08-16 16:30:00,728 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0515, 0.0558, 0.0567,  ..., 0.0562, 0.0554, 0.0528],
         [0.0515, 0.0558, 0.0567,  ..., 0.0562, 0.0554, 0.0528],
         [0.0515, 0.0558, 0.0567,  ..., 0.0562, 0.0554, 0.0528],
         [0.8454, 0.8326, 0.8299,  ..., 0.8315, 0.8337, 0.8417]],
        [[0.0576, 0.0537, 0.0589,  ..., 0.0502, 0.0514, 0.0570],
         [0.0576, 0.0537, 0.0589,  ..., 0.0502, 0.0514, 0.0570],
         [0.0576, 0.0537, 0.0589,  ..., 0.0502, 0.0514, 0.0570],
         [0.8272, 0.8388, 0.8233,  ..., 0.8493, 0.8459, 0.8291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1847e-02, 5.1908e-02, 5.1901e-02,  ..., 5.3206e-02,
          5.2793e-02, 4.9989e-02],
         [5.1847e-02, 5.1908e-02, 5.1901e-02,  ..., 5.3206e-02,
          5.2793e-02, 4.9989e-02],
         [5.1847e-02, 5.1908e-02, 5.1901e-02,  ..., 5.3206e-02,
          5.2793e-02, 4.9989e-02],
         [8.4446e-01, 8.4428e-01, 8.4430e-01,  ..., 8.4038e-01,
          8.4162e-01, 8.5003e-01]],
        [[5.0129e-02, 4.9513e-02, 4.8337e-02,  ..., 1.4904e-04,
          4.9815e-02, 4.6967e-02],
         [5.0129e-02, 4.9513e-02, 4.8337e-02,  ..., 1.4904e-04,
          4.9815e-02, 4.6967e-02],
         [5.0129e-02, 4.9513e-02, 4.8337e-02,  ..., 9.9955e-01,
          4.9815e-02, 4.6967e-02],
         [8.4961e-01, 8.5146e-01, 8.5499e-01,  ..., 1.4904e-04,
          8.5056e-01, 8.5910e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:02,795 [Process: 0] Synchronize training processes
2024-08-16 16:30:02,796 [Process: 0] Evaluating...
2024-08-16 16:30:02,804 [Process: 0] EPOCH 92:
2024-08-16 16:30:02,806 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0519, 0.0528, 0.0554,  ..., 0.0571, 0.0523, 0.0525],
         [0.0519, 0.0528, 0.0554,  ..., 0.0571, 0.0523, 0.0525],
         [0.0519, 0.0528, 0.0554,  ..., 0.0571, 0.0523, 0.0525],
         [0.8443, 0.8417, 0.8339,  ..., 0.8288, 0.8431, 0.8426]],
        [[0.0544, 0.0534, 0.0560,  ..., 0.0530, 0.0491, 0.0558],
         [0.0544, 0.0534, 0.0560,  ..., 0.0530, 0.0491, 0.0558],
         [0.0544, 0.0534, 0.0560,  ..., 0.0530, 0.0491, 0.0558],
         [0.8367, 0.8398, 0.8320,  ..., 0.8410, 0.8527, 0.8325]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0545, 0.0512, 0.0528,  ..., 0.0555, 0.0544, 0.0517],
         [0.0545, 0.0512, 0.0528,  ..., 0.0555, 0.0544, 0.0517],
         [0.0545, 0.0512, 0.0528,  ..., 0.0555, 0.0544, 0.0517],
         [0.8365, 0.8463, 0.8415,  ..., 0.8336, 0.8367, 0.8449]],
        [[0.0489, 0.0493, 0.0519,  ..., 0.0103, 0.0509, 0.0479],
         [0.0489, 0.0493, 0.0519,  ..., 0.0103, 0.0509, 0.0479],
         [0.0489, 0.0493, 0.0519,  ..., 0.9691, 0.0509, 0.0479],
         [0.8532, 0.8520, 0.8444,  ..., 0.0103, 0.8473, 0.8562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:04,886 [Process: 0] Synchronize training processes
2024-08-16 16:30:04,887 [Process: 0] Evaluating...
2024-08-16 16:30:04,889 [Process: 0] EPOCH 93:
2024-08-16 16:30:04,890 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0523, 0.0582, 0.0537,  ..., 0.0564, 0.0488, 0.0512],
         [0.0523, 0.0582, 0.0537,  ..., 0.0564, 0.0488, 0.0512],
         [0.0523, 0.0582, 0.0537,  ..., 0.0564, 0.0488, 0.0512],
         [0.8431, 0.8255, 0.8390,  ..., 0.8309, 0.8536, 0.8464]],
        [[0.0532, 0.0540, 0.0524,  ..., 0.0507, 0.0516, 0.0542],
         [0.0532, 0.0540, 0.0524,  ..., 0.0507, 0.0516, 0.0542],
         [0.0532, 0.0540, 0.0524,  ..., 0.0507, 0.0516, 0.0542],
         [0.8405, 0.8381, 0.8428,  ..., 0.8478, 0.8452, 0.8375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.9716e-02, 4.8283e-02, 5.1653e-02,  ..., 5.1629e-02,
          7.8950e-03, 4.9667e-02],
         [4.9716e-02, 4.8283e-02, 5.1653e-02,  ..., 5.1629e-02,
          7.8950e-03, 4.9667e-02],
         [4.9716e-02, 4.8283e-02, 5.1653e-02,  ..., 5.1629e-02,
          9.7631e-01, 4.9667e-02],
         [8.5085e-01, 8.5515e-01, 8.4504e-01,  ..., 8.4511e-01,
          7.8950e-03, 8.5100e-01]],
        [[5.1631e-02, 5.0242e-02, 5.0248e-02,  ..., 9.1940e-04,
          4.8181e-02, 5.0209e-02],
         [5.1631e-02, 5.0242e-02, 5.0248e-02,  ..., 9.1940e-04,
          4.8181e-02, 5.0209e-02],
         [5.1631e-02, 5.0242e-02, 5.0248e-02,  ..., 9.9724e-01,
          4.8181e-02, 5.0209e-02],
         [8.4511e-01, 8.4928e-01, 8.4926e-01,  ..., 9.1940e-04,
          8.5546e-01, 8.4937e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:06,971 [Process: 0] Synchronize training processes
2024-08-16 16:30:06,971 [Process: 0] Evaluating...
2024-08-16 16:30:06,973 [Process: 0] EPOCH 94:
2024-08-16 16:30:06,975 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0510, 0.0521, 0.0562,  ..., 0.0526, 0.0498, 0.0517],
         [0.0510, 0.0521, 0.0562,  ..., 0.0526, 0.0498, 0.0517],
         [0.0510, 0.0521, 0.0562,  ..., 0.0526, 0.0498, 0.0517],
         [0.8470, 0.8436, 0.8315,  ..., 0.8423, 0.8507, 0.8450]],
        [[0.0549, 0.0506, 0.0535,  ..., 0.0548, 0.0518, 0.0530],
         [0.0549, 0.0506, 0.0535,  ..., 0.0548, 0.0518, 0.0530],
         [0.0549, 0.0506, 0.0535,  ..., 0.0548, 0.0518, 0.0530],
         [0.8352, 0.8482, 0.8395,  ..., 0.8355, 0.8447, 0.8411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0481, 0.0496, 0.0494,  ..., 0.0495, 0.0496, 0.0474],
         [0.0481, 0.0496, 0.0494,  ..., 0.0495, 0.0496, 0.0474],
         [0.0481, 0.0496, 0.0494,  ..., 0.0495, 0.0496, 0.0474],
         [0.8556, 0.8511, 0.8519,  ..., 0.8514, 0.8511, 0.8578]],
        [[0.0467, 0.0484, 0.0497,  ..., 0.0045, 0.0472, 0.0478],
         [0.0467, 0.0484, 0.0497,  ..., 0.0045, 0.0472, 0.0478],
         [0.0467, 0.0484, 0.0497,  ..., 0.9864, 0.0472, 0.0478],
         [0.8600, 0.8549, 0.8510,  ..., 0.0045, 0.8583, 0.8567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:09,053 [Process: 0] Synchronize training processes
2024-08-16 16:30:09,053 [Process: 0] Evaluating...
2024-08-16 16:30:09,055 [Process: 0] EPOCH 95:
2024-08-16 16:30:09,057 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0469, 0.0520, 0.0521,  ..., 0.0505, 0.0536, 0.0482],
         [0.0469, 0.0520, 0.0521,  ..., 0.0505, 0.0536, 0.0482],
         [0.0469, 0.0520, 0.0521,  ..., 0.0505, 0.0536, 0.0482],
         [0.8592, 0.8439, 0.8436,  ..., 0.8485, 0.8391, 0.8554]],
        [[0.0550, 0.0507, 0.0535,  ..., 0.0524, 0.0497, 0.0567],
         [0.0550, 0.0507, 0.0535,  ..., 0.0524, 0.0497, 0.0567],
         [0.0550, 0.0507, 0.0535,  ..., 0.0524, 0.0497, 0.0567],
         [0.8350, 0.8479, 0.8395,  ..., 0.8428, 0.8508, 0.8300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:30:11,172 [Process: 0] Synchronize training processes
2024-08-16 16:30:11,172 [Process: 0] Evaluating...
2024-08-16 16:30:11,174 [Process: 0] EPOCH 96:
2024-08-16 16:30:11,176 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.6894e-02, 4.6511e-02, 4.7317e-02,  ..., 4.8272e-02,
          4.6332e-02, 4.7949e-02],
         [4.6894e-02, 4.6511e-02, 4.7317e-02,  ..., 4.8272e-02,
          4.6332e-02, 4.7949e-02],
         [4.6894e-02, 4.6511e-02, 4.7317e-02,  ..., 4.8272e-02,
          4.6332e-02, 4.7949e-02],
         [8.5932e-01, 8.6047e-01, 8.5805e-01,  ..., 8.5519e-01,
          8.6100e-01, 8.5615e-01]],
        [[4.3964e-02, 4.7768e-02, 4.6818e-02,  ..., 7.6492e-04,
          4.5261e-02, 4.9088e-02],
         [4.3964e-02, 4.7768e-02, 4.6818e-02,  ..., 7.6492e-04,
          4.5261e-02, 4.9088e-02],
         [4.3964e-02, 4.7768e-02, 4.6818e-02,  ..., 9.9771e-01,
          4.5261e-02, 4.9088e-02],
         [8.6811e-01, 8.5670e-01, 8.5955e-01,  ..., 7.6492e-04,
          8.6422e-01, 8.5274e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0489, 0.0501, 0.0497,  ..., 0.0516, 0.0496, 0.0471],
         [0.0489, 0.0501, 0.0497,  ..., 0.0516, 0.0496, 0.0471],
         [0.0489, 0.0501, 0.0497,  ..., 0.0516, 0.0496, 0.0471],
         [0.8533, 0.8496, 0.8509,  ..., 0.8451, 0.8511, 0.8586]],
        [[0.0506, 0.0488, 0.0512,  ..., 0.0514, 0.0526, 0.0512],
         [0.0506, 0.0488, 0.0512,  ..., 0.0514, 0.0526, 0.0512],
         [0.0506, 0.0488, 0.0512,  ..., 0.0514, 0.0526, 0.0512],
         [0.8481, 0.8537, 0.8465,  ..., 0.8458, 0.8423, 0.8465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:13,253 [Process: 0] Synchronize training processes
2024-08-16 16:30:13,254 [Process: 0] Evaluating...
2024-08-16 16:30:13,255 [Process: 0] EPOCH 97:
2024-08-16 16:30:13,257 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0454, 0.0461, 0.0474,  ..., 0.0440, 0.0506, 0.0450],
         [0.0454, 0.0461, 0.0474,  ..., 0.0440, 0.0506, 0.0450],
         [0.0454, 0.0461, 0.0474,  ..., 0.0440, 0.0506, 0.0450],
         [0.8637, 0.8616, 0.8578,  ..., 0.8679, 0.8481, 0.8651]],
        [[0.0432, 0.0431, 0.0459,  ..., 0.0013, 0.0454, 0.0447],
         [0.0432, 0.0431, 0.0459,  ..., 0.0013, 0.0454, 0.0447],
         [0.0432, 0.0431, 0.0459,  ..., 0.9961, 0.0454, 0.0447],
         [0.8705, 0.8707, 0.8623,  ..., 0.0013, 0.8639, 0.8660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0518, 0.0482, 0.0473,  ..., 0.0500, 0.0477, 0.0521],
         [0.0518, 0.0482, 0.0473,  ..., 0.0500, 0.0477, 0.0521],
         [0.0518, 0.0482, 0.0473,  ..., 0.0500, 0.0477, 0.0521],
         [0.8445, 0.8554, 0.8581,  ..., 0.8501, 0.8570, 0.8438]],
        [[0.0511, 0.0498, 0.0533,  ..., 0.0498, 0.0501, 0.0505],
         [0.0511, 0.0498, 0.0533,  ..., 0.0498, 0.0501, 0.0505],
         [0.0511, 0.0498, 0.0533,  ..., 0.0498, 0.0501, 0.0505],
         [0.8468, 0.8506, 0.8400,  ..., 0.8506, 0.8497, 0.8485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:15,358 [Process: 0] Synchronize training processes
2024-08-16 16:30:15,359 [Process: 0] Evaluating...
2024-08-16 16:30:15,361 [Process: 0] EPOCH 98:
2024-08-16 16:30:15,363 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0463, 0.0457, 0.0446,  ..., 0.0442, 0.4201, 0.0454],
         [0.0463, 0.0457, 0.0446,  ..., 0.0442, 0.1380, 0.0454],
         [0.0463, 0.0457, 0.0446,  ..., 0.0442, 0.1380, 0.0454],
         [0.8610, 0.8630, 0.8661,  ..., 0.8675, 0.3039, 0.8639]],
        [[0.0456, 0.0448, 0.0435,  ..., 0.0028, 0.0417, 0.0431],
         [0.0456, 0.0448, 0.0435,  ..., 0.0028, 0.0417, 0.0431],
         [0.0456, 0.0448, 0.0435,  ..., 0.9915, 0.0417, 0.0431],
         [0.8633, 0.8655, 0.8694,  ..., 0.0028, 0.8749, 0.8708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0484, 0.0487, 0.0459,  ..., 0.0488, 0.0482, 0.0482],
         [0.0484, 0.0487, 0.0459,  ..., 0.0488, 0.0482, 0.0482],
         [0.0484, 0.0487, 0.0459,  ..., 0.0488, 0.0482, 0.0482],
         [0.8547, 0.8539, 0.8623,  ..., 0.8537, 0.8554, 0.8553]],
        [[0.0480, 0.0484, 0.0462,  ..., 0.0475, 0.0462, 0.0487],
         [0.0480, 0.0484, 0.0462,  ..., 0.0475, 0.0462, 0.0487],
         [0.0480, 0.0484, 0.0462,  ..., 0.0475, 0.0462, 0.0487],
         [0.8559, 0.8547, 0.8614,  ..., 0.8575, 0.8613, 0.8540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:17,443 [Process: 0] Synchronize training processes
2024-08-16 16:30:17,443 [Process: 0] Evaluating...
2024-08-16 16:30:17,445 [Process: 0] EPOCH 99:
2024-08-16 16:30:17,447 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.4323e-02, 4.4882e-02, 4.3511e-02,  ..., 4.2266e-02,
          5.5252e-01, 4.3359e-02],
         [4.4323e-02, 4.4882e-02, 4.3511e-02,  ..., 4.2266e-02,
          1.4916e-01, 4.3359e-02],
         [4.4323e-02, 4.4882e-02, 4.3511e-02,  ..., 4.2266e-02,
          1.4916e-01, 4.3359e-02],
         [8.6703e-01, 8.6535e-01, 8.6947e-01,  ..., 8.7320e-01,
          1.4916e-01, 8.6992e-01]],
        [[4.0007e-02, 4.0926e-02, 4.4434e-02,  ..., 5.7060e-04,
          4.2503e-02, 4.3942e-02],
         [4.0007e-02, 4.0926e-02, 4.4434e-02,  ..., 5.7060e-04,
          4.2503e-02, 4.3942e-02],
         [4.0007e-02, 4.0926e-02, 4.4434e-02,  ..., 9.9829e-01,
          4.2503e-02, 4.3942e-02],
         [8.7998e-01, 8.7722e-01, 8.6670e-01,  ..., 5.7060e-04,
          8.7249e-01, 8.6817e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0468, 0.0470, 0.0480,  ..., 0.0437, 0.0472, 0.0485],
         [0.0468, 0.0470, 0.0480,  ..., 0.0437, 0.0472, 0.0485],
         [0.0468, 0.0470, 0.0480,  ..., 0.0437, 0.0472, 0.0485],
         [0.8596, 0.8589, 0.8561,  ..., 0.8688, 0.8585, 0.8545]],
        [[0.0484, 0.0479, 0.0457,  ..., 0.0475, 0.0481, 0.0468],
         [0.0484, 0.0479, 0.0457,  ..., 0.0475, 0.0481, 0.0468],
         [0.0484, 0.0479, 0.0457,  ..., 0.0475, 0.0481, 0.0468],
         [0.8549, 0.8563, 0.8630,  ..., 0.8575, 0.8556, 0.8595]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:19,545 [Process: 0] Synchronize training processes
2024-08-16 16:30:19,546 [Process: 0] Evaluating...
2024-08-16 16:30:19,547 [Process: 0] EPOCH 100:
2024-08-16 16:30:19,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.2244e-02, 4.2107e-02, 4.3082e-02,  ..., 4.2260e-02,
          6.7012e-01, 4.3579e-02],
         [4.2244e-02, 4.2107e-02, 4.3082e-02,  ..., 4.2260e-02,
          1.0996e-01, 4.3579e-02],
         [4.2244e-02, 4.2107e-02, 4.3082e-02,  ..., 4.2260e-02,
          1.0996e-01, 4.3579e-02],
         [8.7327e-01, 8.7368e-01, 8.7075e-01,  ..., 8.7322e-01,
          1.0996e-01, 8.6926e-01]],
        [[4.2178e-02, 4.1546e-02, 4.1816e-02,  ..., 5.9581e-05,
          4.2895e-02, 4.0677e-02],
         [4.2178e-02, 4.1546e-02, 4.1816e-02,  ..., 5.9581e-05,
          4.2895e-02, 4.0677e-02],
         [4.2178e-02, 4.1546e-02, 4.1816e-02,  ..., 9.9982e-01,
          4.2895e-02, 4.0677e-02],
         [8.7347e-01, 8.7536e-01, 8.7455e-01,  ..., 5.9581e-05,
          8.7132e-01, 8.7797e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0456, 0.0482, 0.0450,  ..., 0.0440, 0.0476, 0.0459],
         [0.0456, 0.0482, 0.0450,  ..., 0.0440, 0.0476, 0.0459],
         [0.0456, 0.0482, 0.0450,  ..., 0.0440, 0.0476, 0.0459],
         [0.8631, 0.8555, 0.8649,  ..., 0.8679, 0.8571, 0.8624]],
        [[0.0434, 0.0456, 0.0456,  ..., 0.0453, 0.0455, 0.0475],
         [0.0434, 0.0456, 0.0456,  ..., 0.0453, 0.0455, 0.0475],
         [0.0434, 0.0456, 0.0456,  ..., 0.0453, 0.0455, 0.0475],
         [0.8697, 0.8632, 0.8631,  ..., 0.8640, 0.8636, 0.8574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:21,633 [Process: 0] Synchronize training processes
2024-08-16 16:30:21,634 [Process: 0] Evaluating...
2024-08-16 16:30:21,636 [Process: 0] EPOCH 101:
2024-08-16 16:30:21,638 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0429, 0.0425, 0.0436,  ..., 0.0406, 0.7355, 0.0418],
         [0.0429, 0.0425, 0.0436,  ..., 0.0406, 0.0882, 0.0418],
         [0.0429, 0.0425, 0.0436,  ..., 0.0406, 0.0882, 0.0418],
         [0.8713, 0.8725, 0.8693,  ..., 0.8783, 0.0882, 0.8746]],
        [[0.0408, 0.0414, 0.0424,  ..., 0.0035, 0.0416, 0.0415],
         [0.0408, 0.0414, 0.0424,  ..., 0.0033, 0.0416, 0.0415],
         [0.0408, 0.0414, 0.0424,  ..., 0.9899, 0.0416, 0.0415],
         [0.8775, 0.8759, 0.8729,  ..., 0.0033, 0.8751, 0.8754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0433, 0.0448, 0.0464,  ..., 0.0455, 0.0468, 0.0455],
         [0.0433, 0.0448, 0.0464,  ..., 0.0455, 0.0468, 0.0455],
         [0.0433, 0.0448, 0.0464,  ..., 0.0455, 0.0468, 0.0455],
         [0.8700, 0.8655, 0.8609,  ..., 0.8634, 0.8597, 0.8634]],
        [[0.0449, 0.0454, 0.0455,  ..., 0.0456, 0.0460, 0.0477],
         [0.0449, 0.0454, 0.0455,  ..., 0.0456, 0.0460, 0.0477],
         [0.0449, 0.0454, 0.0455,  ..., 0.0456, 0.0460, 0.0477],
         [0.8654, 0.8637, 0.8634,  ..., 0.8633, 0.8621, 0.8570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:23,719 [Process: 0] Synchronize training processes
2024-08-16 16:30:23,719 [Process: 0] Evaluating...
2024-08-16 16:30:23,728 [Process: 0] EPOCH 102:
2024-08-16 16:30:23,730 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0402, 0.0412, 0.0428,  ..., 0.0420, 0.5127, 0.0406],
         [0.0402, 0.0412, 0.0428,  ..., 0.0420, 0.1478, 0.0406],
         [0.0402, 0.0412, 0.0428,  ..., 0.0420, 0.1478, 0.0406],
         [0.8795, 0.8765, 0.8717,  ..., 0.8741, 0.1917, 0.8783]],
        [[0.0419, 0.0405, 0.0419,  ..., 0.0021, 0.0399, 0.0408],
         [0.0419, 0.0405, 0.0419,  ..., 0.0021, 0.0399, 0.0408],
         [0.0419, 0.0405, 0.0419,  ..., 0.9937, 0.0399, 0.0408],
         [0.8743, 0.8784, 0.8742,  ..., 0.0021, 0.8802, 0.8775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0437, 0.0469, 0.0450,  ..., 0.0450, 0.0449, 0.0465],
         [0.0437, 0.0469, 0.0450,  ..., 0.0450, 0.0449, 0.0465],
         [0.0437, 0.0469, 0.0450,  ..., 0.0450, 0.0449, 0.0465],
         [0.8689, 0.8592, 0.8650,  ..., 0.8650, 0.8652, 0.8606]],
        [[0.0435, 0.0449, 0.0449,  ..., 0.0439, 0.0467, 0.0464],
         [0.0435, 0.0449, 0.0449,  ..., 0.0439, 0.0467, 0.0464],
         [0.0435, 0.0449, 0.0449,  ..., 0.0439, 0.0467, 0.0464],
         [0.8695, 0.8654, 0.8652,  ..., 0.8683, 0.8598, 0.8608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:25,807 [Process: 0] Synchronize training processes
2024-08-16 16:30:25,807 [Process: 0] Evaluating...
2024-08-16 16:30:25,809 [Process: 0] EPOCH 103:
2024-08-16 16:30:25,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0430, 0.0433, 0.0433,  ..., 0.0411, 0.0668, 0.0416],
         [0.0430, 0.0433, 0.0433,  ..., 0.0411, 0.0668, 0.0416],
         [0.0430, 0.0433, 0.0433,  ..., 0.0411, 0.0668, 0.0416],
         [0.8711, 0.8702, 0.8702,  ..., 0.8767, 0.7996, 0.8751]],
        [[0.0405, 0.0408, 0.0415,  ..., 0.0035, 0.0415, 0.0406],
         [0.0405, 0.0408, 0.0415,  ..., 0.0035, 0.0415, 0.0406],
         [0.0405, 0.0408, 0.0415,  ..., 0.9895, 0.0415, 0.0406],
         [0.8786, 0.8775, 0.8755,  ..., 0.0035, 0.8754, 0.8783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0450, 0.0432, 0.0450,  ..., 0.0461, 0.0444, 0.0442],
         [0.0450, 0.0432, 0.0450,  ..., 0.0461, 0.0444, 0.0442],
         [0.0450, 0.0432, 0.0450,  ..., 0.0461, 0.0444, 0.0442],
         [0.8651, 0.8705, 0.8649,  ..., 0.8617, 0.8669, 0.8675]],
        [[0.0450, 0.0451, 0.0443,  ..., 0.0439, 0.0425, 0.0452],
         [0.0450, 0.0451, 0.0443,  ..., 0.0439, 0.0425, 0.0452],
         [0.0450, 0.0451, 0.0443,  ..., 0.0439, 0.0425, 0.0452],
         [0.8650, 0.8647, 0.8670,  ..., 0.8684, 0.8726, 0.8643]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:27,902 [Process: 0] Synchronize training processes
2024-08-16 16:30:27,903 [Process: 0] Evaluating...
2024-08-16 16:30:27,904 [Process: 0] EPOCH 104:
2024-08-16 16:30:27,906 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0409, 0.0422, 0.0413,  ..., 0.0416, 0.0464, 0.0407],
         [0.0409, 0.0422, 0.0413,  ..., 0.0416, 0.0464, 0.0407],
         [0.0409, 0.0422, 0.0413,  ..., 0.0416, 0.0464, 0.0407],
         [0.8773, 0.8734, 0.8761,  ..., 0.8751, 0.8609, 0.8780]],
        [[0.0405, 0.0395, 0.0424,  ..., 0.0070, 0.0415, 0.0404],
         [0.0405, 0.0395, 0.0424,  ..., 0.0070, 0.0415, 0.0404],
         [0.0405, 0.0395, 0.0424,  ..., 0.9789, 0.0415, 0.0404],
         [0.8784, 0.8815, 0.8727,  ..., 0.0070, 0.8754, 0.8787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0436, 0.0441, 0.0441,  ..., 0.0452, 0.0450, 0.0450],
         [0.0436, 0.0441, 0.0441,  ..., 0.0452, 0.0450, 0.0450],
         [0.0436, 0.0441, 0.0441,  ..., 0.0452, 0.0450, 0.0450],
         [0.8692, 0.8678, 0.8677,  ..., 0.8644, 0.8649, 0.8649]],
        [[0.0436, 0.0449, 0.0437,  ..., 0.0444, 0.0453, 0.0445],
         [0.0436, 0.0449, 0.0437,  ..., 0.0444, 0.0453, 0.0445],
         [0.0436, 0.0449, 0.0437,  ..., 0.0444, 0.0453, 0.0445],
         [0.8693, 0.8654, 0.8690,  ..., 0.8667, 0.8641, 0.8665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:29,995 [Process: 0] Synchronize training processes
2024-08-16 16:30:29,995 [Process: 0] Evaluating...
2024-08-16 16:30:29,997 [Process: 0] EPOCH 105:
2024-08-16 16:30:29,999 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0414, 0.0403, 0.0390,  ..., 0.0395, 0.0456, 0.0404],
         [0.0414, 0.0403, 0.0390,  ..., 0.0395, 0.0456, 0.0404],
         [0.0414, 0.0403, 0.0390,  ..., 0.0395, 0.0456, 0.0404],
         [0.8757, 0.8792, 0.8829,  ..., 0.8816, 0.8633, 0.8787]],
        [[0.0395, 0.0385, 0.0412,  ..., 0.0020, 0.0416, 0.0403],
         [0.0395, 0.0385, 0.0412,  ..., 0.0020, 0.0416, 0.0403],
         [0.0395, 0.0385, 0.0412,  ..., 0.9941, 0.0416, 0.0403],
         [0.8816, 0.8845, 0.8763,  ..., 0.0020, 0.8752, 0.8790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0448, 0.0439, 0.0432,  ..., 0.0426, 0.0438, 0.0457],
         [0.0448, 0.0439, 0.0432,  ..., 0.0426, 0.0438, 0.0457],
         [0.0448, 0.0439, 0.0432,  ..., 0.0426, 0.0438, 0.0457],
         [0.8656, 0.8683, 0.8705,  ..., 0.8723, 0.8687, 0.8629]],
        [[0.0440, 0.0441, 0.0425,  ..., 0.0444, 0.0424, 0.0429],
         [0.0440, 0.0441, 0.0425,  ..., 0.0444, 0.0424, 0.0429],
         [0.0440, 0.0441, 0.0425,  ..., 0.0444, 0.0424, 0.0429],
         [0.8681, 0.8677, 0.8726,  ..., 0.8669, 0.8729, 0.8712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:32,081 [Process: 0] Synchronize training processes
2024-08-16 16:30:32,082 [Process: 0] Evaluating...
2024-08-16 16:30:32,083 [Process: 0] EPOCH 106:
2024-08-16 16:30:32,085 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.9315e-02, 3.9055e-02, 3.8804e-02,  ..., 3.9739e-02,
          3.9961e-02, 3.9783e-02],
         [3.9315e-02, 3.9055e-02, 3.8804e-02,  ..., 3.9739e-02,
          3.9961e-02, 3.9783e-02],
         [3.9315e-02, 3.9055e-02, 3.8804e-02,  ..., 3.9739e-02,
          3.9961e-02, 3.9783e-02],
         [8.8205e-01, 8.8284e-01, 8.8359e-01,  ..., 8.8078e-01,
          8.8012e-01, 8.8065e-01]],
        [[3.9704e-02, 3.9700e-02, 3.7759e-02,  ..., 6.2177e-04,
          3.9714e-02, 3.9571e-02],
         [3.9704e-02, 3.9700e-02, 3.7759e-02,  ..., 6.2177e-04,
          3.9714e-02, 3.9571e-02],
         [3.9704e-02, 3.9700e-02, 3.7759e-02,  ..., 9.9813e-01,
          3.9714e-02, 3.9571e-02],
         [8.8089e-01, 8.8090e-01, 8.8672e-01,  ..., 6.2177e-04,
          8.8086e-01, 8.8129e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0432, 0.0420, 0.0413,  ..., 0.0416, 0.0431, 0.0430],
         [0.0432, 0.0420, 0.0413,  ..., 0.0416, 0.0431, 0.0430],
         [0.0432, 0.0420, 0.0413,  ..., 0.0416, 0.0431, 0.0430],
         [0.8704, 0.8741, 0.8760,  ..., 0.8753, 0.8707, 0.8710]],
        [[0.0415, 0.0414, 0.0425,  ..., 0.0430, 0.0426, 0.0431],
         [0.0415, 0.0414, 0.0425,  ..., 0.0430, 0.0426, 0.0431],
         [0.0415, 0.0414, 0.0425,  ..., 0.0430, 0.0426, 0.0431],
         [0.8754, 0.8757, 0.8726,  ..., 0.8710, 0.8723, 0.8707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:34,143 [Process: 0] Synchronize training processes
2024-08-16 16:30:34,143 [Process: 0] Evaluating...
2024-08-16 16:30:34,145 [Process: 0] EPOCH 107:
2024-08-16 16:30:34,147 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0389, 0.0382, 0.0381,  ..., 0.0387, 0.0380, 0.0400],
         [0.0389, 0.0382, 0.0381,  ..., 0.0387, 0.0380, 0.0400],
         [0.0389, 0.0382, 0.0381,  ..., 0.0387, 0.0380, 0.0400],
         [0.8834, 0.8855, 0.8856,  ..., 0.8840, 0.8860, 0.8799]],
        [[0.0406, 0.0394, 0.0369,  ..., 0.0027, 0.0381, 0.0381],
         [0.0406, 0.0394, 0.0369,  ..., 0.0027, 0.0381, 0.0381],
         [0.0406, 0.0394, 0.0369,  ..., 0.9919, 0.0381, 0.0381],
         [0.8783, 0.8819, 0.8894,  ..., 0.0027, 0.8858, 0.8857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0429, 0.0420, 0.0416,  ..., 0.0412, 0.0457, 0.0459],
         [0.0429, 0.0420, 0.0416,  ..., 0.0412, 0.0457, 0.0459],
         [0.0429, 0.0420, 0.0416,  ..., 0.0412, 0.0457, 0.0459],
         [0.8712, 0.8739, 0.8752,  ..., 0.8764, 0.8629, 0.8624]],
        [[0.0429, 0.0433, 0.0427,  ..., 0.0443, 0.0438, 0.0435],
         [0.0429, 0.0433, 0.0427,  ..., 0.0443, 0.0438, 0.0435],
         [0.0429, 0.0433, 0.0427,  ..., 0.0443, 0.0438, 0.0435],
         [0.8713, 0.8700, 0.8719,  ..., 0.8672, 0.8686, 0.8695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:30:36,223 [Process: 0] Synchronize training processes
2024-08-16 16:30:36,223 [Process: 0] Evaluating...
2024-08-16 16:30:36,225 [Process: 0] EPOCH 108:
2024-08-16 16:30:36,227 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0135e-02, 3.9311e-02, 4.1025e-02,  ..., 3.8686e-02,
          3.9795e-02, 3.7944e-02],
         [4.0135e-02, 3.9311e-02, 4.1025e-02,  ..., 3.8686e-02,
          3.9795e-02, 3.7944e-02],
         [4.0135e-02, 3.9311e-02, 4.1025e-02,  ..., 3.8686e-02,
          3.9795e-02, 3.7944e-02],
         [8.7959e-01, 8.8207e-01, 8.7693e-01,  ..., 8.8394e-01,
          8.8062e-01, 8.8617e-01]],
        [[4.0146e-02, 3.8200e-02, 3.9268e-02,  ..., 5.0141e-04,
          3.9461e-02, 3.8613e-02],
         [4.0146e-02, 3.8200e-02, 3.9268e-02,  ..., 5.0141e-04,
          3.9461e-02, 3.8613e-02],
         [4.0146e-02, 3.8200e-02, 3.9268e-02,  ..., 9.9850e-01,
          3.9461e-02, 3.8613e-02],
         [8.7956e-01, 8.8540e-01, 8.8220e-01,  ..., 5.0141e-04,
          8.8162e-01, 8.8416e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:30:38,220 [Process: 0] Synchronize training processes
2024-08-16 16:30:38,220 [Process: 0] Evaluating...
2024-08-16 16:30:38,222 [Process: 0] EPOCH 109:
2024-08-16 16:30:38,224 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0392, 0.0409, 0.0425,  ..., 0.0420, 0.0420, 0.0425],
         [0.0392, 0.0409, 0.0425,  ..., 0.0420, 0.0420, 0.0425],
         [0.0392, 0.0409, 0.0425,  ..., 0.0420, 0.0420, 0.0425],
         [0.8825, 0.8772, 0.8724,  ..., 0.8741, 0.8741, 0.8725]],
        [[0.0419, 0.0408, 0.0411,  ..., 0.0410, 0.0410, 0.0404],
         [0.0419, 0.0408, 0.0411,  ..., 0.0410, 0.0410, 0.0404],
         [0.0419, 0.0408, 0.0411,  ..., 0.0410, 0.0410, 0.0404],
         [0.8743, 0.8775, 0.8767,  ..., 0.8770, 0.8769, 0.8787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0390, 0.0396, 0.0373,  ..., 0.0373, 0.0384, 0.0378],
         [0.0390, 0.0396, 0.0373,  ..., 0.0373, 0.0384, 0.0378],
         [0.0390, 0.0396, 0.0373,  ..., 0.0373, 0.0384, 0.0378],
         [0.8831, 0.8813, 0.8881,  ..., 0.8881, 0.8849, 0.8867]],
        [[0.0377, 0.0389, 0.0369,  ..., 0.0024, 0.0374, 0.0380],
         [0.0377, 0.0389, 0.0369,  ..., 0.0024, 0.0374, 0.0380],
         [0.0377, 0.0389, 0.0369,  ..., 0.9929, 0.0374, 0.0380],
         [0.8870, 0.8834, 0.8892,  ..., 0.0024, 0.8877, 0.8861]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:30:40,330 [Process: 0] Synchronize training processes
2024-08-16 16:30:40,330 [Process: 0] Evaluating...
2024-08-16 16:30:40,332 [Process: 0] EPOCH 110:
2024-08-16 16:30:40,335 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0409, 0.0415, 0.0409,  ..., 0.0408, 0.0421, 0.0428],
         [0.0409, 0.0415, 0.0409,  ..., 0.0408, 0.0421, 0.0428],
         [0.0409, 0.0415, 0.0409,  ..., 0.0408, 0.0421, 0.0428],
         [0.8772, 0.8754, 0.8773,  ..., 0.8777, 0.8736, 0.8716]],
        [[0.0417, 0.0411, 0.0410,  ..., 0.0409, 0.0407, 0.0420],
         [0.0417, 0.0411, 0.0410,  ..., 0.0409, 0.0407, 0.0420],
         [0.0417, 0.0411, 0.0410,  ..., 0.0409, 0.0407, 0.0420],
         [0.8748, 0.8767, 0.8769,  ..., 0.8774, 0.8779, 0.8739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.9048e-02, 3.9434e-02, 3.9324e-02,  ..., 3.8493e-02,
          3.9000e-02, 3.9544e-02],
         [3.9048e-02, 3.9434e-02, 3.9324e-02,  ..., 3.8493e-02,
          3.9000e-02, 3.9544e-02],
         [3.9048e-02, 3.9434e-02, 3.9324e-02,  ..., 3.8493e-02,
          3.9000e-02, 3.9544e-02],
         [8.8285e-01, 8.8170e-01, 8.8203e-01,  ..., 8.8452e-01,
          8.8300e-01, 8.8137e-01]],
        [[3.8378e-02, 3.7880e-02, 3.8189e-02,  ..., 2.8028e-04,
          3.7915e-02, 3.8148e-02],
         [3.8378e-02, 3.7880e-02, 3.8189e-02,  ..., 2.8028e-04,
          3.7915e-02, 3.8148e-02],
         [3.8378e-02, 3.7880e-02, 3.8189e-02,  ..., 9.9916e-01,
          3.7915e-02, 3.8148e-02],
         [8.8487e-01, 8.8636e-01, 8.8543e-01,  ..., 2.8028e-04,
          8.8625e-01, 8.8556e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:42,424 [Process: 0] Synchronize training processes
2024-08-16 16:30:42,425 [Process: 0] Evaluating...
2024-08-16 16:30:42,427 [Process: 0] EPOCH 111:
2024-08-16 16:30:42,429 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0418, 0.0411, 0.0411,  ..., 0.0417, 0.0421, 0.0426],
         [0.0418, 0.0411, 0.0411,  ..., 0.0417, 0.0421, 0.0426],
         [0.0418, 0.0411, 0.0411,  ..., 0.0417, 0.0421, 0.0426],
         [0.8747, 0.8767, 0.8768,  ..., 0.8748, 0.8736, 0.8722]],
        [[0.0399, 0.0400, 0.0420,  ..., 0.0425, 0.0409, 0.0416],
         [0.0399, 0.0400, 0.0420,  ..., 0.0425, 0.0409, 0.0416],
         [0.0399, 0.0400, 0.0420,  ..., 0.0425, 0.0409, 0.0416],
         [0.8803, 0.8799, 0.8741,  ..., 0.8726, 0.8773, 0.8752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0375, 0.0367, 0.0384,  ..., 0.0366, 0.0368, 0.0377],
         [0.0375, 0.0367, 0.0384,  ..., 0.0366, 0.0368, 0.0377],
         [0.0375, 0.0367, 0.0384,  ..., 0.0366, 0.0368, 0.0377],
         [0.8874, 0.8899, 0.8849,  ..., 0.8902, 0.8895, 0.8868]],
        [[0.0374, 0.0387, 0.0360,  ..., 0.0087, 0.0384, 0.0381],
         [0.0374, 0.0387, 0.0360,  ..., 0.0087, 0.0384, 0.0381],
         [0.0374, 0.0387, 0.0360,  ..., 0.9739, 0.0384, 0.0381],
         [0.8878, 0.8840, 0.8921,  ..., 0.0087, 0.8849, 0.8857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:44,520 [Process: 0] Synchronize training processes
2024-08-16 16:30:44,520 [Process: 0] Evaluating...
2024-08-16 16:30:44,529 [Process: 0] EPOCH 112:
2024-08-16 16:30:44,531 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0391, 0.0400, 0.0406,  ..., 0.0392, 0.0427, 0.0436],
         [0.0391, 0.0400, 0.0406,  ..., 0.0392, 0.0427, 0.0436],
         [0.0391, 0.0400, 0.0406,  ..., 0.0392, 0.0427, 0.0436],
         [0.8827, 0.8800, 0.8782,  ..., 0.8824, 0.8720, 0.8693]],
        [[0.0407, 0.0395, 0.0411,  ..., 0.0398, 0.0405, 0.0406],
         [0.0407, 0.0395, 0.0411,  ..., 0.0398, 0.0405, 0.0406],
         [0.0407, 0.0395, 0.0411,  ..., 0.0398, 0.0405, 0.0406],
         [0.8780, 0.8816, 0.8768,  ..., 0.8806, 0.8786, 0.8781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6672e-02, 3.7816e-02, 3.7126e-02,  ..., 3.6264e-02,
          5.8939e-01, 3.7746e-02],
         [3.6672e-02, 3.7816e-02, 3.7126e-02,  ..., 3.6264e-02,
          1.2048e-01, 3.7746e-02],
         [3.6672e-02, 3.7816e-02, 3.7126e-02,  ..., 3.6264e-02,
          1.2048e-01, 3.7746e-02],
         [8.8998e-01, 8.8655e-01, 8.8862e-01,  ..., 8.9121e-01,
          1.6964e-01, 8.8676e-01]],
        [[3.7488e-02, 3.5605e-02, 3.6953e-02,  ..., 2.3542e-04,
          3.5579e-02, 3.7402e-02],
         [3.7488e-02, 3.5605e-02, 3.6953e-02,  ..., 2.3542e-04,
          3.5579e-02, 3.7402e-02],
         [3.7488e-02, 3.5605e-02, 3.6953e-02,  ..., 9.9929e-01,
          3.5579e-02, 3.7402e-02],
         [8.8754e-01, 8.9319e-01, 8.8914e-01,  ..., 2.3542e-04,
          8.9326e-01, 8.8779e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0394, 0.0400, 0.0403,  ..., 0.0403, 0.0409, 0.0403],
         [0.0394, 0.0400, 0.0403,  ..., 0.0403, 0.0409, 0.0403],
         [0.0394, 0.0400, 0.0403,  ..., 0.0403, 0.0409, 0.0403],
         [0.8818, 0.8799, 0.8790,  ..., 0.8791, 0.8774, 0.8792]],
        [[0.0392, 0.0405, 0.0387,  ..., 0.0396, 0.0409, 0.0389],
         [0.0392, 0.0405, 0.0387,  ..., 0.0396, 0.0409, 0.0389],
         [0.0392, 0.0405, 0.0387,  ..., 0.0396, 0.0409, 0.0389],
         [0.8824, 0.8784, 0.8839,  ..., 0.8811, 0.8773, 0.8833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6770e-02, 3.6454e-02, 3.6897e-02,  ..., 3.6327e-02,
          4.1690e-02, 3.6303e-02],
         [3.6770e-02, 3.6454e-02, 3.6897e-02,  ..., 3.6327e-02,
          4.1690e-02, 3.6303e-02],
         [3.6770e-02, 3.6454e-02, 3.6897e-02,  ..., 3.6327e-02,
          4.1690e-02, 3.6303e-02],
         [8.8969e-01, 8.9064e-01, 8.8931e-01,  ..., 8.9102e-01,
          8.7493e-01, 8.9109e-01]],
        [[3.6113e-02, 3.7208e-02, 3.7012e-02,  ..., 6.3269e-04,
          3.6306e-02, 3.5768e-02],
         [3.6113e-02, 3.7208e-02, 3.7012e-02,  ..., 6.3269e-04,
          3.6306e-02, 3.5768e-02],
         [3.6113e-02, 3.7208e-02, 3.7012e-02,  ..., 9.9810e-01,
          3.6306e-02, 3.5768e-02],
         [8.9166e-01, 8.8838e-01, 8.8896e-01,  ..., 6.3269e-04,
          8.9108e-01, 8.9270e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:46,615 [Process: 0] Synchronize training processes
2024-08-16 16:30:46,615 [Process: 0] Evaluating...
2024-08-16 16:30:46,617 [Process: 0] EPOCH 113:
2024-08-16 16:30:46,619 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0395, 0.0401, 0.0399,  ..., 0.0383, 0.0396, 0.0410],
         [0.0395, 0.0401, 0.0399,  ..., 0.0383, 0.0396, 0.0410],
         [0.0395, 0.0401, 0.0399,  ..., 0.0383, 0.0396, 0.0410],
         [0.8816, 0.8798, 0.8802,  ..., 0.8851, 0.8811, 0.8771]],
        [[0.0401, 0.0396, 0.0378,  ..., 0.0398, 0.0392, 0.0399],
         [0.0401, 0.0396, 0.0378,  ..., 0.0398, 0.0392, 0.0399],
         [0.0401, 0.0396, 0.0378,  ..., 0.0398, 0.0392, 0.0399],
         [0.8796, 0.8812, 0.8865,  ..., 0.8805, 0.8824, 0.8804]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5491e-02, 3.5092e-02, 3.6690e-02,  ..., 3.5788e-02,
          3.6311e-02, 3.5774e-02],
         [3.5491e-02, 3.5092e-02, 3.6690e-02,  ..., 3.5788e-02,
          3.6311e-02, 3.5774e-02],
         [3.5491e-02, 3.5092e-02, 3.6690e-02,  ..., 3.5788e-02,
          3.6311e-02, 3.5774e-02],
         [8.9353e-01, 8.9473e-01, 8.8993e-01,  ..., 8.9263e-01,
          8.9107e-01, 8.9268e-01]],
        [[3.7479e-02, 3.6146e-02, 3.5775e-02,  ..., 2.8121e-04,
          3.6244e-02, 3.6498e-02],
         [3.7479e-02, 3.6146e-02, 3.5775e-02,  ..., 2.8121e-04,
          3.6244e-02, 3.6498e-02],
         [3.7479e-02, 3.6146e-02, 3.5775e-02,  ..., 9.9916e-01,
          3.6244e-02, 3.6498e-02],
         [8.8756e-01, 8.9156e-01, 8.9267e-01,  ..., 2.8121e-04,
          8.9127e-01, 8.9051e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:48,722 [Process: 0] Synchronize training processes
2024-08-16 16:30:48,723 [Process: 0] Evaluating...
2024-08-16 16:30:48,725 [Process: 0] EPOCH 114:
2024-08-16 16:30:48,727 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0387, 0.0404, 0.0395,  ..., 0.0387, 0.0406, 0.0402],
         [0.0387, 0.0404, 0.0395,  ..., 0.0387, 0.0406, 0.0402],
         [0.0387, 0.0404, 0.0395,  ..., 0.0387, 0.0406, 0.0402],
         [0.8840, 0.8789, 0.8815,  ..., 0.8838, 0.8783, 0.8793]],
        [[0.0378, 0.0383, 0.0389,  ..., 0.0393, 0.0382, 0.0396],
         [0.0378, 0.0383, 0.0389,  ..., 0.0393, 0.0382, 0.0396],
         [0.0378, 0.0383, 0.0389,  ..., 0.0393, 0.0382, 0.0396],
         [0.8866, 0.8852, 0.8833,  ..., 0.8822, 0.8855, 0.8811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0351, 0.0355, 0.0354,  ..., 0.0354, 0.0343, 0.0353],
         [0.0351, 0.0355, 0.0354,  ..., 0.0354, 0.0343, 0.0353],
         [0.0351, 0.0355, 0.0354,  ..., 0.0354, 0.0343, 0.0353],
         [0.8947, 0.8935, 0.8938,  ..., 0.8937, 0.8972, 0.8942]],
        [[0.0339, 0.0337, 0.0341,  ..., 0.0016, 0.0343, 0.0339],
         [0.0339, 0.0337, 0.0341,  ..., 0.0016, 0.0343, 0.0339],
         [0.0339, 0.0337, 0.0341,  ..., 0.9951, 0.0343, 0.0339],
         [0.8983, 0.8988, 0.8978,  ..., 0.0016, 0.8970, 0.8984]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:50,815 [Process: 0] Synchronize training processes
2024-08-16 16:30:50,816 [Process: 0] Evaluating...
2024-08-16 16:30:50,818 [Process: 0] EPOCH 115:
2024-08-16 16:30:50,820 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0389, 0.0382, 0.0369,  ..., 0.0387, 0.0393, 0.0382],
         [0.0389, 0.0382, 0.0369,  ..., 0.0387, 0.0393, 0.0382],
         [0.0389, 0.0382, 0.0369,  ..., 0.0387, 0.0393, 0.0382],
         [0.8832, 0.8855, 0.8894,  ..., 0.8838, 0.8820, 0.8853]],
        [[0.0383, 0.0402, 0.0389,  ..., 0.0392, 0.0401, 0.0373],
         [0.0383, 0.0402, 0.0389,  ..., 0.0392, 0.0401, 0.0373],
         [0.0383, 0.0402, 0.0389,  ..., 0.0392, 0.0401, 0.0373],
         [0.8852, 0.8793, 0.8832,  ..., 0.8823, 0.8796, 0.8882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0355, 0.0352, 0.0362,  ..., 0.0342, 0.0356, 0.0369],
         [0.0355, 0.0352, 0.0362,  ..., 0.0342, 0.0356, 0.0369],
         [0.0355, 0.0352, 0.0362,  ..., 0.0342, 0.0356, 0.0369],
         [0.8935, 0.8945, 0.8913,  ..., 0.8975, 0.8931, 0.8892]],
        [[0.0352, 0.0354, 0.0350,  ..., 0.0010, 0.0353, 0.0353],
         [0.0352, 0.0354, 0.0350,  ..., 0.0010, 0.0353, 0.0353],
         [0.0352, 0.0354, 0.0350,  ..., 0.9969, 0.0353, 0.0353],
         [0.8943, 0.8939, 0.8951,  ..., 0.0010, 0.8942, 0.8942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:52,906 [Process: 0] Synchronize training processes
2024-08-16 16:30:52,907 [Process: 0] Evaluating...
2024-08-16 16:30:52,909 [Process: 0] EPOCH 116:
2024-08-16 16:30:52,911 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0368, 0.0377, 0.0378,  ..., 0.0382, 0.0409, 0.0392],
         [0.0368, 0.0377, 0.0378,  ..., 0.0382, 0.0409, 0.0392],
         [0.0368, 0.0377, 0.0378,  ..., 0.0382, 0.0409, 0.0392],
         [0.8895, 0.8868, 0.8865,  ..., 0.8853, 0.8774, 0.8823]],
        [[0.0389, 0.0383, 0.0377,  ..., 0.0389, 0.0375, 0.0377],
         [0.0389, 0.0383, 0.0377,  ..., 0.0389, 0.0375, 0.0377],
         [0.0389, 0.0383, 0.0377,  ..., 0.0389, 0.0375, 0.0377],
         [0.8834, 0.8852, 0.8868,  ..., 0.8832, 0.8876, 0.8868]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4238e-02, 3.3415e-02, 3.4894e-02,  ..., 3.5269e-02,
          8.9568e-01, 3.5813e-02],
         [3.4238e-02, 3.3415e-02, 3.4894e-02,  ..., 3.5269e-02,
          3.4775e-02, 3.5813e-02],
         [3.4238e-02, 3.3415e-02, 3.4894e-02,  ..., 3.5269e-02,
          3.4775e-02, 3.5813e-02],
         [8.9728e-01, 8.9976e-01, 8.9532e-01,  ..., 8.9419e-01,
          3.4775e-02, 8.9256e-01]],
        [[3.4472e-02, 3.5714e-02, 3.4727e-02,  ..., 7.2869e-04,
          3.5737e-02, 3.3726e-02],
         [3.4472e-02, 3.5714e-02, 3.4727e-02,  ..., 7.2869e-04,
          3.5737e-02, 3.3726e-02],
         [3.4472e-02, 3.5714e-02, 3.4727e-02,  ..., 9.9781e-01,
          3.5737e-02, 3.3726e-02],
         [8.9658e-01, 8.9286e-01, 8.9582e-01,  ..., 7.2869e-04,
          8.9279e-01, 8.9882e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:54,975 [Process: 0] Synchronize training processes
2024-08-16 16:30:54,975 [Process: 0] Evaluating...
2024-08-16 16:30:54,977 [Process: 0] EPOCH 117:
2024-08-16 16:30:54,979 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0366, 0.0385, 0.0373,  ..., 0.0367, 0.0403, 0.0369],
         [0.0366, 0.0385, 0.0373,  ..., 0.0367, 0.0403, 0.0369],
         [0.0366, 0.0385, 0.0373,  ..., 0.0367, 0.0403, 0.0369],
         [0.8902, 0.8846, 0.8882,  ..., 0.8899, 0.8791, 0.8893]],
        [[0.0367, 0.0378, 0.0366,  ..., 0.0370, 0.0368, 0.0371],
         [0.0367, 0.0378, 0.0366,  ..., 0.0370, 0.0368, 0.0371],
         [0.0367, 0.0378, 0.0366,  ..., 0.0370, 0.0368, 0.0371],
         [0.8900, 0.8866, 0.8902,  ..., 0.8891, 0.8895, 0.8888]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3222e-02, 3.4494e-02, 3.5142e-02,  ..., 3.3240e-02,
          3.4841e-02, 3.4432e-02],
         [3.3222e-02, 3.4494e-02, 3.5142e-02,  ..., 3.3240e-02,
          3.4841e-02, 3.4432e-02],
         [3.3222e-02, 3.4494e-02, 3.5142e-02,  ..., 3.3240e-02,
          3.4841e-02, 3.4432e-02],
         [9.0033e-01, 8.9652e-01, 8.9457e-01,  ..., 9.0028e-01,
          8.9548e-01, 8.9670e-01]],
        [[3.3941e-02, 3.4221e-02, 3.3691e-02,  ..., 2.3657e-04,
          3.4409e-02, 3.3627e-02],
         [3.3941e-02, 3.4221e-02, 3.3691e-02,  ..., 2.3657e-04,
          3.4409e-02, 3.3627e-02],
         [3.3941e-02, 3.4221e-02, 3.3691e-02,  ..., 9.9929e-01,
          3.4409e-02, 3.3627e-02],
         [8.9818e-01, 8.9734e-01, 8.9893e-01,  ..., 2.3657e-04,
          8.9677e-01, 8.9912e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:57,049 [Process: 0] Synchronize training processes
2024-08-16 16:30:57,049 [Process: 0] Evaluating...
2024-08-16 16:30:57,051 [Process: 0] EPOCH 118:
2024-08-16 16:30:57,053 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0356, 0.0369, 0.0367,  ..., 0.0363, 0.0377, 0.0372],
         [0.0356, 0.0369, 0.0367,  ..., 0.0363, 0.0377, 0.0372],
         [0.0356, 0.0369, 0.0367,  ..., 0.0363, 0.0377, 0.0372],
         [0.8933, 0.8894, 0.8899,  ..., 0.8912, 0.8870, 0.8883]],
        [[0.0363, 0.0370, 0.0364,  ..., 0.0371, 0.0359, 0.0367],
         [0.0363, 0.0370, 0.0364,  ..., 0.0371, 0.0359, 0.0367],
         [0.0363, 0.0370, 0.0364,  ..., 0.0371, 0.0359, 0.0367],
         [0.8910, 0.8890, 0.8907,  ..., 0.8888, 0.8923, 0.8898]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4574e-02, 3.4224e-02, 3.4307e-02,  ..., 3.4682e-02,
          3.4623e-02, 3.4086e-02],
         [3.4574e-02, 3.4224e-02, 3.4307e-02,  ..., 3.4682e-02,
          3.4623e-02, 3.4086e-02],
         [3.4574e-02, 3.4224e-02, 3.4307e-02,  ..., 3.4682e-02,
          3.4623e-02, 3.4086e-02],
         [8.9628e-01, 8.9733e-01, 8.9708e-01,  ..., 8.9595e-01,
          8.9613e-01, 8.9774e-01]],
        [[3.3419e-02, 3.2219e-02, 3.3942e-02,  ..., 7.9221e-04,
          3.3395e-02, 3.4901e-02],
         [3.3419e-02, 3.2219e-02, 3.3942e-02,  ..., 7.9221e-04,
          3.3395e-02, 3.4901e-02],
         [3.3419e-02, 3.2219e-02, 3.3942e-02,  ..., 9.9762e-01,
          3.3395e-02, 3.4901e-02],
         [8.9974e-01, 9.0334e-01, 8.9818e-01,  ..., 7.9221e-04,
          8.9982e-01, 8.9530e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:30:59,146 [Process: 0] Synchronize training processes
2024-08-16 16:30:59,146 [Process: 0] Evaluating...
2024-08-16 16:30:59,148 [Process: 0] EPOCH 119:
2024-08-16 16:30:59,150 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0359, 0.0362, 0.0365,  ..., 0.0366, 0.0361, 0.0366],
         [0.0359, 0.0362, 0.0365,  ..., 0.0366, 0.0361, 0.0366],
         [0.0359, 0.0362, 0.0365,  ..., 0.0366, 0.0361, 0.0366],
         [0.8923, 0.8915, 0.8905,  ..., 0.8903, 0.8918, 0.8903]],
        [[0.0358, 0.0366, 0.0374,  ..., 0.0359, 0.0365, 0.0355],
         [0.0358, 0.0366, 0.0374,  ..., 0.0359, 0.0365, 0.0355],
         [0.0358, 0.0366, 0.0374,  ..., 0.0359, 0.0365, 0.0355],
         [0.8925, 0.8902, 0.8877,  ..., 0.8922, 0.8904, 0.8934]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.3399e-02, 3.3011e-02, 3.2421e-02,  ..., 3.2588e-02,
          3.3163e-02, 3.3194e-02],
         [3.3399e-02, 3.3011e-02, 3.2421e-02,  ..., 3.2588e-02,
          3.3163e-02, 3.3194e-02],
         [3.3399e-02, 3.3011e-02, 3.2421e-02,  ..., 3.2588e-02,
          3.3163e-02, 3.3194e-02],
         [8.9980e-01, 9.0097e-01, 9.0274e-01,  ..., 9.0223e-01,
          9.0051e-01, 9.0042e-01]],
        [[3.2542e-02, 3.1929e-02, 3.1849e-02,  ..., 2.7319e-04,
          3.2586e-02, 3.3109e-02],
         [3.2542e-02, 3.1929e-02, 3.1849e-02,  ..., 2.7319e-04,
          3.2586e-02, 3.3109e-02],
         [3.2542e-02, 3.1929e-02, 3.1849e-02,  ..., 9.9918e-01,
          3.2586e-02, 3.3109e-02],
         [9.0237e-01, 9.0421e-01, 9.0445e-01,  ..., 2.7319e-04,
          9.0224e-01, 9.0067e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:01,230 [Process: 0] Synchronize training processes
2024-08-16 16:31:01,231 [Process: 0] Evaluating...
2024-08-16 16:31:01,233 [Process: 0] EPOCH 120:
2024-08-16 16:31:01,235 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0349, 0.0349, 0.0351,  ..., 0.0347, 0.0353, 0.0349],
         [0.0349, 0.0349, 0.0351,  ..., 0.0347, 0.0353, 0.0349],
         [0.0349, 0.0349, 0.0351,  ..., 0.0347, 0.0353, 0.0349],
         [0.8953, 0.8954, 0.8946,  ..., 0.8960, 0.8941, 0.8953]],
        [[0.0364, 0.0348, 0.0355,  ..., 0.0370, 0.0349, 0.0346],
         [0.0364, 0.0348, 0.0355,  ..., 0.0370, 0.0349, 0.0346],
         [0.0364, 0.0348, 0.0355,  ..., 0.0370, 0.0349, 0.0346],
         [0.8909, 0.8957, 0.8934,  ..., 0.8891, 0.8953, 0.8963]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:31:03,331 [Process: 0] Synchronize training processes
2024-08-16 16:31:03,331 [Process: 0] Evaluating...
2024-08-16 16:31:03,333 [Process: 0] EPOCH 121:
2024-08-16 16:31:03,335 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4248e-02, 3.3218e-02, 3.3972e-02,  ..., 3.4479e-02,
          3.5446e-02, 3.2647e-02],
         [3.4248e-02, 3.3218e-02, 3.3972e-02,  ..., 3.4479e-02,
          3.5446e-02, 3.2647e-02],
         [3.4248e-02, 3.3218e-02, 3.3972e-02,  ..., 3.4479e-02,
          3.5446e-02, 3.2647e-02],
         [8.9726e-01, 9.0035e-01, 8.9808e-01,  ..., 8.9656e-01,
          8.9366e-01, 9.0206e-01]],
        [[3.2206e-02, 3.3839e-02, 3.3677e-02,  ..., 8.0900e-04,
          3.3889e-02, 3.2205e-02],
         [3.2206e-02, 3.3839e-02, 3.3677e-02,  ..., 8.0900e-04,
          3.3889e-02, 3.2205e-02],
         [3.2206e-02, 3.3839e-02, 3.3677e-02,  ..., 9.9757e-01,
          3.3889e-02, 3.2205e-02],
         [9.0338e-01, 8.9848e-01, 8.9897e-01,  ..., 8.0900e-04,
          8.9833e-01, 9.0339e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0346, 0.0350, 0.0345,  ..., 0.0337, 0.0352, 0.0362],
         [0.0346, 0.0350, 0.0345,  ..., 0.0337, 0.0352, 0.0362],
         [0.0346, 0.0350, 0.0345,  ..., 0.0337, 0.0352, 0.0362],
         [0.8961, 0.8951, 0.8964,  ..., 0.8989, 0.8943, 0.8913]],
        [[0.0349, 0.0341, 0.0350,  ..., 0.0355, 0.0346, 0.0361],
         [0.0349, 0.0341, 0.0350,  ..., 0.0355, 0.0346, 0.0361],
         [0.0349, 0.0341, 0.0350,  ..., 0.0355, 0.0346, 0.0361],
         [0.8953, 0.8978, 0.8950,  ..., 0.8936, 0.8962, 0.8917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:05,427 [Process: 0] Synchronize training processes
2024-08-16 16:31:05,427 [Process: 0] Evaluating...
2024-08-16 16:31:05,435 [Process: 0] EPOCH 122:
2024-08-16 16:31:05,438 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0329, 0.0331, 0.0334,  ..., 0.0341, 0.0338, 0.0319],
         [0.0329, 0.0331, 0.0334,  ..., 0.0341, 0.0338, 0.0319],
         [0.0329, 0.0331, 0.0334,  ..., 0.0341, 0.0338, 0.0319],
         [0.9014, 0.9007, 0.8998,  ..., 0.8978, 0.8985, 0.9044]],
        [[0.0322, 0.0341, 0.0336,  ..., 0.0019, 0.0319, 0.0317],
         [0.0322, 0.0341, 0.0336,  ..., 0.0019, 0.0319, 0.0317],
         [0.0322, 0.0341, 0.0336,  ..., 0.9944, 0.0319, 0.0317],
         [0.9035, 0.8978, 0.8993,  ..., 0.0019, 0.9042, 0.9049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0337, 0.0346, 0.0348,  ..., 0.0348, 0.0352, 0.0363],
         [0.0337, 0.0346, 0.0348,  ..., 0.0348, 0.0352, 0.0363],
         [0.0337, 0.0346, 0.0348,  ..., 0.0348, 0.0352, 0.0363],
         [0.8990, 0.8962, 0.8957,  ..., 0.8955, 0.8943, 0.8911]],
        [[0.0353, 0.0350, 0.0348,  ..., 0.0350, 0.0347, 0.0346],
         [0.0353, 0.0350, 0.0348,  ..., 0.0350, 0.0347, 0.0346],
         [0.0353, 0.0350, 0.0348,  ..., 0.0350, 0.0347, 0.0346],
         [0.8941, 0.8951, 0.8957,  ..., 0.8949, 0.8958, 0.8962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:07,554 [Process: 0] Synchronize training processes
2024-08-16 16:31:07,554 [Process: 0] Evaluating...
2024-08-16 16:31:07,556 [Process: 0] EPOCH 123:
2024-08-16 16:31:07,558 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0332, 0.0327, 0.0318,  ..., 0.0326, 0.0331, 0.0332],
         [0.0332, 0.0327, 0.0318,  ..., 0.0326, 0.0331, 0.0332],
         [0.0332, 0.0327, 0.0318,  ..., 0.0326, 0.0331, 0.0332],
         [0.9003, 0.9018, 0.9046,  ..., 0.9021, 0.9007, 0.9005]],
        [[0.0330, 0.0326, 0.0332,  ..., 0.0016, 0.0318, 0.0328],
         [0.0330, 0.0326, 0.0332,  ..., 0.0016, 0.0318, 0.0328],
         [0.0330, 0.0326, 0.0332,  ..., 0.9953, 0.0318, 0.0328],
         [0.9009, 0.9021, 0.9003,  ..., 0.0016, 0.9046, 0.9015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0350, 0.0343, 0.0347,  ..., 0.0349, 0.0357, 0.0348],
         [0.0350, 0.0343, 0.0347,  ..., 0.0349, 0.0357, 0.0348],
         [0.0350, 0.0343, 0.0347,  ..., 0.0349, 0.0357, 0.0348],
         [0.8949, 0.8970, 0.8959,  ..., 0.8953, 0.8930, 0.8955]],
        [[0.0356, 0.0349, 0.0352,  ..., 0.0343, 0.0356, 0.0359],
         [0.0356, 0.0349, 0.0352,  ..., 0.0343, 0.0356, 0.0359],
         [0.0356, 0.0349, 0.0352,  ..., 0.0343, 0.0356, 0.0359],
         [0.8932, 0.8953, 0.8944,  ..., 0.8971, 0.8933, 0.8924]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:09,679 [Process: 0] Synchronize training processes
2024-08-16 16:31:09,680 [Process: 0] Evaluating...
2024-08-16 16:31:09,682 [Process: 0] EPOCH 124:
2024-08-16 16:31:09,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1830e-02, 3.2196e-02, 3.1130e-02,  ..., 3.1141e-02,
          8.0277e-01, 3.1349e-02],
         [3.1830e-02, 3.2196e-02, 3.1130e-02,  ..., 3.1141e-02,
          6.5743e-02, 3.1349e-02],
         [3.1830e-02, 3.2196e-02, 3.1130e-02,  ..., 3.1141e-02,
          6.5743e-02, 3.1349e-02],
         [9.0451e-01, 9.0341e-01, 9.0661e-01,  ..., 9.0658e-01,
          6.5743e-02, 9.0595e-01]],
        [[3.0799e-02, 3.1113e-02, 3.0617e-02,  ..., 1.0782e-04,
          3.0713e-02, 3.1044e-02],
         [3.0799e-02, 3.1113e-02, 3.0617e-02,  ..., 1.0782e-04,
          3.0713e-02, 3.1044e-02],
         [3.0799e-02, 3.1113e-02, 3.0617e-02,  ..., 9.9968e-01,
          3.0713e-02, 3.1044e-02],
         [9.0760e-01, 9.0666e-01, 9.0815e-01,  ..., 1.0782e-04,
          9.0786e-01, 9.0687e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0337, 0.0336, 0.0342,  ..., 0.0338, 0.0349, 0.0341],
         [0.0337, 0.0336, 0.0342,  ..., 0.0338, 0.0349, 0.0341],
         [0.0337, 0.0336, 0.0342,  ..., 0.0338, 0.0349, 0.0341],
         [0.8990, 0.8992, 0.8973,  ..., 0.8985, 0.8953, 0.8976]],
        [[0.0340, 0.0341, 0.0340,  ..., 0.0343, 0.0342, 0.0342],
         [0.0340, 0.0341, 0.0340,  ..., 0.0343, 0.0342, 0.0342],
         [0.0340, 0.0341, 0.0340,  ..., 0.0343, 0.0342, 0.0342],
         [0.8980, 0.8976, 0.8980,  ..., 0.8972, 0.8975, 0.8974]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:11,848 [Process: 0] Synchronize training processes
2024-08-16 16:31:11,849 [Process: 0] Evaluating...
2024-08-16 16:31:11,851 [Process: 0] EPOCH 125:
2024-08-16 16:31:11,853 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0314, 0.0316, 0.0321,  ..., 0.0312, 0.9798, 0.0308],
         [0.0314, 0.0316, 0.0321,  ..., 0.0312, 0.0067, 0.0308],
         [0.0314, 0.0316, 0.0321,  ..., 0.0312, 0.0067, 0.0308],
         [0.9057, 0.9053, 0.9037,  ..., 0.9065, 0.0067, 0.9077]],
        [[0.0312, 0.0316, 0.0309,  ..., 0.0174, 0.0305, 0.0312],
         [0.0312, 0.0316, 0.0309,  ..., 0.0141, 0.0305, 0.0312],
         [0.0312, 0.0316, 0.0309,  ..., 0.9544, 0.0305, 0.0312],
         [0.9065, 0.9053, 0.9074,  ..., 0.0141, 0.9086, 0.9065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0336, 0.0329, 0.0333,  ..., 0.0332, 0.0345, 0.0346],
         [0.0336, 0.0329, 0.0333,  ..., 0.0332, 0.0345, 0.0346],
         [0.0336, 0.0329, 0.0333,  ..., 0.0332, 0.0345, 0.0346],
         [0.8993, 0.9014, 0.9002,  ..., 0.9005, 0.8964, 0.8963]],
        [[0.0336, 0.0328, 0.0335,  ..., 0.0334, 0.0333, 0.0350],
         [0.0336, 0.0328, 0.0335,  ..., 0.0334, 0.0333, 0.0350],
         [0.0336, 0.0328, 0.0335,  ..., 0.0334, 0.0333, 0.0350],
         [0.8992, 0.9017, 0.8994,  ..., 0.8997, 0.9002, 0.8949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:14,054 [Process: 0] Synchronize training processes
2024-08-16 16:31:14,054 [Process: 0] Evaluating...
2024-08-16 16:31:14,056 [Process: 0] EPOCH 126:
2024-08-16 16:31:14,058 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0305, 0.0313, 0.0309,  ..., 0.0310, 0.0320, 0.0322],
         [0.0305, 0.0313, 0.0309,  ..., 0.0310, 0.0320, 0.0322],
         [0.0305, 0.0313, 0.0309,  ..., 0.0310, 0.0320, 0.0322],
         [0.9084, 0.9060, 0.9072,  ..., 0.9071, 0.9041, 0.9033]],
        [[0.0311, 0.0309, 0.0297,  ..., 0.0014, 0.0304, 0.0311],
         [0.0311, 0.0309, 0.0297,  ..., 0.0014, 0.0304, 0.0311],
         [0.0311, 0.0309, 0.0297,  ..., 0.9959, 0.0304, 0.0311],
         [0.9067, 0.9074, 0.9109,  ..., 0.0014, 0.9088, 0.9066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0340, 0.0341, 0.0338,  ..., 0.0334, 0.0344, 0.0339],
         [0.0340, 0.0341, 0.0338,  ..., 0.0334, 0.0344, 0.0339],
         [0.0340, 0.0341, 0.0338,  ..., 0.0334, 0.0344, 0.0339],
         [0.8980, 0.8976, 0.8987,  ..., 0.8999, 0.8968, 0.8983]],
        [[0.0338, 0.0338, 0.0330,  ..., 0.0337, 0.0331, 0.0340],
         [0.0338, 0.0338, 0.0330,  ..., 0.0337, 0.0331, 0.0340],
         [0.0338, 0.0338, 0.0330,  ..., 0.0337, 0.0331, 0.0340],
         [0.8985, 0.8985, 0.9009,  ..., 0.8988, 0.9008, 0.8981]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:16,243 [Process: 0] Synchronize training processes
2024-08-16 16:31:16,244 [Process: 0] Evaluating...
2024-08-16 16:31:16,246 [Process: 0] EPOCH 127:
2024-08-16 16:31:16,248 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0313, 0.0313, 0.0317,  ..., 0.0314, 0.0308, 0.0307],
         [0.0313, 0.0313, 0.0317,  ..., 0.0314, 0.0308, 0.0307],
         [0.0313, 0.0313, 0.0317,  ..., 0.0314, 0.0308, 0.0307],
         [0.9060, 0.9061, 0.9050,  ..., 0.9058, 0.9077, 0.9078]],
        [[0.0309, 0.0305, 0.0316,  ..., 0.0052, 0.0316, 0.0315],
         [0.0309, 0.0305, 0.0316,  ..., 0.0052, 0.0316, 0.0315],
         [0.0309, 0.0305, 0.0316,  ..., 0.9844, 0.0316, 0.0315],
         [0.9074, 0.9084, 0.9051,  ..., 0.0052, 0.9051, 0.9056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0326, 0.0331, 0.0342,  ..., 0.0328, 0.0332, 0.0325],
         [0.0326, 0.0331, 0.0342,  ..., 0.0328, 0.0332, 0.0325],
         [0.0326, 0.0331, 0.0342,  ..., 0.0328, 0.0332, 0.0325],
         [0.9023, 0.9006, 0.8974,  ..., 0.9016, 0.9004, 0.9025]],
        [[0.0333, 0.0343, 0.0330,  ..., 0.0337, 0.0322, 0.0329],
         [0.0333, 0.0343, 0.0330,  ..., 0.0337, 0.0322, 0.0329],
         [0.0333, 0.0343, 0.0330,  ..., 0.0337, 0.0322, 0.0329],
         [0.9001, 0.8971, 0.9011,  ..., 0.8989, 0.9033, 0.9014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:18,333 [Process: 0] Synchronize training processes
2024-08-16 16:31:18,333 [Process: 0] Evaluating...
2024-08-16 16:31:18,335 [Process: 0] EPOCH 128:
2024-08-16 16:31:18,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0300, 0.0303, 0.0311,  ..., 0.0300, 0.0303, 0.0305],
         [0.0300, 0.0303, 0.0311,  ..., 0.0300, 0.0303, 0.0305],
         [0.0300, 0.0303, 0.0311,  ..., 0.0300, 0.0303, 0.0305],
         [0.9099, 0.9090, 0.9067,  ..., 0.9099, 0.9091, 0.9086]],
        [[0.0303, 0.0294, 0.0296,  ..., 0.0015, 0.0318, 0.0299],
         [0.0303, 0.0294, 0.0296,  ..., 0.0015, 0.0318, 0.0299],
         [0.0303, 0.0294, 0.0296,  ..., 0.9955, 0.0318, 0.0299],
         [0.9091, 0.9118, 0.9113,  ..., 0.0015, 0.9047, 0.9103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:31:20,436 [Process: 0] Synchronize training processes
2024-08-16 16:31:20,437 [Process: 0] Evaluating...
2024-08-16 16:31:20,439 [Process: 0] EPOCH 129:
2024-08-16 16:31:20,441 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0331, 0.0325, 0.0329,  ..., 0.0330, 0.0326, 0.0335],
         [0.0331, 0.0325, 0.0329,  ..., 0.0330, 0.0326, 0.0335],
         [0.0331, 0.0325, 0.0329,  ..., 0.0330, 0.0326, 0.0335],
         [0.9007, 0.9024, 0.9012,  ..., 0.9011, 0.9021, 0.8994]],
        [[0.0338, 0.0338, 0.0332,  ..., 0.0337, 0.0329, 0.0336],
         [0.0338, 0.0338, 0.0332,  ..., 0.0337, 0.0329, 0.0336],
         [0.0338, 0.0338, 0.0332,  ..., 0.0337, 0.0329, 0.0336],
         [0.8987, 0.8985, 0.9005,  ..., 0.8990, 0.9014, 0.8992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0561e-02, 3.0795e-02, 3.0306e-02,  ..., 3.1037e-02,
          3.0992e-02, 3.0327e-02],
         [3.0561e-02, 3.0795e-02, 3.0306e-02,  ..., 3.1037e-02,
          3.0992e-02, 3.0327e-02],
         [3.0561e-02, 3.0795e-02, 3.0306e-02,  ..., 3.1037e-02,
          3.0992e-02, 3.0327e-02],
         [9.0832e-01, 9.0761e-01, 9.0908e-01,  ..., 9.0689e-01,
          9.0703e-01, 9.0902e-01]],
        [[3.0100e-02, 3.1013e-02, 3.0421e-02,  ..., 6.7115e-04,
          2.9969e-02, 2.9593e-02],
         [3.0100e-02, 3.1013e-02, 3.0421e-02,  ..., 6.7115e-04,
          2.9969e-02, 2.9593e-02],
         [3.0100e-02, 3.1013e-02, 3.0421e-02,  ..., 9.9799e-01,
          2.9969e-02, 2.9593e-02],
         [9.0970e-01, 9.0696e-01, 9.0874e-01,  ..., 6.7115e-04,
          9.1009e-01, 9.1122e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:31:22,563 [Process: 0] Synchronize training processes
2024-08-16 16:31:22,563 [Process: 0] Evaluating...
2024-08-16 16:31:22,565 [Process: 0] EPOCH 130:
2024-08-16 16:31:22,567 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0324, 0.0322, 0.0324,  ..., 0.0320, 0.0321, 0.0324],
         [0.0324, 0.0322, 0.0324,  ..., 0.0320, 0.0321, 0.0324],
         [0.0324, 0.0322, 0.0324,  ..., 0.0320, 0.0321, 0.0324],
         [0.9028, 0.9034, 0.9029,  ..., 0.9039, 0.9037, 0.9027]],
        [[0.0334, 0.0338, 0.0324,  ..., 0.0327, 0.0321, 0.0317],
         [0.0334, 0.0338, 0.0324,  ..., 0.0327, 0.0321, 0.0317],
         [0.0334, 0.0338, 0.0324,  ..., 0.0327, 0.0321, 0.0317],
         [0.8998, 0.8987, 0.9027,  ..., 0.9018, 0.9037, 0.9050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9856e-02, 3.0409e-02, 2.9062e-02,  ..., 2.9667e-02,
          2.9709e-02, 2.8275e-02],
         [2.9856e-02, 3.0409e-02, 2.9062e-02,  ..., 2.9667e-02,
          2.9709e-02, 2.8275e-02],
         [2.9856e-02, 3.0409e-02, 2.9062e-02,  ..., 2.9667e-02,
          2.9709e-02, 2.8275e-02],
         [9.1043e-01, 9.0877e-01, 9.1281e-01,  ..., 9.1100e-01,
          9.1087e-01, 9.1518e-01]],
        [[3.0091e-02, 2.9411e-02, 2.8218e-02,  ..., 5.4391e-04,
          2.8723e-02, 2.9346e-02],
         [3.0091e-02, 2.9411e-02, 2.8218e-02,  ..., 5.4391e-04,
          2.8723e-02, 2.9346e-02],
         [3.0091e-02, 2.9411e-02, 2.8218e-02,  ..., 9.9837e-01,
          2.8723e-02, 2.9346e-02],
         [9.0973e-01, 9.1177e-01, 9.1535e-01,  ..., 5.4391e-04,
          9.1383e-01, 9.1196e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0315, 0.0311, 0.0324,  ..., 0.0325, 0.0307, 0.0320],
         [0.0315, 0.0311, 0.0324,  ..., 0.0325, 0.0307, 0.0320],
         [0.0315, 0.0311, 0.0324,  ..., 0.0325, 0.0307, 0.0320],
         [0.9054, 0.9066, 0.9027,  ..., 0.9025, 0.9079, 0.9041]],
        [[0.0321, 0.0327, 0.0325,  ..., 0.0325, 0.0325, 0.0320],
         [0.0321, 0.0327, 0.0325,  ..., 0.0325, 0.0325, 0.0320],
         [0.0321, 0.0327, 0.0325,  ..., 0.0325, 0.0325, 0.0320],
         [0.9037, 0.9020, 0.9025,  ..., 0.9025, 0.9024, 0.9041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9918e-02, 2.9945e-02, 2.9983e-02,  ..., 3.0037e-02,
          2.8889e-02, 3.0430e-02],
         [2.9918e-02, 2.9945e-02, 2.9983e-02,  ..., 3.0037e-02,
          2.8889e-02, 3.0430e-02],
         [2.9918e-02, 2.9945e-02, 2.9983e-02,  ..., 3.0037e-02,
          2.8889e-02, 3.0430e-02],
         [9.1025e-01, 9.1016e-01, 9.1005e-01,  ..., 9.0989e-01,
          9.1333e-01, 9.0871e-01]],
        [[2.8571e-02, 3.0322e-02, 2.9011e-02,  ..., 2.4455e-04,
          2.9871e-02, 2.8539e-02],
         [2.8571e-02, 3.0322e-02, 2.9011e-02,  ..., 2.4455e-04,
          2.9871e-02, 2.8539e-02],
         [2.8571e-02, 3.0322e-02, 2.9011e-02,  ..., 9.9927e-01,
          2.9871e-02, 2.8539e-02],
         [9.1429e-01, 9.0903e-01, 9.1297e-01,  ..., 2.4455e-04,
          9.1039e-01, 9.1438e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:24,633 [Process: 0] Synchronize training processes
2024-08-16 16:31:24,633 [Process: 0] Evaluating...
2024-08-16 16:31:24,635 [Process: 0] EPOCH 131:
2024-08-16 16:31:24,637 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0325, 0.0319, 0.0314,  ..., 0.0305, 0.0311, 0.0323],
         [0.0325, 0.0319, 0.0314,  ..., 0.0305, 0.0311, 0.0323],
         [0.0325, 0.0319, 0.0314,  ..., 0.0305, 0.0311, 0.0323],
         [0.9025, 0.9043, 0.9058,  ..., 0.9086, 0.9067, 0.9031]],
        [[0.0324, 0.0316, 0.0319,  ..., 0.0310, 0.0322, 0.0316],
         [0.0324, 0.0316, 0.0319,  ..., 0.0310, 0.0322, 0.0316],
         [0.0324, 0.0316, 0.0319,  ..., 0.0310, 0.0322, 0.0316],
         [0.9028, 0.9052, 0.9043,  ..., 0.9071, 0.9035, 0.9052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0291, 0.0295, 0.0291,  ..., 0.0302, 0.0296, 0.0294],
         [0.0291, 0.0295, 0.0291,  ..., 0.0302, 0.0296, 0.0294],
         [0.0291, 0.0295, 0.0291,  ..., 0.0302, 0.0296, 0.0294],
         [0.9128, 0.9116, 0.9127,  ..., 0.9095, 0.9112, 0.9118]],
        [[0.0295, 0.0290, 0.0286,  ..., 0.0038, 0.0289, 0.0291],
         [0.0295, 0.0290, 0.0286,  ..., 0.0038, 0.0289, 0.0291],
         [0.0295, 0.0290, 0.0286,  ..., 0.9887, 0.0289, 0.0291],
         [0.9115, 0.9131, 0.9143,  ..., 0.0038, 0.9133, 0.9128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:26,697 [Process: 0] Synchronize training processes
2024-08-16 16:31:26,698 [Process: 0] Evaluating...
2024-08-16 16:31:26,706 [Process: 0] EPOCH 132:
2024-08-16 16:31:26,708 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0303, 0.0303, 0.0319,  ..., 0.0312, 0.0309, 0.0311],
         [0.0303, 0.0303, 0.0319,  ..., 0.0312, 0.0309, 0.0311],
         [0.0303, 0.0303, 0.0319,  ..., 0.0312, 0.0309, 0.0311],
         [0.9091, 0.9091, 0.9043,  ..., 0.9063, 0.9074, 0.9067]],
        [[0.0306, 0.0314, 0.0315,  ..., 0.0304, 0.0310, 0.0315],
         [0.0306, 0.0314, 0.0315,  ..., 0.0304, 0.0310, 0.0315],
         [0.0306, 0.0314, 0.0315,  ..., 0.0304, 0.0310, 0.0315],
         [0.9083, 0.9057, 0.9054,  ..., 0.9088, 0.9069, 0.9056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8695e-02, 2.9422e-02, 2.9640e-02,  ..., 2.9138e-02,
          2.8263e-02, 2.8669e-02],
         [2.8695e-02, 2.9422e-02, 2.9640e-02,  ..., 2.9138e-02,
          2.8263e-02, 2.8669e-02],
         [2.8695e-02, 2.9422e-02, 2.9640e-02,  ..., 2.9138e-02,
          2.8263e-02, 2.8669e-02],
         [9.1392e-01, 9.1173e-01, 9.1108e-01,  ..., 9.1259e-01,
          9.1521e-01, 9.1399e-01]],
        [[2.7426e-02, 2.8281e-02, 2.7875e-02,  ..., 2.8562e-04,
          2.9887e-02, 2.9263e-02],
         [2.7426e-02, 2.8281e-02, 2.7875e-02,  ..., 2.8562e-04,
          2.9887e-02, 2.9263e-02],
         [2.7426e-02, 2.8281e-02, 2.7875e-02,  ..., 9.9914e-01,
          2.9887e-02, 2.9263e-02],
         [9.1772e-01, 9.1516e-01, 9.1637e-01,  ..., 2.8562e-04,
          9.1034e-01, 9.1221e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:28,817 [Process: 0] Synchronize training processes
2024-08-16 16:31:28,817 [Process: 0] Evaluating...
2024-08-16 16:31:28,819 [Process: 0] EPOCH 133:
2024-08-16 16:31:28,821 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0300, 0.0309, 0.0305,  ..., 0.0308, 0.0310, 0.0304],
         [0.0300, 0.0309, 0.0305,  ..., 0.0308, 0.0310, 0.0304],
         [0.0300, 0.0309, 0.0305,  ..., 0.0308, 0.0310, 0.0304],
         [0.9101, 0.9072, 0.9085,  ..., 0.9077, 0.9069, 0.9088]],
        [[0.0304, 0.0304, 0.0308,  ..., 0.0316, 0.0312, 0.0308],
         [0.0304, 0.0304, 0.0308,  ..., 0.0316, 0.0312, 0.0308],
         [0.0304, 0.0304, 0.0308,  ..., 0.0316, 0.0312, 0.0308],
         [0.9087, 0.9088, 0.9076,  ..., 0.9053, 0.9063, 0.9076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8784e-02, 2.8884e-02, 2.8831e-02,  ..., 2.8365e-02,
          9.8477e-01, 2.9512e-02],
         [2.8784e-02, 2.8884e-02, 2.8831e-02,  ..., 2.8365e-02,
          5.0768e-03, 2.9512e-02],
         [2.8784e-02, 2.8884e-02, 2.8831e-02,  ..., 2.8365e-02,
          5.0768e-03, 2.9512e-02],
         [9.1365e-01, 9.1335e-01, 9.1351e-01,  ..., 9.1490e-01,
          5.0768e-03, 9.1147e-01]],
        [[2.8736e-02, 2.7661e-02, 2.8682e-02,  ..., 9.7417e-04,
          2.8165e-02, 2.8593e-02],
         [2.8736e-02, 2.7661e-02, 2.8682e-02,  ..., 9.7417e-04,
          2.8165e-02, 2.8593e-02],
         [2.8736e-02, 2.7661e-02, 2.8682e-02,  ..., 9.9708e-01,
          2.8165e-02, 2.8593e-02],
         [9.1379e-01, 9.1702e-01, 9.1395e-01,  ..., 9.7417e-04,
          9.1551e-01, 9.1422e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:30,903 [Process: 0] Synchronize training processes
2024-08-16 16:31:30,904 [Process: 0] Evaluating...
2024-08-16 16:31:30,906 [Process: 0] EPOCH 134:
2024-08-16 16:31:30,908 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0309, 0.0296, 0.0306,  ..., 0.0312, 0.0304, 0.0308],
         [0.0309, 0.0296, 0.0306,  ..., 0.0312, 0.0304, 0.0308],
         [0.0309, 0.0296, 0.0306,  ..., 0.0312, 0.0304, 0.0308],
         [0.9073, 0.9113, 0.9081,  ..., 0.9065, 0.9089, 0.9077]],
        [[0.0309, 0.0305, 0.0312,  ..., 0.0300, 0.0305, 0.0309],
         [0.0309, 0.0305, 0.0312,  ..., 0.0300, 0.0305, 0.0309],
         [0.0309, 0.0305, 0.0312,  ..., 0.0300, 0.0305, 0.0309],
         [0.9072, 0.9086, 0.9063,  ..., 0.9101, 0.9084, 0.9072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7833e-02, 2.7277e-02, 2.7103e-02,  ..., 2.7514e-02,
          9.9917e-01, 2.7860e-02],
         [2.7833e-02, 2.7277e-02, 2.7103e-02,  ..., 2.7514e-02,
          2.7701e-04, 2.7860e-02],
         [2.7833e-02, 2.7277e-02, 2.7103e-02,  ..., 2.7514e-02,
          2.7701e-04, 2.7860e-02],
         [9.1650e-01, 9.1817e-01, 9.1869e-01,  ..., 9.1746e-01,
          2.7701e-04, 9.1642e-01]],
        [[2.7366e-02, 2.6891e-02, 2.7727e-02,  ..., 3.8329e-04,
          2.6850e-02, 2.8056e-02],
         [2.7366e-02, 2.6891e-02, 2.7727e-02,  ..., 3.8329e-04,
          2.6850e-02, 2.8056e-02],
         [2.7366e-02, 2.6891e-02, 2.7727e-02,  ..., 9.9885e-01,
          2.6850e-02, 2.8056e-02],
         [9.1790e-01, 9.1933e-01, 9.1682e-01,  ..., 3.8329e-04,
          9.1945e-01, 9.1583e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:32,992 [Process: 0] Synchronize training processes
2024-08-16 16:31:32,993 [Process: 0] Evaluating...
2024-08-16 16:31:32,994 [Process: 0] EPOCH 135:
2024-08-16 16:31:32,996 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0304, 0.0304, 0.0303,  ..., 0.0303, 0.0299, 0.0304],
         [0.0304, 0.0304, 0.0303,  ..., 0.0303, 0.0299, 0.0304],
         [0.0304, 0.0304, 0.0303,  ..., 0.0303, 0.0299, 0.0304],
         [0.9087, 0.9087, 0.9092,  ..., 0.9090, 0.9104, 0.9087]],
        [[0.0308, 0.0304, 0.0302,  ..., 0.0297, 0.0296, 0.0308],
         [0.0308, 0.0304, 0.0302,  ..., 0.0297, 0.0296, 0.0308],
         [0.0308, 0.0304, 0.0302,  ..., 0.0297, 0.0296, 0.0308],
         [0.9076, 0.9087, 0.9094,  ..., 0.9109, 0.9112, 0.9075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0286, 0.0281, 0.0282,  ..., 0.0284, 0.0276, 0.0272],
         [0.0286, 0.0281, 0.0282,  ..., 0.0284, 0.0276, 0.0272],
         [0.0286, 0.0281, 0.0282,  ..., 0.0284, 0.0276, 0.0272],
         [0.9143, 0.9158, 0.9153,  ..., 0.9147, 0.9172, 0.9185]],
        [[0.0280, 0.0283, 0.0283,  ..., 0.0010, 0.0277, 0.0274],
         [0.0280, 0.0283, 0.0283,  ..., 0.0010, 0.0277, 0.0274],
         [0.0280, 0.0283, 0.0283,  ..., 0.9970, 0.0277, 0.0274],
         [0.9159, 0.9151, 0.9151,  ..., 0.0010, 0.9170, 0.9177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:35,077 [Process: 0] Synchronize training processes
2024-08-16 16:31:35,077 [Process: 0] Evaluating...
2024-08-16 16:31:35,079 [Process: 0] EPOCH 136:
2024-08-16 16:31:35,081 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0310, 0.0308, 0.0309,  ..., 0.0304, 0.0302, 0.0311],
         [0.0310, 0.0308, 0.0309,  ..., 0.0304, 0.0302, 0.0311],
         [0.0310, 0.0308, 0.0309,  ..., 0.0304, 0.0302, 0.0311],
         [0.9069, 0.9077, 0.9074,  ..., 0.9088, 0.9095, 0.9068]],
        [[0.0307, 0.0307, 0.0304,  ..., 0.0299, 0.0307, 0.0309],
         [0.0307, 0.0307, 0.0304,  ..., 0.0299, 0.0307, 0.0309],
         [0.0307, 0.0307, 0.0304,  ..., 0.0299, 0.0307, 0.0309],
         [0.9080, 0.9079, 0.9089,  ..., 0.9102, 0.9079, 0.9074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0280, 0.0272, 0.0267,  ..., 0.0276, 0.0270, 0.0277],
         [0.0280, 0.0272, 0.0267,  ..., 0.0276, 0.0270, 0.0277],
         [0.0280, 0.0272, 0.0267,  ..., 0.0276, 0.0270, 0.0277],
         [0.9161, 0.9185, 0.9199,  ..., 0.9173, 0.9191, 0.9170]],
        [[0.0272, 0.0271, 0.0269,  ..., 0.0015, 0.0269, 0.0276],
         [0.0272, 0.0271, 0.0269,  ..., 0.0015, 0.0269, 0.0276],
         [0.0272, 0.0271, 0.0269,  ..., 0.9956, 0.0269, 0.0276],
         [0.9184, 0.9187, 0.9193,  ..., 0.0015, 0.9192, 0.9171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:37,180 [Process: 0] Synchronize training processes
2024-08-16 16:31:37,180 [Process: 0] Evaluating...
2024-08-16 16:31:37,182 [Process: 0] EPOCH 137:
2024-08-16 16:31:37,184 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0311, 0.0302, 0.0304,  ..., 0.0295, 0.0294, 0.0305],
         [0.0311, 0.0302, 0.0304,  ..., 0.0295, 0.0294, 0.0305],
         [0.0311, 0.0302, 0.0304,  ..., 0.0295, 0.0294, 0.0305],
         [0.9067, 0.9093, 0.9087,  ..., 0.9114, 0.9119, 0.9086]],
        [[0.0296, 0.0297, 0.0305,  ..., 0.0296, 0.0300, 0.0305],
         [0.0296, 0.0297, 0.0305,  ..., 0.0296, 0.0300, 0.0305],
         [0.0296, 0.0297, 0.0305,  ..., 0.0296, 0.0300, 0.0305],
         [0.9111, 0.9108, 0.9086,  ..., 0.9113, 0.9101, 0.9084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7375e-02, 2.6770e-02, 2.7011e-02,  ..., 2.7712e-02,
          4.0552e-02, 2.6456e-02],
         [2.7375e-02, 2.6770e-02, 2.7011e-02,  ..., 2.7712e-02,
          4.0552e-02, 2.6456e-02],
         [2.7375e-02, 2.6770e-02, 2.7011e-02,  ..., 2.7712e-02,
          4.0552e-02, 2.6456e-02],
         [9.1788e-01, 9.1969e-01, 9.1897e-01,  ..., 9.1686e-01,
          8.7834e-01, 9.2063e-01]],
        [[2.6591e-02, 2.8080e-02, 2.5805e-02,  ..., 4.3811e-04,
          2.7132e-02, 2.6419e-02],
         [2.6591e-02, 2.8080e-02, 2.5805e-02,  ..., 4.3811e-04,
          2.7132e-02, 2.6419e-02],
         [2.6591e-02, 2.8080e-02, 2.5805e-02,  ..., 9.9869e-01,
          2.7132e-02, 2.6419e-02],
         [9.2023e-01, 9.1576e-01, 9.2258e-01,  ..., 4.3811e-04,
          9.1860e-01, 9.2074e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:31:39,287 [Process: 0] Synchronize training processes
2024-08-16 16:31:39,287 [Process: 0] Evaluating...
2024-08-16 16:31:39,289 [Process: 0] EPOCH 138:
2024-08-16 16:31:39,291 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0300, 0.0293, 0.0295,  ..., 0.0294, 0.0304, 0.0298],
         [0.0300, 0.0293, 0.0295,  ..., 0.0294, 0.0304, 0.0298],
         [0.0300, 0.0293, 0.0295,  ..., 0.0294, 0.0304, 0.0298],
         [0.9100, 0.9121, 0.9116,  ..., 0.9117, 0.9089, 0.9107]],
        [[0.0302, 0.0300, 0.0298,  ..., 0.0301, 0.0295, 0.0294],
         [0.0302, 0.0300, 0.0298,  ..., 0.0301, 0.0295, 0.0294],
         [0.0302, 0.0300, 0.0298,  ..., 0.0301, 0.0295, 0.0294],
         [0.9094, 0.9101, 0.9105,  ..., 0.9098, 0.9115, 0.9119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7148e-02, 2.8223e-02, 2.7507e-02,  ..., 2.8175e-02,
          9.8467e-01, 2.8021e-02],
         [2.7148e-02, 2.8223e-02, 2.7507e-02,  ..., 2.8175e-02,
          5.1104e-03, 2.8021e-02],
         [2.7148e-02, 2.8223e-02, 2.7507e-02,  ..., 2.8175e-02,
          5.1104e-03, 2.8021e-02],
         [9.1856e-01, 9.1533e-01, 9.1748e-01,  ..., 9.1548e-01,
          5.1104e-03, 9.1594e-01]],
        [[2.6459e-02, 2.6607e-02, 2.6388e-02,  ..., 6.7053e-04,
          2.6818e-02, 2.7298e-02],
         [2.6459e-02, 2.6607e-02, 2.6388e-02,  ..., 6.7053e-04,
          2.6818e-02, 2.7298e-02],
         [2.6459e-02, 2.6607e-02, 2.6388e-02,  ..., 9.9799e-01,
          2.6818e-02, 2.7298e-02],
         [9.2062e-01, 9.2018e-01, 9.2084e-01,  ..., 6.7053e-04,
          9.1955e-01, 9.1810e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:41,375 [Process: 0] Synchronize training processes
2024-08-16 16:31:41,375 [Process: 0] Evaluating...
2024-08-16 16:31:41,377 [Process: 0] EPOCH 139:
2024-08-16 16:31:41,379 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0290, 0.0289, 0.0293,  ..., 0.0290, 0.0290, 0.0296],
         [0.0290, 0.0289, 0.0293,  ..., 0.0290, 0.0290, 0.0296],
         [0.0290, 0.0289, 0.0293,  ..., 0.0290, 0.0290, 0.0296],
         [0.9131, 0.9133, 0.9120,  ..., 0.9129, 0.9131, 0.9111]],
        [[0.0294, 0.0305, 0.0294,  ..., 0.0293, 0.0295, 0.0292],
         [0.0294, 0.0305, 0.0294,  ..., 0.0293, 0.0295, 0.0292],
         [0.0294, 0.0305, 0.0294,  ..., 0.0293, 0.0295, 0.0292],
         [0.9119, 0.9085, 0.9118,  ..., 0.9121, 0.9116, 0.9124]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 16:31:43,465 [Process: 0] Synchronize training processes
2024-08-16 16:31:43,466 [Process: 0] Evaluating...
2024-08-16 16:31:43,468 [Process: 0] EPOCH 140:
2024-08-16 16:31:43,470 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7292e-02, 2.7390e-02, 2.7183e-02,  ..., 2.6432e-02,
          9.8806e-01, 2.7112e-02],
         [2.7292e-02, 2.7390e-02, 2.7183e-02,  ..., 2.6432e-02,
          3.9813e-03, 2.7112e-02],
         [2.7292e-02, 2.7390e-02, 2.7183e-02,  ..., 2.6432e-02,
          3.9813e-03, 2.7112e-02],
         [9.1812e-01, 9.1783e-01, 9.1845e-01,  ..., 9.2070e-01,
          3.9813e-03, 9.1866e-01]],
        [[2.7632e-02, 2.7257e-02, 2.7129e-02,  ..., 7.3585e-04,
          2.6332e-02, 2.6710e-02],
         [2.7632e-02, 2.7257e-02, 2.7129e-02,  ..., 7.3585e-04,
          2.6332e-02, 2.6710e-02],
         [2.7632e-02, 2.7257e-02, 2.7129e-02,  ..., 9.9779e-01,
          2.6332e-02, 2.6710e-02],
         [9.1710e-01, 9.1823e-01, 9.1861e-01,  ..., 7.3585e-04,
          9.2101e-01, 9.1987e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0288, 0.0294, 0.0301,  ..., 0.0283, 0.0292, 0.0293],
         [0.0288, 0.0294, 0.0301,  ..., 0.0283, 0.0292, 0.0293],
         [0.0288, 0.0294, 0.0301,  ..., 0.0283, 0.0292, 0.0293],
         [0.9137, 0.9118, 0.9098,  ..., 0.9150, 0.9123, 0.9120]],
        [[0.0290, 0.0290, 0.0294,  ..., 0.0276, 0.0276, 0.0293],
         [0.0290, 0.0290, 0.0294,  ..., 0.0276, 0.0276, 0.0293],
         [0.0290, 0.0290, 0.0294,  ..., 0.0276, 0.0276, 0.0293],
         [0.9130, 0.9129, 0.9119,  ..., 0.9172, 0.9172, 0.9120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 16:31:45,564 [Process: 0] Synchronize training processes
2024-08-16 16:31:45,565 [Process: 0] Evaluating...
2024-08-16 16:31:45,567 [Process: 0] EPOCH 141:
2024-08-16 16:31:45,569 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0259, 0.0267, 0.0262,  ..., 0.0267, 0.9907, 0.0258],
         [0.0259, 0.0267, 0.0262,  ..., 0.0267, 0.0031, 0.0258],
         [0.0259, 0.0267, 0.0262,  ..., 0.0267, 0.0031, 0.0258],
         [0.9224, 0.9199, 0.9213,  ..., 0.9198, 0.0031, 0.9227]],
        [[0.0261, 0.0259, 0.0257,  ..., 0.0011, 0.0256, 0.0249],
         [0.0261, 0.0259, 0.0257,  ..., 0.0011, 0.0256, 0.0249],
         [0.0261, 0.0259, 0.0257,  ..., 0.9968, 0.0256, 0.0249],
         [0.9217, 0.9222, 0.9230,  ..., 0.0011, 0.9233, 0.9252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0288, 0.0285, 0.0288,  ..., 0.0282, 0.0283, 0.0278],
         [0.0288, 0.0285, 0.0288,  ..., 0.0282, 0.0283, 0.0278],
         [0.0288, 0.0285, 0.0288,  ..., 0.0282, 0.0283, 0.0278],
         [0.9135, 0.9146, 0.9135,  ..., 0.9153, 0.9150, 0.9166]],
        [[0.0285, 0.0279, 0.0281,  ..., 0.0292, 0.0280, 0.0284],
         [0.0285, 0.0279, 0.0281,  ..., 0.0292, 0.0280, 0.0284],
         [0.0285, 0.0279, 0.0281,  ..., 0.0292, 0.0280, 0.0284],
         [0.9146, 0.9163, 0.9158,  ..., 0.9123, 0.9159, 0.9147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:47,637 [Process: 0] Synchronize training processes
2024-08-16 16:31:47,638 [Process: 0] Evaluating...
2024-08-16 16:31:47,646 [Process: 0] EPOCH 142:
2024-08-16 16:31:47,648 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6225e-02, 2.6105e-02, 2.6185e-02,  ..., 2.6025e-02,
          9.9309e-01, 2.6351e-02],
         [2.6225e-02, 2.6105e-02, 2.6185e-02,  ..., 2.6025e-02,
          2.3049e-03, 2.6351e-02],
         [2.6225e-02, 2.6105e-02, 2.6185e-02,  ..., 2.6025e-02,
          2.3049e-03, 2.6351e-02],
         [9.2132e-01, 9.2169e-01, 9.2145e-01,  ..., 9.2192e-01,
          2.3049e-03, 9.2095e-01]],
        [[2.6348e-02, 2.6313e-02, 2.6847e-02,  ..., 4.3636e-04,
          2.6395e-02, 2.5511e-02],
         [2.6348e-02, 2.6313e-02, 2.6847e-02,  ..., 4.3636e-04,
          2.6395e-02, 2.5511e-02],
         [2.6348e-02, 2.6313e-02, 2.6847e-02,  ..., 9.9869e-01,
          2.6395e-02, 2.5511e-02],
         [9.2095e-01, 9.2106e-01, 9.1946e-01,  ..., 4.3636e-04,
          9.2082e-01, 9.2347e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0282, 0.0294, 0.0281,  ..., 0.0289, 0.0289, 0.0288],
         [0.0282, 0.0294, 0.0281,  ..., 0.0289, 0.0289, 0.0288],
         [0.0282, 0.0294, 0.0281,  ..., 0.0289, 0.0289, 0.0288],
         [0.9153, 0.9119, 0.9156,  ..., 0.9133, 0.9134, 0.9137]],
        [[0.0283, 0.0293, 0.0285,  ..., 0.0277, 0.0286, 0.0290],
         [0.0283, 0.0293, 0.0285,  ..., 0.0277, 0.0286, 0.0290],
         [0.0283, 0.0293, 0.0285,  ..., 0.0277, 0.0286, 0.0290],
         [0.9150, 0.9122, 0.9146,  ..., 0.9168, 0.9142, 0.9130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:49,737 [Process: 0] Synchronize training processes
2024-08-16 16:31:49,737 [Process: 0] Evaluating...
2024-08-16 16:31:49,739 [Process: 0] EPOCH 143:
2024-08-16 16:31:49,741 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6410e-02, 2.6527e-02, 2.7463e-02,  ..., 2.6105e-02,
          9.5351e-01, 2.5957e-02],
         [2.6410e-02, 2.6527e-02, 2.7463e-02,  ..., 2.6105e-02,
          1.5497e-02, 2.5957e-02],
         [2.6410e-02, 2.6527e-02, 2.7463e-02,  ..., 2.6105e-02,
          1.5497e-02, 2.5957e-02],
         [9.2077e-01, 9.2042e-01, 9.1761e-01,  ..., 9.2168e-01,
          1.5497e-02, 9.2213e-01]],
        [[2.7063e-02, 2.5697e-02, 2.4801e-02,  ..., 8.6173e-04,
          2.5639e-02, 2.5108e-02],
         [2.7063e-02, 2.5697e-02, 2.4801e-02,  ..., 8.6173e-04,
          2.5639e-02, 2.5108e-02],
         [2.7063e-02, 2.5697e-02, 2.4801e-02,  ..., 9.9741e-01,
          2.5639e-02, 2.5108e-02],
         [9.1881e-01, 9.2291e-01, 9.2560e-01,  ..., 8.6173e-04,
          9.2308e-01, 9.2468e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0271, 0.0283, 0.0275,  ..., 0.0275, 0.0279, 0.0276],
         [0.0271, 0.0283, 0.0275,  ..., 0.0275, 0.0279, 0.0276],
         [0.0271, 0.0283, 0.0275,  ..., 0.0275, 0.0279, 0.0276],
         [0.9187, 0.9151, 0.9176,  ..., 0.9176, 0.9164, 0.9173]],
        [[0.0277, 0.0282, 0.0280,  ..., 0.0272, 0.0275, 0.0289],
         [0.0277, 0.0282, 0.0280,  ..., 0.0272, 0.0275, 0.0289],
         [0.0277, 0.0282, 0.0280,  ..., 0.0272, 0.0275, 0.0289],
         [0.9170, 0.9154, 0.9160,  ..., 0.9183, 0.9175, 0.9132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:51,808 [Process: 0] Synchronize training processes
2024-08-16 16:31:51,809 [Process: 0] Evaluating...
2024-08-16 16:31:51,810 [Process: 0] EPOCH 144:
2024-08-16 16:31:51,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0255, 0.0258, 0.0260,  ..., 0.0264, 0.9866, 0.0250],
         [0.0255, 0.0258, 0.0260,  ..., 0.0264, 0.0045, 0.0250],
         [0.0255, 0.0258, 0.0260,  ..., 0.0264, 0.0045, 0.0250],
         [0.9234, 0.9226, 0.9220,  ..., 0.9207, 0.0045, 0.9251]],
        [[0.0256, 0.0249, 0.0257,  ..., 0.0032, 0.0258, 0.0250],
         [0.0256, 0.0249, 0.0257,  ..., 0.0032, 0.0258, 0.0250],
         [0.0256, 0.0249, 0.0257,  ..., 0.9905, 0.0258, 0.0250],
         [0.9231, 0.9253, 0.9228,  ..., 0.0032, 0.9227, 0.9249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0270, 0.0270, 0.0268,  ..., 0.0272, 0.0269, 0.0273],
         [0.0270, 0.0270, 0.0268,  ..., 0.0272, 0.0269, 0.0273],
         [0.0270, 0.0270, 0.0268,  ..., 0.0272, 0.0269, 0.0273],
         [0.9191, 0.9191, 0.9196,  ..., 0.9185, 0.9193, 0.9180]],
        [[0.0278, 0.0273, 0.0271,  ..., 0.0268, 0.0275, 0.0272],
         [0.0278, 0.0273, 0.0271,  ..., 0.0268, 0.0275, 0.0272],
         [0.0278, 0.0273, 0.0271,  ..., 0.0268, 0.0275, 0.0272],
         [0.9166, 0.9180, 0.9186,  ..., 0.9197, 0.9176, 0.9184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:53,903 [Process: 0] Synchronize training processes
2024-08-16 16:31:53,904 [Process: 0] Evaluating...
2024-08-16 16:31:53,906 [Process: 0] EPOCH 145:
2024-08-16 16:31:53,908 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5253e-02, 2.4999e-02, 2.5334e-02,  ..., 2.5384e-02,
          9.9153e-01, 2.5243e-02],
         [2.5253e-02, 2.4999e-02, 2.5334e-02,  ..., 2.5384e-02,
          2.8242e-03, 2.5243e-02],
         [2.5253e-02, 2.4999e-02, 2.5334e-02,  ..., 2.5384e-02,
          2.8242e-03, 2.5243e-02],
         [9.2424e-01, 9.2500e-01, 9.2400e-01,  ..., 9.2385e-01,
          2.8242e-03, 9.2427e-01]],
        [[2.4968e-02, 2.5814e-02, 2.5302e-02,  ..., 1.8539e-04,
          2.4876e-02, 2.4362e-02],
         [2.4968e-02, 2.5814e-02, 2.5302e-02,  ..., 1.8539e-04,
          2.4876e-02, 2.4362e-02],
         [2.4968e-02, 2.5814e-02, 2.5302e-02,  ..., 9.9944e-01,
          2.4876e-02, 2.4362e-02],
         [9.2510e-01, 9.2256e-01, 9.2409e-01,  ..., 1.8539e-04,
          9.2537e-01, 9.2691e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0274, 0.0275, 0.0277,  ..., 0.0276, 0.0271, 0.0269],
         [0.0274, 0.0275, 0.0277,  ..., 0.0276, 0.0271, 0.0269],
         [0.0274, 0.0275, 0.0277,  ..., 0.0276, 0.0271, 0.0269],
         [0.9177, 0.9176, 0.9170,  ..., 0.9171, 0.9187, 0.9192]],
        [[0.0279, 0.0279, 0.0270,  ..., 0.0270, 0.0283, 0.0277],
         [0.0279, 0.0279, 0.0270,  ..., 0.0270, 0.0283, 0.0277],
         [0.0279, 0.0279, 0.0270,  ..., 0.0270, 0.0283, 0.0277],
         [0.9163, 0.9162, 0.9189,  ..., 0.9189, 0.9152, 0.9169]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:55,989 [Process: 0] Synchronize training processes
2024-08-16 16:31:55,989 [Process: 0] Evaluating...
2024-08-16 16:31:55,991 [Process: 0] EPOCH 146:
2024-08-16 16:31:55,993 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0247, 0.0253, 0.0249,  ..., 0.0255, 0.9966, 0.0258],
         [0.0247, 0.0253, 0.0249,  ..., 0.0255, 0.0011, 0.0258],
         [0.0247, 0.0253, 0.0249,  ..., 0.0255, 0.0011, 0.0258],
         [0.9258, 0.9242, 0.9252,  ..., 0.9235, 0.0011, 0.9225]],
        [[0.0248, 0.0243, 0.0251,  ..., 0.0011, 0.0260, 0.0252],
         [0.0248, 0.0243, 0.0251,  ..., 0.0011, 0.0260, 0.0252],
         [0.0248, 0.0243, 0.0251,  ..., 0.9967, 0.0260, 0.0252],
         [0.9255, 0.9271, 0.9247,  ..., 0.0011, 0.9220, 0.9245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0273, 0.0274, 0.0274,  ..., 0.0273, 0.0274, 0.0273],
         [0.0273, 0.0274, 0.0274,  ..., 0.0273, 0.0274, 0.0273],
         [0.0273, 0.0274, 0.0274,  ..., 0.0273, 0.0274, 0.0273],
         [0.9181, 0.9178, 0.9177,  ..., 0.9182, 0.9178, 0.9181]],
        [[0.0272, 0.0277, 0.0273,  ..., 0.0269, 0.0271, 0.0279],
         [0.0272, 0.0277, 0.0273,  ..., 0.0269, 0.0271, 0.0279],
         [0.0272, 0.0277, 0.0273,  ..., 0.0269, 0.0271, 0.0279],
         [0.9185, 0.9168, 0.9182,  ..., 0.9192, 0.9186, 0.9164]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:31:58,069 [Process: 0] Synchronize training processes
2024-08-16 16:31:58,069 [Process: 0] Evaluating...
2024-08-16 16:31:58,071 [Process: 0] EPOCH 147:
2024-08-16 16:31:58,073 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5474e-02, 2.4073e-02, 2.5346e-02,  ..., 2.4869e-02,
          9.9137e-01, 2.4316e-02],
         [2.5474e-02, 2.4073e-02, 2.5346e-02,  ..., 2.4869e-02,
          2.8770e-03, 2.4316e-02],
         [2.5474e-02, 2.4073e-02, 2.5346e-02,  ..., 2.4869e-02,
          2.8770e-03, 2.4316e-02],
         [9.2358e-01, 9.2778e-01, 9.2396e-01,  ..., 9.2539e-01,
          2.8770e-03, 9.2705e-01]],
        [[2.4968e-02, 2.4460e-02, 2.5196e-02,  ..., 4.8307e-04,
          2.4355e-02, 2.4471e-02],
         [2.4968e-02, 2.4460e-02, 2.5196e-02,  ..., 4.8307e-04,
          2.4355e-02, 2.4471e-02],
         [2.4968e-02, 2.4460e-02, 2.5196e-02,  ..., 9.9855e-01,
          2.4355e-02, 2.4471e-02],
         [9.2510e-01, 9.2662e-01, 9.2441e-01,  ..., 4.8307e-04,
          9.2693e-01, 9.2659e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0267, 0.0264, 0.0266,  ..., 0.0263, 0.0263, 0.0262],
         [0.0267, 0.0264, 0.0266,  ..., 0.0263, 0.0263, 0.0262],
         [0.0267, 0.0264, 0.0266,  ..., 0.0263, 0.0263, 0.0262],
         [0.9200, 0.9207, 0.9202,  ..., 0.9210, 0.9210, 0.9215]],
        [[0.0259, 0.0265, 0.0265,  ..., 0.0270, 0.0262, 0.0262],
         [0.0259, 0.0265, 0.0265,  ..., 0.0270, 0.0262, 0.0262],
         [0.0259, 0.0265, 0.0265,  ..., 0.0270, 0.0262, 0.0262],
         [0.9223, 0.9205, 0.9205,  ..., 0.9191, 0.9215, 0.9213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:00,158 [Process: 0] Synchronize training processes
2024-08-16 16:32:00,159 [Process: 0] Evaluating...
2024-08-16 16:32:00,161 [Process: 0] EPOCH 148:
2024-08-16 16:32:00,163 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0253, 0.0245, 0.0244,  ..., 0.0247, 0.9746, 0.0241],
         [0.0253, 0.0245, 0.0244,  ..., 0.0247, 0.0085, 0.0241],
         [0.0253, 0.0245, 0.0244,  ..., 0.0247, 0.0085, 0.0241],
         [0.9241, 0.9266, 0.9269,  ..., 0.9259, 0.0085, 0.9276]],
        [[0.0248, 0.0239, 0.0243,  ..., 0.0024, 0.0245, 0.0255],
         [0.0248, 0.0239, 0.0243,  ..., 0.0024, 0.0245, 0.0255],
         [0.0248, 0.0239, 0.0243,  ..., 0.9929, 0.0245, 0.0255],
         [0.9257, 0.9282, 0.9271,  ..., 0.0024, 0.9265, 0.9234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0267, 0.0269, 0.0274,  ..., 0.0273, 0.0274, 0.0267],
         [0.0267, 0.0269, 0.0274,  ..., 0.0273, 0.0274, 0.0267],
         [0.0267, 0.0269, 0.0274,  ..., 0.0273, 0.0274, 0.0267],
         [0.9199, 0.9192, 0.9177,  ..., 0.9182, 0.9177, 0.9200]],
        [[0.0278, 0.0268, 0.0273,  ..., 0.0266, 0.0261, 0.0277],
         [0.0278, 0.0268, 0.0273,  ..., 0.0266, 0.0261, 0.0277],
         [0.0278, 0.0268, 0.0273,  ..., 0.0266, 0.0261, 0.0277],
         [0.9165, 0.9197, 0.9181,  ..., 0.9202, 0.9218, 0.9170]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:02,247 [Process: 0] Synchronize training processes
2024-08-16 16:32:02,247 [Process: 0] Evaluating...
2024-08-16 16:32:02,249 [Process: 0] EPOCH 149:
2024-08-16 16:32:02,251 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4423e-02, 2.4752e-02, 2.5550e-02,  ..., 2.3965e-02,
          5.8056e-01, 2.4869e-02],
         [2.4423e-02, 2.4752e-02, 2.5550e-02,  ..., 2.3965e-02,
          9.8818e-02, 2.4869e-02],
         [2.4423e-02, 2.4752e-02, 2.5550e-02,  ..., 2.3965e-02,
          9.8818e-02, 2.4869e-02],
         [9.2673e-01, 9.2574e-01, 9.2335e-01,  ..., 9.2811e-01,
          2.2180e-01, 9.2539e-01]],
        [[2.3974e-02, 2.4493e-02, 2.3932e-02,  ..., 7.8849e-04,
          2.4745e-02, 2.3756e-02],
         [2.3974e-02, 2.4493e-02, 2.3932e-02,  ..., 7.8849e-04,
          2.4745e-02, 2.3756e-02],
         [2.3974e-02, 2.4493e-02, 2.3932e-02,  ..., 9.9763e-01,
          2.4745e-02, 2.3756e-02],
         [9.2808e-01, 9.2652e-01, 9.2821e-01,  ..., 7.8849e-04,
          9.2576e-01, 9.2873e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0266, 0.0264, 0.0265,  ..., 0.0262, 0.0258, 0.0260],
         [0.0266, 0.0264, 0.0265,  ..., 0.0262, 0.0258, 0.0260],
         [0.0266, 0.0264, 0.0265,  ..., 0.0262, 0.0258, 0.0260],
         [0.9202, 0.9207, 0.9206,  ..., 0.9214, 0.9227, 0.9220]],
        [[0.0263, 0.0270, 0.0262,  ..., 0.0260, 0.0257, 0.0267],
         [0.0263, 0.0270, 0.0262,  ..., 0.0260, 0.0257, 0.0267],
         [0.0263, 0.0270, 0.0262,  ..., 0.0260, 0.0257, 0.0267],
         [0.9211, 0.9191, 0.9213,  ..., 0.9219, 0.9229, 0.9200]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:04,333 [Process: 0] Synchronize training processes
2024-08-16 16:32:04,333 [Process: 0] Evaluating...
2024-08-16 16:32:04,335 [Process: 0] EPOCH 150:
2024-08-16 16:32:04,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0242, 0.0250, 0.0246,  ..., 0.0236, 0.0237, 0.0243],
         [0.0242, 0.0250, 0.0246,  ..., 0.0236, 0.0237, 0.0243],
         [0.0242, 0.0250, 0.0246,  ..., 0.0236, 0.0237, 0.0243],
         [0.9273, 0.9250, 0.9263,  ..., 0.9291, 0.9290, 0.9270]],
        [[0.0239, 0.0238, 0.0231,  ..., 0.0036, 0.0243, 0.0238],
         [0.0239, 0.0238, 0.0231,  ..., 0.0036, 0.0243, 0.0238],
         [0.0239, 0.0238, 0.0231,  ..., 0.9892, 0.0243, 0.0238],
         [0.9283, 0.9287, 0.9307,  ..., 0.0036, 0.9271, 0.9286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0250, 0.0250, 0.0246,  ..., 0.0251, 0.0247, 0.0245],
         [0.0250, 0.0250, 0.0246,  ..., 0.0251, 0.0247, 0.0245],
         [0.0250, 0.0250, 0.0246,  ..., 0.0251, 0.0247, 0.0245],
         [0.9250, 0.9249, 0.9263,  ..., 0.9247, 0.9259, 0.9266]],
        [[0.0253, 0.0247, 0.0251,  ..., 0.0258, 0.0246, 0.0251],
         [0.0253, 0.0247, 0.0251,  ..., 0.0258, 0.0246, 0.0251],
         [0.0253, 0.0247, 0.0251,  ..., 0.0258, 0.0246, 0.0251],
         [0.9242, 0.9259, 0.9248,  ..., 0.9225, 0.9261, 0.9248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:06,410 [Process: 0] Synchronize training processes
2024-08-16 16:32:06,410 [Process: 0] Evaluating...
2024-08-16 16:32:06,412 [Process: 0] EPOCH 151:
2024-08-16 16:32:06,414 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.3823e-02, 2.4351e-02, 2.3672e-02,  ..., 2.4129e-02,
          2.3922e-02, 2.4538e-02],
         [2.3823e-02, 2.4351e-02, 2.3672e-02,  ..., 2.4129e-02,
          2.3922e-02, 2.4538e-02],
         [2.3823e-02, 2.4351e-02, 2.3672e-02,  ..., 2.4129e-02,
          2.3922e-02, 2.4538e-02],
         [9.2853e-01, 9.2695e-01, 9.2899e-01,  ..., 9.2761e-01,
          9.2823e-01, 9.2638e-01]],
        [[2.3592e-02, 2.3757e-02, 2.3790e-02,  ..., 7.6377e-04,
          2.3812e-02, 2.3159e-02],
         [2.3592e-02, 2.3757e-02, 2.3790e-02,  ..., 7.6377e-04,
          2.3812e-02, 2.3159e-02],
         [2.3592e-02, 2.3757e-02, 2.3790e-02,  ..., 9.9771e-01,
          2.3812e-02, 2.3159e-02],
         [9.2922e-01, 9.2873e-01, 9.2863e-01,  ..., 7.6377e-04,
          9.2857e-01, 9.3052e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0256, 0.0262, 0.0266,  ..., 0.0259, 0.0257, 0.0261],
         [0.0256, 0.0262, 0.0266,  ..., 0.0259, 0.0257, 0.0261],
         [0.0256, 0.0262, 0.0266,  ..., 0.0259, 0.0257, 0.0261],
         [0.9233, 0.9213, 0.9202,  ..., 0.9223, 0.9230, 0.9218]],
        [[0.0262, 0.0260, 0.0259,  ..., 0.0255, 0.0256, 0.0256],
         [0.0262, 0.0260, 0.0259,  ..., 0.0255, 0.0256, 0.0256],
         [0.0262, 0.0260, 0.0259,  ..., 0.0255, 0.0256, 0.0256],
         [0.9213, 0.9219, 0.9223,  ..., 0.9235, 0.9232, 0.9232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:08,505 [Process: 0] Synchronize training processes
2024-08-16 16:32:08,505 [Process: 0] Evaluating...
2024-08-16 16:32:08,513 [Process: 0] EPOCH 152:
2024-08-16 16:32:08,515 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4205e-02, 2.4401e-02, 2.3590e-02,  ..., 2.3863e-02,
          9.6944e-01, 2.3693e-02],
         [2.4205e-02, 2.4401e-02, 2.3590e-02,  ..., 2.3863e-02,
          1.0188e-02, 2.3693e-02],
         [2.4205e-02, 2.4401e-02, 2.3590e-02,  ..., 2.3863e-02,
          1.0188e-02, 2.3693e-02],
         [9.2739e-01, 9.2680e-01, 9.2923e-01,  ..., 9.2841e-01,
          1.0188e-02, 9.2892e-01]],
        [[2.2985e-02, 2.3915e-02, 2.3806e-02,  ..., 1.9891e-04,
          2.3619e-02, 2.3980e-02],
         [2.2985e-02, 2.3915e-02, 2.3806e-02,  ..., 1.9891e-04,
          2.3619e-02, 2.3980e-02],
         [2.2985e-02, 2.3915e-02, 2.3806e-02,  ..., 9.9940e-01,
          2.3619e-02, 2.3980e-02],
         [9.3105e-01, 9.2825e-01, 9.2858e-01,  ..., 1.9891e-04,
          9.2914e-01, 9.2806e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0259, 0.0260, 0.0266,  ..., 0.0259, 0.0264, 0.0259],
         [0.0259, 0.0260, 0.0266,  ..., 0.0259, 0.0264, 0.0259],
         [0.0259, 0.0260, 0.0266,  ..., 0.0259, 0.0264, 0.0259],
         [0.9224, 0.9221, 0.9203,  ..., 0.9222, 0.9208, 0.9223]],
        [[0.0258, 0.0251, 0.0258,  ..., 0.0257, 0.0262, 0.0257],
         [0.0258, 0.0251, 0.0258,  ..., 0.0257, 0.0262, 0.0257],
         [0.0258, 0.0251, 0.0258,  ..., 0.0257, 0.0262, 0.0257],
         [0.9225, 0.9247, 0.9225,  ..., 0.9229, 0.9215, 0.9229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:10,587 [Process: 0] Synchronize training processes
2024-08-16 16:32:10,588 [Process: 0] Evaluating...
2024-08-16 16:32:10,590 [Process: 0] EPOCH 153:
2024-08-16 16:32:10,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.3712e-02, 2.4143e-02, 2.3614e-02,  ..., 2.3399e-02,
          9.7321e-01, 2.4017e-02],
         [2.3712e-02, 2.4143e-02, 2.3614e-02,  ..., 2.3399e-02,
          8.9305e-03, 2.4017e-02],
         [2.3712e-02, 2.4143e-02, 2.3614e-02,  ..., 2.3399e-02,
          8.9305e-03, 2.4017e-02],
         [9.2886e-01, 9.2757e-01, 9.2916e-01,  ..., 9.2980e-01,
          8.9305e-03, 9.2795e-01]],
        [[2.2660e-02, 2.3793e-02, 2.3472e-02,  ..., 3.3975e-05,
          2.3243e-02, 2.3465e-02],
         [2.2660e-02, 2.3793e-02, 2.3472e-02,  ..., 3.3975e-05,
          2.3243e-02, 2.3465e-02],
         [2.2660e-02, 2.3793e-02, 2.3472e-02,  ..., 9.9990e-01,
          2.3243e-02, 2.3465e-02],
         [9.3202e-01, 9.2862e-01, 9.2958e-01,  ..., 3.3975e-05,
          9.3027e-01, 9.2960e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:32:12,666 [Process: 0] Synchronize training processes
2024-08-16 16:32:12,667 [Process: 0] Evaluating...
2024-08-16 16:32:12,669 [Process: 0] EPOCH 154:
2024-08-16 16:32:12,670 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0253, 0.0250, 0.0249,  ..., 0.0255, 0.0249, 0.0253],
         [0.0253, 0.0250, 0.0249,  ..., 0.0255, 0.0249, 0.0253],
         [0.0253, 0.0250, 0.0249,  ..., 0.0255, 0.0249, 0.0253],
         [0.9241, 0.9249, 0.9252,  ..., 0.9234, 0.9254, 0.9242]],
        [[0.0255, 0.0251, 0.0255,  ..., 0.0260, 0.0251, 0.0250],
         [0.0255, 0.0251, 0.0255,  ..., 0.0260, 0.0251, 0.0250],
         [0.0255, 0.0251, 0.0255,  ..., 0.0260, 0.0251, 0.0250],
         [0.9235, 0.9246, 0.9235,  ..., 0.9220, 0.9248, 0.9250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.2707e-02, 2.2613e-02, 2.3591e-02,  ..., 2.2611e-02,
          9.9465e-01, 2.3068e-02],
         [2.2707e-02, 2.2613e-02, 2.3591e-02,  ..., 2.2611e-02,
          1.7849e-03, 2.3068e-02],
         [2.2707e-02, 2.2613e-02, 2.3591e-02,  ..., 2.2611e-02,
          1.7849e-03, 2.3068e-02],
         [9.3188e-01, 9.3216e-01, 9.2923e-01,  ..., 9.3217e-01,
          1.7849e-03, 9.3080e-01]],
        [[2.1737e-02, 2.2736e-02, 2.2774e-02,  ..., 1.4795e-04,
          2.2104e-02, 2.2534e-02],
         [2.1737e-02, 2.2736e-02, 2.2774e-02,  ..., 1.4795e-04,
          2.2104e-02, 2.2534e-02],
         [2.1737e-02, 2.2736e-02, 2.2774e-02,  ..., 9.9956e-01,
          2.2104e-02, 2.2534e-02],
         [9.3479e-01, 9.3179e-01, 9.3168e-01,  ..., 1.4795e-04,
          9.3369e-01, 9.3240e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0248, 0.0243, 0.0246,  ..., 0.0244, 0.0234, 0.0242],
         [0.0248, 0.0243, 0.0246,  ..., 0.0244, 0.0234, 0.0242],
         [0.0248, 0.0243, 0.0246,  ..., 0.0244, 0.0234, 0.0242],
         [0.9255, 0.9272, 0.9261,  ..., 0.9269, 0.9299, 0.9274]],
        [[0.0246, 0.0250, 0.0236,  ..., 0.0243, 0.0245, 0.0245],
         [0.0246, 0.0250, 0.0236,  ..., 0.0243, 0.0245, 0.0245],
         [0.0246, 0.0250, 0.0236,  ..., 0.0243, 0.0245, 0.0245],
         [0.9262, 0.9251, 0.9292,  ..., 0.9271, 0.9265, 0.9265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.2096e-02, 2.2673e-02, 2.2407e-02,  ..., 2.2724e-02,
          9.8281e-01, 2.2602e-02],
         [2.2096e-02, 2.2673e-02, 2.2407e-02,  ..., 2.2724e-02,
          5.7302e-03, 2.2602e-02],
         [2.2096e-02, 2.2673e-02, 2.2407e-02,  ..., 2.2724e-02,
          5.7302e-03, 2.2602e-02],
         [9.3371e-01, 9.3198e-01, 9.3278e-01,  ..., 9.3183e-01,
          5.7302e-03, 9.3220e-01]],
        [[2.1452e-02, 2.2554e-02, 2.2366e-02,  ..., 9.3721e-04,
          2.2976e-02, 2.1899e-02],
         [2.1452e-02, 2.2554e-02, 2.2366e-02,  ..., 9.3721e-04,
          2.2976e-02, 2.1899e-02],
         [2.1452e-02, 2.2554e-02, 2.2366e-02,  ..., 9.9719e-01,
          2.2976e-02, 2.1899e-02],
         [9.3564e-01, 9.3234e-01, 9.3290e-01,  ..., 9.3721e-04,
          9.3107e-01, 9.3430e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:14,808 [Process: 0] Synchronize training processes
2024-08-16 16:32:14,808 [Process: 0] Evaluating...
2024-08-16 16:32:14,810 [Process: 0] EPOCH 155:
2024-08-16 16:32:14,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0242, 0.0248, 0.0245,  ..., 0.0247, 0.0250, 0.0255],
         [0.0242, 0.0248, 0.0245,  ..., 0.0247, 0.0250, 0.0255],
         [0.0242, 0.0248, 0.0245,  ..., 0.0247, 0.0250, 0.0255],
         [0.9274, 0.9256, 0.9266,  ..., 0.9259, 0.9249, 0.9234]],
        [[0.0249, 0.0244, 0.0246,  ..., 0.0243, 0.0249, 0.0250],
         [0.0249, 0.0244, 0.0246,  ..., 0.0243, 0.0249, 0.0250],
         [0.0249, 0.0244, 0.0246,  ..., 0.0243, 0.0249, 0.0250],
         [0.9254, 0.9269, 0.9262,  ..., 0.9272, 0.9254, 0.9250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0226, 0.0228, 0.0227,  ..., 0.0227, 0.9928, 0.0235],
         [0.0226, 0.0228, 0.0227,  ..., 0.0227, 0.0024, 0.0235],
         [0.0226, 0.0228, 0.0227,  ..., 0.0227, 0.0024, 0.0235],
         [0.9323, 0.9315, 0.9319,  ..., 0.9318, 0.0024, 0.9296]],
        [[0.0226, 0.0224, 0.0227,  ..., 0.0057, 0.0235, 0.0232],
         [0.0226, 0.0224, 0.0227,  ..., 0.0057, 0.0235, 0.0232],
         [0.0226, 0.0224, 0.0227,  ..., 0.9828, 0.0235, 0.0232],
         [0.9323, 0.9328, 0.9320,  ..., 0.0057, 0.9295, 0.9304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:16,893 [Process: 0] Synchronize training processes
2024-08-16 16:32:16,893 [Process: 0] Evaluating...
2024-08-16 16:32:16,895 [Process: 0] EPOCH 156:
2024-08-16 16:32:16,897 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0246, 0.0243, 0.0242,  ..., 0.0247, 0.0252, 0.0247],
         [0.0246, 0.0243, 0.0242,  ..., 0.0247, 0.0252, 0.0247],
         [0.0246, 0.0243, 0.0242,  ..., 0.0247, 0.0252, 0.0247],
         [0.9263, 0.9272, 0.9273,  ..., 0.9260, 0.9243, 0.9258]],
        [[0.0241, 0.0244, 0.0244,  ..., 0.0248, 0.0244, 0.0249],
         [0.0241, 0.0244, 0.0244,  ..., 0.0248, 0.0244, 0.0249],
         [0.0241, 0.0244, 0.0244,  ..., 0.0248, 0.0244, 0.0249],
         [0.9276, 0.9269, 0.9268,  ..., 0.9257, 0.9267, 0.9252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.2332e-02, 2.2899e-02, 2.2885e-02,  ..., 2.2474e-02,
          2.3255e-02, 2.2208e-02],
         [2.2332e-02, 2.2899e-02, 2.2885e-02,  ..., 2.2474e-02,
          2.3255e-02, 2.2208e-02],
         [2.2332e-02, 2.2899e-02, 2.2885e-02,  ..., 2.2474e-02,
          2.3255e-02, 2.2208e-02],
         [9.3300e-01, 9.3130e-01, 9.3134e-01,  ..., 9.3258e-01,
          9.3023e-01, 9.3338e-01]],
        [[2.3109e-02, 2.1760e-02, 2.2604e-02,  ..., 9.6047e-05,
          2.2021e-02, 2.2840e-02],
         [2.3109e-02, 2.1760e-02, 2.2604e-02,  ..., 9.6047e-05,
          2.2021e-02, 2.2840e-02],
         [2.3109e-02, 2.1760e-02, 2.2604e-02,  ..., 9.9971e-01,
          2.2021e-02, 2.2840e-02],
         [9.3067e-01, 9.3472e-01, 9.3219e-01,  ..., 9.6047e-05,
          9.3394e-01, 9.3148e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:18,982 [Process: 0] Synchronize training processes
2024-08-16 16:32:18,982 [Process: 0] Evaluating...
2024-08-16 16:32:18,984 [Process: 0] EPOCH 157:
2024-08-16 16:32:18,986 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0239, 0.0241, 0.0241,  ..., 0.0230, 0.0234, 0.0239],
         [0.0239, 0.0241, 0.0241,  ..., 0.0230, 0.0234, 0.0239],
         [0.0239, 0.0241, 0.0241,  ..., 0.0230, 0.0234, 0.0239],
         [0.9284, 0.9276, 0.9276,  ..., 0.9311, 0.9298, 0.9282]],
        [[0.0243, 0.0233, 0.0236,  ..., 0.0240, 0.0239, 0.0237],
         [0.0243, 0.0233, 0.0236,  ..., 0.0240, 0.0239, 0.0237],
         [0.0243, 0.0233, 0.0236,  ..., 0.0240, 0.0239, 0.0237],
         [0.9272, 0.9302, 0.9291,  ..., 0.9281, 0.9284, 0.9288]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0229, 0.0223, 0.0221,  ..., 0.0216, 0.0218, 0.0218],
         [0.0229, 0.0223, 0.0221,  ..., 0.0216, 0.0218, 0.0218],
         [0.0229, 0.0223, 0.0221,  ..., 0.0216, 0.0218, 0.0218],
         [0.9313, 0.9331, 0.9337,  ..., 0.9352, 0.9347, 0.9347]],
        [[0.0219, 0.0215, 0.0225,  ..., 0.0042, 0.0218, 0.0227],
         [0.0219, 0.0215, 0.0225,  ..., 0.0042, 0.0218, 0.0227],
         [0.0219, 0.0215, 0.0225,  ..., 0.9875, 0.0218, 0.0227],
         [0.9343, 0.9356, 0.9325,  ..., 0.0042, 0.9347, 0.9318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:21,057 [Process: 0] Synchronize training processes
2024-08-16 16:32:21,058 [Process: 0] Evaluating...
2024-08-16 16:32:21,060 [Process: 0] EPOCH 158:
2024-08-16 16:32:21,062 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0234, 0.0238, 0.0236,  ..., 0.0231, 0.0240, 0.0250],
         [0.0234, 0.0238, 0.0236,  ..., 0.0231, 0.0240, 0.0250],
         [0.0234, 0.0238, 0.0236,  ..., 0.0231, 0.0240, 0.0250],
         [0.9298, 0.9286, 0.9292,  ..., 0.9307, 0.9280, 0.9249]],
        [[0.0239, 0.0240, 0.0240,  ..., 0.0232, 0.0244, 0.0234],
         [0.0239, 0.0240, 0.0240,  ..., 0.0232, 0.0244, 0.0234],
         [0.0239, 0.0240, 0.0240,  ..., 0.0232, 0.0244, 0.0234],
         [0.9283, 0.9280, 0.9280,  ..., 0.9303, 0.9268, 0.9298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0215, 0.0223, 0.0221,  ..., 0.0222, 0.0218, 0.0225],
         [0.0215, 0.0223, 0.0221,  ..., 0.0222, 0.0218, 0.0225],
         [0.0215, 0.0223, 0.0221,  ..., 0.0222, 0.0218, 0.0225],
         [0.9355, 0.9331, 0.9336,  ..., 0.9334, 0.9345, 0.9324]],
        [[0.0217, 0.0213, 0.0226,  ..., 0.0026, 0.0224, 0.0219],
         [0.0217, 0.0213, 0.0226,  ..., 0.0026, 0.0224, 0.0219],
         [0.0217, 0.0213, 0.0226,  ..., 0.9921, 0.0224, 0.0219],
         [0.9350, 0.9362, 0.9321,  ..., 0.0026, 0.9327, 0.9342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:23,137 [Process: 0] Synchronize training processes
2024-08-16 16:32:23,137 [Process: 0] Evaluating...
2024-08-16 16:32:23,139 [Process: 0] EPOCH 159:
2024-08-16 16:32:23,141 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0237, 0.0244, 0.0246,  ..., 0.0252, 0.0248, 0.0248],
         [0.0237, 0.0244, 0.0246,  ..., 0.0252, 0.0248, 0.0248],
         [0.0237, 0.0244, 0.0246,  ..., 0.0252, 0.0248, 0.0248],
         [0.9288, 0.9269, 0.9261,  ..., 0.9244, 0.9256, 0.9256]],
        [[0.0241, 0.0239, 0.0239,  ..., 0.0235, 0.0238, 0.0242],
         [0.0241, 0.0239, 0.0239,  ..., 0.0235, 0.0238, 0.0242],
         [0.0241, 0.0239, 0.0239,  ..., 0.0235, 0.0238, 0.0242],
         [0.9278, 0.9282, 0.9284,  ..., 0.9294, 0.9286, 0.9273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0221, 0.0219, 0.0214,  ..., 0.0224, 0.0223, 0.0222],
         [0.0221, 0.0219, 0.0214,  ..., 0.0224, 0.0223, 0.0222],
         [0.0221, 0.0219, 0.0214,  ..., 0.0224, 0.0223, 0.0222],
         [0.9338, 0.9342, 0.9358,  ..., 0.9329, 0.9332, 0.9335]],
        [[0.0221, 0.0212, 0.0213,  ..., 0.0028, 0.0219, 0.0217],
         [0.0221, 0.0212, 0.0213,  ..., 0.0028, 0.0219, 0.0217],
         [0.0221, 0.0212, 0.0213,  ..., 0.9916, 0.0219, 0.0217],
         [0.9338, 0.9364, 0.9362,  ..., 0.0028, 0.9344, 0.9350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:25,216 [Process: 0] Synchronize training processes
2024-08-16 16:32:25,216 [Process: 0] Evaluating...
2024-08-16 16:32:25,218 [Process: 0] EPOCH 160:
2024-08-16 16:32:25,220 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0240, 0.0233, 0.0239,  ..., 0.0234, 0.0236, 0.0232],
         [0.0240, 0.0233, 0.0239,  ..., 0.0234, 0.0236, 0.0232],
         [0.0240, 0.0233, 0.0239,  ..., 0.0234, 0.0236, 0.0232],
         [0.9280, 0.9300, 0.9282,  ..., 0.9298, 0.9292, 0.9305]],
        [[0.0234, 0.0240, 0.0234,  ..., 0.0228, 0.0227, 0.0232],
         [0.0234, 0.0240, 0.0234,  ..., 0.0228, 0.0227, 0.0232],
         [0.0234, 0.0240, 0.0234,  ..., 0.0228, 0.0227, 0.0232],
         [0.9299, 0.9281, 0.9299,  ..., 0.9316, 0.9319, 0.9303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1602e-02, 2.1757e-02, 2.1464e-02,  ..., 2.1597e-02,
          2.1415e-02, 2.2676e-02],
         [2.1602e-02, 2.1757e-02, 2.1464e-02,  ..., 2.1597e-02,
          2.1415e-02, 2.2676e-02],
         [2.1602e-02, 2.1757e-02, 2.1464e-02,  ..., 2.1597e-02,
          2.1415e-02, 2.2676e-02],
         [9.3519e-01, 9.3473e-01, 9.3561e-01,  ..., 9.3521e-01,
          9.3576e-01, 9.3197e-01]],
        [[2.1359e-02, 2.1768e-02, 2.1734e-02,  ..., 4.8299e-04,
          2.1809e-02, 2.2322e-02],
         [2.1359e-02, 2.1768e-02, 2.1734e-02,  ..., 4.8299e-04,
          2.1809e-02, 2.2322e-02],
         [2.1359e-02, 2.1768e-02, 2.1734e-02,  ..., 9.9855e-01,
          2.1809e-02, 2.2322e-02],
         [9.3592e-01, 9.3470e-01, 9.3480e-01,  ..., 4.8299e-04,
          9.3457e-01, 9.3303e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:27,335 [Process: 0] Synchronize training processes
2024-08-16 16:32:27,335 [Process: 0] Evaluating...
2024-08-16 16:32:27,337 [Process: 0] EPOCH 161:
2024-08-16 16:32:27,339 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0228, 0.0235, 0.0233,  ..., 0.0227, 0.0239, 0.0235],
         [0.0228, 0.0235, 0.0233,  ..., 0.0227, 0.0239, 0.0235],
         [0.0228, 0.0235, 0.0233,  ..., 0.0227, 0.0239, 0.0235],
         [0.9315, 0.9296, 0.9300,  ..., 0.9318, 0.9282, 0.9296]],
        [[0.0231, 0.0238, 0.0231,  ..., 0.0227, 0.0228, 0.0229],
         [0.0231, 0.0238, 0.0231,  ..., 0.0227, 0.0228, 0.0229],
         [0.0231, 0.0238, 0.0231,  ..., 0.0227, 0.0228, 0.0229],
         [0.9307, 0.9287, 0.9306,  ..., 0.9318, 0.9317, 0.9312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1456e-02, 2.1443e-02, 2.1889e-02,  ..., 2.0951e-02,
          2.1292e-02, 2.1354e-02],
         [2.1456e-02, 2.1443e-02, 2.1889e-02,  ..., 2.0951e-02,
          2.1292e-02, 2.1354e-02],
         [2.1456e-02, 2.1443e-02, 2.1889e-02,  ..., 2.0951e-02,
          2.1292e-02, 2.1354e-02],
         [9.3563e-01, 9.3567e-01, 9.3433e-01,  ..., 9.3715e-01,
          9.3613e-01, 9.3594e-01]],
        [[2.1009e-02, 2.1291e-02, 2.1137e-02,  ..., 7.0126e-04,
          2.1957e-02, 2.1449e-02],
         [2.1009e-02, 2.1291e-02, 2.1137e-02,  ..., 7.0126e-04,
          2.1957e-02, 2.1449e-02],
         [2.1009e-02, 2.1291e-02, 2.1137e-02,  ..., 9.9790e-01,
          2.1957e-02, 2.1449e-02],
         [9.3697e-01, 9.3613e-01, 9.3659e-01,  ..., 7.0126e-04,
          9.3413e-01, 9.3565e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:29,443 [Process: 0] Synchronize training processes
2024-08-16 16:32:29,443 [Process: 0] Evaluating...
2024-08-16 16:32:29,451 [Process: 0] EPOCH 162:
2024-08-16 16:32:29,453 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0230, 0.0237, 0.0227,  ..., 0.0236, 0.0237, 0.0227],
         [0.0230, 0.0237, 0.0227,  ..., 0.0236, 0.0237, 0.0227],
         [0.0230, 0.0237, 0.0227,  ..., 0.0236, 0.0237, 0.0227],
         [0.9311, 0.9289, 0.9318,  ..., 0.9291, 0.9290, 0.9320]],
        [[0.0224, 0.0230, 0.0230,  ..., 0.0235, 0.0229, 0.0233],
         [0.0224, 0.0230, 0.0230,  ..., 0.0235, 0.0229, 0.0233],
         [0.0224, 0.0230, 0.0230,  ..., 0.0235, 0.0229, 0.0233],
         [0.9328, 0.9309, 0.9311,  ..., 0.9294, 0.9314, 0.9301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1110e-02, 2.1529e-02, 2.1257e-02,  ..., 2.2195e-02,
          2.1293e-02, 2.1341e-02],
         [2.1110e-02, 2.1529e-02, 2.1257e-02,  ..., 2.2195e-02,
          2.1293e-02, 2.1341e-02],
         [2.1110e-02, 2.1529e-02, 2.1257e-02,  ..., 2.2195e-02,
          2.1293e-02, 2.1341e-02],
         [9.3667e-01, 9.3541e-01, 9.3623e-01,  ..., 9.3342e-01,
          9.3612e-01, 9.3598e-01]],
        [[2.1679e-02, 2.1572e-02, 2.1073e-02,  ..., 1.3639e-04,
          2.1148e-02, 2.1258e-02],
         [2.1679e-02, 2.1572e-02, 2.1073e-02,  ..., 1.3639e-04,
          2.1148e-02, 2.1258e-02],
         [2.1679e-02, 2.1572e-02, 2.1073e-02,  ..., 9.9959e-01,
          2.1148e-02, 2.1258e-02],
         [9.3496e-01, 9.3529e-01, 9.3678e-01,  ..., 1.3639e-04,
          9.3656e-01, 9.3623e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:31,531 [Process: 0] Synchronize training processes
2024-08-16 16:32:31,531 [Process: 0] Evaluating...
2024-08-16 16:32:31,533 [Process: 0] EPOCH 163:
2024-08-16 16:32:31,535 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0235, 0.0233, 0.0232,  ..., 0.0224, 0.0237, 0.0231],
         [0.0235, 0.0233, 0.0232,  ..., 0.0224, 0.0237, 0.0231],
         [0.0235, 0.0233, 0.0232,  ..., 0.0224, 0.0237, 0.0231],
         [0.9295, 0.9302, 0.9303,  ..., 0.9327, 0.9288, 0.9306]],
        [[0.0229, 0.0235, 0.0226,  ..., 0.0223, 0.0224, 0.0227],
         [0.0229, 0.0235, 0.0226,  ..., 0.0223, 0.0224, 0.0227],
         [0.0229, 0.0235, 0.0226,  ..., 0.0223, 0.0224, 0.0227],
         [0.9314, 0.9296, 0.9321,  ..., 0.9331, 0.9327, 0.9319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0704e-02, 2.1577e-02, 2.0809e-02,  ..., 2.1258e-02,
          2.0654e-02, 2.1431e-02],
         [2.0704e-02, 2.1577e-02, 2.0809e-02,  ..., 2.1258e-02,
          2.0654e-02, 2.1431e-02],
         [2.0704e-02, 2.1577e-02, 2.0809e-02,  ..., 2.1258e-02,
          2.0654e-02, 2.1431e-02],
         [9.3789e-01, 9.3527e-01, 9.3757e-01,  ..., 9.3623e-01,
          9.3804e-01, 9.3571e-01]],
        [[2.1379e-02, 2.1166e-02, 2.0417e-02,  ..., 8.9023e-05,
          2.1962e-02, 2.0901e-02],
         [2.1379e-02, 2.1166e-02, 2.0417e-02,  ..., 8.9023e-05,
          2.1962e-02, 2.0901e-02],
         [2.1379e-02, 2.1166e-02, 2.0417e-02,  ..., 9.9973e-01,
          2.1962e-02, 2.0901e-02],
         [9.3586e-01, 9.3650e-01, 9.3875e-01,  ..., 8.9023e-05,
          9.3412e-01, 9.3730e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:33,619 [Process: 0] Synchronize training processes
2024-08-16 16:32:33,619 [Process: 0] Evaluating...
2024-08-16 16:32:33,621 [Process: 0] EPOCH 164:
2024-08-16 16:32:33,623 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0228, 0.0229, 0.0227,  ..., 0.0229, 0.0235, 0.0237],
         [0.0228, 0.0229, 0.0227,  ..., 0.0229, 0.0235, 0.0237],
         [0.0228, 0.0229, 0.0227,  ..., 0.0229, 0.0235, 0.0237],
         [0.9317, 0.9312, 0.9318,  ..., 0.9314, 0.9294, 0.9290]],
        [[0.0231, 0.0222, 0.0224,  ..., 0.0225, 0.0229, 0.0223],
         [0.0231, 0.0222, 0.0224,  ..., 0.0225, 0.0229, 0.0223],
         [0.0231, 0.0222, 0.0224,  ..., 0.0225, 0.0229, 0.0223],
         [0.9308, 0.9335, 0.9328,  ..., 0.9324, 0.9314, 0.9330]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:35,693 [Process: 0] Synchronize training processes
2024-08-16 16:32:35,693 [Process: 0] Evaluating...
2024-08-16 16:32:35,695 [Process: 0] EPOCH 165:
2024-08-16 16:32:35,697 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1331e-02, 2.0854e-02, 2.1369e-02,  ..., 2.1143e-02,
          2.0939e-02, 2.0978e-02],
         [2.1331e-02, 2.0854e-02, 2.1369e-02,  ..., 2.1143e-02,
          2.0939e-02, 2.0978e-02],
         [2.1331e-02, 2.0854e-02, 2.1369e-02,  ..., 2.1143e-02,
          2.0939e-02, 2.0978e-02],
         [9.3601e-01, 9.3744e-01, 9.3589e-01,  ..., 9.3657e-01,
          9.3718e-01, 9.3706e-01]],
        [[2.0302e-02, 2.1928e-02, 2.1151e-02,  ..., 7.0405e-05,
          2.1271e-02, 2.1410e-02],
         [2.0302e-02, 2.1928e-02, 2.1151e-02,  ..., 7.0405e-05,
          2.1271e-02, 2.1410e-02],
         [2.0302e-02, 2.1928e-02, 2.1151e-02,  ..., 9.9979e-01,
          2.1271e-02, 2.1410e-02],
         [9.3909e-01, 9.3422e-01, 9.3655e-01,  ..., 7.0405e-05,
          9.3619e-01, 9.3577e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0219, 0.0226, 0.0223,  ..., 0.0230, 0.0232, 0.0224],
         [0.0219, 0.0226, 0.0223,  ..., 0.0230, 0.0232, 0.0224],
         [0.0219, 0.0226, 0.0223,  ..., 0.0230, 0.0232, 0.0224],
         [0.9344, 0.9321, 0.9330,  ..., 0.9311, 0.9305, 0.9327]],
        [[0.0225, 0.0226, 0.0220,  ..., 0.0227, 0.0229, 0.0230],
         [0.0225, 0.0226, 0.0220,  ..., 0.0227, 0.0229, 0.0230],
         [0.0225, 0.0226, 0.0220,  ..., 0.0227, 0.0229, 0.0230],
         [0.9325, 0.9323, 0.9339,  ..., 0.9320, 0.9313, 0.9309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:37,783 [Process: 0] Synchronize training processes
2024-08-16 16:32:37,783 [Process: 0] Evaluating...
2024-08-16 16:32:37,785 [Process: 0] EPOCH 166:
2024-08-16 16:32:37,787 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0211, 0.0213, 0.0209,  ..., 0.0213, 0.0209, 0.0205],
         [0.0211, 0.0213, 0.0209,  ..., 0.0213, 0.0209, 0.0205],
         [0.0211, 0.0213, 0.0209,  ..., 0.0213, 0.0209, 0.0205],
         [0.9367, 0.9361, 0.9372,  ..., 0.9361, 0.9372, 0.9385]],
        [[0.0205, 0.0205, 0.0202,  ..., 0.0013, 0.0208, 0.0216],
         [0.0205, 0.0205, 0.0202,  ..., 0.0013, 0.0208, 0.0216],
         [0.0205, 0.0205, 0.0202,  ..., 0.9962, 0.0208, 0.0216],
         [0.9386, 0.9385, 0.9393,  ..., 0.0013, 0.9377, 0.9351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0219, 0.0216, 0.0228,  ..., 0.0221, 0.0234, 0.0223],
         [0.0219, 0.0216, 0.0228,  ..., 0.0221, 0.0234, 0.0223],
         [0.0219, 0.0216, 0.0228,  ..., 0.0221, 0.0234, 0.0223],
         [0.9342, 0.9352, 0.9315,  ..., 0.9337, 0.9297, 0.9332]],
        [[0.0223, 0.0221, 0.0224,  ..., 0.0221, 0.0222, 0.0224],
         [0.0223, 0.0221, 0.0224,  ..., 0.0221, 0.0222, 0.0224],
         [0.0223, 0.0221, 0.0224,  ..., 0.0221, 0.0222, 0.0224],
         [0.9332, 0.9337, 0.9329,  ..., 0.9338, 0.9334, 0.9328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:39,883 [Process: 0] Synchronize training processes
2024-08-16 16:32:39,883 [Process: 0] Evaluating...
2024-08-16 16:32:39,885 [Process: 0] EPOCH 167:
2024-08-16 16:32:39,887 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0995e-02, 2.0551e-02, 2.0968e-02,  ..., 2.1144e-02,
          2.0928e-02, 2.0089e-02],
         [2.0995e-02, 2.0551e-02, 2.0968e-02,  ..., 2.1144e-02,
          2.0928e-02, 2.0089e-02],
         [2.0995e-02, 2.0551e-02, 2.0968e-02,  ..., 2.1144e-02,
          2.0928e-02, 2.0089e-02],
         [9.3702e-01, 9.3835e-01, 9.3709e-01,  ..., 9.3657e-01,
          9.3721e-01, 9.3973e-01]],
        [[2.0035e-02, 1.9899e-02, 1.9709e-02,  ..., 2.6981e-04,
          2.0235e-02, 2.0327e-02],
         [2.0035e-02, 1.9899e-02, 1.9709e-02,  ..., 2.6981e-04,
          2.0235e-02, 2.0327e-02],
         [2.0035e-02, 1.9899e-02, 1.9709e-02,  ..., 9.9919e-01,
          2.0235e-02, 2.0327e-02],
         [9.3990e-01, 9.4030e-01, 9.4087e-01,  ..., 2.6981e-04,
          9.3930e-01, 9.3902e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0224, 0.0226, 0.0223,  ..., 0.0221, 0.0231, 0.0224],
         [0.0224, 0.0226, 0.0223,  ..., 0.0221, 0.0231, 0.0224],
         [0.0224, 0.0226, 0.0223,  ..., 0.0221, 0.0231, 0.0224],
         [0.9328, 0.9321, 0.9332,  ..., 0.9337, 0.9306, 0.9329]],
        [[0.0224, 0.0224, 0.0224,  ..., 0.0227, 0.0227, 0.0230],
         [0.0224, 0.0224, 0.0224,  ..., 0.0227, 0.0227, 0.0230],
         [0.0224, 0.0224, 0.0224,  ..., 0.0227, 0.0227, 0.0230],
         [0.9328, 0.9328, 0.9327,  ..., 0.9320, 0.9318, 0.9310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:41,976 [Process: 0] Synchronize training processes
2024-08-16 16:32:41,976 [Process: 0] Evaluating...
2024-08-16 16:32:41,978 [Process: 0] EPOCH 168:
2024-08-16 16:32:41,980 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0637e-02, 2.0854e-02, 2.0128e-02,  ..., 2.1267e-02,
          2.0420e-02, 2.0529e-02],
         [2.0637e-02, 2.0854e-02, 2.0128e-02,  ..., 2.1267e-02,
          2.0420e-02, 2.0529e-02],
         [2.0637e-02, 2.0854e-02, 2.0128e-02,  ..., 2.1267e-02,
          2.0420e-02, 2.0529e-02],
         [9.3809e-01, 9.3744e-01, 9.3962e-01,  ..., 9.3620e-01,
          9.3874e-01, 9.3841e-01]],
        [[2.0225e-02, 1.9732e-02, 2.0436e-02,  ..., 2.4169e-04,
          2.0012e-02, 2.0048e-02],
         [2.0225e-02, 1.9732e-02, 2.0436e-02,  ..., 2.4169e-04,
          2.0012e-02, 2.0048e-02],
         [2.0225e-02, 1.9732e-02, 2.0436e-02,  ..., 9.9927e-01,
          2.0012e-02, 2.0048e-02],
         [9.3932e-01, 9.4080e-01, 9.3869e-01,  ..., 2.4169e-04,
          9.3996e-01, 9.3986e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0220, 0.0216, 0.0217,  ..., 0.0219, 0.0224, 0.0219],
         [0.0220, 0.0216, 0.0217,  ..., 0.0219, 0.0224, 0.0219],
         [0.0220, 0.0216, 0.0217,  ..., 0.0219, 0.0224, 0.0219],
         [0.9340, 0.9352, 0.9348,  ..., 0.9344, 0.9327, 0.9343]],
        [[0.0218, 0.0227, 0.0222,  ..., 0.0221, 0.0215, 0.0218],
         [0.0218, 0.0227, 0.0222,  ..., 0.0221, 0.0215, 0.0218],
         [0.0218, 0.0227, 0.0222,  ..., 0.0221, 0.0215, 0.0218],
         [0.9346, 0.9320, 0.9335,  ..., 0.9337, 0.9355, 0.9345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:44,065 [Process: 0] Synchronize training processes
2024-08-16 16:32:44,065 [Process: 0] Evaluating...
2024-08-16 16:32:44,067 [Process: 0] EPOCH 169:
2024-08-16 16:32:44,069 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0379e-02, 1.9051e-02, 2.0370e-02,  ..., 2.1014e-02,
          2.0306e-02, 2.0554e-02],
         [2.0379e-02, 1.9051e-02, 2.0370e-02,  ..., 2.1014e-02,
          2.0306e-02, 2.0554e-02],
         [2.0379e-02, 1.9051e-02, 2.0370e-02,  ..., 2.1014e-02,
          2.0306e-02, 2.0554e-02],
         [9.3886e-01, 9.4285e-01, 9.3889e-01,  ..., 9.3696e-01,
          9.3908e-01, 9.3834e-01]],
        [[2.0139e-02, 2.0404e-02, 1.9637e-02,  ..., 8.8911e-05,
          2.0067e-02, 2.0323e-02],
         [2.0139e-02, 2.0404e-02, 1.9637e-02,  ..., 8.8911e-05,
          2.0067e-02, 2.0323e-02],
         [2.0139e-02, 2.0404e-02, 1.9637e-02,  ..., 9.9973e-01,
          2.0067e-02, 2.0323e-02],
         [9.3958e-01, 9.3879e-01, 9.4109e-01,  ..., 8.8911e-05,
          9.3980e-01, 9.3903e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0215, 0.0218, 0.0217,  ..., 0.0211, 0.0226, 0.0223],
         [0.0215, 0.0218, 0.0217,  ..., 0.0211, 0.0226, 0.0223],
         [0.0215, 0.0218, 0.0217,  ..., 0.0211, 0.0226, 0.0223],
         [0.9355, 0.9347, 0.9349,  ..., 0.9367, 0.9321, 0.9332]],
        [[0.0222, 0.0220, 0.0217,  ..., 0.0214, 0.0221, 0.0222],
         [0.0222, 0.0220, 0.0217,  ..., 0.0214, 0.0221, 0.0222],
         [0.0222, 0.0220, 0.0217,  ..., 0.0214, 0.0221, 0.0222],
         [0.9333, 0.9341, 0.9350,  ..., 0.9357, 0.9336, 0.9335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:46,154 [Process: 0] Synchronize training processes
2024-08-16 16:32:46,154 [Process: 0] Evaluating...
2024-08-16 16:32:46,156 [Process: 0] EPOCH 170:
2024-08-16 16:32:46,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0201, 0.0205, 0.0201,  ..., 0.0210, 0.0204, 0.0197],
         [0.0201, 0.0205, 0.0201,  ..., 0.0210, 0.0204, 0.0197],
         [0.0201, 0.0205, 0.0201,  ..., 0.0210, 0.0204, 0.0197],
         [0.9396, 0.9384, 0.9397,  ..., 0.9369, 0.9387, 0.9409]],
        [[0.0196, 0.0195, 0.0196,  ..., 0.0019, 0.0197, 0.0200],
         [0.0196, 0.0195, 0.0196,  ..., 0.0019, 0.0197, 0.0200],
         [0.0196, 0.0195, 0.0196,  ..., 0.9942, 0.0197, 0.0200],
         [0.9413, 0.9414, 0.9413,  ..., 0.0019, 0.9409, 0.9400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0212, 0.0214, 0.0216,  ..., 0.0212, 0.0221, 0.0219],
         [0.0212, 0.0214, 0.0216,  ..., 0.0212, 0.0221, 0.0219],
         [0.0212, 0.0214, 0.0216,  ..., 0.0212, 0.0221, 0.0219],
         [0.9364, 0.9357, 0.9352,  ..., 0.9365, 0.9338, 0.9342]],
        [[0.0212, 0.0211, 0.0213,  ..., 0.0218, 0.0217, 0.0217],
         [0.0212, 0.0211, 0.0213,  ..., 0.0218, 0.0217, 0.0217],
         [0.0212, 0.0211, 0.0213,  ..., 0.0218, 0.0217, 0.0217],
         [0.9363, 0.9366, 0.9360,  ..., 0.9346, 0.9349, 0.9350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:32:48,236 [Process: 0] Synchronize training processes
2024-08-16 16:32:48,237 [Process: 0] Evaluating...
2024-08-16 16:32:48,239 [Process: 0] EPOCH 171:
2024-08-16 16:32:48,241 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0201, 0.0198, 0.0195,  ..., 0.0200, 0.8913, 0.0192],
         [0.0201, 0.0198, 0.0195,  ..., 0.0200, 0.0362, 0.0192],
         [0.0201, 0.0198, 0.0195,  ..., 0.0200, 0.0362, 0.0192],
         [0.9396, 0.9406, 0.9415,  ..., 0.9401, 0.0362, 0.9425]],
        [[0.0203, 0.0195, 0.0201,  ..., 0.0021, 0.0195, 0.0200],
         [0.0203, 0.0195, 0.0201,  ..., 0.0021, 0.0195, 0.0200],
         [0.0203, 0.0195, 0.0201,  ..., 0.9938, 0.0195, 0.0200],
         [0.9392, 0.9415, 0.9398,  ..., 0.0021, 0.9415, 0.9401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:32:50,304 [Process: 0] Synchronize training processes
2024-08-16 16:32:50,305 [Process: 0] Evaluating...
2024-08-16 16:32:50,313 [Process: 0] EPOCH 172:
2024-08-16 16:32:50,315 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0218, 0.0209, 0.0207,  ..., 0.0215, 0.0223, 0.0220],
         [0.0218, 0.0209, 0.0207,  ..., 0.0215, 0.0223, 0.0220],
         [0.0218, 0.0209, 0.0207,  ..., 0.0215, 0.0223, 0.0220],
         [0.9347, 0.9374, 0.9378,  ..., 0.9355, 0.9332, 0.9341]],
        [[0.0217, 0.0214, 0.0216,  ..., 0.0214, 0.0218, 0.0214],
         [0.0217, 0.0214, 0.0216,  ..., 0.0214, 0.0218, 0.0214],
         [0.0217, 0.0214, 0.0216,  ..., 0.0214, 0.0218, 0.0214],
         [0.9349, 0.9357, 0.9352,  ..., 0.9357, 0.9346, 0.9357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0097e-02, 1.9582e-02, 1.9476e-02,  ..., 2.0236e-02,
          5.6018e-01, 1.9934e-02],
         [2.0097e-02, 1.9582e-02, 1.9476e-02,  ..., 2.0236e-02,
          3.9267e-02, 1.9934e-02],
         [2.0097e-02, 1.9582e-02, 1.9476e-02,  ..., 2.0236e-02,
          3.6129e-01, 1.9934e-02],
         [9.3971e-01, 9.4125e-01, 9.4157e-01,  ..., 9.3929e-01,
          3.9267e-02, 9.4020e-01]],
        [[1.8637e-02, 1.8735e-02, 1.9251e-02,  ..., 6.4105e-04,
          1.9307e-02, 1.9933e-02],
         [1.8637e-02, 1.8735e-02, 1.9251e-02,  ..., 6.4105e-04,
          1.9307e-02, 1.9933e-02],
         [1.8637e-02, 1.8735e-02, 1.9251e-02,  ..., 9.9808e-01,
          1.9307e-02, 1.9933e-02],
         [9.4409e-01, 9.4380e-01, 9.4225e-01,  ..., 6.4105e-04,
          9.4208e-01, 9.4020e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:52,389 [Process: 0] Synchronize training processes
2024-08-16 16:32:52,389 [Process: 0] Evaluating...
2024-08-16 16:32:52,391 [Process: 0] EPOCH 173:
2024-08-16 16:32:52,393 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0208, 0.0212, 0.0211,  ..., 0.0213, 0.0220, 0.0218],
         [0.0208, 0.0212, 0.0211,  ..., 0.0213, 0.0220, 0.0218],
         [0.0208, 0.0212, 0.0211,  ..., 0.0213, 0.0220, 0.0218],
         [0.9375, 0.9365, 0.9368,  ..., 0.9360, 0.9339, 0.9346]],
        [[0.0211, 0.0209, 0.0211,  ..., 0.0207, 0.0203, 0.0215],
         [0.0211, 0.0209, 0.0211,  ..., 0.0207, 0.0203, 0.0215],
         [0.0211, 0.0209, 0.0211,  ..., 0.0207, 0.0203, 0.0215],
         [0.9366, 0.9373, 0.9368,  ..., 0.9379, 0.9392, 0.9356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9625e-02, 1.9651e-02, 2.0133e-02,  ..., 1.9250e-02,
          1.9429e-02, 1.9543e-02],
         [1.9625e-02, 1.9651e-02, 2.0133e-02,  ..., 1.9250e-02,
          1.9429e-02, 1.9543e-02],
         [1.9625e-02, 1.9651e-02, 2.0133e-02,  ..., 1.9250e-02,
          1.9429e-02, 1.9543e-02],
         [9.4113e-01, 9.4105e-01, 9.3960e-01,  ..., 9.4225e-01,
          9.4171e-01, 9.4137e-01]],
        [[1.9494e-02, 1.9869e-02, 1.8533e-02,  ..., 3.7615e-04,
          1.9381e-02, 2.0020e-02],
         [1.9494e-02, 1.9869e-02, 1.8533e-02,  ..., 3.7615e-04,
          1.9381e-02, 2.0020e-02],
         [1.9494e-02, 1.9869e-02, 1.8533e-02,  ..., 9.9887e-01,
          1.9381e-02, 2.0020e-02],
         [9.4152e-01, 9.4039e-01, 9.4440e-01,  ..., 3.7615e-04,
          9.4186e-01, 9.3994e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:54,471 [Process: 0] Synchronize training processes
2024-08-16 16:32:54,472 [Process: 0] Evaluating...
2024-08-16 16:32:54,474 [Process: 0] EPOCH 174:
2024-08-16 16:32:54,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0210, 0.0208, 0.0206,  ..., 0.0206, 0.0216, 0.0218],
         [0.0210, 0.0208, 0.0206,  ..., 0.0206, 0.0216, 0.0218],
         [0.0210, 0.0208, 0.0206,  ..., 0.0206, 0.0216, 0.0218],
         [0.9370, 0.9377, 0.9382,  ..., 0.9381, 0.9351, 0.9347]],
        [[0.0208, 0.0205, 0.0206,  ..., 0.0205, 0.0204, 0.0208],
         [0.0208, 0.0205, 0.0206,  ..., 0.0205, 0.0204, 0.0208],
         [0.0208, 0.0205, 0.0206,  ..., 0.0205, 0.0204, 0.0208],
         [0.9376, 0.9384, 0.9382,  ..., 0.9386, 0.9389, 0.9376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0196, 0.0192, 0.0189,  ..., 0.0194, 0.0201, 0.0193],
         [0.0196, 0.0192, 0.0189,  ..., 0.0194, 0.0201, 0.0193],
         [0.0196, 0.0192, 0.0189,  ..., 0.0194, 0.0201, 0.0193],
         [0.9413, 0.9425, 0.9434,  ..., 0.9417, 0.9396, 0.9421]],
        [[0.0192, 0.0192, 0.0196,  ..., 0.0294, 0.0190, 0.0198],
         [0.0192, 0.0192, 0.0196,  ..., 0.0252, 0.0190, 0.0198],
         [0.0192, 0.0192, 0.0196,  ..., 0.9201, 0.0190, 0.0198],
         [0.9423, 0.9423, 0.9413,  ..., 0.0252, 0.9431, 0.9406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:56,549 [Process: 0] Synchronize training processes
2024-08-16 16:32:56,549 [Process: 0] Evaluating...
2024-08-16 16:32:56,551 [Process: 0] EPOCH 175:
2024-08-16 16:32:56,553 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0204, 0.0200, 0.0213,  ..., 0.0202, 0.0218, 0.0220],
         [0.0204, 0.0200, 0.0213,  ..., 0.0202, 0.0218, 0.0220],
         [0.0204, 0.0200, 0.0213,  ..., 0.0202, 0.0218, 0.0220],
         [0.9388, 0.9399, 0.9362,  ..., 0.9395, 0.9345, 0.9340]],
        [[0.0205, 0.0205, 0.0205,  ..., 0.0207, 0.0209, 0.0210],
         [0.0205, 0.0205, 0.0205,  ..., 0.0207, 0.0209, 0.0210],
         [0.0205, 0.0205, 0.0205,  ..., 0.0207, 0.0209, 0.0210],
         [0.9385, 0.9386, 0.9385,  ..., 0.9378, 0.9374, 0.9369]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0188, 0.0194, 0.0194,  ..., 0.0194, 0.0195, 0.0198],
         [0.0188, 0.0194, 0.0194,  ..., 0.0194, 0.0195, 0.0198],
         [0.0188, 0.0194, 0.0194,  ..., 0.0194, 0.0195, 0.0198],
         [0.9437, 0.9419, 0.9419,  ..., 0.9417, 0.9414, 0.9406]],
        [[0.0195, 0.0186, 0.0190,  ..., 0.0013, 0.0195, 0.0193],
         [0.0195, 0.0186, 0.0190,  ..., 0.0013, 0.0195, 0.0193],
         [0.0195, 0.0186, 0.0190,  ..., 0.9961, 0.0195, 0.0193],
         [0.9416, 0.9442, 0.9431,  ..., 0.0013, 0.9416, 0.9420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:32:58,628 [Process: 0] Synchronize training processes
2024-08-16 16:32:58,628 [Process: 0] Evaluating...
2024-08-16 16:32:58,630 [Process: 0] EPOCH 176:
2024-08-16 16:32:58,632 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0209, 0.0202, 0.0204,  ..., 0.0200, 0.0227, 0.0222],
         [0.0209, 0.0202, 0.0204,  ..., 0.0200, 0.0227, 0.0222],
         [0.0209, 0.0202, 0.0204,  ..., 0.0200, 0.0227, 0.0222],
         [0.9373, 0.9394, 0.9389,  ..., 0.9399, 0.9318, 0.9333]],
        [[0.0207, 0.0203, 0.0203,  ..., 0.0209, 0.0208, 0.0204],
         [0.0207, 0.0203, 0.0203,  ..., 0.0209, 0.0208, 0.0204],
         [0.0207, 0.0203, 0.0203,  ..., 0.0209, 0.0208, 0.0204],
         [0.9378, 0.9390, 0.9392,  ..., 0.9374, 0.9377, 0.9387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0195, 0.0193, 0.0188,  ..., 0.0192, 0.0197, 0.0190],
         [0.0195, 0.0193, 0.0188,  ..., 0.0192, 0.0197, 0.0190],
         [0.0195, 0.0193, 0.0188,  ..., 0.0192, 0.0197, 0.0190],
         [0.9416, 0.9421, 0.9437,  ..., 0.9425, 0.9409, 0.9430]],
        [[0.0188, 0.0182, 0.0182,  ..., 0.0023, 0.0190, 0.0187],
         [0.0188, 0.0182, 0.0182,  ..., 0.0023, 0.0190, 0.0187],
         [0.0188, 0.0182, 0.0182,  ..., 0.9931, 0.0190, 0.0187],
         [0.9435, 0.9455, 0.9455,  ..., 0.0023, 0.9429, 0.9439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:00,723 [Process: 0] Synchronize training processes
2024-08-16 16:33:00,724 [Process: 0] Evaluating...
2024-08-16 16:33:00,726 [Process: 0] EPOCH 177:
2024-08-16 16:33:00,728 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0201, 0.0201, 0.0201,  ..., 0.0198, 0.0220, 0.0227],
         [0.0201, 0.0201, 0.0201,  ..., 0.0198, 0.0220, 0.0227],
         [0.0201, 0.0201, 0.0201,  ..., 0.0198, 0.0220, 0.0227],
         [0.9397, 0.9397, 0.9398,  ..., 0.9406, 0.9340, 0.9320]],
        [[0.0210, 0.0207, 0.0199,  ..., 0.0202, 0.0207, 0.0206],
         [0.0210, 0.0207, 0.0199,  ..., 0.0202, 0.0207, 0.0206],
         [0.0210, 0.0207, 0.0199,  ..., 0.0202, 0.0207, 0.0206],
         [0.9371, 0.9379, 0.9404,  ..., 0.9395, 0.9380, 0.9383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8540e-02, 1.9188e-02, 1.9005e-02,  ..., 1.9429e-02,
          1.7936e-02, 1.8323e-02],
         [1.8540e-02, 1.9188e-02, 1.9005e-02,  ..., 1.9429e-02,
          1.7936e-02, 1.8323e-02],
         [1.8540e-02, 1.9188e-02, 1.9005e-02,  ..., 1.9429e-02,
          1.7936e-02, 1.8323e-02],
         [9.4438e-01, 9.4244e-01, 9.4298e-01,  ..., 9.4171e-01,
          9.4619e-01, 9.4503e-01]],
        [[1.8350e-02, 1.7900e-02, 1.8286e-02,  ..., 5.1406e-04,
          1.8890e-02, 1.8655e-02],
         [1.8350e-02, 1.7900e-02, 1.8286e-02,  ..., 5.1406e-04,
          1.8890e-02, 1.8655e-02],
         [1.8350e-02, 1.7900e-02, 1.8286e-02,  ..., 9.9846e-01,
          1.8890e-02, 1.8655e-02],
         [9.4495e-01, 9.4630e-01, 9.4514e-01,  ..., 5.1406e-04,
          9.4333e-01, 9.4403e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0197, 0.0198, 0.0204,  ..., 0.0200, 0.0226, 0.0232],
         [0.0197, 0.0198, 0.0204,  ..., 0.0200, 0.0226, 0.0232],
         [0.0197, 0.0198, 0.0204,  ..., 0.0200, 0.0226, 0.0232],
         [0.9410, 0.9406, 0.9387,  ..., 0.9400, 0.9322, 0.9304]],
        [[0.0206, 0.0202, 0.0202,  ..., 0.0202, 0.0207, 0.0198],
         [0.0206, 0.0202, 0.0202,  ..., 0.0202, 0.0207, 0.0198],
         [0.0206, 0.0202, 0.0202,  ..., 0.0202, 0.0207, 0.0198],
         [0.9383, 0.9394, 0.9393,  ..., 0.9393, 0.9378, 0.9406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0187, 0.0185, 0.0190,  ..., 0.0188, 0.0185, 0.0188],
         [0.0187, 0.0185, 0.0190,  ..., 0.0188, 0.0185, 0.0188],
         [0.0187, 0.0185, 0.0190,  ..., 0.0188, 0.0185, 0.0188],
         [0.9440, 0.9445, 0.9429,  ..., 0.9435, 0.9445, 0.9436]],
        [[0.0189, 0.0185, 0.0182,  ..., 0.0015, 0.0187, 0.0191],
         [0.0189, 0.0185, 0.0182,  ..., 0.0015, 0.0187, 0.0191],
         [0.0189, 0.0185, 0.0182,  ..., 0.9956, 0.0187, 0.0191],
         [0.9432, 0.9446, 0.9454,  ..., 0.0015, 0.9440, 0.9428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:02,803 [Process: 0] Synchronize training processes
2024-08-16 16:33:02,803 [Process: 0] Evaluating...
2024-08-16 16:33:02,805 [Process: 0] EPOCH 178:
2024-08-16 16:33:02,807 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0202, 0.0199, 0.0200,  ..., 0.0198, 0.0225, 0.0221],
         [0.0202, 0.0199, 0.0200,  ..., 0.0198, 0.0225, 0.0221],
         [0.0202, 0.0199, 0.0200,  ..., 0.0198, 0.0225, 0.0221],
         [0.9393, 0.9402, 0.9399,  ..., 0.9406, 0.9325, 0.9338]],
        [[0.0198, 0.0195, 0.0196,  ..., 0.0200, 0.0202, 0.0199],
         [0.0198, 0.0195, 0.0196,  ..., 0.0200, 0.0202, 0.0199],
         [0.0198, 0.0195, 0.0196,  ..., 0.0200, 0.0202, 0.0199],
         [0.9407, 0.9415, 0.9413,  ..., 0.9400, 0.9394, 0.9404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8813e-02, 1.8440e-02, 1.8503e-02,  ..., 1.8534e-02,
          1.8254e-02, 1.8502e-02],
         [1.8813e-02, 1.8440e-02, 1.8503e-02,  ..., 1.8534e-02,
          1.8254e-02, 1.8502e-02],
         [1.8813e-02, 1.8440e-02, 1.8503e-02,  ..., 1.8534e-02,
          1.8254e-02, 1.8502e-02],
         [9.4356e-01, 9.4468e-01, 9.4449e-01,  ..., 9.4440e-01,
          9.4524e-01, 9.4449e-01]],
        [[1.8039e-02, 1.8477e-02, 1.7945e-02,  ..., 2.5257e-04,
          1.8539e-02, 1.8213e-02],
         [1.8039e-02, 1.8477e-02, 1.7945e-02,  ..., 2.5257e-04,
          1.8539e-02, 1.8213e-02],
         [1.8039e-02, 1.8477e-02, 1.7945e-02,  ..., 9.9924e-01,
          1.8539e-02, 1.8213e-02],
         [9.4588e-01, 9.4457e-01, 9.4616e-01,  ..., 2.5257e-04,
          9.4438e-01, 9.4536e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:04,899 [Process: 0] Synchronize training processes
2024-08-16 16:33:04,899 [Process: 0] Evaluating...
2024-08-16 16:33:04,901 [Process: 0] EPOCH 179:
2024-08-16 16:33:04,903 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0199, 0.0201, 0.0201,  ..., 0.0201, 0.0212, 0.0209],
         [0.0199, 0.0201, 0.0201,  ..., 0.0201, 0.0212, 0.0209],
         [0.0199, 0.0201, 0.0201,  ..., 0.0201, 0.0212, 0.0209],
         [0.9402, 0.9396, 0.9397,  ..., 0.9396, 0.9364, 0.9372]],
        [[0.0198, 0.0194, 0.0202,  ..., 0.0200, 0.0202, 0.0196],
         [0.0198, 0.0194, 0.0202,  ..., 0.0200, 0.0202, 0.0196],
         [0.0198, 0.0194, 0.0202,  ..., 0.0200, 0.0202, 0.0196],
         [0.9406, 0.9418, 0.9395,  ..., 0.9401, 0.9394, 0.9413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8009e-02, 1.8224e-02, 1.8324e-02,  ..., 1.8480e-02,
          1.7894e-02, 1.8080e-02],
         [1.8009e-02, 1.8224e-02, 1.8324e-02,  ..., 1.8480e-02,
          1.7894e-02, 1.8080e-02],
         [1.8009e-02, 1.8224e-02, 1.8324e-02,  ..., 1.8480e-02,
          1.7894e-02, 1.8080e-02],
         [9.4597e-01, 9.4533e-01, 9.4503e-01,  ..., 9.4456e-01,
          9.4632e-01, 9.4576e-01]],
        [[1.8430e-02, 1.7370e-02, 1.8229e-02,  ..., 7.9292e-04,
          1.8551e-02, 1.8978e-02],
         [1.8430e-02, 1.7370e-02, 1.8229e-02,  ..., 7.9292e-04,
          1.8551e-02, 1.8978e-02],
         [1.8430e-02, 1.7370e-02, 1.8229e-02,  ..., 9.9762e-01,
          1.8551e-02, 1.8978e-02],
         [9.4471e-01, 9.4789e-01, 9.4531e-01,  ..., 7.9292e-04,
          9.4435e-01, 9.4307e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:06,996 [Process: 0] Synchronize training processes
2024-08-16 16:33:06,996 [Process: 0] Evaluating...
2024-08-16 16:33:06,998 [Process: 0] EPOCH 180:
2024-08-16 16:33:07,000 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0201, 0.0202, 0.0195,  ..., 0.0206, 0.0211, 0.0225],
         [0.0201, 0.0202, 0.0195,  ..., 0.0206, 0.0211, 0.0225],
         [0.0201, 0.0202, 0.0195,  ..., 0.0206, 0.0211, 0.0225],
         [0.9396, 0.9394, 0.9415,  ..., 0.9381, 0.9368, 0.9324]],
        [[0.0200, 0.0196, 0.0195,  ..., 0.0197, 0.0205, 0.0199],
         [0.0200, 0.0196, 0.0195,  ..., 0.0197, 0.0205, 0.0199],
         [0.0200, 0.0196, 0.0195,  ..., 0.0197, 0.0205, 0.0199],
         [0.9401, 0.9411, 0.9416,  ..., 0.9408, 0.9386, 0.9402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8219e-02, 1.8920e-02, 1.7816e-02,  ..., 1.8176e-02,
          1.8345e-02, 1.8364e-02],
         [1.8219e-02, 1.8920e-02, 1.7816e-02,  ..., 1.8176e-02,
          1.8345e-02, 1.8364e-02],
         [1.8219e-02, 1.8920e-02, 1.7816e-02,  ..., 1.8176e-02,
          1.8345e-02, 1.8364e-02],
         [9.4534e-01, 9.4324e-01, 9.4655e-01,  ..., 9.4547e-01,
          9.4497e-01, 9.4491e-01]],
        [[1.8398e-02, 1.7649e-02, 1.7559e-02,  ..., 6.0022e-04,
          1.7725e-02, 1.8205e-02],
         [1.8398e-02, 1.7649e-02, 1.7559e-02,  ..., 6.0022e-04,
          1.7725e-02, 1.8205e-02],
         [1.8398e-02, 1.7649e-02, 1.7559e-02,  ..., 9.9820e-01,
          1.7725e-02, 1.8205e-02],
         [9.4481e-01, 9.4705e-01, 9.4732e-01,  ..., 6.0022e-04,
          9.4682e-01, 9.4539e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:09,083 [Process: 0] Synchronize training processes
2024-08-16 16:33:09,084 [Process: 0] Evaluating...
2024-08-16 16:33:09,086 [Process: 0] EPOCH 181:
2024-08-16 16:33:09,088 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0204, 0.0206, 0.0196,  ..., 0.0203, 0.0208, 0.0213],
         [0.0204, 0.0206, 0.0196,  ..., 0.0203, 0.0208, 0.0213],
         [0.0204, 0.0206, 0.0196,  ..., 0.0203, 0.0208, 0.0213],
         [0.9387, 0.9381, 0.9412,  ..., 0.9392, 0.9375, 0.9361]],
        [[0.0195, 0.0201, 0.0197,  ..., 0.0197, 0.0205, 0.0201],
         [0.0195, 0.0201, 0.0197,  ..., 0.0197, 0.0205, 0.0201],
         [0.0195, 0.0201, 0.0197,  ..., 0.0197, 0.0205, 0.0201],
         [0.9416, 0.9397, 0.9410,  ..., 0.9408, 0.9385, 0.9397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0178, 0.0186,  ..., 0.0183, 0.0181, 0.0181],
         [0.0182, 0.0178, 0.0186,  ..., 0.0183, 0.0181, 0.0181],
         [0.0182, 0.0178, 0.0186,  ..., 0.0183, 0.0181, 0.0181],
         [0.9453, 0.9467, 0.9443,  ..., 0.9451, 0.9457, 0.9457]],
        [[0.0179, 0.0181, 0.0185,  ..., 0.0011, 0.0179, 0.0178],
         [0.0179, 0.0181, 0.0185,  ..., 0.0011, 0.0179, 0.0178],
         [0.0179, 0.0181, 0.0185,  ..., 0.9967, 0.0179, 0.0178],
         [0.9463, 0.9456, 0.9445,  ..., 0.0011, 0.9464, 0.9466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:11,187 [Process: 0] Synchronize training processes
2024-08-16 16:33:11,188 [Process: 0] Evaluating...
2024-08-16 16:33:11,196 [Process: 0] EPOCH 182:
2024-08-16 16:33:11,198 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0199, 0.0195, 0.0203,  ..., 0.0193, 0.0195, 0.0207],
         [0.0199, 0.0195, 0.0203,  ..., 0.0193, 0.0195, 0.0207],
         [0.0199, 0.0195, 0.0203,  ..., 0.0193, 0.0195, 0.0207],
         [0.9403, 0.9416, 0.9391,  ..., 0.9421, 0.9415, 0.9379]],
        [[0.0192, 0.0195, 0.0194,  ..., 0.0196, 0.0192, 0.0203],
         [0.0192, 0.0195, 0.0194,  ..., 0.0196, 0.0192, 0.0203],
         [0.0192, 0.0195, 0.0194,  ..., 0.0196, 0.0192, 0.0203],
         [0.9423, 0.9415, 0.9417,  ..., 0.9412, 0.9425, 0.9390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7775e-02, 1.7658e-02, 1.8386e-02,  ..., 1.7766e-02,
          1.8141e-02, 1.7557e-02],
         [1.7775e-02, 1.7658e-02, 1.8386e-02,  ..., 1.7766e-02,
          1.8141e-02, 1.7557e-02],
         [1.7775e-02, 1.7658e-02, 1.8386e-02,  ..., 1.7766e-02,
          1.8141e-02, 1.7557e-02],
         [9.4668e-01, 9.4703e-01, 9.4484e-01,  ..., 9.4670e-01,
          9.4558e-01, 9.4733e-01]],
        [[1.7368e-02, 1.7599e-02, 1.7371e-02,  ..., 3.2690e-05,
          1.7465e-02, 1.8161e-02],
         [1.7368e-02, 1.7599e-02, 1.7371e-02,  ..., 3.2690e-05,
          1.7465e-02, 1.8161e-02],
         [1.7368e-02, 1.7599e-02, 1.7371e-02,  ..., 9.9990e-01,
          1.7465e-02, 1.8161e-02],
         [9.4790e-01, 9.4720e-01, 9.4789e-01,  ..., 3.2690e-05,
          9.4760e-01, 9.4552e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:13,282 [Process: 0] Synchronize training processes
2024-08-16 16:33:13,282 [Process: 0] Evaluating...
2024-08-16 16:33:13,284 [Process: 0] EPOCH 183:
2024-08-16 16:33:13,286 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0197, 0.0188, 0.0192,  ..., 0.0194, 0.0194, 0.0200],
         [0.0197, 0.0188, 0.0192,  ..., 0.0194, 0.0194, 0.0200],
         [0.0197, 0.0188, 0.0192,  ..., 0.0194, 0.0194, 0.0200],
         [0.9409, 0.9435, 0.9425,  ..., 0.9417, 0.9417, 0.9401]],
        [[0.0190, 0.0192, 0.0195,  ..., 0.0190, 0.0193, 0.0192],
         [0.0190, 0.0192, 0.0195,  ..., 0.0190, 0.0193, 0.0192],
         [0.0190, 0.0192, 0.0195,  ..., 0.0190, 0.0193, 0.0192],
         [0.9431, 0.9424, 0.9416,  ..., 0.9429, 0.9420, 0.9423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:33:15,389 [Process: 0] Synchronize training processes
2024-08-16 16:33:15,389 [Process: 0] Evaluating...
2024-08-16 16:33:15,391 [Process: 0] EPOCH 184:
2024-08-16 16:33:15,393 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7822e-02, 1.8071e-02, 1.7849e-02,  ..., 1.7467e-02,
          1.7788e-02, 1.8340e-02],
         [1.7822e-02, 1.8071e-02, 1.7849e-02,  ..., 1.7467e-02,
          1.7788e-02, 1.8340e-02],
         [1.7822e-02, 1.8071e-02, 1.7849e-02,  ..., 1.7467e-02,
          1.7788e-02, 1.8340e-02],
         [9.4653e-01, 9.4579e-01, 9.4645e-01,  ..., 9.4760e-01,
          9.4663e-01, 9.4498e-01]],
        [[1.7879e-02, 1.7248e-02, 1.7825e-02,  ..., 3.1648e-04,
          1.8005e-02, 1.7737e-02],
         [1.7879e-02, 1.7248e-02, 1.7825e-02,  ..., 3.1648e-04,
          1.8005e-02, 1.7737e-02],
         [1.7879e-02, 1.7248e-02, 1.7825e-02,  ..., 9.9905e-01,
          1.8005e-02, 1.7737e-02],
         [9.4636e-01, 9.4826e-01, 9.4653e-01,  ..., 3.1648e-04,
          9.4598e-01, 9.4679e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0189, 0.0191, 0.0190,  ..., 0.0190, 0.0196, 0.0196],
         [0.0189, 0.0191, 0.0190,  ..., 0.0190, 0.0196, 0.0196],
         [0.0189, 0.0191, 0.0190,  ..., 0.0190, 0.0196, 0.0196],
         [0.9432, 0.9426, 0.9430,  ..., 0.9431, 0.9411, 0.9411]],
        [[0.0190, 0.0187, 0.0190,  ..., 0.0191, 0.0193, 0.0188],
         [0.0190, 0.0187, 0.0190,  ..., 0.0191, 0.0193, 0.0188],
         [0.0190, 0.0187, 0.0190,  ..., 0.0191, 0.0193, 0.0188],
         [0.9431, 0.9438, 0.9430,  ..., 0.9426, 0.9422, 0.9436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:17,482 [Process: 0] Synchronize training processes
2024-08-16 16:33:17,483 [Process: 0] Evaluating...
2024-08-16 16:33:17,484 [Process: 0] EPOCH 185:
2024-08-16 16:33:17,486 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0179, 0.0180, 0.0176,  ..., 0.0174, 0.0176, 0.0182],
         [0.0179, 0.0180, 0.0176,  ..., 0.0174, 0.0176, 0.0182],
         [0.0179, 0.0180, 0.0176,  ..., 0.0174, 0.0176, 0.0182],
         [0.9464, 0.9460, 0.9472,  ..., 0.9478, 0.9471, 0.9455]],
        [[0.0178, 0.0178, 0.0171,  ..., 0.0014, 0.0182, 0.0174],
         [0.0178, 0.0178, 0.0171,  ..., 0.0014, 0.0182, 0.0174],
         [0.0178, 0.0178, 0.0171,  ..., 0.9957, 0.0182, 0.0174],
         [0.9466, 0.9466, 0.9488,  ..., 0.0014, 0.9455, 0.9479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0194, 0.0193, 0.0192,  ..., 0.0191, 0.0193, 0.0200],
         [0.0194, 0.0193, 0.0192,  ..., 0.0191, 0.0193, 0.0200],
         [0.0194, 0.0193, 0.0192,  ..., 0.0191, 0.0193, 0.0200],
         [0.9419, 0.9422, 0.9424,  ..., 0.9427, 0.9422, 0.9401]],
        [[0.0190, 0.0192, 0.0185,  ..., 0.0197, 0.0192, 0.0192],
         [0.0190, 0.0192, 0.0185,  ..., 0.0197, 0.0192, 0.0192],
         [0.0190, 0.0192, 0.0185,  ..., 0.0197, 0.0192, 0.0192],
         [0.9430, 0.9423, 0.9446,  ..., 0.9409, 0.9424, 0.9425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:19,558 [Process: 0] Synchronize training processes
2024-08-16 16:33:19,558 [Process: 0] Evaluating...
2024-08-16 16:33:19,560 [Process: 0] EPOCH 186:
2024-08-16 16:33:19,562 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7698e-02, 1.7517e-02, 1.7641e-02,  ..., 1.7569e-02,
          1.8100e-02, 1.6852e-02],
         [1.7698e-02, 1.7517e-02, 1.7641e-02,  ..., 1.7569e-02,
          1.8100e-02, 1.6852e-02],
         [1.7698e-02, 1.7517e-02, 1.7641e-02,  ..., 1.7569e-02,
          1.8100e-02, 1.6852e-02],
         [9.4691e-01, 9.4745e-01, 9.4708e-01,  ..., 9.4729e-01,
          9.4570e-01, 9.4945e-01]],
        [[1.7557e-02, 1.6790e-02, 1.6741e-02,  ..., 4.2484e-04,
          1.6970e-02, 1.7663e-02],
         [1.7557e-02, 1.6790e-02, 1.6741e-02,  ..., 4.2484e-04,
          1.6970e-02, 1.7663e-02],
         [1.7557e-02, 1.6790e-02, 1.6741e-02,  ..., 9.9873e-01,
          1.6970e-02, 1.7663e-02],
         [9.4733e-01, 9.4963e-01, 9.4978e-01,  ..., 4.2484e-04,
          9.4909e-01, 9.4701e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0191, 0.0192, 0.0184,  ..., 0.0191, 0.0199, 0.0196],
         [0.0191, 0.0192, 0.0184,  ..., 0.0191, 0.0199, 0.0196],
         [0.0191, 0.0192, 0.0184,  ..., 0.0191, 0.0199, 0.0196],
         [0.9426, 0.9425, 0.9448,  ..., 0.9427, 0.9404, 0.9412]],
        [[0.0190, 0.0192, 0.0188,  ..., 0.0190, 0.0193, 0.0188],
         [0.0190, 0.0192, 0.0188,  ..., 0.0190, 0.0193, 0.0188],
         [0.0190, 0.0192, 0.0188,  ..., 0.0190, 0.0193, 0.0188],
         [0.9429, 0.9424, 0.9435,  ..., 0.9431, 0.9420, 0.9436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:21,640 [Process: 0] Synchronize training processes
2024-08-16 16:33:21,640 [Process: 0] Evaluating...
2024-08-16 16:33:21,642 [Process: 0] EPOCH 187:
2024-08-16 16:33:21,644 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7277e-02, 1.7270e-02, 1.7649e-02,  ..., 1.7204e-02,
          1.7441e-02, 1.7276e-02],
         [1.7277e-02, 1.7270e-02, 1.7649e-02,  ..., 1.7204e-02,
          1.7441e-02, 1.7276e-02],
         [1.7277e-02, 1.7270e-02, 1.7649e-02,  ..., 1.7204e-02,
          1.7441e-02, 1.7276e-02],
         [9.4817e-01, 9.4819e-01, 9.4705e-01,  ..., 9.4839e-01,
          9.4768e-01, 9.4817e-01]],
        [[1.7016e-02, 1.6995e-02, 1.7009e-02,  ..., 5.7228e-04,
          1.7256e-02, 1.7036e-02],
         [1.7016e-02, 1.6995e-02, 1.7009e-02,  ..., 5.7228e-04,
          1.7256e-02, 1.7036e-02],
         [1.7016e-02, 1.6995e-02, 1.7009e-02,  ..., 9.9828e-01,
          1.7256e-02, 1.7036e-02],
         [9.4895e-01, 9.4901e-01, 9.4897e-01,  ..., 5.7228e-04,
          9.4823e-01, 9.4889e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0186, 0.0188, 0.0187,  ..., 0.0184, 0.0192, 0.0192],
         [0.0186, 0.0188, 0.0187,  ..., 0.0184, 0.0192, 0.0192],
         [0.0186, 0.0188, 0.0187,  ..., 0.0184, 0.0192, 0.0192],
         [0.9443, 0.9437, 0.9439,  ..., 0.9447, 0.9423, 0.9423]],
        [[0.0187, 0.0187, 0.0180,  ..., 0.0186, 0.0184, 0.0186],
         [0.0187, 0.0187, 0.0180,  ..., 0.0186, 0.0184, 0.0186],
         [0.0187, 0.0187, 0.0180,  ..., 0.0186, 0.0184, 0.0186],
         [0.9439, 0.9440, 0.9460,  ..., 0.9443, 0.9447, 0.9441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:23,732 [Process: 0] Synchronize training processes
2024-08-16 16:33:23,732 [Process: 0] Evaluating...
2024-08-16 16:33:23,734 [Process: 0] EPOCH 188:
2024-08-16 16:33:23,736 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0169, 0.0171, 0.0169,  ..., 0.0170, 0.0165, 0.0168],
         [0.0169, 0.0171, 0.0169,  ..., 0.0170, 0.0165, 0.0168],
         [0.0169, 0.0171, 0.0169,  ..., 0.0170, 0.0165, 0.0168],
         [0.9493, 0.9486, 0.9494,  ..., 0.9491, 0.9506, 0.9495]],
        [[0.0166, 0.0161, 0.0166,  ..., 0.0060, 0.0165, 0.0167],
         [0.0166, 0.0161, 0.0166,  ..., 0.0060, 0.0165, 0.0167],
         [0.0166, 0.0161, 0.0166,  ..., 0.9821, 0.0165, 0.0167],
         [0.9502, 0.9517, 0.9502,  ..., 0.0060, 0.9504, 0.9498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0188, 0.0187, 0.0185,  ..., 0.0184, 0.0192, 0.0191],
         [0.0188, 0.0187, 0.0185,  ..., 0.0184, 0.0192, 0.0191],
         [0.0188, 0.0187, 0.0185,  ..., 0.0184, 0.0192, 0.0191],
         [0.9435, 0.9438, 0.9444,  ..., 0.9447, 0.9424, 0.9427]],
        [[0.0181, 0.0186, 0.0185,  ..., 0.0188, 0.0183, 0.0179],
         [0.0181, 0.0186, 0.0185,  ..., 0.0188, 0.0183, 0.0179],
         [0.0181, 0.0186, 0.0185,  ..., 0.0188, 0.0183, 0.0179],
         [0.9457, 0.9443, 0.9444,  ..., 0.9435, 0.9450, 0.9463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:25,821 [Process: 0] Synchronize training processes
2024-08-16 16:33:25,821 [Process: 0] Evaluating...
2024-08-16 16:33:25,823 [Process: 0] EPOCH 189:
2024-08-16 16:33:25,825 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0172, 0.0169, 0.0170,  ..., 0.0172, 0.0170, 0.0169],
         [0.0172, 0.0169, 0.0170,  ..., 0.0172, 0.0170, 0.0169],
         [0.0172, 0.0169, 0.0170,  ..., 0.0172, 0.0170, 0.0169],
         [0.9484, 0.9493, 0.9490,  ..., 0.9483, 0.9490, 0.9493]],
        [[0.0165, 0.0159, 0.0165,  ..., 0.0051, 0.0168, 0.0170],
         [0.0165, 0.0159, 0.0165,  ..., 0.0051, 0.0168, 0.0170],
         [0.0165, 0.0159, 0.0165,  ..., 0.9848, 0.0168, 0.0170],
         [0.9504, 0.9522, 0.9504,  ..., 0.0051, 0.9496, 0.9489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0185, 0.0192, 0.0187,  ..., 0.0183, 0.0190, 0.0195],
         [0.0185, 0.0192, 0.0187,  ..., 0.0183, 0.0190, 0.0195],
         [0.0185, 0.0192, 0.0187,  ..., 0.0183, 0.0190, 0.0195],
         [0.9445, 0.9425, 0.9440,  ..., 0.9450, 0.9429, 0.9416]],
        [[0.0182, 0.0182, 0.0181,  ..., 0.0179, 0.0182, 0.0180],
         [0.0182, 0.0182, 0.0181,  ..., 0.0179, 0.0182, 0.0180],
         [0.0182, 0.0182, 0.0181,  ..., 0.0179, 0.0182, 0.0180],
         [0.9454, 0.9454, 0.9457,  ..., 0.9463, 0.9453, 0.9459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:27,920 [Process: 0] Synchronize training processes
2024-08-16 16:33:27,920 [Process: 0] Evaluating...
2024-08-16 16:33:27,922 [Process: 0] EPOCH 190:
2024-08-16 16:33:27,924 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6822e-02, 1.7468e-02, 1.6559e-02,  ..., 1.7361e-02,
          1.6311e-02, 1.6871e-02],
         [1.6822e-02, 1.7468e-02, 1.6559e-02,  ..., 1.7361e-02,
          1.6311e-02, 1.6871e-02],
         [1.6822e-02, 1.7468e-02, 1.6559e-02,  ..., 1.7361e-02,
          1.6311e-02, 1.6871e-02],
         [9.4953e-01, 9.4760e-01, 9.5032e-01,  ..., 9.4792e-01,
          9.5107e-01, 9.4939e-01]],
        [[1.7089e-02, 1.6797e-02, 1.6463e-02,  ..., 6.2144e-05,
          1.6614e-02, 1.7041e-02],
         [1.7089e-02, 1.6797e-02, 1.6463e-02,  ..., 6.2144e-05,
          1.6614e-02, 1.7041e-02],
         [1.7089e-02, 1.6797e-02, 1.6463e-02,  ..., 9.9981e-01,
          1.6614e-02, 1.7041e-02],
         [9.4873e-01, 9.4961e-01, 9.5061e-01,  ..., 6.2144e-05,
          9.5016e-01, 9.4888e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0186, 0.0185, 0.0186,  ..., 0.0184, 0.0190, 0.0186],
         [0.0186, 0.0185, 0.0186,  ..., 0.0184, 0.0190, 0.0186],
         [0.0186, 0.0185, 0.0186,  ..., 0.0184, 0.0190, 0.0186],
         [0.9443, 0.9445, 0.9443,  ..., 0.9448, 0.9429, 0.9442]],
        [[0.0179, 0.0182, 0.0186,  ..., 0.0180, 0.0183, 0.0180],
         [0.0179, 0.0182, 0.0186,  ..., 0.0180, 0.0183, 0.0180],
         [0.0179, 0.0182, 0.0186,  ..., 0.0180, 0.0183, 0.0180],
         [0.9462, 0.9454, 0.9443,  ..., 0.9459, 0.9450, 0.9459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:30,012 [Process: 0] Synchronize training processes
2024-08-16 16:33:30,012 [Process: 0] Evaluating...
2024-08-16 16:33:30,014 [Process: 0] EPOCH 191:
2024-08-16 16:33:30,016 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0167, 0.0166, 0.0168,  ..., 0.0168, 0.0164, 0.0167],
         [0.0167, 0.0166, 0.0168,  ..., 0.0168, 0.0164, 0.0167],
         [0.0167, 0.0166, 0.0168,  ..., 0.0168, 0.0164, 0.0167],
         [0.9499, 0.9503, 0.9495,  ..., 0.9495, 0.9507, 0.9500]],
        [[0.0162, 0.0165, 0.0169,  ..., 0.0011, 0.0166, 0.0170],
         [0.0162, 0.0165, 0.0169,  ..., 0.0011, 0.0166, 0.0170],
         [0.0162, 0.0165, 0.0169,  ..., 0.9968, 0.0166, 0.0170],
         [0.9513, 0.9505, 0.9494,  ..., 0.0011, 0.9501, 0.9489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0185, 0.0184, 0.0184,  ..., 0.0183, 0.0184, 0.0188],
         [0.0185, 0.0184, 0.0184,  ..., 0.0183, 0.0184, 0.0188],
         [0.0185, 0.0184, 0.0184,  ..., 0.0183, 0.0184, 0.0188],
         [0.9444, 0.9448, 0.9448,  ..., 0.9450, 0.9449, 0.9435]],
        [[0.0181, 0.0179, 0.0181,  ..., 0.0182, 0.0183, 0.0180],
         [0.0181, 0.0179, 0.0181,  ..., 0.0182, 0.0183, 0.0180],
         [0.0181, 0.0179, 0.0181,  ..., 0.0182, 0.0183, 0.0180],
         [0.9458, 0.9463, 0.9458,  ..., 0.9454, 0.9452, 0.9461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:32,089 [Process: 0] Synchronize training processes
2024-08-16 16:33:32,090 [Process: 0] Evaluating...
2024-08-16 16:33:32,098 [Process: 0] EPOCH 192:
2024-08-16 16:33:32,101 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6996e-02, 1.6432e-02, 1.6633e-02,  ..., 1.6468e-02,
          1.7151e-02, 1.7076e-02],
         [1.6996e-02, 1.6432e-02, 1.6633e-02,  ..., 1.6468e-02,
          1.7151e-02, 1.7076e-02],
         [1.6996e-02, 1.6432e-02, 1.6633e-02,  ..., 1.6468e-02,
          1.7151e-02, 1.7076e-02],
         [9.4901e-01, 9.5070e-01, 9.5010e-01,  ..., 9.5060e-01,
          9.4855e-01, 9.4877e-01]],
        [[1.6568e-02, 1.6380e-02, 1.6174e-02,  ..., 4.7432e-04,
          1.5867e-02, 1.6700e-02],
         [1.6568e-02, 1.6380e-02, 1.6174e-02,  ..., 4.7432e-04,
          1.5867e-02, 1.6700e-02],
         [1.6568e-02, 1.6380e-02, 1.6174e-02,  ..., 9.9858e-01,
          1.5867e-02, 1.6700e-02],
         [9.5029e-01, 9.5086e-01, 9.5148e-01,  ..., 4.7432e-04,
          9.5240e-01, 9.4990e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0178, 0.0179, 0.0180,  ..., 0.0179, 0.0182, 0.0182],
         [0.0178, 0.0179, 0.0180,  ..., 0.0179, 0.0182, 0.0182],
         [0.0178, 0.0179, 0.0180,  ..., 0.0179, 0.0182, 0.0182],
         [0.9467, 0.9464, 0.9459,  ..., 0.9463, 0.9455, 0.9453]],
        [[0.0176, 0.0183, 0.0172,  ..., 0.0177, 0.0176, 0.0173],
         [0.0176, 0.0183, 0.0172,  ..., 0.0177, 0.0176, 0.0173],
         [0.0176, 0.0183, 0.0172,  ..., 0.0177, 0.0176, 0.0173],
         [0.9472, 0.9450, 0.9483,  ..., 0.9468, 0.9472, 0.9481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:34,166 [Process: 0] Synchronize training processes
2024-08-16 16:33:34,166 [Process: 0] Evaluating...
2024-08-16 16:33:34,168 [Process: 0] EPOCH 193:
2024-08-16 16:33:34,170 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5676e-02, 1.6249e-02, 1.6535e-02,  ..., 1.5950e-02,
          1.6272e-02, 1.6245e-02],
         [1.5676e-02, 1.6249e-02, 1.6535e-02,  ..., 1.5950e-02,
          1.6272e-02, 1.6245e-02],
         [1.5676e-02, 1.6249e-02, 1.6535e-02,  ..., 1.5950e-02,
          1.6272e-02, 1.6245e-02],
         [9.5297e-01, 9.5125e-01, 9.5040e-01,  ..., 9.5215e-01,
          9.5119e-01, 9.5126e-01]],
        [[1.5719e-02, 1.6278e-02, 1.6598e-02,  ..., 3.6035e-04,
          1.6079e-02, 1.6276e-02],
         [1.5719e-02, 1.6278e-02, 1.6598e-02,  ..., 3.6035e-04,
          1.6079e-02, 1.6276e-02],
         [1.5719e-02, 1.6278e-02, 1.6598e-02,  ..., 9.9892e-01,
          1.6079e-02, 1.6276e-02],
         [9.5284e-01, 9.5116e-01, 9.5021e-01,  ..., 3.6035e-04,
          9.5176e-01, 9.5117e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0179, 0.0178, 0.0178,  ..., 0.0178, 0.0184, 0.0187],
         [0.0179, 0.0178, 0.0178,  ..., 0.0178, 0.0184, 0.0187],
         [0.0179, 0.0178, 0.0178,  ..., 0.0178, 0.0184, 0.0187],
         [0.9463, 0.9465, 0.9465,  ..., 0.9465, 0.9447, 0.9439]],
        [[0.0177, 0.0180, 0.0181,  ..., 0.0179, 0.0174, 0.0172],
         [0.0177, 0.0180, 0.0181,  ..., 0.0179, 0.0174, 0.0172],
         [0.0177, 0.0180, 0.0181,  ..., 0.0179, 0.0174, 0.0172],
         [0.9468, 0.9460, 0.9457,  ..., 0.9462, 0.9478, 0.9483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:36,248 [Process: 0] Synchronize training processes
2024-08-16 16:33:36,248 [Process: 0] Evaluating...
2024-08-16 16:33:36,250 [Process: 0] EPOCH 194:
2024-08-16 16:33:36,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5878e-02, 1.5363e-02, 1.6404e-02,  ..., 1.6547e-02,
          9.0355e-01, 1.6024e-02],
         [1.5878e-02, 1.5363e-02, 1.6404e-02,  ..., 1.6547e-02,
          2.5234e-02, 1.6024e-02],
         [1.5878e-02, 1.5363e-02, 1.6404e-02,  ..., 1.6547e-02,
          4.5986e-02, 1.6024e-02],
         [9.5237e-01, 9.5391e-01, 9.5079e-01,  ..., 9.5036e-01,
          2.5234e-02, 9.5193e-01]],
        [[1.5388e-02, 1.5603e-02, 1.5554e-02,  ..., 2.9446e-04,
          1.6247e-02, 1.6689e-02],
         [1.5388e-02, 1.5603e-02, 1.5554e-02,  ..., 2.9446e-04,
          1.6247e-02, 1.6689e-02],
         [1.5388e-02, 1.5603e-02, 1.5554e-02,  ..., 9.9912e-01,
          1.6247e-02, 1.6689e-02],
         [9.5384e-01, 9.5319e-01, 9.5334e-01,  ..., 2.9446e-04,
          9.5126e-01, 9.4993e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0183, 0.0180, 0.0175,  ..., 0.0179, 0.0190, 0.0185],
         [0.0183, 0.0180, 0.0175,  ..., 0.0179, 0.0190, 0.0185],
         [0.0183, 0.0180, 0.0175,  ..., 0.0179, 0.0190, 0.0185],
         [0.9452, 0.9460, 0.9475,  ..., 0.9463, 0.9430, 0.9446]],
        [[0.0175, 0.0184, 0.0180,  ..., 0.0177, 0.0186, 0.0181],
         [0.0175, 0.0184, 0.0180,  ..., 0.0177, 0.0186, 0.0181],
         [0.0175, 0.0184, 0.0180,  ..., 0.0177, 0.0186, 0.0181],
         [0.9475, 0.9449, 0.9460,  ..., 0.9470, 0.9441, 0.9456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:38,321 [Process: 0] Synchronize training processes
2024-08-16 16:33:38,322 [Process: 0] Evaluating...
2024-08-16 16:33:38,324 [Process: 0] EPOCH 195:
2024-08-16 16:33:38,325 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6116e-02, 1.5625e-02, 1.5701e-02,  ..., 1.5750e-02,
          2.8109e-01, 1.6077e-02],
         [1.6116e-02, 1.5625e-02, 1.5701e-02,  ..., 1.5750e-02,
          2.9907e-02, 1.6077e-02],
         [1.6116e-02, 1.5625e-02, 1.5701e-02,  ..., 1.5750e-02,
          6.5910e-01, 1.6077e-02],
         [9.5165e-01, 9.5313e-01, 9.5290e-01,  ..., 9.5275e-01,
          2.9907e-02, 9.5177e-01]],
        [[1.5226e-02, 1.5301e-02, 1.5576e-02,  ..., 3.3652e-04,
          1.5730e-02, 1.5536e-02],
         [1.5226e-02, 1.5301e-02, 1.5576e-02,  ..., 3.3652e-04,
          1.5730e-02, 1.5536e-02],
         [1.5226e-02, 1.5301e-02, 1.5576e-02,  ..., 9.9899e-01,
          1.5730e-02, 1.5536e-02],
         [9.5432e-01, 9.5410e-01, 9.5327e-01,  ..., 3.3652e-04,
          9.5281e-01, 9.5339e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0174, 0.0179, 0.0177,  ..., 0.0177, 0.0188, 0.0188],
         [0.0174, 0.0179, 0.0177,  ..., 0.0177, 0.0188, 0.0188],
         [0.0174, 0.0179, 0.0177,  ..., 0.0177, 0.0188, 0.0188],
         [0.9477, 0.9464, 0.9470,  ..., 0.9468, 0.9435, 0.9435]],
        [[0.0176, 0.0174, 0.0176,  ..., 0.0177, 0.0171, 0.0177],
         [0.0176, 0.0174, 0.0176,  ..., 0.0177, 0.0171, 0.0177],
         [0.0176, 0.0174, 0.0176,  ..., 0.0177, 0.0171, 0.0177],
         [0.9473, 0.9478, 0.9471,  ..., 0.9468, 0.9487, 0.9470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:40,374 [Process: 0] Synchronize training processes
2024-08-16 16:33:40,374 [Process: 0] Evaluating...
2024-08-16 16:33:40,376 [Process: 0] EPOCH 196:
2024-08-16 16:33:40,378 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5635e-02, 1.6057e-02, 1.5669e-02,  ..., 1.5807e-02,
          9.6338e-01, 1.5597e-02],
         [1.5635e-02, 1.6057e-02, 1.5669e-02,  ..., 1.5807e-02,
          1.1494e-02, 1.5597e-02],
         [1.5635e-02, 1.6057e-02, 1.5669e-02,  ..., 1.5807e-02,
          1.3631e-02, 1.5597e-02],
         [9.5310e-01, 9.5183e-01, 9.5299e-01,  ..., 9.5258e-01,
          1.1494e-02, 9.5321e-01]],
        [[1.5423e-02, 1.5974e-02, 1.5453e-02,  ..., 2.6023e-04,
          1.5466e-02, 1.5635e-02],
         [1.5423e-02, 1.5974e-02, 1.5453e-02,  ..., 2.6023e-04,
          1.5466e-02, 1.5635e-02],
         [1.5423e-02, 1.5974e-02, 1.5453e-02,  ..., 9.9922e-01,
          1.5466e-02, 1.5635e-02],
         [9.5373e-01, 9.5208e-01, 9.5364e-01,  ..., 2.6023e-04,
          9.5360e-01, 9.5310e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0172, 0.0173, 0.0172,  ..., 0.0170, 0.0189, 0.0192],
         [0.0172, 0.0173, 0.0172,  ..., 0.0170, 0.0189, 0.0192],
         [0.0172, 0.0173, 0.0172,  ..., 0.0170, 0.0189, 0.0194],
         [0.9483, 0.9480, 0.9484,  ..., 0.9489, 0.9433, 0.9422]],
        [[0.0170, 0.0171, 0.0173,  ..., 0.0169, 0.0176, 0.0172],
         [0.0170, 0.0171, 0.0173,  ..., 0.0169, 0.0176, 0.0172],
         [0.0170, 0.0171, 0.0173,  ..., 0.0169, 0.0176, 0.0172],
         [0.9489, 0.9487, 0.9481,  ..., 0.9493, 0.9471, 0.9483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:33:42,464 [Process: 0] Synchronize training processes
2024-08-16 16:33:42,464 [Process: 0] Evaluating...
2024-08-16 16:33:42,466 [Process: 0] EPOCH 197:
2024-08-16 16:33:42,468 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0155, 0.0152,  ..., 0.0159, 0.0164, 0.0154],
         [0.0157, 0.0155, 0.0152,  ..., 0.0159, 0.0164, 0.0154],
         [0.0157, 0.0155, 0.0152,  ..., 0.0159, 0.0164, 0.0154],
         [0.9530, 0.9536, 0.9543,  ..., 0.9524, 0.9509, 0.9537]],
        [[0.0151, 0.0157, 0.0156,  ..., 0.0014, 0.0159, 0.0166],
         [0.0151, 0.0157, 0.0156,  ..., 0.0014, 0.0159, 0.0166],
         [0.0151, 0.0157, 0.0156,  ..., 0.9957, 0.0159, 0.0166],
         [0.9548, 0.9530, 0.9533,  ..., 0.0014, 0.9524, 0.9502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:33:44,559 [Process: 0] Synchronize training processes
2024-08-16 16:33:44,560 [Process: 0] Evaluating...
2024-08-16 16:33:44,562 [Process: 0] EPOCH 198:
2024-08-16 16:33:44,564 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0172, 0.0169, 0.0169,  ..., 0.0168, 0.0217, 0.0184],
         [0.0172, 0.0169, 0.0169,  ..., 0.0168, 0.0217, 0.0184],
         [0.0172, 0.0169, 0.0169,  ..., 0.0168, 0.0218, 0.0184],
         [0.9485, 0.9494, 0.9493,  ..., 0.9497, 0.9348, 0.9449]],
        [[0.0166, 0.0171, 0.0168,  ..., 0.0167, 0.0166, 0.0166],
         [0.0166, 0.0171, 0.0168,  ..., 0.0167, 0.0166, 0.0166],
         [0.0166, 0.0171, 0.0168,  ..., 0.0168, 0.0166, 0.0166],
         [0.9501, 0.9486, 0.9495,  ..., 0.9499, 0.9503, 0.9501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0155, 0.0158, 0.0154,  ..., 0.0161, 0.0155, 0.0154],
         [0.0155, 0.0158, 0.0154,  ..., 0.0161, 0.0155, 0.0154],
         [0.0155, 0.0158, 0.0154,  ..., 0.0161, 0.0155, 0.0154],
         [0.9536, 0.9526, 0.9539,  ..., 0.9518, 0.9535, 0.9538]],
        [[0.0156, 0.0156, 0.0151,  ..., 0.0062, 0.0158, 0.0158],
         [0.0156, 0.0156, 0.0151,  ..., 0.0062, 0.0158, 0.0158],
         [0.0156, 0.0156, 0.0151,  ..., 0.9815, 0.0158, 0.0158],
         [0.9533, 0.9531, 0.9547,  ..., 0.0062, 0.9527, 0.9527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:46,653 [Process: 0] Synchronize training processes
2024-08-16 16:33:46,654 [Process: 0] Evaluating...
2024-08-16 16:33:46,655 [Process: 0] EPOCH 199:
2024-08-16 16:33:46,657 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0176, 0.0173, 0.0175,  ..., 0.0173, 0.0175, 0.0176],
         [0.0176, 0.0173, 0.0175,  ..., 0.0173, 0.0175, 0.0176],
         [0.0176, 0.0173, 0.0175,  ..., 0.0173, 0.0175, 0.0176],
         [0.9471, 0.9481, 0.9476,  ..., 0.9482, 0.9475, 0.9473]],
        [[0.0173, 0.0173, 0.0171,  ..., 0.0171, 0.0171, 0.0173],
         [0.0173, 0.0173, 0.0171,  ..., 0.0171, 0.0171, 0.0173],
         [0.0173, 0.0173, 0.0171,  ..., 0.0171, 0.0171, 0.0173],
         [0.9481, 0.9482, 0.9487,  ..., 0.9487, 0.9487, 0.9481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0164, 0.0161, 0.0159,  ..., 0.0164, 0.0157, 0.0162],
         [0.0164, 0.0161, 0.0159,  ..., 0.0164, 0.0157, 0.0162],
         [0.0164, 0.0161, 0.0159,  ..., 0.0164, 0.0157, 0.0162],
         [0.9508, 0.9517, 0.9524,  ..., 0.9509, 0.9530, 0.9514]],
        [[0.0154, 0.0156, 0.0162,  ..., 0.0012, 0.0157, 0.0159],
         [0.0154, 0.0156, 0.0162,  ..., 0.0012, 0.0157, 0.0159],
         [0.0154, 0.0156, 0.0162,  ..., 0.9963, 0.0157, 0.0159],
         [0.9537, 0.9531, 0.9515,  ..., 0.0012, 0.9528, 0.9523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:48,737 [Process: 0] Synchronize training processes
2024-08-16 16:33:48,738 [Process: 0] Evaluating...
2024-08-16 16:33:48,740 [Process: 0] EPOCH 200:
2024-08-16 16:33:48,742 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0173, 0.0176, 0.0177,  ..., 0.0174, 0.0170, 0.0170],
         [0.0173, 0.0176, 0.0177,  ..., 0.0174, 0.0170, 0.0170],
         [0.0173, 0.0176, 0.0177,  ..., 0.0174, 0.0170, 0.0170],
         [0.9482, 0.9471, 0.9470,  ..., 0.9477, 0.9491, 0.9489]],
        [[0.0173, 0.0172, 0.0173,  ..., 0.0174, 0.0171, 0.0170],
         [0.0173, 0.0172, 0.0173,  ..., 0.0174, 0.0171, 0.0170],
         [0.0173, 0.0172, 0.0173,  ..., 0.0174, 0.0171, 0.0170],
         [0.9482, 0.9483, 0.9480,  ..., 0.9477, 0.9488, 0.9490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5711e-02, 1.5875e-02, 1.5804e-02,  ..., 1.5552e-02,
          1.5978e-02, 1.5739e-02],
         [1.5711e-02, 1.5875e-02, 1.5804e-02,  ..., 1.5552e-02,
          1.5978e-02, 1.5739e-02],
         [1.5711e-02, 1.5875e-02, 1.5804e-02,  ..., 1.5552e-02,
          1.5978e-02, 1.5739e-02],
         [9.5287e-01, 9.5238e-01, 9.5259e-01,  ..., 9.5334e-01,
          9.5207e-01, 9.5278e-01]],
        [[1.5575e-02, 1.5277e-02, 1.5294e-02,  ..., 5.8040e-04,
          1.5329e-02, 1.6022e-02],
         [1.5575e-02, 1.5277e-02, 1.5294e-02,  ..., 5.8040e-04,
          1.5329e-02, 1.6022e-02],
         [1.5575e-02, 1.5277e-02, 1.5294e-02,  ..., 9.9826e-01,
          1.5329e-02, 1.6022e-02],
         [9.5327e-01, 9.5417e-01, 9.5412e-01,  ..., 5.8040e-04,
          9.5401e-01, 9.5194e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0174, 0.0172, 0.0171,  ..., 0.0173, 0.0168, 0.0169],
         [0.0174, 0.0172, 0.0171,  ..., 0.0173, 0.0168, 0.0169],
         [0.0174, 0.0172, 0.0171,  ..., 0.0173, 0.0168, 0.0169],
         [0.9478, 0.9485, 0.9486,  ..., 0.9481, 0.9497, 0.9492]],
        [[0.0173, 0.0170, 0.0169,  ..., 0.0164, 0.0166, 0.0167],
         [0.0173, 0.0170, 0.0169,  ..., 0.0164, 0.0166, 0.0167],
         [0.0173, 0.0170, 0.0169,  ..., 0.0164, 0.0166, 0.0167],
         [0.9482, 0.9490, 0.9492,  ..., 0.9507, 0.9501, 0.9500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0158, 0.0154,  ..., 0.0154, 0.9927, 0.0158],
         [0.0157, 0.0158, 0.0154,  ..., 0.0154, 0.0024, 0.0158],
         [0.0157, 0.0158, 0.0154,  ..., 0.0154, 0.0024, 0.0158],
         [0.9529, 0.9525, 0.9539,  ..., 0.9537, 0.0024, 0.9526]],
        [[0.0151, 0.0150, 0.0154,  ..., 0.0034, 0.0155, 0.0152],
         [0.0151, 0.0150, 0.0154,  ..., 0.0034, 0.0155, 0.0152],
         [0.0151, 0.0150, 0.0154,  ..., 0.9897, 0.0155, 0.0152],
         [0.9548, 0.9550, 0.9538,  ..., 0.0034, 0.9534, 0.9543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:50,821 [Process: 0] Synchronize training processes
2024-08-16 16:33:50,822 [Process: 0] Evaluating...
2024-08-16 16:33:50,824 [Process: 0] EPOCH 201:
2024-08-16 16:33:50,826 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0168, 0.0170, 0.0169,  ..., 0.0170, 0.0167, 0.0168],
         [0.0168, 0.0170, 0.0169,  ..., 0.0170, 0.0167, 0.0168],
         [0.0168, 0.0170, 0.0169,  ..., 0.0170, 0.0167, 0.0168],
         [0.9497, 0.9490, 0.9494,  ..., 0.9491, 0.9498, 0.9497]],
        [[0.0165, 0.0166, 0.0166,  ..., 0.0170, 0.0168, 0.0168],
         [0.0165, 0.0166, 0.0166,  ..., 0.0170, 0.0168, 0.0168],
         [0.0165, 0.0166, 0.0166,  ..., 0.0170, 0.0168, 0.0168],
         [0.9505, 0.9501, 0.9502,  ..., 0.9490, 0.9495, 0.9497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5725e-02, 1.5436e-02, 1.5361e-02,  ..., 1.5376e-02,
          2.6907e-01, 1.5139e-02],
         [1.5725e-02, 1.5436e-02, 1.5361e-02,  ..., 1.5376e-02,
          5.9555e-02, 1.5139e-02],
         [1.5725e-02, 1.5436e-02, 1.5361e-02,  ..., 1.5376e-02,
          6.1182e-01, 1.5139e-02],
         [9.5282e-01, 9.5369e-01, 9.5392e-01,  ..., 9.5387e-01,
          5.9555e-02, 9.5458e-01]],
        [[1.5203e-02, 1.5551e-02, 1.5056e-02,  ..., 9.2698e-04,
          1.5139e-02, 1.5512e-02],
         [1.5203e-02, 1.5551e-02, 1.5056e-02,  ..., 9.2698e-04,
          1.5139e-02, 1.5512e-02],
         [1.5203e-02, 1.5551e-02, 1.5056e-02,  ..., 9.9722e-01,
          1.5139e-02, 1.5512e-02],
         [9.5439e-01, 9.5335e-01, 9.5483e-01,  ..., 9.2698e-04,
          9.5458e-01, 9.5347e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:52,897 [Process: 0] Synchronize training processes
2024-08-16 16:33:52,897 [Process: 0] Evaluating...
2024-08-16 16:33:52,906 [Process: 0] EPOCH 202:
2024-08-16 16:33:52,908 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0169, 0.0168, 0.0165,  ..., 0.0169, 0.0164, 0.0170],
         [0.0169, 0.0168, 0.0165,  ..., 0.0169, 0.0164, 0.0170],
         [0.0169, 0.0168, 0.0165,  ..., 0.0169, 0.0164, 0.0170],
         [0.9494, 0.9495, 0.9505,  ..., 0.9494, 0.9507, 0.9490]],
        [[0.0167, 0.0170, 0.0167,  ..., 0.0167, 0.0170, 0.0165],
         [0.0167, 0.0170, 0.0167,  ..., 0.0167, 0.0170, 0.0165],
         [0.0167, 0.0170, 0.0167,  ..., 0.0167, 0.0170, 0.0165],
         [0.9499, 0.9490, 0.9500,  ..., 0.9500, 0.9489, 0.9504]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5602e-02, 1.5457e-02, 1.5392e-02,  ..., 1.5588e-02,
          4.2205e-02, 1.5813e-02],
         [1.5602e-02, 1.5457e-02, 1.5392e-02,  ..., 1.5588e-02,
          2.6286e-02, 1.5813e-02],
         [1.5602e-02, 1.5457e-02, 1.5392e-02,  ..., 1.5588e-02,
          2.6286e-02, 1.5813e-02],
         [9.5319e-01, 9.5363e-01, 9.5382e-01,  ..., 9.5324e-01,
          9.0522e-01, 9.5256e-01]],
        [[1.5170e-02, 1.5170e-02, 1.5637e-02,  ..., 8.6757e-05,
          1.5603e-02, 1.4982e-02],
         [1.5170e-02, 1.5170e-02, 1.5637e-02,  ..., 8.6757e-05,
          1.5603e-02, 1.4982e-02],
         [1.5170e-02, 1.5170e-02, 1.5637e-02,  ..., 9.9974e-01,
          1.5603e-02, 1.4982e-02],
         [9.5449e-01, 9.5449e-01, 9.5309e-01,  ..., 8.6757e-05,
          9.5319e-01, 9.5505e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:54,985 [Process: 0] Synchronize training processes
2024-08-16 16:33:54,985 [Process: 0] Evaluating...
2024-08-16 16:33:54,987 [Process: 0] EPOCH 203:
2024-08-16 16:33:54,989 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0166, 0.0166, 0.0168,  ..., 0.0165, 0.0166, 0.0169],
         [0.0166, 0.0166, 0.0168,  ..., 0.0165, 0.0166, 0.0169],
         [0.0166, 0.0166, 0.0168,  ..., 0.0165, 0.0166, 0.0169],
         [0.9502, 0.9502, 0.9495,  ..., 0.9506, 0.9502, 0.9493]],
        [[0.0164, 0.0168, 0.0170,  ..., 0.0170, 0.0166, 0.0164],
         [0.0164, 0.0168, 0.0170,  ..., 0.0170, 0.0166, 0.0164],
         [0.0164, 0.0168, 0.0170,  ..., 0.0170, 0.0166, 0.0164],
         [0.9508, 0.9495, 0.9491,  ..., 0.9489, 0.9503, 0.9508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5172e-02, 1.5461e-02, 1.5238e-02,  ..., 1.5614e-02,
          6.9453e-02, 1.5315e-02],
         [1.5172e-02, 1.5461e-02, 1.5238e-02,  ..., 1.5614e-02,
          3.6120e-02, 1.5315e-02],
         [1.5172e-02, 1.5461e-02, 1.5238e-02,  ..., 1.5614e-02,
          3.6120e-02, 1.5315e-02],
         [9.5448e-01, 9.5362e-01, 9.5429e-01,  ..., 9.5316e-01,
          8.5831e-01, 9.5405e-01]],
        [[1.5389e-02, 1.5088e-02, 1.4525e-02,  ..., 5.9333e-05,
          1.5148e-02, 1.4858e-02],
         [1.5389e-02, 1.5088e-02, 1.4525e-02,  ..., 5.9333e-05,
          1.5148e-02, 1.4858e-02],
         [1.5389e-02, 1.5088e-02, 1.4525e-02,  ..., 9.9982e-01,
          1.5148e-02, 1.4858e-02],
         [9.5383e-01, 9.5474e-01, 9.5643e-01,  ..., 5.9333e-05,
          9.5456e-01, 9.5543e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:57,075 [Process: 0] Synchronize training processes
2024-08-16 16:33:57,075 [Process: 0] Evaluating...
2024-08-16 16:33:57,077 [Process: 0] EPOCH 204:
2024-08-16 16:33:57,079 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0164, 0.0165, 0.0166,  ..., 0.0164, 0.0164, 0.0162],
         [0.0164, 0.0165, 0.0166,  ..., 0.0164, 0.0164, 0.0162],
         [0.0164, 0.0165, 0.0166,  ..., 0.0164, 0.0164, 0.0162],
         [0.9507, 0.9505, 0.9501,  ..., 0.9508, 0.9508, 0.9514]],
        [[0.0164, 0.0163, 0.0167,  ..., 0.0164, 0.0166, 0.0164],
         [0.0164, 0.0163, 0.0167,  ..., 0.0164, 0.0166, 0.0164],
         [0.0164, 0.0163, 0.0167,  ..., 0.0164, 0.0166, 0.0164],
         [0.9509, 0.9511, 0.9499,  ..., 0.9507, 0.9503, 0.9509]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0149, 0.0150, 0.0151,  ..., 0.0155, 0.2079, 0.0152],
         [0.0149, 0.0150, 0.0151,  ..., 0.0155, 0.0471, 0.0152],
         [0.0149, 0.0150, 0.0151,  ..., 0.0155, 0.0463, 0.0152],
         [0.9553, 0.9550, 0.9548,  ..., 0.9535, 0.6988, 0.9545]],
        [[0.0151, 0.0147, 0.0153,  ..., 0.0015, 0.0149, 0.0144],
         [0.0151, 0.0147, 0.0153,  ..., 0.0015, 0.0149, 0.0144],
         [0.0151, 0.0147, 0.0153,  ..., 0.9955, 0.0149, 0.0144],
         [0.9548, 0.9560, 0.9540,  ..., 0.0015, 0.9552, 0.9567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:33:59,160 [Process: 0] Synchronize training processes
2024-08-16 16:33:59,160 [Process: 0] Evaluating...
2024-08-16 16:33:59,162 [Process: 0] EPOCH 205:
2024-08-16 16:33:59,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0168, 0.0166,  ..., 0.0165, 0.0166, 0.0164],
         [0.0163, 0.0168, 0.0166,  ..., 0.0165, 0.0166, 0.0164],
         [0.0163, 0.0168, 0.0166,  ..., 0.0165, 0.0166, 0.0164],
         [0.9512, 0.9495, 0.9503,  ..., 0.9504, 0.9501, 0.9509]],
        [[0.0163, 0.0162, 0.0166,  ..., 0.0164, 0.0168, 0.0164],
         [0.0163, 0.0162, 0.0166,  ..., 0.0164, 0.0168, 0.0164],
         [0.0163, 0.0162, 0.0166,  ..., 0.0164, 0.0168, 0.0164],
         [0.9511, 0.9514, 0.9501,  ..., 0.9509, 0.9495, 0.9508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4987e-02, 1.5099e-02, 1.5087e-02,  ..., 1.5279e-02,
          1.6794e-02, 1.5196e-02],
         [1.4987e-02, 1.5099e-02, 1.5087e-02,  ..., 1.5279e-02,
          1.6794e-02, 1.5196e-02],
         [1.4987e-02, 1.5099e-02, 1.5087e-02,  ..., 1.5279e-02,
          1.6794e-02, 1.5196e-02],
         [9.5504e-01, 9.5470e-01, 9.5474e-01,  ..., 9.5416e-01,
          9.4962e-01, 9.5441e-01]],
        [[1.5180e-02, 1.4694e-02, 1.4843e-02,  ..., 4.0520e-04,
          1.5059e-02, 1.4926e-02],
         [1.5180e-02, 1.4694e-02, 1.4843e-02,  ..., 4.0520e-04,
          1.5059e-02, 1.4926e-02],
         [1.5180e-02, 1.4694e-02, 1.4843e-02,  ..., 9.9878e-01,
          1.5059e-02, 1.4926e-02],
         [9.5446e-01, 9.5592e-01, 9.5547e-01,  ..., 4.0520e-04,
          9.5482e-01, 9.5522e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:01,246 [Process: 0] Synchronize training processes
2024-08-16 16:34:01,246 [Process: 0] Evaluating...
2024-08-16 16:34:01,248 [Process: 0] EPOCH 206:
2024-08-16 16:34:01,250 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0164, 0.0167, 0.0165,  ..., 0.0162, 0.0159, 0.0161],
         [0.0164, 0.0167, 0.0165,  ..., 0.0162, 0.0159, 0.0161],
         [0.0164, 0.0167, 0.0165,  ..., 0.0162, 0.0159, 0.0161],
         [0.9509, 0.9499, 0.9505,  ..., 0.9513, 0.9522, 0.9517]],
        [[0.0164, 0.0162, 0.0166,  ..., 0.0164, 0.0164, 0.0158],
         [0.0164, 0.0162, 0.0166,  ..., 0.0164, 0.0164, 0.0158],
         [0.0164, 0.0162, 0.0166,  ..., 0.0164, 0.0164, 0.0158],
         [0.9508, 0.9514, 0.9502,  ..., 0.9509, 0.9507, 0.9526]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4809e-02, 1.5193e-02, 1.5150e-02,  ..., 1.4548e-02,
          1.4984e-02, 1.5522e-02],
         [1.4809e-02, 1.5193e-02, 1.5150e-02,  ..., 1.4548e-02,
          1.4984e-02, 1.5522e-02],
         [1.4809e-02, 1.5193e-02, 1.5150e-02,  ..., 1.4548e-02,
          1.4984e-02, 1.5522e-02],
         [9.5557e-01, 9.5442e-01, 9.5455e-01,  ..., 9.5636e-01,
          9.5505e-01, 9.5343e-01]],
        [[1.5507e-02, 1.5013e-02, 1.4382e-02,  ..., 1.3597e-04,
          1.4196e-02, 1.4642e-02],
         [1.5507e-02, 1.5013e-02, 1.4382e-02,  ..., 1.3597e-04,
          1.4196e-02, 1.4642e-02],
         [1.5507e-02, 1.5013e-02, 1.4382e-02,  ..., 9.9959e-01,
          1.4196e-02, 1.4642e-02],
         [9.5348e-01, 9.5496e-01, 9.5685e-01,  ..., 1.3597e-04,
          9.5741e-01, 9.5607e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 16:34:03,341 [Process: 0] Synchronize training processes
2024-08-16 16:34:03,341 [Process: 0] Evaluating...
2024-08-16 16:34:03,343 [Process: 0] EPOCH 207:
2024-08-16 16:34:03,345 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0164, 0.0162, 0.0165,  ..., 0.0163, 0.0159, 0.0162],
         [0.0164, 0.0162, 0.0165,  ..., 0.0163, 0.0159, 0.0162],
         [0.0164, 0.0162, 0.0165,  ..., 0.0163, 0.0159, 0.0162],
         [0.9507, 0.9513, 0.9506,  ..., 0.9510, 0.9523, 0.9514]],
        [[0.0159, 0.0161, 0.0160,  ..., 0.0160, 0.0162, 0.0160],
         [0.0159, 0.0161, 0.0160,  ..., 0.0160, 0.0162, 0.0160],
         [0.0159, 0.0161, 0.0160,  ..., 0.0160, 0.0162, 0.0160],
         [0.9523, 0.9517, 0.9520,  ..., 0.9519, 0.9515, 0.9520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4933e-02, 1.5146e-02, 1.4927e-02,  ..., 1.5071e-02,
          1.5024e-02, 1.4695e-02],
         [1.4933e-02, 1.5146e-02, 1.4927e-02,  ..., 1.5071e-02,
          1.5024e-02, 1.4695e-02],
         [1.4933e-02, 1.5146e-02, 1.4927e-02,  ..., 1.5071e-02,
          1.5024e-02, 1.4695e-02],
         [9.5520e-01, 9.5456e-01, 9.5522e-01,  ..., 9.5479e-01,
          9.5493e-01, 9.5591e-01]],
        [[1.4689e-02, 1.4600e-02, 1.4673e-02,  ..., 5.2463e-05,
          1.4184e-02, 1.4602e-02],
         [1.4689e-02, 1.4600e-02, 1.4673e-02,  ..., 5.2463e-05,
          1.4184e-02, 1.4602e-02],
         [1.4689e-02, 1.4600e-02, 1.4673e-02,  ..., 9.9984e-01,
          1.4184e-02, 1.4602e-02],
         [9.5593e-01, 9.5620e-01, 9.5598e-01,  ..., 5.2463e-05,
          9.5745e-01, 9.5619e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:05,432 [Process: 0] Synchronize training processes
2024-08-16 16:34:05,432 [Process: 0] Evaluating...
2024-08-16 16:34:05,434 [Process: 0] EPOCH 208:
2024-08-16 16:34:05,436 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0160, 0.0160,  ..., 0.0162, 0.0164, 0.0162],
         [0.0163, 0.0160, 0.0160,  ..., 0.0162, 0.0164, 0.0162],
         [0.0163, 0.0160, 0.0160,  ..., 0.0162, 0.0164, 0.0162],
         [0.9512, 0.9519, 0.9521,  ..., 0.9514, 0.9509, 0.9515]],
        [[0.0163, 0.0162, 0.0159,  ..., 0.0161, 0.0159, 0.0157],
         [0.0163, 0.0162, 0.0159,  ..., 0.0161, 0.0159, 0.0157],
         [0.0163, 0.0162, 0.0159,  ..., 0.0161, 0.0159, 0.0157],
         [0.9511, 0.9513, 0.9524,  ..., 0.9516, 0.9522, 0.9528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:34:07,522 [Process: 0] Synchronize training processes
2024-08-16 16:34:07,522 [Process: 0] Evaluating...
2024-08-16 16:34:07,524 [Process: 0] EPOCH 209:
2024-08-16 16:34:07,526 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4850e-02, 1.4886e-02, 1.5507e-02,  ..., 1.4940e-02,
          1.4731e-02, 1.4762e-02],
         [1.4850e-02, 1.4886e-02, 1.5507e-02,  ..., 1.4940e-02,
          1.4731e-02, 1.4762e-02],
         [1.4850e-02, 1.4886e-02, 1.5507e-02,  ..., 1.4940e-02,
          1.4731e-02, 1.4762e-02],
         [9.5545e-01, 9.5534e-01, 9.5348e-01,  ..., 9.5518e-01,
          9.5581e-01, 9.5571e-01]],
        [[1.4617e-02, 1.4747e-02, 1.4677e-02,  ..., 3.1623e-04,
          1.4981e-02, 1.4148e-02],
         [1.4617e-02, 1.4747e-02, 1.4677e-02,  ..., 3.1623e-04,
          1.4981e-02, 1.4148e-02],
         [1.4617e-02, 1.4747e-02, 1.4677e-02,  ..., 9.9905e-01,
          1.4981e-02, 1.4148e-02],
         [9.5615e-01, 9.5576e-01, 9.5597e-01,  ..., 3.1623e-04,
          9.5506e-01, 9.5756e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0160, 0.0159, 0.0162,  ..., 0.0163, 0.0156, 0.0161],
         [0.0160, 0.0159, 0.0162,  ..., 0.0163, 0.0156, 0.0161],
         [0.0160, 0.0159, 0.0162,  ..., 0.0163, 0.0156, 0.0161],
         [0.9521, 0.9522, 0.9515,  ..., 0.9511, 0.9533, 0.9516]],
        [[0.0159, 0.0160, 0.0155,  ..., 0.0155, 0.0161, 0.0155],
         [0.0159, 0.0160, 0.0155,  ..., 0.0155, 0.0161, 0.0155],
         [0.0159, 0.0160, 0.0155,  ..., 0.0155, 0.0161, 0.0155],
         [0.9524, 0.9521, 0.9535,  ..., 0.9536, 0.9517, 0.9536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:09,623 [Process: 0] Synchronize training processes
2024-08-16 16:34:09,623 [Process: 0] Evaluating...
2024-08-16 16:34:09,625 [Process: 0] EPOCH 210:
2024-08-16 16:34:09,627 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4896e-02, 1.4743e-02, 1.4464e-02,  ..., 1.4705e-02,
          1.4691e-02, 1.4768e-02],
         [1.4896e-02, 1.4743e-02, 1.4464e-02,  ..., 1.4705e-02,
          1.4691e-02, 1.4768e-02],
         [1.4896e-02, 1.4743e-02, 1.4464e-02,  ..., 1.4705e-02,
          1.4691e-02, 1.4768e-02],
         [9.5531e-01, 9.5577e-01, 9.5661e-01,  ..., 9.5589e-01,
          9.5593e-01, 9.5570e-01]],
        [[1.4119e-02, 1.4687e-02, 1.4006e-02,  ..., 1.3422e-04,
          1.4562e-02, 1.4740e-02],
         [1.4119e-02, 1.4687e-02, 1.4006e-02,  ..., 1.3422e-04,
          1.4562e-02, 1.4740e-02],
         [1.4119e-02, 1.4687e-02, 1.4006e-02,  ..., 9.9960e-01,
          1.4562e-02, 1.4740e-02],
         [9.5764e-01, 9.5594e-01, 9.5798e-01,  ..., 1.3422e-04,
          9.5631e-01, 9.5578e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0158, 0.0158, 0.0161,  ..., 0.0163, 0.0158, 0.0155],
         [0.0158, 0.0158, 0.0161,  ..., 0.0163, 0.0158, 0.0155],
         [0.0158, 0.0158, 0.0161,  ..., 0.0163, 0.0158, 0.0155],
         [0.9526, 0.9527, 0.9517,  ..., 0.9512, 0.9527, 0.9534]],
        [[0.0158, 0.0157, 0.0159,  ..., 0.0156, 0.0156, 0.0155],
         [0.0158, 0.0157, 0.0159,  ..., 0.0156, 0.0156, 0.0155],
         [0.0158, 0.0157, 0.0159,  ..., 0.0156, 0.0156, 0.0155],
         [0.9525, 0.9530, 0.9523,  ..., 0.9532, 0.9532, 0.9535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:11,704 [Process: 0] Synchronize training processes
2024-08-16 16:34:11,704 [Process: 0] Evaluating...
2024-08-16 16:34:11,706 [Process: 0] EPOCH 211:
2024-08-16 16:34:11,708 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4662e-02, 1.4328e-02, 1.4144e-02,  ..., 1.4509e-02,
          1.4985e-02, 1.4469e-02],
         [1.4662e-02, 1.4328e-02, 1.4144e-02,  ..., 1.4509e-02,
          1.4985e-02, 1.4469e-02],
         [1.4662e-02, 1.4328e-02, 1.4144e-02,  ..., 1.4509e-02,
          1.4985e-02, 1.4469e-02],
         [9.5602e-01, 9.5701e-01, 9.5757e-01,  ..., 9.5647e-01,
          9.5504e-01, 9.5659e-01]],
        [[1.4616e-02, 1.4866e-02, 1.4492e-02,  ..., 9.4061e-05,
          1.5234e-02, 1.4074e-02],
         [1.4616e-02, 1.4866e-02, 1.4492e-02,  ..., 9.4061e-05,
          1.5234e-02, 1.4074e-02],
         [1.4616e-02, 1.4866e-02, 1.4492e-02,  ..., 9.9972e-01,
          1.5234e-02, 1.4074e-02],
         [9.5615e-01, 9.5540e-01, 9.5652e-01,  ..., 9.4061e-05,
          9.5430e-01, 9.5778e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0155, 0.0161, 0.0154,  ..., 0.0154, 0.0156, 0.0156],
         [0.0155, 0.0161, 0.0154,  ..., 0.0154, 0.0156, 0.0156],
         [0.0155, 0.0161, 0.0154,  ..., 0.0154, 0.0156, 0.0156],
         [0.9535, 0.9517, 0.9538,  ..., 0.9537, 0.9533, 0.9532]],
        [[0.0156, 0.0154, 0.0159,  ..., 0.0156, 0.0158, 0.0154],
         [0.0156, 0.0154, 0.0159,  ..., 0.0156, 0.0158, 0.0154],
         [0.0156, 0.0154, 0.0159,  ..., 0.0156, 0.0158, 0.0154],
         [0.9532, 0.9538, 0.9522,  ..., 0.9532, 0.9526, 0.9537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:13,786 [Process: 0] Synchronize training processes
2024-08-16 16:34:13,786 [Process: 0] Evaluating...
2024-08-16 16:34:13,794 [Process: 0] EPOCH 212:
2024-08-16 16:34:13,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0147, 0.0141, 0.0143,  ..., 0.0144, 0.0146, 0.0143],
         [0.0147, 0.0141, 0.0143,  ..., 0.0144, 0.0146, 0.0143],
         [0.0147, 0.0141, 0.0143,  ..., 0.0144, 0.0146, 0.0143],
         [0.9559, 0.9577, 0.9570,  ..., 0.9569, 0.9562, 0.9570]],
        [[0.0147, 0.0145, 0.0139,  ..., 0.0011, 0.0141, 0.0138],
         [0.0147, 0.0145, 0.0139,  ..., 0.0011, 0.0141, 0.0138],
         [0.0147, 0.0145, 0.0139,  ..., 0.9967, 0.0141, 0.0138],
         [0.9560, 0.9564, 0.9584,  ..., 0.0011, 0.9577, 0.9586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0159, 0.0157, 0.0155,  ..., 0.0159, 0.0159, 0.0155],
         [0.0159, 0.0157, 0.0155,  ..., 0.0159, 0.0159, 0.0155],
         [0.0159, 0.0157, 0.0155,  ..., 0.0159, 0.0159, 0.0155],
         [0.9524, 0.9530, 0.9534,  ..., 0.9524, 0.9524, 0.9536]],
        [[0.0156, 0.0156, 0.0158,  ..., 0.0153, 0.0154, 0.0157],
         [0.0156, 0.0156, 0.0158,  ..., 0.0153, 0.0154, 0.0157],
         [0.0156, 0.0156, 0.0158,  ..., 0.0153, 0.0154, 0.0157],
         [0.9532, 0.9533, 0.9526,  ..., 0.9541, 0.9539, 0.9528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:15,901 [Process: 0] Synchronize training processes
2024-08-16 16:34:15,901 [Process: 0] Evaluating...
2024-08-16 16:34:15,903 [Process: 0] EPOCH 213:
2024-08-16 16:34:15,905 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0140, 0.0140, 0.0146,  ..., 0.0144, 0.0142, 0.0136],
         [0.0140, 0.0140, 0.0146,  ..., 0.0144, 0.0142, 0.0136],
         [0.0140, 0.0140, 0.0146,  ..., 0.0144, 0.0142, 0.0136],
         [0.9579, 0.9580, 0.9561,  ..., 0.9569, 0.9573, 0.9592]],
        [[0.0139, 0.0136, 0.0145,  ..., 0.0013, 0.0133, 0.0142],
         [0.0139, 0.0136, 0.0145,  ..., 0.0013, 0.0133, 0.0142],
         [0.0139, 0.0136, 0.0145,  ..., 0.9960, 0.0133, 0.0142],
         [0.9583, 0.9592, 0.9565,  ..., 0.0013, 0.9600, 0.9574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0155, 0.0156, 0.0157,  ..., 0.0154, 0.0159, 0.0153],
         [0.0155, 0.0156, 0.0157,  ..., 0.0154, 0.0159, 0.0153],
         [0.0155, 0.0156, 0.0157,  ..., 0.0154, 0.0159, 0.0153],
         [0.9536, 0.9531, 0.9528,  ..., 0.9537, 0.9522, 0.9540]],
        [[0.0155, 0.0157, 0.0156,  ..., 0.0156, 0.0155, 0.0155],
         [0.0155, 0.0157, 0.0156,  ..., 0.0156, 0.0155, 0.0155],
         [0.0155, 0.0157, 0.0156,  ..., 0.0156, 0.0155, 0.0155],
         [0.9535, 0.9529, 0.9532,  ..., 0.9533, 0.9536, 0.9535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:18,002 [Process: 0] Synchronize training processes
2024-08-16 16:34:18,002 [Process: 0] Evaluating...
2024-08-16 16:34:18,004 [Process: 0] EPOCH 214:
2024-08-16 16:34:18,007 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4338e-02, 1.4284e-02, 1.4492e-02,  ..., 1.4194e-02,
          1.4245e-02, 1.3785e-02],
         [1.4338e-02, 1.4284e-02, 1.4492e-02,  ..., 1.4194e-02,
          1.4245e-02, 1.3785e-02],
         [1.4338e-02, 1.4284e-02, 1.4492e-02,  ..., 1.4194e-02,
          1.4245e-02, 1.3785e-02],
         [9.5698e-01, 9.5715e-01, 9.5652e-01,  ..., 9.5742e-01,
          9.5727e-01, 9.5864e-01]],
        [[1.4218e-02, 1.3764e-02, 1.3487e-02,  ..., 1.8966e-04,
          1.4093e-02, 1.3585e-02],
         [1.4218e-02, 1.3764e-02, 1.3487e-02,  ..., 1.8966e-04,
          1.4093e-02, 1.3585e-02],
         [1.4218e-02, 1.3764e-02, 1.3487e-02,  ..., 9.9943e-01,
          1.4093e-02, 1.3585e-02],
         [9.5734e-01, 9.5871e-01, 9.5954e-01,  ..., 1.8966e-04,
          9.5772e-01, 9.5924e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0151, 0.0155, 0.0153,  ..., 0.0151, 0.0153, 0.0148],
         [0.0151, 0.0155, 0.0153,  ..., 0.0151, 0.0153, 0.0148],
         [0.0151, 0.0155, 0.0153,  ..., 0.0151, 0.0153, 0.0148],
         [0.9546, 0.9535, 0.9542,  ..., 0.9547, 0.9540, 0.9555]],
        [[0.0156, 0.0156, 0.0155,  ..., 0.0149, 0.0152, 0.0148],
         [0.0156, 0.0156, 0.0155,  ..., 0.0149, 0.0152, 0.0148],
         [0.0156, 0.0156, 0.0155,  ..., 0.0149, 0.0152, 0.0148],
         [0.9531, 0.9532, 0.9535,  ..., 0.9554, 0.9545, 0.9557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:20,081 [Process: 0] Synchronize training processes
2024-08-16 16:34:20,082 [Process: 0] Evaluating...
2024-08-16 16:34:20,084 [Process: 0] EPOCH 215:
2024-08-16 16:34:20,086 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4025e-02, 1.4140e-02, 1.4245e-02,  ..., 1.4000e-02,
          1.3920e-02, 1.3836e-02],
         [1.4025e-02, 1.4140e-02, 1.4245e-02,  ..., 1.4000e-02,
          1.3920e-02, 1.3836e-02],
         [1.4025e-02, 1.4140e-02, 1.4245e-02,  ..., 1.4000e-02,
          1.3920e-02, 1.3836e-02],
         [9.5792e-01, 9.5758e-01, 9.5726e-01,  ..., 9.5800e-01,
          9.5824e-01, 9.5849e-01]],
        [[1.3740e-02, 1.3553e-02, 1.3646e-02,  ..., 7.7806e-04,
          1.3602e-02, 1.4430e-02],
         [1.3740e-02, 1.3553e-02, 1.3646e-02,  ..., 7.7806e-04,
          1.3602e-02, 1.4430e-02],
         [1.3740e-02, 1.3553e-02, 1.3646e-02,  ..., 9.9767e-01,
          1.3602e-02, 1.4430e-02],
         [9.5878e-01, 9.5934e-01, 9.5906e-01,  ..., 7.7806e-04,
          9.5919e-01, 9.5671e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0153, 0.0153, 0.0151,  ..., 0.0154, 0.0154, 0.0150],
         [0.0153, 0.0153, 0.0151,  ..., 0.0154, 0.0154, 0.0150],
         [0.0153, 0.0153, 0.0151,  ..., 0.0154, 0.0154, 0.0150],
         [0.9541, 0.9540, 0.9548,  ..., 0.9539, 0.9538, 0.9550]],
        [[0.0155, 0.0155, 0.0150,  ..., 0.0150, 0.0153, 0.0152],
         [0.0155, 0.0155, 0.0150,  ..., 0.0150, 0.0153, 0.0152],
         [0.0155, 0.0155, 0.0150,  ..., 0.0150, 0.0153, 0.0152],
         [0.9534, 0.9534, 0.9549,  ..., 0.9550, 0.9540, 0.9545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:22,156 [Process: 0] Synchronize training processes
2024-08-16 16:34:22,157 [Process: 0] Evaluating...
2024-08-16 16:34:22,159 [Process: 0] EPOCH 216:
2024-08-16 16:34:22,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3796e-02, 1.4193e-02, 1.4041e-02,  ..., 1.4593e-02,
          1.4311e-02, 1.4220e-02],
         [1.3796e-02, 1.4193e-02, 1.4041e-02,  ..., 1.4593e-02,
          1.4311e-02, 1.4220e-02],
         [1.3796e-02, 1.4193e-02, 1.4041e-02,  ..., 1.4593e-02,
          1.4311e-02, 1.4220e-02],
         [9.5861e-01, 9.5742e-01, 9.5788e-01,  ..., 9.5622e-01,
          9.5707e-01, 9.5734e-01]],
        [[1.3968e-02, 1.3717e-02, 1.3825e-02,  ..., 6.3313e-04,
          1.4221e-02, 1.3993e-02],
         [1.3968e-02, 1.3717e-02, 1.3825e-02,  ..., 6.3313e-04,
          1.4221e-02, 1.3993e-02],
         [1.3968e-02, 1.3717e-02, 1.3825e-02,  ..., 9.9810e-01,
          1.4221e-02, 1.3993e-02],
         [9.5810e-01, 9.5885e-01, 9.5853e-01,  ..., 6.3313e-04,
          9.5734e-01, 9.5802e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0151, 0.0151, 0.0153,  ..., 0.0149, 0.0154, 0.0155],
         [0.0151, 0.0151, 0.0153,  ..., 0.0149, 0.0154, 0.0155],
         [0.0151, 0.0151, 0.0153,  ..., 0.0149, 0.0154, 0.0155],
         [0.9546, 0.9547, 0.9540,  ..., 0.9553, 0.9539, 0.9536]],
        [[0.0152, 0.0153, 0.0152,  ..., 0.0152, 0.0150, 0.0154],
         [0.0152, 0.0153, 0.0152,  ..., 0.0152, 0.0150, 0.0154],
         [0.0152, 0.0153, 0.0152,  ..., 0.0152, 0.0150, 0.0154],
         [0.9544, 0.9541, 0.9545,  ..., 0.9543, 0.9550, 0.9537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:24,243 [Process: 0] Synchronize training processes
2024-08-16 16:34:24,243 [Process: 0] Evaluating...
2024-08-16 16:34:24,245 [Process: 0] EPOCH 217:
2024-08-16 16:34:24,247 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3882e-02, 1.4055e-02, 1.4095e-02,  ..., 1.4028e-02,
          1.4140e-02, 1.4348e-02],
         [1.3882e-02, 1.4055e-02, 1.4095e-02,  ..., 1.4028e-02,
          1.4140e-02, 1.4348e-02],
         [1.3882e-02, 1.4055e-02, 1.4095e-02,  ..., 1.4028e-02,
          1.4140e-02, 1.4348e-02],
         [9.5835e-01, 9.5783e-01, 9.5772e-01,  ..., 9.5792e-01,
          9.5758e-01, 9.5696e-01]],
        [[1.3848e-02, 1.3680e-02, 1.3573e-02,  ..., 1.6528e-04,
          1.4161e-02, 1.3657e-02],
         [1.3848e-02, 1.3680e-02, 1.3573e-02,  ..., 1.6528e-04,
          1.4161e-02, 1.3657e-02],
         [1.3848e-02, 1.3680e-02, 1.3573e-02,  ..., 9.9950e-01,
          1.4161e-02, 1.3657e-02],
         [9.5846e-01, 9.5896e-01, 9.5928e-01,  ..., 1.6528e-04,
          9.5752e-01, 9.5903e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0151, 0.0152,  ..., 0.0151, 0.0155, 0.0150],
         [0.0152, 0.0151, 0.0152,  ..., 0.0151, 0.0155, 0.0150],
         [0.0152, 0.0151, 0.0152,  ..., 0.0151, 0.0155, 0.0150],
         [0.9544, 0.9546, 0.9543,  ..., 0.9546, 0.9534, 0.9549]],
        [[0.0150, 0.0153, 0.0152,  ..., 0.0151, 0.0151, 0.0151],
         [0.0150, 0.0153, 0.0152,  ..., 0.0151, 0.0151, 0.0151],
         [0.0150, 0.0153, 0.0152,  ..., 0.0151, 0.0151, 0.0151],
         [0.9551, 0.9541, 0.9545,  ..., 0.9546, 0.9547, 0.9548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:26,334 [Process: 0] Synchronize training processes
2024-08-16 16:34:26,334 [Process: 0] Evaluating...
2024-08-16 16:34:26,336 [Process: 0] EPOCH 218:
2024-08-16 16:34:26,338 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3907e-02, 1.3839e-02, 1.4164e-02,  ..., 1.3687e-02,
          1.3809e-02, 1.3818e-02],
         [1.3907e-02, 1.3839e-02, 1.4164e-02,  ..., 1.3687e-02,
          1.3809e-02, 1.3818e-02],
         [1.3907e-02, 1.3839e-02, 1.4164e-02,  ..., 1.3687e-02,
          1.3809e-02, 1.3818e-02],
         [9.5828e-01, 9.5848e-01, 9.5751e-01,  ..., 9.5894e-01,
          9.5857e-01, 9.5855e-01]],
        [[1.3803e-02, 1.3727e-02, 1.3214e-02,  ..., 3.6945e-04,
          1.3312e-02, 1.3350e-02],
         [1.3803e-02, 1.3727e-02, 1.3214e-02,  ..., 3.6945e-04,
          1.3312e-02, 1.3350e-02],
         [1.3803e-02, 1.3727e-02, 1.3214e-02,  ..., 9.9889e-01,
          1.3312e-02, 1.3350e-02],
         [9.5859e-01, 9.5882e-01, 9.6036e-01,  ..., 3.6945e-04,
          9.6006e-01, 9.5995e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0150, 0.0145, 0.0145,  ..., 0.0150, 0.0152, 0.0149],
         [0.0150, 0.0145, 0.0145,  ..., 0.0150, 0.0152, 0.0149],
         [0.0150, 0.0145, 0.0145,  ..., 0.0150, 0.0152, 0.0149],
         [0.9549, 0.9564, 0.9564,  ..., 0.9551, 0.9543, 0.9554]],
        [[0.0146, 0.0150, 0.0151,  ..., 0.0151, 0.0150, 0.0151],
         [0.0146, 0.0150, 0.0151,  ..., 0.0151, 0.0150, 0.0151],
         [0.0146, 0.0150, 0.0151,  ..., 0.0151, 0.0150, 0.0151],
         [0.9561, 0.9550, 0.9547,  ..., 0.9546, 0.9550, 0.9546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:28,432 [Process: 0] Synchronize training processes
2024-08-16 16:34:28,433 [Process: 0] Evaluating...
2024-08-16 16:34:28,435 [Process: 0] EPOCH 219:
2024-08-16 16:34:28,437 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4145e-02, 1.3904e-02, 1.3925e-02,  ..., 1.3553e-02,
          1.4288e-02, 1.3580e-02],
         [1.4145e-02, 1.3904e-02, 1.3925e-02,  ..., 1.3553e-02,
          1.4288e-02, 1.3580e-02],
         [1.4145e-02, 1.3904e-02, 1.3925e-02,  ..., 1.3553e-02,
          1.4288e-02, 1.3580e-02],
         [9.5756e-01, 9.5829e-01, 9.5823e-01,  ..., 9.5934e-01,
          9.5714e-01, 9.5926e-01]],
        [[1.3510e-02, 1.3821e-02, 1.3402e-02,  ..., 7.3701e-04,
          1.3502e-02, 1.3826e-02],
         [1.3510e-02, 1.3821e-02, 1.3402e-02,  ..., 7.3701e-04,
          1.3502e-02, 1.3826e-02],
         [1.3510e-02, 1.3821e-02, 1.3402e-02,  ..., 9.9779e-01,
          1.3502e-02, 1.3826e-02],
         [9.5947e-01, 9.5854e-01, 9.5979e-01,  ..., 7.3701e-04,
          9.5949e-01, 9.5852e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0143, 0.0143, 0.0145,  ..., 0.0144, 0.0151, 0.0145],
         [0.0143, 0.0143, 0.0145,  ..., 0.0144, 0.0151, 0.0145],
         [0.0143, 0.0143, 0.0145,  ..., 0.0144, 0.0151, 0.0145],
         [0.9571, 0.9571, 0.9564,  ..., 0.9567, 0.9546, 0.9564]],
        [[0.0147, 0.0149, 0.0149,  ..., 0.0146, 0.0149, 0.0146],
         [0.0147, 0.0149, 0.0149,  ..., 0.0146, 0.0149, 0.0146],
         [0.0147, 0.0149, 0.0149,  ..., 0.0146, 0.0149, 0.0146],
         [0.9558, 0.9554, 0.9552,  ..., 0.9561, 0.9554, 0.9561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:30,523 [Process: 0] Synchronize training processes
2024-08-16 16:34:30,524 [Process: 0] Evaluating...
2024-08-16 16:34:30,525 [Process: 0] EPOCH 220:
2024-08-16 16:34:30,527 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3557e-02, 1.3681e-02, 1.3708e-02,  ..., 1.3671e-02,
          1.3824e-02, 1.3467e-02],
         [1.3557e-02, 1.3681e-02, 1.3708e-02,  ..., 1.3671e-02,
          1.3824e-02, 1.3467e-02],
         [1.3557e-02, 1.3681e-02, 1.3708e-02,  ..., 1.3671e-02,
          1.3824e-02, 1.3467e-02],
         [9.5933e-01, 9.5896e-01, 9.5888e-01,  ..., 9.5899e-01,
          9.5853e-01, 9.5960e-01]],
        [[1.3511e-02, 1.3456e-02, 1.3292e-02,  ..., 7.2233e-04,
          1.3392e-02, 1.3627e-02],
         [1.3511e-02, 1.3456e-02, 1.3292e-02,  ..., 7.2233e-04,
          1.3392e-02, 1.3627e-02],
         [1.3511e-02, 1.3456e-02, 1.3292e-02,  ..., 9.9783e-01,
          1.3392e-02, 1.3627e-02],
         [9.5947e-01, 9.5963e-01, 9.6012e-01,  ..., 7.2233e-04,
          9.5982e-01, 9.5912e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0146, 0.0147, 0.0144,  ..., 0.0146, 0.0153, 0.0146],
         [0.0146, 0.0147, 0.0144,  ..., 0.0146, 0.0153, 0.0146],
         [0.0146, 0.0147, 0.0144,  ..., 0.0146, 0.0153, 0.0146],
         [0.9562, 0.9559, 0.9568,  ..., 0.9561, 0.9541, 0.9561]],
        [[0.0152, 0.0151, 0.0151,  ..., 0.0149, 0.0148, 0.0151],
         [0.0152, 0.0151, 0.0151,  ..., 0.0149, 0.0148, 0.0151],
         [0.0152, 0.0151, 0.0151,  ..., 0.0149, 0.0148, 0.0151],
         [0.9543, 0.9548, 0.9547,  ..., 0.9554, 0.9555, 0.9546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:32,612 [Process: 0] Synchronize training processes
2024-08-16 16:34:32,612 [Process: 0] Evaluating...
2024-08-16 16:34:32,614 [Process: 0] EPOCH 221:
2024-08-16 16:34:32,616 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3723e-02, 1.3778e-02, 1.3697e-02,  ..., 1.3772e-02,
          1.4055e-02, 1.3803e-02],
         [1.3723e-02, 1.3778e-02, 1.3697e-02,  ..., 1.3772e-02,
          1.4055e-02, 1.3803e-02],
         [1.3723e-02, 1.3778e-02, 1.3697e-02,  ..., 1.3772e-02,
          1.4055e-02, 1.3803e-02],
         [9.5883e-01, 9.5867e-01, 9.5891e-01,  ..., 9.5868e-01,
          9.5784e-01, 9.5859e-01]],
        [[1.3634e-02, 1.3309e-02, 1.3241e-02,  ..., 1.3114e-04,
          1.3216e-02, 1.3379e-02],
         [1.3634e-02, 1.3309e-02, 1.3241e-02,  ..., 1.3114e-04,
          1.3216e-02, 1.3379e-02],
         [1.3634e-02, 1.3309e-02, 1.3241e-02,  ..., 9.9961e-01,
          1.3216e-02, 1.3379e-02],
         [9.5910e-01, 9.6007e-01, 9.6028e-01,  ..., 1.3114e-04,
          9.6035e-01, 9.5986e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:34:34,684 [Process: 0] Synchronize training processes
2024-08-16 16:34:34,684 [Process: 0] Evaluating...
2024-08-16 16:34:34,692 [Process: 0] EPOCH 222:
2024-08-16 16:34:34,694 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0143, 0.0148, 0.0144,  ..., 0.0151, 0.0147, 0.0146],
         [0.0143, 0.0148, 0.0144,  ..., 0.0151, 0.0147, 0.0146],
         [0.0143, 0.0148, 0.0144,  ..., 0.0151, 0.0147, 0.0146],
         [0.9570, 0.9557, 0.9568,  ..., 0.9548, 0.9558, 0.9563]],
        [[0.0150, 0.0148, 0.0152,  ..., 0.0148, 0.0154, 0.0149],
         [0.0150, 0.0148, 0.0152,  ..., 0.0148, 0.0154, 0.0149],
         [0.0150, 0.0148, 0.0152,  ..., 0.0148, 0.0154, 0.0149],
         [0.9550, 0.9555, 0.9545,  ..., 0.9556, 0.9539, 0.9552]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0137, 0.0138,  ..., 0.0136, 0.0137, 0.0133],
         [0.0132, 0.0137, 0.0138,  ..., 0.0136, 0.0137, 0.0133],
         [0.0132, 0.0137, 0.0138,  ..., 0.0136, 0.0137, 0.0133],
         [0.9605, 0.9590, 0.9586,  ..., 0.9592, 0.9590, 0.9600]],
        [[0.0134, 0.0131, 0.0134,  ..., 0.0011, 0.0131, 0.0134],
         [0.0134, 0.0131, 0.0134,  ..., 0.0011, 0.0131, 0.0134],
         [0.0134, 0.0131, 0.0134,  ..., 0.9968, 0.0131, 0.0134],
         [0.9597, 0.9606, 0.9597,  ..., 0.0011, 0.9606, 0.9597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:36,782 [Process: 0] Synchronize training processes
2024-08-16 16:34:36,782 [Process: 0] Evaluating...
2024-08-16 16:34:36,784 [Process: 0] EPOCH 223:
2024-08-16 16:34:36,786 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0146, 0.0143, 0.0145,  ..., 0.0144, 0.0150, 0.0142],
         [0.0146, 0.0143, 0.0145,  ..., 0.0144, 0.0150, 0.0142],
         [0.0146, 0.0143, 0.0145,  ..., 0.0144, 0.0150, 0.0142],
         [0.9562, 0.9571, 0.9566,  ..., 0.9569, 0.9551, 0.9573]],
        [[0.0148, 0.0151, 0.0152,  ..., 0.0147, 0.0148, 0.0144],
         [0.0148, 0.0151, 0.0152,  ..., 0.0147, 0.0148, 0.0144],
         [0.0148, 0.0151, 0.0152,  ..., 0.0147, 0.0148, 0.0144],
         [0.9556, 0.9547, 0.9545,  ..., 0.9559, 0.9557, 0.9567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3362e-02, 1.3739e-02, 1.3057e-02,  ..., 1.3368e-02,
          1.3451e-02, 1.3453e-02],
         [1.3362e-02, 1.3739e-02, 1.3057e-02,  ..., 1.3368e-02,
          1.3451e-02, 1.3453e-02],
         [1.3362e-02, 1.3739e-02, 1.3057e-02,  ..., 1.3368e-02,
          1.3451e-02, 1.3453e-02],
         [9.5991e-01, 9.5878e-01, 9.6083e-01,  ..., 9.5990e-01,
          9.5965e-01, 9.5964e-01]],
        [[1.3350e-02, 1.3086e-02, 1.3302e-02,  ..., 1.0899e-04,
          1.3039e-02, 1.3161e-02],
         [1.3350e-02, 1.3086e-02, 1.3302e-02,  ..., 1.0899e-04,
          1.3039e-02, 1.3161e-02],
         [1.3350e-02, 1.3086e-02, 1.3302e-02,  ..., 9.9967e-01,
          1.3039e-02, 1.3161e-02],
         [9.5995e-01, 9.6074e-01, 9.6009e-01,  ..., 1.0899e-04,
          9.6088e-01, 9.6052e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:38,875 [Process: 0] Synchronize training processes
2024-08-16 16:34:38,876 [Process: 0] Evaluating...
2024-08-16 16:34:38,878 [Process: 0] EPOCH 224:
2024-08-16 16:34:38,879 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0139, 0.0141, 0.0143,  ..., 0.0145, 0.0144, 0.0142],
         [0.0139, 0.0141, 0.0143,  ..., 0.0145, 0.0144, 0.0142],
         [0.0139, 0.0141, 0.0143,  ..., 0.0145, 0.0144, 0.0142],
         [0.9582, 0.9576, 0.9570,  ..., 0.9566, 0.9567, 0.9573]],
        [[0.0148, 0.0146, 0.0146,  ..., 0.0144, 0.0146, 0.0143],
         [0.0148, 0.0146, 0.0146,  ..., 0.0144, 0.0146, 0.0143],
         [0.0148, 0.0146, 0.0146,  ..., 0.0144, 0.0146, 0.0143],
         [0.9556, 0.9562, 0.9563,  ..., 0.9568, 0.9562, 0.9570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0133, 0.0134,  ..., 0.0131, 0.0135, 0.0138],
         [0.0132, 0.0133, 0.0134,  ..., 0.0131, 0.0135, 0.0138],
         [0.0132, 0.0133, 0.0134,  ..., 0.0131, 0.0135, 0.0138],
         [0.9605, 0.9600, 0.9598,  ..., 0.9607, 0.9595, 0.9586]],
        [[0.0131, 0.0134, 0.0133,  ..., 0.0011, 0.0131, 0.0130],
         [0.0131, 0.0134, 0.0133,  ..., 0.0011, 0.0131, 0.0130],
         [0.0131, 0.0134, 0.0133,  ..., 0.9968, 0.0131, 0.0130],
         [0.9606, 0.9599, 0.9602,  ..., 0.0011, 0.9607, 0.9611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0144, 0.0143, 0.0142,  ..., 0.0143, 0.0148, 0.0146],
         [0.0144, 0.0143, 0.0142,  ..., 0.0143, 0.0148, 0.0146],
         [0.0144, 0.0143, 0.0142,  ..., 0.0143, 0.0148, 0.0146],
         [0.9569, 0.9571, 0.9573,  ..., 0.9572, 0.9555, 0.9562]],
        [[0.0146, 0.0147, 0.0144,  ..., 0.0144, 0.0145, 0.0146],
         [0.0146, 0.0147, 0.0144,  ..., 0.0144, 0.0145, 0.0146],
         [0.0146, 0.0147, 0.0144,  ..., 0.0144, 0.0145, 0.0146],
         [0.9561, 0.9559, 0.9567,  ..., 0.9568, 0.9565, 0.9562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3114e-02, 1.3060e-02, 1.3319e-02,  ..., 1.3312e-02,
          1.3515e-02, 1.3535e-02],
         [1.3114e-02, 1.3060e-02, 1.3319e-02,  ..., 1.3312e-02,
          1.3515e-02, 1.3535e-02],
         [1.3114e-02, 1.3060e-02, 1.3319e-02,  ..., 1.3312e-02,
          1.3515e-02, 1.3535e-02],
         [9.6066e-01, 9.6082e-01, 9.6004e-01,  ..., 9.6006e-01,
          9.5945e-01, 9.5939e-01]],
        [[1.2968e-02, 1.2917e-02, 1.2996e-02,  ..., 5.8075e-05,
          1.3198e-02, 1.2988e-02],
         [1.2968e-02, 1.2917e-02, 1.2996e-02,  ..., 5.8075e-05,
          1.3198e-02, 1.2988e-02],
         [1.2968e-02, 1.2917e-02, 1.2996e-02,  ..., 9.9983e-01,
          1.3198e-02, 1.2988e-02],
         [9.6110e-01, 9.6125e-01, 9.6101e-01,  ..., 5.8075e-05,
          9.6041e-01, 9.6104e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:40,964 [Process: 0] Synchronize training processes
2024-08-16 16:34:40,965 [Process: 0] Evaluating...
2024-08-16 16:34:40,967 [Process: 0] EPOCH 225:
2024-08-16 16:34:40,969 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0145, 0.0139, 0.0141,  ..., 0.0139, 0.0148, 0.0148],
         [0.0145, 0.0139, 0.0141,  ..., 0.0139, 0.0148, 0.0148],
         [0.0145, 0.0139, 0.0141,  ..., 0.0139, 0.0148, 0.0148],
         [0.9566, 0.9582, 0.9576,  ..., 0.9584, 0.9557, 0.9557]],
        [[0.0144, 0.0144, 0.0144,  ..., 0.0145, 0.0146, 0.0141],
         [0.0144, 0.0144, 0.0144,  ..., 0.0145, 0.0146, 0.0141],
         [0.0144, 0.0144, 0.0144,  ..., 0.0145, 0.0146, 0.0141],
         [0.9567, 0.9569, 0.9567,  ..., 0.9565, 0.9561, 0.9576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3443e-02, 1.3138e-02, 1.3288e-02,  ..., 1.3329e-02,
          1.3161e-02, 1.3187e-02],
         [1.3443e-02, 1.3138e-02, 1.3288e-02,  ..., 1.3329e-02,
          1.3161e-02, 1.3187e-02],
         [1.3443e-02, 1.3138e-02, 1.3288e-02,  ..., 1.3329e-02,
          1.3161e-02, 1.3187e-02],
         [9.5967e-01, 9.6059e-01, 9.6014e-01,  ..., 9.6001e-01,
          9.6052e-01, 9.6044e-01]],
        [[1.2918e-02, 1.2953e-02, 1.3288e-02,  ..., 3.1342e-04,
          1.3452e-02, 1.3051e-02],
         [1.2918e-02, 1.2953e-02, 1.3288e-02,  ..., 3.1342e-04,
          1.3452e-02, 1.3051e-02],
         [1.2918e-02, 1.2953e-02, 1.3288e-02,  ..., 9.9906e-01,
          1.3452e-02, 1.3051e-02],
         [9.6125e-01, 9.6114e-01, 9.6014e-01,  ..., 3.1342e-04,
          9.5964e-01, 9.6085e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:43,051 [Process: 0] Synchronize training processes
2024-08-16 16:34:43,051 [Process: 0] Evaluating...
2024-08-16 16:34:43,053 [Process: 0] EPOCH 226:
2024-08-16 16:34:43,055 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0142, 0.0144,  ..., 0.0141, 0.0144, 0.0139],
         [0.0138, 0.0142, 0.0144,  ..., 0.0141, 0.0144, 0.0139],
         [0.0138, 0.0142, 0.0144,  ..., 0.0141, 0.0144, 0.0139],
         [0.9585, 0.9574, 0.9569,  ..., 0.9576, 0.9568, 0.9582]],
        [[0.0143, 0.0144, 0.0145,  ..., 0.0143, 0.0143, 0.0144],
         [0.0143, 0.0144, 0.0145,  ..., 0.0143, 0.0143, 0.0144],
         [0.0143, 0.0144, 0.0145,  ..., 0.0143, 0.0143, 0.0144],
         [0.9571, 0.9567, 0.9564,  ..., 0.9572, 0.9570, 0.9569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3187e-02, 1.3175e-02, 1.2830e-02,  ..., 1.3193e-02,
          1.3067e-02, 1.3518e-02],
         [1.3187e-02, 1.3175e-02, 1.2830e-02,  ..., 1.3193e-02,
          1.3067e-02, 1.3518e-02],
         [1.3187e-02, 1.3175e-02, 1.2830e-02,  ..., 1.3193e-02,
          1.3067e-02, 1.3518e-02],
         [9.6044e-01, 9.6047e-01, 9.6151e-01,  ..., 9.6042e-01,
          9.6080e-01, 9.5945e-01]],
        [[1.3467e-02, 1.3226e-02, 1.3098e-02,  ..., 8.2810e-04,
          1.2983e-02, 1.3057e-02],
         [1.3467e-02, 1.3226e-02, 1.3098e-02,  ..., 8.2810e-04,
          1.2983e-02, 1.3057e-02],
         [1.3467e-02, 1.3226e-02, 1.3098e-02,  ..., 9.9752e-01,
          1.2983e-02, 1.3057e-02],
         [9.5960e-01, 9.6032e-01, 9.6071e-01,  ..., 8.2810e-04,
          9.6105e-01, 9.6083e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:45,156 [Process: 0] Synchronize training processes
2024-08-16 16:34:45,156 [Process: 0] Evaluating...
2024-08-16 16:34:45,158 [Process: 0] EPOCH 227:
2024-08-16 16:34:45,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0140, 0.0140, 0.0141,  ..., 0.0140, 0.0143, 0.0141],
         [0.0140, 0.0140, 0.0141,  ..., 0.0140, 0.0143, 0.0141],
         [0.0141, 0.0140, 0.0141,  ..., 0.0140, 0.0146, 0.0141],
         [0.9578, 0.9581, 0.9578,  ..., 0.9579, 0.9568, 0.9577]],
        [[0.0142, 0.0143, 0.0144,  ..., 0.0142, 0.0144, 0.0143],
         [0.0142, 0.0143, 0.0144,  ..., 0.0142, 0.0144, 0.0143],
         [0.0145, 0.0143, 0.0145,  ..., 0.0142, 0.0144, 0.0143],
         [0.9572, 0.9572, 0.9567,  ..., 0.9575, 0.9569, 0.9572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3027e-02, 1.3070e-02, 1.2913e-02,  ..., 1.3398e-02,
          1.3021e-02, 1.3066e-02],
         [1.3027e-02, 1.3070e-02, 1.2913e-02,  ..., 1.3398e-02,
          1.3021e-02, 1.3066e-02],
         [1.3027e-02, 1.3070e-02, 1.2913e-02,  ..., 1.3398e-02,
          1.3021e-02, 1.3066e-02],
         [9.6092e-01, 9.6079e-01, 9.6126e-01,  ..., 9.5980e-01,
          9.6094e-01, 9.6080e-01]],
        [[1.3579e-02, 1.2699e-02, 1.2966e-02,  ..., 2.4848e-04,
          1.3006e-02, 1.2636e-02],
         [1.3579e-02, 1.2699e-02, 1.2966e-02,  ..., 2.4848e-04,
          1.3006e-02, 1.2636e-02],
         [1.3579e-02, 1.2699e-02, 1.2966e-02,  ..., 9.9925e-01,
          1.3006e-02, 1.2636e-02],
         [9.5926e-01, 9.6190e-01, 9.6110e-01,  ..., 2.4848e-04,
          9.6098e-01, 9.6209e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:47,250 [Process: 0] Synchronize training processes
2024-08-16 16:34:47,251 [Process: 0] Evaluating...
2024-08-16 16:34:47,253 [Process: 0] EPOCH 228:
2024-08-16 16:34:47,255 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0139, 0.0139,  ..., 0.0141, 0.0144, 0.0138],
         [0.0138, 0.0139, 0.0139,  ..., 0.0141, 0.0144, 0.0138],
         [0.0138, 0.0139, 0.0139,  ..., 0.0141, 0.0144, 0.0138],
         [0.9586, 0.9584, 0.9582,  ..., 0.9577, 0.9568, 0.9586]],
        [[0.0143, 0.0138, 0.0140,  ..., 0.0141, 0.0139, 0.0145],
         [0.0143, 0.0138, 0.0140,  ..., 0.0141, 0.0139, 0.0145],
         [0.0143, 0.0138, 0.0140,  ..., 0.0141, 0.0139, 0.0145],
         [0.9571, 0.9586, 0.9579,  ..., 0.9576, 0.9583, 0.9565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2893e-02, 1.3154e-02, 1.3023e-02,  ..., 1.2841e-02,
          1.3031e-02, 1.3244e-02],
         [1.2893e-02, 1.3154e-02, 1.3023e-02,  ..., 1.2841e-02,
          1.3031e-02, 1.3244e-02],
         [1.2893e-02, 1.3154e-02, 1.3023e-02,  ..., 1.2841e-02,
          1.3031e-02, 1.3244e-02],
         [9.6132e-01, 9.6054e-01, 9.6093e-01,  ..., 9.6148e-01,
          9.6091e-01, 9.6027e-01]],
        [[1.2734e-02, 1.2916e-02, 1.2850e-02,  ..., 1.2453e-04,
          1.2786e-02, 1.2767e-02],
         [1.2734e-02, 1.2916e-02, 1.2850e-02,  ..., 1.2453e-04,
          1.2786e-02, 1.2767e-02],
         [1.2734e-02, 1.2916e-02, 1.2850e-02,  ..., 9.9963e-01,
          1.2786e-02, 1.2767e-02],
         [9.6180e-01, 9.6125e-01, 9.6145e-01,  ..., 1.2453e-04,
          9.6164e-01, 9.6170e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:49,333 [Process: 0] Synchronize training processes
2024-08-16 16:34:49,333 [Process: 0] Evaluating...
2024-08-16 16:34:49,335 [Process: 0] EPOCH 229:
2024-08-16 16:34:49,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0140, 0.0137, 0.0138,  ..., 0.0141, 0.0143, 0.0136],
         [0.0140, 0.0137, 0.0138,  ..., 0.0141, 0.0143, 0.0136],
         [0.0140, 0.0137, 0.0138,  ..., 0.0141, 0.0143, 0.0136],
         [0.9581, 0.9590, 0.9585,  ..., 0.9578, 0.9570, 0.9591]],
        [[0.0142, 0.0140, 0.0138,  ..., 0.0139, 0.0141, 0.0142],
         [0.0142, 0.0140, 0.0138,  ..., 0.0139, 0.0141, 0.0142],
         [0.0142, 0.0140, 0.0138,  ..., 0.0139, 0.0141, 0.0142],
         [0.9574, 0.9579, 0.9585,  ..., 0.9584, 0.9578, 0.9573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2920e-02, 1.2982e-02, 1.2671e-02,  ..., 1.2641e-02,
          1.2677e-02, 1.3147e-02],
         [1.2920e-02, 1.2982e-02, 1.2671e-02,  ..., 1.2641e-02,
          1.2677e-02, 1.3147e-02],
         [1.2920e-02, 1.2982e-02, 1.2671e-02,  ..., 1.2641e-02,
          1.2677e-02, 1.3147e-02],
         [9.6124e-01, 9.6105e-01, 9.6199e-01,  ..., 9.6208e-01,
          9.6197e-01, 9.6056e-01]],
        [[1.2415e-02, 1.2862e-02, 1.2803e-02,  ..., 5.2338e-04,
          1.2801e-02, 1.2875e-02],
         [1.2415e-02, 1.2862e-02, 1.2803e-02,  ..., 5.2338e-04,
          1.2801e-02, 1.2875e-02],
         [1.2415e-02, 1.2862e-02, 1.2803e-02,  ..., 9.9843e-01,
          1.2801e-02, 1.2875e-02],
         [9.6275e-01, 9.6142e-01, 9.6159e-01,  ..., 5.2338e-04,
          9.6160e-01, 9.6137e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:34:51,437 [Process: 0] Synchronize training processes
2024-08-16 16:34:51,437 [Process: 0] Evaluating...
2024-08-16 16:34:51,439 [Process: 0] EPOCH 230:
2024-08-16 16:34:51,441 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0136, 0.0138,  ..., 0.0136, 0.0140, 0.0139],
         [0.0138, 0.0136, 0.0138,  ..., 0.0136, 0.0140, 0.0139],
         [0.0138, 0.0136, 0.0138,  ..., 0.0136, 0.0140, 0.0139],
         [0.9585, 0.9591, 0.9586,  ..., 0.9593, 0.9579, 0.9584]],
        [[0.0139, 0.0139, 0.0138,  ..., 0.0143, 0.0139, 0.0140],
         [0.0139, 0.0139, 0.0138,  ..., 0.0143, 0.0139, 0.0140],
         [0.0139, 0.0139, 0.0138,  ..., 0.0143, 0.0139, 0.0140],
         [0.9583, 0.9582, 0.9587,  ..., 0.9571, 0.9582, 0.9579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2737e-02, 1.2973e-02, 1.2463e-02,  ..., 1.2713e-02,
          1.2992e-02, 1.2715e-02],
         [1.2737e-02, 1.2973e-02, 1.2463e-02,  ..., 1.2713e-02,
          1.2992e-02, 1.2715e-02],
         [1.2737e-02, 1.2973e-02, 1.2463e-02,  ..., 1.2713e-02,
          1.2992e-02, 1.2715e-02],
         [9.6179e-01, 9.6108e-01, 9.6261e-01,  ..., 9.6186e-01,
          9.6102e-01, 9.6185e-01]],
        [[1.2398e-02, 1.2506e-02, 1.2691e-02,  ..., 5.5424e-04,
          1.2606e-02, 1.2536e-02],
         [1.2398e-02, 1.2506e-02, 1.2691e-02,  ..., 5.5424e-04,
          1.2606e-02, 1.2536e-02],
         [1.2398e-02, 1.2506e-02, 1.2691e-02,  ..., 9.9834e-01,
          1.2606e-02, 1.2536e-02],
         [9.6281e-01, 9.6248e-01, 9.6193e-01,  ..., 5.5424e-04,
          9.6218e-01, 9.6239e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:53,534 [Process: 0] Synchronize training processes
2024-08-16 16:34:53,534 [Process: 0] Evaluating...
2024-08-16 16:34:53,537 [Process: 0] EPOCH 231:
2024-08-16 16:34:53,538 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0137, 0.0135,  ..., 0.0135, 0.0140, 0.0138],
         [0.0138, 0.0137, 0.0135,  ..., 0.0135, 0.0140, 0.0138],
         [0.0138, 0.0137, 0.0135,  ..., 0.0135, 0.0140, 0.0138],
         [0.9586, 0.9588, 0.9595,  ..., 0.9595, 0.9580, 0.9585]],
        [[0.0137, 0.0140, 0.0137,  ..., 0.0137, 0.0137, 0.0139],
         [0.0137, 0.0140, 0.0137,  ..., 0.0137, 0.0137, 0.0139],
         [0.0137, 0.0140, 0.0137,  ..., 0.0137, 0.0137, 0.0139],
         [0.9589, 0.9580, 0.9588,  ..., 0.9589, 0.9588, 0.9583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2838e-02, 1.3005e-02, 1.2588e-02,  ..., 1.2836e-02,
          1.2873e-02, 1.2298e-02],
         [1.2838e-02, 1.3005e-02, 1.2588e-02,  ..., 1.2836e-02,
          1.2873e-02, 1.2298e-02],
         [1.2838e-02, 1.3005e-02, 1.2588e-02,  ..., 1.2836e-02,
          1.2873e-02, 1.2298e-02],
         [9.6149e-01, 9.6098e-01, 9.6224e-01,  ..., 9.6149e-01,
          9.6138e-01, 9.6311e-01]],
        [[1.2579e-02, 1.2648e-02, 1.2165e-02,  ..., 2.0567e-04,
          1.2306e-02, 1.2308e-02],
         [1.2579e-02, 1.2648e-02, 1.2165e-02,  ..., 2.0567e-04,
          1.2306e-02, 1.2308e-02],
         [1.2579e-02, 1.2648e-02, 1.2165e-02,  ..., 9.9938e-01,
          1.2306e-02, 1.2308e-02],
         [9.6226e-01, 9.6206e-01, 9.6350e-01,  ..., 2.0567e-04,
          9.6308e-01, 9.6308e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:55,634 [Process: 0] Synchronize training processes
2024-08-16 16:34:55,634 [Process: 0] Evaluating...
2024-08-16 16:34:55,643 [Process: 0] EPOCH 232:
2024-08-16 16:34:55,645 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0136, 0.0132, 0.0129,  ..., 0.0136, 0.0143, 0.0137],
         [0.0136, 0.0132, 0.0129,  ..., 0.0136, 0.0143, 0.0137],
         [0.0136, 0.0132, 0.0129,  ..., 0.0136, 0.0143, 0.0137],
         [0.9593, 0.9604, 0.9612,  ..., 0.9592, 0.9572, 0.9589]],
        [[0.0138, 0.0140, 0.0138,  ..., 0.0137, 0.0138, 0.0156],
         [0.0138, 0.0140, 0.0138,  ..., 0.0137, 0.0138, 0.0156],
         [0.0138, 0.0140, 0.0138,  ..., 0.0137, 0.0138, 0.0156],
         [0.9585, 0.9579, 0.9587,  ..., 0.9589, 0.9587, 0.9531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:34:57,721 [Process: 0] Synchronize training processes
2024-08-16 16:34:57,721 [Process: 0] Evaluating...
2024-08-16 16:34:57,723 [Process: 0] EPOCH 233:
2024-08-16 16:34:57,725 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0126, 0.0127,  ..., 0.0125, 0.0127, 0.0128],
         [0.0125, 0.0126, 0.0127,  ..., 0.0125, 0.0127, 0.0128],
         [0.0125, 0.0126, 0.0127,  ..., 0.0125, 0.0127, 0.0128],
         [0.9626, 0.9621, 0.9620,  ..., 0.9626, 0.9620, 0.9615]],
        [[0.0126, 0.0124, 0.0119,  ..., 0.0026, 0.0123, 0.0123],
         [0.0126, 0.0124, 0.0119,  ..., 0.0026, 0.0123, 0.0123],
         [0.0126, 0.0124, 0.0119,  ..., 0.9921, 0.0123, 0.0123],
         [0.9623, 0.9629, 0.9642,  ..., 0.0026, 0.9630, 0.9632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0136, 0.0136, 0.0134,  ..., 0.0133, 0.0139, 0.0135],
         [0.0136, 0.0136, 0.0134,  ..., 0.0133, 0.0139, 0.0135],
         [0.0136, 0.0136, 0.0134,  ..., 0.0133, 0.0139, 0.0135],
         [0.9593, 0.9591, 0.9598,  ..., 0.9601, 0.9583, 0.9594]],
        [[0.0133, 0.0135, 0.0135,  ..., 0.0136, 0.0137, 0.0149],
         [0.0133, 0.0135, 0.0135,  ..., 0.0136, 0.0137, 0.0149],
         [0.0133, 0.0135, 0.0135,  ..., 0.0136, 0.0137, 0.0149],
         [0.9601, 0.9594, 0.9596,  ..., 0.9592, 0.9590, 0.9554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:34:59,811 [Process: 0] Synchronize training processes
2024-08-16 16:34:59,811 [Process: 0] Evaluating...
2024-08-16 16:34:59,813 [Process: 0] EPOCH 234:
2024-08-16 16:34:59,815 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2124e-02, 1.2558e-02, 1.2779e-02,  ..., 1.2532e-02,
          1.2347e-02, 1.2540e-02],
         [1.2124e-02, 1.2558e-02, 1.2779e-02,  ..., 1.2532e-02,
          1.2347e-02, 1.2540e-02],
         [1.2124e-02, 1.2558e-02, 1.2779e-02,  ..., 1.2532e-02,
          1.2347e-02, 1.2540e-02],
         [9.6363e-01, 9.6233e-01, 9.6166e-01,  ..., 9.6240e-01,
          9.6296e-01, 9.6238e-01]],
        [[1.2337e-02, 1.2063e-02, 1.2085e-02,  ..., 2.9333e-04,
          1.1902e-02, 1.2040e-02],
         [1.2337e-02, 1.2063e-02, 1.2085e-02,  ..., 2.9333e-04,
          1.1902e-02, 1.2040e-02],
         [1.2337e-02, 1.2063e-02, 1.2085e-02,  ..., 9.9912e-01,
          1.1902e-02, 1.2040e-02],
         [9.6299e-01, 9.6381e-01, 9.6375e-01,  ..., 2.9333e-04,
          9.6429e-01, 9.6388e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0136, 0.0131, 0.0136,  ..., 0.0133, 0.0138, 0.0136],
         [0.0136, 0.0131, 0.0136,  ..., 0.0133, 0.0138, 0.0136],
         [0.0136, 0.0131, 0.0136,  ..., 0.0133, 0.0138, 0.0136],
         [0.9592, 0.9606, 0.9593,  ..., 0.9602, 0.9586, 0.9591]],
        [[0.0135, 0.0137, 0.0137,  ..., 0.0134, 0.0136, 0.0143],
         [0.0135, 0.0137, 0.0137,  ..., 0.0134, 0.0136, 0.0143],
         [0.0135, 0.0137, 0.0137,  ..., 0.0134, 0.0136, 0.0143],
         [0.9596, 0.9590, 0.9590,  ..., 0.9597, 0.9593, 0.9571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:01,908 [Process: 0] Synchronize training processes
2024-08-16 16:35:01,908 [Process: 0] Evaluating...
2024-08-16 16:35:01,910 [Process: 0] EPOCH 235:
2024-08-16 16:35:01,912 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2592e-02, 1.2254e-02, 1.2496e-02,  ..., 1.2688e-02,
          1.2409e-02, 1.2217e-02],
         [1.2592e-02, 1.2254e-02, 1.2496e-02,  ..., 1.2688e-02,
          1.2409e-02, 1.2217e-02],
         [1.2592e-02, 1.2254e-02, 1.2496e-02,  ..., 1.2688e-02,
          1.2409e-02, 1.2217e-02],
         [9.6222e-01, 9.6324e-01, 9.6251e-01,  ..., 9.6194e-01,
          9.6277e-01, 9.6335e-01]],
        [[1.2035e-02, 1.2329e-02, 1.1939e-02,  ..., 1.9525e-04,
          1.2293e-02, 1.2017e-02],
         [1.2035e-02, 1.2329e-02, 1.1939e-02,  ..., 1.9525e-04,
          1.2293e-02, 1.2017e-02],
         [1.2035e-02, 1.2329e-02, 1.1939e-02,  ..., 9.9941e-01,
          1.2293e-02, 1.2017e-02],
         [9.6390e-01, 9.6301e-01, 9.6418e-01,  ..., 1.9525e-04,
          9.6312e-01, 9.6395e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0130, 0.0131,  ..., 0.0134, 0.0136, 0.0134],
         [0.0132, 0.0130, 0.0131,  ..., 0.0134, 0.0136, 0.0134],
         [0.0133, 0.0130, 0.0131,  ..., 0.0134, 0.0136, 0.0134],
         [0.9602, 0.9609, 0.9607,  ..., 0.9599, 0.9593, 0.9597]],
        [[0.0136, 0.0138, 0.0133,  ..., 0.0133, 0.0133, 0.0139],
         [0.0136, 0.0138, 0.0133,  ..., 0.0133, 0.0133, 0.0139],
         [0.0136, 0.0138, 0.0133,  ..., 0.0134, 0.0135, 0.0139],
         [0.9593, 0.9587, 0.9602,  ..., 0.9600, 0.9599, 0.9583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:03,982 [Process: 0] Synchronize training processes
2024-08-16 16:35:03,982 [Process: 0] Evaluating...
2024-08-16 16:35:03,984 [Process: 0] EPOCH 236:
2024-08-16 16:35:03,986 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2156e-02, 1.2299e-02, 1.2372e-02,  ..., 1.2255e-02,
          1.2444e-02, 1.2370e-02],
         [1.2156e-02, 1.2299e-02, 1.2372e-02,  ..., 1.2255e-02,
          1.2444e-02, 1.2370e-02],
         [1.2156e-02, 1.2299e-02, 1.2372e-02,  ..., 1.2255e-02,
          1.2444e-02, 1.2370e-02],
         [9.6353e-01, 9.6310e-01, 9.6288e-01,  ..., 9.6323e-01,
          9.6267e-01, 9.6289e-01]],
        [[1.2200e-02, 1.2152e-02, 1.2333e-02,  ..., 3.6742e-04,
          1.1765e-02, 1.2135e-02],
         [1.2200e-02, 1.2152e-02, 1.2333e-02,  ..., 3.6742e-04,
          1.1765e-02, 1.2135e-02],
         [1.2200e-02, 1.2152e-02, 1.2333e-02,  ..., 9.9890e-01,
          1.1765e-02, 1.2135e-02],
         [9.6340e-01, 9.6355e-01, 9.6300e-01,  ..., 3.6742e-04,
          9.6471e-01, 9.6360e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0134, 0.0134, 0.0132,  ..., 0.0131, 0.0131, 0.0134],
         [0.0134, 0.0134, 0.0132,  ..., 0.0131, 0.0131, 0.0134],
         [0.0134, 0.0134, 0.0132,  ..., 0.0131, 0.0131, 0.0134],
         [0.9598, 0.9599, 0.9605,  ..., 0.9608, 0.9606, 0.9597]],
        [[0.0137, 0.0137, 0.0137,  ..., 0.0134, 0.0135, 0.0140],
         [0.0137, 0.0137, 0.0137,  ..., 0.0134, 0.0135, 0.0140],
         [0.0137, 0.0137, 0.0137,  ..., 0.0134, 0.0135, 0.0140],
         [0.9590, 0.9588, 0.9588,  ..., 0.9598, 0.9595, 0.9579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:06,049 [Process: 0] Synchronize training processes
2024-08-16 16:35:06,050 [Process: 0] Evaluating...
2024-08-16 16:35:06,052 [Process: 0] EPOCH 237:
2024-08-16 16:35:06,053 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0122, 0.0121, 0.0125,  ..., 0.0124, 0.0123, 0.0123],
         [0.0122, 0.0121, 0.0125,  ..., 0.0124, 0.0123, 0.0123],
         [0.0122, 0.0121, 0.0125,  ..., 0.0124, 0.0123, 0.0123],
         [0.9634, 0.9636, 0.9625,  ..., 0.9627, 0.9631, 0.9630]],
        [[0.0122, 0.0119, 0.0122,  ..., 0.0013, 0.0122, 0.0120],
         [0.0122, 0.0119, 0.0122,  ..., 0.0013, 0.0122, 0.0120],
         [0.0122, 0.0119, 0.0122,  ..., 0.9960, 0.0122, 0.0120],
         [0.9635, 0.9644, 0.9634,  ..., 0.0013, 0.9634, 0.9639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0133, 0.0131,  ..., 0.0127, 0.0135, 0.0134],
         [0.0129, 0.0133, 0.0131,  ..., 0.0127, 0.0135, 0.0134],
         [0.0129, 0.0133, 0.0131,  ..., 0.0127, 0.0135, 0.0134],
         [0.9614, 0.9602, 0.9606,  ..., 0.9618, 0.9595, 0.9597]],
        [[0.0133, 0.0136, 0.0134,  ..., 0.0134, 0.0134, 0.0132],
         [0.0133, 0.0136, 0.0134,  ..., 0.0134, 0.0134, 0.0132],
         [0.0133, 0.0136, 0.0134,  ..., 0.0134, 0.0134, 0.0132],
         [0.9600, 0.9593, 0.9597,  ..., 0.9597, 0.9598, 0.9605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:08,142 [Process: 0] Synchronize training processes
2024-08-16 16:35:08,142 [Process: 0] Evaluating...
2024-08-16 16:35:08,144 [Process: 0] EPOCH 238:
2024-08-16 16:35:08,146 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0121, 0.0122,  ..., 0.0118, 0.0122, 0.0120],
         [0.0120, 0.0121, 0.0122,  ..., 0.0118, 0.0122, 0.0120],
         [0.0120, 0.0121, 0.0122,  ..., 0.0118, 0.0122, 0.0120],
         [0.9641, 0.9638, 0.9633,  ..., 0.9647, 0.9633, 0.9641]],
        [[0.0121, 0.0119, 0.0118,  ..., 0.0015, 0.0117, 0.0120],
         [0.0121, 0.0119, 0.0118,  ..., 0.0015, 0.0117, 0.0120],
         [0.0121, 0.0119, 0.0118,  ..., 0.9954, 0.0117, 0.0120],
         [0.9637, 0.9643, 0.9647,  ..., 0.0015, 0.9650, 0.9641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0130, 0.0133,  ..., 0.0131, 0.0133, 0.0132],
         [0.0129, 0.0130, 0.0133,  ..., 0.0131, 0.0133, 0.0132],
         [0.0129, 0.0130, 0.0133,  ..., 0.0131, 0.0133, 0.0132],
         [0.9613, 0.9611, 0.9601,  ..., 0.9606, 0.9601, 0.9605]],
        [[0.0133, 0.0134, 0.0134,  ..., 0.0133, 0.0133, 0.0130],
         [0.0133, 0.0134, 0.0134,  ..., 0.0133, 0.0133, 0.0130],
         [0.0133, 0.0134, 0.0134,  ..., 0.0133, 0.0133, 0.0130],
         [0.9601, 0.9598, 0.9597,  ..., 0.9600, 0.9602, 0.9609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:10,236 [Process: 0] Synchronize training processes
2024-08-16 16:35:10,237 [Process: 0] Evaluating...
2024-08-16 16:35:10,239 [Process: 0] EPOCH 239:
2024-08-16 16:35:10,240 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0124, 0.0119,  ..., 0.0120, 0.0119, 0.0119],
         [0.0120, 0.0124, 0.0119,  ..., 0.0120, 0.0119, 0.0119],
         [0.0120, 0.0124, 0.0119,  ..., 0.0120, 0.0119, 0.0119],
         [0.9641, 0.9628, 0.9644,  ..., 0.9640, 0.9642, 0.9642]],
        [[0.0123, 0.0117, 0.0122,  ..., 0.0022, 0.0118, 0.0119],
         [0.0123, 0.0117, 0.0122,  ..., 0.0022, 0.0118, 0.0119],
         [0.0123, 0.0117, 0.0122,  ..., 0.9935, 0.0118, 0.0119],
         [0.9632, 0.9648, 0.9634,  ..., 0.0022, 0.9645, 0.9644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0128, 0.0130, 0.0129,  ..., 0.0132, 0.0134, 0.0134],
         [0.0128, 0.0130, 0.0129,  ..., 0.0132, 0.0134, 0.0134],
         [0.0128, 0.0130, 0.0129,  ..., 0.0132, 0.0134, 0.0134],
         [0.9615, 0.9609, 0.9614,  ..., 0.9605, 0.9599, 0.9599]],
        [[0.0133, 0.0132, 0.0131,  ..., 0.0133, 0.0134, 0.0132],
         [0.0133, 0.0132, 0.0131,  ..., 0.0133, 0.0134, 0.0132],
         [0.0133, 0.0132, 0.0131,  ..., 0.0133, 0.0134, 0.0132],
         [0.9602, 0.9603, 0.9607,  ..., 0.9602, 0.9597, 0.9605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:12,320 [Process: 0] Synchronize training processes
2024-08-16 16:35:12,320 [Process: 0] Evaluating...
2024-08-16 16:35:12,322 [Process: 0] EPOCH 240:
2024-08-16 16:35:12,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2105e-02, 1.1674e-02, 1.1823e-02,  ..., 1.2165e-02,
          1.2055e-02, 1.2098e-02],
         [1.2105e-02, 1.1674e-02, 1.1823e-02,  ..., 1.2165e-02,
          1.2055e-02, 1.2098e-02],
         [1.2105e-02, 1.1674e-02, 1.1823e-02,  ..., 1.2165e-02,
          1.2055e-02, 1.2098e-02],
         [9.6369e-01, 9.6498e-01, 9.6453e-01,  ..., 9.6351e-01,
          9.6384e-01, 9.6371e-01]],
        [[1.1801e-02, 1.1886e-02, 1.1752e-02,  ..., 1.6338e-04,
          1.1308e-02, 1.1871e-02],
         [1.1801e-02, 1.1886e-02, 1.1752e-02,  ..., 1.6338e-04,
          1.1308e-02, 1.1871e-02],
         [1.1801e-02, 1.1886e-02, 1.1752e-02,  ..., 9.9951e-01,
          1.1308e-02, 1.1871e-02],
         [9.6460e-01, 9.6434e-01, 9.6474e-01,  ..., 1.6338e-04,
          9.6608e-01, 9.6439e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0131, 0.0127, 0.0127,  ..., 0.0133, 0.0132, 0.0135],
         [0.0131, 0.0127, 0.0127,  ..., 0.0133, 0.0132, 0.0135],
         [0.0131, 0.0127, 0.0127,  ..., 0.0133, 0.0132, 0.0135],
         [0.9607, 0.9619, 0.9619,  ..., 0.9602, 0.9605, 0.9595]],
        [[0.0131, 0.0134, 0.0133,  ..., 0.0130, 0.0130, 0.0133],
         [0.0131, 0.0134, 0.0133,  ..., 0.0130, 0.0130, 0.0133],
         [0.0131, 0.0134, 0.0133,  ..., 0.0130, 0.0130, 0.0133],
         [0.9607, 0.9598, 0.9601,  ..., 0.9609, 0.9609, 0.9601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:14,424 [Process: 0] Synchronize training processes
2024-08-16 16:35:14,424 [Process: 0] Evaluating...
2024-08-16 16:35:14,426 [Process: 0] EPOCH 241:
2024-08-16 16:35:14,428 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0120, 0.0121,  ..., 0.0122, 0.0121, 0.0119],
         [0.0124, 0.0120, 0.0121,  ..., 0.0122, 0.0121, 0.0119],
         [0.0124, 0.0120, 0.0121,  ..., 0.0122, 0.0121, 0.0119],
         [0.9629, 0.9639, 0.9636,  ..., 0.9634, 0.9636, 0.9644]],
        [[0.0121, 0.0119, 0.0120,  ..., 0.0025, 0.0115, 0.0121],
         [0.0121, 0.0119, 0.0120,  ..., 0.0025, 0.0115, 0.0121],
         [0.0121, 0.0119, 0.0120,  ..., 0.9926, 0.0115, 0.0121],
         [0.9638, 0.9642, 0.9640,  ..., 0.0025, 0.9655, 0.9638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0128, 0.0124,  ..., 0.0130, 0.0133, 0.0135],
         [0.0132, 0.0128, 0.0124,  ..., 0.0130, 0.0133, 0.0135],
         [0.0132, 0.0128, 0.0124,  ..., 0.0130, 0.0133, 0.0135],
         [0.9603, 0.9617, 0.9628,  ..., 0.9609, 0.9600, 0.9595]],
        [[0.0132, 0.0132, 0.0133,  ..., 0.0129, 0.0131, 0.0126],
         [0.0132, 0.0132, 0.0133,  ..., 0.0129, 0.0131, 0.0126],
         [0.0132, 0.0132, 0.0133,  ..., 0.0129, 0.0131, 0.0126],
         [0.9603, 0.9603, 0.9600,  ..., 0.9614, 0.9608, 0.9621]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:16,517 [Process: 0] Synchronize training processes
2024-08-16 16:35:16,517 [Process: 0] Evaluating...
2024-08-16 16:35:16,525 [Process: 0] EPOCH 242:
2024-08-16 16:35:16,527 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2234e-02, 1.1666e-02, 1.2046e-02,  ..., 1.2247e-02,
          1.2239e-02, 1.1707e-02],
         [1.2234e-02, 1.1666e-02, 1.2046e-02,  ..., 1.2247e-02,
          1.2239e-02, 1.1707e-02],
         [1.2234e-02, 1.1666e-02, 1.2046e-02,  ..., 1.2247e-02,
          1.2239e-02, 1.1707e-02],
         [9.6330e-01, 9.6500e-01, 9.6386e-01,  ..., 9.6326e-01,
          9.6328e-01, 9.6488e-01]],
        [[1.1876e-02, 1.1508e-02, 1.2026e-02,  ..., 3.8341e-04,
          1.1511e-02, 1.1849e-02],
         [1.1876e-02, 1.1508e-02, 1.2026e-02,  ..., 3.8341e-04,
          1.1511e-02, 1.1849e-02],
         [1.1876e-02, 1.1508e-02, 1.2026e-02,  ..., 9.9885e-01,
          1.1511e-02, 1.1849e-02],
         [9.6437e-01, 9.6548e-01, 9.6392e-01,  ..., 3.8341e-04,
          9.6547e-01, 9.6445e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.0125, 0.0127,  ..., 0.0127, 0.0132, 0.0133],
         [0.0130, 0.0125, 0.0127,  ..., 0.0127, 0.0132, 0.0133],
         [0.0130, 0.0125, 0.0127,  ..., 0.0127, 0.0132, 0.0133],
         [0.9609, 0.9625, 0.9619,  ..., 0.9620, 0.9604, 0.9600]],
        [[0.0129, 0.0131, 0.0130,  ..., 0.0129, 0.0128, 0.0126],
         [0.0129, 0.0131, 0.0130,  ..., 0.0129, 0.0128, 0.0126],
         [0.0129, 0.0131, 0.0130,  ..., 0.0129, 0.0128, 0.0126],
         [0.9612, 0.9607, 0.9610,  ..., 0.9614, 0.9615, 0.9622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:18,592 [Process: 0] Synchronize training processes
2024-08-16 16:35:18,593 [Process: 0] Evaluating...
2024-08-16 16:35:18,594 [Process: 0] EPOCH 243:
2024-08-16 16:35:18,596 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1642e-02, 1.2274e-02, 1.2314e-02,  ..., 1.2203e-02,
          1.1822e-02, 1.2159e-02],
         [1.1642e-02, 1.2274e-02, 1.2314e-02,  ..., 1.2203e-02,
          1.1822e-02, 1.2159e-02],
         [1.1642e-02, 1.2274e-02, 1.2314e-02,  ..., 1.2203e-02,
          1.1822e-02, 1.2159e-02],
         [9.6507e-01, 9.6318e-01, 9.6306e-01,  ..., 9.6339e-01,
          9.6453e-01, 9.6352e-01]],
        [[1.1434e-02, 1.1620e-02, 1.1456e-02,  ..., 9.6113e-04,
          1.1172e-02, 1.1280e-02],
         [1.1434e-02, 1.1620e-02, 1.1456e-02,  ..., 9.6113e-04,
          1.1172e-02, 1.1280e-02],
         [1.1434e-02, 1.1620e-02, 1.1456e-02,  ..., 9.9712e-01,
          1.1172e-02, 1.1280e-02],
         [9.6570e-01, 9.6514e-01, 9.6563e-01,  ..., 9.6113e-04,
          9.6648e-01, 9.6616e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0127, 0.0128, 0.0129,  ..., 0.0128, 0.0134, 0.0139],
         [0.0127, 0.0128, 0.0129,  ..., 0.0128, 0.0134, 0.0139],
         [0.0127, 0.0128, 0.0129,  ..., 0.0128, 0.0134, 0.0154],
         [0.9619, 0.9615, 0.9614,  ..., 0.9617, 0.9598, 0.9568]],
        [[0.0130, 0.0129, 0.0130,  ..., 0.0126, 0.0126, 0.0129],
         [0.0130, 0.0129, 0.0130,  ..., 0.0126, 0.0126, 0.0129],
         [0.0130, 0.0129, 0.0130,  ..., 0.0126, 0.0126, 0.0129],
         [0.9610, 0.9614, 0.9611,  ..., 0.9622, 0.9621, 0.9613]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:20,669 [Process: 0] Synchronize training processes
2024-08-16 16:35:20,669 [Process: 0] Evaluating...
2024-08-16 16:35:20,671 [Process: 0] EPOCH 244:
2024-08-16 16:35:20,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1544e-02, 1.1909e-02, 1.1694e-02,  ..., 1.1974e-02,
          1.1613e-02, 1.2329e-02],
         [1.1544e-02, 1.1909e-02, 1.1694e-02,  ..., 1.1974e-02,
          1.1613e-02, 1.2329e-02],
         [1.1544e-02, 1.1909e-02, 1.1694e-02,  ..., 1.1974e-02,
          1.1613e-02, 1.2329e-02],
         [9.6537e-01, 9.6427e-01, 9.6492e-01,  ..., 9.6408e-01,
          9.6516e-01, 9.6301e-01]],
        [[1.1452e-02, 1.1831e-02, 1.1401e-02,  ..., 1.7617e-04,
          1.1184e-02, 1.1456e-02],
         [1.1452e-02, 1.1831e-02, 1.1401e-02,  ..., 1.7617e-04,
          1.1184e-02, 1.1456e-02],
         [1.1452e-02, 1.1831e-02, 1.1401e-02,  ..., 9.9947e-01,
          1.1184e-02, 1.1456e-02],
         [9.6564e-01, 9.6451e-01, 9.6580e-01,  ..., 1.7617e-04,
          9.6645e-01, 9.6563e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0124, 0.0126,  ..., 0.0122, 0.0133, 0.0135],
         [0.0129, 0.0124, 0.0126,  ..., 0.0122, 0.0133, 0.0135],
         [0.0129, 0.0128, 0.0128,  ..., 0.0126, 0.0142, 0.0145],
         [0.9614, 0.9624, 0.9620,  ..., 0.9630, 0.9592, 0.9584]],
        [[0.0128, 0.0131, 0.0127,  ..., 0.0125, 0.0128, 0.0126],
         [0.0128, 0.0131, 0.0127,  ..., 0.0125, 0.0128, 0.0126],
         [0.0132, 0.0133, 0.0127,  ..., 0.0129, 0.0128, 0.0131],
         [0.9613, 0.9606, 0.9619,  ..., 0.9621, 0.9616, 0.9617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:22,734 [Process: 0] Synchronize training processes
2024-08-16 16:35:22,734 [Process: 0] Evaluating...
2024-08-16 16:35:22,736 [Process: 0] EPOCH 245:
2024-08-16 16:35:22,738 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1777e-02, 1.1754e-02, 1.2218e-02,  ..., 1.1574e-02,
          1.1491e-02, 1.1755e-02],
         [1.1777e-02, 1.1754e-02, 1.2218e-02,  ..., 1.1574e-02,
          1.1491e-02, 1.1755e-02],
         [1.1777e-02, 1.1754e-02, 1.2218e-02,  ..., 1.1574e-02,
          1.1491e-02, 1.1755e-02],
         [9.6467e-01, 9.6474e-01, 9.6335e-01,  ..., 9.6528e-01,
          9.6553e-01, 9.6474e-01]],
        [[1.1172e-02, 1.1224e-02, 1.1855e-02,  ..., 5.8266e-04,
          1.1021e-02, 1.1234e-02],
         [1.1172e-02, 1.1224e-02, 1.1855e-02,  ..., 5.8266e-04,
          1.1021e-02, 1.1234e-02],
         [1.1172e-02, 1.1224e-02, 1.1855e-02,  ..., 9.9825e-01,
          1.1021e-02, 1.1234e-02],
         [9.6648e-01, 9.6633e-01, 9.6443e-01,  ..., 5.8266e-04,
          9.6694e-01, 9.6630e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0125, 0.0124,  ..., 0.0124, 0.0130, 0.0130],
         [0.0124, 0.0125, 0.0124,  ..., 0.0124, 0.0130, 0.0130],
         [0.0124, 0.0125, 0.0124,  ..., 0.0124, 0.0130, 0.0130],
         [0.9629, 0.9625, 0.9628,  ..., 0.9629, 0.9611, 0.9609]],
        [[0.0127, 0.0129, 0.0130,  ..., 0.0124, 0.0126, 0.0127],
         [0.0127, 0.0129, 0.0130,  ..., 0.0124, 0.0126, 0.0127],
         [0.0127, 0.0129, 0.0130,  ..., 0.0124, 0.0126, 0.0127],
         [0.9620, 0.9612, 0.9609,  ..., 0.9627, 0.9622, 0.9618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:24,802 [Process: 0] Synchronize training processes
2024-08-16 16:35:24,802 [Process: 0] Evaluating...
2024-08-16 16:35:24,804 [Process: 0] EPOCH 246:
2024-08-16 16:35:24,806 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1648e-02, 1.1083e-02, 1.1652e-02,  ..., 1.1647e-02,
          1.1626e-02, 1.1597e-02],
         [1.1648e-02, 1.1083e-02, 1.1652e-02,  ..., 1.1647e-02,
          1.1626e-02, 1.1597e-02],
         [1.1648e-02, 1.1083e-02, 1.1652e-02,  ..., 1.1647e-02,
          1.1626e-02, 1.1597e-02],
         [9.6506e-01, 9.6675e-01, 9.6504e-01,  ..., 9.6506e-01,
          9.6512e-01, 9.6521e-01]],
        [[1.0987e-02, 1.1466e-02, 1.1223e-02,  ..., 2.3937e-04,
          1.1079e-02, 1.1222e-02],
         [1.0987e-02, 1.1466e-02, 1.1223e-02,  ..., 2.3937e-04,
          1.1079e-02, 1.1222e-02],
         [1.0987e-02, 1.1466e-02, 1.1223e-02,  ..., 9.9928e-01,
          1.1079e-02, 1.1222e-02],
         [9.6704e-01, 9.6560e-01, 9.6633e-01,  ..., 2.3937e-04,
          9.6676e-01, 9.6633e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:35:26,876 [Process: 0] Synchronize training processes
2024-08-16 16:35:26,876 [Process: 0] Evaluating...
2024-08-16 16:35:26,878 [Process: 0] EPOCH 247:
2024-08-16 16:35:26,880 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0124, 0.0126,  ..., 0.0123, 0.0127, 0.0127],
         [0.0125, 0.0124, 0.0126,  ..., 0.0123, 0.0127, 0.0127],
         [0.0125, 0.0124, 0.0126,  ..., 0.0123, 0.0127, 0.0127],
         [0.9624, 0.9629, 0.9621,  ..., 0.9632, 0.9618, 0.9620]],
        [[0.0130, 0.0128, 0.0127,  ..., 0.0124, 0.0126, 0.0127],
         [0.0130, 0.0128, 0.0127,  ..., 0.0124, 0.0126, 0.0127],
         [0.0130, 0.0128, 0.0127,  ..., 0.0124, 0.0126, 0.0127],
         [0.9610, 0.9617, 0.9618,  ..., 0.9628, 0.9621, 0.9619]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1469e-02, 1.1040e-02, 1.1172e-02,  ..., 1.1433e-02,
          1.1612e-02, 1.1499e-02],
         [1.1469e-02, 1.1040e-02, 1.1172e-02,  ..., 1.1433e-02,
          1.1612e-02, 1.1499e-02],
         [1.1469e-02, 1.1040e-02, 1.1172e-02,  ..., 1.1433e-02,
          1.1612e-02, 1.1499e-02],
         [9.6559e-01, 9.6688e-01, 9.6648e-01,  ..., 9.6570e-01,
          9.6516e-01, 9.6550e-01]],
        [[1.1287e-02, 1.1396e-02, 1.1620e-02,  ..., 8.7161e-04,
          1.1333e-02, 1.1647e-02],
         [1.1287e-02, 1.1396e-02, 1.1620e-02,  ..., 8.7161e-04,
          1.1333e-02, 1.1647e-02],
         [1.1287e-02, 1.1396e-02, 1.1620e-02,  ..., 9.9739e-01,
          1.1333e-02, 1.1647e-02],
         [9.6614e-01, 9.6581e-01, 9.6514e-01,  ..., 8.7161e-04,
          9.6600e-01, 9.6506e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-16 16:35:28,947 [Process: 0] Synchronize training processes
2024-08-16 16:35:28,947 [Process: 0] Evaluating...
2024-08-16 16:35:28,949 [Process: 0] EPOCH 248:
2024-08-16 16:35:28,951 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0125, 0.0123,  ..., 0.0123, 0.0127, 0.0128],
         [0.0123, 0.0125, 0.0123,  ..., 0.0123, 0.0127, 0.0128],
         [0.0123, 0.0125, 0.0123,  ..., 0.0123, 0.0127, 0.0128],
         [0.9632, 0.9625, 0.9630,  ..., 0.9631, 0.9619, 0.9616]],
        [[0.0126, 0.0125, 0.0126,  ..., 0.0126, 0.0125, 0.0125],
         [0.0126, 0.0125, 0.0126,  ..., 0.0126, 0.0125, 0.0125],
         [0.0126, 0.0125, 0.0126,  ..., 0.0126, 0.0125, 0.0125],
         [0.9623, 0.9626, 0.9622,  ..., 0.9623, 0.9626, 0.9625]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1238e-02, 1.1479e-02, 1.1871e-02,  ..., 1.1302e-02,
          1.1513e-02, 1.1338e-02],
         [1.1238e-02, 1.1479e-02, 1.1871e-02,  ..., 1.1302e-02,
          1.1513e-02, 1.1338e-02],
         [1.1238e-02, 1.1479e-02, 1.1871e-02,  ..., 1.1302e-02,
          1.1513e-02, 1.1338e-02],
         [9.6629e-01, 9.6556e-01, 9.6439e-01,  ..., 9.6609e-01,
          9.6546e-01, 9.6599e-01]],
        [[1.1255e-02, 1.1379e-02, 1.1342e-02,  ..., 4.0154e-04,
          1.1251e-02, 1.1158e-02],
         [1.1255e-02, 1.1379e-02, 1.1342e-02,  ..., 4.0154e-04,
          1.1251e-02, 1.1158e-02],
         [1.1255e-02, 1.1379e-02, 1.1342e-02,  ..., 9.9880e-01,
          1.1251e-02, 1.1158e-02],
         [9.6623e-01, 9.6586e-01, 9.6598e-01,  ..., 4.0154e-04,
          9.6625e-01, 9.6653e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0121, 0.0123,  ..., 0.0121, 0.0124, 0.0128],
         [0.0125, 0.0121, 0.0123,  ..., 0.0121, 0.0124, 0.0128],
         [0.0125, 0.0121, 0.0123,  ..., 0.0121, 0.0124, 0.0128],
         [0.9626, 0.9636, 0.9632,  ..., 0.9636, 0.9628, 0.9616]],
        [[0.0125, 0.0126, 0.0126,  ..., 0.0126, 0.0123, 0.0124],
         [0.0125, 0.0126, 0.0126,  ..., 0.0126, 0.0123, 0.0124],
         [0.0125, 0.0126, 0.0126,  ..., 0.0126, 0.0123, 0.0124],
         [0.9625, 0.9622, 0.9622,  ..., 0.9622, 0.9631, 0.9628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1142e-02, 1.1396e-02, 1.1142e-02,  ..., 1.1071e-02,
          1.1508e-02, 1.1070e-02],
         [1.1142e-02, 1.1396e-02, 1.1142e-02,  ..., 1.1071e-02,
          1.1508e-02, 1.1070e-02],
         [1.1142e-02, 1.1396e-02, 1.1142e-02,  ..., 1.1071e-02,
          1.1508e-02, 1.1070e-02],
         [9.6657e-01, 9.6581e-01, 9.6657e-01,  ..., 9.6679e-01,
          9.6548e-01, 9.6679e-01]],
        [[1.0892e-02, 1.1002e-02, 1.0923e-02,  ..., 5.8740e-05,
          1.0991e-02, 1.1282e-02],
         [1.0892e-02, 1.1002e-02, 1.0923e-02,  ..., 5.8740e-05,
          1.0991e-02, 1.1282e-02],
         [1.0892e-02, 1.1002e-02, 1.0923e-02,  ..., 9.9982e-01,
          1.0991e-02, 1.1282e-02],
         [9.6732e-01, 9.6699e-01, 9.6723e-01,  ..., 5.8740e-05,
          9.6703e-01, 9.6615e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:31,029 [Process: 0] Synchronize training processes
2024-08-16 16:35:31,029 [Process: 0] Evaluating...
2024-08-16 16:35:31,031 [Process: 0] EPOCH 249:
2024-08-16 16:35:31,033 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0124, 0.0121,  ..., 0.0123, 0.0123, 0.0125],
         [0.0124, 0.0124, 0.0121,  ..., 0.0123, 0.0123, 0.0125],
         [0.0126, 0.0125, 0.0124,  ..., 0.0123, 0.0123, 0.0125],
         [0.9625, 0.9628, 0.9633,  ..., 0.9630, 0.9632, 0.9625]],
        [[0.0124, 0.0124, 0.0124,  ..., 0.0123, 0.0121, 0.0126],
         [0.0124, 0.0124, 0.0124,  ..., 0.0123, 0.0121, 0.0126],
         [0.0124, 0.0124, 0.0124,  ..., 0.0123, 0.0121, 0.0131],
         [0.9627, 0.9628, 0.9628,  ..., 0.9632, 0.9637, 0.9617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1280e-02, 1.0908e-02, 1.1225e-02,  ..., 1.1553e-02,
          1.1393e-02, 1.1114e-02],
         [1.1280e-02, 1.0908e-02, 1.1225e-02,  ..., 1.1553e-02,
          1.1393e-02, 1.1114e-02],
         [1.1280e-02, 1.0908e-02, 1.1225e-02,  ..., 1.1553e-02,
          1.1393e-02, 1.1114e-02],
         [9.6616e-01, 9.6728e-01, 9.6633e-01,  ..., 9.6534e-01,
          9.6582e-01, 9.6666e-01]],
        [[1.1164e-02, 1.1332e-02, 1.1437e-02,  ..., 1.1438e-04,
          1.1031e-02, 1.0878e-02],
         [1.1164e-02, 1.1332e-02, 1.1437e-02,  ..., 1.1438e-04,
          1.1031e-02, 1.0878e-02],
         [1.1164e-02, 1.1332e-02, 1.1437e-02,  ..., 9.9966e-01,
          1.1031e-02, 1.0878e-02],
         [9.6651e-01, 9.6600e-01, 9.6569e-01,  ..., 1.1438e-04,
          9.6691e-01, 9.6737e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:33,110 [Process: 0] Synchronize training processes
2024-08-16 16:35:33,110 [Process: 0] Evaluating...
2024-08-16 16:35:33,112 [Process: 0] EPOCH 250:
2024-08-16 16:35:33,114 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0122, 0.0119,  ..., 0.0121, 0.0120, 0.0128],
         [0.0119, 0.0122, 0.0119,  ..., 0.0121, 0.0120, 0.0128],
         [0.0119, 0.0122, 0.0119,  ..., 0.0121, 0.0120, 0.0128],
         [0.9644, 0.9635, 0.9644,  ..., 0.9636, 0.9641, 0.9617]],
        [[0.0125, 0.0122, 0.0124,  ..., 0.0122, 0.0123, 0.0124],
         [0.0125, 0.0122, 0.0124,  ..., 0.0122, 0.0123, 0.0124],
         [0.0125, 0.0122, 0.0124,  ..., 0.0122, 0.0123, 0.0124],
         [0.9625, 0.9633, 0.9627,  ..., 0.9635, 0.9632, 0.9629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1347e-02, 1.1240e-02, 1.1228e-02,  ..., 1.1293e-02,
          1.1629e-02, 1.1364e-02],
         [1.1347e-02, 1.1240e-02, 1.1228e-02,  ..., 1.1293e-02,
          1.1629e-02, 1.1364e-02],
         [1.1347e-02, 1.1240e-02, 1.1228e-02,  ..., 1.1293e-02,
          1.1629e-02, 1.1364e-02],
         [9.6596e-01, 9.6628e-01, 9.6632e-01,  ..., 9.6612e-01,
          9.6511e-01, 9.6591e-01]],
        [[1.0931e-02, 1.0982e-02, 1.0810e-02,  ..., 6.1657e-04,
          1.0711e-02, 1.1168e-02],
         [1.0931e-02, 1.0982e-02, 1.0810e-02,  ..., 6.1657e-04,
          1.0711e-02, 1.1168e-02],
         [1.0931e-02, 1.0982e-02, 1.0810e-02,  ..., 9.9815e-01,
          1.0711e-02, 1.1168e-02],
         [9.6721e-01, 9.6705e-01, 9.6757e-01,  ..., 6.1657e-04,
          9.6787e-01, 9.6650e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:35,190 [Process: 0] Synchronize training processes
2024-08-16 16:35:35,190 [Process: 0] Evaluating...
2024-08-16 16:35:35,192 [Process: 0] EPOCH 251:
2024-08-16 16:35:35,194 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0118, 0.0120,  ..., 0.0120, 0.0123, 0.0126],
         [0.0119, 0.0118, 0.0120,  ..., 0.0120, 0.0123, 0.0126],
         [0.0119, 0.0118, 0.0120,  ..., 0.0120, 0.0123, 0.0126],
         [0.9644, 0.9645, 0.9641,  ..., 0.9639, 0.9632, 0.9622]],
        [[0.0125, 0.0122, 0.0124,  ..., 0.0122, 0.0122, 0.0123],
         [0.0125, 0.0122, 0.0124,  ..., 0.0122, 0.0122, 0.0123],
         [0.0125, 0.0122, 0.0124,  ..., 0.0122, 0.0122, 0.0123],
         [0.9625, 0.9634, 0.9627,  ..., 0.9634, 0.9635, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0640e-02, 1.0827e-02, 1.1108e-02,  ..., 1.1048e-02,
          1.1464e-02, 1.1154e-02],
         [1.0640e-02, 1.0827e-02, 1.1108e-02,  ..., 1.1048e-02,
          1.1464e-02, 1.1154e-02],
         [1.0640e-02, 1.0827e-02, 1.1108e-02,  ..., 1.1048e-02,
          1.1464e-02, 1.1154e-02],
         [9.6808e-01, 9.6752e-01, 9.6668e-01,  ..., 9.6685e-01,
          9.6561e-01, 9.6654e-01]],
        [[1.0972e-02, 1.0782e-02, 1.1005e-02,  ..., 9.4255e-04,
          1.0382e-02, 1.0986e-02],
         [1.0972e-02, 1.0782e-02, 1.1005e-02,  ..., 9.4255e-04,
          1.0382e-02, 1.0986e-02],
         [1.0972e-02, 1.0782e-02, 1.1005e-02,  ..., 9.9717e-01,
          1.0382e-02, 1.0986e-02],
         [9.6708e-01, 9.6766e-01, 9.6699e-01,  ..., 9.4255e-04,
          9.6885e-01, 9.6704e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:37,287 [Process: 0] Synchronize training processes
2024-08-16 16:35:37,287 [Process: 0] Evaluating...
2024-08-16 16:35:37,296 [Process: 0] EPOCH 252:
2024-08-16 16:35:37,298 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0122, 0.0119, 0.0117,  ..., 0.0121, 0.0128, 0.0131],
         [0.0122, 0.0119, 0.0117,  ..., 0.0121, 0.0128, 0.0131],
         [0.0122, 0.0119, 0.0117,  ..., 0.0121, 0.0128, 0.0135],
         [0.9635, 0.9643, 0.9649,  ..., 0.9636, 0.9617, 0.9603]],
        [[0.0123, 0.0122, 0.0123,  ..., 0.0119, 0.0120, 0.0124],
         [0.0123, 0.0122, 0.0123,  ..., 0.0119, 0.0120, 0.0124],
         [0.0123, 0.0122, 0.0123,  ..., 0.0119, 0.0120, 0.0128],
         [0.9632, 0.9635, 0.9630,  ..., 0.9642, 0.9640, 0.9624]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0114, 0.0110,  ..., 0.0111, 0.0111, 0.0106],
         [0.0114, 0.0114, 0.0110,  ..., 0.0111, 0.0111, 0.0106],
         [0.0114, 0.0114, 0.0110,  ..., 0.0111, 0.0111, 0.0106],
         [0.9657, 0.9659, 0.9671,  ..., 0.9666, 0.9668, 0.9682]],
        [[0.0105, 0.0109, 0.0112,  ..., 0.0015, 0.0105, 0.0113],
         [0.0105, 0.0109, 0.0112,  ..., 0.0015, 0.0105, 0.0113],
         [0.0105, 0.0109, 0.0112,  ..., 0.9956, 0.0105, 0.0113],
         [0.9686, 0.9674, 0.9664,  ..., 0.0015, 0.9686, 0.9661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:39,391 [Process: 0] Synchronize training processes
2024-08-16 16:35:39,391 [Process: 0] Evaluating...
2024-08-16 16:35:39,393 [Process: 0] EPOCH 253:
2024-08-16 16:35:39,395 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0121, 0.0121, 0.0119,  ..., 0.0117, 0.0125, 0.0127],
         [0.0121, 0.0121, 0.0119,  ..., 0.0117, 0.0125, 0.0127],
         [0.0121, 0.0121, 0.0119,  ..., 0.0117, 0.0125, 0.0127],
         [0.9636, 0.9638, 0.9642,  ..., 0.9649, 0.9624, 0.9618]],
        [[0.0119, 0.0121, 0.0122,  ..., 0.0119, 0.0118, 0.0121],
         [0.0119, 0.0121, 0.0122,  ..., 0.0119, 0.0118, 0.0121],
         [0.0119, 0.0121, 0.0122,  ..., 0.0119, 0.0118, 0.0121],
         [0.9644, 0.9637, 0.9633,  ..., 0.9642, 0.9647, 0.9637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1328e-02, 1.0987e-02, 1.1165e-02,  ..., 1.0971e-02,
          1.1179e-02, 1.1257e-02],
         [1.1328e-02, 1.0987e-02, 1.1165e-02,  ..., 1.0971e-02,
          1.1179e-02, 1.1257e-02],
         [1.1328e-02, 1.0987e-02, 1.1165e-02,  ..., 1.0971e-02,
          1.1179e-02, 1.1257e-02],
         [9.6602e-01, 9.6704e-01, 9.6651e-01,  ..., 9.6709e-01,
          9.6646e-01, 9.6623e-01]],
        [[1.0729e-02, 1.0893e-02, 1.0713e-02,  ..., 6.1901e-05,
          1.0668e-02, 1.0920e-02],
         [1.0729e-02, 1.0893e-02, 1.0713e-02,  ..., 6.1901e-05,
          1.0668e-02, 1.0920e-02],
         [1.0729e-02, 1.0893e-02, 1.0713e-02,  ..., 9.9981e-01,
          1.0668e-02, 1.0920e-02],
         [9.6781e-01, 9.6732e-01, 9.6786e-01,  ..., 6.1901e-05,
          9.6800e-01, 9.6724e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:41,474 [Process: 0] Synchronize training processes
2024-08-16 16:35:41,474 [Process: 0] Evaluating...
2024-08-16 16:35:41,476 [Process: 0] EPOCH 254:
2024-08-16 16:35:41,478 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0118, 0.0120,  ..., 0.0119, 0.0118, 0.0121],
         [0.0118, 0.0118, 0.0120,  ..., 0.0119, 0.0118, 0.0121],
         [0.0118, 0.0118, 0.0120,  ..., 0.0119, 0.0118, 0.0121],
         [0.9646, 0.9647, 0.9641,  ..., 0.9644, 0.9645, 0.9636]],
        [[0.0121, 0.0122, 0.0122,  ..., 0.0121, 0.0120, 0.0121],
         [0.0121, 0.0122, 0.0122,  ..., 0.0121, 0.0120, 0.0121],
         [0.0121, 0.0122, 0.0122,  ..., 0.0121, 0.0120, 0.0121],
         [0.9637, 0.9635, 0.9634,  ..., 0.9637, 0.9640, 0.9637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0111, 0.0108,  ..., 0.0109, 0.0110, 0.0112],
         [0.0107, 0.0111, 0.0108,  ..., 0.0109, 0.0110, 0.0112],
         [0.0107, 0.0111, 0.0108,  ..., 0.0109, 0.0110, 0.0112],
         [0.9678, 0.9666, 0.9675,  ..., 0.9673, 0.9671, 0.9665]],
        [[0.0106, 0.0108, 0.0106,  ..., 0.0027, 0.0101, 0.0109],
         [0.0106, 0.0108, 0.0106,  ..., 0.0027, 0.0101, 0.0109],
         [0.0106, 0.0108, 0.0106,  ..., 0.9918, 0.0101, 0.0109],
         [0.9682, 0.9677, 0.9681,  ..., 0.0027, 0.9696, 0.9673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:43,547 [Process: 0] Synchronize training processes
2024-08-16 16:35:43,548 [Process: 0] Evaluating...
2024-08-16 16:35:43,550 [Process: 0] EPOCH 255:
2024-08-16 16:35:43,552 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0119, 0.0119,  ..., 0.0118, 0.0118, 0.0123],
         [0.0117, 0.0119, 0.0119,  ..., 0.0118, 0.0118, 0.0123],
         [0.0117, 0.0119, 0.0119,  ..., 0.0118, 0.0118, 0.0123],
         [0.9649, 0.9642, 0.9643,  ..., 0.9647, 0.9646, 0.9632]],
        [[0.0125, 0.0124, 0.0123,  ..., 0.0118, 0.0119, 0.0117],
         [0.0125, 0.0124, 0.0123,  ..., 0.0118, 0.0119, 0.0117],
         [0.0125, 0.0124, 0.0123,  ..., 0.0118, 0.0119, 0.0117],
         [0.9625, 0.9627, 0.9632,  ..., 0.9645, 0.9644, 0.9650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0695e-02, 1.0956e-02, 1.0915e-02,  ..., 1.0566e-02,
          1.0879e-02, 1.0709e-02],
         [1.0695e-02, 1.0956e-02, 1.0915e-02,  ..., 1.0566e-02,
          1.0879e-02, 1.0709e-02],
         [1.0695e-02, 1.0956e-02, 1.0915e-02,  ..., 1.0566e-02,
          1.0879e-02, 1.0709e-02],
         [9.6791e-01, 9.6713e-01, 9.6726e-01,  ..., 9.6830e-01,
          9.6736e-01, 9.6787e-01]],
        [[1.0651e-02, 1.0649e-02, 1.0351e-02,  ..., 9.5786e-05,
          1.0269e-02, 1.0707e-02],
         [1.0651e-02, 1.0649e-02, 1.0351e-02,  ..., 9.5786e-05,
          1.0269e-02, 1.0707e-02],
         [1.0651e-02, 1.0649e-02, 1.0351e-02,  ..., 9.9971e-01,
          1.0269e-02, 1.0707e-02],
         [9.6805e-01, 9.6805e-01, 9.6895e-01,  ..., 9.5786e-05,
          9.6919e-01, 9.6788e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:35:45,642 [Process: 0] Synchronize training processes
2024-08-16 16:35:45,642 [Process: 0] Evaluating...
2024-08-16 16:35:45,644 [Process: 0] EPOCH 256:
2024-08-16 16:35:45,646 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0119, 0.0118,  ..., 0.0118, 0.0120, 0.0122],
         [0.0119, 0.0119, 0.0118,  ..., 0.0118, 0.0120, 0.0122],
         [0.0119, 0.0119, 0.0118,  ..., 0.0118, 0.0120, 0.0122],
         [0.9643, 0.9644, 0.9645,  ..., 0.9646, 0.9639, 0.9634]],
        [[0.0123, 0.0126, 0.0124,  ..., 0.0118, 0.0117, 0.0116],
         [0.0123, 0.0126, 0.0124,  ..., 0.0118, 0.0117, 0.0116],
         [0.0130, 0.0142, 0.0125,  ..., 0.0118, 0.0117, 0.0116],
         [0.9623, 0.9605, 0.9627,  ..., 0.9647, 0.9650, 0.9653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0632e-02, 1.0412e-02, 1.1117e-02,  ..., 1.0710e-02,
          1.1115e-02, 1.0701e-02],
         [1.0632e-02, 1.0412e-02, 1.1117e-02,  ..., 1.0710e-02,
          1.1115e-02, 1.0701e-02],
         [1.0632e-02, 1.0412e-02, 1.1117e-02,  ..., 1.0710e-02,
          1.1115e-02, 1.0701e-02],
         [9.6810e-01, 9.6876e-01, 9.6665e-01,  ..., 9.6787e-01,
          9.6665e-01, 9.6790e-01]],
        [[1.0645e-02, 1.0724e-02, 1.0495e-02,  ..., 8.4579e-04,
          1.0505e-02, 1.1000e-02],
         [1.0645e-02, 1.0724e-02, 1.0495e-02,  ..., 8.4579e-04,
          1.0505e-02, 1.1000e-02],
         [1.0645e-02, 1.0724e-02, 1.0495e-02,  ..., 9.9746e-01,
          1.0505e-02, 1.1000e-02],
         [9.6807e-01, 9.6783e-01, 9.6851e-01,  ..., 8.4579e-04,
          9.6848e-01, 9.6700e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:47,734 [Process: 0] Synchronize training processes
2024-08-16 16:35:47,734 [Process: 0] Evaluating...
2024-08-16 16:35:47,736 [Process: 0] EPOCH 257:
2024-08-16 16:35:47,738 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0117, 0.0116,  ..., 0.0117, 0.0117, 0.0120],
         [0.0115, 0.0117, 0.0116,  ..., 0.0117, 0.0117, 0.0120],
         [0.0115, 0.0117, 0.0116,  ..., 0.0117, 0.0117, 0.0120],
         [0.9655, 0.9648, 0.9651,  ..., 0.9650, 0.9648, 0.9639]],
        [[0.0122, 0.0122, 0.0123,  ..., 0.0116, 0.0115, 0.0120],
         [0.0122, 0.0122, 0.0123,  ..., 0.0116, 0.0115, 0.0120],
         [0.0122, 0.0122, 0.0123,  ..., 0.0116, 0.0115, 0.0120],
         [0.9635, 0.9633, 0.9630,  ..., 0.9651, 0.9654, 0.9641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0989e-02, 1.1254e-02, 1.0792e-02,  ..., 1.0789e-02,
          1.1022e-02, 1.0730e-02],
         [1.0989e-02, 1.1254e-02, 1.0792e-02,  ..., 1.0789e-02,
          1.1022e-02, 1.0730e-02],
         [1.0989e-02, 1.1254e-02, 1.0792e-02,  ..., 1.0789e-02,
          1.1022e-02, 1.0730e-02],
         [9.6703e-01, 9.6624e-01, 9.6763e-01,  ..., 9.6763e-01,
          9.6693e-01, 9.6781e-01]],
        [[1.0673e-02, 1.0815e-02, 1.0515e-02,  ..., 5.6213e-04,
          1.0097e-02, 1.0909e-02],
         [1.0673e-02, 1.0815e-02, 1.0515e-02,  ..., 5.6213e-04,
          1.0097e-02, 1.0909e-02],
         [1.0673e-02, 1.0815e-02, 1.0515e-02,  ..., 9.9831e-01,
          1.0097e-02, 1.0909e-02],
         [9.6798e-01, 9.6756e-01, 9.6846e-01,  ..., 5.6213e-04,
          9.6971e-01, 9.6727e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:49,821 [Process: 0] Synchronize training processes
2024-08-16 16:35:49,821 [Process: 0] Evaluating...
2024-08-16 16:35:49,823 [Process: 0] EPOCH 258:
2024-08-16 16:35:49,825 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0119, 0.0115,  ..., 0.0113, 0.0115, 0.0116],
         [0.0117, 0.0119, 0.0115,  ..., 0.0113, 0.0115, 0.0116],
         [0.0117, 0.0119, 0.0115,  ..., 0.0113, 0.0115, 0.0116],
         [0.9649, 0.9642, 0.9654,  ..., 0.9661, 0.9654, 0.9651]],
        [[0.0121, 0.0119, 0.0120,  ..., 0.0116, 0.0116, 0.0123],
         [0.0121, 0.0119, 0.0120,  ..., 0.0116, 0.0116, 0.0123],
         [0.0121, 0.0119, 0.0120,  ..., 0.0116, 0.0116, 0.0123],
         [0.9637, 0.9642, 0.9641,  ..., 0.9652, 0.9651, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:35:51,900 [Process: 0] Synchronize training processes
2024-08-16 16:35:51,900 [Process: 0] Evaluating...
2024-08-16 16:35:51,902 [Process: 0] EPOCH 259:
2024-08-16 16:35:51,904 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0112, 0.0107,  ..., 0.0110, 0.0106, 0.0109],
         [0.0107, 0.0112, 0.0107,  ..., 0.0110, 0.0106, 0.0109],
         [0.0107, 0.0112, 0.0107,  ..., 0.0110, 0.0106, 0.0109],
         [0.9679, 0.9665, 0.9679,  ..., 0.9669, 0.9683, 0.9673]],
        [[0.0109, 0.0106, 0.0103,  ..., 0.0011, 0.0101, 0.0108],
         [0.0109, 0.0106, 0.0103,  ..., 0.0011, 0.0101, 0.0108],
         [0.0109, 0.0106, 0.0103,  ..., 0.9968, 0.0101, 0.0108],
         [0.9674, 0.9683, 0.9690,  ..., 0.0011, 0.9696, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0116, 0.0114,  ..., 0.0116, 0.0113, 0.0116],
         [0.0115, 0.0116, 0.0114,  ..., 0.0116, 0.0113, 0.0116],
         [0.0115, 0.0116, 0.0114,  ..., 0.0116, 0.0113, 0.0116],
         [0.9655, 0.9652, 0.9658,  ..., 0.9652, 0.9661, 0.9652]],
        [[0.0126, 0.0120, 0.0119,  ..., 0.0116, 0.0115, 0.0123],
         [0.0126, 0.0120, 0.0119,  ..., 0.0116, 0.0115, 0.0123],
         [0.0148, 0.0136, 0.0119,  ..., 0.0116, 0.0115, 0.0123],
         [0.9600, 0.9623, 0.9642,  ..., 0.9651, 0.9656, 0.9632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:35:53,965 [Process: 0] Synchronize training processes
2024-08-16 16:35:53,965 [Process: 0] Evaluating...
2024-08-16 16:35:53,967 [Process: 0] EPOCH 260:
2024-08-16 16:35:53,969 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0500e-02, 1.0886e-02, 1.0553e-02,  ..., 1.1003e-02,
          1.0534e-02, 1.0532e-02],
         [1.0500e-02, 1.0886e-02, 1.0553e-02,  ..., 1.1003e-02,
          1.0534e-02, 1.0532e-02],
         [1.0500e-02, 1.0886e-02, 1.0553e-02,  ..., 1.1003e-02,
          1.0534e-02, 1.0532e-02],
         [9.6850e-01, 9.6734e-01, 9.6834e-01,  ..., 9.6699e-01,
          9.6840e-01, 9.6840e-01]],
        [[1.1254e-02, 1.0567e-02, 1.0239e-02,  ..., 1.6788e-04,
          1.0732e-02, 1.0620e-02],
         [1.1254e-02, 1.0567e-02, 1.0239e-02,  ..., 1.6788e-04,
          1.0732e-02, 1.0620e-02],
         [1.1254e-02, 1.0567e-02, 1.0239e-02,  ..., 9.9950e-01,
          1.0732e-02, 1.0620e-02],
         [9.6624e-01, 9.6830e-01, 9.6928e-01,  ..., 1.6788e-04,
          9.6780e-01, 9.6814e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0116, 0.0115,  ..., 0.0113, 0.0116, 0.0116],
         [0.0114, 0.0116, 0.0115,  ..., 0.0113, 0.0116, 0.0116],
         [0.0114, 0.0116, 0.0115,  ..., 0.0113, 0.0116, 0.0116],
         [0.9657, 0.9652, 0.9656,  ..., 0.9661, 0.9653, 0.9653]],
        [[0.0119, 0.0124, 0.0116,  ..., 0.0114, 0.0113, 0.0113],
         [0.0119, 0.0124, 0.0116,  ..., 0.0114, 0.0113, 0.0113],
         [0.0119, 0.0124, 0.0116,  ..., 0.0114, 0.0113, 0.0113],
         [0.9643, 0.9628, 0.9653,  ..., 0.9659, 0.9660, 0.9661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:56,044 [Process: 0] Synchronize training processes
2024-08-16 16:35:56,045 [Process: 0] Evaluating...
2024-08-16 16:35:56,047 [Process: 0] EPOCH 261:
2024-08-16 16:35:56,049 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0832e-02, 1.1047e-02, 1.0716e-02,  ..., 1.0289e-02,
          1.0665e-02, 1.0643e-02],
         [1.0832e-02, 1.1047e-02, 1.0716e-02,  ..., 1.0289e-02,
          1.0665e-02, 1.0643e-02],
         [1.0832e-02, 1.1047e-02, 1.0716e-02,  ..., 1.0289e-02,
          1.0665e-02, 1.0643e-02],
         [9.6751e-01, 9.6686e-01, 9.6785e-01,  ..., 9.6913e-01,
          9.6801e-01, 9.6807e-01]],
        [[1.0961e-02, 1.0432e-02, 1.0287e-02,  ..., 1.5607e-04,
          1.0114e-02, 1.0308e-02],
         [1.0961e-02, 1.0432e-02, 1.0287e-02,  ..., 1.5607e-04,
          1.0114e-02, 1.0308e-02],
         [1.0961e-02, 1.0432e-02, 1.0287e-02,  ..., 9.9953e-01,
          1.0114e-02, 1.0308e-02],
         [9.6712e-01, 9.6871e-01, 9.6914e-01,  ..., 1.5607e-04,
          9.6966e-01, 9.6908e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0116, 0.0116, 0.0115,  ..., 0.0114, 0.0114, 0.0113],
         [0.0116, 0.0116, 0.0115,  ..., 0.0114, 0.0114, 0.0113],
         [0.0116, 0.0116, 0.0115,  ..., 0.0114, 0.0114, 0.0113],
         [0.9651, 0.9653, 0.9655,  ..., 0.9658, 0.9659, 0.9660]],
        [[0.0116, 0.0119, 0.0116,  ..., 0.0115, 0.0112, 0.0114],
         [0.0116, 0.0119, 0.0116,  ..., 0.0115, 0.0112, 0.0114],
         [0.0116, 0.0119, 0.0116,  ..., 0.0115, 0.0112, 0.0114],
         [0.9651, 0.9644, 0.9651,  ..., 0.9655, 0.9664, 0.9658]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:35:58,125 [Process: 0] Synchronize training processes
2024-08-16 16:35:58,125 [Process: 0] Evaluating...
2024-08-16 16:35:58,135 [Process: 0] EPOCH 262:
2024-08-16 16:35:58,137 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0486e-02, 1.0565e-02, 1.0529e-02,  ..., 1.0449e-02,
          1.0509e-02, 1.0276e-02],
         [1.0486e-02, 1.0565e-02, 1.0529e-02,  ..., 1.0449e-02,
          1.0509e-02, 1.0276e-02],
         [1.0486e-02, 1.0565e-02, 1.0529e-02,  ..., 1.0449e-02,
          1.0509e-02, 1.0276e-02],
         [9.6854e-01, 9.6830e-01, 9.6841e-01,  ..., 9.6865e-01,
          9.6847e-01, 9.6917e-01]],
        [[1.0980e-02, 1.1090e-02, 1.0270e-02,  ..., 4.8487e-04,
          9.5700e-03, 1.0710e-02],
         [1.0980e-02, 1.1090e-02, 1.0270e-02,  ..., 4.8487e-04,
          9.5700e-03, 1.0710e-02],
         [1.0980e-02, 1.1090e-02, 1.0270e-02,  ..., 9.9855e-01,
          9.5700e-03, 1.0710e-02],
         [9.6706e-01, 9.6673e-01, 9.6919e-01,  ..., 4.8487e-04,
          9.7129e-01, 9.6787e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0113, 0.0113, 0.0111,  ..., 0.0114, 0.0114, 0.0115],
         [0.0113, 0.0113, 0.0111,  ..., 0.0114, 0.0114, 0.0115],
         [0.0113, 0.0113, 0.0111,  ..., 0.0114, 0.0114, 0.0115],
         [0.9661, 0.9660, 0.9668,  ..., 0.9657, 0.9657, 0.9656]],
        [[0.0114, 0.0115, 0.0117,  ..., 0.0112, 0.0112, 0.0114],
         [0.0114, 0.0115, 0.0117,  ..., 0.0112, 0.0112, 0.0114],
         [0.0114, 0.0115, 0.0117,  ..., 0.0112, 0.0112, 0.0114],
         [0.9658, 0.9656, 0.9650,  ..., 0.9664, 0.9663, 0.9658]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:00,198 [Process: 0] Synchronize training processes
2024-08-16 16:36:00,198 [Process: 0] Evaluating...
2024-08-16 16:36:00,200 [Process: 0] EPOCH 263:
2024-08-16 16:36:00,202 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0419e-02, 1.0339e-02, 9.9872e-03,  ..., 1.0393e-02,
          1.0442e-02, 1.0224e-02],
         [1.0419e-02, 1.0339e-02, 9.9872e-03,  ..., 1.0393e-02,
          1.0442e-02, 1.0224e-02],
         [1.0419e-02, 1.0339e-02, 9.9872e-03,  ..., 1.0393e-02,
          1.0442e-02, 1.0224e-02],
         [9.6874e-01, 9.6898e-01, 9.7004e-01,  ..., 9.6882e-01,
          9.6867e-01, 9.6933e-01]],
        [[1.0502e-02, 1.0306e-02, 1.0564e-02,  ..., 1.3608e-05,
          1.0574e-02, 9.8557e-03],
         [1.0502e-02, 1.0306e-02, 1.0564e-02,  ..., 1.3608e-05,
          1.0574e-02, 9.8557e-03],
         [1.0502e-02, 1.0306e-02, 1.0564e-02,  ..., 9.9996e-01,
          1.0574e-02, 9.8557e-03],
         [9.6849e-01, 9.6908e-01, 9.6831e-01,  ..., 1.3608e-05,
          9.6828e-01, 9.7043e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0114, 0.0111,  ..., 0.0114, 0.0111, 0.0111],
         [0.0115, 0.0114, 0.0111,  ..., 0.0114, 0.0111, 0.0111],
         [0.0115, 0.0114, 0.0111,  ..., 0.0114, 0.0111, 0.0111],
         [0.9654, 0.9658, 0.9666,  ..., 0.9658, 0.9667, 0.9667]],
        [[0.0114, 0.0117, 0.0116,  ..., 0.0113, 0.0111, 0.0113],
         [0.0114, 0.0117, 0.0116,  ..., 0.0113, 0.0111, 0.0113],
         [0.0114, 0.0117, 0.0116,  ..., 0.0113, 0.0111, 0.0113],
         [0.9657, 0.9649, 0.9653,  ..., 0.9660, 0.9666, 0.9660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:02,309 [Process: 0] Synchronize training processes
2024-08-16 16:36:02,309 [Process: 0] Evaluating...
2024-08-16 16:36:02,311 [Process: 0] EPOCH 264:
2024-08-16 16:36:02,313 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0382e-02, 1.0249e-02, 1.0195e-02,  ..., 1.0601e-02,
          1.0365e-02, 1.0144e-02],
         [1.0382e-02, 1.0249e-02, 1.0195e-02,  ..., 1.0601e-02,
          1.0365e-02, 1.0144e-02],
         [1.0382e-02, 1.0249e-02, 1.0195e-02,  ..., 1.0601e-02,
          1.0365e-02, 1.0144e-02],
         [9.6885e-01, 9.6925e-01, 9.6941e-01,  ..., 9.6820e-01,
          9.6891e-01, 9.6957e-01]],
        [[1.0877e-02, 1.1131e-02, 1.0679e-02,  ..., 1.5586e-05,
          1.0353e-02, 1.0296e-02],
         [1.0877e-02, 1.1131e-02, 1.0679e-02,  ..., 1.5586e-05,
          1.0353e-02, 1.0296e-02],
         [1.0877e-02, 1.1131e-02, 1.0679e-02,  ..., 9.9995e-01,
          1.0353e-02, 1.0296e-02],
         [9.6737e-01, 9.6661e-01, 9.6796e-01,  ..., 1.5586e-05,
          9.6894e-01, 9.6911e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0112, 0.0114, 0.0111,  ..., 0.0113, 0.0116, 0.0113],
         [0.0112, 0.0114, 0.0111,  ..., 0.0113, 0.0116, 0.0113],
         [0.0112, 0.0114, 0.0111,  ..., 0.0113, 0.0116, 0.0113],
         [0.9665, 0.9658, 0.9667,  ..., 0.9662, 0.9651, 0.9660]],
        [[0.0116, 0.0114, 0.0117,  ..., 0.0110, 0.0112, 0.0109],
         [0.0116, 0.0114, 0.0117,  ..., 0.0110, 0.0112, 0.0109],
         [0.0116, 0.0114, 0.0117,  ..., 0.0110, 0.0112, 0.0109],
         [0.9653, 0.9657, 0.9648,  ..., 0.9670, 0.9663, 0.9672]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:04,391 [Process: 0] Synchronize training processes
2024-08-16 16:36:04,391 [Process: 0] Evaluating...
2024-08-16 16:36:04,393 [Process: 0] EPOCH 265:
2024-08-16 16:36:04,395 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0580e-02, 1.0448e-02, 1.0411e-02,  ..., 1.0669e-02,
          1.0649e-02, 1.0972e-02],
         [1.0580e-02, 1.0448e-02, 1.0411e-02,  ..., 1.0669e-02,
          1.0649e-02, 1.0972e-02],
         [1.0580e-02, 1.0448e-02, 1.0411e-02,  ..., 1.0669e-02,
          1.0649e-02, 1.0972e-02],
         [9.6826e-01, 9.6866e-01, 9.6877e-01,  ..., 9.6799e-01,
          9.6805e-01, 9.6708e-01]],
        [[1.0718e-02, 1.0370e-02, 1.0277e-02,  ..., 5.1670e-05,
          9.6225e-03, 1.0291e-02],
         [1.0718e-02, 1.0370e-02, 1.0277e-02,  ..., 5.1670e-05,
          9.6225e-03, 1.0291e-02],
         [1.0718e-02, 1.0370e-02, 1.0277e-02,  ..., 9.9984e-01,
          9.6225e-03, 1.0291e-02],
         [9.6785e-01, 9.6889e-01, 9.6917e-01,  ..., 5.1670e-05,
          9.7113e-01, 9.6913e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0113, 0.0112, 0.0111,  ..., 0.0114, 0.0131, 0.0114],
         [0.0113, 0.0112, 0.0111,  ..., 0.0114, 0.0131, 0.0114],
         [0.0113, 0.0112, 0.0111,  ..., 0.0114, 0.0169, 0.0114],
         [0.9660, 0.9665, 0.9668,  ..., 0.9659, 0.9569, 0.9659]],
        [[0.0118, 0.0116, 0.0112,  ..., 0.0110, 0.0106, 0.0109],
         [0.0118, 0.0116, 0.0112,  ..., 0.0110, 0.0106, 0.0109],
         [0.0118, 0.0116, 0.0112,  ..., 0.0110, 0.0106, 0.0109],
         [0.9647, 0.9651, 0.9664,  ..., 0.9670, 0.9683, 0.9673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:06,557 [Process: 0] Synchronize training processes
2024-08-16 16:36:06,557 [Process: 0] Evaluating...
2024-08-16 16:36:06,559 [Process: 0] EPOCH 266:
2024-08-16 16:36:06,561 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0101, 0.0106,  ..., 0.0102, 0.0104, 0.0102],
         [0.0106, 0.0101, 0.0106,  ..., 0.0102, 0.0104, 0.0102],
         [0.0106, 0.0101, 0.0106,  ..., 0.0102, 0.0104, 0.0102],
         [0.9681, 0.9698, 0.9683,  ..., 0.9693, 0.9689, 0.9695]],
        [[0.0116, 0.0109, 0.0103,  ..., 0.0011, 0.0099, 0.0100],
         [0.0116, 0.0109, 0.0103,  ..., 0.0011, 0.0099, 0.0100],
         [0.0116, 0.0109, 0.0103,  ..., 0.9966, 0.0099, 0.0100],
         [0.9653, 0.9674, 0.9690,  ..., 0.0011, 0.9704, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0114, 0.0112,  ..., 0.0113, 0.0121, 0.0111],
         [0.0110, 0.0114, 0.0112,  ..., 0.0113, 0.0121, 0.0111],
         [0.0110, 0.0114, 0.0112,  ..., 0.0113, 0.0141, 0.0111],
         [0.9669, 0.9659, 0.9663,  ..., 0.9661, 0.9617, 0.9667]],
        [[0.0115, 0.0114, 0.0114,  ..., 0.0107, 0.0112, 0.0112],
         [0.0115, 0.0114, 0.0114,  ..., 0.0107, 0.0112, 0.0112],
         [0.0118, 0.0114, 0.0114,  ..., 0.0107, 0.0112, 0.0112],
         [0.9652, 0.9659, 0.9659,  ..., 0.9680, 0.9663, 0.9663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:08,730 [Process: 0] Synchronize training processes
2024-08-16 16:36:08,731 [Process: 0] Evaluating...
2024-08-16 16:36:08,733 [Process: 0] EPOCH 267:
2024-08-16 16:36:08,735 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.9307e-03, 1.0254e-02, 9.9989e-03,  ..., 1.0027e-02,
          1.0345e-02, 9.9623e-03],
         [9.9307e-03, 1.0254e-02, 9.9989e-03,  ..., 1.0027e-02,
          1.0345e-02, 9.9623e-03],
         [9.9307e-03, 1.0254e-02, 9.9989e-03,  ..., 1.0027e-02,
          1.0345e-02, 9.9623e-03],
         [9.7021e-01, 9.6924e-01, 9.7000e-01,  ..., 9.6992e-01,
          9.6896e-01, 9.7011e-01]],
        [[1.3457e-02, 1.1206e-02, 1.1147e-02,  ..., 8.5558e-05,
          9.7683e-03, 1.0609e-02],
         [1.3457e-02, 1.1206e-02, 1.1147e-02,  ..., 8.5558e-05,
          9.7683e-03, 1.0609e-02],
         [1.3457e-02, 1.1206e-02, 1.1147e-02,  ..., 9.9974e-01,
          9.7683e-03, 1.0609e-02],
         [9.5963e-01, 9.6638e-01, 9.6656e-01,  ..., 8.5558e-05,
          9.7070e-01, 9.6817e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0112, 0.0112,  ..., 0.0111, 0.0110, 0.0109],
         [0.0110, 0.0112, 0.0112,  ..., 0.0111, 0.0110, 0.0109],
         [0.0110, 0.0112, 0.0112,  ..., 0.0111, 0.0110, 0.0109],
         [0.9670, 0.9663, 0.9663,  ..., 0.9668, 0.9671, 0.9674]],
        [[0.0112, 0.0114, 0.0112,  ..., 0.0115, 0.0110, 0.0111],
         [0.0112, 0.0114, 0.0112,  ..., 0.0115, 0.0110, 0.0111],
         [0.0112, 0.0114, 0.0112,  ..., 0.0115, 0.0110, 0.0111],
         [0.9664, 0.9659, 0.9663,  ..., 0.9655, 0.9671, 0.9667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:10,857 [Process: 0] Synchronize training processes
2024-08-16 16:36:10,857 [Process: 0] Evaluating...
2024-08-16 16:36:10,859 [Process: 0] EPOCH 268:
2024-08-16 16:36:10,861 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7606e-03, 9.9851e-03, 1.0246e-02,  ..., 9.9382e-03,
          1.0126e-02, 1.0126e-02],
         [9.7606e-03, 9.9851e-03, 1.0246e-02,  ..., 9.9382e-03,
          1.0126e-02, 1.0126e-02],
         [9.7606e-03, 9.9851e-03, 1.0246e-02,  ..., 9.9382e-03,
          1.0126e-02, 1.0126e-02],
         [9.7072e-01, 9.7004e-01, 9.6926e-01,  ..., 9.7019e-01,
          9.6962e-01, 9.6962e-01]],
        [[1.3095e-02, 1.0667e-02, 1.0425e-02,  ..., 1.2534e-04,
          1.0439e-02, 1.0651e-02],
         [1.3095e-02, 1.0667e-02, 1.0425e-02,  ..., 1.2534e-04,
          1.0439e-02, 1.0651e-02],
         [1.3095e-02, 1.0667e-02, 1.0425e-02,  ..., 9.9962e-01,
          1.0439e-02, 1.0651e-02],
         [9.6072e-01, 9.6800e-01, 9.6872e-01,  ..., 1.2534e-04,
          9.6868e-01, 9.6805e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0111, 0.0112,  ..., 0.0112, 0.0109, 0.0111],
         [0.0114, 0.0111, 0.0112,  ..., 0.0112, 0.0109, 0.0111],
         [0.0114, 0.0111, 0.0112,  ..., 0.0112, 0.0109, 0.0111],
         [0.9657, 0.9668, 0.9664,  ..., 0.9665, 0.9673, 0.9667]],
        [[0.0111, 0.0111, 0.0112,  ..., 0.0108, 0.0110, 0.0106],
         [0.0111, 0.0111, 0.0112,  ..., 0.0108, 0.0110, 0.0106],
         [0.0111, 0.0111, 0.0112,  ..., 0.0108, 0.0110, 0.0106],
         [0.9667, 0.9666, 0.9663,  ..., 0.9676, 0.9670, 0.9682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:12,987 [Process: 0] Synchronize training processes
2024-08-16 16:36:12,988 [Process: 0] Evaluating...
2024-08-16 16:36:12,990 [Process: 0] EPOCH 269:
2024-08-16 16:36:12,991 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0101, 0.0098,  ..., 0.0101, 0.0103, 0.0103],
         [0.0101, 0.0101, 0.0098,  ..., 0.0101, 0.0103, 0.0103],
         [0.0101, 0.0101, 0.0098,  ..., 0.0101, 0.0103, 0.0103],
         [0.9696, 0.9696, 0.9705,  ..., 0.9698, 0.9690, 0.9690]],
        [[0.0135, 0.0104, 0.0117,  ..., 0.0013, 0.0098, 0.0104],
         [0.0135, 0.0104, 0.0117,  ..., 0.0013, 0.0098, 0.0104],
         [0.0135, 0.0104, 0.0117,  ..., 0.9962, 0.0098, 0.0104],
         [0.9596, 0.9689, 0.9648,  ..., 0.0013, 0.9707, 0.9687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0112, 0.0109,  ..., 0.0112, 0.0111, 0.0111],
         [0.0107, 0.0112, 0.0109,  ..., 0.0112, 0.0111, 0.0111],
         [0.0107, 0.0112, 0.0109,  ..., 0.0112, 0.0111, 0.0111],
         [0.9679, 0.9665, 0.9674,  ..., 0.9665, 0.9668, 0.9668]],
        [[0.0115, 0.0111, 0.0110,  ..., 0.0110, 0.0111, 0.0104],
         [0.0115, 0.0111, 0.0110,  ..., 0.0110, 0.0111, 0.0104],
         [0.0115, 0.0111, 0.0110,  ..., 0.0110, 0.0111, 0.0104],
         [0.9656, 0.9667, 0.9669,  ..., 0.9670, 0.9667, 0.9687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0103e-02, 1.0148e-02, 1.0078e-02,  ..., 1.0114e-02,
          1.0222e-02, 1.0136e-02],
         [1.0103e-02, 1.0148e-02, 1.0078e-02,  ..., 1.0114e-02,
          1.0222e-02, 1.0136e-02],
         [1.0103e-02, 1.0148e-02, 1.0078e-02,  ..., 1.0114e-02,
          1.0222e-02, 1.0136e-02],
         [9.6969e-01, 9.6956e-01, 9.6977e-01,  ..., 9.6966e-01,
          9.6933e-01, 9.6959e-01]],
        [[1.1393e-02, 9.9353e-03, 9.7443e-03,  ..., 1.4589e-04,
          9.8375e-03, 9.9950e-03],
         [1.1393e-02, 9.9353e-03, 9.7443e-03,  ..., 1.4589e-04,
          9.8375e-03, 9.9950e-03],
         [1.1393e-02, 9.9353e-03, 9.7443e-03,  ..., 9.9956e-01,
          9.8375e-03, 9.9950e-03],
         [9.6582e-01, 9.7019e-01, 9.7077e-01,  ..., 1.4589e-04,
          9.7049e-01, 9.7001e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:15,090 [Process: 0] Synchronize training processes
2024-08-16 16:36:15,090 [Process: 0] Evaluating...
2024-08-16 16:36:15,092 [Process: 0] EPOCH 270:
2024-08-16 16:36:15,094 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0108, 0.0105, 0.0105,  ..., 0.0110, 0.0106, 0.0107],
         [0.0108, 0.0105, 0.0105,  ..., 0.0110, 0.0106, 0.0107],
         [0.0108, 0.0105, 0.0105,  ..., 0.0110, 0.0106, 0.0107],
         [0.9677, 0.9684, 0.9685,  ..., 0.9669, 0.9681, 0.9679]],
        [[0.0113, 0.0110, 0.0113,  ..., 0.0104, 0.0109, 0.0110],
         [0.0113, 0.0110, 0.0113,  ..., 0.0104, 0.0109, 0.0110],
         [0.0113, 0.0110, 0.0113,  ..., 0.0104, 0.0109, 0.0110],
         [0.9662, 0.9670, 0.9662,  ..., 0.9688, 0.9674, 0.9671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0221e-02, 1.0048e-02, 1.0072e-02,  ..., 9.8456e-03,
          1.0196e-02, 9.9374e-03],
         [1.0221e-02, 1.0048e-02, 1.0072e-02,  ..., 9.8456e-03,
          1.0196e-02, 9.9374e-03],
         [1.0221e-02, 1.0048e-02, 1.0072e-02,  ..., 9.8456e-03,
          1.0196e-02, 9.9374e-03],
         [9.6934e-01, 9.6986e-01, 9.6978e-01,  ..., 9.7046e-01,
          9.6941e-01, 9.7019e-01]],
        [[1.1732e-02, 9.8578e-03, 1.0596e-02,  ..., 4.1546e-04,
          9.6168e-03, 1.0224e-02],
         [1.1732e-02, 9.8578e-03, 1.0596e-02,  ..., 4.1546e-04,
          9.6168e-03, 1.0224e-02],
         [1.1732e-02, 9.8578e-03, 1.0596e-02,  ..., 9.9875e-01,
          9.6168e-03, 1.0224e-02],
         [9.6480e-01, 9.7043e-01, 9.6821e-01,  ..., 4.1546e-04,
          9.7115e-01, 9.6933e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
2024-08-16 16:36:17,113 [Process: 0] Synchronize training processes
2024-08-16 16:36:17,114 [Process: 0] Evaluating...
2024-08-16 16:36:17,115 [Process: 0] EPOCH 271:
2024-08-16 16:36:17,117 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0108, 0.0108,  ..., 0.0109, 0.0107, 0.0108],
         [0.0107, 0.0108, 0.0108,  ..., 0.0109, 0.0107, 0.0108],
         [0.0107, 0.0108, 0.0108,  ..., 0.0109, 0.0107, 0.0108],
         [0.9678, 0.9676, 0.9677,  ..., 0.9674, 0.9678, 0.9675]],
        [[0.0109, 0.0114, 0.0108,  ..., 0.0105, 0.0107, 0.0108],
         [0.0109, 0.0114, 0.0108,  ..., 0.0105, 0.0107, 0.0108],
         [0.0109, 0.0114, 0.0108,  ..., 0.0105, 0.0107, 0.0108],
         [0.9674, 0.9659, 0.9676,  ..., 0.9684, 0.9679, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0169e-02, 1.0002e-02, 9.9192e-03,  ..., 1.0113e-02,
          1.0190e-02, 9.9659e-03],
         [1.0169e-02, 1.0002e-02, 9.9192e-03,  ..., 1.0113e-02,
          1.0190e-02, 9.9659e-03],
         [1.0169e-02, 1.0002e-02, 9.9192e-03,  ..., 1.0113e-02,
          1.0190e-02, 9.9659e-03],
         [9.6949e-01, 9.6999e-01, 9.7024e-01,  ..., 9.6966e-01,
          9.6943e-01, 9.7010e-01]],
        [[9.7382e-03, 1.0972e-02, 1.0199e-02,  ..., 6.8111e-04,
          9.2763e-03, 9.5952e-03],
         [9.7382e-03, 1.0972e-02, 1.0199e-02,  ..., 6.8111e-04,
          9.2763e-03, 9.5952e-03],
         [9.7382e-03, 1.0972e-02, 1.0199e-02,  ..., 9.9796e-01,
          9.2763e-03, 9.5952e-03],
         [9.7079e-01, 9.6708e-01, 9.6940e-01,  ..., 6.8111e-04,
          9.7217e-01, 9.7121e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:19,150 [Process: 0] Synchronize training processes
2024-08-16 16:36:19,151 [Process: 0] Evaluating...
2024-08-16 16:36:19,158 [Process: 0] EPOCH 272:
2024-08-16 16:36:19,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0110, 0.0110,  ..., 0.0108, 0.0108, 0.0105],
         [0.0111, 0.0110, 0.0110,  ..., 0.0108, 0.0108, 0.0105],
         [0.0111, 0.0110, 0.0110,  ..., 0.0108, 0.0108, 0.0105],
         [0.9668, 0.9670, 0.9669,  ..., 0.9675, 0.9676, 0.9685]],
        [[0.0114, 0.0113, 0.0109,  ..., 0.0108, 0.0107, 0.0108],
         [0.0114, 0.0113, 0.0109,  ..., 0.0108, 0.0107, 0.0108],
         [0.0114, 0.0113, 0.0109,  ..., 0.0108, 0.0107, 0.0108],
         [0.9657, 0.9660, 0.9673,  ..., 0.9676, 0.9679, 0.9675]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0103, 0.0096,  ..., 0.0097, 0.0100, 0.0099],
         [0.0098, 0.0103, 0.0096,  ..., 0.0097, 0.0100, 0.0099],
         [0.0098, 0.0103, 0.0096,  ..., 0.0097, 0.0100, 0.0099],
         [0.9706, 0.9692, 0.9711,  ..., 0.9708, 0.9701, 0.9704]],
        [[0.0111, 0.0109, 0.0102,  ..., 0.0019, 0.0098, 0.0099],
         [0.0111, 0.0109, 0.0102,  ..., 0.0019, 0.0098, 0.0099],
         [0.0111, 0.0109, 0.0102,  ..., 0.9943, 0.0098, 0.0099],
         [0.9668, 0.9673, 0.9693,  ..., 0.0019, 0.9706, 0.9704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:21,259 [Process: 0] Synchronize training processes
2024-08-16 16:36:21,259 [Process: 0] Evaluating...
2024-08-16 16:36:21,261 [Process: 0] EPOCH 273:
2024-08-16 16:36:21,263 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0108, 0.0108,  ..., 0.0105, 0.0105, 0.0107],
         [0.0107, 0.0108, 0.0108,  ..., 0.0105, 0.0105, 0.0107],
         [0.0107, 0.0108, 0.0108,  ..., 0.0105, 0.0105, 0.0107],
         [0.9679, 0.9677, 0.9676,  ..., 0.9686, 0.9685, 0.9679]],
        [[0.0109, 0.0109, 0.0107,  ..., 0.0106, 0.0105, 0.0107],
         [0.0109, 0.0109, 0.0107,  ..., 0.0106, 0.0105, 0.0107],
         [0.0109, 0.0109, 0.0107,  ..., 0.0106, 0.0105, 0.0107],
         [0.9674, 0.9672, 0.9679,  ..., 0.9683, 0.9684, 0.9678]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.6343e-03, 1.0001e-02, 9.8620e-03,  ..., 9.7619e-03,
          9.9405e-03, 1.0009e-02],
         [9.6343e-03, 1.0001e-02, 9.8620e-03,  ..., 9.7619e-03,
          9.9405e-03, 1.0009e-02],
         [9.6343e-03, 1.0001e-02, 9.8620e-03,  ..., 9.7619e-03,
          9.9405e-03, 1.0009e-02],
         [9.7110e-01, 9.7000e-01, 9.7041e-01,  ..., 9.7071e-01,
          9.7018e-01, 9.6997e-01]],
        [[1.0989e-02, 1.0748e-02, 1.1192e-02,  ..., 1.5529e-05,
          9.9628e-03, 9.5468e-03],
         [1.0989e-02, 1.0748e-02, 1.1192e-02,  ..., 1.5529e-05,
          9.9628e-03, 9.5468e-03],
         [1.0989e-02, 1.0748e-02, 1.1192e-02,  ..., 9.9995e-01,
          9.9628e-03, 9.5468e-03],
         [9.6703e-01, 9.6776e-01, 9.6642e-01,  ..., 1.5529e-05,
          9.7011e-01, 9.7136e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:23,349 [Process: 0] Synchronize training processes
2024-08-16 16:36:23,349 [Process: 0] Evaluating...
2024-08-16 16:36:23,352 [Process: 0] EPOCH 274:
2024-08-16 16:36:23,354 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0108, 0.0107,  ..., 0.0106, 0.0107, 0.0107],
         [0.0107, 0.0108, 0.0107,  ..., 0.0106, 0.0107, 0.0107],
         [0.0107, 0.0108, 0.0107,  ..., 0.0106, 0.0107, 0.0107],
         [0.9680, 0.9676, 0.9678,  ..., 0.9683, 0.9680, 0.9678]],
        [[0.0108, 0.0108, 0.0108,  ..., 0.0106, 0.0104, 0.0104],
         [0.0108, 0.0108, 0.0108,  ..., 0.0106, 0.0104, 0.0104],
         [0.0108, 0.0108, 0.0108,  ..., 0.0106, 0.0104, 0.0104],
         [0.9675, 0.9675, 0.9677,  ..., 0.9683, 0.9688, 0.9688]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0096],
         [0.0097, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0096],
         [0.0097, 0.0098, 0.0098,  ..., 0.0098, 0.0098, 0.0096],
         [0.9708, 0.9706, 0.9706,  ..., 0.9707, 0.9707, 0.9711]],
        [[0.0102, 0.0097, 0.0099,  ..., 0.0078, 0.0096, 0.0095],
         [0.0102, 0.0097, 0.0099,  ..., 0.0078, 0.0096, 0.0095],
         [0.0102, 0.0097, 0.0099,  ..., 0.9765, 0.0096, 0.0095],
         [0.9693, 0.9709, 0.9703,  ..., 0.0078, 0.9711, 0.9716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:25,402 [Process: 0] Synchronize training processes
2024-08-16 16:36:25,403 [Process: 0] Evaluating...
2024-08-16 16:36:25,405 [Process: 0] EPOCH 275:
2024-08-16 16:36:25,407 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0108, 0.0109,  ..., 0.0106, 0.0106, 0.0103],
         [0.0107, 0.0108, 0.0109,  ..., 0.0106, 0.0106, 0.0103],
         [0.0107, 0.0108, 0.0109,  ..., 0.0106, 0.0106, 0.0103],
         [0.9679, 0.9676, 0.9674,  ..., 0.9682, 0.9681, 0.9690]],
        [[0.0107, 0.0108, 0.0109,  ..., 0.0107, 0.0104, 0.0104],
         [0.0107, 0.0108, 0.0109,  ..., 0.0107, 0.0104, 0.0104],
         [0.0107, 0.0108, 0.0109,  ..., 0.0107, 0.0104, 0.0104],
         [0.9679, 0.9677, 0.9673,  ..., 0.9679, 0.9687, 0.9687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7108e-03, 9.8451e-03, 9.9231e-03,  ..., 9.7256e-03,
          9.8876e-03, 9.6998e-03],
         [9.7108e-03, 9.8451e-03, 9.9231e-03,  ..., 9.7256e-03,
          9.8876e-03, 9.6998e-03],
         [9.7108e-03, 9.8451e-03, 9.9231e-03,  ..., 9.7256e-03,
          9.8876e-03, 9.6998e-03],
         [9.7087e-01, 9.7046e-01, 9.7023e-01,  ..., 9.7082e-01,
          9.7034e-01, 9.7090e-01]],
        [[1.0596e-02, 9.9230e-03, 1.0003e-02,  ..., 2.4057e-04,
          9.4498e-03, 9.4078e-03],
         [1.0596e-02, 9.9230e-03, 1.0003e-02,  ..., 2.4057e-04,
          9.4498e-03, 9.4078e-03],
         [1.0596e-02, 9.9230e-03, 1.0003e-02,  ..., 9.9928e-01,
          9.4498e-03, 9.4078e-03],
         [9.6821e-01, 9.7023e-01, 9.6999e-01,  ..., 2.4057e-04,
          9.7165e-01, 9.7178e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:27,388 [Process: 0] Synchronize training processes
2024-08-16 16:36:27,388 [Process: 0] Evaluating...
2024-08-16 16:36:27,390 [Process: 0] EPOCH 276:
2024-08-16 16:36:27,392 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0104, 0.0104,  ..., 0.0104, 0.0104, 0.0105],
         [0.0105, 0.0104, 0.0104,  ..., 0.0104, 0.0104, 0.0105],
         [0.0105, 0.0104, 0.0104,  ..., 0.0104, 0.0104, 0.0105],
         [0.9684, 0.9687, 0.9688,  ..., 0.9688, 0.9689, 0.9684]],
        [[0.0107, 0.0107, 0.0106,  ..., 0.0103, 0.0105, 0.0107],
         [0.0107, 0.0107, 0.0106,  ..., 0.0103, 0.0105, 0.0107],
         [0.0107, 0.0107, 0.0106,  ..., 0.0103, 0.0105, 0.0107],
         [0.9680, 0.9680, 0.9681,  ..., 0.9692, 0.9684, 0.9680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.5521e-03, 9.5123e-03, 9.8640e-03,  ..., 9.6993e-03,
          9.8419e-03, 9.3935e-03],
         [9.5521e-03, 9.5123e-03, 9.8640e-03,  ..., 9.6993e-03,
          9.8419e-03, 9.3935e-03],
         [9.5521e-03, 9.5123e-03, 9.8640e-03,  ..., 9.6993e-03,
          9.8419e-03, 9.3935e-03],
         [9.7134e-01, 9.7146e-01, 9.7041e-01,  ..., 9.7090e-01,
          9.7047e-01, 9.7182e-01]],
        [[9.8511e-03, 1.0044e-02, 9.2759e-03,  ..., 2.1066e-04,
          9.3402e-03, 9.8855e-03],
         [9.8511e-03, 1.0044e-02, 9.2759e-03,  ..., 2.1066e-04,
          9.3402e-03, 9.8855e-03],
         [9.8511e-03, 1.0044e-02, 9.2759e-03,  ..., 9.9937e-01,
          9.3402e-03, 9.8855e-03],
         [9.7045e-01, 9.6987e-01, 9.7217e-01,  ..., 2.1066e-04,
          9.7198e-01, 9.7034e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:29,469 [Process: 0] Synchronize training processes
2024-08-16 16:36:29,469 [Process: 0] Evaluating...
2024-08-16 16:36:29,471 [Process: 0] EPOCH 277:
2024-08-16 16:36:29,473 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0103, 0.0104,  ..., 0.0103, 0.0106, 0.0105],
         [0.0102, 0.0103, 0.0104,  ..., 0.0103, 0.0106, 0.0105],
         [0.0102, 0.0103, 0.0104,  ..., 0.0103, 0.0106, 0.0105],
         [0.9693, 0.9690, 0.9687,  ..., 0.9691, 0.9682, 0.9684]],
        [[0.0110, 0.0109, 0.0113,  ..., 0.0105, 0.0101, 0.0100],
         [0.0110, 0.0109, 0.0113,  ..., 0.0105, 0.0101, 0.0100],
         [0.0110, 0.0109, 0.0113,  ..., 0.0105, 0.0101, 0.0100],
         [0.9671, 0.9674, 0.9660,  ..., 0.9686, 0.9696, 0.9701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.6103e-03, 9.9012e-03, 9.7424e-03,  ..., 9.7111e-03,
          9.5910e-03, 9.6858e-03],
         [9.6103e-03, 9.9012e-03, 9.7424e-03,  ..., 9.7111e-03,
          9.5910e-03, 9.6858e-03],
         [9.6103e-03, 9.9012e-03, 9.7424e-03,  ..., 9.7111e-03,
          9.5910e-03, 9.6858e-03],
         [9.7117e-01, 9.7030e-01, 9.7077e-01,  ..., 9.7087e-01,
          9.7123e-01, 9.7094e-01]],
        [[9.7138e-03, 1.0704e-02, 9.3618e-03,  ..., 9.9221e-05,
          1.0055e-02, 8.9760e-03],
         [9.7138e-03, 1.0704e-02, 9.3618e-03,  ..., 9.9221e-05,
          1.0055e-02, 8.9760e-03],
         [9.7138e-03, 1.0704e-02, 9.3618e-03,  ..., 9.9970e-01,
          1.0055e-02, 8.9760e-03],
         [9.7086e-01, 9.6789e-01, 9.7191e-01,  ..., 9.9221e-05,
          9.6984e-01, 9.7307e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:31,552 [Process: 0] Synchronize training processes
2024-08-16 16:36:31,552 [Process: 0] Evaluating...
2024-08-16 16:36:31,554 [Process: 0] EPOCH 278:
2024-08-16 16:36:31,556 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0104, 0.0107,  ..., 0.0107, 0.0106, 0.0101],
         [0.0106, 0.0104, 0.0107,  ..., 0.0107, 0.0106, 0.0101],
         [0.0106, 0.0104, 0.0107,  ..., 0.0107, 0.0106, 0.0101],
         [0.9681, 0.9688, 0.9680,  ..., 0.9678, 0.9681, 0.9696]],
        [[0.0103, 0.0113, 0.0109,  ..., 0.0100, 0.0103, 0.0101],
         [0.0103, 0.0113, 0.0109,  ..., 0.0100, 0.0103, 0.0101],
         [0.0103, 0.0113, 0.0109,  ..., 0.0100, 0.0103, 0.0101],
         [0.9692, 0.9662, 0.9672,  ..., 0.9699, 0.9690, 0.9696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.8349e-03, 9.8630e-03, 9.7177e-03,  ..., 9.5566e-03,
          9.7633e-03, 9.4255e-03],
         [9.8349e-03, 9.8630e-03, 9.7177e-03,  ..., 9.5566e-03,
          9.7633e-03, 9.4255e-03],
         [9.8349e-03, 9.8630e-03, 9.7177e-03,  ..., 9.5566e-03,
          9.7633e-03, 9.4255e-03],
         [9.7050e-01, 9.7041e-01, 9.7085e-01,  ..., 9.7133e-01,
          9.7071e-01, 9.7172e-01]],
        [[1.0892e-02, 1.0035e-02, 1.0574e-02,  ..., 2.2953e-05,
          9.1170e-03, 9.1779e-03],
         [1.0892e-02, 1.0035e-02, 1.0574e-02,  ..., 2.2953e-05,
          9.1170e-03, 9.1779e-03],
         [1.0892e-02, 1.0035e-02, 1.0574e-02,  ..., 9.9993e-01,
          9.1170e-03, 9.1779e-03],
         [9.6732e-01, 9.6990e-01, 9.6828e-01,  ..., 2.2953e-05,
          9.7265e-01, 9.7247e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:33,640 [Process: 0] Synchronize training processes
2024-08-16 16:36:33,641 [Process: 0] Evaluating...
2024-08-16 16:36:33,643 [Process: 0] EPOCH 279:
2024-08-16 16:36:33,645 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0105, 0.0105,  ..., 0.0101, 0.0105, 0.0100],
         [0.0104, 0.0105, 0.0105,  ..., 0.0101, 0.0105, 0.0100],
         [0.0104, 0.0105, 0.0105,  ..., 0.0101, 0.0105, 0.0100],
         [0.9689, 0.9686, 0.9686,  ..., 0.9697, 0.9684, 0.9700]],
        [[0.0106, 0.0107, 0.0109,  ..., 0.0103, 0.0099, 0.0100],
         [0.0106, 0.0107, 0.0109,  ..., 0.0103, 0.0099, 0.0100],
         [0.0106, 0.0107, 0.0109,  ..., 0.0103, 0.0099, 0.0100],
         [0.9683, 0.9680, 0.9673,  ..., 0.9691, 0.9704, 0.9700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0094, 0.0096,  ..., 0.0096, 0.0097, 0.0094],
         [0.0097, 0.0094, 0.0096,  ..., 0.0096, 0.0097, 0.0094],
         [0.0097, 0.0094, 0.0096,  ..., 0.0096, 0.0097, 0.0094],
         [0.9710, 0.9717, 0.9713,  ..., 0.9713, 0.9708, 0.9718]],
        [[0.0106, 0.0106, 0.0106,  ..., 0.0018, 0.0098, 0.0094],
         [0.0106, 0.0106, 0.0106,  ..., 0.0018, 0.0098, 0.0094],
         [0.0106, 0.0106, 0.0106,  ..., 0.9945, 0.0098, 0.0094],
         [0.9681, 0.9682, 0.9683,  ..., 0.0018, 0.9707, 0.9719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:35,721 [Process: 0] Synchronize training processes
2024-08-16 16:36:35,721 [Process: 0] Evaluating...
2024-08-16 16:36:35,723 [Process: 0] EPOCH 280:
2024-08-16 16:36:35,725 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0105, 0.0107,  ..., 0.0108, 0.0102, 0.0101],
         [0.0100, 0.0105, 0.0107,  ..., 0.0108, 0.0102, 0.0101],
         [0.0100, 0.0105, 0.0107,  ..., 0.0108, 0.0102, 0.0101],
         [0.9699, 0.9685, 0.9678,  ..., 0.9676, 0.9694, 0.9698]],
        [[0.0109, 0.0106, 0.0111,  ..., 0.0099, 0.0099, 0.0098],
         [0.0109, 0.0106, 0.0111,  ..., 0.0099, 0.0099, 0.0098],
         [0.0109, 0.0106, 0.0111,  ..., 0.0099, 0.0099, 0.0098],
         [0.9674, 0.9682, 0.9667,  ..., 0.9702, 0.9704, 0.9705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.5648e-03, 9.4435e-03, 9.5164e-03,  ..., 9.3753e-03,
          9.5396e-03, 9.4103e-03],
         [9.5648e-03, 9.4435e-03, 9.5164e-03,  ..., 9.3753e-03,
          9.5396e-03, 9.4103e-03],
         [9.5648e-03, 9.4435e-03, 9.5164e-03,  ..., 9.3753e-03,
          9.5396e-03, 9.4103e-03],
         [9.7131e-01, 9.7167e-01, 9.7145e-01,  ..., 9.7187e-01,
          9.7138e-01, 9.7177e-01]],
        [[1.0144e-02, 1.0726e-02, 1.0751e-02,  ..., 6.6026e-05,
          9.7734e-03, 8.9391e-03],
         [1.0144e-02, 1.0726e-02, 1.0751e-02,  ..., 6.6026e-05,
          9.7734e-03, 8.9391e-03],
         [1.0144e-02, 1.0726e-02, 1.0751e-02,  ..., 9.9980e-01,
          9.7734e-03, 8.9391e-03],
         [9.6957e-01, 9.6782e-01, 9.6775e-01,  ..., 6.6026e-05,
          9.7068e-01, 9.7318e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:37,798 [Process: 0] Synchronize training processes
2024-08-16 16:36:37,798 [Process: 0] Evaluating...
2024-08-16 16:36:37,800 [Process: 0] EPOCH 281:
2024-08-16 16:36:37,802 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0100, 0.0108,  ..., 0.0107, 0.0101, 0.0097],
         [0.0102, 0.0100, 0.0108,  ..., 0.0107, 0.0101, 0.0097],
         [0.0102, 0.0100, 0.0108,  ..., 0.0107, 0.0101, 0.0097],
         [0.9693, 0.9699, 0.9677,  ..., 0.9679, 0.9698, 0.9708]],
        [[0.0104, 0.0107, 0.0112,  ..., 0.0100, 0.0100, 0.0100],
         [0.0104, 0.0107, 0.0112,  ..., 0.0100, 0.0100, 0.0100],
         [0.0104, 0.0107, 0.0112,  ..., 0.0100, 0.0100, 0.0100],
         [0.9689, 0.9680, 0.9664,  ..., 0.9699, 0.9701, 0.9699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4707e-03, 9.5599e-03, 9.4754e-03,  ..., 9.2115e-03,
          9.8185e-03, 9.7645e-03],
         [9.4707e-03, 9.5599e-03, 9.4754e-03,  ..., 9.2115e-03,
          9.8185e-03, 9.7645e-03],
         [9.4707e-03, 9.5599e-03, 9.4754e-03,  ..., 9.2115e-03,
          9.8185e-03, 9.7645e-03],
         [9.7159e-01, 9.7132e-01, 9.7157e-01,  ..., 9.7237e-01,
          9.7054e-01, 9.7071e-01]],
        [[9.7832e-03, 9.9703e-03, 1.1273e-02,  ..., 1.2617e-05,
          9.7414e-03, 9.3834e-03],
         [9.7832e-03, 9.9703e-03, 1.1273e-02,  ..., 1.2617e-05,
          9.7414e-03, 9.3834e-03],
         [9.7832e-03, 9.9703e-03, 1.1273e-02,  ..., 9.9996e-01,
          9.7414e-03, 9.3834e-03],
         [9.7065e-01, 9.7009e-01, 9.6618e-01,  ..., 1.2617e-05,
          9.7078e-01, 9.7185e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:36:39,883 [Process: 0] Synchronize training processes
2024-08-16 16:36:39,883 [Process: 0] Evaluating...
2024-08-16 16:36:39,891 [Process: 0] EPOCH 282:
2024-08-16 16:36:39,893 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0100, 0.0102,  ..., 0.0105, 0.0105, 0.0099],
         [0.0101, 0.0100, 0.0102,  ..., 0.0105, 0.0105, 0.0099],
         [0.0101, 0.0100, 0.0102,  ..., 0.0105, 0.0105, 0.0099],
         [0.9697, 0.9699, 0.9694,  ..., 0.9686, 0.9686, 0.9704]],
        [[0.0102, 0.0101, 0.0103,  ..., 0.0100, 0.0100, 0.0100],
         [0.0102, 0.0101, 0.0103,  ..., 0.0100, 0.0100, 0.0100],
         [0.0102, 0.0101, 0.0103,  ..., 0.0100, 0.0100, 0.0100],
         [0.9693, 0.9696, 0.9692,  ..., 0.9699, 0.9701, 0.9701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.3100e-03, 9.4715e-03, 9.2576e-03,  ..., 9.6311e-03,
          9.5801e-03, 9.4522e-03],
         [9.3100e-03, 9.4715e-03, 9.2576e-03,  ..., 9.6311e-03,
          9.5801e-03, 9.4522e-03],
         [9.3100e-03, 9.4715e-03, 9.2576e-03,  ..., 9.6311e-03,
          9.5801e-03, 9.4522e-03],
         [9.7207e-01, 9.7159e-01, 9.7223e-01,  ..., 9.7111e-01,
          9.7126e-01, 9.7164e-01]],
        [[1.0328e-02, 9.4666e-03, 9.6318e-03,  ..., 2.7346e-04,
          9.5429e-03, 8.8914e-03],
         [1.0328e-02, 9.4666e-03, 9.6318e-03,  ..., 2.7346e-04,
          9.5429e-03, 8.8914e-03],
         [1.0328e-02, 9.4666e-03, 9.6318e-03,  ..., 9.9918e-01,
          9.5429e-03, 8.8914e-03],
         [9.6902e-01, 9.7160e-01, 9.7110e-01,  ..., 2.7346e-04,
          9.7137e-01, 9.7333e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:41,979 [Process: 0] Synchronize training processes
2024-08-16 16:36:41,980 [Process: 0] Evaluating...
2024-08-16 16:36:41,981 [Process: 0] EPOCH 283:
2024-08-16 16:36:41,983 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0103, 0.0100,  ..., 0.0102, 0.0107, 0.0098],
         [0.0102, 0.0103, 0.0100,  ..., 0.0102, 0.0107, 0.0098],
         [0.0102, 0.0103, 0.0100,  ..., 0.0102, 0.0109, 0.0098],
         [0.9694, 0.9692, 0.9700,  ..., 0.9695, 0.9677, 0.9706]],
        [[0.0106, 0.0100, 0.0101,  ..., 0.0101, 0.0098, 0.0099],
         [0.0106, 0.0100, 0.0101,  ..., 0.0101, 0.0098, 0.0099],
         [0.0106, 0.0100, 0.0101,  ..., 0.0101, 0.0098, 0.0099],
         [0.9682, 0.9700, 0.9697,  ..., 0.9697, 0.9705, 0.9703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:36:44,064 [Process: 0] Synchronize training processes
2024-08-16 16:36:44,065 [Process: 0] Evaluating...
2024-08-16 16:36:44,066 [Process: 0] EPOCH 284:
2024-08-16 16:36:44,068 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[9.3991e-03, 9.5397e-03, 9.4260e-03,  ..., 9.5837e-03,
          9.5457e-03, 9.4718e-03],
         [9.3991e-03, 9.5397e-03, 9.4260e-03,  ..., 9.5837e-03,
          9.5457e-03, 9.4718e-03],
         [9.3991e-03, 9.5397e-03, 9.4260e-03,  ..., 9.5837e-03,
          9.5457e-03, 9.4718e-03],
         [9.7180e-01, 9.7138e-01, 9.7172e-01,  ..., 9.7125e-01,
          9.7136e-01, 9.7158e-01]],
        [[1.1330e-02, 9.7523e-03, 1.1421e-02,  ..., 1.4948e-05,
          9.1015e-03, 8.9574e-03],
         [1.1330e-02, 9.7523e-03, 1.1421e-02,  ..., 1.4948e-05,
          9.1015e-03, 8.9574e-03],
         [1.1330e-02, 9.7523e-03, 1.1421e-02,  ..., 9.9996e-01,
          9.1015e-03, 8.9574e-03],
         [9.6601e-01, 9.7074e-01, 9.6574e-01,  ..., 1.4948e-05,
          9.7270e-01, 9.7313e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0100, 0.0103,  ..., 0.0102, 0.0099, 0.0101],
         [0.0099, 0.0100, 0.0103,  ..., 0.0102, 0.0099, 0.0101],
         [0.0099, 0.0100, 0.0103,  ..., 0.0102, 0.0099, 0.0101],
         [0.9703, 0.9699, 0.9691,  ..., 0.9695, 0.9703, 0.9698]],
        [[0.0104, 0.0099, 0.0103,  ..., 0.0098, 0.0102, 0.0103],
         [0.0104, 0.0099, 0.0103,  ..., 0.0098, 0.0102, 0.0103],
         [0.0104, 0.0099, 0.0103,  ..., 0.0098, 0.0102, 0.0103],
         [0.9689, 0.9703, 0.9692,  ..., 0.9707, 0.9694, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:36:46,150 [Process: 0] Synchronize training processes
2024-08-16 16:36:46,150 [Process: 0] Evaluating...
2024-08-16 16:36:46,152 [Process: 0] EPOCH 285:
2024-08-16 16:36:46,154 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.6755e-03, 9.7127e-03, 9.6347e-03,  ..., 9.4711e-03,
          9.5247e-03, 9.2507e-03],
         [9.6755e-03, 9.7127e-03, 9.6347e-03,  ..., 9.4711e-03,
          9.5247e-03, 9.2507e-03],
         [9.6755e-03, 9.7127e-03, 9.6347e-03,  ..., 9.4711e-03,
          9.5247e-03, 9.2507e-03],
         [9.7097e-01, 9.7086e-01, 9.7110e-01,  ..., 9.7159e-01,
          9.7143e-01, 9.7225e-01]],
        [[1.0065e-02, 1.0799e-02, 9.7411e-03,  ..., 8.1053e-06,
          9.0074e-03, 8.8953e-03],
         [1.0065e-02, 1.0799e-02, 9.7411e-03,  ..., 8.1053e-06,
          9.0074e-03, 8.8953e-03],
         [1.0065e-02, 1.0799e-02, 9.7411e-03,  ..., 9.9998e-01,
          9.0074e-03, 8.8953e-03],
         [9.6980e-01, 9.6760e-01, 9.7078e-01,  ..., 8.1053e-06,
          9.7298e-01, 9.7331e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0100, 0.0100,  ..., 0.0099, 0.0100, 0.0100],
         [0.0103, 0.0100, 0.0100,  ..., 0.0099, 0.0100, 0.0100],
         [0.0103, 0.0100, 0.0100,  ..., 0.0099, 0.0100, 0.0100],
         [0.9691, 0.9701, 0.9700,  ..., 0.9702, 0.9700, 0.9699]],
        [[0.0102, 0.0099, 0.0102,  ..., 0.0101, 0.0100, 0.0101],
         [0.0102, 0.0099, 0.0102,  ..., 0.0101, 0.0100, 0.0101],
         [0.0102, 0.0099, 0.0102,  ..., 0.0101, 0.0100, 0.0101],
         [0.9695, 0.9703, 0.9695,  ..., 0.9698, 0.9701, 0.9697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:48,227 [Process: 0] Synchronize training processes
2024-08-16 16:36:48,227 [Process: 0] Evaluating...
2024-08-16 16:36:48,229 [Process: 0] EPOCH 286:
2024-08-16 16:36:48,231 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4469e-03, 9.3666e-03, 9.2914e-03,  ..., 9.7082e-03,
          9.3076e-03, 9.4385e-03],
         [9.4469e-03, 9.3666e-03, 9.2914e-03,  ..., 9.7082e-03,
          9.3076e-03, 9.4385e-03],
         [9.4469e-03, 9.3666e-03, 9.2914e-03,  ..., 9.7082e-03,
          9.3076e-03, 9.4385e-03],
         [9.7166e-01, 9.7190e-01, 9.7213e-01,  ..., 9.7088e-01,
          9.7208e-01, 9.7168e-01]],
        [[1.0627e-02, 9.6476e-03, 8.7814e-03,  ..., 1.1528e-06,
          9.0759e-03, 9.0300e-03],
         [1.0627e-02, 9.6476e-03, 8.7814e-03,  ..., 1.1528e-06,
          9.0759e-03, 9.0300e-03],
         [1.0627e-02, 9.6476e-03, 8.7814e-03,  ..., 1.0000e+00,
          9.0759e-03, 9.0300e-03],
         [9.6812e-01, 9.7106e-01, 9.7366e-01,  ..., 1.1528e-06,
          9.7277e-01, 9.7291e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0102, 0.0100,  ..., 0.0100, 0.0100, 0.0098],
         [0.0103, 0.0102, 0.0100,  ..., 0.0100, 0.0100, 0.0098],
         [0.0103, 0.0102, 0.0100,  ..., 0.0100, 0.0100, 0.0098],
         [0.9690, 0.9693, 0.9701,  ..., 0.9699, 0.9701, 0.9707]],
        [[0.0102, 0.0105, 0.0104,  ..., 0.0099, 0.0100, 0.0098],
         [0.0102, 0.0105, 0.0104,  ..., 0.0099, 0.0100, 0.0098],
         [0.0102, 0.0105, 0.0104,  ..., 0.0099, 0.0100, 0.0098],
         [0.9695, 0.9685, 0.9688,  ..., 0.9703, 0.9699, 0.9707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:50,320 [Process: 0] Synchronize training processes
2024-08-16 16:36:50,320 [Process: 0] Evaluating...
2024-08-16 16:36:50,322 [Process: 0] EPOCH 287:
2024-08-16 16:36:50,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.5976e-03, 9.4648e-03, 9.0498e-03,  ..., 9.3931e-03,
          8.9917e-03, 9.3347e-03],
         [9.5976e-03, 9.4648e-03, 9.0498e-03,  ..., 9.3931e-03,
          8.9917e-03, 9.3347e-03],
         [9.5976e-03, 9.4648e-03, 9.0498e-03,  ..., 9.3931e-03,
          8.9917e-03, 9.3347e-03],
         [9.7121e-01, 9.7161e-01, 9.7285e-01,  ..., 9.7182e-01,
          9.7302e-01, 9.7200e-01]],
        [[1.0941e-02, 9.5455e-03, 9.8213e-03,  ..., 2.3885e-05,
          9.4394e-03, 8.7005e-03],
         [1.0941e-02, 9.5455e-03, 9.8213e-03,  ..., 2.3885e-05,
          9.4394e-03, 8.7005e-03],
         [1.0941e-02, 9.5455e-03, 9.8213e-03,  ..., 9.9993e-01,
          9.4394e-03, 8.7005e-03],
         [9.6718e-01, 9.7136e-01, 9.7054e-01,  ..., 2.3885e-05,
          9.7168e-01, 9.7390e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0098, 0.0103,  ..., 0.0099, 0.0096, 0.0102],
         [0.0099, 0.0098, 0.0103,  ..., 0.0099, 0.0096, 0.0102],
         [0.0099, 0.0098, 0.0103,  ..., 0.0099, 0.0096, 0.0102],
         [0.9702, 0.9706, 0.9690,  ..., 0.9704, 0.9712, 0.9694]],
        [[0.0100, 0.0108, 0.0104,  ..., 0.0098, 0.0098, 0.0097],
         [0.0100, 0.0108, 0.0104,  ..., 0.0098, 0.0098, 0.0097],
         [0.0100, 0.0108, 0.0104,  ..., 0.0098, 0.0098, 0.0097],
         [0.9700, 0.9676, 0.9689,  ..., 0.9705, 0.9707, 0.9708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:52,396 [Process: 0] Synchronize training processes
2024-08-16 16:36:52,396 [Process: 0] Evaluating...
2024-08-16 16:36:52,398 [Process: 0] EPOCH 288:
2024-08-16 16:36:52,400 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.3601e-03, 9.4172e-03, 9.1770e-03,  ..., 9.6106e-03,
          8.9336e-03, 9.5865e-03],
         [9.3601e-03, 9.4172e-03, 9.1770e-03,  ..., 9.6106e-03,
          8.9336e-03, 9.5865e-03],
         [9.3601e-03, 9.4172e-03, 9.1770e-03,  ..., 9.6106e-03,
          8.9336e-03, 9.5865e-03],
         [9.7192e-01, 9.7175e-01, 9.7247e-01,  ..., 9.7117e-01,
          9.7320e-01, 9.7124e-01]],
        [[1.0009e-02, 1.0227e-02, 9.9838e-03,  ..., 2.9208e-04,
          8.6810e-03, 8.7901e-03],
         [1.0009e-02, 1.0227e-02, 9.9838e-03,  ..., 2.9208e-04,
          8.6810e-03, 8.7901e-03],
         [1.0009e-02, 1.0227e-02, 9.9838e-03,  ..., 9.9912e-01,
          8.6810e-03, 8.7901e-03],
         [9.6997e-01, 9.6932e-01, 9.7005e-01,  ..., 2.9208e-04,
          9.7396e-01, 9.7363e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0098, 0.0099,  ..., 0.0098, 0.0095, 0.0100],
         [0.0102, 0.0098, 0.0099,  ..., 0.0098, 0.0095, 0.0100],
         [0.0102, 0.0098, 0.0099,  ..., 0.0098, 0.0095, 0.0100],
         [0.9693, 0.9706, 0.9703,  ..., 0.9705, 0.9714, 0.9701]],
        [[0.0103, 0.0107, 0.0099,  ..., 0.0098, 0.0099, 0.0097],
         [0.0103, 0.0107, 0.0099,  ..., 0.0098, 0.0099, 0.0097],
         [0.0103, 0.0107, 0.0099,  ..., 0.0098, 0.0099, 0.0097],
         [0.9692, 0.9679, 0.9702,  ..., 0.9707, 0.9703, 0.9708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:54,474 [Process: 0] Synchronize training processes
2024-08-16 16:36:54,474 [Process: 0] Evaluating...
2024-08-16 16:36:54,476 [Process: 0] EPOCH 289:
2024-08-16 16:36:54,478 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0093, 0.0092,  ..., 0.0090, 0.0090, 0.0092],
         [0.0091, 0.0093, 0.0092,  ..., 0.0090, 0.0090, 0.0092],
         [0.0091, 0.0093, 0.0092,  ..., 0.0090, 0.0090, 0.0092],
         [0.9727, 0.9722, 0.9723,  ..., 0.9729, 0.9731, 0.9725]],
        [[0.0094, 0.0093, 0.0095,  ..., 0.0015, 0.0090, 0.0091],
         [0.0094, 0.0093, 0.0095,  ..., 0.0015, 0.0090, 0.0091],
         [0.0094, 0.0093, 0.0095,  ..., 0.9954, 0.0090, 0.0091],
         [0.9717, 0.9720, 0.9715,  ..., 0.0015, 0.9730, 0.9728]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0101, 0.0098,  ..., 0.0098, 0.0096, 0.0098],
         [0.0095, 0.0101, 0.0098,  ..., 0.0098, 0.0096, 0.0098],
         [0.0095, 0.0101, 0.0098,  ..., 0.0098, 0.0096, 0.0098],
         [0.9714, 0.9698, 0.9706,  ..., 0.9706, 0.9712, 0.9706]],
        [[0.0103, 0.0108, 0.0107,  ..., 0.0098, 0.0097, 0.0097],
         [0.0103, 0.0108, 0.0107,  ..., 0.0098, 0.0097, 0.0097],
         [0.0103, 0.0108, 0.0107,  ..., 0.0098, 0.0097, 0.0097],
         [0.9692, 0.9677, 0.9679,  ..., 0.9706, 0.9709, 0.9710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:56,545 [Process: 0] Synchronize training processes
2024-08-16 16:36:56,545 [Process: 0] Evaluating...
2024-08-16 16:36:56,547 [Process: 0] EPOCH 290:
2024-08-16 16:36:56,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9147e-03, 9.1922e-03, 9.1729e-03,  ..., 9.1082e-03,
          8.6739e-03, 9.0757e-03],
         [8.9147e-03, 9.1922e-03, 9.1729e-03,  ..., 9.1082e-03,
          8.6739e-03, 9.0757e-03],
         [8.9147e-03, 9.1922e-03, 9.1729e-03,  ..., 9.1082e-03,
          8.6739e-03, 9.0757e-03],
         [9.7326e-01, 9.7242e-01, 9.7248e-01,  ..., 9.7268e-01,
          9.7398e-01, 9.7277e-01]],
        [[9.5805e-03, 1.1053e-02, 9.5604e-03,  ..., 2.0278e-06,
          8.9244e-03, 8.8502e-03],
         [9.5805e-03, 1.1053e-02, 9.5604e-03,  ..., 2.0278e-06,
          8.9244e-03, 8.8502e-03],
         [9.5805e-03, 1.1053e-02, 9.5604e-03,  ..., 9.9999e-01,
          8.9244e-03, 8.8502e-03],
         [9.7126e-01, 9.6684e-01, 9.7132e-01,  ..., 2.0278e-06,
          9.7323e-01, 9.7345e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0098, 0.0099,  ..., 0.0097, 0.0100, 0.0098],
         [0.0096, 0.0098, 0.0099,  ..., 0.0097, 0.0100, 0.0098],
         [0.0096, 0.0098, 0.0099,  ..., 0.0097, 0.0100, 0.0098],
         [0.9711, 0.9706, 0.9703,  ..., 0.9710, 0.9699, 0.9705]],
        [[0.0102, 0.0106, 0.0101,  ..., 0.0097, 0.0097, 0.0099],
         [0.0102, 0.0106, 0.0101,  ..., 0.0097, 0.0097, 0.0099],
         [0.0102, 0.0106, 0.0101,  ..., 0.0097, 0.0097, 0.0099],
         [0.9693, 0.9683, 0.9698,  ..., 0.9708, 0.9708, 0.9704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:36:58,624 [Process: 0] Synchronize training processes
2024-08-16 16:36:58,624 [Process: 0] Evaluating...
2024-08-16 16:36:58,626 [Process: 0] EPOCH 291:
2024-08-16 16:36:58,628 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.0153e-03, 8.8150e-03, 9.1916e-03,  ..., 8.8593e-03,
          9.0328e-03, 8.8189e-03],
         [9.0153e-03, 8.8150e-03, 9.1916e-03,  ..., 8.8593e-03,
          9.0328e-03, 8.8189e-03],
         [9.0153e-03, 8.8150e-03, 9.1916e-03,  ..., 8.8593e-03,
          9.0328e-03, 8.8189e-03],
         [9.7295e-01, 9.7355e-01, 9.7243e-01,  ..., 9.7342e-01,
          9.7290e-01, 9.7354e-01]],
        [[9.7100e-03, 9.7068e-03, 1.0078e-02,  ..., 1.9466e-05,
          8.8615e-03, 8.8192e-03],
         [9.7100e-03, 9.7068e-03, 1.0078e-02,  ..., 1.9466e-05,
          8.8615e-03, 8.8192e-03],
         [9.7100e-03, 9.7068e-03, 1.0078e-02,  ..., 9.9994e-01,
          8.8615e-03, 8.8192e-03],
         [9.7087e-01, 9.7088e-01, 9.6977e-01,  ..., 1.9466e-05,
          9.7342e-01, 9.7354e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0097, 0.0096,  ..., 0.0095, 0.0097, 0.0098],
         [0.0097, 0.0097, 0.0096,  ..., 0.0095, 0.0097, 0.0098],
         [0.0097, 0.0097, 0.0096,  ..., 0.0095, 0.0097, 0.0098],
         [0.9710, 0.9709, 0.9713,  ..., 0.9716, 0.9708, 0.9706]],
        [[0.0102, 0.0108, 0.0110,  ..., 0.0098, 0.0100, 0.0098],
         [0.0102, 0.0108, 0.0110,  ..., 0.0098, 0.0100, 0.0098],
         [0.0102, 0.0108, 0.0110,  ..., 0.0098, 0.0100, 0.0098],
         [0.9694, 0.9677, 0.9669,  ..., 0.9706, 0.9701, 0.9706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:00,692 [Process: 0] Synchronize training processes
2024-08-16 16:37:00,693 [Process: 0] Evaluating...
2024-08-16 16:37:00,701 [Process: 0] EPOCH 292:
2024-08-16 16:37:00,703 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9795e-03, 8.8388e-03, 8.9236e-03,  ..., 8.9580e-03,
          8.7424e-03, 8.9925e-03],
         [8.9795e-03, 8.8388e-03, 8.9236e-03,  ..., 8.9580e-03,
          8.7424e-03, 8.9925e-03],
         [8.9795e-03, 8.8388e-03, 8.9236e-03,  ..., 8.9580e-03,
          8.7424e-03, 8.9925e-03],
         [9.7306e-01, 9.7348e-01, 9.7323e-01,  ..., 9.7313e-01,
          9.7377e-01, 9.7302e-01]],
        [[8.9407e-03, 8.9602e-03, 9.3668e-03,  ..., 1.9422e-05,
          9.0834e-03, 8.8059e-03],
         [8.9407e-03, 8.9602e-03, 9.3668e-03,  ..., 1.9422e-05,
          9.0834e-03, 8.8059e-03],
         [8.9407e-03, 8.9602e-03, 9.3668e-03,  ..., 9.9994e-01,
          9.0834e-03, 8.8059e-03],
         [9.7318e-01, 9.7312e-01, 9.7190e-01,  ..., 1.9422e-05,
          9.7275e-01, 9.7358e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0101, 0.0098,  ..., 0.0096, 0.0102, 0.0097],
         [0.0099, 0.0101, 0.0098,  ..., 0.0096, 0.0102, 0.0097],
         [0.0099, 0.0101, 0.0098,  ..., 0.0096, 0.0102, 0.0097],
         [0.9703, 0.9697, 0.9705,  ..., 0.9711, 0.9695, 0.9709]],
        [[0.0099, 0.0106, 0.0100,  ..., 0.0099, 0.0098, 0.0099],
         [0.0099, 0.0106, 0.0100,  ..., 0.0099, 0.0098, 0.0099],
         [0.0099, 0.0106, 0.0100,  ..., 0.0099, 0.0098, 0.0099],
         [0.9703, 0.9681, 0.9701,  ..., 0.9704, 0.9706, 0.9703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:02,785 [Process: 0] Synchronize training processes
2024-08-16 16:37:02,786 [Process: 0] Evaluating...
2024-08-16 16:37:02,787 [Process: 0] EPOCH 293:
2024-08-16 16:37:02,789 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9772e-03, 9.0394e-03, 8.8745e-03,  ..., 8.8726e-03,
          8.9905e-03, 8.7428e-03],
         [8.9772e-03, 9.0394e-03, 8.8745e-03,  ..., 8.8726e-03,
          8.9905e-03, 8.7428e-03],
         [8.9772e-03, 9.0394e-03, 8.8745e-03,  ..., 8.8726e-03,
          8.9905e-03, 8.7428e-03],
         [9.7307e-01, 9.7288e-01, 9.7338e-01,  ..., 9.7338e-01,
          9.7303e-01, 9.7377e-01]],
        [[8.9607e-03, 8.5932e-03, 9.7522e-03,  ..., 1.7950e-04,
          9.1097e-03, 9.0048e-03],
         [8.9607e-03, 8.5932e-03, 9.7522e-03,  ..., 1.7950e-04,
          9.1097e-03, 9.0048e-03],
         [8.9607e-03, 8.5932e-03, 9.7522e-03,  ..., 9.9946e-01,
          9.1097e-03, 9.0048e-03],
         [9.7312e-01, 9.7422e-01, 9.7074e-01,  ..., 1.7950e-04,
          9.7267e-01, 9.7299e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0095, 0.0096,  ..., 0.0098, 0.0097, 0.0096],
         [0.0096, 0.0095, 0.0096,  ..., 0.0098, 0.0097, 0.0096],
         [0.0096, 0.0095, 0.0096,  ..., 0.0098, 0.0097, 0.0096],
         [0.9712, 0.9714, 0.9713,  ..., 0.9706, 0.9708, 0.9712]],
        [[0.0095, 0.0107, 0.0105,  ..., 0.0097, 0.0100, 0.0097],
         [0.0095, 0.0107, 0.0105,  ..., 0.0097, 0.0100, 0.0097],
         [0.0095, 0.0107, 0.0105,  ..., 0.0097, 0.0100, 0.0097],
         [0.9714, 0.9678, 0.9686,  ..., 0.9710, 0.9699, 0.9710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:04,871 [Process: 0] Synchronize training processes
2024-08-16 16:37:04,871 [Process: 0] Evaluating...
2024-08-16 16:37:04,873 [Process: 0] EPOCH 294:
2024-08-16 16:37:04,875 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9698e-03, 8.9091e-03, 8.9695e-03,  ..., 8.6867e-03,
          9.4956e-03, 8.8681e-03],
         [8.9698e-03, 8.9091e-03, 8.9695e-03,  ..., 8.6867e-03,
          9.4956e-03, 8.8681e-03],
         [8.9698e-03, 8.9091e-03, 8.9695e-03,  ..., 8.6867e-03,
          9.4956e-03, 8.8681e-03],
         [9.7309e-01, 9.7327e-01, 9.7309e-01,  ..., 9.7394e-01,
          9.7151e-01, 9.7340e-01]],
        [[9.0780e-03, 1.0610e-02, 8.4901e-03,  ..., 7.0937e-05,
          9.0022e-03, 8.8994e-03],
         [9.0780e-03, 1.0610e-02, 8.4901e-03,  ..., 7.0937e-05,
          9.0022e-03, 8.8994e-03],
         [9.0780e-03, 1.0610e-02, 8.4901e-03,  ..., 9.9979e-01,
          9.0022e-03, 8.8994e-03],
         [9.7277e-01, 9.6817e-01, 9.7453e-01,  ..., 7.0937e-05,
          9.7299e-01, 9.7330e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0091, 0.0090,  ..., 0.0090, 0.0112, 0.4192],
         [0.0091, 0.0091, 0.0090,  ..., 0.0090, 0.0112, 0.1022],
         [0.0091, 0.0091, 0.0090,  ..., 0.0090, 0.0121, 0.3641],
         [0.9726, 0.9726, 0.9730,  ..., 0.9730, 0.9654, 0.1144]],
        [[0.0091, 0.0095, 0.0094,  ..., 0.0090, 0.0089, 0.0093],
         [0.0091, 0.0095, 0.0094,  ..., 0.0090, 0.0089, 0.0093],
         [0.0091, 0.0095, 0.0094,  ..., 0.0090, 0.0089, 0.0093],
         [0.9727, 0.9715, 0.9718,  ..., 0.9730, 0.9733, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:06,973 [Process: 0] Synchronize training processes
2024-08-16 16:37:06,973 [Process: 0] Evaluating...
2024-08-16 16:37:06,975 [Process: 0] EPOCH 295:
2024-08-16 16:37:06,977 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2842e-03, 9.2665e-03, 8.7671e-03,  ..., 9.6771e-03,
          9.3573e-01, 9.4731e-03],
         [8.2842e-03, 9.2665e-03, 8.7671e-03,  ..., 9.6771e-03,
          2.0609e-02, 9.4731e-03],
         [8.2842e-03, 9.2665e-03, 8.7671e-03,  ..., 9.6771e-03,
          2.0609e-02, 9.4731e-03],
         [9.7515e-01, 9.7220e-01, 9.7370e-01,  ..., 9.7097e-01,
          2.3053e-02, 9.7158e-01]],
        [[8.7243e-03, 1.1597e-02, 9.2372e-03,  ..., 1.6996e-04,
          8.0251e-03, 8.6476e-03],
         [8.7243e-03, 1.1597e-02, 9.2372e-03,  ..., 1.6996e-04,
          8.0251e-03, 8.6476e-03],
         [8.7243e-03, 1.1597e-02, 9.2372e-03,  ..., 9.9949e-01,
          8.0251e-03, 8.6476e-03],
         [9.7383e-01, 9.6521e-01, 9.7229e-01,  ..., 1.6996e-04,
          9.7592e-01, 9.7406e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0227, 0.0096,  ..., 0.1205, 0.0062, 0.0064],
         [0.0085, 0.0148, 0.0096,  ..., 0.0287, 0.0062, 0.0064],
         [0.0085, 0.0148, 0.0096,  ..., 0.0287, 0.0062, 0.0064],
         [0.9746, 0.9477, 0.9711,  ..., 0.8220, 0.9815, 0.9808]],
        [[0.0064, 0.0067, 0.0066,  ..., 0.0068, 0.0068, 0.0066],
         [0.0064, 0.0067, 0.0066,  ..., 0.0068, 0.0068, 0.0066],
         [0.0064, 0.0067, 0.0066,  ..., 0.0068, 0.0068, 0.0066],
         [0.9807, 0.9799, 0.9803,  ..., 0.9797, 0.9796, 0.9803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:09,071 [Process: 0] Synchronize training processes
2024-08-16 16:37:09,072 [Process: 0] Evaluating...
2024-08-16 16:37:09,074 [Process: 0] EPOCH 296:
2024-08-16 16:37:09,075 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.2617e-03, 9.6103e-03, 9.3903e-03,  ..., 9.1732e-03,
          9.5293e-01, 9.1503e-03],
         [9.2617e-03, 9.6103e-03, 9.3903e-03,  ..., 9.1732e-03,
          1.5689e-02, 9.1503e-03],
         [9.2617e-03, 9.6103e-03, 9.3903e-03,  ..., 9.1732e-03,
          1.5689e-02, 9.1503e-03],
         [9.7221e-01, 9.7117e-01, 9.7183e-01,  ..., 9.7248e-01,
          1.5689e-02, 9.7255e-01]],
        [[9.8381e-03, 1.0294e-02, 9.6656e-03,  ..., 5.9372e-07,
          9.1387e-03, 9.0919e-03],
         [9.8381e-03, 1.0294e-02, 9.6656e-03,  ..., 2.6099e-08,
          9.1387e-03, 9.0919e-03],
         [9.8381e-03, 1.0294e-02, 9.6656e-03,  ..., 1.0000e+00,
          9.1387e-03, 9.0919e-03],
         [9.7049e-01, 9.6912e-01, 9.7100e-01,  ..., 2.6099e-08,
          9.7258e-01, 9.7272e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0120, 0.0121,  ..., 0.0126, 0.0103, 0.0101],
         [0.0129, 0.0120, 0.0121,  ..., 0.0126, 0.0103, 0.0101],
         [0.0129, 0.0120, 0.0121,  ..., 0.0126, 0.0103, 0.0101],
         [0.9614, 0.9639, 0.9637,  ..., 0.9621, 0.9690, 0.9696]],
        [[0.0123, 0.0122, 0.0227,  ..., 0.0130, 0.0101, 0.0121],
         [0.0123, 0.0122, 0.0145,  ..., 0.0130, 0.0101, 0.0121],
         [0.0123, 0.0122, 0.0145,  ..., 0.0130, 0.0101, 0.0121],
         [0.9631, 0.9635, 0.9483,  ..., 0.9609, 0.9697, 0.9636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.8059e-03, 9.6162e-03, 1.0195e-02,  ..., 9.8712e-03,
          8.5454e-01, 1.0310e-02],
         [9.8059e-03, 9.6162e-03, 1.0195e-02,  ..., 9.8712e-03,
          3.8430e-02, 1.0310e-02],
         [9.8059e-03, 9.6162e-03, 1.0195e-02,  ..., 9.8712e-03,
          3.8430e-02, 1.0310e-02],
         [9.7058e-01, 9.7115e-01, 9.6941e-01,  ..., 9.7039e-01,
          6.8595e-02, 9.6907e-01]],
        [[9.8614e-03, 1.0746e-02, 9.8180e-03,  ..., 1.4671e-04,
          1.2548e-02, 1.1341e-02],
         [9.8614e-03, 1.0746e-02, 9.8180e-03,  ..., 6.7874e-08,
          1.2548e-02, 1.1341e-02],
         [9.8614e-03, 1.0746e-02, 9.8180e-03,  ..., 9.9985e-01,
          1.2548e-02, 1.1341e-02],
         [9.7042e-01, 9.6776e-01, 9.7055e-01,  ..., 6.7874e-08,
          9.6236e-01, 9.6598e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:37:11,151 [Process: 0] Synchronize training processes
2024-08-16 16:37:11,152 [Process: 0] Evaluating...
2024-08-16 16:37:11,154 [Process: 0] EPOCH 297:
2024-08-16 16:37:11,155 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0097, 0.0105, 0.0094,  ..., 0.0104, 0.0110, 0.0093],
         [0.0097, 0.0105, 0.0094,  ..., 0.0104, 0.0110, 0.0093],
         [0.0097, 0.0105, 0.0094,  ..., 0.0104, 0.0110, 0.0093],
         [0.9709, 0.9685, 0.9718,  ..., 0.9688, 0.9670, 0.9721]],
        [[0.0100, 0.0096, 0.0101,  ..., 0.0098, 0.0098, 0.0108],
         [0.0100, 0.0096, 0.0101,  ..., 0.0098, 0.0098, 0.0108],
         [0.0100, 0.0096, 0.0101,  ..., 0.0098, 0.0098, 0.0108],
         [0.9699, 0.9713, 0.9696,  ..., 0.9706, 0.9706, 0.9675]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9967e-03, 8.7447e-03, 9.9307e-03,  ..., 9.8294e-03,
          6.2414e-02, 9.8502e-03],
         [8.9967e-03, 8.7447e-03, 9.9307e-03,  ..., 9.8294e-03,
          2.3210e-02, 9.8502e-03],
         [8.9967e-03, 8.7447e-03, 9.9307e-03,  ..., 9.8294e-03,
          2.3210e-02, 9.8502e-03],
         [9.7301e-01, 9.7377e-01, 9.7021e-01,  ..., 9.7051e-01,
          8.9117e-01, 9.7045e-01]],
        [[9.3687e-03, 9.3897e-03, 9.4316e-03,  ..., 5.2970e-04,
          9.5982e-03, 9.6418e-03],
         [9.3687e-03, 9.3897e-03, 9.4316e-03,  ..., 1.3780e-05,
          9.5982e-03, 9.6418e-03],
         [9.3687e-03, 9.3897e-03, 9.4316e-03,  ..., 9.9944e-01,
          9.5982e-03, 9.6418e-03],
         [9.7189e-01, 9.7183e-01, 9.7171e-01,  ..., 1.3780e-05,
          9.7121e-01, 9.7107e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:37:13,231 [Process: 0] Synchronize training processes
2024-08-16 16:37:13,231 [Process: 0] Evaluating...
2024-08-16 16:37:13,233 [Process: 0] EPOCH 298:
2024-08-16 16:37:13,235 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0119, 0.0110,  ..., 0.0110, 0.0102, 0.0113],
         [0.0111, 0.0119, 0.0110,  ..., 0.0110, 0.0102, 0.0113],
         [0.0111, 0.0119, 0.0110,  ..., 0.0110, 0.0102, 0.0113],
         [0.9666, 0.9644, 0.9670,  ..., 0.9670, 0.9693, 0.9662]],
        [[0.0109, 0.0105, 0.0108,  ..., 0.0102, 0.0106, 0.0108],
         [0.0109, 0.0105, 0.0108,  ..., 0.0102, 0.0106, 0.0108],
         [0.0109, 0.0105, 0.0108,  ..., 0.0102, 0.0106, 0.0108],
         [0.9672, 0.9684, 0.9675,  ..., 0.9693, 0.9682, 0.9677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4080e-03, 9.4166e-03, 9.8407e-03,  ..., 9.3221e-03,
          1.0151e-02, 9.5816e-03],
         [9.4080e-03, 9.4166e-03, 9.8407e-03,  ..., 9.3221e-03,
          1.0151e-02, 9.5816e-03],
         [9.4080e-03, 9.4166e-03, 9.8407e-03,  ..., 9.3221e-03,
          1.0151e-02, 9.5816e-03],
         [9.7178e-01, 9.7175e-01, 9.7048e-01,  ..., 9.7203e-01,
          9.6955e-01, 9.7126e-01]],
        [[1.0512e-02, 1.0696e-02, 9.7132e-03,  ..., 4.9847e-04,
          8.9622e-03, 9.2223e-03],
         [1.0512e-02, 1.0696e-02, 9.7132e-03,  ..., 6.5857e-05,
          8.9622e-03, 9.2223e-03],
         [1.0512e-02, 1.0696e-02, 9.7132e-03,  ..., 9.9937e-01,
          8.9622e-03, 9.2223e-03],
         [9.6846e-01, 9.6791e-01, 9.7086e-01,  ..., 6.5857e-05,
          9.7311e-01, 9.7233e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:15,340 [Process: 0] Synchronize training processes
2024-08-16 16:37:15,341 [Process: 0] Evaluating...
2024-08-16 16:37:15,343 [Process: 0] EPOCH 299:
2024-08-16 16:37:15,345 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0121, 0.0115,  ..., 0.0113, 0.0105, 0.0121],
         [0.0111, 0.0121, 0.0115,  ..., 0.0113, 0.0105, 0.0121],
         [0.0111, 0.0121, 0.0115,  ..., 0.0113, 0.0105, 0.0121],
         [0.9666, 0.9637, 0.9656,  ..., 0.9660, 0.9686, 0.9637]],
        [[0.0100, 0.0096, 0.0106,  ..., 0.0101, 0.0103, 0.0105],
         [0.0100, 0.0096, 0.0106,  ..., 0.0101, 0.0103, 0.0105],
         [0.0100, 0.0096, 0.0106,  ..., 0.0101, 0.0103, 0.0105],
         [0.9700, 0.9711, 0.9681,  ..., 0.9696, 0.9690, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.8238e-03, 9.0307e-03, 8.1590e-03,  ..., 9.4969e-03,
          9.3476e-03, 9.1400e-03],
         [8.8238e-03, 9.0307e-03, 8.1590e-03,  ..., 9.4969e-03,
          9.3476e-03, 9.1400e-03],
         [8.8238e-03, 9.0307e-03, 8.1590e-03,  ..., 9.4969e-03,
          9.3476e-03, 9.1400e-03],
         [9.7353e-01, 9.7291e-01, 9.7552e-01,  ..., 9.7151e-01,
          9.7196e-01, 9.7258e-01]],
        [[9.6239e-03, 9.7737e-03, 9.5231e-03,  ..., 4.0769e-06,
          8.7722e-03, 9.1054e-03],
         [9.6239e-03, 9.7737e-03, 9.5231e-03,  ..., 8.0269e-07,
          8.7722e-03, 9.1054e-03],
         [9.6239e-03, 9.7737e-03, 9.5231e-03,  ..., 9.9999e-01,
          8.7722e-03, 9.1054e-03],
         [9.7113e-01, 9.7068e-01, 9.7143e-01,  ..., 8.0269e-07,
          9.7368e-01, 9.7268e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:17,412 [Process: 0] Synchronize training processes
2024-08-16 16:37:17,413 [Process: 0] Evaluating...
2024-08-16 16:37:17,415 [Process: 0] EPOCH 300:
2024-08-16 16:37:17,416 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0098, 0.0103,  ..., 0.0108, 0.0097, 0.0108],
         [0.0111, 0.0098, 0.0103,  ..., 0.0108, 0.0097, 0.0108],
         [0.0111, 0.0098, 0.0103,  ..., 0.0108, 0.0097, 0.0108],
         [0.9668, 0.9706, 0.9691,  ..., 0.9675, 0.9708, 0.9676]],
        [[0.0093, 0.0099, 0.0117,  ..., 0.0098, 0.0095, 0.0095],
         [0.0093, 0.0099, 0.0117,  ..., 0.0098, 0.0095, 0.0095],
         [0.0093, 0.0099, 0.0117,  ..., 0.0098, 0.0095, 0.0095],
         [0.9720, 0.9704, 0.9650,  ..., 0.9705, 0.9715, 0.9716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4010e-03, 8.2072e-03, 8.7190e-03,  ..., 8.4592e-03,
          9.0344e-03, 8.9514e-03],
         [9.4010e-03, 8.2072e-03, 8.7190e-03,  ..., 8.4592e-03,
          9.0344e-03, 8.9514e-03],
         [9.4010e-03, 8.2072e-03, 8.7190e-03,  ..., 8.4592e-03,
          9.0344e-03, 8.9514e-03],
         [9.7180e-01, 9.7538e-01, 9.7384e-01,  ..., 9.7462e-01,
          9.7290e-01, 9.7315e-01]],
        [[9.3124e-03, 9.3395e-03, 8.4785e-03,  ..., 1.3824e-03,
          7.9786e-03, 9.2489e-03],
         [9.3124e-03, 9.3395e-03, 8.4785e-03,  ..., 4.0422e-04,
          7.9786e-03, 9.2489e-03],
         [9.3124e-03, 9.3395e-03, 8.4785e-03,  ..., 9.9781e-01,
          7.9786e-03, 9.2489e-03],
         [9.7206e-01, 9.7198e-01, 9.7456e-01,  ..., 4.0422e-04,
          9.7606e-01, 9.7225e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:19,494 [Process: 0] Synchronize training processes
2024-08-16 16:37:19,494 [Process: 0] Evaluating...
2024-08-16 16:37:19,496 [Process: 0] EPOCH 301:
2024-08-16 16:37:19,498 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6407e-03, 8.9043e-03, 8.4720e-03,  ..., 9.5278e-03,
          9.8805e-01, 9.9855e-01],
         [8.6407e-03, 8.9043e-03, 8.4720e-03,  ..., 9.5278e-03,
          1.3159e-03, 4.8340e-04],
         [8.6407e-03, 8.9043e-03, 8.4720e-03,  ..., 9.5278e-03,
          9.3206e-03, 4.8340e-04],
         [9.7408e-01, 9.7329e-01, 9.7458e-01,  ..., 9.7142e-01,
          1.3159e-03, 4.8340e-04]],
        [[8.5104e-03, 9.2658e-03, 8.4433e-03,  ..., 9.4190e-03,
          8.6448e-03, 7.4261e-03],
         [8.5104e-03, 9.2658e-03, 8.4433e-03,  ..., 9.4190e-03,
          8.6448e-03, 7.4261e-03],
         [8.5104e-03, 9.2658e-03, 8.4433e-03,  ..., 9.4190e-03,
          8.6448e-03, 7.4261e-03],
         [9.7447e-01, 9.7220e-01, 9.7467e-01,  ..., 9.7174e-01,
          9.7407e-01, 9.7772e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7611e-03, 8.6016e-03, 9.1650e-03,  ..., 8.5396e-03,
          8.5205e-03, 8.9221e-03],
         [9.7611e-03, 8.6016e-03, 9.1650e-03,  ..., 8.5396e-03,
          8.5205e-03, 8.9221e-03],
         [9.7611e-03, 8.6016e-03, 9.1650e-03,  ..., 8.5396e-03,
          8.5205e-03, 8.9221e-03],
         [9.7072e-01, 9.7420e-01, 9.7251e-01,  ..., 9.7438e-01,
          9.7444e-01, 9.7323e-01]],
        [[1.0391e-02, 8.4979e-03, 9.1171e-03,  ..., 4.8118e-04,
          9.1876e-03, 8.9567e-03],
         [1.0391e-02, 8.4979e-03, 9.1171e-03,  ..., 2.3875e-04,
          9.1876e-03, 8.9567e-03],
         [1.0391e-02, 8.4979e-03, 9.1171e-03,  ..., 9.9904e-01,
          9.1876e-03, 8.9567e-03],
         [9.6883e-01, 9.7451e-01, 9.7265e-01,  ..., 2.3875e-04,
          9.7244e-01, 9.7313e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:21,593 [Process: 0] Synchronize training processes
2024-08-16 16:37:21,593 [Process: 0] Evaluating...
2024-08-16 16:37:21,602 [Process: 0] EPOCH 302:
2024-08-16 16:37:21,604 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0102, 0.0100,  ..., 0.0093, 0.0111, 0.0105],
         [0.0094, 0.0102, 0.0100,  ..., 0.0093, 0.0111, 0.0105],
         [0.0094, 0.0102, 0.0100,  ..., 0.0093, 0.0111, 0.0105],
         [0.9717, 0.9694, 0.9701,  ..., 0.9722, 0.9668, 0.9686]],
        [[0.0093, 0.0117, 0.0107,  ..., 0.0094, 0.0112, 0.0101],
         [0.0093, 0.0117, 0.0107,  ..., 0.0094, 0.0112, 0.0101],
         [0.0093, 0.0117, 0.0107,  ..., 0.0094, 0.0112, 0.0101],
         [0.9720, 0.9650, 0.9679,  ..., 0.9718, 0.9663, 0.9697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.3289e-03, 8.7248e-03, 8.7481e-03,  ..., 9.1607e-03,
          9.6524e-03, 9.2456e-03],
         [9.3289e-03, 8.7248e-03, 8.7481e-03,  ..., 9.1607e-03,
          9.6524e-03, 9.2456e-03],
         [9.3289e-03, 8.7248e-03, 8.7481e-03,  ..., 9.1607e-03,
          9.6524e-03, 9.2456e-03],
         [9.7201e-01, 9.7383e-01, 9.7376e-01,  ..., 9.7252e-01,
          9.7104e-01, 9.7226e-01]],
        [[8.8983e-03, 9.3724e-03, 9.1111e-03,  ..., 1.2417e-04,
          9.4315e-03, 8.4494e-03],
         [8.8983e-03, 9.3724e-03, 9.1111e-03,  ..., 1.2417e-04,
          9.4315e-03, 8.4494e-03],
         [8.8983e-03, 9.3724e-03, 9.1111e-03,  ..., 9.9963e-01,
          9.4315e-03, 8.4494e-03],
         [9.7331e-01, 9.7188e-01, 9.7267e-01,  ..., 1.2417e-04,
          9.7171e-01, 9.7465e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:23,672 [Process: 0] Synchronize training processes
2024-08-16 16:37:23,672 [Process: 0] Evaluating...
2024-08-16 16:37:23,674 [Process: 0] EPOCH 303:
2024-08-16 16:37:23,676 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0095, 0.0098,  ..., 0.0096, 0.0098, 0.0106],
         [0.0091, 0.0095, 0.0098,  ..., 0.0096, 0.0098, 0.0106],
         [0.0091, 0.0095, 0.0098,  ..., 0.0096, 0.0098, 0.0106],
         [0.9726, 0.9714, 0.9705,  ..., 0.9713, 0.9706, 0.9681]],
        [[0.0098, 0.0087, 0.0097,  ..., 0.0095, 0.0097, 0.0082],
         [0.0098, 0.0087, 0.0097,  ..., 0.0095, 0.0097, 0.0082],
         [0.0098, 0.0087, 0.0097,  ..., 0.0095, 0.0097, 0.0082],
         [0.9707, 0.9740, 0.9709,  ..., 0.9714, 0.9709, 0.9754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7762e-03, 8.1008e-03, 8.6464e-03,  ..., 8.6814e-03,
          1.0354e-02, 8.7142e-03],
         [8.7762e-03, 8.1008e-03, 8.6464e-03,  ..., 8.6814e-03,
          1.0354e-02, 8.7142e-03],
         [8.7762e-03, 8.1008e-03, 8.6464e-03,  ..., 8.6814e-03,
          1.0354e-02, 8.7142e-03],
         [9.7367e-01, 9.7570e-01, 9.7406e-01,  ..., 9.7396e-01,
          9.6894e-01, 9.7386e-01]],
        [[8.9192e-03, 9.0380e-03, 9.2409e-03,  ..., 8.5420e-06,
          9.2676e-03, 9.3897e-03],
         [8.9192e-03, 9.0380e-03, 9.2409e-03,  ..., 8.5420e-06,
          9.2676e-03, 9.3897e-03],
         [8.9192e-03, 9.0380e-03, 9.2409e-03,  ..., 9.9997e-01,
          9.2676e-03, 9.3897e-03],
         [9.7324e-01, 9.7289e-01, 9.7228e-01,  ..., 8.5420e-06,
          9.7220e-01, 9.7183e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:25,749 [Process: 0] Synchronize training processes
2024-08-16 16:37:25,749 [Process: 0] Evaluating...
2024-08-16 16:37:25,751 [Process: 0] EPOCH 304:
2024-08-16 16:37:25,753 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0091, 0.0085,  ..., 0.0093, 0.0094, 0.0096],
         [0.0097, 0.0091, 0.0085,  ..., 0.0093, 0.0094, 0.0096],
         [0.0097, 0.0091, 0.0085,  ..., 0.0093, 0.0094, 0.0096],
         [0.9709, 0.9727, 0.9744,  ..., 0.9722, 0.9718, 0.9712]],
        [[0.0086, 0.0092, 0.0086,  ..., 0.0091, 0.0092, 0.0098],
         [0.0086, 0.0092, 0.0086,  ..., 0.0091, 0.0092, 0.0098],
         [0.0086, 0.0092, 0.0086,  ..., 0.0091, 0.0092, 0.0098],
         [0.9742, 0.9723, 0.9741,  ..., 0.9728, 0.9724, 0.9705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0661e-03, 8.7276e-03, 8.8123e-03,  ..., 8.7172e-03,
          9.4339e-03, 8.5670e-03],
         [8.0661e-03, 8.7276e-03, 8.8123e-03,  ..., 8.7172e-03,
          9.4339e-03, 8.5670e-03],
         [8.0661e-03, 8.7276e-03, 8.8123e-03,  ..., 8.7172e-03,
          9.4339e-03, 8.5670e-03],
         [9.7580e-01, 9.7382e-01, 9.7356e-01,  ..., 9.7385e-01,
          9.7170e-01, 9.7430e-01]],
        [[8.9839e-03, 8.8435e-03, 9.1287e-03,  ..., 1.9282e-07,
          9.3322e-03, 9.2272e-03],
         [8.9839e-03, 8.8435e-03, 9.1287e-03,  ..., 1.9282e-07,
          9.3322e-03, 9.2272e-03],
         [8.9839e-03, 8.8435e-03, 9.1287e-03,  ..., 1.0000e+00,
          9.3322e-03, 9.2272e-03],
         [9.7305e-01, 9.7347e-01, 9.7261e-01,  ..., 1.9282e-07,
          9.7200e-01, 9.7232e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:27,820 [Process: 0] Synchronize training processes
2024-08-16 16:37:27,820 [Process: 0] Evaluating...
2024-08-16 16:37:27,822 [Process: 0] EPOCH 305:
2024-08-16 16:37:27,824 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0098, 0.0096,  ..., 0.0093, 0.0094, 0.0096],
         [0.0096, 0.0098, 0.0096,  ..., 0.0093, 0.0094, 0.0096],
         [0.0096, 0.0098, 0.0096,  ..., 0.0093, 0.0094, 0.0096],
         [0.9711, 0.9706, 0.9712,  ..., 0.9722, 0.9718, 0.9712]],
        [[0.0095, 0.0096, 0.0095,  ..., 0.0093, 0.0097, 0.0107],
         [0.0095, 0.0096, 0.0095,  ..., 0.0093, 0.0097, 0.0107],
         [0.0095, 0.0096, 0.0095,  ..., 0.0093, 0.0097, 0.0107],
         [0.9714, 0.9711, 0.9715,  ..., 0.9722, 0.9710, 0.9679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6350e-03, 9.2746e-03, 9.2029e-03,  ..., 8.9188e-03,
          8.3511e-03, 8.5987e-03],
         [8.6350e-03, 9.2746e-03, 9.2029e-03,  ..., 8.9188e-03,
          8.3511e-03, 8.5987e-03],
         [8.6350e-03, 9.2746e-03, 9.2029e-03,  ..., 8.9188e-03,
          8.3511e-03, 8.5987e-03],
         [9.7410e-01, 9.7218e-01, 9.7239e-01,  ..., 9.7324e-01,
          9.7495e-01, 9.7420e-01]],
        [[8.4181e-03, 8.9039e-03, 8.5140e-03,  ..., 3.4887e-05,
          9.3178e-03, 8.3897e-03],
         [8.4181e-03, 8.9039e-03, 8.5140e-03,  ..., 3.4887e-05,
          9.3178e-03, 8.3897e-03],
         [8.4181e-03, 8.9039e-03, 8.5140e-03,  ..., 9.9990e-01,
          9.3178e-03, 8.3897e-03],
         [9.7475e-01, 9.7329e-01, 9.7446e-01,  ..., 3.4887e-05,
          9.7205e-01, 9.7483e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:29,905 [Process: 0] Synchronize training processes
2024-08-16 16:37:29,905 [Process: 0] Evaluating...
2024-08-16 16:37:29,907 [Process: 0] EPOCH 306:
2024-08-16 16:37:29,909 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0093, 0.0097,  ..., 0.0097, 0.0101, 0.0093],
         [0.0101, 0.0093, 0.0097,  ..., 0.0097, 0.0101, 0.0093],
         [0.0101, 0.0093, 0.0097,  ..., 0.0097, 0.0101, 0.0093],
         [0.9697, 0.9721, 0.9709,  ..., 0.9708, 0.9696, 0.9722]],
        [[0.0098, 0.0096, 0.0097,  ..., 0.0095, 0.0092, 0.0099],
         [0.0098, 0.0096, 0.0097,  ..., 0.0095, 0.0092, 0.0099],
         [0.0098, 0.0096, 0.0097,  ..., 0.0095, 0.0092, 0.0099],
         [0.9705, 0.9712, 0.9709,  ..., 0.9714, 0.9723, 0.9704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7903e-03, 8.7408e-03, 9.1499e-03,  ..., 8.3622e-03,
          9.6246e-03, 8.4431e-03],
         [8.7903e-03, 8.7408e-03, 9.1499e-03,  ..., 8.3622e-03,
          9.6246e-03, 8.4431e-03],
         [8.7903e-03, 8.7408e-03, 9.1499e-03,  ..., 8.3622e-03,
          9.6246e-03, 8.4431e-03],
         [9.7363e-01, 9.7378e-01, 9.7255e-01,  ..., 9.7491e-01,
          9.7113e-01, 9.7467e-01]],
        [[7.7674e-03, 8.2085e-03, 8.3182e-03,  ..., 1.1880e-06,
          8.8686e-03, 8.5166e-03],
         [7.7674e-03, 8.2085e-03, 8.3182e-03,  ..., 1.1880e-06,
          8.8686e-03, 8.5166e-03],
         [7.7674e-03, 8.2085e-03, 8.3182e-03,  ..., 1.0000e+00,
          8.8686e-03, 8.5166e-03],
         [9.7670e-01, 9.7537e-01, 9.7505e-01,  ..., 1.1880e-06,
          9.7339e-01, 9.7445e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:31,973 [Process: 0] Synchronize training processes
2024-08-16 16:37:31,973 [Process: 0] Evaluating...
2024-08-16 16:37:31,975 [Process: 0] EPOCH 307:
2024-08-16 16:37:31,977 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0094, 0.0094,  ..., 0.0092, 0.0096, 0.0086],
         [0.0092, 0.0094, 0.0094,  ..., 0.0092, 0.0096, 0.0086],
         [0.0092, 0.0094, 0.0094,  ..., 0.0092, 0.0096, 0.0086],
         [0.9723, 0.9718, 0.9718,  ..., 0.9725, 0.9713, 0.9743]],
        [[0.0093, 0.0094, 0.0095,  ..., 0.0089, 0.0090, 0.0084],
         [0.0093, 0.0094, 0.0095,  ..., 0.0089, 0.0090, 0.0084],
         [0.0093, 0.0094, 0.0095,  ..., 0.0089, 0.0090, 0.0084],
         [0.9720, 0.9718, 0.9715,  ..., 0.9734, 0.9730, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2169e-03, 8.1729e-03, 8.7090e-03,  ..., 8.2309e-03,
          9.1853e-03, 8.8606e-03],
         [8.2169e-03, 8.1729e-03, 8.7090e-03,  ..., 8.2309e-03,
          9.1853e-03, 8.8606e-03],
         [8.2169e-03, 8.1729e-03, 8.7090e-03,  ..., 8.2309e-03,
          9.1853e-03, 8.8606e-03],
         [9.7535e-01, 9.7548e-01, 9.7387e-01,  ..., 9.7531e-01,
          9.7244e-01, 9.7342e-01]],
        [[8.4490e-03, 8.3260e-03, 8.6755e-03,  ..., 1.7535e-05,
          9.1650e-03, 9.2239e-03],
         [8.4490e-03, 8.3260e-03, 8.6755e-03,  ..., 1.7535e-05,
          9.1650e-03, 9.2239e-03],
         [8.4490e-03, 8.3260e-03, 8.6755e-03,  ..., 9.9995e-01,
          9.1650e-03, 9.2239e-03],
         [9.7465e-01, 9.7502e-01, 9.7397e-01,  ..., 1.7535e-05,
          9.7251e-01, 9.7233e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:37:34,073 [Process: 0] Synchronize training processes
2024-08-16 16:37:34,074 [Process: 0] Evaluating...
2024-08-16 16:37:34,075 [Process: 0] EPOCH 308:
2024-08-16 16:37:34,077 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0087, 0.0095,  ..., 0.0089, 0.0095, 0.0087],
         [0.0093, 0.0087, 0.0095,  ..., 0.0089, 0.0095, 0.0087],
         [0.0093, 0.0087, 0.0095,  ..., 0.0089, 0.0095, 0.0087],
         [0.9722, 0.9739, 0.9716,  ..., 0.9733, 0.9715, 0.9739]],
        [[0.0090, 0.0094, 0.0096,  ..., 0.0088, 0.0092, 0.0089],
         [0.0090, 0.0094, 0.0096,  ..., 0.0088, 0.0092, 0.0089],
         [0.0090, 0.0094, 0.0096,  ..., 0.0088, 0.0092, 0.0089],
         [0.9729, 0.9718, 0.9713,  ..., 0.9735, 0.9723, 0.9732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.7399e-03, 8.6814e-03, 8.3312e-03,  ..., 8.7188e-03,
          8.8470e-03, 8.1756e-03],
         [8.7399e-03, 8.6814e-03, 8.3312e-03,  ..., 8.7188e-03,
          8.8470e-03, 8.1756e-03],
         [8.7399e-03, 8.6814e-03, 8.3312e-03,  ..., 8.7188e-03,
          8.8470e-03, 8.1756e-03],
         [9.7378e-01, 9.7396e-01, 9.7501e-01,  ..., 9.7384e-01,
          9.7346e-01, 9.7547e-01]],
        [[8.2351e-03, 9.1160e-03, 8.0430e-03,  ..., 1.8286e-06,
          9.1449e-03, 8.4683e-03],
         [8.2351e-03, 9.1160e-03, 8.0430e-03,  ..., 1.8286e-06,
          9.1449e-03, 8.4683e-03],
         [8.2351e-03, 9.1160e-03, 8.0430e-03,  ..., 9.9999e-01,
          9.1449e-03, 8.4683e-03],
         [9.7529e-01, 9.7265e-01, 9.7587e-01,  ..., 1.8286e-06,
          9.7257e-01, 9.7460e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:36,146 [Process: 0] Synchronize training processes
2024-08-16 16:37:36,147 [Process: 0] Evaluating...
2024-08-16 16:37:36,149 [Process: 0] EPOCH 309:
2024-08-16 16:37:36,151 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0095, 0.0091, 0.0095,  ..., 0.0091, 0.0092, 0.0093],
         [0.0095, 0.0091, 0.0095,  ..., 0.0091, 0.0092, 0.0093],
         [0.0095, 0.0091, 0.0095,  ..., 0.0091, 0.0092, 0.0093],
         [0.9714, 0.9727, 0.9716,  ..., 0.9727, 0.9725, 0.9721]],
        [[0.0094, 0.0092, 0.0093,  ..., 0.0098, 0.0091, 0.0093],
         [0.0094, 0.0092, 0.0093,  ..., 0.0098, 0.0091, 0.0093],
         [0.0094, 0.0092, 0.0093,  ..., 0.0098, 0.0091, 0.0093],
         [0.9719, 0.9724, 0.9720,  ..., 0.9706, 0.9726, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0746e-03, 8.2412e-03, 8.2071e-03,  ..., 8.2172e-03,
          8.3929e-03, 8.6902e-03],
         [8.0746e-03, 8.2412e-03, 8.2071e-03,  ..., 8.2172e-03,
          8.3929e-03, 8.6902e-03],
         [8.0746e-03, 8.2412e-03, 8.2071e-03,  ..., 8.2172e-03,
          8.3929e-03, 8.6902e-03],
         [9.7578e-01, 9.7528e-01, 9.7538e-01,  ..., 9.7535e-01,
          9.7482e-01, 9.7393e-01]],
        [[8.0687e-03, 8.2145e-03, 7.6308e-03,  ..., 1.0457e-04,
          8.2603e-03, 8.4006e-03],
         [8.0687e-03, 8.2145e-03, 7.6308e-03,  ..., 1.0457e-04,
          8.2603e-03, 8.4006e-03],
         [8.0687e-03, 8.2145e-03, 7.6308e-03,  ..., 9.9969e-01,
          8.2603e-03, 8.4006e-03],
         [9.7579e-01, 9.7536e-01, 9.7711e-01,  ..., 1.0457e-04,
          9.7522e-01, 9.7480e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:38,218 [Process: 0] Synchronize training processes
2024-08-16 16:37:38,219 [Process: 0] Evaluating...
2024-08-16 16:37:38,220 [Process: 0] EPOCH 310:
2024-08-16 16:37:38,222 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0093, 0.0090,  ..., 0.0089, 0.0095, 0.0094],
         [0.0090, 0.0093, 0.0090,  ..., 0.0089, 0.0095, 0.0094],
         [0.0090, 0.0093, 0.0090,  ..., 0.0089, 0.0095, 0.0094],
         [0.9731, 0.9722, 0.9731,  ..., 0.9734, 0.9714, 0.9719]],
        [[0.0090, 0.0090, 0.0090,  ..., 0.0092, 0.0094, 0.0093],
         [0.0090, 0.0090, 0.0090,  ..., 0.0092, 0.0094, 0.0093],
         [0.0090, 0.0090, 0.0090,  ..., 0.0092, 0.0094, 0.0093],
         [0.9731, 0.9731, 0.9730,  ..., 0.9723, 0.9718, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:37:40,300 [Process: 0] Synchronize training processes
2024-08-16 16:37:40,301 [Process: 0] Evaluating...
2024-08-16 16:37:40,303 [Process: 0] EPOCH 311:
2024-08-16 16:37:40,305 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[8.2650e-03, 8.3899e-03, 8.3125e-03,  ..., 8.1539e-03,
          7.7590e-03, 8.0178e-03],
         [8.2650e-03, 8.3899e-03, 8.3125e-03,  ..., 8.1539e-03,
          7.7590e-03, 8.0178e-03],
         [8.2650e-03, 8.3899e-03, 8.3125e-03,  ..., 8.1539e-03,
          7.7590e-03, 8.0178e-03],
         [9.7521e-01, 9.7483e-01, 9.7506e-01,  ..., 9.7554e-01,
          9.7672e-01, 9.7595e-01]],
        [[7.8715e-03, 7.7912e-03, 8.0740e-03,  ..., 1.4768e-04,
          8.9603e-03, 8.9757e-03],
         [7.8715e-03, 7.7912e-03, 8.0740e-03,  ..., 1.4768e-04,
          8.9603e-03, 8.9757e-03],
         [7.8715e-03, 7.7912e-03, 8.0740e-03,  ..., 9.9956e-01,
          8.9603e-03, 8.9757e-03],
         [9.7639e-01, 9.7663e-01, 9.7578e-01,  ..., 1.4768e-04,
          9.7312e-01, 9.7307e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0087, 0.0088,  ..., 0.0083, 0.0092, 0.0089],
         [0.0093, 0.0087, 0.0088,  ..., 0.0083, 0.0092, 0.0089],
         [0.0093, 0.0087, 0.0088,  ..., 0.0083, 0.0092, 0.0089],
         [0.9722, 0.9740, 0.9735,  ..., 0.9751, 0.9724, 0.9734]],
        [[0.0083, 0.0093, 0.0092,  ..., 0.0091, 0.0096, 0.0097],
         [0.0083, 0.0093, 0.0092,  ..., 0.0091, 0.0096, 0.0097],
         [0.0083, 0.0093, 0.0092,  ..., 0.0091, 0.0096, 0.0097],
         [0.9752, 0.9720, 0.9724,  ..., 0.9727, 0.9711, 0.9709]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:37:42,365 [Process: 0] Synchronize training processes
2024-08-16 16:37:42,366 [Process: 0] Evaluating...
2024-08-16 16:37:42,375 [Process: 0] EPOCH 312:
2024-08-16 16:37:42,378 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0081, 0.0078,  ..., 0.0074, 0.0075, 0.0083],
         [0.0086, 0.0081, 0.0078,  ..., 0.0074, 0.0075, 0.0083],
         [0.0086, 0.0081, 0.0078,  ..., 0.0074, 0.0075, 0.0083],
         [0.9743, 0.9758, 0.9767,  ..., 0.9778, 0.9774, 0.9752]],
        [[0.0085, 0.0080, 0.0084,  ..., 0.0060, 0.0088, 0.0083],
         [0.0085, 0.0080, 0.0084,  ..., 0.0060, 0.0088, 0.0083],
         [0.0085, 0.0080, 0.0084,  ..., 0.9819, 0.0088, 0.0083],
         [0.9744, 0.9761, 0.9749,  ..., 0.0060, 0.9737, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0083, 0.0090,  ..., 0.0093, 0.0094, 0.0091],
         [0.0088, 0.0083, 0.0090,  ..., 0.0093, 0.0094, 0.0091],
         [0.0088, 0.0083, 0.0090,  ..., 0.0093, 0.0094, 0.0091],
         [0.9736, 0.9751, 0.9729,  ..., 0.9721, 0.9717, 0.9728]],
        [[0.0089, 0.0090, 0.0084,  ..., 0.0087, 0.0095, 0.0086],
         [0.0089, 0.0090, 0.0084,  ..., 0.0087, 0.0095, 0.0086],
         [0.0089, 0.0090, 0.0084,  ..., 0.0087, 0.0095, 0.0086],
         [0.9733, 0.9730, 0.9747,  ..., 0.9740, 0.9716, 0.9741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:44,444 [Process: 0] Synchronize training processes
2024-08-16 16:37:44,445 [Process: 0] Evaluating...
2024-08-16 16:37:44,447 [Process: 0] EPOCH 313:
2024-08-16 16:37:44,449 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0274e-03, 8.2581e-03, 8.4769e-03,  ..., 7.9976e-03,
          7.6665e-03, 7.7460e-03],
         [8.0274e-03, 8.2581e-03, 8.4769e-03,  ..., 7.9976e-03,
          7.6665e-03, 7.7460e-03],
         [8.0274e-03, 8.2581e-03, 8.4769e-03,  ..., 7.9976e-03,
          7.6665e-03, 7.7460e-03],
         [9.7592e-01, 9.7523e-01, 9.7457e-01,  ..., 9.7601e-01,
          9.7700e-01, 9.7676e-01]],
        [[8.0652e-03, 8.3657e-03, 7.9339e-03,  ..., 8.2963e-05,
          8.3201e-03, 8.5140e-03],
         [8.0652e-03, 8.3657e-03, 7.9339e-03,  ..., 8.2963e-05,
          8.3201e-03, 8.5140e-03],
         [8.0652e-03, 8.3657e-03, 7.9339e-03,  ..., 9.9975e-01,
          8.3201e-03, 8.5140e-03],
         [9.7580e-01, 9.7490e-01, 9.7620e-01,  ..., 8.2963e-05,
          9.7504e-01, 9.7446e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0086, 0.0084,  ..., 0.0087, 0.0089, 0.0082],
         [0.0081, 0.0086, 0.0084,  ..., 0.0087, 0.0089, 0.0082],
         [0.0081, 0.0086, 0.0084,  ..., 0.0087, 0.0089, 0.0082],
         [0.9756, 0.9741, 0.9747,  ..., 0.9739, 0.9732, 0.9753]],
        [[0.0091, 0.0083, 0.0084,  ..., 0.0093, 0.0088, 0.0086],
         [0.0091, 0.0083, 0.0084,  ..., 0.0093, 0.0088, 0.0086],
         [0.0091, 0.0083, 0.0084,  ..., 0.0093, 0.0088, 0.0086],
         [0.9728, 0.9751, 0.9749,  ..., 0.9721, 0.9736, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:46,514 [Process: 0] Synchronize training processes
2024-08-16 16:37:46,514 [Process: 0] Evaluating...
2024-08-16 16:37:46,516 [Process: 0] EPOCH 314:
2024-08-16 16:37:46,518 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0079, 0.0083,  ..., 0.0080, 0.0080, 0.0079],
         [0.0083, 0.0079, 0.0083,  ..., 0.0080, 0.0080, 0.0079],
         [0.0083, 0.0079, 0.0083,  ..., 0.0080, 0.0080, 0.0079],
         [0.9752, 0.9763, 0.9751,  ..., 0.9759, 0.9760, 0.9763]],
        [[0.0075, 0.0081, 0.0083,  ..., 0.0029, 0.0086, 0.0084],
         [0.0075, 0.0081, 0.0083,  ..., 0.0024, 0.0086, 0.0084],
         [0.0075, 0.0081, 0.0083,  ..., 0.9922, 0.0086, 0.0084],
         [0.9775, 0.9758, 0.9750,  ..., 0.0024, 0.9742, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0088, 0.0092,  ..., 0.0089, 0.0088, 0.0088],
         [0.0086, 0.0088, 0.0092,  ..., 0.0089, 0.0088, 0.0088],
         [0.0086, 0.0088, 0.0092,  ..., 0.0089, 0.0088, 0.0088],
         [0.9743, 0.9735, 0.9724,  ..., 0.9733, 0.9735, 0.9737]],
        [[0.0088, 0.0090, 0.0090,  ..., 0.0091, 0.0094, 0.0090],
         [0.0088, 0.0090, 0.0090,  ..., 0.0091, 0.0094, 0.0090],
         [0.0088, 0.0090, 0.0090,  ..., 0.0091, 0.0094, 0.0090],
         [0.9737, 0.9730, 0.9730,  ..., 0.9727, 0.9718, 0.9731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:48,584 [Process: 0] Synchronize training processes
2024-08-16 16:37:48,585 [Process: 0] Evaluating...
2024-08-16 16:37:48,586 [Process: 0] EPOCH 315:
2024-08-16 16:37:48,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8189e-03, 7.7993e-03, 7.8050e-03,  ..., 7.8144e-03,
          8.0790e-03, 8.1032e-03],
         [7.8189e-03, 7.7993e-03, 7.8050e-03,  ..., 7.8144e-03,
          8.0790e-03, 8.1032e-03],
         [7.8189e-03, 7.7993e-03, 7.8050e-03,  ..., 7.8144e-03,
          8.0790e-03, 8.1032e-03],
         [9.7654e-01, 9.7660e-01, 9.7659e-01,  ..., 9.7656e-01,
          9.7576e-01, 9.7569e-01]],
        [[7.8510e-03, 7.8060e-03, 7.6682e-03,  ..., 1.3545e-05,
          8.2020e-03, 8.4249e-03],
         [7.8510e-03, 7.8060e-03, 7.6682e-03,  ..., 1.3545e-05,
          8.2020e-03, 8.4249e-03],
         [7.8510e-03, 7.8060e-03, 7.6682e-03,  ..., 9.9996e-01,
          8.2020e-03, 8.4249e-03],
         [9.7645e-01, 9.7658e-01, 9.7700e-01,  ..., 1.3545e-05,
          9.7539e-01, 9.7473e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0087, 0.0085,  ..., 0.0086, 0.0090, 0.0085],
         [0.0083, 0.0087, 0.0085,  ..., 0.0086, 0.0090, 0.0085],
         [0.0083, 0.0087, 0.0085,  ..., 0.0086, 0.0090, 0.0085],
         [0.9751, 0.9740, 0.9746,  ..., 0.9742, 0.9729, 0.9746]],
        [[0.0084, 0.0087, 0.0089,  ..., 0.0090, 0.0085, 0.0087],
         [0.0084, 0.0087, 0.0089,  ..., 0.0090, 0.0085, 0.0087],
         [0.0084, 0.0087, 0.0089,  ..., 0.0090, 0.0085, 0.0087],
         [0.9749, 0.9740, 0.9734,  ..., 0.9729, 0.9744, 0.9740]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:50,656 [Process: 0] Synchronize training processes
2024-08-16 16:37:50,656 [Process: 0] Evaluating...
2024-08-16 16:37:50,658 [Process: 0] EPOCH 316:
2024-08-16 16:37:50,660 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5332e-03, 7.9296e-03, 8.1112e-03,  ..., 8.1180e-03,
          7.7923e-03, 7.8963e-03],
         [7.5332e-03, 7.9296e-03, 8.1112e-03,  ..., 8.1180e-03,
          7.7923e-03, 7.8963e-03],
         [7.5332e-03, 7.9296e-03, 8.1112e-03,  ..., 8.1180e-03,
          7.7923e-03, 7.8963e-03],
         [9.7740e-01, 9.7621e-01, 9.7567e-01,  ..., 9.7565e-01,
          9.7662e-01, 9.7631e-01]],
        [[7.6239e-03, 8.1240e-03, 7.5621e-03,  ..., 1.4965e-04,
          8.0687e-03, 8.2366e-03],
         [7.6239e-03, 8.1240e-03, 7.5621e-03,  ..., 1.4965e-04,
          8.0687e-03, 8.2366e-03],
         [7.6239e-03, 8.1240e-03, 7.5621e-03,  ..., 9.9955e-01,
          8.0687e-03, 8.2366e-03],
         [9.7713e-01, 9.7563e-01, 9.7731e-01,  ..., 1.4965e-04,
          9.7579e-01, 9.7529e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0089, 0.0083,  ..., 0.0087, 0.0089, 0.0085],
         [0.0082, 0.0089, 0.0083,  ..., 0.0087, 0.0089, 0.0085],
         [0.0082, 0.0089, 0.0083,  ..., 0.0087, 0.0089, 0.0085],
         [0.9754, 0.9733, 0.9751,  ..., 0.9740, 0.9734, 0.9745]],
        [[0.0086, 0.0089, 0.0092,  ..., 0.0086, 0.0091, 0.0091],
         [0.0086, 0.0089, 0.0092,  ..., 0.0086, 0.0091, 0.0091],
         [0.0086, 0.0089, 0.0092,  ..., 0.0086, 0.0091, 0.0091],
         [0.9742, 0.9734, 0.9725,  ..., 0.9742, 0.9726, 0.9726]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:52,733 [Process: 0] Synchronize training processes
2024-08-16 16:37:52,733 [Process: 0] Evaluating...
2024-08-16 16:37:52,735 [Process: 0] EPOCH 317:
2024-08-16 16:37:52,737 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0641e-03, 7.9890e-03, 8.3521e-03,  ..., 8.1747e-03,
          8.2646e-03, 8.1018e-03],
         [8.0641e-03, 7.9890e-03, 8.3521e-03,  ..., 8.1747e-03,
          8.2646e-03, 8.1018e-03],
         [8.0641e-03, 7.9890e-03, 8.3521e-03,  ..., 8.1747e-03,
          8.2646e-03, 8.1018e-03],
         [9.7581e-01, 9.7603e-01, 9.7494e-01,  ..., 9.7548e-01,
          9.7521e-01, 9.7569e-01]],
        [[8.0883e-03, 8.1293e-03, 8.1300e-03,  ..., 1.4212e-04,
          8.1529e-03, 8.1191e-03],
         [8.0883e-03, 8.1293e-03, 8.1300e-03,  ..., 1.4212e-04,
          8.1529e-03, 8.1191e-03],
         [8.0883e-03, 8.1293e-03, 8.1300e-03,  ..., 9.9957e-01,
          8.1529e-03, 8.1191e-03],
         [9.7574e-01, 9.7561e-01, 9.7561e-01,  ..., 1.4212e-04,
          9.7554e-01, 9.7564e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0087, 0.0086,  ..., 0.0087, 0.0087, 0.0084],
         [0.0083, 0.0087, 0.0086,  ..., 0.0087, 0.0087, 0.0084],
         [0.0083, 0.0087, 0.0086,  ..., 0.0087, 0.0087, 0.0084],
         [0.9751, 0.9739, 0.9741,  ..., 0.9738, 0.9739, 0.9748]],
        [[0.0087, 0.0085, 0.0087,  ..., 0.0090, 0.0084, 0.0085],
         [0.0087, 0.0085, 0.0087,  ..., 0.0090, 0.0084, 0.0085],
         [0.0087, 0.0085, 0.0087,  ..., 0.0090, 0.0084, 0.0085],
         [0.9740, 0.9744, 0.9740,  ..., 0.9731, 0.9747, 0.9745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:54,811 [Process: 0] Synchronize training processes
2024-08-16 16:37:54,811 [Process: 0] Evaluating...
2024-08-16 16:37:54,813 [Process: 0] EPOCH 318:
2024-08-16 16:37:54,815 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5550e-03, 8.0128e-03, 7.8299e-03,  ..., 8.2508e-03,
          7.9569e-03, 8.0281e-03],
         [7.5550e-03, 8.0128e-03, 7.8299e-03,  ..., 8.2508e-03,
          7.9569e-03, 8.0281e-03],
         [7.5550e-03, 8.0128e-03, 7.8299e-03,  ..., 8.2508e-03,
          7.9569e-03, 8.0281e-03],
         [9.7733e-01, 9.7596e-01, 9.7651e-01,  ..., 9.7525e-01,
          9.7613e-01, 9.7592e-01]],
        [[7.5422e-03, 7.5487e-03, 7.8676e-03,  ..., 3.3663e-04,
          7.9002e-03, 8.2004e-03],
         [7.5422e-03, 7.5487e-03, 7.8676e-03,  ..., 3.3663e-04,
          7.9002e-03, 8.2004e-03],
         [7.5422e-03, 7.5487e-03, 7.8676e-03,  ..., 9.9899e-01,
          7.9002e-03, 8.2004e-03],
         [9.7737e-01, 9.7735e-01, 9.7640e-01,  ..., 3.3663e-04,
          9.7630e-01, 9.7540e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0082, 0.0086,  ..., 0.0084, 0.0085, 0.0086],
         [0.0087, 0.0082, 0.0086,  ..., 0.0084, 0.0085, 0.0086],
         [0.0087, 0.0082, 0.0086,  ..., 0.0084, 0.0085, 0.0086],
         [0.9739, 0.9753, 0.9742,  ..., 0.9749, 0.9744, 0.9743]],
        [[0.0085, 0.0083, 0.0083,  ..., 0.0083, 0.0087, 0.0086],
         [0.0085, 0.0083, 0.0083,  ..., 0.0083, 0.0087, 0.0086],
         [0.0085, 0.0083, 0.0083,  ..., 0.0083, 0.0087, 0.0086],
         [0.9744, 0.9750, 0.9750,  ..., 0.9750, 0.9740, 0.9742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:56,898 [Process: 0] Synchronize training processes
2024-08-16 16:37:56,898 [Process: 0] Evaluating...
2024-08-16 16:37:56,900 [Process: 0] EPOCH 319:
2024-08-16 16:37:56,902 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9114e-03, 7.7493e-03, 8.0377e-03,  ..., 8.2986e-03,
          7.7420e-03, 8.2866e-03],
         [7.9114e-03, 7.7493e-03, 8.0377e-03,  ..., 8.2986e-03,
          7.7420e-03, 8.2866e-03],
         [7.9114e-03, 7.7493e-03, 8.0377e-03,  ..., 8.2986e-03,
          7.7420e-03, 8.2866e-03],
         [9.7627e-01, 9.7675e-01, 9.7589e-01,  ..., 9.7510e-01,
          9.7677e-01, 9.7514e-01]],
        [[7.7532e-03, 7.9704e-03, 7.7665e-03,  ..., 6.0192e-05,
          8.1357e-03, 8.2264e-03],
         [7.7532e-03, 7.9704e-03, 7.7665e-03,  ..., 6.0192e-05,
          8.1357e-03, 8.2264e-03],
         [7.7532e-03, 7.9704e-03, 7.7665e-03,  ..., 9.9982e-01,
          8.1357e-03, 8.2264e-03],
         [9.7674e-01, 9.7609e-01, 9.7670e-01,  ..., 6.0192e-05,
          9.7559e-01, 9.7532e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0088, 0.0086,  ..., 0.0083, 0.0086, 0.0086],
         [0.0084, 0.0088, 0.0086,  ..., 0.0083, 0.0086, 0.0086],
         [0.0084, 0.0088, 0.0086,  ..., 0.0083, 0.0086, 0.0086],
         [0.9748, 0.9737, 0.9743,  ..., 0.9751, 0.9743, 0.9741]],
        [[0.0084, 0.0084, 0.0087,  ..., 0.0087, 0.0088, 0.0086],
         [0.0084, 0.0084, 0.0087,  ..., 0.0087, 0.0088, 0.0086],
         [0.0084, 0.0084, 0.0087,  ..., 0.0087, 0.0088, 0.0086],
         [0.9749, 0.9749, 0.9739,  ..., 0.9738, 0.9737, 0.9742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:37:58,972 [Process: 0] Synchronize training processes
2024-08-16 16:37:58,972 [Process: 0] Evaluating...
2024-08-16 16:37:58,974 [Process: 0] EPOCH 320:
2024-08-16 16:37:58,976 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7726e-03, 7.8337e-03, 7.8511e-03,  ..., 7.9289e-03,
          7.9163e-03, 8.0457e-03],
         [7.7726e-03, 7.8337e-03, 7.8511e-03,  ..., 7.9289e-03,
          7.9163e-03, 8.0457e-03],
         [7.7726e-03, 7.8337e-03, 7.8511e-03,  ..., 7.9289e-03,
          7.9163e-03, 8.0457e-03],
         [9.7668e-01, 9.7650e-01, 9.7645e-01,  ..., 9.7621e-01,
          9.7625e-01, 9.7586e-01]],
        [[8.0759e-03, 7.7148e-03, 7.8234e-03,  ..., 2.3211e-04,
          8.2572e-03, 8.0864e-03],
         [8.0759e-03, 7.7148e-03, 7.8234e-03,  ..., 2.3211e-04,
          8.2572e-03, 8.0864e-03],
         [8.0759e-03, 7.7148e-03, 7.8234e-03,  ..., 9.9930e-01,
          8.2572e-03, 8.0864e-03],
         [9.7577e-01, 9.7686e-01, 9.7653e-01,  ..., 2.3211e-04,
          9.7523e-01, 9.7574e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0085, 0.0087,  ..., 0.0088, 0.0088, 0.0086],
         [0.0086, 0.0085, 0.0087,  ..., 0.0088, 0.0088, 0.0086],
         [0.0086, 0.0085, 0.0087,  ..., 0.0088, 0.0088, 0.0086],
         [0.9742, 0.9746, 0.9740,  ..., 0.9737, 0.9736, 0.9742]],
        [[0.0088, 0.0088, 0.0089,  ..., 0.0086, 0.0088, 0.0089],
         [0.0088, 0.0088, 0.0089,  ..., 0.0086, 0.0088, 0.0089],
         [0.0088, 0.0088, 0.0089,  ..., 0.0086, 0.0088, 0.0089],
         [0.9736, 0.9737, 0.9732,  ..., 0.9741, 0.9736, 0.9733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:01,057 [Process: 0] Synchronize training processes
2024-08-16 16:38:01,057 [Process: 0] Evaluating...
2024-08-16 16:38:01,059 [Process: 0] EPOCH 321:
2024-08-16 16:38:01,061 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6680e-03, 7.9879e-03, 8.0652e-03,  ..., 7.7108e-03,
          7.8174e-03, 7.8754e-03],
         [7.6680e-03, 7.9879e-03, 8.0652e-03,  ..., 7.7108e-03,
          7.8174e-03, 7.8754e-03],
         [7.6680e-03, 7.9879e-03, 8.0652e-03,  ..., 7.7108e-03,
          7.8174e-03, 7.8754e-03],
         [9.7700e-01, 9.7604e-01, 9.7580e-01,  ..., 9.7687e-01,
          9.7655e-01, 9.7637e-01]],
        [[7.9115e-03, 7.8179e-03, 7.8817e-03,  ..., 6.0786e-05,
          8.1445e-03, 8.1719e-03],
         [7.9115e-03, 7.8179e-03, 7.8817e-03,  ..., 6.0786e-05,
          8.1445e-03, 8.1719e-03],
         [7.9115e-03, 7.8179e-03, 7.8817e-03,  ..., 9.9982e-01,
          8.1445e-03, 8.1719e-03],
         [9.7627e-01, 9.7655e-01, 9.7636e-01,  ..., 6.0786e-05,
          9.7557e-01, 9.7548e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0088, 0.0084,  ..., 0.0084, 0.0085, 0.0086],
         [0.0080, 0.0088, 0.0084,  ..., 0.0084, 0.0085, 0.0086],
         [0.0080, 0.0088, 0.0084,  ..., 0.0084, 0.0085, 0.0086],
         [0.9759, 0.9736, 0.9749,  ..., 0.9749, 0.9746, 0.9742]],
        [[0.0085, 0.0084, 0.0083,  ..., 0.0083, 0.0086, 0.0088],
         [0.0085, 0.0084, 0.0083,  ..., 0.0083, 0.0086, 0.0088],
         [0.0085, 0.0084, 0.0083,  ..., 0.0083, 0.0086, 0.0088],
         [0.9744, 0.9748, 0.9751,  ..., 0.9752, 0.9743, 0.9736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:03,136 [Process: 0] Synchronize training processes
2024-08-16 16:38:03,136 [Process: 0] Evaluating...
2024-08-16 16:38:03,145 [Process: 0] EPOCH 322:
2024-08-16 16:38:03,147 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0080, 0.0080,  ..., 0.0078, 0.0080, 0.0080],
         [0.0078, 0.0080, 0.0080,  ..., 0.0078, 0.0080, 0.0080],
         [0.0078, 0.0080, 0.0080,  ..., 0.0078, 0.0080, 0.0080],
         [0.9765, 0.9760, 0.9759,  ..., 0.9767, 0.9759, 0.9759]],
        [[0.0079, 0.0079, 0.0080,  ..., 0.0086, 0.0080, 0.0079],
         [0.0079, 0.0079, 0.0080,  ..., 0.0086, 0.0080, 0.0079],
         [0.0079, 0.0079, 0.0080,  ..., 0.9742, 0.0080, 0.0079],
         [0.9763, 0.9764, 0.9761,  ..., 0.0086, 0.9761, 0.9763]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0083, 0.0083,  ..., 0.0086, 0.0087, 0.0083],
         [0.0081, 0.0083, 0.0083,  ..., 0.0086, 0.0087, 0.0083],
         [0.0081, 0.0083, 0.0083,  ..., 0.0086, 0.0087, 0.0083],
         [0.9757, 0.9751, 0.9750,  ..., 0.9742, 0.9739, 0.9751]],
        [[0.0084, 0.0086, 0.0084,  ..., 0.0086, 0.0087, 0.0089],
         [0.0084, 0.0086, 0.0084,  ..., 0.0086, 0.0087, 0.0089],
         [0.0084, 0.0086, 0.0084,  ..., 0.0086, 0.0087, 0.0089],
         [0.9748, 0.9741, 0.9748,  ..., 0.9743, 0.9739, 0.9733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8725e-03, 7.9169e-03, 7.7645e-03,  ..., 8.0099e-03,
          7.9407e-03, 7.9725e-03],
         [7.8725e-03, 7.9169e-03, 7.7645e-03,  ..., 8.0099e-03,
          7.9407e-03, 7.9725e-03],
         [7.8725e-03, 7.9169e-03, 7.7645e-03,  ..., 8.0099e-03,
          7.9407e-03, 7.9725e-03],
         [9.7638e-01, 9.7625e-01, 9.7671e-01,  ..., 9.7597e-01,
          9.7618e-01, 9.7608e-01]],
        [[7.7150e-03, 7.5743e-03, 7.7162e-03,  ..., 2.2644e-05,
          7.9426e-03, 8.0056e-03],
         [7.7150e-03, 7.5743e-03, 7.7162e-03,  ..., 2.2644e-05,
          7.9426e-03, 8.0056e-03],
         [7.7150e-03, 7.5743e-03, 7.7162e-03,  ..., 9.9993e-01,
          7.9426e-03, 8.0056e-03],
         [9.7685e-01, 9.7728e-01, 9.7685e-01,  ..., 2.2644e-05,
          9.7617e-01, 9.7598e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0085, 0.0085,  ..., 0.0084, 0.0085, 0.0083],
         [0.0085, 0.0085, 0.0085,  ..., 0.0084, 0.0085, 0.0083],
         [0.0085, 0.0085, 0.0085,  ..., 0.0084, 0.0085, 0.0083],
         [0.9746, 0.9746, 0.9745,  ..., 0.9748, 0.9744, 0.9750]],
        [[0.0083, 0.0085, 0.0082,  ..., 0.0086, 0.0087, 0.0089],
         [0.0083, 0.0085, 0.0082,  ..., 0.0086, 0.0087, 0.0089],
         [0.0083, 0.0085, 0.0082,  ..., 0.0086, 0.0087, 0.0089],
         [0.9750, 0.9746, 0.9753,  ..., 0.9741, 0.9739, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:05,241 [Process: 0] Synchronize training processes
2024-08-16 16:38:05,242 [Process: 0] Evaluating...
2024-08-16 16:38:05,244 [Process: 0] EPOCH 323:
2024-08-16 16:38:05,246 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1000e-03, 7.7164e-03, 7.9113e-03,  ..., 7.9919e-03,
          7.6042e-03, 7.6648e-03],
         [8.1000e-03, 7.7164e-03, 7.9113e-03,  ..., 7.9919e-03,
          7.6042e-03, 7.6648e-03],
         [8.1000e-03, 7.7164e-03, 7.9113e-03,  ..., 7.9919e-03,
          7.6042e-03, 7.6648e-03],
         [9.7570e-01, 9.7685e-01, 9.7627e-01,  ..., 9.7602e-01,
          9.7719e-01, 9.7701e-01]],
        [[7.8185e-03, 7.6651e-03, 7.6997e-03,  ..., 2.8327e-06,
          7.9479e-03, 7.9446e-03],
         [7.8185e-03, 7.6651e-03, 7.6997e-03,  ..., 2.8327e-06,
          7.9479e-03, 7.9446e-03],
         [7.8185e-03, 7.6651e-03, 7.6997e-03,  ..., 9.9999e-01,
          7.9479e-03, 7.9446e-03],
         [9.7654e-01, 9.7700e-01, 9.7690e-01,  ..., 2.8327e-06,
          9.7616e-01, 9.7617e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:38:07,362 [Process: 0] Synchronize training processes
2024-08-16 16:38:07,362 [Process: 0] Evaluating...
2024-08-16 16:38:07,364 [Process: 0] EPOCH 324:
2024-08-16 16:38:07,366 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0082, 0.0085,  ..., 0.0083, 0.0084, 0.0083],
         [0.0082, 0.0082, 0.0085,  ..., 0.0083, 0.0084, 0.0083],
         [0.0082, 0.0082, 0.0085,  ..., 0.0083, 0.0084, 0.0083],
         [0.9754, 0.9753, 0.9745,  ..., 0.9750, 0.9747, 0.9750]],
        [[0.0085, 0.0083, 0.0084,  ..., 0.0085, 0.0088, 0.0086],
         [0.0085, 0.0083, 0.0084,  ..., 0.0085, 0.0088, 0.0086],
         [0.0085, 0.0083, 0.0084,  ..., 0.0085, 0.0088, 0.0086],
         [0.9746, 0.9751, 0.9747,  ..., 0.9746, 0.9735, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6520e-03, 7.7679e-03, 7.8768e-03,  ..., 7.7360e-03,
          7.5861e-03, 7.7032e-03],
         [7.6520e-03, 7.7679e-03, 7.8768e-03,  ..., 7.7360e-03,
          7.5861e-03, 7.7032e-03],
         [7.6520e-03, 7.7679e-03, 7.8768e-03,  ..., 7.7360e-03,
          7.5861e-03, 7.7032e-03],
         [9.7704e-01, 9.7670e-01, 9.7637e-01,  ..., 9.7679e-01,
          9.7724e-01, 9.7689e-01]],
        [[7.7728e-03, 7.7400e-03, 7.6146e-03,  ..., 1.2468e-05,
          7.9856e-03, 8.0535e-03],
         [7.7728e-03, 7.7400e-03, 7.6146e-03,  ..., 1.2468e-05,
          7.9856e-03, 8.0535e-03],
         [7.7728e-03, 7.7400e-03, 7.6146e-03,  ..., 9.9996e-01,
          7.9856e-03, 8.0535e-03],
         [9.7668e-01, 9.7678e-01, 9.7716e-01,  ..., 1.2468e-05,
          9.7604e-01, 9.7584e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:09,519 [Process: 0] Synchronize training processes
2024-08-16 16:38:09,519 [Process: 0] Evaluating...
2024-08-16 16:38:09,521 [Process: 0] EPOCH 325:
2024-08-16 16:38:09,523 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0081, 0.0080,  ..., 0.0081, 0.0085, 0.0081],
         [0.0084, 0.0081, 0.0080,  ..., 0.0081, 0.0085, 0.0081],
         [0.0084, 0.0081, 0.0080,  ..., 0.0081, 0.0085, 0.0081],
         [0.9749, 0.9756, 0.9759,  ..., 0.9756, 0.9744, 0.9758]],
        [[0.0083, 0.0079, 0.0083,  ..., 0.0081, 0.0085, 0.0083],
         [0.0083, 0.0079, 0.0083,  ..., 0.0081, 0.0085, 0.0083],
         [0.0083, 0.0079, 0.0083,  ..., 0.0081, 0.0085, 0.0083],
         [0.9752, 0.9762, 0.9751,  ..., 0.9756, 0.9745, 0.9750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0078, 0.0078,  ..., 0.0077, 0.0077, 0.0077],
         [0.0079, 0.0078, 0.0078,  ..., 0.0077, 0.0077, 0.0077],
         [0.0079, 0.0078, 0.0078,  ..., 0.0077, 0.0077, 0.0077],
         [0.9764, 0.9767, 0.9765,  ..., 0.9769, 0.9768, 0.9768]],
        [[0.0080, 0.0079, 0.0079,  ..., 0.0014, 0.0080, 0.0079],
         [0.0080, 0.0079, 0.0079,  ..., 0.0014, 0.0080, 0.0079],
         [0.0080, 0.0079, 0.0079,  ..., 0.9957, 0.0080, 0.0079],
         [0.9761, 0.9762, 0.9763,  ..., 0.0014, 0.9761, 0.9763]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:11,614 [Process: 0] Synchronize training processes
2024-08-16 16:38:11,615 [Process: 0] Evaluating...
2024-08-16 16:38:11,616 [Process: 0] EPOCH 326:
2024-08-16 16:38:11,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0083, 0.0084,  ..., 0.0082, 0.0083, 0.0081],
         [0.0082, 0.0083, 0.0084,  ..., 0.0082, 0.0083, 0.0081],
         [0.0082, 0.0083, 0.0084,  ..., 0.0082, 0.0083, 0.0081],
         [0.9753, 0.9752, 0.9749,  ..., 0.9755, 0.9752, 0.9756]],
        [[0.0085, 0.0080, 0.0082,  ..., 0.0088, 0.0086, 0.0085],
         [0.0085, 0.0080, 0.0082,  ..., 0.0088, 0.0086, 0.0085],
         [0.0085, 0.0080, 0.0082,  ..., 0.0088, 0.0086, 0.0085],
         [0.9745, 0.9760, 0.9753,  ..., 0.9736, 0.9743, 0.9744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6277e-03, 7.7525e-03, 7.7387e-03,  ..., 7.9429e-03,
          7.8992e-03, 7.6706e-03],
         [7.6277e-03, 7.7525e-03, 7.7387e-03,  ..., 7.9429e-03,
          7.8992e-03, 7.6706e-03],
         [7.6277e-03, 7.7525e-03, 7.7387e-03,  ..., 7.9429e-03,
          7.8992e-03, 7.6706e-03],
         [9.7712e-01, 9.7674e-01, 9.7678e-01,  ..., 9.7617e-01,
          9.7630e-01, 9.7699e-01]],
        [[7.7215e-03, 7.6779e-03, 7.5958e-03,  ..., 8.2178e-05,
          7.6434e-03, 8.0714e-03],
         [7.7215e-03, 7.6779e-03, 7.5958e-03,  ..., 8.2178e-05,
          7.6434e-03, 8.0714e-03],
         [7.7215e-03, 7.6779e-03, 7.5958e-03,  ..., 9.9975e-01,
          7.6434e-03, 8.0714e-03],
         [9.7684e-01, 9.7697e-01, 9.7721e-01,  ..., 8.2178e-05,
          9.7707e-01, 9.7579e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:13,630 [Process: 0] Synchronize training processes
2024-08-16 16:38:13,630 [Process: 0] Evaluating...
2024-08-16 16:38:13,632 [Process: 0] EPOCH 327:
2024-08-16 16:38:13,634 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0083, 0.0081,  ..., 0.0082, 0.0083, 0.0079],
         [0.0083, 0.0083, 0.0081,  ..., 0.0082, 0.0083, 0.0079],
         [0.0083, 0.0083, 0.0081,  ..., 0.0082, 0.0083, 0.0079],
         [0.9752, 0.9751, 0.9756,  ..., 0.9754, 0.9750, 0.9763]],
        [[0.0085, 0.0084, 0.0080,  ..., 0.0087, 0.0086, 0.0083],
         [0.0085, 0.0084, 0.0080,  ..., 0.0087, 0.0086, 0.0083],
         [0.0085, 0.0084, 0.0080,  ..., 0.0087, 0.0086, 0.0083],
         [0.9745, 0.9748, 0.9760,  ..., 0.9740, 0.9743, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7993e-03, 7.7958e-03, 7.8186e-03,  ..., 7.7004e-03,
          7.6643e-03, 7.7679e-03],
         [7.7993e-03, 7.7958e-03, 7.8186e-03,  ..., 7.7004e-03,
          7.6643e-03, 7.7679e-03],
         [7.7993e-03, 7.7958e-03, 7.8186e-03,  ..., 7.7004e-03,
          7.6643e-03, 7.7679e-03],
         [9.7660e-01, 9.7661e-01, 9.7654e-01,  ..., 9.7690e-01,
          9.7701e-01, 9.7670e-01]],
        [[7.8233e-03, 7.5751e-03, 7.8366e-03,  ..., 3.2691e-05,
          7.7199e-03, 7.6429e-03],
         [7.8233e-03, 7.5751e-03, 7.8366e-03,  ..., 3.2691e-05,
          7.7199e-03, 7.6429e-03],
         [7.8233e-03, 7.5751e-03, 7.8366e-03,  ..., 9.9990e-01,
          7.7199e-03, 7.6429e-03],
         [9.7653e-01, 9.7727e-01, 9.7649e-01,  ..., 3.2691e-05,
          9.7684e-01, 9.7707e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:15,715 [Process: 0] Synchronize training processes
2024-08-16 16:38:15,716 [Process: 0] Evaluating...
2024-08-16 16:38:15,718 [Process: 0] EPOCH 328:
2024-08-16 16:38:15,719 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0081, 0.0084,  ..., 0.0083, 0.0082, 0.0080],
         [0.0081, 0.0081, 0.0084,  ..., 0.0083, 0.0082, 0.0080],
         [0.0081, 0.0081, 0.0084,  ..., 0.0083, 0.0082, 0.0080],
         [0.9758, 0.9756, 0.9748,  ..., 0.9752, 0.9754, 0.9760]],
        [[0.0082, 0.0081, 0.0081,  ..., 0.0081, 0.0086, 0.0084],
         [0.0082, 0.0081, 0.0081,  ..., 0.0081, 0.0086, 0.0084],
         [0.0082, 0.0081, 0.0081,  ..., 0.0081, 0.0086, 0.0084],
         [0.9755, 0.9757, 0.9757,  ..., 0.9756, 0.9742, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5937e-03, 7.6664e-03, 7.8226e-03,  ..., 7.5494e-03,
          7.8329e-03, 7.8472e-03],
         [7.5937e-03, 7.6664e-03, 7.8226e-03,  ..., 7.5494e-03,
          7.8329e-03, 7.8472e-03],
         [7.5937e-03, 7.6664e-03, 7.8226e-03,  ..., 7.5494e-03,
          7.8329e-03, 7.8472e-03],
         [9.7722e-01, 9.7700e-01, 9.7653e-01,  ..., 9.7735e-01,
          9.7650e-01, 9.7646e-01]],
        [[7.5728e-03, 7.3232e-03, 7.5102e-03,  ..., 3.9081e-04,
          7.8833e-03, 7.6056e-03],
         [7.5728e-03, 7.3232e-03, 7.5102e-03,  ..., 3.9081e-04,
          7.8833e-03, 7.6056e-03],
         [7.5728e-03, 7.3232e-03, 7.5102e-03,  ..., 9.9883e-01,
          7.8833e-03, 7.6056e-03],
         [9.7728e-01, 9.7803e-01, 9.7747e-01,  ..., 3.9081e-04,
          9.7635e-01, 9.7718e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:17,792 [Process: 0] Synchronize training processes
2024-08-16 16:38:17,792 [Process: 0] Evaluating...
2024-08-16 16:38:17,794 [Process: 0] EPOCH 329:
2024-08-16 16:38:17,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0085, 0.0080,  ..., 0.0082, 0.0083, 0.0084],
         [0.0083, 0.0085, 0.0080,  ..., 0.0082, 0.0083, 0.0084],
         [0.0083, 0.0085, 0.0080,  ..., 0.0082, 0.0083, 0.0084],
         [0.9751, 0.9746, 0.9760,  ..., 0.9754, 0.9751, 0.9748]],
        [[0.0085, 0.0081, 0.0083,  ..., 0.0085, 0.0084, 0.0083],
         [0.0085, 0.0081, 0.0083,  ..., 0.0085, 0.0084, 0.0083],
         [0.0085, 0.0081, 0.0083,  ..., 0.0085, 0.0084, 0.0083],
         [0.9745, 0.9757, 0.9750,  ..., 0.9746, 0.9749, 0.9750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6742e-03, 7.6528e-03, 7.6237e-03,  ..., 7.7515e-03,
          7.7560e-03, 7.7369e-03],
         [7.6742e-03, 7.6528e-03, 7.6237e-03,  ..., 7.7515e-03,
          7.7560e-03, 7.7369e-03],
         [7.6742e-03, 7.6528e-03, 7.6237e-03,  ..., 7.7515e-03,
          7.7560e-03, 7.7369e-03],
         [9.7698e-01, 9.7704e-01, 9.7713e-01,  ..., 9.7675e-01,
          9.7673e-01, 9.7679e-01]],
        [[7.6151e-03, 7.5894e-03, 7.3960e-03,  ..., 9.2192e-05,
          7.7410e-03, 7.7733e-03],
         [7.6151e-03, 7.5894e-03, 7.3960e-03,  ..., 9.2192e-05,
          7.7410e-03, 7.7733e-03],
         [7.6151e-03, 7.5894e-03, 7.3960e-03,  ..., 9.9972e-01,
          7.7410e-03, 7.7733e-03],
         [9.7715e-01, 9.7723e-01, 9.7781e-01,  ..., 9.2192e-05,
          9.7678e-01, 9.7668e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:19,878 [Process: 0] Synchronize training processes
2024-08-16 16:38:19,878 [Process: 0] Evaluating...
2024-08-16 16:38:19,880 [Process: 0] EPOCH 330:
2024-08-16 16:38:19,882 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0084, 0.0082,  ..., 0.0083, 0.0084, 0.0083],
         [0.0082, 0.0084, 0.0082,  ..., 0.0083, 0.0084, 0.0083],
         [0.0082, 0.0084, 0.0082,  ..., 0.0083, 0.0084, 0.0083],
         [0.9753, 0.9749, 0.9755,  ..., 0.9751, 0.9749, 0.9751]],
        [[0.0080, 0.0083, 0.0082,  ..., 0.0082, 0.0081, 0.0084],
         [0.0080, 0.0083, 0.0082,  ..., 0.0082, 0.0081, 0.0084],
         [0.0080, 0.0083, 0.0082,  ..., 0.0082, 0.0081, 0.0084],
         [0.9759, 0.9750, 0.9755,  ..., 0.9753, 0.9758, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5115e-03, 7.5634e-03, 7.3190e-03,  ..., 7.5203e-03,
          7.5075e-03, 7.4831e-03],
         [7.5115e-03, 7.5634e-03, 7.3190e-03,  ..., 7.5203e-03,
          7.5075e-03, 7.4831e-03],
         [7.5115e-03, 7.5634e-03, 7.3190e-03,  ..., 7.5203e-03,
          7.5075e-03, 7.4831e-03],
         [9.7747e-01, 9.7731e-01, 9.7804e-01,  ..., 9.7744e-01,
          9.7748e-01, 9.7755e-01]],
        [[7.4088e-03, 7.3084e-03, 7.5602e-03,  ..., 1.3277e-04,
          7.6007e-03, 7.5966e-03],
         [7.4088e-03, 7.3084e-03, 7.5602e-03,  ..., 1.3277e-04,
          7.6007e-03, 7.5966e-03],
         [7.4088e-03, 7.3084e-03, 7.5602e-03,  ..., 9.9960e-01,
          7.6007e-03, 7.5966e-03],
         [9.7777e-01, 9.7807e-01, 9.7732e-01,  ..., 1.3277e-04,
          9.7720e-01, 9.7721e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:21,961 [Process: 0] Synchronize training processes
2024-08-16 16:38:21,961 [Process: 0] Evaluating...
2024-08-16 16:38:21,963 [Process: 0] EPOCH 331:
2024-08-16 16:38:21,965 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0081, 0.0080,  ..., 0.0083, 0.0084, 0.0078],
         [0.0084, 0.0081, 0.0080,  ..., 0.0083, 0.0084, 0.0078],
         [0.0084, 0.0081, 0.0080,  ..., 0.0083, 0.0084, 0.0078],
         [0.9747, 0.9758, 0.9760,  ..., 0.9751, 0.9747, 0.9766]],
        [[0.0082, 0.0079, 0.0082,  ..., 0.0081, 0.0082, 0.0083],
         [0.0082, 0.0079, 0.0082,  ..., 0.0081, 0.0082, 0.0083],
         [0.0082, 0.0079, 0.0082,  ..., 0.0081, 0.0082, 0.0083],
         [0.9755, 0.9762, 0.9754,  ..., 0.9758, 0.9755, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2927e-03, 7.5807e-03, 7.5422e-03,  ..., 7.7161e-03,
          7.6504e-03, 7.5756e-03],
         [7.2927e-03, 7.5807e-03, 7.5422e-03,  ..., 7.7161e-03,
          7.6504e-03, 7.5756e-03],
         [7.2927e-03, 7.5807e-03, 7.5422e-03,  ..., 7.7161e-03,
          7.6504e-03, 7.5756e-03],
         [9.7812e-01, 9.7726e-01, 9.7737e-01,  ..., 9.7685e-01,
          9.7705e-01, 9.7727e-01]],
        [[7.5923e-03, 7.4246e-03, 7.6218e-03,  ..., 2.0410e-05,
          7.6114e-03, 7.5538e-03],
         [7.5923e-03, 7.4246e-03, 7.6218e-03,  ..., 2.0410e-05,
          7.6114e-03, 7.5538e-03],
         [7.5923e-03, 7.4246e-03, 7.6218e-03,  ..., 9.9994e-01,
          7.6114e-03, 7.5538e-03],
         [9.7722e-01, 9.7773e-01, 9.7713e-01,  ..., 2.0410e-05,
          9.7717e-01, 9.7734e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:24,046 [Process: 0] Synchronize training processes
2024-08-16 16:38:24,046 [Process: 0] Evaluating...
2024-08-16 16:38:24,054 [Process: 0] EPOCH 332:
2024-08-16 16:38:24,056 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0083, 0.0080,  ..., 0.0082, 0.0082, 0.0080],
         [0.0082, 0.0083, 0.0080,  ..., 0.0082, 0.0082, 0.0080],
         [0.0082, 0.0083, 0.0080,  ..., 0.0082, 0.0082, 0.0080],
         [0.9753, 0.9751, 0.9759,  ..., 0.9755, 0.9753, 0.9760]],
        [[0.0083, 0.0078, 0.0080,  ..., 0.0081, 0.0082, 0.0080],
         [0.0083, 0.0078, 0.0080,  ..., 0.0081, 0.0082, 0.0080],
         [0.0083, 0.0078, 0.0080,  ..., 0.0081, 0.0082, 0.0080],
         [0.9752, 0.9767, 0.9760,  ..., 0.9756, 0.9754, 0.9759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4745e-03, 7.5252e-03, 7.6009e-03,  ..., 7.5841e-03,
          7.6347e-03, 7.5795e-03],
         [7.4745e-03, 7.5252e-03, 7.6009e-03,  ..., 7.5841e-03,
          7.6347e-03, 7.5795e-03],
         [7.4745e-03, 7.5252e-03, 7.6009e-03,  ..., 7.5841e-03,
          7.6347e-03, 7.5795e-03],
         [9.7758e-01, 9.7742e-01, 9.7720e-01,  ..., 9.7725e-01,
          9.7710e-01, 9.7726e-01]],
        [[7.3781e-03, 7.5136e-03, 7.3960e-03,  ..., 6.9591e-06,
          7.6863e-03, 7.4725e-03],
         [7.3781e-03, 7.5136e-03, 7.3960e-03,  ..., 6.9591e-06,
          7.6863e-03, 7.4725e-03],
         [7.3781e-03, 7.5136e-03, 7.3960e-03,  ..., 9.9998e-01,
          7.6863e-03, 7.4725e-03],
         [9.7787e-01, 9.7746e-01, 9.7781e-01,  ..., 6.9591e-06,
2024-08-16 16:38:26,156 [Process: 0] Synchronize training processes
2024-08-16 16:38:26,156 [Process: 0] Evaluating...
2024-08-16 16:38:26,158 [Process: 0] EPOCH 333:
2024-08-16 16:38:26,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0080, 0.0080,  ..., 0.0081, 0.0083, 0.0080],
         [0.0080, 0.0080, 0.0080,  ..., 0.0081, 0.0083, 0.0080],
         [0.0080, 0.0080, 0.0080,  ..., 0.0081, 0.0083, 0.0080],
         [0.9759, 0.9760, 0.9759,  ..., 0.9757, 0.9750, 0.9761]],
        [[0.0081, 0.0080, 0.0079,  ..., 0.0082, 0.0082, 0.0083],
         [0.0081, 0.0080, 0.0079,  ..., 0.0082, 0.0082, 0.0083],
         [0.0081, 0.0080, 0.0079,  ..., 0.0082, 0.0082, 0.0083],
         [0.9756, 0.9760, 0.9764,  ..., 0.9755, 0.9754, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:28,234 [Process: 0] Synchronize training processes
2024-08-16 16:38:28,235 [Process: 0] Evaluating...
2024-08-16 16:38:28,236 [Process: 0] EPOCH 334:
2024-08-16 16:38:28,238 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3563e-03, 7.6782e-03, 7.3518e-03,  ..., 7.4249e-03,
          7.4158e-03, 7.4711e-03],
         [7.3563e-03, 7.6782e-03, 7.3518e-03,  ..., 7.4249e-03,
          7.4158e-03, 7.4711e-03],
         [7.3563e-03, 7.6782e-03, 7.3518e-03,  ..., 7.4249e-03,
          7.4158e-03, 7.4711e-03],
         [9.7793e-01, 9.7697e-01, 9.7794e-01,  ..., 9.7773e-01,
          9.7775e-01, 9.7759e-01]],
        [[7.2682e-03, 7.4796e-03, 7.3664e-03,  ..., 7.5658e-06,
          7.3303e-03, 7.5376e-03],
         [7.2682e-03, 7.4796e-03, 7.3664e-03,  ..., 7.5658e-06,
          7.3303e-03, 7.5376e-03],
         [7.2682e-03, 7.4796e-03, 7.3664e-03,  ..., 9.9998e-01,
          7.3303e-03, 7.5376e-03],
         [9.7820e-01, 9.7756e-01, 9.7790e-01,  ..., 7.5658e-06,
          9.7801e-01, 9.7739e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0080, 0.0082,  ..., 0.0079, 0.0082, 0.0078],
         [0.0082, 0.0080, 0.0082,  ..., 0.0079, 0.0082, 0.0078],
         [0.0082, 0.0080, 0.0082,  ..., 0.0079, 0.0082, 0.0078],
         [0.9754, 0.9760, 0.9755,  ..., 0.9762, 0.9754, 0.9766]],
        [[0.0079, 0.0082, 0.0081,  ..., 0.0078, 0.0083, 0.0083],
         [0.0079, 0.0082, 0.0081,  ..., 0.0078, 0.0083, 0.0083],
         [0.0079, 0.0082, 0.0081,  ..., 0.0078, 0.0083, 0.0083],
         [0.9764, 0.9754, 0.9756,  ..., 0.9765, 0.9752, 0.9752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:30,320 [Process: 0] Synchronize training processes
2024-08-16 16:38:30,320 [Process: 0] Evaluating...
2024-08-16 16:38:30,322 [Process: 0] EPOCH 335:
2024-08-16 16:38:30,324 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5430e-03, 7.3545e-03, 7.3987e-03,  ..., 7.3971e-03,
          7.5369e-03, 7.5252e-03],
         [7.5430e-03, 7.3545e-03, 7.3987e-03,  ..., 7.3971e-03,
          7.5369e-03, 7.5252e-03],
         [7.5430e-03, 7.3545e-03, 7.3987e-03,  ..., 7.3971e-03,
          7.5369e-03, 7.5252e-03],
         [9.7737e-01, 9.7794e-01, 9.7780e-01,  ..., 9.7781e-01,
          9.7739e-01, 9.7742e-01]],
        [[7.5051e-03, 7.1830e-03, 7.3678e-03,  ..., 1.8018e-04,
          7.3548e-03, 7.3397e-03],
         [7.5051e-03, 7.1830e-03, 7.3678e-03,  ..., 1.8018e-04,
          7.3548e-03, 7.3397e-03],
         [7.5051e-03, 7.1830e-03, 7.3678e-03,  ..., 9.9946e-01,
          7.3548e-03, 7.3397e-03],
         [9.7748e-01, 9.7845e-01, 9.7790e-01,  ..., 1.8018e-04,
          9.7794e-01, 9.7798e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0080, 0.0079,  ..., 0.0081, 0.0082, 0.0078],
         [0.0082, 0.0080, 0.0079,  ..., 0.0081, 0.0082, 0.0078],
         [0.0082, 0.0080, 0.0079,  ..., 0.0081, 0.0082, 0.0078],
         [0.9754, 0.9759, 0.9763,  ..., 0.9756, 0.9755, 0.9766]],
        [[0.0079, 0.0079, 0.0081,  ..., 0.0081, 0.0081, 0.0081],
         [0.0079, 0.0079, 0.0081,  ..., 0.0081, 0.0081, 0.0081],
         [0.0079, 0.0079, 0.0081,  ..., 0.0081, 0.0081, 0.0081],
         [0.9763, 0.9762, 0.9757,  ..., 0.9758, 0.9756, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:32,412 [Process: 0] Synchronize training processes
2024-08-16 16:38:32,413 [Process: 0] Evaluating...
2024-08-16 16:38:32,415 [Process: 0] EPOCH 336:
2024-08-16 16:38:32,417 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2762e-03, 7.5381e-03, 7.3411e-03,  ..., 7.5444e-03,
          7.4687e-03, 7.2967e-03],
         [7.2762e-03, 7.5381e-03, 7.3411e-03,  ..., 7.5444e-03,
          7.4687e-03, 7.2967e-03],
         [7.2762e-03, 7.5381e-03, 7.3411e-03,  ..., 7.5444e-03,
          7.4687e-03, 7.2967e-03],
         [9.7817e-01, 9.7739e-01, 9.7798e-01,  ..., 9.7737e-01,
          9.7759e-01, 9.7811e-01]],
        [[7.6000e-03, 7.3448e-03, 7.5347e-03,  ..., 7.3234e-05,
          7.5940e-03, 7.6341e-03],
         [7.6000e-03, 7.3448e-03, 7.5347e-03,  ..., 7.3234e-05,
          7.5940e-03, 7.6341e-03],
         [7.6000e-03, 7.3448e-03, 7.5347e-03,  ..., 9.9978e-01,
          7.5940e-03, 7.6341e-03],
         [9.7720e-01, 9.7797e-01, 9.7740e-01,  ..., 7.3234e-05,
          9.7722e-01, 9.7710e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0080, 0.0080,  ..., 0.0079, 0.0080, 0.0077],
         [0.0079, 0.0080, 0.0080,  ..., 0.0079, 0.0080, 0.0077],
         [0.0079, 0.0080, 0.0080,  ..., 0.0079, 0.0080, 0.0077],
         [0.9763, 0.9761, 0.9759,  ..., 0.9763, 0.9761, 0.9768]],
        [[0.0078, 0.0078, 0.0078,  ..., 0.0081, 0.0078, 0.0080],
         [0.0078, 0.0078, 0.0078,  ..., 0.0081, 0.0078, 0.0080],
         [0.0078, 0.0078, 0.0078,  ..., 0.0081, 0.0078, 0.0080],
         [0.9765, 0.9767, 0.9765,  ..., 0.9758, 0.9766, 0.9759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:34,498 [Process: 0] Synchronize training processes
2024-08-16 16:38:34,498 [Process: 0] Evaluating...
2024-08-16 16:38:34,500 [Process: 0] EPOCH 337:
2024-08-16 16:38:34,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1602e-03, 7.3108e-03, 7.4381e-03,  ..., 7.2796e-03,
          7.3929e-03, 7.4579e-03],
         [7.1602e-03, 7.3108e-03, 7.4381e-03,  ..., 7.2796e-03,
          7.3929e-03, 7.4579e-03],
         [7.1602e-03, 7.3108e-03, 7.4381e-03,  ..., 7.2796e-03,
          7.3929e-03, 7.4579e-03],
         [9.7852e-01, 9.7807e-01, 9.7769e-01,  ..., 9.7816e-01,
          9.7782e-01, 9.7763e-01]],
        [[7.3694e-03, 7.2160e-03, 7.4479e-03,  ..., 5.0489e-07,
          7.3337e-03, 7.4482e-03],
         [7.3694e-03, 7.2160e-03, 7.4479e-03,  ..., 5.0489e-07,
          7.3337e-03, 7.4482e-03],
         [7.3694e-03, 7.2160e-03, 7.4479e-03,  ..., 1.0000e+00,
          7.3337e-03, 7.4482e-03],
         [9.7789e-01, 9.7835e-01, 9.7766e-01,  ..., 5.0489e-07,
          9.7800e-01, 9.7766e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0078, 0.0080,  ..., 0.0080, 0.0080, 0.0078],
         [0.0081, 0.0078, 0.0080,  ..., 0.0080, 0.0080, 0.0078],
         [0.0081, 0.0078, 0.0080,  ..., 0.0080, 0.0080, 0.0078],
         [0.9758, 0.9765, 0.9761,  ..., 0.9760, 0.9760, 0.9766]],
        [[0.0078, 0.0079, 0.0080,  ..., 0.0083, 0.0082, 0.0079],
         [0.0078, 0.0079, 0.0080,  ..., 0.0083, 0.0082, 0.0079],
         [0.0078, 0.0079, 0.0080,  ..., 0.0083, 0.0082, 0.0079],
         [0.9765, 0.9762, 0.9759,  ..., 0.9752, 0.9755, 0.9762]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:36,581 [Process: 0] Synchronize training processes
2024-08-16 16:38:36,581 [Process: 0] Evaluating...
2024-08-16 16:38:36,583 [Process: 0] EPOCH 338:
2024-08-16 16:38:36,585 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2267e-03, 7.5332e-03, 7.5746e-03,  ..., 7.1391e-03,
          7.3719e-03, 7.4790e-03],
         [7.2267e-03, 7.5332e-03, 7.5746e-03,  ..., 7.1391e-03,
          7.3719e-03, 7.4790e-03],
         [7.2267e-03, 7.5332e-03, 7.5746e-03,  ..., 7.1391e-03,
          7.3719e-03, 7.4790e-03],
         [9.7832e-01, 9.7740e-01, 9.7728e-01,  ..., 9.7858e-01,
          9.7788e-01, 9.7756e-01]],
        [[7.4063e-03, 7.5678e-03, 7.4251e-03,  ..., 1.5122e-04,
          7.5274e-03, 7.6489e-03],
         [7.4063e-03, 7.5678e-03, 7.4251e-03,  ..., 1.5122e-04,
          7.5274e-03, 7.6489e-03],
         [7.4063e-03, 7.5678e-03, 7.4251e-03,  ..., 9.9955e-01,
          7.5274e-03, 7.6489e-03],
         [9.7778e-01, 9.7730e-01, 9.7772e-01,  ..., 1.5122e-04,
          9.7742e-01, 9.7705e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0078],
         [0.0078, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0078],
         [0.0078, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0078],
         [0.9765, 0.9759, 0.9760,  ..., 0.9760, 0.9759, 0.9766]],
        [[0.0078, 0.0078, 0.0080,  ..., 0.0079, 0.0077, 0.0080],
         [0.0078, 0.0078, 0.0080,  ..., 0.0079, 0.0077, 0.0080],
         [0.0078, 0.0078, 0.0080,  ..., 0.0079, 0.0077, 0.0080],
         [0.9767, 0.9767, 0.9761,  ..., 0.9764, 0.9768, 0.9761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:38,659 [Process: 0] Synchronize training processes
2024-08-16 16:38:38,660 [Process: 0] Evaluating...
2024-08-16 16:38:38,662 [Process: 0] EPOCH 339:
2024-08-16 16:38:38,664 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4186e-03, 7.4075e-03, 7.3238e-03,  ..., 7.4126e-03,
          7.4679e-03, 7.4329e-03],
         [7.4186e-03, 7.4075e-03, 7.3238e-03,  ..., 7.4126e-03,
          7.4679e-03, 7.4329e-03],
         [7.4186e-03, 7.4075e-03, 7.3238e-03,  ..., 7.4126e-03,
          7.4679e-03, 7.4329e-03],
         [9.7774e-01, 9.7778e-01, 9.7803e-01,  ..., 9.7776e-01,
          9.7760e-01, 9.7770e-01]],
        [[7.3328e-03, 7.4695e-03, 7.2484e-03,  ..., 1.6570e-05,
          7.4841e-03, 7.4589e-03],
         [7.3328e-03, 7.4695e-03, 7.2484e-03,  ..., 1.6570e-05,
          7.4841e-03, 7.4589e-03],
         [7.3328e-03, 7.4695e-03, 7.2484e-03,  ..., 9.9995e-01,
          7.4841e-03, 7.4589e-03],
         [9.7800e-01, 9.7759e-01, 9.7825e-01,  ..., 1.6570e-05,
          9.7755e-01, 9.7762e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0078, 0.0079,  ..., 0.0077, 0.0077, 0.0077],
         [0.0079, 0.0078, 0.0079,  ..., 0.0077, 0.0077, 0.0077],
         [0.0079, 0.0078, 0.0079,  ..., 0.0077, 0.0077, 0.0077],
         [0.9762, 0.9767, 0.9763,  ..., 0.9770, 0.9769, 0.9768]],
        [[0.0078, 0.0076, 0.0077,  ..., 0.0079, 0.0082, 0.0081],
         [0.0078, 0.0076, 0.0077,  ..., 0.0079, 0.0082, 0.0081],
         [0.0078, 0.0077, 0.0077,  ..., 0.0079, 0.0084, 0.0086],
         [0.9766, 0.9771, 0.9769,  ..., 0.9762, 0.9751, 0.9752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:40,737 [Process: 0] Synchronize training processes
2024-08-16 16:38:40,737 [Process: 0] Evaluating...
2024-08-16 16:38:40,739 [Process: 0] EPOCH 340:
2024-08-16 16:38:40,741 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2858e-03, 7.2749e-03, 7.2613e-03,  ..., 7.2926e-03,
          7.1125e-03, 7.2612e-03],
         [7.2858e-03, 7.2749e-03, 7.2613e-03,  ..., 7.2926e-03,
          7.1125e-03, 7.2612e-03],
         [7.2858e-03, 7.2749e-03, 7.2613e-03,  ..., 7.2926e-03,
          7.1125e-03, 7.2612e-03],
         [9.7814e-01, 9.7818e-01, 9.7822e-01,  ..., 9.7812e-01,
          9.7866e-01, 9.7822e-01]],
        [[7.1210e-03, 7.0347e-03, 7.1900e-03,  ..., 2.8405e-05,
          7.4649e-03, 7.4694e-03],
         [7.1210e-03, 7.0347e-03, 7.1900e-03,  ..., 2.8405e-05,
          7.4649e-03, 7.4694e-03],
         [7.1210e-03, 7.0347e-03, 7.1900e-03,  ..., 9.9991e-01,
          7.4649e-03, 7.4694e-03],
         [9.7864e-01, 9.7890e-01, 9.7843e-01,  ..., 2.8405e-05,
          9.7761e-01, 9.7759e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0079, 0.0080,  ..., 0.0079, 0.0079, 0.0077],
         [0.0078, 0.0079, 0.0080,  ..., 0.0079, 0.0079, 0.0077],
         [0.0078, 0.0079, 0.0080,  ..., 0.0079, 0.0079, 0.0077],
         [0.9765, 0.9763, 0.9760,  ..., 0.9764, 0.9764, 0.9768]],
        [[0.0077, 0.0077, 0.0078,  ..., 0.0080, 0.0078, 0.0081],
         [0.0077, 0.0077, 0.0078,  ..., 0.0080, 0.0078, 0.0081],
         [0.0077, 0.0077, 0.0078,  ..., 0.0082, 0.0078, 0.0081],
         [0.9770, 0.9768, 0.9765,  ..., 0.9758, 0.9766, 0.9758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:42,836 [Process: 0] Synchronize training processes
2024-08-16 16:38:42,837 [Process: 0] Evaluating...
2024-08-16 16:38:42,839 [Process: 0] EPOCH 341:
2024-08-16 16:38:42,840 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2288e-03, 7.2308e-03, 7.3445e-03,  ..., 7.1008e-03,
          7.1523e-03, 7.2606e-03],
         [7.2288e-03, 7.2308e-03, 7.3445e-03,  ..., 7.1008e-03,
          7.1523e-03, 7.2606e-03],
         [7.2288e-03, 7.2308e-03, 7.3445e-03,  ..., 7.1008e-03,
          7.1523e-03, 7.2606e-03],
         [9.7831e-01, 9.7831e-01, 9.7797e-01,  ..., 9.7870e-01,
          9.7854e-01, 9.7822e-01]],
        [[7.0875e-03, 7.3114e-03, 7.2606e-03,  ..., 9.9371e-05,
          7.3686e-03, 7.3955e-03],
         [7.0875e-03, 7.3114e-03, 7.2606e-03,  ..., 9.9371e-05,
          7.3686e-03, 7.3955e-03],
         [7.0875e-03, 7.3114e-03, 7.2606e-03,  ..., 9.9970e-01,
          7.3686e-03, 7.3955e-03],
         [9.7874e-01, 9.7807e-01, 9.7822e-01,  ..., 9.9371e-05,
          9.7789e-01, 9.7781e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0079, 0.0079,  ..., 0.0078, 0.0078, 0.0079],
         [0.0079, 0.0079, 0.0079,  ..., 0.0078, 0.0078, 0.0079],
         [0.0079, 0.0079, 0.0079,  ..., 0.0078, 0.0078, 0.0079],
         [0.9763, 0.9763, 0.9764,  ..., 0.9765, 0.9767, 0.9764]],
        [[0.0078, 0.0079, 0.0081,  ..., 0.0079, 0.0079, 0.0079],
         [0.0078, 0.0079, 0.0081,  ..., 0.0079, 0.0079, 0.0079],
         [0.0078, 0.0079, 0.0081,  ..., 0.0079, 0.0079, 0.0079],
         [0.9765, 0.9763, 0.9758,  ..., 0.9764, 0.9763, 0.9764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:44,910 [Process: 0] Synchronize training processes
2024-08-16 16:38:44,911 [Process: 0] Evaluating...
2024-08-16 16:38:44,919 [Process: 0] EPOCH 342:
2024-08-16 16:38:44,921 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3090e-03, 7.1881e-03, 7.0412e-03,  ..., 7.2061e-03,
          7.0793e-03, 7.3163e-03],
         [7.3090e-03, 7.1881e-03, 7.0412e-03,  ..., 7.2061e-03,
          7.0793e-03, 7.3163e-03],
         [7.3090e-03, 7.1881e-03, 7.0412e-03,  ..., 7.2061e-03,
          7.0793e-03, 7.3163e-03],
         [9.7807e-01, 9.7844e-01, 9.7888e-01,  ..., 9.7838e-01,
          9.7876e-01, 9.7805e-01]],
        [[7.0426e-03, 7.0679e-03, 7.0379e-03,  ..., 9.2822e-05,
          7.3195e-03, 7.2958e-03],
         [7.0426e-03, 7.0679e-03, 7.0379e-03,  ..., 9.2822e-05,
          7.3195e-03, 7.2958e-03],
         [7.0426e-03, 7.0679e-03, 7.0379e-03,  ..., 9.9972e-01,
          7.3195e-03, 7.2958e-03],
         [9.7887e-01, 9.7880e-01, 9.7889e-01,  ..., 9.2822e-05,
          9.7804e-01, 9.7811e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0078, 0.0078,  ..., 0.0077, 0.0077, 0.0076],
         [0.0076, 0.0078, 0.0078,  ..., 0.0077, 0.0077, 0.0076],
         [0.0076, 0.0078, 0.0078,  ..., 0.0077, 0.0077, 0.0076],
         [0.9772, 0.9766, 0.9766,  ..., 0.9768, 0.9768, 0.9772]],
        [[0.0079, 0.0076, 0.0081,  ..., 0.0076, 0.0079, 0.0080],
         [0.0079, 0.0076, 0.0081,  ..., 0.0076, 0.0079, 0.0080],
         [0.0079, 0.0076, 0.0081,  ..., 0.0076, 0.0079, 0.0080],
         [0.9764, 0.9771, 0.9758,  ..., 0.9771, 0.9763, 0.9761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:47,013 [Process: 0] Synchronize training processes
2024-08-16 16:38:47,013 [Process: 0] Evaluating...
2024-08-16 16:38:47,015 [Process: 0] EPOCH 343:
2024-08-16 16:38:47,017 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2376e-03, 7.0599e-03, 7.0200e-03,  ..., 7.1090e-03,
          7.3048e-03, 7.2014e-03],
         [7.2376e-03, 7.0599e-03, 7.0200e-03,  ..., 7.1090e-03,
          7.3048e-03, 7.2014e-03],
         [7.2376e-03, 7.0599e-03, 7.0200e-03,  ..., 7.1090e-03,
          7.3048e-03, 7.2014e-03],
         [9.7829e-01, 9.7882e-01, 9.7894e-01,  ..., 9.7867e-01,
          9.7809e-01, 9.7840e-01]],
        [[7.1549e-03, 7.1073e-03, 7.1638e-03,  ..., 1.2793e-05,
          7.1968e-03, 7.0696e-03],
         [7.1549e-03, 7.1073e-03, 7.1638e-03,  ..., 1.2793e-05,
          7.1968e-03, 7.0696e-03],
         [7.1549e-03, 7.1073e-03, 7.1638e-03,  ..., 9.9996e-01,
          7.1968e-03, 7.0696e-03],
         [9.7854e-01, 9.7868e-01, 9.7851e-01,  ..., 1.2793e-05,
          9.7841e-01, 9.7879e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0077, 0.0077,  ..., 0.0077, 0.0076, 0.0076],
         [0.0078, 0.0077, 0.0077,  ..., 0.0077, 0.0076, 0.0076],
         [0.0078, 0.0077, 0.0077,  ..., 0.0077, 0.0076, 0.0076],
         [0.9767, 0.9769, 0.9768,  ..., 0.9770, 0.9772, 0.9773]],
        [[0.0078, 0.0078, 0.0086,  ..., 0.0077, 0.0077, 0.0082],
         [0.0078, 0.0078, 0.0086,  ..., 0.0077, 0.0077, 0.0082],
         [0.0078, 0.0078, 0.0086,  ..., 0.0077, 0.0077, 0.0082],
         [0.9766, 0.9765, 0.9741,  ..., 0.9770, 0.9770, 0.9755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:38:49,098 [Process: 0] Synchronize training processes
2024-08-16 16:38:49,098 [Process: 0] Evaluating...
2024-08-16 16:38:49,100 [Process: 0] EPOCH 344:
2024-08-16 16:38:49,102 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2925e-03, 7.3626e-03, 7.2062e-03,  ..., 7.1453e-03,
          7.2088e-03, 7.2582e-03],
         [7.2925e-03, 7.3626e-03, 7.2062e-03,  ..., 7.1453e-03,
          7.2088e-03, 7.2582e-03],
         [7.2925e-03, 7.3626e-03, 7.2062e-03,  ..., 7.1453e-03,
          7.2088e-03, 7.2582e-03],
         [9.7812e-01, 9.7791e-01, 9.7838e-01,  ..., 9.7856e-01,
          9.7837e-01, 9.7823e-01]],
        [[6.9928e-03, 7.2468e-03, 7.2002e-03,  ..., 8.3489e-06,
          7.2870e-03, 7.1535e-03],
         [6.9928e-03, 7.2468e-03, 7.2002e-03,  ..., 8.3489e-06,
          7.2870e-03, 7.1535e-03],
         [6.9928e-03, 7.2468e-03, 7.2002e-03,  ..., 9.9997e-01,
          7.2870e-03, 7.1535e-03],
         [9.7902e-01, 9.7826e-01, 9.7840e-01,  ..., 8.3489e-06,
          9.7814e-01, 9.7854e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:38:51,198 [Process: 0] Synchronize training processes
2024-08-16 16:38:51,199 [Process: 0] Evaluating...
2024-08-16 16:38:51,201 [Process: 0] EPOCH 345:
2024-08-16 16:38:51,203 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0075, 0.0076,  ..., 0.0076, 0.0078, 0.0077],
         [0.0076, 0.0075, 0.0076,  ..., 0.0076, 0.0078, 0.0077],
         [0.0076, 0.0075, 0.0076,  ..., 0.0076, 0.0078, 0.0077],
         [0.9773, 0.9775, 0.9773,  ..., 0.9772, 0.9766, 0.9769]],
        [[0.0075, 0.0078, 0.0086,  ..., 0.0081, 0.0080, 0.0077],
         [0.0075, 0.0078, 0.0086,  ..., 0.0081, 0.0080, 0.0077],
         [0.0075, 0.0078, 0.0086,  ..., 0.0081, 0.0080, 0.0077],
         [0.9775, 0.9766, 0.9741,  ..., 0.9758, 0.9761, 0.9769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1986e-03, 7.1600e-03, 7.1370e-03,  ..., 7.2989e-03,
          7.2614e-03, 7.1325e-03],
         [7.1986e-03, 7.1600e-03, 7.1370e-03,  ..., 7.2989e-03,
          7.2614e-03, 7.1325e-03],
         [7.1986e-03, 7.1600e-03, 7.1370e-03,  ..., 7.2989e-03,
          7.2614e-03, 7.1325e-03],
         [9.7840e-01, 9.7852e-01, 9.7859e-01,  ..., 9.7810e-01,
          9.7822e-01, 9.7860e-01]],
        [[7.1178e-03, 7.1906e-03, 7.0098e-03,  ..., 3.1819e-05,
          7.1725e-03, 7.1851e-03],
         [7.1178e-03, 7.1906e-03, 7.0098e-03,  ..., 3.1819e-05,
          7.1725e-03, 7.1851e-03],
         [7.1178e-03, 7.1906e-03, 7.0098e-03,  ..., 9.9990e-01,
          7.1725e-03, 7.1851e-03],
         [9.7865e-01, 9.7843e-01, 9.7897e-01,  ..., 3.1819e-05,
          9.7848e-01, 9.7844e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0074, 0.0075,  ..., 0.0077, 0.0073, 0.0075],
         [0.0075, 0.0074, 0.0075,  ..., 0.0077, 0.0073, 0.0075],
         [0.0075, 0.0074, 0.0075,  ..., 0.0077, 0.0073, 0.0075],
         [0.9776, 0.9778, 0.9775,  ..., 0.9769, 0.9781, 0.9774]],
        [[0.0076, 0.0077, 0.0086,  ..., 0.0080, 0.0075, 0.0080],
         [0.0076, 0.0077, 0.0086,  ..., 0.0080, 0.0075, 0.0080],
         [0.0076, 0.0077, 0.0086,  ..., 0.0083, 0.0075, 0.0080],
         [0.9772, 0.9770, 0.9743,  ..., 0.9756, 0.9775, 0.9761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1154e-03, 7.1880e-03, 7.1856e-03,  ..., 7.0660e-03,
          7.0847e-03, 7.0572e-03],
         [7.1154e-03, 7.1880e-03, 7.1856e-03,  ..., 7.0660e-03,
          7.0847e-03, 7.0572e-03],
         [7.1154e-03, 7.1880e-03, 7.1856e-03,  ..., 7.0660e-03,
          7.0847e-03, 7.0572e-03],
         [9.7865e-01, 9.7844e-01, 9.7844e-01,  ..., 9.7880e-01,
          9.7875e-01, 9.7883e-01]],
        [[7.0189e-03, 6.8950e-03, 7.0210e-03,  ..., 1.5356e-04,
          7.3478e-03, 7.0657e-03],
         [7.0189e-03, 6.8950e-03, 7.0210e-03,  ..., 1.5356e-04,
          7.3478e-03, 7.0657e-03],
         [7.0189e-03, 6.8950e-03, 7.0210e-03,  ..., 9.9954e-01,
          7.3478e-03, 7.0657e-03],
         [9.7894e-01, 9.7931e-01, 9.7894e-01,  ..., 1.5356e-04,
          9.7796e-01, 9.7880e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:53,288 [Process: 0] Synchronize training processes
2024-08-16 16:38:53,289 [Process: 0] Evaluating...
2024-08-16 16:38:53,291 [Process: 0] EPOCH 346:
2024-08-16 16:38:53,293 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0074, 0.0076,  ..., 0.0076, 0.0075, 0.0074],
         [0.0075, 0.0074, 0.0076,  ..., 0.0076, 0.0075, 0.0074],
         [0.0075, 0.0074, 0.0076,  ..., 0.0076, 0.0075, 0.0074],
         [0.9775, 0.9778, 0.9772,  ..., 0.9773, 0.9774, 0.9777]],
        [[0.0075, 0.0074, 0.0119,  ..., 0.0077, 0.0079, 0.0081],
         [0.0075, 0.0074, 0.0119,  ..., 0.0077, 0.0079, 0.0081],
         [0.0075, 0.0074, 0.0123,  ..., 0.0077, 0.0079, 0.0085],
         [0.9774, 0.9777, 0.9638,  ..., 0.9768, 0.9764, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9136e-03, 7.1907e-03, 6.9992e-03,  ..., 7.0824e-03,
          7.0593e-03, 6.9568e-03],
         [6.9136e-03, 7.1907e-03, 6.9992e-03,  ..., 7.0824e-03,
          7.0593e-03, 6.9568e-03],
         [6.9136e-03, 7.1907e-03, 6.9992e-03,  ..., 7.0824e-03,
          7.0593e-03, 6.9568e-03],
         [9.7926e-01, 9.7843e-01, 9.7900e-01,  ..., 9.7875e-01,
          9.7882e-01, 9.7913e-01]],
        [[6.9432e-03, 6.7522e-03, 7.1891e-03,  ..., 2.5372e-06,
          7.0571e-03, 7.0864e-03],
         [6.9432e-03, 6.7522e-03, 7.1891e-03,  ..., 2.5372e-06,
          7.0571e-03, 7.0864e-03],
         [6.9432e-03, 6.7522e-03, 7.1891e-03,  ..., 9.9999e-01,
          7.0571e-03, 7.0864e-03],
         [9.7917e-01, 9.7974e-01, 9.7843e-01,  ..., 2.5372e-06,
          9.7883e-01, 9.7874e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:55,385 [Process: 0] Synchronize training processes
2024-08-16 16:38:55,385 [Process: 0] Evaluating...
2024-08-16 16:38:55,388 [Process: 0] EPOCH 347:
2024-08-16 16:38:55,390 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0076, 0.0075,  ..., 0.0077, 0.0077, 0.0076],
         [0.0078, 0.0076, 0.0075,  ..., 0.0077, 0.0077, 0.0076],
         [0.0078, 0.0076, 0.0075,  ..., 0.0077, 0.0077, 0.0076],
         [0.9767, 0.9773, 0.9774,  ..., 0.9770, 0.9768, 0.9772]],
        [[0.0077, 0.0077, 0.0104,  ..., 0.0079, 0.0076, 0.0080],
         [0.0077, 0.0077, 0.0104,  ..., 0.0079, 0.0076, 0.0080],
         [0.0077, 0.0077, 0.0104,  ..., 0.0079, 0.0076, 0.0080],
         [0.9770, 0.9769, 0.9689,  ..., 0.9764, 0.9773, 0.9761]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0071, 0.0070,  ..., 0.0070, 0.0071, 0.0071],
         [0.0069, 0.0071, 0.0070,  ..., 0.0070, 0.0071, 0.0071],
         [0.0069, 0.0071, 0.0070,  ..., 0.0070, 0.0071, 0.0071],
         [0.9793, 0.9788, 0.9791,  ..., 0.9789, 0.9786, 0.9788]],
        [[0.0071, 0.0069, 0.0071,  ..., 0.0017, 0.0071, 0.0072],
         [0.0071, 0.0069, 0.0071,  ..., 0.0017, 0.0071, 0.0072],
         [0.0071, 0.0069, 0.0071,  ..., 0.9948, 0.0071, 0.0072],
         [0.9787, 0.9794, 0.9786,  ..., 0.0017, 0.9787, 0.9783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:57,431 [Process: 0] Synchronize training processes
2024-08-16 16:38:57,432 [Process: 0] Evaluating...
2024-08-16 16:38:57,434 [Process: 0] EPOCH 348:
2024-08-16 16:38:57,436 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0076, 0.0077,  ..., 0.0075, 0.0074, 0.0075],
         [0.0076, 0.0076, 0.0077,  ..., 0.0075, 0.0074, 0.0075],
         [0.0076, 0.0076, 0.0077,  ..., 0.0075, 0.0074, 0.0075],
         [0.9773, 0.9772, 0.9769,  ..., 0.9776, 0.9778, 0.9774]],
        [[0.0074, 0.0076, 0.0094,  ..., 0.0076, 0.0080, 0.0077],
         [0.0074, 0.0076, 0.0094,  ..., 0.0076, 0.0080, 0.0077],
         [0.0074, 0.0076, 0.0094,  ..., 0.0076, 0.0080, 0.0077],
         [0.9779, 0.9772, 0.9717,  ..., 0.9771, 0.9760, 0.9770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1307e-03, 6.9869e-03, 6.8859e-03,  ..., 6.8972e-03,
          7.0862e-03, 6.9416e-03],
         [7.1307e-03, 6.9869e-03, 6.8859e-03,  ..., 6.8972e-03,
          7.0862e-03, 6.9416e-03],
         [7.1307e-03, 6.9869e-03, 6.8859e-03,  ..., 6.8972e-03,
          7.0862e-03, 6.9416e-03],
         [9.7861e-01, 9.7904e-01, 9.7934e-01,  ..., 9.7931e-01,
          9.7874e-01, 9.7918e-01]],
        [[7.0647e-03, 6.9356e-03, 6.9425e-03,  ..., 4.0901e-07,
          7.0886e-03, 7.0142e-03],
         [7.0647e-03, 6.9356e-03, 6.9425e-03,  ..., 4.0901e-07,
          7.0886e-03, 7.0142e-03],
         [7.0647e-03, 6.9356e-03, 6.9425e-03,  ..., 1.0000e+00,
          7.0886e-03, 7.0142e-03],
         [9.7881e-01, 9.7919e-01, 9.7917e-01,  ..., 4.0901e-07,
          9.7873e-01, 9.7896e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:38:59,493 [Process: 0] Synchronize training processes
2024-08-16 16:38:59,494 [Process: 0] Evaluating...
2024-08-16 16:38:59,495 [Process: 0] EPOCH 349:
2024-08-16 16:38:59,497 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0073, 0.0075,  ..., 0.0075, 0.0074, 0.0072],
         [0.0075, 0.0073, 0.0075,  ..., 0.0075, 0.0074, 0.0072],
         [0.0075, 0.0073, 0.0075,  ..., 0.0075, 0.0074, 0.0072],
         [0.9776, 0.9781, 0.9774,  ..., 0.9775, 0.9777, 0.9784]],
        [[0.0076, 0.0074, 0.0195,  ..., 0.0079, 0.0077, 0.0077],
         [0.0076, 0.0074, 0.0195,  ..., 0.0079, 0.0077, 0.0077],
         [0.0076, 0.0074, 0.0251,  ..., 0.0079, 0.0077, 0.0077],
         [0.9772, 0.9779, 0.9360,  ..., 0.9763, 0.9770, 0.9770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9477e-03, 6.8769e-03, 7.0321e-03,  ..., 7.0911e-03,
          7.0328e-03, 7.0143e-03],
         [6.9477e-03, 6.8769e-03, 7.0321e-03,  ..., 7.0911e-03,
          7.0328e-03, 7.0143e-03],
         [6.9477e-03, 6.8769e-03, 7.0321e-03,  ..., 7.0911e-03,
          7.0328e-03, 7.0143e-03],
         [9.7916e-01, 9.7937e-01, 9.7890e-01,  ..., 9.7873e-01,
          9.7890e-01, 9.7896e-01]],
        [[6.9046e-03, 6.9579e-03, 6.9815e-03,  ..., 9.1228e-05,
          7.0564e-03, 6.9863e-03],
         [6.9046e-03, 6.9579e-03, 6.9815e-03,  ..., 9.1228e-05,
          7.0564e-03, 6.9863e-03],
         [6.9046e-03, 6.9579e-03, 6.9815e-03,  ..., 9.9973e-01,
          7.0564e-03, 6.9863e-03],
         [9.7929e-01, 9.7913e-01, 9.7906e-01,  ..., 9.1228e-05,
          9.7883e-01, 9.7904e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:01,589 [Process: 0] Synchronize training processes
2024-08-16 16:39:01,590 [Process: 0] Evaluating...
2024-08-16 16:39:01,592 [Process: 0] EPOCH 350:
2024-08-16 16:39:01,593 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0074, 0.0075,  ..., 0.0075, 0.0073, 0.0072],
         [0.0075, 0.0074, 0.0075,  ..., 0.0075, 0.0073, 0.0072],
         [0.0075, 0.0074, 0.0075,  ..., 0.0075, 0.0073, 0.0072],
         [0.9775, 0.9777, 0.9776,  ..., 0.9775, 0.9781, 0.9783]],
        [[0.0074, 0.0076, 0.0236,  ..., 0.0077, 0.0076, 0.0080],
         [0.0074, 0.0076, 0.0236,  ..., 0.0077, 0.0076, 0.0080],
         [0.0074, 0.0076, 0.0250,  ..., 0.0077, 0.0076, 0.0080],
         [0.9777, 0.9773, 0.9278,  ..., 0.9769, 0.9772, 0.9759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8872e-03, 6.9922e-03, 6.9604e-03,  ..., 6.9976e-03,
          7.0457e-03, 7.1065e-03],
         [6.8872e-03, 6.9922e-03, 6.9604e-03,  ..., 6.9976e-03,
          7.0457e-03, 7.1065e-03],
         [6.8872e-03, 6.9922e-03, 6.9604e-03,  ..., 6.9976e-03,
          7.0457e-03, 7.1065e-03],
         [9.7934e-01, 9.7902e-01, 9.7912e-01,  ..., 9.7901e-01,
          9.7886e-01, 9.7868e-01]],
        [[6.8989e-03, 6.9982e-03, 6.9164e-03,  ..., 3.8723e-05,
          6.9623e-03, 7.1097e-03],
         [6.8989e-03, 6.9982e-03, 6.9164e-03,  ..., 3.8723e-05,
          6.9623e-03, 7.1097e-03],
         [6.8989e-03, 6.9982e-03, 6.9164e-03,  ..., 9.9988e-01,
          6.9623e-03, 7.1097e-03],
         [9.7930e-01, 9.7901e-01, 9.7925e-01,  ..., 3.8723e-05,
          9.7911e-01, 9.7867e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:03,680 [Process: 0] Synchronize training processes
2024-08-16 16:39:03,680 [Process: 0] Evaluating...
2024-08-16 16:39:03,682 [Process: 0] EPOCH 351:
2024-08-16 16:39:03,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0074, 0.0074,  ..., 0.0075, 0.0073, 0.0076],
         [0.0075, 0.0074, 0.0074,  ..., 0.0075, 0.0073, 0.0076],
         [0.0075, 0.0074, 0.0074,  ..., 0.0075, 0.0073, 0.0076],
         [0.9774, 0.9777, 0.9779,  ..., 0.9776, 0.9782, 0.9773]],
        [[0.0074, 0.0076, 0.0176,  ..., 0.0076, 0.0078, 0.0076],
         [0.0074, 0.0076, 0.0176,  ..., 0.0076, 0.0078, 0.0076],
         [0.0074, 0.0076, 0.0176,  ..., 0.0076, 0.0078, 0.0076],
         [0.9779, 0.9772, 0.9472,  ..., 0.9771, 0.9767, 0.9772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8788e-03, 6.7783e-03, 6.9384e-03,  ..., 6.8977e-03,
          7.0651e-03, 6.8494e-03],
         [6.8788e-03, 6.7783e-03, 6.9384e-03,  ..., 6.8977e-03,
          7.0651e-03, 6.8494e-03],
         [6.8788e-03, 6.7783e-03, 6.9384e-03,  ..., 6.8977e-03,
          7.0651e-03, 6.8494e-03],
         [9.7936e-01, 9.7967e-01, 9.7918e-01,  ..., 9.7931e-01,
          9.7880e-01, 9.7945e-01]],
        [[6.9511e-03, 6.9696e-03, 7.0221e-03,  ..., 5.9344e-04,
          6.7667e-03, 6.9428e-03],
         [6.9511e-03, 6.9696e-03, 7.0221e-03,  ..., 5.9344e-04,
          6.7667e-03, 6.9428e-03],
         [6.9511e-03, 6.9696e-03, 7.0221e-03,  ..., 9.9822e-01,
          6.7667e-03, 6.9428e-03],
         [9.7915e-01, 9.7909e-01, 9.7893e-01,  ..., 5.9344e-04,
          9.7970e-01, 9.7917e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:05,765 [Process: 0] Synchronize training processes
2024-08-16 16:39:05,765 [Process: 0] Evaluating...
2024-08-16 16:39:05,773 [Process: 0] EPOCH 352:
2024-08-16 16:39:05,775 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0073, 0.0073,  ..., 0.0074, 0.0072, 0.0072],
         [0.0073, 0.0073, 0.0073,  ..., 0.0074, 0.0072, 0.0072],
         [0.0073, 0.0073, 0.0073,  ..., 0.0074, 0.0072, 0.0072],
         [0.9780, 0.9780, 0.9780,  ..., 0.9777, 0.9783, 0.9784]],
        [[0.0074, 0.0076, 0.0369,  ..., 0.0075, 0.0079, 0.0077],
         [0.0074, 0.0076, 0.0369,  ..., 0.0075, 0.0079, 0.0077],
         [0.0074, 0.0076, 0.0477,  ..., 0.0075, 0.0079, 0.0077],
         [0.9779, 0.9773, 0.8785,  ..., 0.9774, 0.9763, 0.9768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9053e-03, 6.8470e-03, 6.7840e-03,  ..., 6.9209e-03,
          6.7973e-03, 7.0710e-03],
         [6.9053e-03, 6.8470e-03, 6.7840e-03,  ..., 6.9209e-03,
          6.7973e-03, 7.0710e-03],
         [6.9053e-03, 6.8470e-03, 6.7840e-03,  ..., 6.9209e-03,
          6.7973e-03, 7.0710e-03],
         [9.7928e-01, 9.7946e-01, 9.7965e-01,  ..., 9.7924e-01,
          9.7961e-01, 9.7879e-01]],
        [[6.8804e-03, 6.7682e-03, 6.7697e-03,  ..., 6.1122e-06,
          6.8522e-03, 6.8519e-03],
         [6.8804e-03, 6.7682e-03, 6.7697e-03,  ..., 6.1122e-06,
          6.8522e-03, 6.8519e-03],
         [6.8804e-03, 6.7682e-03, 6.7697e-03,  ..., 9.9998e-01,
          6.8522e-03, 6.8519e-03],
         [9.7936e-01, 9.7970e-01, 9.7969e-01,  ..., 6.1122e-06,
          9.7944e-01, 9.7944e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:07,887 [Process: 0] Synchronize training processes
2024-08-16 16:39:07,887 [Process: 0] Evaluating...
2024-08-16 16:39:07,889 [Process: 0] EPOCH 353:
2024-08-16 16:39:07,891 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0071, 0.0072,  ..., 0.0072, 0.0071, 0.0072],
         [0.0072, 0.0071, 0.0072,  ..., 0.0072, 0.0071, 0.0072],
         [0.0072, 0.0071, 0.0072,  ..., 0.0072, 0.0071, 0.0072],
         [0.9785, 0.9786, 0.9784,  ..., 0.9783, 0.9786, 0.9783]],
        [[0.0072, 0.0075, 0.0098,  ..., 0.0075, 0.0076, 0.0073],
         [0.0072, 0.0075, 0.0098,  ..., 0.0075, 0.0076, 0.0073],
         [0.0072, 0.0075, 0.0119,  ..., 0.0075, 0.0076, 0.0073],
         [0.9784, 0.9776, 0.9686,  ..., 0.9775, 0.9772, 0.9782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8074e-03, 6.7942e-03, 6.8819e-03,  ..., 6.9224e-03,
          6.9932e-03, 6.8462e-03],
         [6.8074e-03, 6.7942e-03, 6.8819e-03,  ..., 6.9224e-03,
          6.9932e-03, 6.8462e-03],
         [6.8074e-03, 6.7942e-03, 6.8819e-03,  ..., 6.9224e-03,
          6.9932e-03, 6.8462e-03],
         [9.7958e-01, 9.7962e-01, 9.7935e-01,  ..., 9.7923e-01,
          9.7902e-01, 9.7946e-01]],
        [[6.8071e-03, 6.8138e-03, 6.8030e-03,  ..., 5.3859e-04,
          6.9384e-03, 6.9048e-03],
         [6.8071e-03, 6.8138e-03, 6.8030e-03,  ..., 3.6643e-04,
          6.9384e-03, 6.9048e-03],
         [6.8071e-03, 6.8138e-03, 6.8030e-03,  ..., 9.9873e-01,
          6.9384e-03, 6.9048e-03],
         [9.7958e-01, 9.7956e-01, 9.7959e-01,  ..., 3.6643e-04,
          9.7918e-01, 9.7929e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 16:39:09,984 [Process: 0] Synchronize training processes
2024-08-16 16:39:09,984 [Process: 0] Evaluating...
2024-08-16 16:39:09,986 [Process: 0] EPOCH 354:
2024-08-16 16:39:09,988 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0073, 0.0072,  ..., 0.0073, 0.0071, 0.0070],
         [0.0073, 0.0073, 0.0072,  ..., 0.0073, 0.0071, 0.0070],
         [0.0073, 0.0073, 0.0072,  ..., 0.0073, 0.0071, 0.0070],
         [0.9781, 0.9782, 0.9784,  ..., 0.9781, 0.9788, 0.9790]],
        [[0.0073, 0.0071, 0.0079,  ..., 0.0081, 0.0076, 0.0083],
         [0.0073, 0.0071, 0.0079,  ..., 0.0081, 0.0076, 0.0083],
         [0.0073, 0.0071, 0.0079,  ..., 0.0084, 0.0076, 0.0090],
         [0.9781, 0.9787, 0.9763,  ..., 0.9754, 0.9771, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8905e-03, 6.7103e-03, 6.8008e-03,  ..., 6.8258e-03,
          7.0145e-03, 6.9117e-03],
         [6.8905e-03, 6.7103e-03, 6.8008e-03,  ..., 6.8258e-03,
          7.0145e-03, 6.9117e-03],
         [6.8905e-03, 6.7103e-03, 6.8008e-03,  ..., 6.8258e-03,
          7.0145e-03, 6.9117e-03],
         [9.7933e-01, 9.7987e-01, 9.7960e-01,  ..., 9.7952e-01,
          9.7896e-01, 9.7926e-01]],
        [[6.7361e-03, 6.6915e-03, 6.8987e-03,  ..., 2.2427e-04,
          6.9697e-03, 6.8236e-03],
         [6.7361e-03, 6.6915e-03, 6.8987e-03,  ..., 1.5125e-04,
          6.9697e-03, 6.8236e-03],
         [6.7361e-03, 6.6915e-03, 6.8987e-03,  ..., 9.9947e-01,
          6.9697e-03, 6.8236e-03],
         [9.7979e-01, 9.7993e-01, 9.7930e-01,  ..., 1.5125e-04,
          9.7909e-01, 9.7953e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:12,073 [Process: 0] Synchronize training processes
2024-08-16 16:39:12,073 [Process: 0] Evaluating...
2024-08-16 16:39:12,075 [Process: 0] EPOCH 355:
2024-08-16 16:39:12,077 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0071, 0.0072,  ..., 0.0072, 0.0073, 0.0070],
         [0.0072, 0.0071, 0.0072,  ..., 0.0072, 0.0073, 0.0070],
         [0.0072, 0.0071, 0.0072,  ..., 0.0072, 0.0073, 0.0070],
         [0.9785, 0.9786, 0.9783,  ..., 0.9785, 0.9782, 0.9791]],
        [[0.0070, 0.0072, 0.0077,  ..., 0.0074, 0.0084, 0.0081],
         [0.0070, 0.0072, 0.0077,  ..., 0.0074, 0.0084, 0.0081],
         [0.0070, 0.0072, 0.0077,  ..., 0.0074, 0.0086, 0.0081],
         [0.9789, 0.9783, 0.9768,  ..., 0.9779, 0.9746, 0.9756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:39:14,154 [Process: 0] Synchronize training processes
2024-08-16 16:39:14,155 [Process: 0] Evaluating...
2024-08-16 16:39:14,156 [Process: 0] EPOCH 356:
2024-08-16 16:39:14,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[6.8350e-03, 6.7675e-03, 6.9311e-03,  ..., 6.9265e-03,
          6.8153e-03, 6.7832e-03],
         [6.8350e-03, 6.7675e-03, 6.9311e-03,  ..., 6.9265e-03,
          6.8153e-03, 6.7832e-03],
         [6.8350e-03, 6.7675e-03, 6.9311e-03,  ..., 6.9265e-03,
          6.8153e-03, 6.7832e-03],
         [9.7949e-01, 9.7970e-01, 9.7921e-01,  ..., 9.7922e-01,
          9.7955e-01, 9.7965e-01]],
        [[6.7671e-03, 6.5915e-03, 6.8148e-03,  ..., 7.0368e-05,
          6.8082e-03, 6.8935e-03],
         [6.7671e-03, 6.5915e-03, 6.8148e-03,  ..., 6.2137e-05,
          6.8082e-03, 6.8935e-03],
         [6.7671e-03, 6.5915e-03, 6.8148e-03,  ..., 9.9981e-01,
          6.8082e-03, 6.8935e-03],
         [9.7970e-01, 9.8023e-01, 9.7956e-01,  ..., 6.2137e-05,
          9.7958e-01, 9.7932e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0072, 0.0072,  ..., 0.0072, 0.0071, 0.0070],
         [0.0073, 0.0072, 0.0072,  ..., 0.0072, 0.0071, 0.0070],
         [0.0073, 0.0072, 0.0072,  ..., 0.0072, 0.0071, 0.0070],
         [0.9782, 0.9784, 0.9783,  ..., 0.9783, 0.9788, 0.9789]],
        [[0.0073, 0.0073, 0.0071,  ..., 0.0076, 0.0075, 0.0074],
         [0.0073, 0.0073, 0.0071,  ..., 0.0076, 0.0075, 0.0074],
         [0.0073, 0.0073, 0.0071,  ..., 0.0076, 0.0075, 0.0074],
         [0.9781, 0.9782, 0.9788,  ..., 0.9771, 0.9775, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:39:16,241 [Process: 0] Synchronize training processes
2024-08-16 16:39:16,241 [Process: 0] Evaluating...
2024-08-16 16:39:16,243 [Process: 0] EPOCH 357:
2024-08-16 16:39:16,245 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7560e-03, 6.7659e-03, 6.7875e-03,  ..., 6.8193e-03,
          6.7562e-03, 6.8188e-03],
         [6.7560e-03, 6.7659e-03, 6.7875e-03,  ..., 6.8193e-03,
          6.7562e-03, 6.8188e-03],
         [6.7560e-03, 6.7659e-03, 6.7875e-03,  ..., 6.8193e-03,
          6.7562e-03, 6.8188e-03],
         [9.7973e-01, 9.7970e-01, 9.7964e-01,  ..., 9.7954e-01,
          9.7973e-01, 9.7954e-01]],
        [[6.8052e-03, 6.6975e-03, 6.9786e-03,  ..., 6.2211e-04,
          6.8144e-03, 6.8681e-03],
         [6.8052e-03, 6.6975e-03, 6.9786e-03,  ..., 6.2211e-04,
          6.8144e-03, 6.8681e-03],
         [6.8052e-03, 6.6975e-03, 6.9786e-03,  ..., 9.9813e-01,
          6.8144e-03, 6.8681e-03],
         [9.7958e-01, 9.7991e-01, 9.7906e-01,  ..., 6.2211e-04,
          9.7956e-01, 9.7940e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0074, 0.0072,  ..., 0.0073, 0.0073, 0.0072],
         [0.0073, 0.0074, 0.0072,  ..., 0.0073, 0.0073, 0.0072],
         [0.0073, 0.0074, 0.0072,  ..., 0.0073, 0.0073, 0.0072],
         [0.9781, 0.9779, 0.9783,  ..., 0.9780, 0.9780, 0.9784]],
        [[0.0072, 0.0073, 0.0070,  ..., 0.0073, 0.0074, 0.0076],
         [0.0072, 0.0073, 0.0070,  ..., 0.0073, 0.0074, 0.0076],
         [0.0072, 0.0073, 0.0070,  ..., 0.0073, 0.0074, 0.0076],
         [0.9785, 0.9782, 0.9789,  ..., 0.9780, 0.9779, 0.9772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:18,321 [Process: 0] Synchronize training processes
2024-08-16 16:39:18,321 [Process: 0] Evaluating...
2024-08-16 16:39:18,323 [Process: 0] EPOCH 358:
2024-08-16 16:39:18,325 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8044e-03, 6.7897e-03, 6.8200e-03,  ..., 6.7885e-03,
          6.7409e-03, 6.7987e-03],
         [6.8044e-03, 6.7897e-03, 6.8200e-03,  ..., 6.7885e-03,
          6.7409e-03, 6.7987e-03],
         [6.8044e-03, 6.7897e-03, 6.8200e-03,  ..., 6.7885e-03,
          6.7409e-03, 6.7987e-03],
         [9.7959e-01, 9.7963e-01, 9.7954e-01,  ..., 9.7963e-01,
          9.7978e-01, 9.7960e-01]],
        [[6.7744e-03, 6.6267e-03, 6.7118e-03,  ..., 2.7763e-04,
          6.7274e-03, 6.8078e-03],
         [6.7744e-03, 6.6267e-03, 6.7118e-03,  ..., 2.7763e-04,
          6.7274e-03, 6.8078e-03],
         [6.7744e-03, 6.6267e-03, 6.7118e-03,  ..., 9.9917e-01,
          6.7274e-03, 6.8078e-03],
         [9.7968e-01, 9.8012e-01, 9.7986e-01,  ..., 2.7763e-04,
          9.7982e-01, 9.7958e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0073, 0.0073,  ..., 0.0074, 0.0072, 0.0071],
         [0.0073, 0.0073, 0.0073,  ..., 0.0074, 0.0072, 0.0071],
         [0.0073, 0.0073, 0.0073,  ..., 0.0074, 0.0072, 0.0071],
         [0.9782, 0.9780, 0.9781,  ..., 0.9779, 0.9785, 0.9787]],
        [[0.0073, 0.0074, 0.0072,  ..., 0.0076, 0.0073, 0.0075],
         [0.0073, 0.0074, 0.0072,  ..., 0.0076, 0.0073, 0.0075],
         [0.0073, 0.0074, 0.0072,  ..., 0.0076, 0.0073, 0.0075],
         [0.9781, 0.9778, 0.9783,  ..., 0.9772, 0.9781, 0.9776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:20,419 [Process: 0] Synchronize training processes
2024-08-16 16:39:20,420 [Process: 0] Evaluating...
2024-08-16 16:39:20,422 [Process: 0] EPOCH 359:
2024-08-16 16:39:20,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7499e-03, 6.7485e-03, 6.7480e-03,  ..., 6.6603e-03,
          6.7804e-03, 6.7175e-03],
         [6.7499e-03, 6.7485e-03, 6.7480e-03,  ..., 6.6603e-03,
          6.7804e-03, 6.7175e-03],
         [6.7499e-03, 6.7485e-03, 6.7480e-03,  ..., 6.6603e-03,
          6.7804e-03, 6.7175e-03],
         [9.7975e-01, 9.7975e-01, 9.7976e-01,  ..., 9.8002e-01,
          9.7966e-01, 9.7985e-01]],
        [[6.6981e-03, 6.7112e-03, 6.7488e-03,  ..., 1.6673e-05,
          6.7320e-03, 6.6910e-03],
         [6.6981e-03, 6.7112e-03, 6.7488e-03,  ..., 1.6673e-05,
          6.7320e-03, 6.6910e-03],
         [6.6981e-03, 6.7112e-03, 6.7488e-03,  ..., 9.9995e-01,
          6.7320e-03, 6.6910e-03],
         [9.7991e-01, 9.7987e-01, 9.7975e-01,  ..., 1.6673e-05,
          9.7980e-01, 9.7993e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0072, 0.0074,  ..., 0.0073, 0.0072, 0.0072],
         [0.0072, 0.0072, 0.0074,  ..., 0.0073, 0.0072, 0.0072],
         [0.0072, 0.0072, 0.0074,  ..., 0.0073, 0.0072, 0.0072],
         [0.9783, 0.9783, 0.9779,  ..., 0.9780, 0.9783, 0.9784]],
        [[0.0072, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0075],
         [0.0072, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0075],
         [0.0072, 0.0073, 0.0073,  ..., 0.0072, 0.0073, 0.0075],
         [0.9784, 0.9781, 0.9781,  ..., 0.9783, 0.9780, 0.9774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:22,504 [Process: 0] Synchronize training processes
2024-08-16 16:39:22,504 [Process: 0] Evaluating...
2024-08-16 16:39:22,506 [Process: 0] EPOCH 360:
2024-08-16 16:39:22,508 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7875e-03, 6.6870e-03, 6.6645e-03,  ..., 6.7107e-03,
          6.7278e-03, 6.8732e-03],
         [6.7875e-03, 6.6870e-03, 6.6645e-03,  ..., 6.7107e-03,
          6.7278e-03, 6.8732e-03],
         [6.7875e-03, 6.6870e-03, 6.6645e-03,  ..., 6.7107e-03,
          6.7278e-03, 6.8732e-03],
         [9.7964e-01, 9.7994e-01, 9.8001e-01,  ..., 9.7987e-01,
          9.7982e-01, 9.7938e-01]],
        [[6.8041e-03, 6.5582e-03, 6.5731e-03,  ..., 6.9318e-05,
          6.6947e-03, 6.6693e-03],
         [6.8041e-03, 6.5582e-03, 6.5731e-03,  ..., 6.9318e-05,
          6.6947e-03, 6.6693e-03],
         [6.8041e-03, 6.5582e-03, 6.5731e-03,  ..., 9.9979e-01,
          6.6947e-03, 6.6693e-03],
         [9.7959e-01, 9.8033e-01, 9.8028e-01,  ..., 6.9318e-05,
          9.7992e-01, 9.7999e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0072, 0.0072,  ..., 0.0073, 0.0073, 0.0071],
         [0.0073, 0.0072, 0.0072,  ..., 0.0073, 0.0073, 0.0071],
         [0.0073, 0.0072, 0.0072,  ..., 0.0073, 0.0073, 0.0071],
         [0.9780, 0.9784, 0.9783,  ..., 0.9781, 0.9781, 0.9786]],
        [[0.0073, 0.0074, 0.0071,  ..., 0.0074, 0.0073, 0.0076],
         [0.0073, 0.0074, 0.0071,  ..., 0.0074, 0.0073, 0.0076],
         [0.0073, 0.0074, 0.0071,  ..., 0.0074, 0.0073, 0.0076],
         [0.9781, 0.9779, 0.9787,  ..., 0.9778, 0.9780, 0.9773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:24,592 [Process: 0] Synchronize training processes
2024-08-16 16:39:24,592 [Process: 0] Evaluating...
2024-08-16 16:39:24,594 [Process: 0] EPOCH 361:
2024-08-16 16:39:24,596 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6466e-03, 6.7452e-03, 6.6385e-03,  ..., 6.7148e-03,
          6.6761e-03, 6.5841e-03],
         [6.6466e-03, 6.7452e-03, 6.6385e-03,  ..., 6.7148e-03,
          6.6761e-03, 6.5841e-03],
         [6.6466e-03, 6.7452e-03, 6.6385e-03,  ..., 6.7148e-03,
          6.6761e-03, 6.5841e-03],
         [9.8006e-01, 9.7976e-01, 9.8008e-01,  ..., 9.7986e-01,
          9.7997e-01, 9.8025e-01]],
        [[6.4962e-03, 6.5574e-03, 6.5957e-03,  ..., 6.5108e-05,
          6.6302e-03, 6.6960e-03],
         [6.4962e-03, 6.5574e-03, 6.5957e-03,  ..., 6.5108e-05,
          6.6302e-03, 6.6960e-03],
         [6.4962e-03, 6.5574e-03, 6.5957e-03,  ..., 9.9980e-01,
          6.6302e-03, 6.6960e-03],
         [9.8051e-01, 9.8033e-01, 9.8021e-01,  ..., 6.5108e-05,
          9.8011e-01, 9.7991e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0073, 0.0072,  ..., 0.0073, 0.0071, 0.0072],
         [0.0072, 0.0073, 0.0072,  ..., 0.0073, 0.0071, 0.0072],
         [0.0072, 0.0073, 0.0072,  ..., 0.0073, 0.0071, 0.0072],
         [0.9784, 0.9782, 0.9783,  ..., 0.9782, 0.9787, 0.9783]],
        [[0.0072, 0.0071, 0.0073,  ..., 0.0074, 0.0074, 0.0074],
         [0.0072, 0.0071, 0.0073,  ..., 0.0074, 0.0074, 0.0074],
         [0.0072, 0.0071, 0.0073,  ..., 0.0074, 0.0074, 0.0074],
         [0.9785, 0.9788, 0.9781,  ..., 0.9779, 0.9777, 0.9778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:26,691 [Process: 0] Synchronize training processes
2024-08-16 16:39:26,692 [Process: 0] Evaluating...
2024-08-16 16:39:26,700 [Process: 0] EPOCH 362:
2024-08-16 16:39:26,702 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7083e-03, 6.8284e-03, 6.5979e-03,  ..., 6.7097e-03,
          6.7364e-03, 6.6442e-03],
         [6.7083e-03, 6.8284e-03, 6.5979e-03,  ..., 6.7097e-03,
          6.7364e-03, 6.6442e-03],
         [6.7083e-03, 6.8284e-03, 6.5979e-03,  ..., 6.7097e-03,
          6.7364e-03, 6.6442e-03],
         [9.7988e-01, 9.7951e-01, 9.8021e-01,  ..., 9.7987e-01,
          9.7979e-01, 9.8007e-01]],
        [[6.6837e-03, 6.7541e-03, 6.5827e-03,  ..., 2.5650e-04,
          6.6702e-03, 6.6393e-03],
         [6.6837e-03, 6.7541e-03, 6.5827e-03,  ..., 2.5650e-04,
          6.6702e-03, 6.6393e-03],
         [6.6837e-03, 6.7541e-03, 6.5827e-03,  ..., 9.9923e-01,
          6.6702e-03, 6.6393e-03],
         [9.7995e-01, 9.7974e-01, 9.8025e-01,  ..., 2.5650e-04,
          9.7999e-01, 9.8008e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0072, 0.0072,  ..., 0.0072, 0.0070, 0.0070],
         [0.0072, 0.0072, 0.0072,  ..., 0.0072, 0.0070, 0.0070],
         [0.0072, 0.0072, 0.0072,  ..., 0.0072, 0.0070, 0.0070],
         [0.9785, 0.9783, 0.9784,  ..., 0.9783, 0.9789, 0.9789]],
        [[0.0071, 0.0073, 0.0078,  ..., 0.0070, 0.0071, 0.0072],
         [0.0071, 0.0073, 0.0078,  ..., 0.0070, 0.0071, 0.0072],
         [0.0071, 0.0073, 0.0078,  ..., 0.0070, 0.0071, 0.0072],
         [0.9786, 0.9782, 0.9766,  ..., 0.9790, 0.9786, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:28,795 [Process: 0] Synchronize training processes
2024-08-16 16:39:28,795 [Process: 0] Evaluating...
2024-08-16 16:39:28,797 [Process: 0] EPOCH 363:
2024-08-16 16:39:28,799 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5362e-03, 6.7002e-03, 6.5655e-03,  ..., 6.6632e-03,
          6.5274e-03, 6.7465e-03],
         [6.5362e-03, 6.7002e-03, 6.5655e-03,  ..., 6.6632e-03,
          6.5274e-03, 6.7465e-03],
         [6.5362e-03, 6.7002e-03, 6.5655e-03,  ..., 6.6632e-03,
          6.5274e-03, 6.7465e-03],
         [9.8039e-01, 9.7990e-01, 9.8030e-01,  ..., 9.8001e-01,
          9.8042e-01, 9.7976e-01]],
        [[6.6264e-03, 6.5797e-03, 6.6315e-03,  ..., 3.4412e-04,
          6.5466e-03, 6.7799e-03],
         [6.6264e-03, 6.5797e-03, 6.6315e-03,  ..., 3.4412e-04,
          6.5466e-03, 6.7799e-03],
         [6.6264e-03, 6.5797e-03, 6.6315e-03,  ..., 9.9897e-01,
          6.5466e-03, 6.7799e-03],
         [9.8012e-01, 9.8026e-01, 9.8011e-01,  ..., 3.4412e-04,
          9.8036e-01, 9.7966e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0072, 0.0071,  ..., 0.0072, 0.0070, 0.0069],
         [0.0072, 0.0072, 0.0071,  ..., 0.0072, 0.0070, 0.0069],
         [0.0072, 0.0072, 0.0071,  ..., 0.0072, 0.0070, 0.0069],
         [0.9785, 0.9785, 0.9786,  ..., 0.9785, 0.9790, 0.9792]],
        [[0.0071, 0.0071, 0.0090,  ..., 0.0071, 0.0072, 0.0073],
         [0.0071, 0.0071, 0.0090,  ..., 0.0071, 0.0072, 0.0073],
         [0.0071, 0.0071, 0.0134,  ..., 0.0071, 0.0072, 0.0073],
         [0.9786, 0.9788, 0.9686,  ..., 0.9788, 0.9785, 0.9781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:30,835 [Process: 0] Synchronize training processes
2024-08-16 16:39:30,835 [Process: 0] Evaluating...
2024-08-16 16:39:30,837 [Process: 0] EPOCH 364:
2024-08-16 16:39:30,839 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0066, 0.0066,  ..., 0.0066, 0.0066, 0.0065],
         [0.0067, 0.0066, 0.0066,  ..., 0.0066, 0.0066, 0.0065],
         [0.0067, 0.0066, 0.0066,  ..., 0.0066, 0.0066, 0.0065],
         [0.9799, 0.9803, 0.9801,  ..., 0.9802, 0.9803, 0.9805]],
        [[0.0065, 0.0065, 0.0065,  ..., 0.0011, 0.0066, 0.0067],
         [0.0065, 0.0065, 0.0065,  ..., 0.0011, 0.0066, 0.0067],
         [0.0065, 0.0065, 0.0065,  ..., 0.9966, 0.0066, 0.0067],
         [0.9806, 0.9804, 0.9804,  ..., 0.0011, 0.9801, 0.9800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0073, 0.0072,  ..., 0.0072, 0.0070, 0.0070],
         [0.0072, 0.0073, 0.0072,  ..., 0.0072, 0.0070, 0.0070],
         [0.0072, 0.0073, 0.0072,  ..., 0.0072, 0.0070, 0.0070],
         [0.9784, 0.9782, 0.9783,  ..., 0.9785, 0.9789, 0.9789]],
        [[0.0069, 0.0071, 0.0079,  ..., 0.0072, 0.0073, 0.0072],
         [0.0069, 0.0071, 0.0079,  ..., 0.0072, 0.0073, 0.0072],
         [0.0069, 0.0071, 0.0081,  ..., 0.0072, 0.0073, 0.0072],
         [0.9792, 0.9787, 0.9760,  ..., 0.9784, 0.9781, 0.9784]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:32,896 [Process: 0] Synchronize training processes
2024-08-16 16:39:32,896 [Process: 0] Evaluating...
2024-08-16 16:39:32,898 [Process: 0] EPOCH 365:
2024-08-16 16:39:32,900 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0066],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0066],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0066],
         [0.9803, 0.9804, 0.9806,  ..., 0.9803, 0.9804, 0.9802]],
        [[0.0066, 0.0066, 0.0066,  ..., 0.0068, 0.0066, 0.0067],
         [0.0066, 0.0066, 0.0066,  ..., 0.0068, 0.0066, 0.0067],
         [0.0066, 0.0066, 0.0066,  ..., 0.9797, 0.0066, 0.0067],
         [0.9803, 0.9801, 0.9803,  ..., 0.0068, 0.9802, 0.9800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0074, 0.0074,  ..., 0.0074, 0.0074, 0.0071],
         [0.0074, 0.0074, 0.0074,  ..., 0.0074, 0.0074, 0.0071],
         [0.0074, 0.0074, 0.0074,  ..., 0.0074, 0.0074, 0.0071],
         [0.9777, 0.9777, 0.9777,  ..., 0.9777, 0.9779, 0.9786]],
        [[0.0071, 0.0072, 0.0087,  ..., 0.0073, 0.0073, 0.0074],
         [0.0071, 0.0072, 0.0087,  ..., 0.0073, 0.0073, 0.0074],
         [0.0071, 0.0072, 0.0087,  ..., 0.0073, 0.0073, 0.0074],
         [0.9786, 0.9785, 0.9738,  ..., 0.9782, 0.9780, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:34,980 [Process: 0] Synchronize training processes
2024-08-16 16:39:34,980 [Process: 0] Evaluating...
2024-08-16 16:39:34,982 [Process: 0] EPOCH 366:
2024-08-16 16:39:34,984 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5422e-03, 6.4076e-03, 6.6314e-03,  ..., 6.6166e-03,
          6.5510e-03, 6.5460e-03],
         [6.5422e-03, 6.4076e-03, 6.6314e-03,  ..., 6.6166e-03,
          6.5510e-03, 6.5460e-03],
         [6.5422e-03, 6.4076e-03, 6.6314e-03,  ..., 6.6166e-03,
          6.5510e-03, 6.5460e-03],
         [9.8037e-01, 9.8078e-01, 9.8011e-01,  ..., 9.8015e-01,
          9.8035e-01, 9.8036e-01]],
        [[6.6500e-03, 6.6216e-03, 6.6221e-03,  ..., 4.7628e-08,
          6.4545e-03, 6.6879e-03],
         [6.6500e-03, 6.6216e-03, 6.6221e-03,  ..., 4.7628e-08,
          6.4545e-03, 6.6879e-03],
         [6.6500e-03, 6.6216e-03, 6.6221e-03,  ..., 1.0000e+00,
          6.4545e-03, 6.6879e-03],
         [9.8005e-01, 9.8014e-01, 9.8013e-01,  ..., 4.7628e-08,
          9.8064e-01, 9.7994e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0070, 0.0071,  ..., 0.0071, 0.0067, 0.0067],
         [0.0070, 0.0070, 0.0071,  ..., 0.0071, 0.0067, 0.0067],
         [0.0070, 0.0070, 0.0071,  ..., 0.0071, 0.0067, 0.0067],
         [0.9789, 0.9789, 0.9788,  ..., 0.9786, 0.9798, 0.9800]],
        [[0.0070, 0.0070, 0.3202,  ..., 0.0072, 0.0074, 0.0070],
         [0.0070, 0.0070, 0.2060,  ..., 0.0072, 0.0074, 0.0070],
         [0.0070, 0.0070, 0.2678,  ..., 0.0072, 0.0074, 0.0070],
         [0.9790, 0.9789, 0.2060,  ..., 0.9783, 0.9779, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:37,074 [Process: 0] Synchronize training processes
2024-08-16 16:39:37,074 [Process: 0] Evaluating...
2024-08-16 16:39:37,076 [Process: 0] EPOCH 367:
2024-08-16 16:39:37,078 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5661e-03, 6.6393e-03, 6.5262e-03,  ..., 6.6374e-03,
          6.6703e-03, 6.5949e-03],
         [6.5661e-03, 6.6393e-03, 6.5262e-03,  ..., 6.6374e-03,
          6.6703e-03, 6.5949e-03],
         [6.5661e-03, 6.6393e-03, 6.5262e-03,  ..., 6.6374e-03,
          6.6703e-03, 6.5949e-03],
         [9.8030e-01, 9.8008e-01, 9.8042e-01,  ..., 9.8009e-01,
          9.7999e-01, 9.8022e-01]],
        [[6.3499e-03, 6.4982e-03, 6.5834e-03,  ..., 6.4737e-07,
          6.5078e-03, 6.5629e-03],
         [6.3499e-03, 6.4982e-03, 6.5834e-03,  ..., 6.4737e-07,
          6.5078e-03, 6.5629e-03],
         [6.3499e-03, 6.4982e-03, 6.5834e-03,  ..., 1.0000e+00,
          6.5078e-03, 6.5629e-03],
         [9.8095e-01, 9.8051e-01, 9.8025e-01,  ..., 6.4737e-07,
          9.8048e-01, 9.8031e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0069, 0.0069,  ..., 0.0071, 0.0069, 0.0068],
         [0.0070, 0.0069, 0.0069,  ..., 0.0071, 0.0069, 0.0068],
         [0.0070, 0.0069, 0.0069,  ..., 0.0071, 0.0069, 0.0068],
         [0.9790, 0.9792, 0.9792,  ..., 0.9788, 0.9792, 0.9797]],
        [[0.0070, 0.0070, 0.0146,  ..., 0.0071, 0.0068, 0.0073],
         [0.0070, 0.0070, 0.0146,  ..., 0.0071, 0.0068, 0.0073],
         [0.0070, 0.0070, 0.0335,  ..., 0.0071, 0.0068, 0.0073],
         [0.9791, 0.9791, 0.9373,  ..., 0.9786, 0.9795, 0.9782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:39,160 [Process: 0] Synchronize training processes
2024-08-16 16:39:39,160 [Process: 0] Evaluating...
2024-08-16 16:39:39,162 [Process: 0] EPOCH 368:
2024-08-16 16:39:39,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5617e-03, 6.5152e-03, 6.4317e-03,  ..., 6.6376e-03,
          6.5800e-03, 6.5987e-03],
         [6.5617e-03, 6.5152e-03, 6.4317e-03,  ..., 6.6376e-03,
          6.5800e-03, 6.5987e-03],
         [6.5617e-03, 6.5152e-03, 6.4317e-03,  ..., 6.6376e-03,
          6.5800e-03, 6.5987e-03],
         [9.8031e-01, 9.8045e-01, 9.8070e-01,  ..., 9.8009e-01,
          9.8026e-01, 9.8020e-01]],
        [[6.3942e-03, 6.5785e-03, 6.3734e-03,  ..., 1.9808e-05,
          6.3893e-03, 6.5728e-03],
         [6.3942e-03, 6.5785e-03, 6.3734e-03,  ..., 1.9808e-05,
          6.3893e-03, 6.5728e-03],
         [6.3942e-03, 6.5785e-03, 6.3734e-03,  ..., 9.9994e-01,
          6.3893e-03, 6.5728e-03],
         [9.8082e-01, 9.8026e-01, 9.8088e-01,  ..., 1.9808e-05,
          9.8083e-01, 9.8028e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0068, 0.0067,  ..., 0.0067, 0.0067, 0.0066],
         [0.0067, 0.0068, 0.0067,  ..., 0.0067, 0.0067, 0.0066],
         [0.0067, 0.0068, 0.0067,  ..., 0.0067, 0.0067, 0.0066],
         [0.9799, 0.9796, 0.9798,  ..., 0.9800, 0.9798, 0.9803]],
        [[0.0070, 0.0070, 0.0068,  ..., 0.0068, 0.0072, 0.0078],
         [0.0070, 0.0070, 0.0068,  ..., 0.0068, 0.0072, 0.0078],
         [0.0070, 0.0070, 0.0068,  ..., 0.0068, 0.0083, 0.0099],
         [0.9790, 0.9790, 0.9795,  ..., 0.9795, 0.9773, 0.9746]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:39:41,250 [Process: 0] Synchronize training processes
2024-08-16 16:39:41,250 [Process: 0] Evaluating...
2024-08-16 16:39:41,252 [Process: 0] EPOCH 369:
2024-08-16 16:39:41,254 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6337e-03, 6.5025e-03, 6.5212e-03,  ..., 6.4842e-03,
          6.4946e-03, 6.7084e-03],
         [6.6337e-03, 6.5025e-03, 6.5212e-03,  ..., 6.4842e-03,
          6.4946e-03, 6.7084e-03],
         [6.6337e-03, 6.5025e-03, 6.5212e-03,  ..., 6.4842e-03,
          6.4946e-03, 6.7084e-03],
         [9.8010e-01, 9.8049e-01, 9.8044e-01,  ..., 9.8055e-01,
          9.8052e-01, 9.7987e-01]],
        [[6.4698e-03, 6.5253e-03, 6.3959e-03,  ..., 1.7938e-06,
          6.5757e-03, 6.4355e-03],
         [6.4698e-03, 6.5253e-03, 6.3959e-03,  ..., 1.7938e-06,
          6.5757e-03, 6.4355e-03],
         [6.4698e-03, 6.5253e-03, 6.3959e-03,  ..., 9.9999e-01,
          6.5757e-03, 6.4355e-03],
         [9.8059e-01, 9.8042e-01, 9.8081e-01,  ..., 1.7938e-06,
          9.8027e-01, 9.8069e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:39:43,339 [Process: 0] Synchronize training processes
2024-08-16 16:39:43,339 [Process: 0] Evaluating...
2024-08-16 16:39:43,341 [Process: 0] EPOCH 370:
2024-08-16 16:39:43,343 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0068, 0.0068,  ..., 0.0068, 0.0066, 0.0064],
         [0.0067, 0.0068, 0.0068,  ..., 0.0068, 0.0066, 0.0064],
         [0.0067, 0.0068, 0.0068,  ..., 0.0068, 0.0066, 0.0064],
         [0.9798, 0.9797, 0.9797,  ..., 0.9795, 0.9802, 0.9807]],
        [[0.0065, 0.0067, 0.0068,  ..., 0.0069, 0.0068, 0.0070],
         [0.0065, 0.0067, 0.0068,  ..., 0.0069, 0.0068, 0.0070],
         [0.0065, 0.0067, 0.0068,  ..., 0.0069, 0.0068, 0.0070],
         [0.9805, 0.9799, 0.9797,  ..., 0.9794, 0.9796, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4280e-03, 6.4339e-03, 6.3509e-03,  ..., 6.3538e-03,
          6.3472e-03, 6.5203e-03],
         [6.4280e-03, 6.4339e-03, 6.3509e-03,  ..., 6.3538e-03,
          6.3472e-03, 6.5203e-03],
         [6.4280e-03, 6.4339e-03, 6.3509e-03,  ..., 6.3538e-03,
          6.3472e-03, 6.5203e-03],
         [9.8072e-01, 9.8070e-01, 9.8095e-01,  ..., 9.8094e-01,
          9.8096e-01, 9.8044e-01]],
        [[6.3535e-03, 6.3894e-03, 6.4252e-03,  ..., 6.1939e-05,
          6.3594e-03, 6.6550e-03],
         [6.3535e-03, 6.3894e-03, 6.4252e-03,  ..., 6.1939e-05,
          6.3594e-03, 6.6550e-03],
         [6.3535e-03, 6.3894e-03, 6.4252e-03,  ..., 9.9981e-01,
          6.3594e-03, 6.6550e-03],
         [9.8094e-01, 9.8083e-01, 9.8072e-01,  ..., 6.1939e-05,
          9.8092e-01, 9.8003e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0069, 0.0071,  ..., 0.0071, 0.0069, 0.0067],
         [0.0070, 0.0069, 0.0071,  ..., 0.0071, 0.0069, 0.0067],
         [0.0070, 0.0069, 0.0071,  ..., 0.0071, 0.0069, 0.0067],
         [0.9789, 0.9793, 0.9788,  ..., 0.9786, 0.9793, 0.9798]],
        [[0.0072, 0.0073, 0.0071,  ..., 0.0075, 0.0076, 0.0072],
         [0.0072, 0.0073, 0.0071,  ..., 0.0075, 0.0076, 0.0072],
         [0.0072, 0.0073, 0.0071,  ..., 0.0075, 0.0076, 0.0072],
         [0.9783, 0.9780, 0.9788,  ..., 0.9775, 0.9771, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7475e-03, 6.7347e-03, 6.8097e-03,  ..., 6.6773e-03,
          6.6956e-03, 6.7773e-03],
         [6.7475e-03, 6.7347e-03, 6.8097e-03,  ..., 6.6773e-03,
          6.6956e-03, 6.7773e-03],
         [6.7475e-03, 6.7347e-03, 6.8097e-03,  ..., 6.6773e-03,
          6.6956e-03, 6.7773e-03],
         [9.7976e-01, 9.7980e-01, 9.7957e-01,  ..., 9.7997e-01,
          9.7991e-01, 9.7967e-01]],
        [[6.7390e-03, 6.6781e-03, 6.6466e-03,  ..., 2.6469e-06,
          6.7114e-03, 6.8016e-03],
         [6.7390e-03, 6.6781e-03, 6.6466e-03,  ..., 2.6469e-06,
          6.7114e-03, 6.8016e-03],
         [6.7390e-03, 6.6781e-03, 6.6466e-03,  ..., 9.9999e-01,
          6.7114e-03, 6.8016e-03],
         [9.7978e-01, 9.7997e-01, 9.8006e-01,  ..., 2.6469e-06,
          9.7987e-01, 9.7960e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:45,417 [Process: 0] Synchronize training processes
2024-08-16 16:39:45,417 [Process: 0] Evaluating...
2024-08-16 16:39:45,419 [Process: 0] EPOCH 371:
2024-08-16 16:39:45,421 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0069],
         [0.0071, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0069],
         [0.0071, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0069],
         [0.9786, 0.9788, 0.9789,  ..., 0.9786, 0.9785, 0.9792]],
        [[0.0072, 0.0071, 0.0072,  ..., 0.0073, 0.0070, 0.0073],
         [0.0072, 0.0071, 0.0072,  ..., 0.0073, 0.0070, 0.0073],
         [0.0072, 0.0071, 0.0072,  ..., 0.0073, 0.0070, 0.0073],
         [0.9784, 0.9788, 0.9785,  ..., 0.9781, 0.9789, 0.9782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5982e-03, 6.5411e-03, 6.5579e-03,  ..., 6.6140e-03,
          6.5210e-03, 6.5816e-03],
         [6.5982e-03, 6.5411e-03, 6.5579e-03,  ..., 6.6140e-03,
          6.5210e-03, 6.5816e-03],
         [6.5982e-03, 6.5411e-03, 6.5579e-03,  ..., 6.6140e-03,
          6.5210e-03, 6.5816e-03],
         [9.8021e-01, 9.8038e-01, 9.8033e-01,  ..., 9.8016e-01,
          9.8044e-01, 9.8026e-01]],
        [[6.7029e-03, 6.5928e-03, 6.6956e-03,  ..., 8.2223e-06,
          6.6358e-03, 6.6529e-03],
         [6.7029e-03, 6.5928e-03, 6.6956e-03,  ..., 8.2223e-06,
          6.6358e-03, 6.6529e-03],
         [6.7029e-03, 6.5928e-03, 6.6956e-03,  ..., 9.9998e-01,
          6.6358e-03, 6.6529e-03],
         [9.7989e-01, 9.8022e-01, 9.7991e-01,  ..., 8.2223e-06,
          9.8009e-01, 9.8004e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:47,484 [Process: 0] Synchronize training processes
2024-08-16 16:39:47,484 [Process: 0] Evaluating...
2024-08-16 16:39:47,492 [Process: 0] EPOCH 372:
2024-08-16 16:39:47,494 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0070, 0.0070,  ..., 0.0071, 0.0071, 0.0068],
         [0.0070, 0.0070, 0.0070,  ..., 0.0071, 0.0071, 0.0068],
         [0.0070, 0.0070, 0.0070,  ..., 0.0071, 0.0071, 0.0068],
         [0.9791, 0.9791, 0.9791,  ..., 0.9788, 0.9787, 0.9796]],
        [[0.0068, 0.0068, 0.0068,  ..., 0.0070, 0.0069, 0.0068],
         [0.0068, 0.0068, 0.0068,  ..., 0.0070, 0.0069, 0.0068],
         [0.0068, 0.0068, 0.0068,  ..., 0.0070, 0.0069, 0.0068],
         [0.9796, 0.9796, 0.9797,  ..., 0.9790, 0.9792, 0.9796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5030e-03, 6.5064e-03, 6.4618e-03,  ..., 6.4797e-03,
          6.2889e-03, 6.4916e-03],
         [6.5030e-03, 6.5064e-03, 6.4618e-03,  ..., 6.4797e-03,
          6.2889e-03, 6.4916e-03],
         [6.5030e-03, 6.5064e-03, 6.4618e-03,  ..., 6.4797e-03,
          6.2889e-03, 6.4916e-03],
         [9.8049e-01, 9.8048e-01, 9.8061e-01,  ..., 9.8056e-01,
          9.8113e-01, 9.8053e-01]],
        [[6.5274e-03, 6.4751e-03, 6.4595e-03,  ..., 3.7758e-05,
          6.3567e-03, 6.5442e-03],
         [6.5274e-03, 6.4751e-03, 6.4595e-03,  ..., 3.7758e-05,
          6.3567e-03, 6.5442e-03],
         [6.5274e-03, 6.4751e-03, 6.4595e-03,  ..., 9.9989e-01,
          6.3567e-03, 6.5442e-03],
         [9.8042e-01, 9.8057e-01, 9.8062e-01,  ..., 3.7758e-05,
          9.8093e-01, 9.8037e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:49,574 [Process: 0] Synchronize training processes
2024-08-16 16:39:49,574 [Process: 0] Evaluating...
2024-08-16 16:39:49,576 [Process: 0] EPOCH 373:
2024-08-16 16:39:49,578 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0069, 0.0069,  ..., 0.0069, 0.0068, 0.0066],
         [0.0068, 0.0069, 0.0069,  ..., 0.0069, 0.0068, 0.0066],
         [0.0068, 0.0069, 0.0069,  ..., 0.0069, 0.0068, 0.0066],
         [0.9795, 0.9792, 0.9792,  ..., 0.9793, 0.9796, 0.9801]],
        [[0.0066, 0.0067, 0.0068,  ..., 0.0067, 0.0068, 0.0069],
         [0.0066, 0.0067, 0.0068,  ..., 0.0067, 0.0068, 0.0069],
         [0.0066, 0.0067, 0.0068,  ..., 0.0067, 0.0068, 0.0069],
         [0.9802, 0.9800, 0.9796,  ..., 0.9798, 0.9796, 0.9794]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2093e-03, 6.4451e-03, 6.3912e-03,  ..., 6.2809e-03,
          6.3478e-03, 6.3370e-03],
         [6.2093e-03, 6.4451e-03, 6.3912e-03,  ..., 6.2809e-03,
          6.3478e-03, 6.3370e-03],
         [6.2093e-03, 6.4451e-03, 6.3912e-03,  ..., 6.2809e-03,
          6.3478e-03, 6.3370e-03],
         [9.8137e-01, 9.8066e-01, 9.8083e-01,  ..., 9.8116e-01,
          9.8096e-01, 9.8099e-01]],
        [[6.4275e-03, 6.4015e-03, 6.4726e-03,  ..., 1.9621e-04,
          6.4019e-03, 6.3757e-03],
         [6.4275e-03, 6.4015e-03, 6.4726e-03,  ..., 1.9621e-04,
          6.4019e-03, 6.3757e-03],
         [6.4275e-03, 6.4015e-03, 6.4726e-03,  ..., 9.9941e-01,
          6.4019e-03, 6.3757e-03],
         [9.8072e-01, 9.8080e-01, 9.8058e-01,  ..., 1.9621e-04,
          9.8079e-01, 9.8087e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:51,670 [Process: 0] Synchronize training processes
2024-08-16 16:39:51,671 [Process: 0] Evaluating...
2024-08-16 16:39:51,672 [Process: 0] EPOCH 374:
2024-08-16 16:39:51,674 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0069, 0.0070,  ..., 0.0070, 0.0068, 0.0067],
         [0.0070, 0.0069, 0.0070,  ..., 0.0070, 0.0068, 0.0067],
         [0.0070, 0.0069, 0.0070,  ..., 0.0070, 0.0068, 0.0067],
         [0.9791, 0.9792, 0.9791,  ..., 0.9790, 0.9796, 0.9798]],
        [[0.0068, 0.0068, 0.0067,  ..., 0.0069, 0.0069, 0.0069],
         [0.0068, 0.0068, 0.0067,  ..., 0.0069, 0.0069, 0.0069],
         [0.0068, 0.0068, 0.0067,  ..., 0.0069, 0.0069, 0.0069],
         [0.9797, 0.9796, 0.9798,  ..., 0.9792, 0.9794, 0.9793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3163e-03, 6.3757e-03, 6.2850e-03,  ..., 6.3017e-03,
          6.3970e-03, 6.3630e-03],
         [6.3163e-03, 6.3757e-03, 6.2850e-03,  ..., 6.3017e-03,
          6.3970e-03, 6.3630e-03],
         [6.3163e-03, 6.3757e-03, 6.2850e-03,  ..., 6.3017e-03,
          6.3970e-03, 6.3630e-03],
         [9.8105e-01, 9.8087e-01, 9.8114e-01,  ..., 9.8109e-01,
          9.8081e-01, 9.8091e-01]],
        [[6.4498e-03, 6.3539e-03, 6.4377e-03,  ..., 2.6089e-04,
          6.4256e-03, 6.4718e-03],
         [6.4498e-03, 6.3539e-03, 6.4377e-03,  ..., 2.6089e-04,
          6.4256e-03, 6.4718e-03],
         [6.4498e-03, 6.3539e-03, 6.4377e-03,  ..., 9.9922e-01,
          6.4256e-03, 6.4718e-03],
         [9.8065e-01, 9.8094e-01, 9.8069e-01,  ..., 2.6089e-04,
          9.8072e-01, 9.8058e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:53,754 [Process: 0] Synchronize training processes
2024-08-16 16:39:53,754 [Process: 0] Evaluating...
2024-08-16 16:39:53,756 [Process: 0] EPOCH 375:
2024-08-16 16:39:53,758 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0068, 0.0069,  ..., 0.0069, 0.0068, 0.0066],
         [0.0070, 0.0068, 0.0069,  ..., 0.0069, 0.0068, 0.0066],
         [0.0070, 0.0068, 0.0069,  ..., 0.0069, 0.0068, 0.0066],
         [0.9790, 0.9795, 0.9793,  ..., 0.9793, 0.9796, 0.9803]],
        [[0.0067, 0.0068, 0.0067,  ..., 0.0068, 0.0069, 0.0068],
         [0.0067, 0.0068, 0.0067,  ..., 0.0068, 0.0069, 0.0068],
         [0.0067, 0.0068, 0.0067,  ..., 0.0068, 0.0069, 0.0068],
         [0.9799, 0.9797, 0.9799,  ..., 0.9796, 0.9794, 0.9795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2661e-03, 6.1545e-03, 6.1996e-03,  ..., 6.2646e-03,
          1.5924e-02, 6.1326e-03],
         [6.2661e-03, 6.1545e-03, 6.1996e-03,  ..., 6.2646e-03,
          1.5924e-02, 6.1326e-03],
         [6.2661e-03, 6.1545e-03, 6.1996e-03,  ..., 6.2646e-03,
          8.0341e-02, 6.1326e-03],
         [9.8120e-01, 9.8154e-01, 9.8140e-01,  ..., 9.8121e-01,
          8.8781e-01, 9.8160e-01]],
        [[6.2367e-03, 6.2389e-03, 6.2693e-03,  ..., 1.4254e-05,
          6.2235e-03, 6.2464e-03],
         [6.2367e-03, 6.2389e-03, 6.2693e-03,  ..., 1.4254e-05,
          6.2235e-03, 6.2464e-03],
         [6.2367e-03, 6.2389e-03, 6.2693e-03,  ..., 9.9996e-01,
          6.2235e-03, 6.2464e-03],
         [9.8129e-01, 9.8128e-01, 9.8119e-01,  ..., 1.4254e-05,
          9.8133e-01, 9.8126e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:55,807 [Process: 0] Synchronize training processes
2024-08-16 16:39:55,807 [Process: 0] Evaluating...
2024-08-16 16:39:55,809 [Process: 0] EPOCH 376:
2024-08-16 16:39:55,811 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0067, 0.0068,  ..., 0.0068, 0.0066, 0.0065],
         [0.0067, 0.0067, 0.0068,  ..., 0.0068, 0.0066, 0.0065],
         [0.0067, 0.0067, 0.0068,  ..., 0.0068, 0.0066, 0.0065],
         [0.9798, 0.9798, 0.9797,  ..., 0.9797, 0.9801, 0.9806]],
        [[0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0066],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0066],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0066],
         [0.9802, 0.9804, 0.9805,  ..., 0.9801, 0.9804, 0.9801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1755e-03, 6.2370e-03, 6.1745e-03,  ..., 6.2189e-03,
          7.1346e-02, 6.1750e-03],
         [6.1755e-03, 6.2370e-03, 6.1745e-03,  ..., 6.2189e-03,
          7.1346e-02, 6.1750e-03],
         [6.1755e-03, 6.2370e-03, 6.1745e-03,  ..., 6.2189e-03,
          5.6947e-01, 6.1750e-03],
         [9.8147e-01, 9.8129e-01, 9.8148e-01,  ..., 9.8134e-01,
          2.8783e-01, 9.8148e-01]],
        [[6.2567e-03, 6.2277e-03, 6.2047e-03,  ..., 1.2583e-05,
          6.1346e-03, 6.2461e-03],
         [6.2567e-03, 6.2277e-03, 6.2047e-03,  ..., 1.2583e-05,
          6.1346e-03, 6.2461e-03],
         [6.2567e-03, 6.2277e-03, 6.2047e-03,  ..., 9.9996e-01,
          6.1346e-03, 6.2461e-03],
         [9.8123e-01, 9.8132e-01, 9.8139e-01,  ..., 1.2583e-05,
          9.8160e-01, 9.8126e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:57,765 [Process: 0] Synchronize training processes
2024-08-16 16:39:57,765 [Process: 0] Evaluating...
2024-08-16 16:39:57,767 [Process: 0] EPOCH 377:
2024-08-16 16:39:57,770 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0069, 0.0068,  ..., 0.0069, 0.0067, 0.0066],
         [0.0069, 0.0069, 0.0068,  ..., 0.0069, 0.0067, 0.0066],
         [0.0069, 0.0069, 0.0068,  ..., 0.0069, 0.0067, 0.0066],
         [0.9794, 0.9794, 0.9795,  ..., 0.9794, 0.9798, 0.9801]],
        [[0.0068, 0.0067, 0.0067,  ..., 0.0068, 0.0069, 0.0068],
         [0.0068, 0.0067, 0.0067,  ..., 0.0068, 0.0069, 0.0068],
         [0.0068, 0.0067, 0.0067,  ..., 0.0068, 0.0069, 0.0068],
         [0.9797, 0.9799, 0.9798,  ..., 0.9796, 0.9794, 0.9796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2095e-03, 6.2392e-03, 6.2383e-03,  ..., 6.2249e-03,
          3.1194e-03, 6.2250e-03],
         [6.2095e-03, 6.2392e-03, 6.2383e-03,  ..., 6.2249e-03,
          3.1194e-03, 6.2250e-03],
         [6.2095e-03, 6.2392e-03, 6.2383e-03,  ..., 6.2249e-03,
          9.9064e-01, 6.2250e-03],
         [9.8137e-01, 9.8128e-01, 9.8129e-01,  ..., 9.8133e-01,
          3.1194e-03, 9.8133e-01]],
        [[6.3488e-03, 6.3328e-03, 6.3216e-03,  ..., 3.3149e-04,
          6.3031e-03, 6.2466e-03],
         [6.3488e-03, 6.3328e-03, 6.3216e-03,  ..., 3.3149e-04,
          6.3031e-03, 6.2466e-03],
         [6.3488e-03, 6.3328e-03, 6.3216e-03,  ..., 9.9901e-01,
          6.3031e-03, 6.2466e-03],
         [9.8095e-01, 9.8100e-01, 9.8104e-01,  ..., 3.3149e-04,
          9.8109e-01, 9.8126e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:39:59,858 [Process: 0] Synchronize training processes
2024-08-16 16:39:59,859 [Process: 0] Evaluating...
2024-08-16 16:39:59,860 [Process: 0] EPOCH 378:
2024-08-16 16:39:59,862 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0069, 0.0069,  ..., 0.0069, 0.0068, 0.0068],
         [0.0070, 0.0069, 0.0069,  ..., 0.0069, 0.0068, 0.0068],
         [0.0070, 0.0069, 0.0069,  ..., 0.0069, 0.0068, 0.0068],
         [0.9791, 0.9792, 0.9792,  ..., 0.9792, 0.9795, 0.9797]],
        [[0.0068, 0.0068, 0.0068,  ..., 0.0069, 0.0068, 0.0069],
         [0.0068, 0.0068, 0.0068,  ..., 0.0069, 0.0068, 0.0069],
         [0.0068, 0.0068, 0.0068,  ..., 0.0069, 0.0068, 0.0069],
         [0.9796, 0.9796, 0.9795,  ..., 0.9794, 0.9796, 0.9794]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2118e-03, 6.1224e-03, 6.1126e-03,  ..., 6.2287e-03,
          4.4036e-02, 6.2202e-03],
         [6.2118e-03, 6.1224e-03, 6.1126e-03,  ..., 6.2287e-03,
          4.4036e-02, 6.2202e-03],
         [6.2118e-03, 6.1224e-03, 6.1126e-03,  ..., 6.2287e-03,
          8.2530e-01, 6.2202e-03],
         [9.8136e-01, 9.8163e-01, 9.8166e-01,  ..., 9.8131e-01,
          8.6630e-02, 9.8134e-01]],
        [[6.2468e-03, 6.2154e-03, 6.2628e-03,  ..., 4.0963e-08,
          6.1146e-03, 6.1942e-03],
         [6.2468e-03, 6.2154e-03, 6.2628e-03,  ..., 4.0963e-08,
          6.1146e-03, 6.1942e-03],
         [6.2468e-03, 6.2154e-03, 6.2628e-03,  ..., 1.0000e+00,
          6.1146e-03, 6.1942e-03],
         [9.8126e-01, 9.8135e-01, 9.8121e-01,  ..., 4.0963e-08,
          9.8166e-01, 9.8142e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:01,928 [Process: 0] Synchronize training processes
2024-08-16 16:40:01,929 [Process: 0] Evaluating...
2024-08-16 16:40:01,931 [Process: 0] EPOCH 379:
2024-08-16 16:40:01,933 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0068, 0.0068, 0.0068,  ..., 0.0068, 0.0067, 0.0068],
         [0.0068, 0.0068, 0.0068,  ..., 0.0068, 0.0067, 0.0068],
         [0.0068, 0.0068, 0.0068,  ..., 0.0068, 0.0067, 0.0068],
         [0.9796, 0.9797, 0.9795,  ..., 0.9797, 0.9800, 0.9796]],
        [[0.0067, 0.0066, 0.0066,  ..., 0.0068, 0.0067, 0.0067],
         [0.0067, 0.0066, 0.0066,  ..., 0.0068, 0.0067, 0.0067],
         [0.0067, 0.0066, 0.0066,  ..., 0.0068, 0.0067, 0.0067],
         [0.9800, 0.9802, 0.9801,  ..., 0.9796, 0.9798, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1278e-03, 6.0441e-03, 6.0845e-03,  ..., 6.1154e-03,
          1.2708e-02, 6.0188e-03],
         [6.1278e-03, 6.0441e-03, 6.0845e-03,  ..., 6.1154e-03,
          1.2708e-02, 6.0188e-03],
         [6.1278e-03, 6.0441e-03, 6.0845e-03,  ..., 6.1154e-03,
          2.4186e-02, 6.0188e-03],
         [9.8162e-01, 9.8187e-01, 9.8175e-01,  ..., 9.8165e-01,
          9.5040e-01, 9.8194e-01]],
        [[6.2110e-03, 6.1819e-03, 6.2157e-03,  ..., 2.6355e-05,
          6.1423e-03, 6.1608e-03],
         [6.2110e-03, 6.1819e-03, 6.2157e-03,  ..., 2.6355e-05,
          6.1423e-03, 6.1608e-03],
         [6.2110e-03, 6.1819e-03, 6.2157e-03,  ..., 9.9992e-01,
          6.1423e-03, 6.1608e-03],
         [9.8137e-01, 9.8145e-01, 9.8135e-01,  ..., 2.6355e-05,
          9.8157e-01, 9.8152e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:04,012 [Process: 0] Synchronize training processes
2024-08-16 16:40:04,012 [Process: 0] Evaluating...
2024-08-16 16:40:04,014 [Process: 0] EPOCH 380:
2024-08-16 16:40:04,016 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0068, 0.0067,  ..., 0.0068, 0.0067, 0.0065],
         [0.0067, 0.0068, 0.0067,  ..., 0.0068, 0.0067, 0.0065],
         [0.0067, 0.0068, 0.0067,  ..., 0.0068, 0.0067, 0.0065],
         [0.9800, 0.9797, 0.9798,  ..., 0.9797, 0.9800, 0.9804]],
        [[0.0066, 0.0066, 0.0066,  ..., 0.0066, 0.0066, 0.0067],
         [0.0066, 0.0066, 0.0066,  ..., 0.0066, 0.0066, 0.0067],
         [0.0066, 0.0066, 0.0066,  ..., 0.0066, 0.0066, 0.0067],
         [0.9802, 0.9803, 0.9803,  ..., 0.9803, 0.9801, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1558e-03, 6.1341e-03, 6.1353e-03,  ..., 6.1296e-03,
          6.3251e-03, 6.1363e-03],
         [6.1558e-03, 6.1341e-03, 6.1353e-03,  ..., 6.1296e-03,
          6.3251e-03, 6.1363e-03],
         [6.1558e-03, 6.1341e-03, 6.1353e-03,  ..., 6.1296e-03,
          6.3251e-03, 6.1363e-03],
         [9.8153e-01, 9.8160e-01, 9.8159e-01,  ..., 9.8161e-01,
          9.8102e-01, 9.8159e-01]],
        [[6.2475e-03, 6.2400e-03, 6.1908e-03,  ..., 1.8160e-04,
          6.2038e-03, 6.1475e-03],
         [6.2475e-03, 6.2400e-03, 6.1908e-03,  ..., 1.8160e-04,
          6.2038e-03, 6.1475e-03],
         [6.2475e-03, 6.2400e-03, 6.1908e-03,  ..., 9.9946e-01,
          6.2038e-03, 6.1475e-03],
         [9.8126e-01, 9.8128e-01, 9.8143e-01,  ..., 1.8160e-04,
          9.8139e-01, 9.8156e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:06,110 [Process: 0] Synchronize training processes
2024-08-16 16:40:06,111 [Process: 0] Evaluating...
2024-08-16 16:40:06,113 [Process: 0] EPOCH 381:
2024-08-16 16:40:06,115 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0067, 0.0067,  ..., 0.0068, 0.0066, 0.0066],
         [0.0067, 0.0067, 0.0067,  ..., 0.0068, 0.0066, 0.0066],
         [0.0067, 0.0067, 0.0067,  ..., 0.0068, 0.0066, 0.0066],
         [0.9798, 0.9798, 0.9799,  ..., 0.9797, 0.9801, 0.9803]],
        [[0.0066, 0.0066, 0.0065,  ..., 0.0067, 0.0068, 0.0067],
         [0.0066, 0.0066, 0.0065,  ..., 0.0067, 0.0068, 0.0067],
         [0.0066, 0.0066, 0.0065,  ..., 0.0067, 0.0068, 0.0067],
         [0.9801, 0.9803, 0.9804,  ..., 0.9799, 0.9797, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1669e-03, 6.1889e-03, 6.1612e-03,  ..., 6.2552e-03,
          6.2923e-03, 6.2285e-03],
         [6.1669e-03, 6.1889e-03, 6.1612e-03,  ..., 6.2552e-03,
          6.2923e-03, 6.2285e-03],
         [6.1669e-03, 6.1889e-03, 6.1612e-03,  ..., 6.2552e-03,
          6.2923e-03, 6.2285e-03],
         [9.8150e-01, 9.8143e-01, 9.8152e-01,  ..., 9.8123e-01,
          9.8112e-01, 9.8131e-01]],
        [[6.3166e-03, 6.1509e-03, 6.2165e-03,  ..., 8.6056e-05,
          6.2466e-03, 6.1876e-03],
         [6.3166e-03, 6.1509e-03, 6.2165e-03,  ..., 8.6056e-05,
          6.2466e-03, 6.1876e-03],
         [6.3166e-03, 6.1509e-03, 6.2165e-03,  ..., 9.9974e-01,
          6.2466e-03, 6.1876e-03],
         [9.8105e-01, 9.8155e-01, 9.8135e-01,  ..., 8.6056e-05,
          9.8126e-01, 9.8144e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:08,243 [Process: 0] Synchronize training processes
2024-08-16 16:40:08,243 [Process: 0] Evaluating...
2024-08-16 16:40:08,251 [Process: 0] EPOCH 382:
2024-08-16 16:40:08,253 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0066, 0.0067,  ..., 0.0067, 0.0066, 0.0066],
         [0.0066, 0.0066, 0.0067,  ..., 0.0067, 0.0066, 0.0066],
         [0.0066, 0.0066, 0.0067,  ..., 0.0067, 0.0066, 0.0066],
         [0.9801, 0.9801, 0.9800,  ..., 0.9800, 0.9803, 0.9801]],
        [[0.0066, 0.0066, 0.0065,  ..., 0.0066, 0.0066, 0.0066],
         [0.0066, 0.0066, 0.0065,  ..., 0.0066, 0.0066, 0.0066],
         [0.0066, 0.0066, 0.0065,  ..., 0.0066, 0.0066, 0.0066],
         [0.9803, 0.9802, 0.9805,  ..., 0.9801, 0.9801, 0.9802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3175e-03, 6.1748e-03, 6.2215e-03,  ..., 6.2122e-03,
          6.2339e-03, 6.1605e-03],
         [6.3175e-03, 6.1748e-03, 6.2215e-03,  ..., 6.2122e-03,
          6.2339e-03, 6.1605e-03],
         [6.3175e-03, 6.1748e-03, 6.2215e-03,  ..., 6.2122e-03,
          6.2339e-03, 6.1605e-03],
         [9.8105e-01, 9.8148e-01, 9.8134e-01,  ..., 9.8136e-01,
          9.8130e-01, 9.8152e-01]],
        [[6.2520e-03, 6.2109e-03, 6.1769e-03,  ..., 7.2775e-06,
          6.3046e-03, 6.2641e-03],
         [6.2520e-03, 6.2109e-03, 6.1769e-03,  ..., 7.2775e-06,
          6.3046e-03, 6.2641e-03],
         [6.2520e-03, 6.2109e-03, 6.1769e-03,  ..., 9.9998e-01,
          6.3046e-03, 6.2641e-03],
         [9.8124e-01, 9.8137e-01, 9.8147e-01,  ..., 7.2775e-06,
          9.8109e-01, 9.8121e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:10,354 [Process: 0] Synchronize training processes
2024-08-16 16:40:10,354 [Process: 0] Evaluating...
2024-08-16 16:40:10,356 [Process: 0] EPOCH 383:
2024-08-16 16:40:10,358 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 383:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0067, 0.0066, 0.0066,  ..., 0.0066, 0.0065, 0.0066],
         [0.0067, 0.0066, 0.0066,  ..., 0.0066, 0.0065, 0.0066],
         [0.0067, 0.0066, 0.0066,  ..., 0.0066, 0.0065, 0.0066],
         [0.9800, 0.9801, 0.9802,  ..., 0.9802, 0.9804, 0.9802]],
        [[0.0066, 0.0065, 0.0066,  ..., 0.0066, 0.0066, 0.0066],
         [0.0066, 0.0065, 0.0066,  ..., 0.0066, 0.0066, 0.0066],
         [0.0066, 0.0065, 0.0066,  ..., 0.0066, 0.0066, 0.0066],
         [0.9803, 0.9804, 0.9803,  ..., 0.9803, 0.9801, 0.9802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:40:12,444 [Process: 0] Synchronize training processes
2024-08-16 16:40:12,444 [Process: 0] Evaluating...
2024-08-16 16:40:12,446 [Process: 0] EPOCH 384:
2024-08-16 16:40:12,448 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0949e-03, 6.1647e-03, 6.2137e-03,  ..., 6.1635e-03,
          6.2257e-03, 6.2081e-03],
         [6.0949e-03, 6.1647e-03, 6.2137e-03,  ..., 6.1635e-03,
          6.2257e-03, 6.2081e-03],
         [6.0949e-03, 6.1647e-03, 6.2137e-03,  ..., 6.1635e-03,
          6.2257e-03, 6.2081e-03],
         [9.8172e-01, 9.8151e-01, 9.8136e-01,  ..., 9.8151e-01,
          9.8132e-01, 9.8138e-01]],
        [[6.1632e-03, 6.1456e-03, 6.1806e-03,  ..., 5.2525e-07,
          6.2281e-03, 6.1800e-03],
         [6.1632e-03, 6.1456e-03, 6.1806e-03,  ..., 5.2525e-07,
          6.2281e-03, 6.1800e-03],
         [6.1632e-03, 6.1456e-03, 6.1806e-03,  ..., 1.0000e+00,
          6.2281e-03, 6.1800e-03],
         [9.8151e-01, 9.8156e-01, 9.8146e-01,  ..., 5.2525e-07,
          9.8132e-01, 9.8146e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 384:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0067, 0.0066,  ..., 0.0066, 0.0066, 0.0065],
         [0.0066, 0.0067, 0.0066,  ..., 0.0066, 0.0066, 0.0065],
         [0.0066, 0.0067, 0.0066,  ..., 0.0066, 0.0066, 0.0065],
         [0.9801, 0.9800, 0.9803,  ..., 0.9801, 0.9801, 0.9804]],
        [[0.0065, 0.0065, 0.0065,  ..., 0.0067, 0.0066, 0.0066],
         [0.0065, 0.0065, 0.0065,  ..., 0.0067, 0.0066, 0.0066],
         [0.0065, 0.0065, 0.0065,  ..., 0.0067, 0.0066, 0.0066],
         [0.9804, 0.9804, 0.9806,  ..., 0.9800, 0.9801, 0.9803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:14,535 [Process: 0] Synchronize training processes
2024-08-16 16:40:14,535 [Process: 0] Evaluating...
2024-08-16 16:40:14,537 [Process: 0] EPOCH 385:
2024-08-16 16:40:14,539 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0678e-03, 6.1105e-03, 6.1140e-03,  ..., 6.1165e-03,
          6.0735e-03, 6.1953e-03],
         [6.0678e-03, 6.1105e-03, 6.1140e-03,  ..., 6.1165e-03,
          6.0735e-03, 6.1953e-03],
         [6.0678e-03, 6.1105e-03, 6.1140e-03,  ..., 6.1165e-03,
          6.0735e-03, 6.1953e-03],
         [9.8180e-01, 9.8167e-01, 9.8166e-01,  ..., 9.8165e-01,
          9.8178e-01, 9.8141e-01]],
        [[6.1196e-03, 6.1428e-03, 6.1217e-03,  ..., 1.7600e-05,
          6.1555e-03, 6.1686e-03],
         [6.1196e-03, 6.1428e-03, 6.1217e-03,  ..., 1.7600e-05,
          6.1555e-03, 6.1686e-03],
         [6.1196e-03, 6.1428e-03, 6.1217e-03,  ..., 9.9995e-01,
          6.1555e-03, 6.1686e-03],
         [9.8164e-01, 9.8157e-01, 9.8163e-01,  ..., 1.7600e-05,
          9.8153e-01, 9.8149e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 385:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0066, 0.0066,  ..., 0.0066, 0.0065, 0.0066],
         [0.0066, 0.0066, 0.0066,  ..., 0.0066, 0.0065, 0.0066],
         [0.0066, 0.0066, 0.0066,  ..., 0.0066, 0.0065, 0.0066],
         [0.9803, 0.9803, 0.9803,  ..., 0.9802, 0.9805, 0.9803]],
        [[0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0066, 0.0066],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0066, 0.0066],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0066, 0.0066],
         [0.9802, 0.9805, 0.9804,  ..., 0.9803, 0.9802, 0.9803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:16,608 [Process: 0] Synchronize training processes
2024-08-16 16:40:16,608 [Process: 0] Evaluating...
2024-08-16 16:40:16,610 [Process: 0] EPOCH 386:
2024-08-16 16:40:16,612 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0993e-03, 6.1005e-03, 6.0491e-03,  ..., 6.1007e-03,
          6.0837e-03, 6.1101e-03],
         [6.0993e-03, 6.1005e-03, 6.0491e-03,  ..., 6.1007e-03,
          6.0837e-03, 6.1101e-03],
         [6.0993e-03, 6.1005e-03, 6.0491e-03,  ..., 6.1007e-03,
          6.0837e-03, 6.1101e-03],
         [9.8170e-01, 9.8170e-01, 9.8185e-01,  ..., 9.8170e-01,
          9.8175e-01, 9.8167e-01]],
        [[6.0556e-03, 6.0523e-03, 6.0664e-03,  ..., 1.2458e-06,
          6.1106e-03, 6.1847e-03],
         [6.0556e-03, 6.0523e-03, 6.0664e-03,  ..., 8.6637e-07,
          6.1106e-03, 6.1847e-03],
         [6.0556e-03, 6.0523e-03, 6.0664e-03,  ..., 1.0000e+00,
          6.1106e-03, 6.1847e-03],
         [9.8183e-01, 9.8184e-01, 9.8180e-01,  ..., 8.6637e-07,
          9.8167e-01, 9.8145e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 386:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0066, 0.0065],
         [0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0066, 0.0065],
         [0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0066, 0.0065],
         [0.9804, 0.9805, 0.9805,  ..., 0.9804, 0.9803, 0.9806]],
        [[0.0064, 0.0065, 0.0064,  ..., 0.0065, 0.0065, 0.0066],
         [0.0064, 0.0065, 0.0064,  ..., 0.0065, 0.0065, 0.0066],
         [0.0064, 0.0065, 0.0064,  ..., 0.0065, 0.0065, 0.0066],
         [0.9807, 0.9804, 0.9807,  ..., 0.9805, 0.9805, 0.9802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:18,709 [Process: 0] Synchronize training processes
2024-08-16 16:40:18,709 [Process: 0] Evaluating...
2024-08-16 16:40:18,711 [Process: 0] EPOCH 387:
2024-08-16 16:40:18,713 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0503e-03, 6.0267e-03, 6.0249e-03,  ..., 5.9835e-03,
          6.0204e-03, 6.0348e-03],
         [6.0503e-03, 6.0267e-03, 6.0249e-03,  ..., 5.9835e-03,
          6.0204e-03, 6.0348e-03],
         [6.0503e-03, 6.0267e-03, 6.0249e-03,  ..., 5.9835e-03,
          6.0204e-03, 6.0348e-03],
         [9.8185e-01, 9.8192e-01, 9.8193e-01,  ..., 9.8205e-01,
          9.8194e-01, 9.8190e-01]],
        [[6.0379e-03, 6.0853e-03, 6.0041e-03,  ..., 6.0603e-05,
          6.1145e-03, 6.1362e-03],
         [6.0379e-03, 6.0853e-03, 6.0041e-03,  ..., 6.0603e-05,
          6.1145e-03, 6.1362e-03],
         [6.0379e-03, 6.0853e-03, 6.0041e-03,  ..., 9.9982e-01,
          6.1145e-03, 6.1362e-03],
         [9.8189e-01, 9.8174e-01, 9.8199e-01,  ..., 6.0603e-05,
          9.8166e-01, 9.8159e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 387:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0065, 0.0066,  ..., 0.0066, 0.0065, 0.0065],
         [0.0065, 0.0065, 0.0066,  ..., 0.0066, 0.0065, 0.0065],
         [0.0065, 0.0065, 0.0066,  ..., 0.0066, 0.0065, 0.0065],
         [0.9805, 0.9804, 0.9803,  ..., 0.9802, 0.9805, 0.9804]],
        [[0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0065],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0065],
         [0.0066, 0.0065, 0.0065,  ..., 0.0066, 0.0065, 0.0065],
         [0.9803, 0.9804, 0.9804,  ..., 0.9803, 0.9806, 0.9805]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:20,797 [Process: 0] Synchronize training processes
2024-08-16 16:40:20,797 [Process: 0] Evaluating...
2024-08-16 16:40:20,799 [Process: 0] EPOCH 388:
2024-08-16 16:40:20,801 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9915e-03, 6.0682e-03, 6.0833e-03,  ..., 6.0363e-03,
          6.0118e-03, 6.0753e-03],
         [5.9915e-03, 6.0682e-03, 6.0833e-03,  ..., 6.0363e-03,
          6.0118e-03, 6.0753e-03],
         [5.9915e-03, 6.0682e-03, 6.0833e-03,  ..., 6.0363e-03,
          6.0118e-03, 6.0753e-03],
         [9.8203e-01, 9.8180e-01, 9.8175e-01,  ..., 9.8189e-01,
          9.8196e-01, 9.8177e-01]],
        [[6.0660e-03, 5.9698e-03, 5.9674e-03,  ..., 2.1464e-06,
          6.0711e-03, 6.1309e-03],
         [6.0660e-03, 5.9698e-03, 5.9674e-03,  ..., 2.1464e-06,
          6.0711e-03, 6.1309e-03],
         [6.0660e-03, 5.9698e-03, 5.9674e-03,  ..., 9.9999e-01,
          6.0711e-03, 6.1309e-03],
         [9.8180e-01, 9.8209e-01, 9.8210e-01,  ..., 2.1464e-06,
          9.8179e-01, 9.8161e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 388:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0066, 0.0065, 0.0065,  ..., 0.0065, 0.0065, 0.0065],
         [0.0066, 0.0065, 0.0065,  ..., 0.0065, 0.0065, 0.0065],
         [0.0066, 0.0065, 0.0065,  ..., 0.0065, 0.0065, 0.0065],
         [0.9803, 0.9804, 0.9805,  ..., 0.9804, 0.9805, 0.9806]],
        [[0.0064, 0.0065, 0.0065,  ..., 0.0066, 0.0066, 0.0065],
         [0.0064, 0.0065, 0.0065,  ..., 0.0066, 0.0066, 0.0065],
         [0.0064, 0.0065, 0.0065,  ..., 0.0066, 0.0066, 0.0065],
         [0.9807, 0.9805, 0.9806,  ..., 0.9801, 0.9801, 0.9805]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:22,876 [Process: 0] Synchronize training processes
2024-08-16 16:40:22,876 [Process: 0] Evaluating...
2024-08-16 16:40:22,878 [Process: 0] EPOCH 389:
2024-08-16 16:40:22,880 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0175e-03, 6.0359e-03, 6.0320e-03,  ..., 6.1069e-03,
          6.0369e-03, 6.0463e-03],
         [6.0175e-03, 6.0359e-03, 6.0320e-03,  ..., 6.1069e-03,
          6.0369e-03, 6.0463e-03],
         [6.0175e-03, 6.0359e-03, 6.0320e-03,  ..., 6.1069e-03,
          6.0369e-03, 6.0463e-03],
         [9.8195e-01, 9.8189e-01, 9.8190e-01,  ..., 9.8168e-01,
          9.8189e-01, 9.8186e-01]],
        [[5.9861e-03, 6.0273e-03, 6.0952e-03,  ..., 7.2530e-05,
          6.1269e-03, 6.0647e-03],
         [5.9861e-03, 6.0273e-03, 6.0952e-03,  ..., 7.2530e-05,
          6.1269e-03, 6.0647e-03],
         [5.9861e-03, 6.0273e-03, 6.0952e-03,  ..., 9.9978e-01,
          6.1269e-03, 6.0647e-03],
         [9.8204e-01, 9.8192e-01, 9.8171e-01,  ..., 7.2530e-05,
          9.8162e-01, 9.8181e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 389:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0064, 0.0065],
         [0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0064, 0.0065],
         [0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0064, 0.0065],
         [0.9806, 0.9806, 0.9806,  ..., 0.9804, 0.9807, 0.9806]],
        [[0.0064, 0.0065, 0.0065,  ..., 0.0065, 0.0066, 0.0065],
         [0.0064, 0.0065, 0.0065,  ..., 0.0065, 0.0066, 0.0065],
         [0.0064, 0.0065, 0.0065,  ..., 0.0065, 0.0066, 0.0065],
         [0.9807, 0.9804, 0.9805,  ..., 0.9805, 0.9802, 0.9806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:24,956 [Process: 0] Synchronize training processes
2024-08-16 16:40:24,957 [Process: 0] Evaluating...
2024-08-16 16:40:24,958 [Process: 0] EPOCH 390:
2024-08-16 16:40:24,960 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0637e-03, 6.0007e-03, 6.0087e-03,  ..., 6.0369e-03,
          6.0267e-03, 6.0493e-03],
         [6.0637e-03, 6.0007e-03, 6.0087e-03,  ..., 6.0369e-03,
          6.0267e-03, 6.0493e-03],
         [6.0637e-03, 6.0007e-03, 6.0087e-03,  ..., 6.0369e-03,
          6.0267e-03, 6.0493e-03],
         [9.8181e-01, 9.8200e-01, 9.8197e-01,  ..., 9.8189e-01,
          9.8192e-01, 9.8185e-01]],
        [[5.9028e-03, 6.0010e-03, 6.0044e-03,  ..., 2.9849e-07,
          6.0712e-03, 6.0059e-03],
         [5.9028e-03, 6.0010e-03, 6.0044e-03,  ..., 2.9849e-07,
          6.0712e-03, 6.0059e-03],
         [5.9028e-03, 6.0010e-03, 6.0044e-03,  ..., 1.0000e+00,
          6.0712e-03, 6.0059e-03],
         [9.8229e-01, 9.8200e-01, 9.8199e-01,  ..., 2.9849e-07,
          9.8179e-01, 9.8198e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 390:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0065, 0.0064,  ..., 0.0065, 0.0065, 0.0065],
         [0.0065, 0.0065, 0.0064,  ..., 0.0065, 0.0065, 0.0065],
         [0.0065, 0.0065, 0.0064,  ..., 0.0065, 0.0065, 0.0065],
         [0.9806, 0.9805, 0.9807,  ..., 0.9806, 0.9806, 0.9806]],
        [[0.0064, 0.0065, 0.0065,  ..., 0.0066, 0.0064, 0.0066],
         [0.0064, 0.0065, 0.0065,  ..., 0.0066, 0.0064, 0.0066],
         [0.0064, 0.0065, 0.0065,  ..., 0.0066, 0.0064, 0.0066],
         [0.9808, 0.9806, 0.9805,  ..., 0.9803, 0.9809, 0.9802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:27,041 [Process: 0] Synchronize training processes
2024-08-16 16:40:27,042 [Process: 0] Evaluating...
2024-08-16 16:40:27,043 [Process: 0] EPOCH 391:
2024-08-16 16:40:27,045 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0060, 0.0061,  ..., 0.0059, 0.0060, 0.0060],
         [0.0061, 0.0060, 0.0061,  ..., 0.0059, 0.0060, 0.0060],
         [0.0061, 0.0060, 0.0061,  ..., 0.0059, 0.0060, 0.0060],
         [0.9818, 0.9819, 0.9818,  ..., 0.9822, 0.9821, 0.9819]],
        [[0.0060, 0.0060, 0.0060,  ..., 0.0037, 0.0061, 0.0061],
         [0.0060, 0.0060, 0.0060,  ..., 0.0037, 0.0061, 0.0061],
         [0.0060, 0.0060, 0.0060,  ..., 0.9888, 0.0061, 0.0061],
         [0.9821, 0.9820, 0.9819,  ..., 0.0037, 0.9817, 0.9817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 391:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0064, 0.0065],
         [0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0064, 0.0065],
         [0.0065, 0.0065, 0.0065,  ..., 0.0065, 0.0064, 0.0065],
         [0.9806, 0.9804, 0.9806,  ..., 0.9805, 0.9807, 0.9805]],
        [[0.0066, 0.0064, 0.0064,  ..., 0.0067, 0.0067, 0.0067],
         [0.0066, 0.0064, 0.0064,  ..., 0.0067, 0.0067, 0.0067],
         [0.0066, 0.0064, 0.0064,  ..., 0.0067, 0.0067, 0.0067],
         [0.9803, 0.9808, 0.9808,  ..., 0.9799, 0.9800, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:29,167 [Process: 0] Synchronize training processes
2024-08-16 16:40:29,168 [Process: 0] Evaluating...
2024-08-16 16:40:29,176 [Process: 0] EPOCH 392:
2024-08-16 16:40:29,178 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9671e-03, 5.9622e-03, 5.9904e-03,  ..., 5.9931e-03,
          5.9789e-03, 6.0259e-03],
         [5.9671e-03, 5.9622e-03, 5.9904e-03,  ..., 5.9931e-03,
          5.9789e-03, 6.0259e-03],
         [5.9671e-03, 5.9622e-03, 5.9904e-03,  ..., 5.9931e-03,
          5.9789e-03, 6.0259e-03],
         [9.8210e-01, 9.8211e-01, 9.8203e-01,  ..., 9.8202e-01,
          9.8206e-01, 9.8192e-01]],
        [[5.9365e-03, 6.0083e-03, 5.9393e-03,  ..., 3.1736e-04,
          6.0482e-03, 6.0383e-03],
         [5.9365e-03, 6.0083e-03, 5.9393e-03,  ..., 3.1736e-04,
          6.0482e-03, 6.0383e-03],
         [5.9365e-03, 6.0083e-03, 5.9393e-03,  ..., 9.9905e-01,
          6.0482e-03, 6.0383e-03],
         [9.8219e-01, 9.8198e-01, 9.8218e-01,  ..., 3.1736e-04,
          9.8186e-01, 9.8189e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 392:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0063, 0.0063, 0.0064,  ..., 0.0064, 0.0064, 0.0063],
         [0.0063, 0.0063, 0.0064,  ..., 0.0064, 0.0064, 0.0063],
         [0.0063, 0.0063, 0.0064,  ..., 0.0064, 0.0064, 0.0063],
         [0.9810, 0.9811, 0.9808,  ..., 0.9808, 0.9808, 0.9810]],
        [[0.0063, 0.0064, 0.0064,  ..., 0.0066, 0.0065, 0.0064],
         [0.0063, 0.0064, 0.0064,  ..., 0.0066, 0.0065, 0.0064],
         [0.0063, 0.0064, 0.0064,  ..., 0.0066, 0.0065, 0.0064],
         [0.9812, 0.9809, 0.9808,  ..., 0.9803, 0.9804, 0.9807]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:31,267 [Process: 0] Synchronize training processes
2024-08-16 16:40:31,267 [Process: 0] Evaluating...
2024-08-16 16:40:31,269 [Process: 0] EPOCH 393:
2024-08-16 16:40:31,271 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0101e-03, 5.9978e-03, 5.9845e-03,  ..., 5.9915e-03,
          5.9746e-03, 5.9578e-03],
         [6.0101e-03, 5.9978e-03, 5.9845e-03,  ..., 5.9915e-03,
          5.9746e-03, 5.9578e-03],
         [6.0101e-03, 5.9978e-03, 5.9845e-03,  ..., 5.9915e-03,
          5.9746e-03, 5.9578e-03],
         [9.8197e-01, 9.8201e-01, 9.8205e-01,  ..., 9.8203e-01,
          9.8208e-01, 9.8213e-01]],
        [[6.0043e-03, 5.8996e-03, 5.9314e-03,  ..., 3.2222e-05,
          6.0199e-03, 5.9629e-03],
         [6.0043e-03, 5.8996e-03, 5.9314e-03,  ..., 3.2222e-05,
          6.0199e-03, 5.9629e-03],
         [6.0043e-03, 5.8996e-03, 5.9314e-03,  ..., 9.9990e-01,
          6.0199e-03, 5.9629e-03],
         [9.8199e-01, 9.8230e-01, 9.8221e-01,  ..., 3.2222e-05,
          9.8194e-01, 9.8211e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 393:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0063, 0.0063, 0.0062,  ..., 0.0063, 0.0063, 0.0062],
         [0.0063, 0.0063, 0.0062,  ..., 0.0063, 0.0063, 0.0062],
         [0.0063, 0.0063, 0.0062,  ..., 0.0063, 0.0063, 0.0062],
         [0.9811, 0.9812, 0.9813,  ..., 0.9812, 0.9811, 0.9813]],
        [[0.0064, 0.0062, 0.0063,  ..., 0.0064, 0.0063, 0.0065],
         [0.0064, 0.0062, 0.0063,  ..., 0.0064, 0.0063, 0.0065],
         [0.0064, 0.0062, 0.0063,  ..., 0.0064, 0.0063, 0.0065],
         [0.9809, 0.9814, 0.9810,  ..., 0.9807, 0.9810, 0.9806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:40:33,354 [Process: 0] Synchronize training processes
2024-08-16 16:40:33,354 [Process: 0] Evaluating...
2024-08-16 16:40:33,356 [Process: 0] EPOCH 394:
2024-08-16 16:40:33,358 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9488e-03, 5.9237e-03, 5.9850e-03,  ..., 5.9026e-03,
          5.9364e-03, 5.9777e-03],
         [5.9488e-03, 5.9237e-03, 5.9850e-03,  ..., 5.9026e-03,
          5.9364e-03, 5.9777e-03],
         [5.9488e-03, 5.9237e-03, 5.9850e-03,  ..., 5.9026e-03,
          5.9364e-03, 5.9777e-03],
         [9.8215e-01, 9.8223e-01, 9.8204e-01,  ..., 9.8229e-01,
          9.8219e-01, 9.8207e-01]],
        [[5.9510e-03, 5.9190e-03, 5.9107e-03,  ..., 5.8757e-06,
          6.0597e-03, 5.9959e-03],
         [5.9510e-03, 5.9190e-03, 5.9107e-03,  ..., 5.8757e-06,
          6.0597e-03, 5.9959e-03],
         [5.9510e-03, 5.9190e-03, 5.9107e-03,  ..., 9.9998e-01,
          6.0597e-03, 5.9959e-03],
         [9.8215e-01, 9.8224e-01, 9.8227e-01,  ..., 5.8757e-06,
          9.8182e-01, 9.8201e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 394:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0063, 0.0062],
         [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0063, 0.0062],
         [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0063, 0.0062],
         [0.9813, 0.9814, 0.9814,  ..., 0.9813, 0.9812, 0.9815]],
        [[0.0062, 0.0063, 0.0062,  ..., 0.0064, 0.0063, 0.0062],
         [0.0062, 0.0063, 0.0062,  ..., 0.0064, 0.0063, 0.0062],
         [0.0062, 0.0063, 0.0062,  ..., 0.0064, 0.0063, 0.0062],
         [0.9813, 0.9810, 0.9815,  ..., 0.9807, 0.9810, 0.9815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8590e-03, 5.9256e-03, 5.9547e-03,  ..., 5.8830e-03,
          5.9223e-03, 5.9647e-03],
         [5.8590e-03, 5.9256e-03, 5.9547e-03,  ..., 5.8830e-03,
          5.9223e-03, 5.9647e-03],
         [5.8590e-03, 5.9256e-03, 5.9547e-03,  ..., 5.8830e-03,
          5.9223e-03, 5.9647e-03],
         [9.8242e-01, 9.8222e-01, 9.8214e-01,  ..., 9.8235e-01,
          9.8223e-01, 9.8211e-01]],
        [[5.8859e-03, 5.9127e-03, 5.8776e-03,  ..., 2.3008e-06,
          5.9181e-03, 5.9419e-03],
         [5.8859e-03, 5.9127e-03, 5.8776e-03,  ..., 2.3008e-06,
          5.9181e-03, 5.9419e-03],
         [5.8859e-03, 5.9127e-03, 5.8776e-03,  ..., 9.9999e-01,
          5.9181e-03, 5.9419e-03],
         [9.8234e-01, 9.8226e-01, 9.8237e-01,  ..., 2.3008e-06,
          9.8225e-01, 9.8217e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 395:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:40:35,442 [Process: 0] Synchronize training processes
2024-08-16 16:40:35,442 [Process: 0] Evaluating...
2024-08-16 16:40:35,444 [Process: 0] EPOCH 395:
2024-08-16 16:40:35,446 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0062, 0.0061, 0.0062,  ..., 0.0063, 0.0062, 0.0062],
         [0.0062, 0.0061, 0.0062,  ..., 0.0063, 0.0062, 0.0062],
         [0.0062, 0.0061, 0.0062,  ..., 0.0063, 0.0062, 0.0062],
         [0.9815, 0.9816, 0.9813,  ..., 0.9811, 0.9814, 0.9814]],
        [[0.0062, 0.0063, 0.0063,  ..., 0.0066, 0.0064, 0.0066],
         [0.0062, 0.0063, 0.0063,  ..., 0.0066, 0.0064, 0.0066],
         [0.0062, 0.0063, 0.0063,  ..., 0.0066, 0.0064, 0.0066],
         [0.9815, 0.9811, 0.9812,  ..., 0.9802, 0.9807, 0.9802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8497e-03, 5.8856e-03, 5.9512e-03,  ..., 5.8702e-03,
          5.8087e-03, 5.8815e-03],
         [5.8497e-03, 5.8856e-03, 5.9512e-03,  ..., 5.8702e-03,
          5.8087e-03, 5.8815e-03],
         [5.8497e-03, 5.8856e-03, 5.9512e-03,  ..., 5.8702e-03,
          5.8087e-03, 5.8815e-03],
         [9.8245e-01, 9.8234e-01, 9.8215e-01,  ..., 9.8239e-01,
          9.8257e-01, 9.8236e-01]],
        [[5.8369e-03, 5.8595e-03, 5.9136e-03,  ..., 5.4234e-04,
          5.8890e-03, 5.8493e-03],
         [5.8369e-03, 5.8595e-03, 5.9136e-03,  ..., 5.4234e-04,
          5.8890e-03, 5.8493e-03],
         [5.8369e-03, 5.8595e-03, 5.9136e-03,  ..., 9.9837e-01,
          5.8890e-03, 5.8493e-03],
         [9.8249e-01, 9.8242e-01, 9.8226e-01,  ..., 5.4234e-04,
          9.8233e-01, 9.8245e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 396:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:40:37,525 [Process: 0] Synchronize training processes
2024-08-16 16:40:37,525 [Process: 0] Evaluating...
2024-08-16 16:40:37,527 [Process: 0] EPOCH 396:
2024-08-16 16:40:37,529 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0062, 0.0061,  ..., 0.0063, 0.0062, 0.0062],
         [0.0062, 0.0062, 0.0061,  ..., 0.0063, 0.0062, 0.0062],
         [0.0062, 0.0062, 0.0061,  ..., 0.0063, 0.0062, 0.0062],
         [0.9814, 0.9814, 0.9816,  ..., 0.9812, 0.9813, 0.9813]],
        [[0.0063, 0.0063, 0.0062,  ..., 0.0064, 0.0062, 0.0062],
         [0.0063, 0.0063, 0.0062,  ..., 0.0064, 0.0062, 0.0062],
         [0.0063, 0.0063, 0.0062,  ..., 0.0064, 0.0062, 0.0062],
         [0.9812, 0.9811, 0.9814,  ..., 0.9809, 0.9813, 0.9814]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8569e-03, 5.8962e-03, 5.9041e-03,  ..., 5.8490e-03,
          5.8094e-03, 5.8593e-03],
         [5.8569e-03, 5.8962e-03, 5.9041e-03,  ..., 5.8490e-03,
          5.8094e-03, 5.8593e-03],
         [5.8569e-03, 5.8962e-03, 5.9041e-03,  ..., 5.8490e-03,
          5.8094e-03, 5.8593e-03],
         [9.8243e-01, 9.8231e-01, 9.8229e-01,  ..., 9.8245e-01,
          9.8257e-01, 9.8242e-01]],
        [[5.7819e-03, 5.7899e-03, 5.8954e-03,  ..., 4.1817e-04,
          5.8794e-03, 5.8207e-03],
         [5.7819e-03, 5.7899e-03, 5.8954e-03,  ..., 4.1817e-04,
          5.8794e-03, 5.8207e-03],
         [5.7819e-03, 5.7899e-03, 5.8954e-03,  ..., 9.9875e-01,
          5.8794e-03, 5.8207e-03],
         [9.8265e-01, 9.8263e-01, 9.8231e-01,  ..., 4.1817e-04,
          9.8236e-01, 9.8254e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 397:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:39,604 [Process: 0] Synchronize training processes
2024-08-16 16:40:39,605 [Process: 0] Evaluating...
2024-08-16 16:40:39,607 [Process: 0] EPOCH 397:
2024-08-16 16:40:39,609 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0063, 0.0063,  ..., 0.0062, 0.0063, 0.0062],
         [0.0062, 0.0063, 0.0063,  ..., 0.0062, 0.0063, 0.0062],
         [0.0062, 0.0063, 0.0063,  ..., 0.0062, 0.0063, 0.0062],
         [0.9814, 0.9812, 0.9811,  ..., 0.9815, 0.9812, 0.9814]],
        [[0.0063, 0.0062, 0.0062,  ..., 0.0064, 0.0062, 0.0062],
         [0.0063, 0.0062, 0.0062,  ..., 0.0064, 0.0062, 0.0062],
         [0.0063, 0.0062, 0.0062,  ..., 0.0064, 0.0062, 0.0062],
         [0.9812, 0.9814, 0.9814,  ..., 0.9807, 0.9814, 0.9814]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8085e-03, 5.8911e-03, 5.8645e-03,  ..., 5.8878e-03,
          5.7806e-03, 5.8981e-03],
         [5.8085e-03, 5.8911e-03, 5.8645e-03,  ..., 5.8878e-03,
          5.7806e-03, 5.8981e-03],
         [5.8085e-03, 5.8911e-03, 5.8645e-03,  ..., 5.8878e-03,
          5.7806e-03, 5.8981e-03],
         [9.8257e-01, 9.8233e-01, 9.8241e-01,  ..., 9.8234e-01,
          9.8266e-01, 9.8231e-01]],
        [[5.7072e-03, 5.8229e-03, 5.8166e-03,  ..., 7.3687e-06,
          5.8210e-03, 5.8710e-03],
         [5.7072e-03, 5.8229e-03, 5.8166e-03,  ..., 7.3687e-06,
          5.8210e-03, 5.8710e-03],
         [5.7072e-03, 5.8229e-03, 5.8166e-03,  ..., 9.9998e-01,
          5.8210e-03, 5.8710e-03],
         [9.8288e-01, 9.8253e-01, 9.8255e-01,  ..., 7.3687e-06,
          9.8254e-01, 9.8239e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 398:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:41,687 [Process: 0] Synchronize training processes
2024-08-16 16:40:41,688 [Process: 0] Evaluating...
2024-08-16 16:40:41,690 [Process: 0] EPOCH 398:
2024-08-16 16:40:41,691 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
         [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
         [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0062],
         [0.9814, 0.9813, 0.9814,  ..., 0.9815, 0.9813, 0.9815]],
        [[0.0062, 0.0063, 0.0062,  ..., 0.0062, 0.0067, 0.0061],
         [0.0062, 0.0063, 0.0062,  ..., 0.0062, 0.0067, 0.0061],
         [0.0062, 0.0063, 0.0062,  ..., 0.0062, 0.0067, 0.0061],
         [0.9814, 0.9811, 0.9813,  ..., 0.9814, 0.9800, 0.9816]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8759e-03, 5.8079e-03, 5.7292e-03,  ..., 5.8542e-03,
          5.8225e-03, 5.8057e-03],
         [5.8759e-03, 5.8079e-03, 5.7292e-03,  ..., 5.8542e-03,
          5.8225e-03, 5.8057e-03],
         [5.8759e-03, 5.8079e-03, 5.7292e-03,  ..., 5.8542e-03,
          5.8225e-03, 5.8057e-03],
         [9.8237e-01, 9.8258e-01, 9.8281e-01,  ..., 9.8244e-01,
          9.8253e-01, 9.8258e-01]],
        [[5.7915e-03, 5.8356e-03, 5.7661e-03,  ..., 5.6824e-07,
          5.8972e-03, 5.8094e-03],
         [5.7915e-03, 5.8356e-03, 5.7661e-03,  ..., 5.6824e-07,
          5.8972e-03, 5.8094e-03],
         [5.7915e-03, 5.8356e-03, 5.7661e-03,  ..., 1.0000e+00,
          5.8972e-03, 5.8094e-03],
         [9.8263e-01, 9.8249e-01, 9.8270e-01,  ..., 5.6824e-07,
          9.8231e-01, 9.8257e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 399:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:43,774 [Process: 0] Synchronize training processes
2024-08-16 16:40:43,775 [Process: 0] Evaluating...
2024-08-16 16:40:43,777 [Process: 0] EPOCH 399:
2024-08-16 16:40:43,778 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0061],
         [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0061],
         [0.0062, 0.0062, 0.0062,  ..., 0.0062, 0.0062, 0.0061],
         [0.9814, 0.9815, 0.9815,  ..., 0.9814, 0.9815, 0.9818]],
        [[0.0062, 0.0063, 0.0062,  ..., 0.0066, 0.0066, 0.0066],
         [0.0062, 0.0063, 0.0062,  ..., 0.0066, 0.0066, 0.0066],
         [0.0062, 0.0063, 0.0062,  ..., 0.0066, 0.0066, 0.0066],
         [0.9815, 0.9811, 0.9813,  ..., 0.9803, 0.9802, 0.9803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9212e-03, 5.9133e-03, 5.8370e-03,  ..., 5.8808e-03,
          5.8915e-03, 5.9462e-03],
         [5.9212e-03, 5.9133e-03, 5.8370e-03,  ..., 5.8808e-03,
          5.8915e-03, 5.9462e-03],
         [5.9212e-03, 5.9133e-03, 5.8370e-03,  ..., 5.8808e-03,
          5.8915e-03, 5.9462e-03],
         [9.8224e-01, 9.8226e-01, 9.8249e-01,  ..., 9.8236e-01,
          9.8233e-01, 9.8216e-01]],
        [[5.8336e-03, 5.8930e-03, 5.8597e-03,  ..., 1.0975e-05,
          5.8844e-03, 5.9704e-03],
         [5.8336e-03, 5.8930e-03, 5.8597e-03,  ..., 1.0975e-05,
          5.8844e-03, 5.9704e-03],
         [5.8336e-03, 5.8930e-03, 5.8597e-03,  ..., 9.9997e-01,
          5.8844e-03, 5.9704e-03],
         [9.8250e-01, 9.8232e-01, 9.8242e-01,  ..., 1.0975e-05,
          9.8235e-01, 9.8209e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 400:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:45,850 [Process: 0] Synchronize training processes
2024-08-16 16:40:45,850 [Process: 0] Evaluating...
2024-08-16 16:40:45,852 [Process: 0] EPOCH 400:
2024-08-16 16:40:45,854 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0062, 0.0062, 0.0061,  ..., 0.0062, 0.0060, 0.0062],
         [0.0062, 0.0062, 0.0061,  ..., 0.0062, 0.0060, 0.0062],
         [0.0062, 0.0062, 0.0061,  ..., 0.0062, 0.0060, 0.0062],
         [0.9814, 0.9815, 0.9816,  ..., 0.9815, 0.9819, 0.9814]],
        [[0.0063, 0.0061, 0.0061,  ..., 0.0066, 0.0063, 0.0064],
         [0.0063, 0.0061, 0.0061,  ..., 0.0066, 0.0063, 0.0064],
         [0.0063, 0.0061, 0.0061,  ..., 0.0066, 0.0063, 0.0064],
         [0.9811, 0.9818, 0.9817,  ..., 0.9801, 0.9811, 0.9809]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8772e-03, 5.9329e-03, 5.8761e-03,  ..., 5.8320e-03,
          5.8945e-03, 5.8786e-03],
         [5.8772e-03, 5.9329e-03, 5.8761e-03,  ..., 5.8320e-03,
          5.8945e-03, 5.8786e-03],
         [5.8772e-03, 5.9329e-03, 5.8761e-03,  ..., 5.8320e-03,
          5.8945e-03, 5.8786e-03],
         [9.8237e-01, 9.8220e-01, 9.8237e-01,  ..., 9.8250e-01,
          9.8232e-01, 9.8236e-01]],
        [[5.8582e-03, 5.8557e-03, 5.8971e-03,  ..., 1.1854e-05,
          5.9463e-03, 5.9295e-03],
         [5.8582e-03, 5.8557e-03, 5.8971e-03,  ..., 3.2095e-07,
          5.9463e-03, 5.9295e-03],
         [5.8582e-03, 5.8557e-03, 5.8971e-03,  ..., 9.9999e-01,
          5.9463e-03, 5.9295e-03],
         [9.8243e-01, 9.8243e-01, 9.8231e-01,  ..., 3.2095e-07,
          9.8216e-01, 9.8221e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 401:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:47,933 [Process: 0] Synchronize training processes
2024-08-16 16:40:47,934 [Process: 0] Evaluating...
2024-08-16 16:40:47,936 [Process: 0] EPOCH 401:
2024-08-16 16:40:47,938 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0062, 0.0061],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0062, 0.0061],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0062, 0.0061],
         [0.9816, 0.9818, 0.9817,  ..., 0.9816, 0.9814, 0.9817]],
        [[0.0061, 0.0062, 0.0062,  ..., 0.0067, 0.0061, 0.0067],
         [0.0061, 0.0062, 0.0062,  ..., 0.0067, 0.0061, 0.0067],
         [0.0061, 0.0062, 0.0062,  ..., 0.0067, 0.0061, 0.0067],
         [0.9818, 0.9815, 0.9813,  ..., 0.9800, 0.9817, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9200e-03, 5.9188e-03, 5.8149e-03,  ..., 5.8308e-03,
          5.8578e-03, 5.7817e-03],
         [5.9200e-03, 5.9188e-03, 5.8149e-03,  ..., 5.8308e-03,
          5.8578e-03, 5.7817e-03],
         [5.9200e-03, 5.9188e-03, 5.8149e-03,  ..., 5.8308e-03,
          5.8578e-03, 5.7817e-03],
         [9.8224e-01, 9.8224e-01, 9.8256e-01,  ..., 9.8251e-01,
          9.8243e-01, 9.8266e-01]],
        [[5.7423e-03, 5.8574e-03, 5.8700e-03,  ..., 8.9882e-06,
          5.8481e-03, 5.9187e-03],
         [5.7423e-03, 5.8574e-03, 5.8700e-03,  ..., 8.9882e-06,
          5.8481e-03, 5.9187e-03],
         [5.7423e-03, 5.8574e-03, 5.8700e-03,  ..., 9.9997e-01,
          5.8481e-03, 5.9187e-03],
         [9.8277e-01, 9.8243e-01, 9.8239e-01,  ..., 8.9882e-06,
          9.8246e-01, 9.8224e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 402:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:50,035 [Process: 0] Synchronize training processes
2024-08-16 16:40:50,036 [Process: 0] Evaluating...
2024-08-16 16:40:50,044 [Process: 0] EPOCH 402:
2024-08-16 16:40:50,046 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0062, 0.0062,  ..., 0.0061, 0.0061, 0.0061],
         [0.0061, 0.0062, 0.0062,  ..., 0.0061, 0.0061, 0.0061],
         [0.0061, 0.0062, 0.0062,  ..., 0.0061, 0.0061, 0.0061],
         [0.9816, 0.9815, 0.9815,  ..., 0.9816, 0.9816, 0.9817]],
        [[0.0060, 0.0060, 0.0061,  ..., 0.0063, 0.0062, 0.0060],
         [0.0060, 0.0060, 0.0061,  ..., 0.0063, 0.0062, 0.0060],
         [0.0060, 0.0060, 0.0061,  ..., 0.0063, 0.0062, 0.0060],
         [0.9819, 0.9819, 0.9818,  ..., 0.9812, 0.9814, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8842e-03, 5.7585e-03, 5.9356e-03,  ..., 5.9182e-03,
          5.7483e-03, 5.7982e-03],
         [5.8842e-03, 5.7585e-03, 5.9356e-03,  ..., 5.9182e-03,
          5.7483e-03, 5.7982e-03],
         [5.8842e-03, 5.7585e-03, 5.9356e-03,  ..., 5.9182e-03,
          5.7483e-03, 5.7982e-03],
         [9.8235e-01, 9.8272e-01, 9.8219e-01,  ..., 9.8225e-01,
          9.8276e-01, 9.8261e-01]],
        [[5.8540e-03, 5.8181e-03, 5.8845e-03,  ..., 1.3740e-05,
          5.8770e-03, 5.8651e-03],
         [5.8540e-03, 5.8181e-03, 5.8845e-03,  ..., 8.2467e-06,
          5.8770e-03, 5.8651e-03],
         [5.8540e-03, 5.8181e-03, 5.8845e-03,  ..., 9.9997e-01,
          5.8770e-03, 5.8651e-03],
         [9.8244e-01, 9.8255e-01, 9.8235e-01,  ..., 8.2467e-06,
          9.8237e-01, 9.8240e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 403:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:52,132 [Process: 0] Synchronize training processes
2024-08-16 16:40:52,132 [Process: 0] Evaluating...
2024-08-16 16:40:52,134 [Process: 0] EPOCH 403:
2024-08-16 16:40:52,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0060],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0060],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0060],
         [0.9816, 0.9818, 0.9818,  ..., 0.9818, 0.9817, 0.9820]],
        [[0.0060, 0.0062, 0.0061,  ..., 0.0062, 0.0062, 0.0060],
         [0.0060, 0.0062, 0.0061,  ..., 0.0062, 0.0062, 0.0060],
         [0.0060, 0.0062, 0.0061,  ..., 0.0062, 0.0062, 0.0060],
         [0.9819, 0.9813, 0.9817,  ..., 0.9813, 0.9814, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8789e-03, 5.9147e-03, 5.8724e-03,  ..., 5.8770e-03,
          5.9058e-03, 5.8160e-03],
         [5.8789e-03, 5.9147e-03, 5.8724e-03,  ..., 5.8770e-03,
          5.9058e-03, 5.8160e-03],
         [5.8789e-03, 5.9147e-03, 5.8724e-03,  ..., 5.8770e-03,
          5.9058e-03, 5.8160e-03],
         [9.8236e-01, 9.8226e-01, 9.8238e-01,  ..., 9.8237e-01,
          9.8228e-01, 9.8255e-01]],
        [[5.7648e-03, 5.8822e-03, 5.8791e-03,  ..., 2.2421e-06,
          5.9237e-03, 5.8938e-03],
         [5.7648e-03, 5.8822e-03, 5.8791e-03,  ..., 1.1563e-06,
          5.9237e-03, 5.8938e-03],
         [5.7648e-03, 5.8822e-03, 5.8791e-03,  ..., 1.0000e+00,
          5.9237e-03, 5.8938e-03],
         [9.8271e-01, 9.8235e-01, 9.8236e-01,  ..., 1.1563e-06,
          9.8223e-01, 9.8232e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 404:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:54,214 [Process: 0] Synchronize training processes
2024-08-16 16:40:54,214 [Process: 0] Evaluating...
2024-08-16 16:40:54,216 [Process: 0] EPOCH 404:
2024-08-16 16:40:54,218 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0061],
         [0.9817, 0.9817, 0.9817,  ..., 0.9816, 0.9817, 0.9818]],
        [[0.0061, 0.0059, 0.0061,  ..., 0.0065, 0.0066, 0.0060],
         [0.0061, 0.0059, 0.0061,  ..., 0.0065, 0.0066, 0.0060],
         [0.0061, 0.0059, 0.0061,  ..., 0.0067, 0.0068, 0.0060],
         [0.9818, 0.9822, 0.9818,  ..., 0.9804, 0.9801, 0.9820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9609e-03, 5.9730e-03, 5.9682e-03,  ..., 6.0041e-03,
          5.9371e-03, 5.9850e-03],
         [5.9609e-03, 5.9730e-03, 5.9682e-03,  ..., 6.0041e-03,
          5.9371e-03, 5.9850e-03],
         [5.9609e-03, 5.9730e-03, 5.9682e-03,  ..., 6.0041e-03,
          5.9371e-03, 5.9850e-03],
         [9.8212e-01, 9.8208e-01, 9.8210e-01,  ..., 9.8199e-01,
          9.8219e-01, 9.8204e-01]],
        [[5.9721e-03, 5.9960e-03, 5.9547e-03,  ..., 1.3588e-05,
          6.0209e-03, 5.9334e-03],
         [5.9721e-03, 5.9960e-03, 5.9547e-03,  ..., 1.3588e-05,
          6.0209e-03, 5.9334e-03],
         [5.9721e-03, 5.9960e-03, 5.9547e-03,  ..., 9.9996e-01,
          6.0209e-03, 5.9334e-03],
         [9.8208e-01, 9.8201e-01, 9.8214e-01,  ..., 1.3588e-05,
          9.8194e-01, 9.8220e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 405:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:56,290 [Process: 0] Synchronize training processes
2024-08-16 16:40:56,290 [Process: 0] Evaluating...
2024-08-16 16:40:56,292 [Process: 0] EPOCH 405:
2024-08-16 16:40:56,294 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0062, 0.0062,  ..., 0.0062, 0.0063, 0.0062],
         [0.0061, 0.0062, 0.0062,  ..., 0.0062, 0.0063, 0.0062],
         [0.0061, 0.0062, 0.0062,  ..., 0.0062, 0.0063, 0.0062],
         [0.9816, 0.9814, 0.9815,  ..., 0.9813, 0.9812, 0.9815]],
        [[0.0062, 0.0062, 0.0060,  ..., 0.0061, 0.0064, 0.0063],
         [0.0062, 0.0062, 0.0060,  ..., 0.0061, 0.0064, 0.0063],
         [0.0062, 0.0062, 0.0060,  ..., 0.0061, 0.0064, 0.0063],
         [0.9814, 0.9815, 0.9819,  ..., 0.9817, 0.9808, 0.9810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7205e-03, 5.7577e-03, 5.6807e-03,  ..., 5.6969e-03,
          5.8043e-03, 5.7293e-03],
         [5.7205e-03, 5.7577e-03, 5.6807e-03,  ..., 5.6969e-03,
          5.8043e-03, 5.7293e-03],
         [5.7205e-03, 5.7577e-03, 5.6807e-03,  ..., 5.6969e-03,
          5.8043e-03, 5.7293e-03],
         [9.8284e-01, 9.8273e-01, 9.8296e-01,  ..., 9.8291e-01,
          9.8259e-01, 9.8281e-01]],
        [[5.7604e-03, 5.6990e-03, 5.7986e-03,  ..., 7.1186e-06,
          5.7594e-03, 5.7941e-03],
         [5.7604e-03, 5.6990e-03, 5.7986e-03,  ..., 2.6714e-06,
          5.7594e-03, 5.7941e-03],
         [5.7604e-03, 5.6990e-03, 5.7986e-03,  ..., 9.9999e-01,
          5.7594e-03, 5.7941e-03],
         [9.8272e-01, 9.8290e-01, 9.8260e-01,  ..., 2.6714e-06,
          9.8272e-01, 9.8262e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 406:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:40:58,381 [Process: 0] Synchronize training processes
2024-08-16 16:40:58,382 [Process: 0] Evaluating...
2024-08-16 16:40:58,384 [Process: 0] EPOCH 406:
2024-08-16 16:40:58,386 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0062, 0.0062,  ..., 0.0061, 0.0060, 0.0061],
         [0.0061, 0.0062, 0.0062,  ..., 0.0061, 0.0060, 0.0061],
         [0.0061, 0.0062, 0.0062,  ..., 0.0061, 0.0060, 0.0061],
         [0.9816, 0.9814, 0.9815,  ..., 0.9816, 0.9819, 0.9817]],
        [[0.0060, 0.0061, 0.0059,  ..., 0.0061, 0.0062, 0.0061],
         [0.0060, 0.0061, 0.0059,  ..., 0.0061, 0.0062, 0.0061],
         [0.0060, 0.0061, 0.0059,  ..., 0.0061, 0.0062, 0.0061],
         [0.9819, 0.9817, 0.9822,  ..., 0.9817, 0.9814, 0.9817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7099e-03, 5.6803e-03, 5.6238e-03,  ..., 5.6022e-03,
          5.5935e-03, 5.6644e-03],
         [5.7099e-03, 5.6803e-03, 5.6238e-03,  ..., 5.6022e-03,
          5.5935e-03, 5.6644e-03],
         [5.7099e-03, 5.6803e-03, 5.6238e-03,  ..., 5.6022e-03,
          5.5935e-03, 5.6644e-03],
         [9.8287e-01, 9.8296e-01, 9.8313e-01,  ..., 9.8319e-01,
          9.8322e-01, 9.8301e-01]],
        [[5.6371e-03, 5.6335e-03, 5.7041e-03,  ..., 1.0602e-06,
          5.6380e-03, 5.6751e-03],
         [5.6371e-03, 5.6335e-03, 5.7041e-03,  ..., 1.0602e-06,
          5.6380e-03, 5.6751e-03],
         [5.6371e-03, 5.6335e-03, 5.7041e-03,  ..., 1.0000e+00,
          5.6380e-03, 5.6751e-03],
         [9.8309e-01, 9.8310e-01, 9.8289e-01,  ..., 1.0602e-06,
          9.8309e-01, 9.8297e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:00,456 [Process: 0] Synchronize training processes
2024-08-16 16:41:00,456 [Process: 0] Evaluating...
2024-08-16 16:41:00,458 [Process: 0] EPOCH 407:
2024-08-16 16:41:00,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 407:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0059],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0059],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0061, 0.0059],
         [0.9816, 0.9817, 0.9816,  ..., 0.9817, 0.9818, 0.9824]],
        [[0.0060, 0.0060, 0.0060,  ..., 0.0061, 0.0062, 0.0060],
         [0.0060, 0.0060, 0.0060,  ..., 0.0061, 0.0062, 0.0060],
         [0.0060, 0.0060, 0.0060,  ..., 0.0061, 0.0062, 0.0060],
         [0.9821, 0.9820, 0.9821,  ..., 0.9818, 0.9814, 0.9820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5295e-03, 5.4955e-03, 5.5225e-03,  ..., 5.5033e-03,
          5.5065e-03, 5.5711e-03],
         [5.5295e-03, 5.4955e-03, 5.5225e-03,  ..., 5.5033e-03,
          5.5065e-03, 5.5711e-03],
         [5.5295e-03, 5.4955e-03, 5.5225e-03,  ..., 5.5033e-03,
          5.5065e-03, 5.5711e-03],
         [9.8341e-01, 9.8351e-01, 9.8343e-01,  ..., 9.8349e-01,
          9.8348e-01, 9.8329e-01]],
        [[5.5867e-03, 5.5840e-03, 5.6302e-03,  ..., 8.8389e-05,
          5.6099e-03, 5.6229e-03],
         [5.5867e-03, 5.5840e-03, 5.6302e-03,  ..., 8.8389e-05,
          5.6099e-03, 5.6229e-03],
         [5.5867e-03, 5.5840e-03, 5.6302e-03,  ..., 9.9973e-01,
          5.6099e-03, 5.6229e-03],
         [9.8324e-01, 9.8325e-01, 9.8311e-01,  ..., 8.8389e-05,
          9.8317e-01, 9.8313e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:02,545 [Process: 0] Synchronize training processes
2024-08-16 16:41:02,545 [Process: 0] Evaluating...
2024-08-16 16:41:02,547 [Process: 0] EPOCH 408:
2024-08-16 16:41:02,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 408:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0061, 0.0061,  ..., 0.0060, 0.0061, 0.0060],
         [0.0061, 0.0061, 0.0061,  ..., 0.0060, 0.0061, 0.0060],
         [0.0061, 0.0061, 0.0061,  ..., 0.0060, 0.0061, 0.0060],
         [0.9818, 0.9818, 0.9818,  ..., 0.9819, 0.9818, 0.9819]],
        [[0.0059, 0.0059, 0.0060,  ..., 0.0059, 0.0060, 0.0060],
         [0.0059, 0.0059, 0.0060,  ..., 0.0059, 0.0060, 0.0060],
         [0.0059, 0.0059, 0.0060,  ..., 0.0059, 0.0060, 0.0060],
         [0.9822, 0.9823, 0.9820,  ..., 0.9822, 0.9821, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:41:04,625 [Process: 0] Synchronize training processes
2024-08-16 16:41:04,626 [Process: 0] Evaluating...
2024-08-16 16:41:04,628 [Process: 0] EPOCH 409:
2024-08-16 16:41:04,630 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6814e-03, 5.4955e-03, 5.6005e-03,  ..., 5.6028e-03,
          5.5566e-03, 5.5663e-03],
         [5.6814e-03, 5.4955e-03, 5.6005e-03,  ..., 5.6028e-03,
          5.5566e-03, 5.5663e-03],
         [5.6814e-03, 5.4955e-03, 5.6005e-03,  ..., 5.6028e-03,
          5.5566e-03, 5.5663e-03],
         [9.8296e-01, 9.8351e-01, 9.8320e-01,  ..., 9.8319e-01,
          9.8333e-01, 9.8330e-01]],
        [[5.6326e-03, 5.5843e-03, 5.6266e-03,  ..., 3.1695e-06,
          5.5345e-03, 5.5924e-03],
         [5.6326e-03, 5.5843e-03, 5.6266e-03,  ..., 3.1695e-06,
          5.5345e-03, 5.5924e-03],
         [5.6326e-03, 5.5843e-03, 5.6266e-03,  ..., 9.9999e-01,
          5.5345e-03, 5.5924e-03],
         [9.8310e-01, 9.8325e-01, 9.8312e-01,  ..., 3.1695e-06,
          9.8340e-01, 9.8322e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 409:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0060, 0.0058],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0060, 0.0058],
         [0.0061, 0.0061, 0.0061,  ..., 0.0061, 0.0060, 0.0058],
         [0.9817, 0.9818, 0.9818,  ..., 0.9818, 0.9820, 0.9825]],
        [[0.0059, 0.0058, 0.0060,  ..., 0.0061, 0.0059, 0.0061],
         [0.0059, 0.0058, 0.0060,  ..., 0.0061, 0.0059, 0.0061],
         [0.0059, 0.0058, 0.0060,  ..., 0.0061, 0.0059, 0.0061],
         [0.9824, 0.9826, 0.9819,  ..., 0.9816, 0.9824, 0.9817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:06,715 [Process: 0] Synchronize training processes
2024-08-16 16:41:06,716 [Process: 0] Evaluating...
2024-08-16 16:41:06,718 [Process: 0] EPOCH 410:
2024-08-16 16:41:06,720 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5170e-03, 5.4350e-03, 5.4332e-03,  ..., 5.4124e-03,
          5.4137e-03, 5.4814e-03],
         [5.5170e-03, 5.4350e-03, 5.4332e-03,  ..., 5.4124e-03,
          5.4137e-03, 5.4814e-03],
         [5.5170e-03, 5.4350e-03, 5.4332e-03,  ..., 5.4124e-03,
          5.4137e-03, 5.4814e-03],
         [9.8345e-01, 9.8370e-01, 9.8370e-01,  ..., 9.8376e-01,
          9.8376e-01, 9.8356e-01]],
        [[5.5255e-03, 5.4646e-03, 5.5715e-03,  ..., 1.9269e-06,
          5.4789e-03, 5.5013e-03],
         [5.5255e-03, 5.4646e-03, 5.5715e-03,  ..., 1.4048e-06,
          5.4789e-03, 5.5013e-03],
         [5.5255e-03, 5.4646e-03, 5.5715e-03,  ..., 1.0000e+00,
          5.4789e-03, 5.5013e-03],
         [9.8342e-01, 9.8361e-01, 9.8329e-01,  ..., 1.4048e-06,
          9.8356e-01, 9.8350e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 410:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0060, 0.0061,  ..., 0.0060, 0.0061, 0.0060],
         [0.0060, 0.0060, 0.0061,  ..., 0.0060, 0.0061, 0.0060],
         [0.0060, 0.0060, 0.0061,  ..., 0.0060, 0.0061, 0.0060],
         [0.9820, 0.9820, 0.9818,  ..., 0.9819, 0.9816, 0.9821]],
        [[0.0059, 0.0060, 0.0060,  ..., 0.0061, 0.0060, 0.0060],
         [0.0059, 0.0060, 0.0060,  ..., 0.0061, 0.0060, 0.0060],
         [0.0059, 0.0060, 0.0060,  ..., 0.0061, 0.0060, 0.0060],
         [0.9822, 0.9821, 0.9820,  ..., 0.9816, 0.9820, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:08,818 [Process: 0] Synchronize training processes
2024-08-16 16:41:08,819 [Process: 0] Evaluating...
2024-08-16 16:41:08,821 [Process: 0] EPOCH 411:
2024-08-16 16:41:08,823 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5578e-03, 5.5702e-03, 5.4843e-03,  ..., 5.5932e-03,
          5.5627e-03, 5.5323e-03],
         [5.5578e-03, 5.5702e-03, 5.4843e-03,  ..., 5.5932e-03,
          5.5627e-03, 5.5323e-03],
         [5.5578e-03, 5.5702e-03, 5.4843e-03,  ..., 5.5932e-03,
          5.5627e-03, 5.5323e-03],
         [9.8333e-01, 9.8329e-01, 9.8355e-01,  ..., 9.8322e-01,
          9.8331e-01, 9.8340e-01]],
        [[5.5709e-03, 5.5634e-03, 5.5679e-03,  ..., 8.5957e-04,
          5.5204e-03, 5.6326e-03],
         [5.5709e-03, 5.5634e-03, 5.5679e-03,  ..., 8.5957e-04,
          5.5204e-03, 5.6326e-03],
         [5.5709e-03, 5.5634e-03, 5.5679e-03,  ..., 9.9742e-01,
          5.5204e-03, 5.6326e-03],
         [9.8329e-01, 9.8331e-01, 9.8330e-01,  ..., 8.5957e-04,
          9.8344e-01, 9.8310e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 411:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0060, 0.0060,  ..., 0.0061, 0.0059, 0.0060],
         [0.0061, 0.0060, 0.0060,  ..., 0.0061, 0.0059, 0.0060],
         [0.0061, 0.0060, 0.0060,  ..., 0.0061, 0.0059, 0.0060],
         [0.9817, 0.9819, 0.9819,  ..., 0.9818, 0.9824, 0.9821]],
        [[0.0058, 0.0058, 0.0058,  ..., 0.0060, 0.0061, 0.0059],
         [0.0058, 0.0058, 0.0058,  ..., 0.0060, 0.0061, 0.0059],
         [0.0058, 0.0058, 0.0058,  ..., 0.0060, 0.0061, 0.0059],
         [0.9825, 0.9826, 0.9826,  ..., 0.9820, 0.9817, 0.9823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:10,909 [Process: 0] Synchronize training processes
2024-08-16 16:41:10,909 [Process: 0] Evaluating...
2024-08-16 16:41:10,917 [Process: 0] EPOCH 412:
2024-08-16 16:41:10,919 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4733e-03, 5.5046e-03, 5.5481e-03,  ..., 5.5295e-03,
          5.5503e-03, 5.4966e-03],
         [5.4733e-03, 5.5046e-03, 5.5481e-03,  ..., 5.5295e-03,
          5.5503e-03, 5.4966e-03],
         [5.4733e-03, 5.5046e-03, 5.5481e-03,  ..., 5.5295e-03,
          5.5503e-03, 5.4966e-03],
         [9.8358e-01, 9.8349e-01, 9.8336e-01,  ..., 9.8341e-01,
          9.8335e-01, 9.8351e-01]],
        [[5.6457e-03, 5.5955e-03, 5.5811e-03,  ..., 6.2199e-05,
          5.6236e-03, 5.5984e-03],
         [5.6457e-03, 5.5955e-03, 5.5811e-03,  ..., 6.2199e-05,
          5.6236e-03, 5.5984e-03],
         [5.6457e-03, 5.5955e-03, 5.5811e-03,  ..., 9.9981e-01,
          5.6236e-03, 5.5984e-03],
         [9.8306e-01, 9.8321e-01, 9.8326e-01,  ..., 6.2199e-05,
          9.8313e-01, 9.8320e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 412:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0060, 0.0060,  ..., 0.0060, 0.0060, 0.0059],
         [0.0060, 0.0060, 0.0060,  ..., 0.0060, 0.0060, 0.0059],
         [0.0060, 0.0060, 0.0060,  ..., 0.0060, 0.0060, 0.0059],
         [0.9821, 0.9820, 0.9819,  ..., 0.9819, 0.9821, 0.9823]],
        [[0.0058, 0.0058, 0.0057,  ..., 0.0060, 0.0061, 0.0059],
         [0.0058, 0.0058, 0.0057,  ..., 0.0060, 0.0061, 0.0059],
         [0.0058, 0.0058, 0.0057,  ..., 0.0060, 0.0061, 0.0059],
         [0.9825, 0.9826, 0.9828,  ..., 0.9821, 0.9818, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:12,989 [Process: 0] Synchronize training processes
2024-08-16 16:41:12,990 [Process: 0] Evaluating...
2024-08-16 16:41:12,991 [Process: 0] EPOCH 413:
2024-08-16 16:41:12,993 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4657e-03, 5.5843e-03, 5.5061e-03,  ..., 5.5934e-03,
          5.6474e-03, 5.6120e-03],
         [5.4657e-03, 5.5843e-03, 5.5061e-03,  ..., 5.5934e-03,
          5.6474e-03, 5.6120e-03],
         [5.4657e-03, 5.5843e-03, 5.5061e-03,  ..., 5.5934e-03,
          5.6474e-03, 5.6120e-03],
         [9.8360e-01, 9.8325e-01, 9.8348e-01,  ..., 9.8322e-01,
          9.8306e-01, 9.8316e-01]],
        [[5.6616e-03, 5.6322e-03, 5.6492e-03,  ..., 8.6054e-06,
          5.5779e-03, 5.6222e-03],
         [5.6616e-03, 5.6322e-03, 5.6492e-03,  ..., 8.6054e-06,
          5.5779e-03, 5.6222e-03],
         [5.6616e-03, 5.6322e-03, 5.6492e-03,  ..., 9.9997e-01,
          5.5779e-03, 5.6222e-03],
         [9.8302e-01, 9.8310e-01, 9.8305e-01,  ..., 8.6054e-06,
          9.8327e-01, 9.8313e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 413:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0060, 0.0060,  ..., 0.0061, 0.0059, 0.0059],
         [0.0060, 0.0060, 0.0060,  ..., 0.0061, 0.0059, 0.0059],
         [0.0060, 0.0060, 0.0060,  ..., 0.0061, 0.0059, 0.0059],
         [0.9819, 0.9821, 0.9819,  ..., 0.9818, 0.9823, 0.9824]],
        [[0.0059, 0.0058, 0.0058,  ..., 0.0060, 0.0061, 0.0060],
         [0.0059, 0.0058, 0.0058,  ..., 0.0060, 0.0061, 0.0060],
         [0.0059, 0.0058, 0.0058,  ..., 0.0060, 0.0061, 0.0060],
         [0.9823, 0.9827, 0.9827,  ..., 0.9819, 0.9817, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:15,072 [Process: 0] Synchronize training processes
2024-08-16 16:41:15,073 [Process: 0] Evaluating...
2024-08-16 16:41:15,075 [Process: 0] EPOCH 414:
2024-08-16 16:41:15,077 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6405e-03, 5.6270e-03, 5.6472e-03,  ..., 5.6408e-03,
          5.6337e-03, 5.6287e-03],
         [5.6405e-03, 5.6270e-03, 5.6472e-03,  ..., 5.6408e-03,
          5.6337e-03, 5.6287e-03],
         [5.6405e-03, 5.6270e-03, 5.6472e-03,  ..., 5.6408e-03,
          5.6337e-03, 5.6287e-03],
         [9.8308e-01, 9.8312e-01, 9.8306e-01,  ..., 9.8308e-01,
          9.8310e-01, 9.8311e-01]],
        [[5.6844e-03, 5.6922e-03, 5.6893e-03,  ..., 4.7746e-06,
          5.6549e-03, 5.5793e-03],
         [5.6844e-03, 5.6922e-03, 5.6893e-03,  ..., 4.7746e-06,
          5.6549e-03, 5.5793e-03],
         [5.6844e-03, 5.6922e-03, 5.6893e-03,  ..., 9.9999e-01,
          5.6549e-03, 5.5793e-03],
         [9.8295e-01, 9.8292e-01, 9.8293e-01,  ..., 4.7746e-06,
          9.8304e-01, 9.8326e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 414:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0060, 0.0060,  ..., 0.0060, 0.0058, 0.0058],
         [0.0059, 0.0060, 0.0060,  ..., 0.0060, 0.0058, 0.0058],
         [0.0059, 0.0060, 0.0060,  ..., 0.0060, 0.0058, 0.0058],
         [0.9822, 0.9821, 0.9821,  ..., 0.9821, 0.9825, 0.9825]],
        [[0.0058, 0.0057, 0.0057,  ..., 0.0058, 0.0058, 0.0059],
         [0.0058, 0.0057, 0.0057,  ..., 0.0058, 0.0058, 0.0059],
         [0.0058, 0.0057, 0.0057,  ..., 0.0058, 0.0058, 0.0059],
         [0.9826, 0.9828, 0.9828,  ..., 0.9825, 0.9825, 0.9824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:17,154 [Process: 0] Synchronize training processes
2024-08-16 16:41:17,154 [Process: 0] Evaluating...
2024-08-16 16:41:17,156 [Process: 0] EPOCH 415:
2024-08-16 16:41:17,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5742e-03, 5.5958e-03, 5.6369e-03,  ..., 5.5903e-03,
          5.5476e-03, 5.5441e-03],
         [5.5742e-03, 5.5958e-03, 5.6369e-03,  ..., 5.5903e-03,
          5.5476e-03, 5.5441e-03],
         [5.5742e-03, 5.5958e-03, 5.6369e-03,  ..., 5.5903e-03,
          5.5476e-03, 5.5441e-03],
         [9.8328e-01, 9.8321e-01, 9.8309e-01,  ..., 9.8323e-01,
          9.8336e-01, 9.8337e-01]],
        [[5.7061e-03, 5.6294e-03, 5.6324e-03,  ..., 3.7478e-06,
          5.5773e-03, 5.6100e-03],
         [5.7061e-03, 5.6294e-03, 5.6324e-03,  ..., 3.7478e-06,
          5.5773e-03, 5.6100e-03],
         [5.7061e-03, 5.6294e-03, 5.6324e-03,  ..., 9.9999e-01,
          5.5773e-03, 5.6100e-03],
         [9.8288e-01, 9.8311e-01, 9.8310e-01,  ..., 3.7478e-06,
          9.8327e-01, 9.8317e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 415:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0059, 0.0059,  ..., 0.0060, 0.0059, 0.0057],
         [0.0058, 0.0059, 0.0059,  ..., 0.0060, 0.0059, 0.0057],
         [0.0058, 0.0059, 0.0059,  ..., 0.0060, 0.0059, 0.0057],
         [0.9825, 0.9823, 0.9823,  ..., 0.9821, 0.9824, 0.9828]],
        [[0.0057, 0.0058, 0.0057,  ..., 0.0060, 0.0060, 0.0060],
         [0.0057, 0.0058, 0.0057,  ..., 0.0060, 0.0060, 0.0060],
         [0.0057, 0.0058, 0.0057,  ..., 0.0061, 0.0060, 0.0060],
         [0.9830, 0.9826, 0.9828,  ..., 0.9819, 0.9819, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:19,241 [Process: 0] Synchronize training processes
2024-08-16 16:41:19,242 [Process: 0] Evaluating...
2024-08-16 16:41:19,243 [Process: 0] EPOCH 416:
2024-08-16 16:41:19,245 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5959e-03, 5.6197e-03, 5.5283e-03,  ..., 5.6502e-03,
          5.6029e-03, 5.6013e-03],
         [5.5959e-03, 5.6197e-03, 5.5283e-03,  ..., 5.6502e-03,
          5.6029e-03, 5.6013e-03],
         [5.5959e-03, 5.6197e-03, 5.5283e-03,  ..., 5.6502e-03,
          5.6029e-03, 5.6013e-03],
         [9.8321e-01, 9.8314e-01, 9.8342e-01,  ..., 9.8305e-01,
          9.8319e-01, 9.8320e-01]],
        [[5.7007e-03, 5.6732e-03, 5.6228e-03,  ..., 7.5371e-07,
          5.5616e-03, 5.5916e-03],
         [5.7007e-03, 5.6732e-03, 5.6228e-03,  ..., 7.5371e-07,
          5.5616e-03, 5.5916e-03],
         [5.7007e-03, 5.6732e-03, 5.6228e-03,  ..., 1.0000e+00,
          5.5616e-03, 5.5916e-03],
         [9.8290e-01, 9.8298e-01, 9.8313e-01,  ..., 7.5371e-07,
          9.8332e-01, 9.8323e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 416:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0056, 0.0058],
         [0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0056, 0.0058],
         [0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0056, 0.0058],
         [0.9825, 0.9822, 0.9822,  ..., 0.9824, 0.9831, 0.9825]],
        [[0.0058, 0.0057, 0.0056,  ..., 0.0060, 0.0059, 0.0058],
         [0.0058, 0.0057, 0.0056,  ..., 0.0060, 0.0059, 0.0058],
         [0.0058, 0.0057, 0.0056,  ..., 0.0061, 0.0062, 0.0058],
         [0.9825, 0.9828, 0.9831,  ..., 0.9819, 0.9819, 0.9825]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:21,328 [Process: 0] Synchronize training processes
2024-08-16 16:41:21,329 [Process: 0] Evaluating...
2024-08-16 16:41:21,331 [Process: 0] EPOCH 417:
2024-08-16 16:41:21,332 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5953e-03, 5.6495e-03, 5.5968e-03,  ..., 5.5899e-03,
          5.6665e-03, 5.6130e-03],
         [5.5953e-03, 5.6495e-03, 5.5968e-03,  ..., 5.5899e-03,
          5.6665e-03, 5.6130e-03],
         [5.5953e-03, 5.6495e-03, 5.5968e-03,  ..., 5.5899e-03,
          5.6665e-03, 5.6130e-03],
         [9.8321e-01, 9.8305e-01, 9.8321e-01,  ..., 9.8323e-01,
          9.8300e-01, 9.8316e-01]],
        [[5.7145e-03, 5.7128e-03, 5.7013e-03,  ..., 9.7638e-06,
          5.5906e-03, 5.5482e-03],
         [5.7145e-03, 5.7128e-03, 5.7013e-03,  ..., 9.7638e-06,
          5.5906e-03, 5.5482e-03],
         [5.7145e-03, 5.7128e-03, 5.7013e-03,  ..., 9.9997e-01,
          5.5906e-03, 5.5482e-03],
         [9.8286e-01, 9.8286e-01, 9.8290e-01,  ..., 9.7638e-06,
          9.8323e-01, 9.8336e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 417:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0058, 0.0058],
         [0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0058, 0.0058],
         [0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0058, 0.0058],
         [0.9824, 0.9820, 0.9820,  ..., 0.9822, 0.9827, 0.9827]],
        [[0.0058, 0.0058, 0.0059,  ..., 0.0061, 0.0059, 0.0060],
         [0.0058, 0.0058, 0.0059,  ..., 0.0061, 0.0059, 0.0060],
         [0.0058, 0.0058, 0.0059,  ..., 0.0061, 0.0059, 0.0060],
         [0.9825, 0.9827, 0.9824,  ..., 0.9817, 0.9824, 0.9820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:23,416 [Process: 0] Synchronize training processes
2024-08-16 16:41:23,416 [Process: 0] Evaluating...
2024-08-16 16:41:23,418 [Process: 0] EPOCH 418:
2024-08-16 16:41:23,420 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5832e-03, 5.7020e-03, 5.7168e-03,  ..., 5.6540e-03,
          5.6342e-03, 5.5067e-03],
         [5.5832e-03, 5.7020e-03, 5.7168e-03,  ..., 5.6540e-03,
          5.6342e-03, 5.5067e-03],
         [5.5832e-03, 5.7020e-03, 5.7168e-03,  ..., 5.6540e-03,
          5.6342e-03, 5.5067e-03],
         [9.8325e-01, 9.8289e-01, 9.8285e-01,  ..., 9.8304e-01,
          9.8310e-01, 9.8348e-01]],
        [[5.6456e-03, 5.6786e-03, 5.6685e-03,  ..., 2.8205e-05,
          5.5248e-03, 5.5256e-03],
         [5.6456e-03, 5.6786e-03, 5.6685e-03,  ..., 2.8205e-05,
          5.5248e-03, 5.5256e-03],
         [5.6456e-03, 5.6786e-03, 5.6685e-03,  ..., 9.9992e-01,
          5.5248e-03, 5.5256e-03],
         [9.8306e-01, 9.8296e-01, 9.8299e-01,  ..., 2.8205e-05,
          9.8343e-01, 9.8342e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 418:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0060, 0.0060,  ..., 0.0060, 0.0060, 0.0059],
         [0.0059, 0.0060, 0.0060,  ..., 0.0060, 0.0060, 0.0059],
         [0.0059, 0.0060, 0.0060,  ..., 0.0060, 0.0060, 0.0059],
         [0.9824, 0.9821, 0.9821,  ..., 0.9821, 0.9821, 0.9824]],
        [[0.0057, 0.0058, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.0057, 0.0058, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.0057, 0.0058, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.9828, 0.9827, 0.9824,  ..., 0.9823, 0.9827, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5238e-03, 5.5551e-03, 5.6033e-03,  ..., 5.6154e-03,
          5.5620e-03, 5.6472e-03],
         [5.5238e-03, 5.5551e-03, 5.6033e-03,  ..., 5.6154e-03,
          5.5620e-03, 5.6472e-03],
         [5.5238e-03, 5.5551e-03, 5.6033e-03,  ..., 5.6154e-03,
          5.5620e-03, 5.6472e-03],
         [9.8343e-01, 9.8333e-01, 9.8319e-01,  ..., 9.8315e-01,
          9.8331e-01, 9.8306e-01]],
        [[5.6630e-03, 5.6120e-03, 5.6325e-03,  ..., 5.3614e-05,
          5.5542e-03, 5.4550e-03],
         [5.6630e-03, 5.6120e-03, 5.6325e-03,  ..., 5.3614e-05,
          5.5542e-03, 5.4550e-03],
         [5.6630e-03, 5.6120e-03, 5.6325e-03,  ..., 9.9984e-01,
          5.5542e-03, 5.4550e-03],
         [9.8301e-01, 9.8316e-01, 9.8310e-01,  ..., 5.3614e-05,
          9.8334e-01, 9.8363e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 419:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0059],
         [0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0059],
         [0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0059],
         [0.9823, 0.9821, 0.9821,  ..., 0.9823, 0.9824, 0.9824]],
        [[0.0059, 0.0058, 0.0057,  ..., 0.0060, 0.0059, 0.0058],
         [0.0059, 0.0058, 0.0057,  ..., 0.0060, 0.0059, 0.0058],
         [0.0059, 0.0058, 0.0057,  ..., 0.0060, 0.0059, 0.0058],
         [0.9822, 0.9826, 0.9829,  ..., 0.9821, 0.9823, 0.9825]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:25,498 [Process: 0] Synchronize training processes
2024-08-16 16:41:25,498 [Process: 0] Evaluating...
2024-08-16 16:41:25,500 [Process: 0] EPOCH 419:
2024-08-16 16:41:25,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6438e-03, 5.5377e-03, 5.5437e-03,  ..., 5.6214e-03,
          5.6330e-03, 5.4951e-03],
         [5.6438e-03, 5.5377e-03, 5.5437e-03,  ..., 5.6214e-03,
          5.6330e-03, 5.4951e-03],
         [5.6438e-03, 5.5377e-03, 5.5437e-03,  ..., 5.6214e-03,
          5.6330e-03, 5.4951e-03],
         [9.8307e-01, 9.8339e-01, 9.8337e-01,  ..., 9.8314e-01,
          9.8310e-01, 9.8351e-01]],
        [[5.6142e-03, 5.5937e-03, 5.6822e-03,  ..., 3.4725e-04,
          5.6284e-03, 5.5460e-03],
         [5.6142e-03, 5.5937e-03, 5.6822e-03,  ..., 3.4725e-04,
          5.6284e-03, 5.5460e-03],
         [5.6142e-03, 5.5937e-03, 5.6822e-03,  ..., 9.9896e-01,
          5.6284e-03, 5.5460e-03],
         [9.8316e-01, 9.8322e-01, 9.8295e-01,  ..., 3.4725e-04,
          9.8311e-01, 9.8336e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 420:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0060],
         [0.0060, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0060],
         [0.0060, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0060],
         [0.9821, 0.9821, 0.9821,  ..., 0.9824, 0.9823, 0.9821]],
        [[0.0058, 0.0059, 0.0058,  ..., 0.0059, 0.0059, 0.0059],
         [0.0058, 0.0059, 0.0058,  ..., 0.0059, 0.0059, 0.0059],
         [0.0058, 0.0059, 0.0058,  ..., 0.0059, 0.0059, 0.0059],
         [0.9827, 0.9824, 0.9825,  ..., 0.9822, 0.9824, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:27,554 [Process: 0] Synchronize training processes
2024-08-16 16:41:27,555 [Process: 0] Evaluating...
2024-08-16 16:41:27,557 [Process: 0] EPOCH 420:
2024-08-16 16:41:27,558 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5323e-03, 5.5428e-03, 5.5338e-03,  ..., 5.5234e-03,
          5.5835e-03, 5.4958e-03],
         [5.5323e-03, 5.5428e-03, 5.5338e-03,  ..., 5.5234e-03,
          5.5835e-03, 5.4958e-03],
         [5.5323e-03, 5.5428e-03, 5.5338e-03,  ..., 5.5234e-03,
          5.5835e-03, 5.4958e-03],
         [9.8340e-01, 9.8337e-01, 9.8340e-01,  ..., 9.8343e-01,
          9.8325e-01, 9.8351e-01]],
        [[5.5606e-03, 5.5260e-03, 5.5176e-03,  ..., 1.8306e-05,
          5.5140e-03, 5.4700e-03],
         [5.5606e-03, 5.5260e-03, 5.5176e-03,  ..., 1.8306e-05,
          5.5140e-03, 5.4700e-03],
         [5.5606e-03, 5.5260e-03, 5.5176e-03,  ..., 9.9995e-01,
          5.5140e-03, 5.4700e-03],
         [9.8332e-01, 9.8342e-01, 9.8345e-01,  ..., 1.8306e-05,
          9.8346e-01, 9.8359e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 421:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0059],
         [0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0059],
         [0.0059, 0.0060, 0.0060,  ..., 0.0059, 0.0059, 0.0059],
         [0.9822, 0.9821, 0.9821,  ..., 0.9823, 0.9823, 0.9823]],
        [[0.0058, 0.0058, 0.0060,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0058, 0.0060,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0058, 0.0060,  ..., 0.0058, 0.0058, 0.0058],
         [0.9827, 0.9826, 0.9820,  ..., 0.9826, 0.9826, 0.9825]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:29,634 [Process: 0] Synchronize training processes
2024-08-16 16:41:29,634 [Process: 0] Evaluating...
2024-08-16 16:41:29,636 [Process: 0] EPOCH 421:
2024-08-16 16:41:29,638 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5152e-03, 5.4980e-03, 5.4912e-03,  ..., 5.4276e-03,
          5.4623e-03, 5.5196e-03],
         [5.5152e-03, 5.4980e-03, 5.4912e-03,  ..., 5.4276e-03,
          5.4623e-03, 5.5196e-03],
         [5.5152e-03, 5.4980e-03, 5.4912e-03,  ..., 5.4276e-03,
          5.4623e-03, 5.5196e-03],
         [9.8345e-01, 9.8351e-01, 9.8353e-01,  ..., 9.8372e-01,
          9.8361e-01, 9.8344e-01]],
        [[5.5076e-03, 5.5581e-03, 5.5414e-03,  ..., 3.8961e-04,
          5.4547e-03, 5.4499e-03],
         [5.5076e-03, 5.5581e-03, 5.5414e-03,  ..., 3.8961e-04,
          5.4547e-03, 5.4499e-03],
         [5.5076e-03, 5.5581e-03, 5.5414e-03,  ..., 9.9883e-01,
          5.4547e-03, 5.4499e-03],
         [9.8348e-01, 9.8333e-01, 9.8338e-01,  ..., 3.8961e-04,
          9.8364e-01, 9.8365e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 422:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0060, 0.0059,  ..., 0.0059, 0.0058, 0.0059],
         [0.0060, 0.0060, 0.0059,  ..., 0.0059, 0.0058, 0.0059],
         [0.0060, 0.0060, 0.0059,  ..., 0.0059, 0.0058, 0.0059],
         [0.9821, 0.9821, 0.9822,  ..., 0.9822, 0.9825, 0.9823]],
        [[0.0059, 0.0058, 0.0059,  ..., 0.0058, 0.0058, 0.0058],
         [0.0059, 0.0058, 0.0059,  ..., 0.0058, 0.0058, 0.0058],
         [0.0059, 0.0058, 0.0059,  ..., 0.0058, 0.0058, 0.0058],
         [0.9823, 0.9825, 0.9822,  ..., 0.9826, 0.9827, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:31,647 [Process: 0] Synchronize training processes
2024-08-16 16:41:31,647 [Process: 0] Evaluating...
2024-08-16 16:41:31,655 [Process: 0] EPOCH 422:
2024-08-16 16:41:31,657 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5842e-03, 5.5293e-03, 5.4370e-03,  ..., 5.5158e-03,
          5.4981e-03, 5.5050e-03],
         [5.5842e-03, 5.5293e-03, 5.4370e-03,  ..., 5.5158e-03,
          5.4981e-03, 5.5050e-03],
         [5.5842e-03, 5.5293e-03, 5.4370e-03,  ..., 5.5158e-03,
          5.4981e-03, 5.5050e-03],
         [9.8325e-01, 9.8341e-01, 9.8369e-01,  ..., 9.8345e-01,
          9.8351e-01, 9.8349e-01]],
        [[5.5559e-03, 5.5080e-03, 5.5642e-03,  ..., 3.2531e-06,
          5.5427e-03, 5.4813e-03],
         [5.5559e-03, 5.5080e-03, 5.5642e-03,  ..., 3.2531e-06,
          5.5427e-03, 5.4813e-03],
         [5.5559e-03, 5.5080e-03, 5.5642e-03,  ..., 9.9999e-01,
          5.5427e-03, 5.4813e-03],
         [9.8333e-01, 9.8348e-01, 9.8331e-01,  ..., 3.2531e-06,
          9.8337e-01, 9.8356e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 423:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:41:33,717 [Process: 0] Synchronize training processes
2024-08-16 16:41:33,717 [Process: 0] Evaluating...
2024-08-16 16:41:33,719 [Process: 0] EPOCH 423:
2024-08-16 16:41:33,721 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0059, 0.0058,  ..., 0.0058, 0.0059, 0.0058],
         [0.0058, 0.0059, 0.0058,  ..., 0.0058, 0.0059, 0.0058],
         [0.0058, 0.0059, 0.0058,  ..., 0.0058, 0.0059, 0.0058],
         [0.9825, 0.9824, 0.9825,  ..., 0.9826, 0.9824, 0.9826]],
        [[0.0059, 0.0057, 0.0056,  ..., 0.0058, 0.0059, 0.0058],
         [0.0059, 0.0057, 0.0056,  ..., 0.0058, 0.0059, 0.0058],
         [0.0059, 0.0057, 0.0056,  ..., 0.0058, 0.0059, 0.0058],
         [0.9823, 0.9828, 0.9833,  ..., 0.9827, 0.9824, 0.9827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5116e-03, 5.4927e-03, 5.5891e-03,  ..., 5.5506e-03,
          5.5222e-03, 5.5567e-03],
         [5.5116e-03, 5.4927e-03, 5.5891e-03,  ..., 5.5506e-03,
          5.5222e-03, 5.5567e-03],
         [5.5116e-03, 5.4927e-03, 5.5891e-03,  ..., 5.5506e-03,
          5.5222e-03, 5.5567e-03],
         [9.8347e-01, 9.8352e-01, 9.8323e-01,  ..., 9.8335e-01,
          9.8343e-01, 9.8333e-01]],
        [[5.5708e-03, 5.5853e-03, 5.5243e-03,  ..., 7.5907e-06,
          5.5434e-03, 5.5181e-03],
         [5.5708e-03, 5.5853e-03, 5.5243e-03,  ..., 7.5907e-06,
          5.5434e-03, 5.5181e-03],
         [5.5708e-03, 5.5853e-03, 5.5243e-03,  ..., 9.9998e-01,
          5.5434e-03, 5.5181e-03],
         [9.8329e-01, 9.8324e-01, 9.8343e-01,  ..., 7.5907e-06,
          9.8337e-01, 9.8345e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 424:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:35,789 [Process: 0] Synchronize training processes
2024-08-16 16:41:35,790 [Process: 0] Evaluating...
2024-08-16 16:41:35,792 [Process: 0] EPOCH 424:
2024-08-16 16:41:35,794 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0059, 0.0059,  ..., 0.0058, 0.0059, 0.0059],
         [0.0059, 0.0059, 0.0059,  ..., 0.0058, 0.0059, 0.0059],
         [0.0059, 0.0059, 0.0059,  ..., 0.0058, 0.0059, 0.0059],
         [0.9824, 0.9823, 0.9824,  ..., 0.9825, 0.9824, 0.9823]],
        [[0.0058, 0.0057, 0.0057,  ..., 0.0058, 0.0058, 0.0059],
         [0.0058, 0.0057, 0.0057,  ..., 0.0058, 0.0058, 0.0059],
         [0.0058, 0.0057, 0.0057,  ..., 0.0058, 0.0058, 0.0059],
         [0.9825, 0.9828, 0.9829,  ..., 0.9827, 0.9827, 0.9823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5638e-03, 5.5337e-03, 5.5175e-03,  ..., 5.5687e-03,
          5.5158e-03, 5.5245e-03],
         [5.5638e-03, 5.5337e-03, 5.5175e-03,  ..., 5.5687e-03,
          5.5158e-03, 5.5245e-03],
         [5.5638e-03, 5.5337e-03, 5.5175e-03,  ..., 5.5687e-03,
          5.5158e-03, 5.5245e-03],
         [9.8331e-01, 9.8340e-01, 9.8345e-01,  ..., 9.8329e-01,
          9.8345e-01, 9.8343e-01]],
        [[5.5089e-03, 5.4584e-03, 5.4527e-03,  ..., 7.8577e-05,
          5.5074e-03, 5.5558e-03],
         [5.5089e-03, 5.4584e-03, 5.4527e-03,  ..., 7.8577e-05,
          5.5074e-03, 5.5558e-03],
         [5.5089e-03, 5.4584e-03, 5.4527e-03,  ..., 9.9976e-01,
          5.5074e-03, 5.5558e-03],
         [9.8347e-01, 9.8362e-01, 9.8364e-01,  ..., 7.8577e-05,
          9.8348e-01, 9.8333e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 425:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:37,864 [Process: 0] Synchronize training processes
2024-08-16 16:41:37,864 [Process: 0] Evaluating...
2024-08-16 16:41:37,866 [Process: 0] EPOCH 425:
2024-08-16 16:41:37,868 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0058, 0.0057,  ..., 0.0058, 0.0057, 0.0057],
         [0.0058, 0.0058, 0.0057,  ..., 0.0058, 0.0057, 0.0057],
         [0.0058, 0.0058, 0.0057,  ..., 0.0058, 0.0057, 0.0057],
         [0.9826, 0.9826, 0.9828,  ..., 0.9825, 0.9830, 0.9828]],
        [[0.0059, 0.0058, 0.0057,  ..., 0.0059, 0.0058, 0.0057],
         [0.0059, 0.0058, 0.0057,  ..., 0.0059, 0.0058, 0.0057],
         [0.0059, 0.0058, 0.0057,  ..., 0.0059, 0.0058, 0.0057],
         [0.9824, 0.9825, 0.9829,  ..., 0.9824, 0.9826, 0.9830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4229e-03, 5.3420e-03, 5.3374e-03,  ..., 5.4590e-03,
          5.3754e-03, 5.3897e-03],
         [5.4229e-03, 5.3420e-03, 5.3374e-03,  ..., 5.4590e-03,
          5.3754e-03, 5.3897e-03],
         [5.4229e-03, 5.3420e-03, 5.3374e-03,  ..., 5.4590e-03,
          5.3754e-03, 5.3897e-03],
         [9.8373e-01, 9.8397e-01, 9.8399e-01,  ..., 9.8362e-01,
          9.8387e-01, 9.8383e-01]],
        [[5.4060e-03, 5.3985e-03, 5.3910e-03,  ..., 5.1081e-08,
          5.3809e-03, 5.3751e-03],
         [5.4060e-03, 5.3985e-03, 5.3910e-03,  ..., 5.1081e-08,
          5.3809e-03, 5.3751e-03],
         [5.4060e-03, 5.3985e-03, 5.3910e-03,  ..., 1.0000e+00,
          5.3809e-03, 5.3751e-03],
         [9.8378e-01, 9.8380e-01, 9.8383e-01,  ..., 5.1081e-08,
          9.8386e-01, 9.8387e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 426:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:39,960 [Process: 0] Synchronize training processes
2024-08-16 16:41:39,960 [Process: 0] Evaluating...
2024-08-16 16:41:39,962 [Process: 0] EPOCH 426:
2024-08-16 16:41:39,964 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0057, 0.0057,  ..., 0.0058, 0.0057, 0.0058],
         [0.0057, 0.0057, 0.0057,  ..., 0.0058, 0.0057, 0.0058],
         [0.0057, 0.0057, 0.0057,  ..., 0.0058, 0.0057, 0.0058],
         [0.9830, 0.9830, 0.9828,  ..., 0.9827, 0.9829, 0.9827]],
        [[0.0056, 0.0056, 0.0057,  ..., 0.0059, 0.0056, 0.0059],
         [0.0056, 0.0056, 0.0057,  ..., 0.0059, 0.0056, 0.0059],
         [0.0056, 0.0056, 0.0057,  ..., 0.0059, 0.0056, 0.0059],
         [0.9831, 0.9833, 0.9829,  ..., 0.9823, 0.9832, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0053],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0053],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0053],
         [0.9837, 0.9839, 0.9839,  ..., 0.9839, 0.9839, 0.9841]],
        [[0.0054, 0.0053, 0.0054,  ..., 0.0029, 0.0053, 0.0053],
         [0.0054, 0.0053, 0.0054,  ..., 0.0029, 0.0053, 0.0053],
         [0.0054, 0.0053, 0.0054,  ..., 0.9914, 0.0053, 0.0053],
         [0.9839, 0.9842, 0.9839,  ..., 0.0029, 0.9842, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 427:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:42,046 [Process: 0] Synchronize training processes
2024-08-16 16:41:42,047 [Process: 0] Evaluating...
2024-08-16 16:41:42,049 [Process: 0] EPOCH 427:
2024-08-16 16:41:42,051 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0059, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0059, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.9824, 0.9825, 0.9829,  ..., 0.9828, 0.9830, 0.9828]],
        [[0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0058],
         [0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0058],
         [0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0058],
         [0.9829, 0.9826, 0.9828,  ..., 0.9828, 0.9828, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3790e-03, 5.4350e-03, 5.3167e-03,  ..., 5.3901e-03,
          5.3651e-03, 5.5164e-03],
         [5.3790e-03, 5.4350e-03, 5.3167e-03,  ..., 5.3901e-03,
          5.3651e-03, 5.5164e-03],
         [5.3790e-03, 5.4350e-03, 5.3167e-03,  ..., 5.3901e-03,
          5.3651e-03, 5.5164e-03],
         [9.8386e-01, 9.8369e-01, 9.8405e-01,  ..., 9.8383e-01,
          9.8390e-01, 9.8345e-01]],
        [[5.4047e-03, 5.3719e-03, 5.4312e-03,  ..., 2.8901e-07,
          5.4873e-03, 5.3977e-03],
         [5.4047e-03, 5.3719e-03, 5.4312e-03,  ..., 2.8901e-07,
          5.4873e-03, 5.3977e-03],
         [5.4047e-03, 5.3719e-03, 5.4312e-03,  ..., 1.0000e+00,
          5.4873e-03, 5.3977e-03],
         [9.8379e-01, 9.8388e-01, 9.8371e-01,  ..., 2.8901e-07,
          9.8354e-01, 9.8381e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 428:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:44,135 [Process: 0] Synchronize training processes
2024-08-16 16:41:44,136 [Process: 0] Evaluating...
2024-08-16 16:41:44,138 [Process: 0] EPOCH 428:
2024-08-16 16:41:44,140 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0057, 0.0058,  ..., 0.0056, 0.0058, 0.0057],
         [0.0058, 0.0057, 0.0058,  ..., 0.0056, 0.0058, 0.0057],
         [0.0058, 0.0057, 0.0058,  ..., 0.0056, 0.0058, 0.0057],
         [0.9826, 0.9829, 0.9825,  ..., 0.9831, 0.9827, 0.9830]],
        [[0.0056, 0.0058, 0.0056,  ..., 0.0059, 0.0058, 0.0057],
         [0.0056, 0.0058, 0.0056,  ..., 0.0059, 0.0058, 0.0057],
         [0.0056, 0.0058, 0.0056,  ..., 0.0059, 0.0058, 0.0057],
         [0.9831, 0.9826, 0.9831,  ..., 0.9823, 0.9826, 0.9828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4273e-03, 5.5312e-03, 5.5718e-03,  ..., 5.4840e-03,
          5.5097e-03, 5.4072e-03],
         [5.4273e-03, 5.5312e-03, 5.5718e-03,  ..., 5.4840e-03,
          5.5097e-03, 5.4072e-03],
         [5.4273e-03, 5.5312e-03, 5.5718e-03,  ..., 5.4840e-03,
          5.5097e-03, 5.4072e-03],
         [9.8372e-01, 9.8341e-01, 9.8328e-01,  ..., 9.8355e-01,
          9.8347e-01, 9.8378e-01]],
        [[5.4238e-03, 5.4968e-03, 5.4557e-03,  ..., 7.4065e-07,
          5.4325e-03, 5.4268e-03],
         [5.4238e-03, 5.4968e-03, 5.4557e-03,  ..., 7.4065e-07,
          5.4325e-03, 5.4268e-03],
         [5.4238e-03, 5.4968e-03, 5.4557e-03,  ..., 1.0000e+00,
          5.4325e-03, 5.4268e-03],
         [9.8373e-01, 9.8351e-01, 9.8363e-01,  ..., 7.4065e-07,
          9.8370e-01, 9.8372e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 429:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:46,216 [Process: 0] Synchronize training processes
2024-08-16 16:41:46,217 [Process: 0] Evaluating...
2024-08-16 16:41:46,219 [Process: 0] EPOCH 429:
2024-08-16 16:41:46,221 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
         [0.9826, 0.9825, 0.9826,  ..., 0.9827, 0.9827, 0.9826]],
        [[0.0058, 0.0058, 0.0062,  ..., 0.0059, 0.0061, 0.0060],
         [0.0058, 0.0058, 0.0062,  ..., 0.0059, 0.0061, 0.0060],
         [0.0058, 0.0058, 0.0062,  ..., 0.0059, 0.0061, 0.0060],
         [0.9827, 0.9826, 0.9815,  ..., 0.9822, 0.9817, 0.9820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5185e-03, 5.4392e-03, 5.4128e-03,  ..., 5.5047e-03,
          5.4240e-03, 5.5069e-03],
         [5.5185e-03, 5.4392e-03, 5.4128e-03,  ..., 5.5047e-03,
          5.4240e-03, 5.5069e-03],
         [5.5185e-03, 5.4392e-03, 5.4128e-03,  ..., 5.5047e-03,
          5.4240e-03, 5.5069e-03],
         [9.8344e-01, 9.8368e-01, 9.8376e-01,  ..., 9.8349e-01,
          9.8373e-01, 9.8348e-01]],
        [[5.3936e-03, 5.4178e-03, 5.4845e-03,  ..., 2.5003e-05,
          5.4122e-03, 5.3823e-03],
         [5.3936e-03, 5.4178e-03, 5.4845e-03,  ..., 2.5003e-05,
          5.4122e-03, 5.3823e-03],
         [5.3936e-03, 5.4178e-03, 5.4845e-03,  ..., 9.9992e-01,
          5.4122e-03, 5.3823e-03],
         [9.8382e-01, 9.8375e-01, 9.8355e-01,  ..., 2.5003e-05,
          9.8376e-01, 9.8385e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 430:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:48,308 [Process: 0] Synchronize training processes
2024-08-16 16:41:48,309 [Process: 0] Evaluating...
2024-08-16 16:41:48,310 [Process: 0] EPOCH 430:
2024-08-16 16:41:48,312 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.9830, 0.9827, 0.9830,  ..., 0.9828, 0.9830, 0.9829]],
        [[0.0092, 0.0057, 0.0051,  ..., 0.0057, 0.0057, 0.0058],
         [0.0092, 0.0057, 0.0051,  ..., 0.0057, 0.0057, 0.0058],
         [0.0553, 0.0057, 0.9848,  ..., 0.0057, 0.0057, 0.0058],
         [0.9262, 0.9829, 0.0051,  ..., 0.9828, 0.9828, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3243e-03, 5.3445e-03, 5.5208e-03,  ..., 5.4042e-03,
          5.4398e-03, 5.5505e-03],
         [5.3243e-03, 5.3445e-03, 5.5208e-03,  ..., 5.4042e-03,
          5.4398e-03, 5.5505e-03],
         [5.3243e-03, 5.3445e-03, 5.5208e-03,  ..., 5.4042e-03,
          5.4398e-03, 5.5505e-03],
         [9.8403e-01, 9.8397e-01, 9.8344e-01,  ..., 9.8379e-01,
          9.8368e-01, 9.8335e-01]],
        [[5.3513e-03, 5.4035e-03, 5.4254e-03,  ..., 3.3519e-05,
          5.3571e-03, 5.3146e-03],
         [5.3513e-03, 5.4035e-03, 5.4254e-03,  ..., 3.3519e-05,
          5.3571e-03, 5.3146e-03],
         [5.3513e-03, 5.4035e-03, 5.4254e-03,  ..., 9.9990e-01,
          5.3571e-03, 5.3146e-03],
         [9.8395e-01, 9.8379e-01, 9.8372e-01,  ..., 3.3519e-05,
          9.8393e-01, 9.8406e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 431:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:50,375 [Process: 0] Synchronize training processes
2024-08-16 16:41:50,375 [Process: 0] Evaluating...
2024-08-16 16:41:50,377 [Process: 0] EPOCH 431:
2024-08-16 16:41:50,379 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0057, 0.0058,  ..., 0.0058, 0.0057, 0.0059],
         [0.0057, 0.0057, 0.0058,  ..., 0.0058, 0.0057, 0.0059],
         [0.0057, 0.0057, 0.0058,  ..., 0.0058, 0.0057, 0.0059],
         [0.9829, 0.9828, 0.9827,  ..., 0.9827, 0.9828, 0.9824]],
        [[0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.9826, 0.9823, 0.9823,  ..., 0.9823, 0.9825, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3244e-03, 5.4619e-03, 5.3679e-03,  ..., 5.4460e-03,
          5.4083e-03, 5.4805e-03],
         [5.3244e-03, 5.4619e-03, 5.3679e-03,  ..., 5.4460e-03,
          5.4083e-03, 5.4805e-03],
         [5.3244e-03, 5.4619e-03, 5.3679e-03,  ..., 5.4460e-03,
          5.4083e-03, 5.4805e-03],
         [9.8403e-01, 9.8361e-01, 9.8390e-01,  ..., 9.8366e-01,
          9.8378e-01, 9.8356e-01]],
        [[5.2358e-03, 5.2692e-03, 5.2012e-03,  ..., 3.2081e-05,
          5.2381e-03, 5.2911e-03],
         [5.2358e-03, 5.2692e-03, 5.2012e-03,  ..., 3.2081e-05,
          5.2381e-03, 5.2911e-03],
         [5.2358e-03, 5.2692e-03, 5.2012e-03,  ..., 9.9990e-01,
          5.2381e-03, 5.2911e-03],
         [9.8429e-01, 9.8419e-01, 9.8440e-01,  ..., 3.2081e-05,
          9.8429e-01, 9.8413e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 432:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:52,459 [Process: 0] Synchronize training processes
2024-08-16 16:41:52,459 [Process: 0] Evaluating...
2024-08-16 16:41:52,467 [Process: 0] EPOCH 432:
2024-08-16 16:41:52,469 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0053, 0.0051,  ..., 0.0052, 0.0053, 0.0052],
         [0.0053, 0.0053, 0.0051,  ..., 0.0052, 0.0053, 0.0052],
         [0.0053, 0.0053, 0.0051,  ..., 0.0052, 0.0053, 0.0052],
         [0.9841, 0.9840, 0.9846,  ..., 0.9843, 0.9840, 0.9843]],
        [[0.0055, 0.0051, 0.0054,  ..., 0.0054, 0.0053, 0.0053],
         [0.0055, 0.0051, 0.0054,  ..., 0.0054, 0.0053, 0.0053],
         [0.0055, 0.0051, 0.0054,  ..., 0.0054, 0.0053, 0.0053],
         [0.9835, 0.9846, 0.9839,  ..., 0.9838, 0.9840, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0058, 0.0055,  ..., 0.0056, 0.0052, 0.0055],
         [0.0057, 0.0058, 0.0055,  ..., 0.0056, 0.0052, 0.0055],
         [0.0057, 0.0058, 0.0055,  ..., 0.0056, 0.0052, 0.0055],
         [0.9830, 0.9827, 0.9835,  ..., 0.9832, 0.9844, 0.9834]],
        [[0.0054, 0.0052, 0.0054,  ..., 0.0016, 0.0053, 0.0054],
         [0.0054, 0.0052, 0.0054,  ..., 0.0016, 0.0053, 0.0054],
         [0.0054, 0.0052, 0.0054,  ..., 0.9953, 0.0053, 0.0054],
         [0.9839, 0.9843, 0.9839,  ..., 0.0016, 0.9840, 0.9839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 433:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:41:54,542 [Process: 0] Synchronize training processes
2024-08-16 16:41:54,542 [Process: 0] Evaluating...
2024-08-16 16:41:54,544 [Process: 0] EPOCH 433:
2024-08-16 16:41:54,546 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0058, 0.0060,  ..., 0.0059, 0.0057, 0.0058],
         [0.0057, 0.0058, 0.0060,  ..., 0.0059, 0.0057, 0.0058],
         [0.0057, 0.0058, 0.0060,  ..., 0.0059, 0.0057, 0.0058],
         [0.9830, 0.9827, 0.9819,  ..., 0.9824, 0.9829, 0.9826]],
        [[0.0060, 0.0059, 0.0059,  ..., 0.0057, 0.0059, 0.0059],
         [0.0060, 0.0059, 0.0059,  ..., 0.0057, 0.0059, 0.0059],
         [0.0060, 0.0059, 0.0059,  ..., 0.0057, 0.0059, 0.0059],
         [0.9819, 0.9822, 0.9823,  ..., 0.9828, 0.9823, 0.9824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2672e-03, 5.4281e-03, 5.4721e-03,  ..., 5.5390e-03,
          5.2656e-03, 5.3477e-03],
         [5.2672e-03, 5.4281e-03, 5.4721e-03,  ..., 5.5390e-03,
          5.2656e-03, 5.3477e-03],
         [5.2672e-03, 5.4281e-03, 5.4721e-03,  ..., 5.5390e-03,
          5.2656e-03, 5.3477e-03],
         [9.8420e-01, 9.8372e-01, 9.8358e-01,  ..., 9.8338e-01,
          9.8420e-01, 9.8396e-01]],
        [[5.0150e-03, 5.1515e-03, 5.0806e-03,  ..., 1.4822e-05,
          5.2527e-03, 5.2329e-03],
         [5.0150e-03, 5.1515e-03, 5.0806e-03,  ..., 1.4822e-05,
          5.2527e-03, 5.2329e-03],
         [5.0150e-03, 5.1515e-03, 5.0806e-03,  ..., 9.9996e-01,
          5.2527e-03, 5.2329e-03],
         [9.8495e-01, 9.8455e-01, 9.8476e-01,  ..., 1.4822e-05,
          9.8424e-01, 9.8430e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:56,641 [Process: 0] Synchronize training processes
2024-08-16 16:41:56,641 [Process: 0] Evaluating...
2024-08-16 16:41:56,643 [Process: 0] EPOCH 434:
2024-08-16 16:41:56,645 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 434:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0061, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0061, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0061, 0.0058,  ..., 0.0058, 0.0058, 0.0058],
         [0.9826, 0.9818, 0.9826,  ..., 0.9826, 0.9826, 0.9825]],
        [[0.0059, 0.0060, 0.0060,  ..., 0.0057, 0.0059, 0.0057],
         [0.0059, 0.0060, 0.0060,  ..., 0.0057, 0.0059, 0.0057],
         [0.0059, 0.0060, 0.0060,  ..., 0.0057, 0.0059, 0.0057],
         [0.9824, 0.9821, 0.9819,  ..., 0.9830, 0.9824, 0.9829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7743e-03, 5.8349e-03, 5.1454e-03,  ..., 5.5740e-03,
          5.2599e-03, 5.4753e-03],
         [5.7743e-03, 5.8349e-03, 5.1454e-03,  ..., 5.5740e-03,
          5.2599e-03, 5.4753e-03],
         [5.7743e-03, 5.8349e-03, 5.1454e-03,  ..., 5.5740e-03,
          5.2599e-03, 5.4753e-03],
         [9.8268e-01, 9.8250e-01, 9.8456e-01,  ..., 9.8328e-01,
          9.8422e-01, 9.8357e-01]],
        [[5.1501e-03, 5.0485e-03, 5.1717e-03,  ..., 7.7457e-06,
          5.0916e-03, 5.1600e-03],
         [5.1501e-03, 5.0485e-03, 5.1717e-03,  ..., 7.7457e-06,
          5.0916e-03, 5.1600e-03],
         [5.1501e-03, 5.0485e-03, 5.1717e-03,  ..., 9.9998e-01,
          5.0916e-03, 5.1600e-03],
         [9.8455e-01, 9.8485e-01, 9.8448e-01,  ..., 7.7457e-06,
          9.8473e-01, 9.8452e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:41:58,736 [Process: 0] Synchronize training processes
2024-08-16 16:41:58,736 [Process: 0] Evaluating...
2024-08-16 16:41:58,738 [Process: 0] EPOCH 435:
2024-08-16 16:41:58,740 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 435:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0057, 0.0057,  ..., 0.0057, 0.0056, 0.0057],
         [0.0057, 0.0057, 0.0057,  ..., 0.0057, 0.0056, 0.0057],
         [0.0057, 0.0057, 0.0057,  ..., 0.0057, 0.0056, 0.0057],
         [0.9828, 0.9829, 0.9830,  ..., 0.9829, 0.9833, 0.9830]],
        [[0.0059, 0.0057, 0.0059,  ..., 0.0057, 0.0055, 0.0056],
         [0.0059, 0.0057, 0.0059,  ..., 0.0057, 0.0055, 0.0056],
         [0.0059, 0.0057, 0.0059,  ..., 0.0057, 0.0055, 0.0056],
         [0.9824, 0.9828, 0.9824,  ..., 0.9828, 0.9836, 0.9831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:42:00,819 [Process: 0] Synchronize training processes
2024-08-16 16:42:00,819 [Process: 0] Evaluating...
2024-08-16 16:42:00,821 [Process: 0] EPOCH 436:
2024-08-16 16:42:00,823 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3541e-03, 5.7196e-03, 5.7654e-03,  ..., 5.2560e-03,
          5.2463e-03, 5.6322e-03],
         [5.3541e-03, 5.7196e-03, 5.7654e-03,  ..., 5.2560e-03,
          5.2463e-03, 5.6322e-03],
         [5.3541e-03, 5.7196e-03, 5.7654e-03,  ..., 5.2560e-03,
          5.2463e-03, 5.6322e-03],
         [9.8394e-01, 9.8284e-01, 9.8270e-01,  ..., 9.8423e-01,
          9.8426e-01, 9.8310e-01]],
        [[5.1641e-03, 5.1197e-03, 5.1100e-03,  ..., 1.1175e-04,
          5.0119e-03, 5.0429e-03],
         [5.1641e-03, 5.1197e-03, 5.1100e-03,  ..., 1.1175e-04,
          5.0119e-03, 5.0429e-03],
         [5.1641e-03, 5.1197e-03, 5.1100e-03,  ..., 9.9966e-01,
          5.0119e-03, 5.0429e-03],
         [9.8451e-01, 9.8464e-01, 9.8467e-01,  ..., 1.1175e-04,
          9.8496e-01, 9.8487e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 436:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0058, 0.0058,  ..., 0.0059, 0.0057, 0.0058],
         [0.0058, 0.0058, 0.0058,  ..., 0.0059, 0.0057, 0.0058],
         [0.0058, 0.0058, 0.0058,  ..., 0.0059, 0.0057, 0.0058],
         [0.9825, 0.9825, 0.9826,  ..., 0.9823, 0.9829, 0.9827]],
        [[0.0063, 0.0063, 0.0061,  ..., 0.0058, 0.0057, 0.0057],
         [0.0063, 0.0063, 0.0061,  ..., 0.0058, 0.0057, 0.0057],
         [0.0063, 0.0063, 0.0061,  ..., 0.0058, 0.0057, 0.0057],
         [0.9810, 0.9810, 0.9817,  ..., 0.9825, 0.9828, 0.9828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 16:42:02,894 [Process: 0] Synchronize training processes
2024-08-16 16:42:02,895 [Process: 0] Evaluating...
2024-08-16 16:42:02,897 [Process: 0] EPOCH 437:
2024-08-16 16:42:02,899 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6598e-03, 5.4435e-03, 5.6218e-03,  ..., 5.0790e-03,
          5.0457e-03, 5.5727e-03],
         [5.6598e-03, 5.4435e-03, 5.6218e-03,  ..., 5.0790e-03,
          5.0457e-03, 5.5727e-03],
         [5.6598e-03, 5.4435e-03, 5.6218e-03,  ..., 5.0790e-03,
          5.0457e-03, 5.5727e-03],
         [9.8302e-01, 9.8367e-01, 9.8313e-01,  ..., 9.8476e-01,
          9.8486e-01, 9.8328e-01]],
        [[4.8342e-03, 5.0617e-03, 4.9222e-03,  ..., 6.3237e-07,
          5.0812e-03, 4.9347e-03],
         [4.8342e-03, 5.0617e-03, 4.9222e-03,  ..., 6.3237e-07,
          5.0812e-03, 4.9347e-03],
         [4.8342e-03, 5.0617e-03, 4.9222e-03,  ..., 1.0000e+00,
          5.0812e-03, 4.9347e-03],
         [9.8550e-01, 9.8482e-01, 9.8523e-01,  ..., 6.3237e-07,
          9.8476e-01, 9.8520e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 437:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0056, 0.0056,  ..., 0.0056, 0.0057, 0.0056],
         [0.0056, 0.0056, 0.0056,  ..., 0.0056, 0.0057, 0.0056],
         [0.0056, 0.0056, 0.0056,  ..., 0.0056, 0.0057, 0.0056],
         [0.9833, 0.9833, 0.9833,  ..., 0.9831, 0.9830, 0.9832]],
        [[0.0061, 0.0062, 0.0057,  ..., 0.0057, 0.0058, 0.0057],
         [0.0061, 0.0062, 0.0057,  ..., 0.0057, 0.0058, 0.0057],
         [0.0061, 0.0062, 0.0057,  ..., 0.0057, 0.0058, 0.0057],
         [0.9818, 0.9815, 0.9830,  ..., 0.9830, 0.9825, 0.9830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:04,970 [Process: 0] Synchronize training processes
2024-08-16 16:42:04,970 [Process: 0] Evaluating...
2024-08-16 16:42:04,972 [Process: 0] EPOCH 438:
2024-08-16 16:42:04,974 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5583e-03, 5.3422e-03, 5.3306e-03,  ..., 5.4385e-03,
          5.2769e-03, 5.0761e-03],
         [5.5583e-03, 5.3422e-03, 5.3306e-03,  ..., 5.4385e-03,
          5.2769e-03, 5.0761e-03],
         [5.5583e-03, 5.3422e-03, 5.3306e-03,  ..., 5.4385e-03,
          5.2769e-03, 5.0761e-03],
         [9.8333e-01, 9.8397e-01, 9.8401e-01,  ..., 9.8368e-01,
          9.8417e-01, 9.8477e-01]],
        [[5.0452e-03, 5.0769e-03, 5.0060e-03,  ..., 3.4058e-04,
          5.0823e-03, 5.0856e-03],
         [5.0452e-03, 5.0769e-03, 5.0060e-03,  ..., 3.4058e-04,
          5.0823e-03, 5.0856e-03],
         [5.0452e-03, 5.0769e-03, 5.0060e-03,  ..., 9.9898e-01,
          5.0823e-03, 5.0856e-03],
         [9.8486e-01, 9.8477e-01, 9.8498e-01,  ..., 3.4058e-04,
          9.8475e-01, 9.8474e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 438:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0055, 0.0056,  ..., 0.0056, 0.0056, 0.0056],
         [0.0056, 0.0055, 0.0056,  ..., 0.0056, 0.0056, 0.0056],
         [0.0056, 0.0055, 0.0056,  ..., 0.0056, 0.0056, 0.0056],
         [0.9833, 0.9836, 0.9832,  ..., 0.9833, 0.9833, 0.9832]],
        [[0.0056, 0.0059, 0.0056,  ..., 0.0056, 0.0055, 0.0055],
         [0.0056, 0.0059, 0.0056,  ..., 0.0056, 0.0055, 0.0055],
         [0.0056, 0.0059, 0.0056,  ..., 0.0056, 0.0055, 0.0055],
         [0.9833, 0.9822, 0.9832,  ..., 0.9833, 0.9834, 0.9834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:07,061 [Process: 0] Synchronize training processes
2024-08-16 16:42:07,062 [Process: 0] Evaluating...
2024-08-16 16:42:07,064 [Process: 0] EPOCH 439:
2024-08-16 16:42:07,066 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1702e-03, 5.3518e-03, 5.3519e-03,  ..., 5.4006e-03,
          5.2901e-03, 5.1111e-03],
         [5.1702e-03, 5.3518e-03, 5.3519e-03,  ..., 5.4006e-03,
          5.2901e-03, 5.1111e-03],
         [5.1702e-03, 5.3518e-03, 5.3519e-03,  ..., 5.4006e-03,
          5.2901e-03, 5.1111e-03],
         [9.8449e-01, 9.8394e-01, 9.8394e-01,  ..., 9.8380e-01,
          9.8413e-01, 9.8467e-01]],
        [[4.6793e-03, 4.9195e-03, 4.8323e-03,  ..., 4.1587e-08,
          5.1010e-03, 5.0886e-03],
         [4.6793e-03, 4.9195e-03, 4.8323e-03,  ..., 3.2404e-08,
          5.1010e-03, 5.0886e-03],
         [4.6793e-03, 4.9195e-03, 4.8323e-03,  ..., 1.0000e+00,
          5.1010e-03, 5.0886e-03],
         [9.8596e-01, 9.8524e-01, 9.8550e-01,  ..., 3.2404e-08,
          9.8470e-01, 9.8473e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 439:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0054, 0.0054,  ..., 0.0055, 0.0055, 0.0056],
         [0.0055, 0.0054, 0.0054,  ..., 0.0055, 0.0055, 0.0056],
         [0.0055, 0.0054, 0.0054,  ..., 0.0055, 0.0055, 0.0056],
         [0.9836, 0.9837, 0.9837,  ..., 0.9834, 0.9834, 0.9833]],
        [[0.0054, 0.0054, 0.0056,  ..., 0.0055, 0.0057, 0.0056],
         [0.0054, 0.0054, 0.0056,  ..., 0.0055, 0.0057, 0.0056],
         [0.0054, 0.0054, 0.0056,  ..., 0.0055, 0.0057, 0.0056],
         [0.9837, 0.9839, 0.9832,  ..., 0.9835, 0.9829, 0.9833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:09,195 [Process: 0] Synchronize training processes
2024-08-16 16:42:09,195 [Process: 0] Evaluating...
2024-08-16 16:42:09,197 [Process: 0] EPOCH 440:
2024-08-16 16:42:09,199 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3757e-03, 5.5613e-03, 5.2380e-03,  ..., 5.2635e-03,
          5.1272e-03, 5.5682e-03],
         [5.3757e-03, 5.5613e-03, 5.2380e-03,  ..., 5.2635e-03,
          5.1272e-03, 5.5682e-03],
         [5.3757e-03, 5.5613e-03, 5.2380e-03,  ..., 5.2635e-03,
          5.1272e-03, 5.5682e-03],
         [9.8387e-01, 9.8332e-01, 9.8429e-01,  ..., 9.8421e-01,
          9.8462e-01, 9.8330e-01]],
        [[4.7060e-03, 4.8091e-03, 4.9700e-03,  ..., 6.7247e-07,
          5.0712e-03, 4.9345e-03],
         [4.7060e-03, 4.8091e-03, 4.9700e-03,  ..., 6.7247e-07,
          5.0712e-03, 4.9345e-03],
         [4.7060e-03, 4.8091e-03, 4.9700e-03,  ..., 1.0000e+00,
          5.0712e-03, 4.9345e-03],
         [9.8588e-01, 9.8557e-01, 9.8509e-01,  ..., 6.7247e-07,
          9.8479e-01, 9.8520e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 440:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0053, 0.0054,  ..., 0.0053, 0.0053, 0.0054],
         [0.0053, 0.0053, 0.0054,  ..., 0.0053, 0.0053, 0.0054],
         [0.0053, 0.0053, 0.0054,  ..., 0.0053, 0.0053, 0.0054],
         [0.9841, 0.9842, 0.9837,  ..., 0.9840, 0.9841, 0.9839]],
        [[0.0066, 0.0054, 0.0063,  ..., 0.0057, 0.0059, 0.0059],
         [0.0066, 0.0054, 0.0063,  ..., 0.0057, 0.0059, 0.0059],
         [0.0066, 0.0054, 0.0063,  ..., 0.0057, 0.0059, 0.0059],
         [0.9801, 0.9838, 0.9812,  ..., 0.9830, 0.9823, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:11,292 [Process: 0] Synchronize training processes
2024-08-16 16:42:11,292 [Process: 0] Evaluating...
2024-08-16 16:42:11,294 [Process: 0] EPOCH 441:
2024-08-16 16:42:11,296 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7976e-03, 5.0071e-03, 5.4934e-03,  ..., 5.1262e-03,
          5.1471e-03, 5.5047e-03],
         [4.7976e-03, 5.0071e-03, 5.4934e-03,  ..., 5.1262e-03,
          5.1471e-03, 5.5047e-03],
         [4.7976e-03, 5.0071e-03, 5.4934e-03,  ..., 5.1262e-03,
          5.1471e-03, 5.5047e-03],
         [9.8561e-01, 9.8498e-01, 9.8352e-01,  ..., 9.8462e-01,
          9.8456e-01, 9.8349e-01]],
        [[4.8857e-03, 5.0125e-03, 4.8622e-03,  ..., 1.2293e-04,
          4.9078e-03, 4.8955e-03],
         [4.8857e-03, 5.0125e-03, 4.8622e-03,  ..., 1.2293e-04,
          4.9078e-03, 4.8955e-03],
         [4.8857e-03, 5.0125e-03, 4.8622e-03,  ..., 9.9963e-01,
          4.9078e-03, 4.8955e-03],
         [9.8534e-01, 9.8496e-01, 9.8541e-01,  ..., 1.2293e-04,
          9.8528e-01, 9.8531e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 441:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0053, 0.0052,  ..., 0.0052, 0.0054, 0.0053],
         [0.0053, 0.0053, 0.0052,  ..., 0.0052, 0.0054, 0.0053],
         [0.0053, 0.0053, 0.0052,  ..., 0.0052, 0.0054, 0.0053],
         [0.9840, 0.9841, 0.9844,  ..., 0.9844, 0.9839, 0.9840]],
        [[0.0074, 0.0063, 0.0072,  ..., 0.0055, 0.0058, 0.0063],
         [0.0074, 0.0063, 0.0072,  ..., 0.0055, 0.0058, 0.0063],
         [0.0081, 0.0063, 0.0079,  ..., 0.0055, 0.0058, 0.0063],
         [0.9772, 0.9812, 0.9777,  ..., 0.9835, 0.9827, 0.9812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:13,373 [Process: 0] Synchronize training processes
2024-08-16 16:42:13,373 [Process: 0] Evaluating...
2024-08-16 16:42:13,382 [Process: 0] EPOCH 442:
2024-08-16 16:42:13,384 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0050, 0.0057, 0.0054,  ..., 0.0055, 0.0053, 0.0052],
         [0.0050, 0.0057, 0.0054,  ..., 0.0055, 0.0053, 0.0052],
         [0.0050, 0.0057, 0.0054,  ..., 0.0055, 0.0053, 0.0052],
         [0.9850, 0.9829, 0.9838,  ..., 0.9836, 0.9842, 0.9845]],
        [[0.0048, 0.0048, 0.0049,  ..., 0.0023, 0.0049, 0.0048],
         [0.0048, 0.0048, 0.0049,  ..., 0.0023, 0.0049, 0.0048],
         [0.0048, 0.0048, 0.0049,  ..., 0.9931, 0.0049, 0.0048],
         [0.9855, 0.9856, 0.9853,  ..., 0.0023, 0.9854, 0.9855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 442:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0054, 0.0053,  ..., 0.0055, 0.0053, 0.0054],
         [0.0054, 0.0054, 0.0053,  ..., 0.0055, 0.0053, 0.0054],
         [0.0054, 0.0054, 0.0053,  ..., 0.0055, 0.0053, 0.0054],
         [0.9839, 0.9839, 0.9841,  ..., 0.9836, 0.9840, 0.9837]],
        [[0.0060, 0.0072, 0.0063,  ..., 0.0063, 0.0057, 0.0060],
         [0.0060, 0.0072, 0.0063,  ..., 0.0063, 0.0057, 0.0060],
         [0.0060, 0.0079, 0.0063,  ..., 0.0068, 0.0061, 0.0065],
         [0.9819, 0.9777, 0.9811,  ..., 0.9806, 0.9824, 0.9814]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:15,468 [Process: 0] Synchronize training processes
2024-08-16 16:42:15,468 [Process: 0] Evaluating...
2024-08-16 16:42:15,470 [Process: 0] EPOCH 443:
2024-08-16 16:42:15,472 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2881e-03, 5.8510e-03, 5.1708e-03,  ..., 5.0702e-03,
          5.1273e-03, 4.9655e-03],
         [5.2881e-03, 5.8510e-03, 5.1708e-03,  ..., 5.0702e-03,
          5.1273e-03, 4.9655e-03],
         [5.2881e-03, 5.8510e-03, 5.1708e-03,  ..., 5.0702e-03,
          5.1273e-03, 4.9655e-03],
         [9.8414e-01, 9.8245e-01, 9.8449e-01,  ..., 9.8479e-01,
          9.8462e-01, 9.8510e-01]],
        [[4.8407e-03, 4.8636e-03, 4.9675e-03,  ..., 1.2239e-06,
          5.0286e-03, 4.8350e-03],
         [4.8407e-03, 4.8636e-03, 4.9675e-03,  ..., 1.2239e-06,
          5.0286e-03, 4.8350e-03],
         [4.8407e-03, 4.8636e-03, 4.9675e-03,  ..., 1.0000e+00,
          5.0286e-03, 4.8350e-03],
         [9.8548e-01, 9.8541e-01, 9.8510e-01,  ..., 1.2239e-06,
          9.8491e-01, 9.8549e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 443:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0057, 0.0058, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.9829, 0.9827, 0.9829,  ..., 0.9829, 0.9828, 0.9828]],
        [[0.0059, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0057],
         [0.0059, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0057],
         [0.0059, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0057],
         [0.9824, 0.9840, 0.9840,  ..., 0.9835, 0.9835, 0.9830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:17,542 [Process: 0] Synchronize training processes
2024-08-16 16:42:17,542 [Process: 0] Evaluating...
2024-08-16 16:42:17,544 [Process: 0] EPOCH 444:
2024-08-16 16:42:17,546 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0594e-03, 5.7596e-03, 5.1713e-03,  ..., 4.9985e-03,
          4.9805e-03, 5.2740e-03],
         [5.0594e-03, 5.7596e-03, 5.1713e-03,  ..., 4.9985e-03,
          4.9805e-03, 5.2740e-03],
         [5.0594e-03, 5.7596e-03, 5.1713e-03,  ..., 4.9985e-03,
          4.9805e-03, 5.2740e-03],
         [9.8482e-01, 9.8272e-01, 9.8449e-01,  ..., 9.8500e-01,
          9.8506e-01, 9.8418e-01]],
        [[4.8918e-03, 4.8769e-03, 4.9606e-03,  ..., 2.6798e-05,
          5.0674e-03, 4.8621e-03],
         [4.8918e-03, 4.8769e-03, 4.9606e-03,  ..., 2.6798e-05,
          5.0674e-03, 4.8621e-03],
         [4.8918e-03, 4.8769e-03, 4.9606e-03,  ..., 9.9992e-01,
          5.0674e-03, 4.8621e-03],
         [9.8532e-01, 9.8537e-01, 9.8512e-01,  ..., 2.6798e-05,
          9.8480e-01, 9.8541e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 444:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0057, 0.0057,  ..., 0.0057, 0.0057, 0.0058],
         [0.0058, 0.0057, 0.0057,  ..., 0.0057, 0.0057, 0.0058],
         [0.0058, 0.0057, 0.0057,  ..., 0.0057, 0.0057, 0.0058],
         [0.9825, 0.9830, 0.9830,  ..., 0.9830, 0.9830, 0.9826]],
        [[0.0056, 0.0055, 0.0052,  ..., 0.0055, 0.0053, 0.0055],
         [0.0056, 0.0055, 0.0052,  ..., 0.0055, 0.0053, 0.0055],
         [0.0056, 0.0055, 0.0052,  ..., 0.0055, 0.0053, 0.0055],
         [0.9832, 0.9836, 0.9844,  ..., 0.9836, 0.9840, 0.9835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4790e-03, 5.6367e-03, 5.5295e-03,  ..., 4.9282e-03,
          4.8772e-03, 5.1053e-03],
         [5.4790e-03, 5.6367e-03, 5.5295e-03,  ..., 4.9282e-03,
          4.8772e-03, 5.1053e-03],
         [5.4790e-03, 5.6367e-03, 5.5295e-03,  ..., 4.9282e-03,
          4.8772e-03, 5.1053e-03],
         [9.8356e-01, 9.8309e-01, 9.8341e-01,  ..., 9.8522e-01,
          9.8537e-01, 9.8468e-01]],
        [[5.1587e-03, 4.9528e-03, 4.9542e-03,  ..., 5.0096e-06,
          5.0693e-03, 4.9240e-03],
         [5.1587e-03, 4.9528e-03, 4.9542e-03,  ..., 5.0096e-06,
          5.0693e-03, 4.9240e-03],
         [5.1587e-03, 4.9528e-03, 4.9542e-03,  ..., 9.9998e-01,
          5.0693e-03, 4.9240e-03],
         [9.8452e-01, 9.8514e-01, 9.8514e-01,  ..., 5.0096e-06,
          9.8479e-01, 9.8523e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 445:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0057],
         [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0057],
         [0.0058, 0.0058, 0.0058,  ..., 0.0058, 0.0058, 0.0057],
         [0.9827, 0.9826, 0.9826,  ..., 0.9826, 0.9825, 0.9830]],
        [[0.0056, 0.0052, 0.0052,  ..., 0.0054, 0.0055, 0.0053],
         [0.0056, 0.0052, 0.0052,  ..., 0.0054, 0.0055, 0.0053],
         [0.0056, 0.0052, 0.0052,  ..., 0.0054, 0.0055, 0.0053],
         [0.9833, 0.9844, 0.9843,  ..., 0.9837, 0.9835, 0.9840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:19,620 [Process: 0] Synchronize training processes
2024-08-16 16:42:19,621 [Process: 0] Evaluating...
2024-08-16 16:42:19,623 [Process: 0] EPOCH 445:
2024-08-16 16:42:19,626 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1558e-03, 5.7572e-03, 5.2954e-03,  ..., 5.2418e-03,
          5.1526e-03, 5.2718e-03],
         [5.1558e-03, 5.7572e-03, 5.2954e-03,  ..., 5.2418e-03,
          5.1526e-03, 5.2718e-03],
         [5.1558e-03, 5.7572e-03, 5.2954e-03,  ..., 5.2418e-03,
          5.1526e-03, 5.2718e-03],
         [9.8453e-01, 9.8273e-01, 9.8411e-01,  ..., 9.8427e-01,
          9.8454e-01, 9.8418e-01]],
        [[4.8276e-03, 4.8789e-03, 4.9328e-03,  ..., 4.2517e-06,
          5.1114e-03, 5.1651e-03],
         [4.8276e-03, 4.8789e-03, 4.9328e-03,  ..., 4.2517e-06,
          5.1114e-03, 5.1651e-03],
         [4.8276e-03, 4.8789e-03, 4.9328e-03,  ..., 9.9999e-01,
          5.1114e-03, 5.1651e-03],
         [9.8552e-01, 9.8536e-01, 9.8520e-01,  ..., 4.2517e-06,
          9.8467e-01, 9.8450e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 446:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0057, 0.0057,  ..., 0.0058, 0.0056, 0.0057],
         [0.0056, 0.0057, 0.0057,  ..., 0.0058, 0.0056, 0.0057],
         [0.0056, 0.0057, 0.0057,  ..., 0.0058, 0.0056, 0.0057],
         [0.9831, 0.9828, 0.9830,  ..., 0.9827, 0.9832, 0.9828]],
        [[0.0054, 0.0053, 0.0053,  ..., 0.0051, 0.0052, 0.0055],
         [0.0054, 0.0053, 0.0053,  ..., 0.0051, 0.0052, 0.0055],
         [0.0054, 0.0053, 0.0053,  ..., 0.0051, 0.0052, 0.0055],
         [0.9839, 0.9841, 0.9841,  ..., 0.9848, 0.9844, 0.9835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:21,648 [Process: 0] Synchronize training processes
2024-08-16 16:42:21,649 [Process: 0] Evaluating...
2024-08-16 16:42:21,651 [Process: 0] EPOCH 446:
2024-08-16 16:42:21,653 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2998e-03, 5.1194e-03, 5.1053e-03,  ..., 5.2597e-03,
          5.2460e-03, 5.2207e-03],
         [5.2998e-03, 5.1194e-03, 5.1053e-03,  ..., 5.2597e-03,
          5.2460e-03, 5.2207e-03],
         [5.2998e-03, 5.1194e-03, 5.1053e-03,  ..., 5.2597e-03,
          5.2460e-03, 5.2207e-03],
         [9.8410e-01, 9.8464e-01, 9.8468e-01,  ..., 9.8422e-01,
          9.8426e-01, 9.8434e-01]],
        [[5.0670e-03, 5.1074e-03, 5.0139e-03,  ..., 1.3382e-07,
          5.0871e-03, 5.1266e-03],
         [5.0670e-03, 5.1074e-03, 5.0139e-03,  ..., 1.3382e-07,
          5.0871e-03, 5.1266e-03],
         [5.0670e-03, 5.1074e-03, 5.0139e-03,  ..., 1.0000e+00,
          5.0871e-03, 5.1266e-03],
         [9.8480e-01, 9.8468e-01, 9.8496e-01,  ..., 1.3382e-07,
          9.8474e-01, 9.8462e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 447:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0058, 0.0056,  ..., 0.0059, 0.0057, 0.0056],
         [0.0057, 0.0058, 0.0056,  ..., 0.0059, 0.0057, 0.0056],
         [0.0057, 0.0058, 0.0056,  ..., 0.0059, 0.0057, 0.0056],
         [0.9829, 0.9827, 0.9831,  ..., 0.9824, 0.9828, 0.9831]],
        [[0.0054, 0.0050, 0.0048,  ..., 0.0052, 0.0054, 0.0054],
         [0.0054, 0.0050, 0.0048,  ..., 0.0052, 0.0054, 0.0054],
         [0.0054, 0.0050, 0.0048,  ..., 0.0052, 0.0054, 0.0054],
         [0.9839, 0.9849, 0.9856,  ..., 0.9844, 0.9837, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:23,746 [Process: 0] Synchronize training processes
2024-08-16 16:42:23,746 [Process: 0] Evaluating...
2024-08-16 16:42:23,748 [Process: 0] EPOCH 447:
2024-08-16 16:42:23,750 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7662e-03, 5.3883e-03, 5.5943e-03,  ..., 5.2988e-03,
          5.0545e-03, 5.2643e-03],
         [5.7662e-03, 5.3883e-03, 5.5943e-03,  ..., 5.2988e-03,
          5.0545e-03, 5.2643e-03],
         [5.7662e-03, 5.3883e-03, 5.5943e-03,  ..., 5.2988e-03,
          5.0545e-03, 5.2643e-03],
         [9.8270e-01, 9.8384e-01, 9.8322e-01,  ..., 9.8410e-01,
          9.8484e-01, 9.8421e-01]],
        [[5.0770e-03, 5.0827e-03, 5.1201e-03,  ..., 5.6629e-06,
          5.1653e-03, 5.1151e-03],
         [5.0770e-03, 5.0827e-03, 5.1201e-03,  ..., 5.3790e-06,
          5.1653e-03, 5.1151e-03],
         [5.0770e-03, 5.0827e-03, 5.1201e-03,  ..., 9.9998e-01,
          5.1653e-03, 5.1151e-03],
         [9.8477e-01, 9.8475e-01, 9.8464e-01,  ..., 5.3790e-06,
          9.8450e-01, 9.8465e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 448:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:42:25,838 [Process: 0] Synchronize training processes
2024-08-16 16:42:25,839 [Process: 0] Evaluating...
2024-08-16 16:42:25,841 [Process: 0] EPOCH 448:
2024-08-16 16:42:25,843 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0058, 0.0058,  ..., 0.0058, 0.0059, 0.0057],
         [0.0057, 0.0058, 0.0058,  ..., 0.0058, 0.0059, 0.0057],
         [0.0057, 0.0058, 0.0058,  ..., 0.0058, 0.0059, 0.0057],
         [0.9828, 0.9827, 0.9825,  ..., 0.9825, 0.9823, 0.9829]],
        [[0.0053, 0.0058, 0.0053,  ..., 0.0058, 0.0055, 0.0056],
         [0.0053, 0.0058, 0.0053,  ..., 0.0058, 0.0055, 0.0056],
         [0.0053, 0.0058, 0.0053,  ..., 0.0058, 0.0055, 0.0056],
         [0.9841, 0.9827, 0.9842,  ..., 0.9825, 0.9835, 0.9832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0471e-03, 5.3788e-03, 5.3426e-03,  ..., 5.3709e-03,
          5.3424e-03, 5.5286e-03],
         [5.0471e-03, 5.3788e-03, 5.3426e-03,  ..., 5.3709e-03,
          5.3424e-03, 5.5286e-03],
         [5.0471e-03, 5.3788e-03, 5.3426e-03,  ..., 5.3709e-03,
          5.3424e-03, 5.5286e-03],
         [9.8486e-01, 9.8386e-01, 9.8397e-01,  ..., 9.8389e-01,
          9.8397e-01, 9.8341e-01]],
        [[5.0642e-03, 5.1337e-03, 5.0839e-03,  ..., 4.0362e-07,
          5.1818e-03, 5.1945e-03],
         [5.0642e-03, 5.1337e-03, 5.0839e-03,  ..., 4.0362e-07,
          5.1818e-03, 5.1945e-03],
         [5.0642e-03, 5.1337e-03, 5.0839e-03,  ..., 1.0000e+00,
          5.1818e-03, 5.1945e-03],
         [9.8481e-01, 9.8460e-01, 9.8475e-01,  ..., 4.0362e-07,
          9.8445e-01, 9.8442e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 449:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:27,957 [Process: 0] Synchronize training processes
2024-08-16 16:42:27,957 [Process: 0] Evaluating...
2024-08-16 16:42:27,959 [Process: 0] EPOCH 449:
2024-08-16 16:42:27,961 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0056,  ..., 0.0054, 0.0056, 0.0056],
         [0.0055, 0.0055, 0.0056,  ..., 0.0054, 0.0056, 0.0056],
         [0.0055, 0.0055, 0.0056,  ..., 0.0054, 0.0056, 0.0056],
         [0.9836, 0.9836, 0.9831,  ..., 0.9837, 0.9833, 0.9833]],
        [[0.0051, 0.0054, 0.0054,  ..., 0.0055, 0.0053, 0.0052],
         [0.0051, 0.0054, 0.0054,  ..., 0.0055, 0.0053, 0.0052],
         [0.0051, 0.0054, 0.0054,  ..., 0.0055, 0.0053, 0.0052],
         [0.9846, 0.9838, 0.9838,  ..., 0.9834, 0.9840, 0.9845]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2487e-03, 5.4645e-03, 6.2675e-03,  ..., 5.5302e-03,
          5.3444e-03, 5.2493e-03],
         [6.2487e-03, 5.4645e-03, 6.2675e-03,  ..., 5.5302e-03,
          5.3444e-03, 5.2493e-03],
         [6.2487e-03, 5.4645e-03, 6.2675e-03,  ..., 5.5302e-03,
          5.3444e-03, 5.2493e-03],
         [9.8125e-01, 9.8361e-01, 9.8120e-01,  ..., 9.8341e-01,
          9.8397e-01, 9.8425e-01]],
        [[5.0095e-03, 5.0719e-03, 5.0563e-03,  ..., 4.8966e-10,
          5.2048e-03, 5.2401e-03],
         [5.0095e-03, 5.0719e-03, 5.0563e-03,  ..., 4.8966e-10,
          5.2048e-03, 5.2401e-03],
         [5.0095e-03, 5.0719e-03, 5.0563e-03,  ..., 1.0000e+00,
          5.2048e-03, 5.2401e-03],
         [9.8497e-01, 9.8478e-01, 9.8483e-01,  ..., 4.8966e-10,
          9.8439e-01, 9.8428e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 450:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:30,041 [Process: 0] Synchronize training processes
2024-08-16 16:42:30,042 [Process: 0] Evaluating...
2024-08-16 16:42:30,044 [Process: 0] EPOCH 450:
2024-08-16 16:42:30,046 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0056, 0.0054,  ..., 0.0055, 0.0056, 0.0056],
         [0.0056, 0.0056, 0.0054,  ..., 0.0055, 0.0056, 0.0056],
         [0.0056, 0.0056, 0.0054,  ..., 0.0055, 0.0056, 0.0056],
         [0.9833, 0.9832, 0.9837,  ..., 0.9834, 0.9833, 0.9833]],
        [[0.0056, 0.0052, 0.0055,  ..., 0.0055, 0.0053, 0.0057],
         [0.0056, 0.0052, 0.0055,  ..., 0.0055, 0.0053, 0.0057],
         [0.0056, 0.0052, 0.0055,  ..., 0.0055, 0.0053, 0.0057],
         [0.9831, 0.9844, 0.9834,  ..., 0.9834, 0.9840, 0.9829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1742e-03, 5.6363e-03, 5.8095e-03,  ..., 5.6220e-03,
          5.1524e-03, 5.0166e-03],
         [5.1742e-03, 5.6363e-03, 5.8095e-03,  ..., 5.6220e-03,
          5.1524e-03, 5.0166e-03],
         [5.1742e-03, 5.6363e-03, 5.8095e-03,  ..., 5.6220e-03,
          5.1524e-03, 5.0166e-03],
         [9.8448e-01, 9.8309e-01, 9.8257e-01,  ..., 9.8313e-01,
          9.8454e-01, 9.8495e-01]],
        [[5.0488e-03, 5.0240e-03, 4.9047e-03,  ..., 3.4607e-06,
          5.1787e-03, 5.1284e-03],
         [5.0488e-03, 5.0240e-03, 4.9047e-03,  ..., 3.4607e-06,
          5.1787e-03, 5.1284e-03],
         [5.0488e-03, 5.0240e-03, 4.9047e-03,  ..., 9.9999e-01,
          5.1787e-03, 5.1284e-03],
         [9.8485e-01, 9.8493e-01, 9.8529e-01,  ..., 3.4607e-06,
          9.8446e-01, 9.8461e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 451:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:32,084 [Process: 0] Synchronize training processes
2024-08-16 16:42:32,085 [Process: 0] Evaluating...
2024-08-16 16:42:32,087 [Process: 0] EPOCH 451:
2024-08-16 16:42:32,089 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0054, 0.0055,  ..., 0.0055, 0.0055, 0.0054],
         [0.0056, 0.0054, 0.0055,  ..., 0.0055, 0.0055, 0.0054],
         [0.0056, 0.0054, 0.0055,  ..., 0.0055, 0.0055, 0.0054],
         [0.9831, 0.9838, 0.9834,  ..., 0.9836, 0.9835, 0.9837]],
        [[0.0052, 0.0053, 0.0056,  ..., 0.0056, 0.0054, 0.0053],
         [0.0052, 0.0053, 0.0056,  ..., 0.0056, 0.0054, 0.0053],
         [0.0052, 0.0053, 0.0056,  ..., 0.0056, 0.0054, 0.0053],
         [0.9844, 0.9842, 0.9833,  ..., 0.9834, 0.9837, 0.9842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8436e-03, 5.5800e-03, 6.5153e-03,  ..., 5.0932e-03,
          5.2141e-03, 5.4246e-03],
         [5.8436e-03, 5.5800e-03, 6.5153e-03,  ..., 5.0932e-03,
          5.2141e-03, 5.4246e-03],
         [5.8436e-03, 5.5800e-03, 6.5153e-03,  ..., 5.0932e-03,
          5.2141e-03, 5.4246e-03],
         [9.8247e-01, 9.8326e-01, 9.8045e-01,  ..., 9.8472e-01,
          9.8436e-01, 9.8373e-01]],
        [[4.9633e-03, 4.9036e-03, 4.9335e-03,  ..., 5.1229e-07,
          4.9972e-03, 5.0263e-03],
         [4.9633e-03, 4.9036e-03, 4.9335e-03,  ..., 5.1229e-07,
          4.9972e-03, 5.0263e-03],
         [4.9633e-03, 4.9036e-03, 4.9335e-03,  ..., 1.0000e+00,
          4.9972e-03, 5.0263e-03],
         [9.8511e-01, 9.8529e-01, 9.8520e-01,  ..., 5.1229e-07,
          9.8501e-01, 9.8492e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 452:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:34,060 [Process: 0] Synchronize training processes
2024-08-16 16:42:34,061 [Process: 0] Evaluating...
2024-08-16 16:42:34,069 [Process: 0] EPOCH 452:
2024-08-16 16:42:34,071 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0055,  ..., 0.0055, 0.0055, 0.0054],
         [0.0055, 0.0055, 0.0055,  ..., 0.0055, 0.0055, 0.0054],
         [0.0055, 0.0055, 0.0055,  ..., 0.0055, 0.0055, 0.0054],
         [0.9835, 0.9834, 0.9834,  ..., 0.9835, 0.9835, 0.9837]],
        [[0.0054, 0.0054, 0.0054,  ..., 0.0055, 0.0055, 0.0055],
         [0.0054, 0.0054, 0.0054,  ..., 0.0055, 0.0055, 0.0055],
         [0.0054, 0.0054, 0.0054,  ..., 0.0055, 0.0055, 0.0055],
         [0.9839, 0.9838, 0.9837,  ..., 0.9834, 0.9835, 0.9836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9193e-03, 6.5919e-03, 6.8322e-03,  ..., 5.0258e-03,
          5.3222e-03, 5.5439e-03],
         [5.9193e-03, 6.5919e-03, 6.8322e-03,  ..., 5.0258e-03,
          5.3222e-03, 5.5439e-03],
         [5.9193e-03, 6.5919e-03, 6.8322e-03,  ..., 5.0258e-03,
          5.3222e-03, 5.5439e-03],
         [9.8224e-01, 9.8022e-01, 9.7950e-01,  ..., 9.8492e-01,
          9.8403e-01, 9.8337e-01]],
        [[4.9369e-03, 4.9054e-03, 4.9058e-03,  ..., 2.9608e-05,
          5.1011e-03, 5.1635e-03],
         [4.9369e-03, 4.9054e-03, 4.9058e-03,  ..., 2.9608e-05,
          5.1011e-03, 5.1635e-03],
         [4.9369e-03, 4.9054e-03, 4.9058e-03,  ..., 9.9991e-01,
          5.1011e-03, 5.1635e-03],
         [9.8519e-01, 9.8528e-01, 9.8528e-01,  ..., 2.9608e-05,
          9.8470e-01, 9.8451e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 453:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:36,054 [Process: 0] Synchronize training processes
2024-08-16 16:42:36,055 [Process: 0] Evaluating...
2024-08-16 16:42:36,057 [Process: 0] EPOCH 453:
2024-08-16 16:42:36,059 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0057, 0.0057, 0.0058,  ..., 0.0057, 0.0058, 0.0057],
         [0.0057, 0.0057, 0.0058,  ..., 0.0057, 0.0058, 0.0057],
         [0.0057, 0.0057, 0.0058,  ..., 0.0057, 0.0058, 0.0057],
         [0.9830, 0.9830, 0.9826,  ..., 0.9828, 0.9825, 0.9830]],
        [[0.0060, 0.0055, 0.0056,  ..., 0.0057, 0.0057, 0.0057],
         [0.0060, 0.0055, 0.0056,  ..., 0.0057, 0.0057, 0.0057],
         [0.0060, 0.0055, 0.0056,  ..., 0.0057, 0.0057, 0.0057],
         [0.9821, 0.9834, 0.9831,  ..., 0.9828, 0.9829, 0.9830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3612e-03, 6.7259e-03, 6.2059e-03,  ..., 6.2181e-03,
          5.4892e-03, 5.8610e-03],
         [5.3612e-03, 6.7259e-03, 6.2059e-03,  ..., 6.2181e-03,
          5.4892e-03, 5.8610e-03],
         [5.3612e-03, 6.7259e-03, 6.2059e-03,  ..., 6.2181e-03,
          5.4892e-03, 5.8610e-03],
         [9.8392e-01, 9.7982e-01, 9.8138e-01,  ..., 9.8135e-01,
          9.8353e-01, 9.8242e-01]],
        [[5.2428e-03, 5.2092e-03, 5.3091e-03,  ..., 3.9294e-08,
          5.2285e-03, 5.3129e-03],
         [5.2428e-03, 5.2092e-03, 5.3091e-03,  ..., 4.3204e-09,
          5.2285e-03, 5.3129e-03],
         [5.2428e-03, 5.2092e-03, 5.3091e-03,  ..., 1.0000e+00,
          5.2285e-03, 5.3129e-03],
         [9.8427e-01, 9.8437e-01, 9.8407e-01,  ..., 4.3204e-09,
          9.8431e-01, 9.8406e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 454:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:38,035 [Process: 0] Synchronize training processes
2024-08-16 16:42:38,036 [Process: 0] Evaluating...
2024-08-16 16:42:38,038 [Process: 0] EPOCH 454:
2024-08-16 16:42:38,040 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0059, 0.0059,  ..., 0.0057, 0.0057, 0.0058],
         [0.0058, 0.0059, 0.0059,  ..., 0.0057, 0.0057, 0.0058],
         [0.0058, 0.0059, 0.0059,  ..., 0.0057, 0.0057, 0.0058],
         [0.9827, 0.9824, 0.9823,  ..., 0.9828, 0.9828, 0.9825]],
        [[0.0063, 0.0063, 0.0058,  ..., 0.0057, 0.0058, 0.0058],
         [0.0063, 0.0063, 0.0058,  ..., 0.0057, 0.0058, 0.0058],
         [0.0063, 0.0063, 0.0058,  ..., 0.0057, 0.0058, 0.0058],
         [0.9811, 0.9810, 0.9827,  ..., 0.9828, 0.9827, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9706e-03, 5.7431e-03, 5.9016e-03,  ..., 5.4035e-03,
          5.1588e-03, 5.5932e-03],
         [5.9706e-03, 5.7431e-03, 5.9016e-03,  ..., 5.4035e-03,
          5.1588e-03, 5.5932e-03],
         [5.9706e-03, 5.7431e-03, 5.9016e-03,  ..., 5.4035e-03,
          5.1588e-03, 5.5932e-03],
         [9.8209e-01, 9.8277e-01, 9.8230e-01,  ..., 9.8379e-01,
          9.8452e-01, 9.8322e-01]],
        [[5.1517e-03, 5.2898e-03, 5.1081e-03,  ..., 1.1099e-08,
          5.3558e-03, 5.3015e-03],
         [5.1517e-03, 5.2898e-03, 5.1081e-03,  ..., 1.1099e-08,
          5.3558e-03, 5.3015e-03],
         [5.1517e-03, 5.2898e-03, 5.1081e-03,  ..., 1.0000e+00,
          5.3558e-03, 5.3015e-03],
         [9.8454e-01, 9.8413e-01, 9.8468e-01,  ..., 1.1099e-08,
          9.8393e-01, 9.8410e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 455:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:40,029 [Process: 0] Synchronize training processes
2024-08-16 16:42:40,030 [Process: 0] Evaluating...
2024-08-16 16:42:40,032 [Process: 0] EPOCH 455:
2024-08-16 16:42:40,034 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0056,  ..., 0.0056, 0.0057, 0.0057],
         [0.0055, 0.0055, 0.0056,  ..., 0.0056, 0.0057, 0.0057],
         [0.0055, 0.0055, 0.0056,  ..., 0.0056, 0.0057, 0.0057],
         [0.9834, 0.9835, 0.9831,  ..., 0.9831, 0.9828, 0.9830]],
        [[0.0059, 0.0058, 0.0056,  ..., 0.0055, 0.0056, 0.0056],
         [0.0059, 0.0058, 0.0056,  ..., 0.0055, 0.0056, 0.0056],
         [0.0059, 0.0058, 0.0056,  ..., 0.0055, 0.0056, 0.0056],
         [0.9822, 0.9827, 0.9831,  ..., 0.9836, 0.9832, 0.9832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4569e-03, 5.0726e-03, 5.3088e-03,  ..., 5.3561e-03,
          5.0087e-03, 5.2194e-03],
         [5.4569e-03, 5.0726e-03, 5.3088e-03,  ..., 5.3561e-03,
          5.0087e-03, 5.2194e-03],
         [5.4569e-03, 5.0726e-03, 5.3088e-03,  ..., 5.3561e-03,
          5.0087e-03, 5.2194e-03],
         [9.8363e-01, 9.8478e-01, 9.8407e-01,  ..., 9.8393e-01,
          9.8497e-01, 9.8434e-01]],
        [[5.0894e-03, 5.2167e-03, 5.0580e-03,  ..., 4.0408e-12,
          5.2503e-03, 5.2052e-03],
         [5.0894e-03, 5.2167e-03, 5.0580e-03,  ..., 3.2270e-12,
          5.2503e-03, 5.2052e-03],
         [5.0894e-03, 5.2167e-03, 5.0580e-03,  ..., 1.0000e+00,
          5.2503e-03, 5.2052e-03],
         [9.8473e-01, 9.8435e-01, 9.8483e-01,  ..., 3.2270e-12,
          9.8425e-01, 9.8438e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 456:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:42,071 [Process: 0] Synchronize training processes
2024-08-16 16:42:42,071 [Process: 0] Evaluating...
2024-08-16 16:42:42,073 [Process: 0] EPOCH 456:
2024-08-16 16:42:42,075 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0056, 0.0057,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0056, 0.0057,  ..., 0.0058, 0.0058, 0.0058],
         [0.0058, 0.0056, 0.0057,  ..., 0.0058, 0.0058, 0.0058],
         [0.9827, 0.9831, 0.9829,  ..., 0.9826, 0.9825, 0.9827]],
        [[0.0060, 0.0057, 0.0058,  ..., 0.0057, 0.0056, 0.0059],
         [0.0060, 0.0057, 0.0058,  ..., 0.0057, 0.0056, 0.0059],
         [0.0060, 0.0057, 0.0058,  ..., 0.0057, 0.0056, 0.0059],
         [0.9821, 0.9830, 0.9825,  ..., 0.9828, 0.9831, 0.9822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7644e-03, 5.5915e-03, 5.1209e-03,  ..., 5.3794e-03,
          5.1608e-03, 5.2415e-03],
         [5.7644e-03, 5.5915e-03, 5.1209e-03,  ..., 5.3794e-03,
          5.1608e-03, 5.2415e-03],
         [5.7644e-03, 5.5915e-03, 5.1209e-03,  ..., 5.3794e-03,
          5.1608e-03, 5.2415e-03],
         [9.8271e-01, 9.8323e-01, 9.8464e-01,  ..., 9.8386e-01,
          9.8452e-01, 9.8428e-01]],
        [[5.3183e-03, 5.3043e-03, 5.2933e-03,  ..., 5.9592e-10,
          5.4175e-03, 5.4714e-03],
         [5.3183e-03, 5.3043e-03, 5.2933e-03,  ..., 5.2303e-10,
          5.4175e-03, 5.4714e-03],
         [5.3183e-03, 5.3043e-03, 5.2933e-03,  ..., 1.0000e+00,
          5.4175e-03, 5.4714e-03],
         [9.8405e-01, 9.8409e-01, 9.8412e-01,  ..., 5.2303e-10,
          9.8375e-01, 9.8359e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 457:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:42:43,996 [Process: 0] Synchronize training processes
2024-08-16 16:42:43,996 [Process: 0] Evaluating...
2024-08-16 16:42:43,998 [Process: 0] EPOCH 457:
2024-08-16 16:42:44,000 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.0059, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.0059, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0058],
         [0.9823, 0.9823, 0.9822,  ..., 0.9822, 0.9825, 0.9826]],
        [[0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0059],
         [0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0059],
         [0.0058, 0.0059, 0.0059,  ..., 0.0059, 0.0058, 0.0059],
         [0.9827, 0.9823, 0.9822,  ..., 0.9823, 0.9825, 0.9823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1283e-03, 5.2815e-03, 5.5376e-03,  ..., 5.3562e-03,
          5.1021e-03, 5.5545e-03],
         [5.1283e-03, 5.2815e-03, 5.5376e-03,  ..., 5.3562e-03,
          5.1021e-03, 5.5545e-03],
         [5.1283e-03, 5.2815e-03, 5.5376e-03,  ..., 5.3562e-03,
          5.1021e-03, 5.5545e-03],
         [9.8461e-01, 9.8416e-01, 9.8339e-01,  ..., 9.8393e-01,
          9.8469e-01, 9.8334e-01]],
        [[5.2008e-03, 5.0788e-03, 5.1601e-03,  ..., 3.3775e-06,
          5.2824e-03, 5.3173e-03],
         [5.2008e-03, 5.0788e-03, 5.1601e-03,  ..., 3.3775e-06,
          5.2824e-03, 5.3173e-03],
         [5.2008e-03, 5.0788e-03, 5.1601e-03,  ..., 9.9999e-01,
          5.2824e-03, 5.3173e-03],
         [9.8440e-01, 9.8476e-01, 9.8452e-01,  ..., 3.3775e-06,
          9.8415e-01, 9.8405e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 458:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0055, 0.0054,  ..., 0.0055, 0.0054, 0.0054],
         [0.0056, 0.0055, 0.0054,  ..., 0.0055, 0.0054, 0.0054],
         [0.0056, 0.0055, 0.0054,  ..., 0.0055, 0.0054, 0.0054],
         [0.9833, 0.9835, 0.9839,  ..., 0.9836, 0.9837, 0.9838]],
        [[0.0054, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0055],
         [0.0054, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0055],
         [0.0054, 0.0053, 0.0053,  ..., 0.0055, 0.0055, 0.0055],
         [0.9839, 0.9841, 0.9841,  ..., 0.9834, 0.9836, 0.9834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:45,914 [Process: 0] Synchronize training processes
2024-08-16 16:42:45,915 [Process: 0] Evaluating...
2024-08-16 16:42:45,917 [Process: 0] EPOCH 458:
2024-08-16 16:42:45,919 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3161e-03, 5.1718e-03, 5.3695e-03,  ..., 5.0600e-03,
          4.8886e-03, 5.0725e-03],
         [5.3161e-03, 5.1718e-03, 5.3695e-03,  ..., 5.0600e-03,
          4.8886e-03, 5.0725e-03],
         [5.3161e-03, 5.1718e-03, 5.3695e-03,  ..., 5.0600e-03,
          4.8886e-03, 5.0725e-03],
         [9.8405e-01, 9.8448e-01, 9.8389e-01,  ..., 9.8482e-01,
          9.8533e-01, 9.8478e-01]],
        [[5.1615e-03, 5.0448e-03, 5.0112e-03,  ..., 6.0040e-08,
          5.1987e-03, 5.2158e-03],
         [5.1615e-03, 5.0448e-03, 5.0112e-03,  ..., 6.0040e-08,
          5.1987e-03, 5.2158e-03],
         [5.1615e-03, 5.0448e-03, 5.0112e-03,  ..., 1.0000e+00,
          5.1987e-03, 5.2158e-03],
         [9.8452e-01, 9.8487e-01, 9.8497e-01,  ..., 6.0040e-08,
          9.8440e-01, 9.8435e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 459:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0056, 0.0057,  ..., 0.0056, 0.0056, 0.0057],
         [0.0055, 0.0056, 0.0057,  ..., 0.0056, 0.0056, 0.0057],
         [0.0055, 0.0056, 0.0057,  ..., 0.0056, 0.0056, 0.0057],
         [0.9835, 0.9831, 0.9830,  ..., 0.9833, 0.9831, 0.9829]],
        [[0.0058, 0.0060, 0.0058,  ..., 0.0057, 0.0057, 0.0057],
         [0.0058, 0.0060, 0.0058,  ..., 0.0057, 0.0057, 0.0057],
         [0.0058, 0.0060, 0.0058,  ..., 0.0057, 0.0057, 0.0057],
         [0.9826, 0.9820, 0.9825,  ..., 0.9828, 0.9829, 0.9829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:47,827 [Process: 0] Synchronize training processes
2024-08-16 16:42:47,828 [Process: 0] Evaluating...
2024-08-16 16:42:47,830 [Process: 0] EPOCH 459:
2024-08-16 16:42:47,831 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2491e-03, 4.9884e-03, 5.3912e-03,  ..., 5.3561e-03,
          5.1951e-03, 5.4544e-03],
         [5.2491e-03, 4.9884e-03, 5.3912e-03,  ..., 5.3561e-03,
          5.1951e-03, 5.4544e-03],
         [5.2491e-03, 4.9884e-03, 5.3912e-03,  ..., 5.3561e-03,
          5.1951e-03, 5.4544e-03],
         [9.8425e-01, 9.8503e-01, 9.8383e-01,  ..., 9.8393e-01,
          9.8441e-01, 9.8364e-01]],
        [[5.2613e-03, 5.0482e-03, 5.1889e-03,  ..., 5.0018e-09,
          5.3223e-03, 5.3411e-03],
         [5.2613e-03, 5.0482e-03, 5.1889e-03,  ..., 5.5458e-10,
          5.3223e-03, 5.3411e-03],
         [5.2613e-03, 5.0482e-03, 5.1889e-03,  ..., 1.0000e+00,
          5.3223e-03, 5.3411e-03],
         [9.8422e-01, 9.8486e-01, 9.8443e-01,  ..., 5.5458e-10,
          9.8403e-01, 9.8398e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 460:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0059, 0.0057,  ..., 0.0060, 0.0058, 0.0058],
         [0.0059, 0.0059, 0.0057,  ..., 0.0060, 0.0058, 0.0058],
         [0.0059, 0.0059, 0.0057,  ..., 0.0060, 0.0058, 0.0058],
         [0.9822, 0.9824, 0.9828,  ..., 0.9821, 0.9826, 0.9825]],
        [[0.0060, 0.0060, 0.0060,  ..., 0.0060, 0.0061, 0.0060],
         [0.0060, 0.0060, 0.0060,  ..., 0.0060, 0.0061, 0.0060],
         [0.0060, 0.0060, 0.0060,  ..., 0.0060, 0.0061, 0.0060],
         [0.9819, 0.9821, 0.9819,  ..., 0.9820, 0.9817, 0.9821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:42:49,881 [Process: 0] Synchronize training processes
2024-08-16 16:42:49,881 [Process: 0] Evaluating...
2024-08-16 16:42:49,883 [Process: 0] EPOCH 460:
2024-08-16 16:42:49,885 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0831e-03, 4.7522e-03, 5.4333e-03,  ..., 5.2640e-03,
          5.0303e-03, 4.9073e-03],
         [5.0831e-03, 4.7522e-03, 5.4333e-03,  ..., 5.2640e-03,
          5.0303e-03, 4.9073e-03],
         [5.0831e-03, 4.7522e-03, 5.4333e-03,  ..., 5.2640e-03,
          5.0303e-03, 4.9073e-03],
         [9.8475e-01, 9.8574e-01, 9.8370e-01,  ..., 9.8421e-01,
          9.8491e-01, 9.8528e-01]],
        [[5.0075e-03, 4.9959e-03, 5.1094e-03,  ..., 7.6776e-08,
          5.3277e-03, 5.1921e-03],
         [5.0075e-03, 4.9959e-03, 5.1094e-03,  ..., 7.6776e-08,
          5.3277e-03, 5.1921e-03],
         [5.0075e-03, 4.9959e-03, 5.1094e-03,  ..., 1.0000e+00,
          5.3277e-03, 5.1921e-03],
         [9.8498e-01, 9.8501e-01, 9.8467e-01,  ..., 7.6776e-08,
          9.8402e-01, 9.8442e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 461:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:42:51,970 [Process: 0] Synchronize training processes
2024-08-16 16:42:51,970 [Process: 0] Evaluating...
2024-08-16 16:42:51,972 [Process: 0] EPOCH 461:
2024-08-16 16:42:51,974 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0055, 0.0054,  ..., 0.0054, 0.0055, 0.0055],
         [0.0054, 0.0055, 0.0054,  ..., 0.0054, 0.0055, 0.0055],
         [0.0054, 0.0055, 0.0054,  ..., 0.0054, 0.0055, 0.0055],
         [0.9837, 0.9834, 0.9837,  ..., 0.9837, 0.9835, 0.9836]],
        [[0.0057, 0.0058, 0.0057,  ..., 0.0055, 0.0055, 0.0056],
         [0.0057, 0.0058, 0.0057,  ..., 0.0055, 0.0055, 0.0056],
         [0.0057, 0.0058, 0.0057,  ..., 0.0055, 0.0055, 0.0056],
         [0.9830, 0.9826, 0.9829,  ..., 0.9835, 0.9834, 0.9833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.9887e-03, 4.8040e-03, 4.9060e-03,  ..., 4.9008e-03,
          4.8100e-03, 4.9402e-03],
         [4.9887e-03, 4.8040e-03, 4.9060e-03,  ..., 4.9008e-03,
          4.8100e-03, 4.9402e-03],
         [4.9887e-03, 4.8040e-03, 4.9060e-03,  ..., 4.9008e-03,
          4.8100e-03, 4.9402e-03],
         [9.8503e-01, 9.8559e-01, 9.8528e-01,  ..., 9.8530e-01,
          9.8557e-01, 9.8518e-01]],
        [[4.9582e-03, 4.9023e-03, 4.8758e-03,  ..., 6.3779e-07,
          5.1348e-03, 5.1227e-03],
         [4.9582e-03, 4.9023e-03, 4.8758e-03,  ..., 2.3458e-07,
          5.1348e-03, 5.1227e-03],
         [4.9582e-03, 4.9023e-03, 4.8758e-03,  ..., 1.0000e+00,
          5.1348e-03, 5.1227e-03],
         [9.8513e-01, 9.8529e-01, 9.8537e-01,  ..., 2.3458e-07,
          9.8460e-01, 9.8463e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 462:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:42:54,022 [Process: 0] Synchronize training processes
2024-08-16 16:42:54,023 [Process: 0] Evaluating...
2024-08-16 16:42:54,031 [Process: 0] EPOCH 462:
2024-08-16 16:42:54,033 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0053, 0.0053,  ..., 0.0054, 0.0054, 0.0055],
         [0.0054, 0.0053, 0.0053,  ..., 0.0054, 0.0054, 0.0055],
         [0.0054, 0.0053, 0.0053,  ..., 0.0054, 0.0054, 0.0055],
         [0.9838, 0.9841, 0.9842,  ..., 0.9839, 0.9838, 0.9836]],
        [[0.0056, 0.0055, 0.0055,  ..., 0.0054, 0.0056, 0.0054],
         [0.0056, 0.0055, 0.0055,  ..., 0.0054, 0.0056, 0.0054],
         [0.0056, 0.0055, 0.0055,  ..., 0.0054, 0.0056, 0.0054],
         [0.9831, 0.9834, 0.9834,  ..., 0.9837, 0.9832, 0.9839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7947e-03, 5.3942e-03, 5.3024e-03,  ..., 5.2055e-03,
          5.1695e-03, 5.1163e-03],
         [4.7947e-03, 5.3942e-03, 5.3024e-03,  ..., 5.2055e-03,
          5.1695e-03, 5.1163e-03],
         [4.7947e-03, 5.3942e-03, 5.3024e-03,  ..., 5.2055e-03,
          5.1695e-03, 5.1163e-03],
         [9.8562e-01, 9.8382e-01, 9.8409e-01,  ..., 9.8438e-01,
          9.8449e-01, 9.8465e-01]],
        [[5.0858e-03, 5.0511e-03, 5.1139e-03,  ..., 5.3444e-07,
          5.2370e-03, 5.2359e-03],
         [5.0858e-03, 5.0511e-03, 5.1139e-03,  ..., 5.1639e-07,
          5.2370e-03, 5.2359e-03],
         [5.0858e-03, 5.0511e-03, 5.1139e-03,  ..., 1.0000e+00,
          5.2370e-03, 5.2359e-03],
         [9.8474e-01, 9.8485e-01, 9.8466e-01,  ..., 5.1639e-07,
          9.8429e-01, 9.8429e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 463:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:56,093 [Process: 0] Synchronize training processes
2024-08-16 16:42:56,094 [Process: 0] Evaluating...
2024-08-16 16:42:56,096 [Process: 0] EPOCH 463:
2024-08-16 16:42:56,098 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0054, 0.0055,  ..., 0.0054, 0.0054, 0.0055],
         [0.0055, 0.0054, 0.0055,  ..., 0.0054, 0.0054, 0.0055],
         [0.0055, 0.0054, 0.0055,  ..., 0.0054, 0.0054, 0.0055],
         [0.9834, 0.9838, 0.9836,  ..., 0.9839, 0.9837, 0.9834]],
        [[0.0059, 0.0061, 0.0063,  ..., 0.0055, 0.0056, 0.0056],
         [0.0059, 0.0061, 0.0063,  ..., 0.0055, 0.0056, 0.0056],
         [0.0059, 0.0061, 0.0063,  ..., 0.0055, 0.0056, 0.0056],
         [0.9822, 0.9817, 0.9812,  ..., 0.9836, 0.9833, 0.9832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1082e-03, 5.0994e-03, 5.1637e-03,  ..., 5.0492e-03,
          5.0175e-03, 5.0238e-03],
         [5.1082e-03, 5.0994e-03, 5.1637e-03,  ..., 5.0492e-03,
          5.0175e-03, 5.0238e-03],
         [5.1082e-03, 5.0994e-03, 5.1637e-03,  ..., 5.0492e-03,
          5.0175e-03, 5.0238e-03],
         [9.8468e-01, 9.8470e-01, 9.8451e-01,  ..., 9.8485e-01,
          9.8495e-01, 9.8493e-01]],
        [[4.9508e-03, 5.0368e-03, 5.0888e-03,  ..., 5.5065e-10,
          5.1759e-03, 5.1608e-03],
         [4.9508e-03, 5.0368e-03, 5.0888e-03,  ..., 5.5065e-10,
          5.1759e-03, 5.1608e-03],
         [4.9508e-03, 5.0368e-03, 5.0888e-03,  ..., 1.0000e+00,
          5.1759e-03, 5.1608e-03],
         [9.8515e-01, 9.8489e-01, 9.8473e-01,  ..., 5.5065e-10,
          9.8447e-01, 9.8452e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 464:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:42:58,179 [Process: 0] Synchronize training processes
2024-08-16 16:42:58,179 [Process: 0] Evaluating...
2024-08-16 16:42:58,181 [Process: 0] EPOCH 464:
2024-08-16 16:42:58,183 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0054, 0.0053,  ..., 0.0055, 0.0054, 0.0054],
         [0.0055, 0.0054, 0.0053,  ..., 0.0055, 0.0054, 0.0054],
         [0.0055, 0.0054, 0.0053,  ..., 0.0055, 0.0054, 0.0054],
         [0.9835, 0.9839, 0.9840,  ..., 0.9836, 0.9837, 0.9838]],
        [[0.0069, 0.0065, 0.0062,  ..., 0.0055, 0.0056, 0.0057],
         [0.0069, 0.0065, 0.0062,  ..., 0.0055, 0.0056, 0.0057],
         [0.0069, 0.0065, 0.0062,  ..., 0.0055, 0.0056, 0.0057],
         [0.9794, 0.9805, 0.9815,  ..., 0.9834, 0.9831, 0.9828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0128e-03, 5.1380e-03, 5.0115e-03,  ..., 5.1348e-03,
          4.8847e-03, 5.1410e-03],
         [5.0128e-03, 5.1380e-03, 5.0115e-03,  ..., 5.1348e-03,
          4.8847e-03, 5.1410e-03],
         [5.0128e-03, 5.1380e-03, 5.0115e-03,  ..., 5.1348e-03,
          4.8847e-03, 5.1410e-03],
         [9.8496e-01, 9.8459e-01, 9.8497e-01,  ..., 9.8460e-01,
          9.8535e-01, 9.8458e-01]],
        [[4.9427e-03, 5.0009e-03, 4.9262e-03,  ..., 3.5595e-07,
          5.0701e-03, 5.0547e-03],
         [4.9427e-03, 5.0009e-03, 4.9262e-03,  ..., 3.5595e-07,
          5.0701e-03, 5.0547e-03],
         [4.9427e-03, 5.0009e-03, 4.9262e-03,  ..., 1.0000e+00,
          5.0701e-03, 5.0547e-03],
         [9.8517e-01, 9.8500e-01, 9.8522e-01,  ..., 3.5595e-07,
          9.8479e-01, 9.8484e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 465:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:43:00,269 [Process: 0] Synchronize training processes
2024-08-16 16:43:00,269 [Process: 0] Evaluating...
2024-08-16 16:43:00,271 [Process: 0] EPOCH 465:
2024-08-16 16:43:00,273 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0054, 0.0054,  ..., 0.0055, 0.0056, 0.0055],
         [0.0054, 0.0054, 0.0054,  ..., 0.0055, 0.0056, 0.0055],
         [0.0054, 0.0054, 0.0054,  ..., 0.0055, 0.0056, 0.0055],
         [0.9838, 0.9837, 0.9837,  ..., 0.9834, 0.9833, 0.9834]],
        [[0.0076, 0.0063, 0.0063,  ..., 0.0061, 0.0057, 0.0062],
         [0.0076, 0.0063, 0.0063,  ..., 0.0061, 0.0057, 0.0062],
         [0.0076, 0.0063, 0.0063,  ..., 0.0061, 0.0057, 0.0062],
         [0.9773, 0.9811, 0.9812,  ..., 0.9816, 0.9829, 0.9813]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.8912e-03, 5.2492e-03, 5.5434e-03,  ..., 5.0262e-03,
          5.1412e-03, 5.1056e-03],
         [4.8912e-03, 5.2492e-03, 5.5434e-03,  ..., 5.0262e-03,
          5.1412e-03, 5.1056e-03],
         [4.8912e-03, 5.2492e-03, 5.5434e-03,  ..., 5.0262e-03,
          5.1412e-03, 5.1056e-03],
         [9.8533e-01, 9.8425e-01, 9.8337e-01,  ..., 9.8492e-01,
          9.8458e-01, 9.8468e-01]],
        [[4.8532e-03, 4.8971e-03, 4.9654e-03,  ..., 1.0483e-08,
          5.0841e-03, 4.9520e-03],
         [4.8532e-03, 4.8971e-03, 4.9654e-03,  ..., 1.5595e-09,
          5.0841e-03, 4.9520e-03],
         [4.8532e-03, 4.8971e-03, 4.9654e-03,  ..., 1.0000e+00,
          5.0841e-03, 4.9520e-03],
         [9.8544e-01, 9.8531e-01, 9.8510e-01,  ..., 1.5595e-09,
          9.8475e-01, 9.8514e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 466:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:43:02,371 [Process: 0] Synchronize training processes
2024-08-16 16:43:02,372 [Process: 0] Evaluating...
2024-08-16 16:43:02,374 [Process: 0] EPOCH 466:
2024-08-16 16:43:02,376 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0054, 0.0053,  ..., 0.0054, 0.0053, 0.0053],
         [0.0053, 0.0054, 0.0053,  ..., 0.0054, 0.0053, 0.0053],
         [0.0053, 0.0054, 0.0053,  ..., 0.0054, 0.0053, 0.0053],
         [0.9842, 0.9839, 0.9842,  ..., 0.9839, 0.9841, 0.9842]],
        [[0.0067, 0.0060, 0.0069,  ..., 0.0059, 0.0054, 0.0054],
         [0.0067, 0.0060, 0.0069,  ..., 0.0059, 0.0054, 0.0054],
         [0.0067, 0.0060, 0.0069,  ..., 0.0059, 0.0054, 0.0054],
         [0.9799, 0.9821, 0.9794,  ..., 0.9823, 0.9839, 0.9839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0903e-03, 5.1309e-03, 5.3049e-03,  ..., 4.8957e-03,
          4.8581e-03, 5.1552e-03],
         [5.0903e-03, 5.1309e-03, 5.3049e-03,  ..., 4.8957e-03,
          4.8581e-03, 5.1552e-03],
         [5.0903e-03, 5.1309e-03, 5.3049e-03,  ..., 4.8957e-03,
          4.8581e-03, 5.1552e-03],
         [9.8473e-01, 9.8461e-01, 9.8409e-01,  ..., 9.8531e-01,
          9.8543e-01, 9.8453e-01]],
        [[4.6600e-03, 4.9019e-03, 4.9392e-03,  ..., 2.2297e-06,
          4.9583e-03, 4.9333e-03],
         [4.6600e-03, 4.9019e-03, 4.9392e-03,  ..., 2.2297e-06,
          4.9583e-03, 4.9333e-03],
         [4.6600e-03, 4.9019e-03, 4.9392e-03,  ..., 9.9999e-01,
          4.9583e-03, 4.9333e-03],
         [9.8602e-01, 9.8529e-01, 9.8518e-01,  ..., 2.2297e-06,
          9.8513e-01, 9.8520e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 467:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:43:04,466 [Process: 0] Synchronize training processes
2024-08-16 16:43:04,467 [Process: 0] Evaluating...
2024-08-16 16:43:04,468 [Process: 0] EPOCH 467:
2024-08-16 16:43:04,470 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0054,  ..., 0.0055, 0.0054, 0.0055],
         [0.0055, 0.0055, 0.0054,  ..., 0.0055, 0.0054, 0.0055],
         [0.0055, 0.0055, 0.0054,  ..., 0.0055, 0.0054, 0.0055],
         [0.9836, 0.9836, 0.9837,  ..., 0.9835, 0.9837, 0.9835]],
        [[0.0083, 0.0067, 0.0061,  ..., 0.0059, 0.0060, 0.0054],
         [0.0083, 0.0067, 0.0061,  ..., 0.0059, 0.0060, 0.0054],
         [0.0086, 0.0067, 0.0061,  ..., 0.0059, 0.0060, 0.0054],
         [0.9748, 0.9798, 0.9817,  ..., 0.9822, 0.9820, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1319e-03, 5.8101e-03, 4.9165e-03,  ..., 5.1580e-03,
          4.7524e-03, 4.9263e-03],
         [5.1319e-03, 5.8101e-03, 4.9165e-03,  ..., 5.1580e-03,
          4.7524e-03, 4.9263e-03],
         [5.1319e-03, 5.8101e-03, 4.9165e-03,  ..., 5.1580e-03,
          4.7524e-03, 4.9263e-03],
         [9.8460e-01, 9.8257e-01, 9.8525e-01,  ..., 9.8453e-01,
          9.8574e-01, 9.8522e-01]],
        [[4.7019e-03, 4.9896e-03, 4.8395e-03,  ..., 3.0538e-05,
          4.9900e-03, 4.9766e-03],
         [4.7019e-03, 4.9896e-03, 4.8395e-03,  ..., 3.0538e-05,
          4.9900e-03, 4.9766e-03],
         [4.7019e-03, 4.9896e-03, 4.8395e-03,  ..., 9.9991e-01,
          4.9900e-03, 4.9766e-03],
         [9.8589e-01, 9.8503e-01, 9.8548e-01,  ..., 3.0538e-05,
          9.8503e-01, 9.8507e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 468:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:43:06,598 [Process: 0] Synchronize training processes
2024-08-16 16:43:06,599 [Process: 0] Evaluating...
2024-08-16 16:43:06,601 [Process: 0] EPOCH 468:
2024-08-16 16:43:06,603 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0056, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0056, 0.0056, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.0056, 0.0056, 0.0057,  ..., 0.0057, 0.0057, 0.0057],
         [0.9833, 0.9832, 0.9830,  ..., 0.9829, 0.9830, 0.9828]],
        [[0.0078, 0.0073, 0.0067,  ..., 0.0057, 0.0057, 0.0058],
         [0.0078, 0.0073, 0.0067,  ..., 0.0057, 0.0057, 0.0058],
         [0.0078, 0.0073, 0.0067,  ..., 0.0057, 0.0057, 0.0058],
         [0.9765, 0.9782, 0.9798,  ..., 0.9829, 0.9829, 0.9827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1248e-03, 5.5412e-03, 5.4022e-03,  ..., 4.9139e-03,
          4.8593e-03, 4.9402e-03],
         [5.1248e-03, 5.5412e-03, 5.4022e-03,  ..., 4.9139e-03,
          4.8593e-03, 4.9402e-03],
         [5.1248e-03, 5.5412e-03, 5.4022e-03,  ..., 4.9139e-03,
          4.8593e-03, 4.9402e-03],
         [9.8463e-01, 9.8338e-01, 9.8379e-01,  ..., 9.8526e-01,
          9.8542e-01, 9.8518e-01]],
        [[4.9972e-03, 4.8847e-03, 4.8688e-03,  ..., 1.2969e-06,
          5.0328e-03, 4.9944e-03],
         [4.9972e-03, 4.8847e-03, 4.8688e-03,  ..., 1.0936e-07,
          5.0328e-03, 4.9944e-03],
         [4.9972e-03, 4.8847e-03, 4.8688e-03,  ..., 1.0000e+00,
          5.0328e-03, 4.9944e-03],
         [9.8501e-01, 9.8535e-01, 9.8539e-01,  ..., 1.0936e-07,
          9.8490e-01, 9.8502e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 469:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:43:08,776 [Process: 0] Synchronize training processes
2024-08-16 16:43:08,777 [Process: 0] Evaluating...
2024-08-16 16:43:08,779 [Process: 0] EPOCH 469:
2024-08-16 16:43:08,781 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0053, 0.0054],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0053, 0.0054],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0053, 0.0054],
         [0.9837, 0.9839, 0.9838,  ..., 0.9838, 0.9840, 0.9838]],
        [[0.0070, 0.0064, 0.0057,  ..., 0.0055, 0.0054, 0.0054],
         [0.0070, 0.0064, 0.0057,  ..., 0.0055, 0.0054, 0.0054],
         [0.0070, 0.0064, 0.0057,  ..., 0.0055, 0.0054, 0.0054],
         [0.9790, 0.9807, 0.9830,  ..., 0.9834, 0.9837, 0.9838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1647e-03, 5.5397e-03, 5.2314e-03,  ..., 4.9023e-03,
          5.0394e-03, 4.9129e-03],
         [5.1647e-03, 5.5397e-03, 5.2314e-03,  ..., 4.9023e-03,
          5.0394e-03, 4.9129e-03],
         [5.1647e-03, 5.5397e-03, 5.2314e-03,  ..., 4.9023e-03,
          5.0394e-03, 4.9129e-03],
         [9.8451e-01, 9.8338e-01, 9.8431e-01,  ..., 9.8529e-01,
          9.8488e-01, 9.8526e-01]],
        [[5.0199e-03, 5.0161e-03, 4.9017e-03,  ..., 6.1925e-07,
          4.9848e-03, 4.9844e-03],
         [5.0199e-03, 5.0161e-03, 4.9017e-03,  ..., 6.1925e-07,
          4.9848e-03, 4.9844e-03],
         [5.0199e-03, 5.0161e-03, 4.9017e-03,  ..., 1.0000e+00,
          4.9848e-03, 4.9844e-03],
         [9.8494e-01, 9.8495e-01, 9.8529e-01,  ..., 6.1925e-07,
          9.8505e-01, 9.8505e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:10,915 [Process: 0] Synchronize training processes
2024-08-16 16:43:10,915 [Process: 0] Evaluating...
2024-08-16 16:43:10,917 [Process: 0] EPOCH 470:
2024-08-16 16:43:10,919 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 470:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0054, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.0053, 0.0054, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.0053, 0.0054, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.9840, 0.9839, 0.9840,  ..., 0.9841, 0.9841, 0.9842]],
        [[0.0060, 0.0055, 0.0058,  ..., 0.0052, 0.0053, 0.0054],
         [0.0060, 0.0055, 0.0058,  ..., 0.0052, 0.0053, 0.0054],
         [0.0060, 0.0055, 0.0058,  ..., 0.0052, 0.0053, 0.0054],
         [0.9820, 0.9836, 0.9826,  ..., 0.9843, 0.9841, 0.9837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2021e-03, 5.1825e-03, 5.1099e-03,  ..., 5.1155e-03,
          5.0242e-03, 5.0856e-03],
         [5.2021e-03, 5.1825e-03, 5.1099e-03,  ..., 5.1155e-03,
          5.0242e-03, 5.0856e-03],
         [5.2021e-03, 5.1825e-03, 5.1099e-03,  ..., 5.1155e-03,
          5.0242e-03, 5.0856e-03],
         [9.8439e-01, 9.8445e-01, 9.8467e-01,  ..., 9.8465e-01,
          9.8493e-01, 9.8474e-01]],
        [[4.7803e-03, 4.8783e-03, 4.8425e-03,  ..., 5.7557e-07,
          4.9104e-03, 4.8750e-03],
         [4.7803e-03, 4.8783e-03, 4.8425e-03,  ..., 5.7557e-07,
          4.9104e-03, 4.8750e-03],
         [4.7803e-03, 4.8783e-03, 4.8425e-03,  ..., 1.0000e+00,
          4.9104e-03, 4.8750e-03],
         [9.8566e-01, 9.8537e-01, 9.8547e-01,  ..., 5.7557e-07,
          9.8527e-01, 9.8538e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:13,034 [Process: 0] Synchronize training processes
2024-08-16 16:43:13,034 [Process: 0] Evaluating...
2024-08-16 16:43:13,036 [Process: 0] EPOCH 471:
2024-08-16 16:43:13,038 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 471:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0054, 0.0053,  ..., 0.0054, 0.0054, 0.0053],
         [0.0054, 0.0054, 0.0053,  ..., 0.0054, 0.0054, 0.0053],
         [0.0054, 0.0054, 0.0053,  ..., 0.0054, 0.0054, 0.0053],
         [0.9838, 0.9839, 0.9841,  ..., 0.9839, 0.9837, 0.9842]],
        [[0.0065, 0.0061, 0.0060,  ..., 0.0055, 0.0055, 0.0056],
         [0.0065, 0.0061, 0.0060,  ..., 0.0055, 0.0055, 0.0056],
         [0.0065, 0.0061, 0.0060,  ..., 0.0055, 0.0055, 0.0056],
         [0.9806, 0.9816, 0.9820,  ..., 0.9836, 0.9836, 0.9832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:15,210 [Process: 0] Synchronize training processes
2024-08-16 16:43:15,211 [Process: 0] Evaluating...
2024-08-16 16:43:15,220 [Process: 0] EPOCH 472:
2024-08-16 16:43:15,223 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3454e-03, 5.8947e-03, 5.5100e-03,  ..., 5.1168e-03,
          5.0299e-03, 5.2480e-03],
         [5.3454e-03, 5.8947e-03, 5.5100e-03,  ..., 5.1168e-03,
          5.0299e-03, 5.2480e-03],
         [5.3454e-03, 5.8947e-03, 5.5100e-03,  ..., 5.1168e-03,
          5.0299e-03, 5.2480e-03],
         [9.8396e-01, 9.8232e-01, 9.8347e-01,  ..., 9.8465e-01,
          9.8491e-01, 9.8426e-01]],
        [[4.8517e-03, 5.0524e-03, 5.0361e-03,  ..., 3.1522e-06,
          5.0710e-03, 5.0161e-03],
         [4.8517e-03, 5.0524e-03, 5.0361e-03,  ..., 3.1522e-06,
          5.0710e-03, 5.0161e-03],
         [4.8517e-03, 5.0524e-03, 5.0361e-03,  ..., 9.9999e-01,
          5.0710e-03, 5.0161e-03],
         [9.8544e-01, 9.8484e-01, 9.8489e-01,  ..., 3.1522e-06,
          9.8479e-01, 9.8495e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 472:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0056, 0.0055, 0.0055,  ..., 0.0056, 0.0056, 0.0056],
         [0.0056, 0.0055, 0.0055,  ..., 0.0056, 0.0056, 0.0056],
         [0.0056, 0.0055, 0.0055,  ..., 0.0056, 0.0056, 0.0056],
         [0.9832, 0.9835, 0.9834,  ..., 0.9833, 0.9833, 0.9831]],
        [[0.0056, 0.0060, 0.0057,  ..., 0.0058, 0.0060, 0.0059],
         [0.0056, 0.0060, 0.0057,  ..., 0.0058, 0.0060, 0.0059],
         [0.0056, 0.0060, 0.0057,  ..., 0.0058, 0.0060, 0.0059],
         [0.9833, 0.9819, 0.9829,  ..., 0.9826, 0.9820, 0.9823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:17,305 [Process: 0] Synchronize training processes
2024-08-16 16:43:17,305 [Process: 0] Evaluating...
2024-08-16 16:43:17,307 [Process: 0] EPOCH 473:
2024-08-16 16:43:17,309 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1592e-03, 5.2541e-03, 5.7897e-03,  ..., 5.0554e-03,
          4.9464e-03, 5.0637e-03],
         [5.1592e-03, 5.2541e-03, 5.7897e-03,  ..., 5.0554e-03,
          4.9464e-03, 5.0637e-03],
         [5.1592e-03, 5.2541e-03, 5.7897e-03,  ..., 5.0554e-03,
          4.9464e-03, 5.0637e-03],
         [9.8452e-01, 9.8424e-01, 9.8263e-01,  ..., 9.8483e-01,
          9.8516e-01, 9.8481e-01]],
        [[4.9475e-03, 4.8746e-03, 5.0078e-03,  ..., 3.3021e-06,
          5.0791e-03, 4.9974e-03],
         [4.9475e-03, 4.8746e-03, 5.0078e-03,  ..., 3.3021e-06,
          5.0791e-03, 4.9974e-03],
         [4.9475e-03, 4.8746e-03, 5.0078e-03,  ..., 9.9999e-01,
          5.0791e-03, 4.9974e-03],
         [9.8516e-01, 9.8538e-01, 9.8498e-01,  ..., 3.3021e-06,
          9.8476e-01, 9.8501e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 473:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0055, 0.0055,  ..., 0.0055, 0.0056, 0.0055],
         [0.0054, 0.0055, 0.0055,  ..., 0.0055, 0.0056, 0.0055],
         [0.0054, 0.0055, 0.0055,  ..., 0.0055, 0.0056, 0.0055],
         [0.9837, 0.9834, 0.9836,  ..., 0.9834, 0.9833, 0.9835]],
        [[0.0056, 0.0054, 0.0059,  ..., 0.0055, 0.0055, 0.0056],
         [0.0056, 0.0054, 0.0059,  ..., 0.0055, 0.0055, 0.0056],
         [0.0056, 0.0054, 0.0059,  ..., 0.0055, 0.0055, 0.0056],
         [0.9833, 0.9838, 0.9824,  ..., 0.9834, 0.9835, 0.9831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:19,426 [Process: 0] Synchronize training processes
2024-08-16 16:43:19,427 [Process: 0] Evaluating...
2024-08-16 16:43:19,428 [Process: 0] EPOCH 474:
2024-08-16 16:43:19,431 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0143e-03, 5.2500e-03, 5.3655e-03,  ..., 4.7347e-03,
          4.6943e-03, 4.9626e-03],
         [5.0143e-03, 5.2500e-03, 5.3655e-03,  ..., 4.7347e-03,
          4.6943e-03, 4.9626e-03],
         [5.0143e-03, 5.2500e-03, 5.3655e-03,  ..., 4.7347e-03,
          4.6943e-03, 4.9626e-03],
         [9.8496e-01, 9.8425e-01, 9.8390e-01,  ..., 9.8580e-01,
          9.8592e-01, 9.8511e-01]],
        [[4.9084e-03, 4.8309e-03, 4.7390e-03,  ..., 5.2833e-07,
          4.8315e-03, 4.8570e-03],
         [4.9084e-03, 4.8309e-03, 4.7390e-03,  ..., 4.4618e-07,
          4.8315e-03, 4.8570e-03],
         [4.9084e-03, 4.8309e-03, 4.7390e-03,  ..., 1.0000e+00,
          4.8315e-03, 4.8570e-03],
         [9.8527e-01, 9.8551e-01, 9.8578e-01,  ..., 4.4618e-07,
          9.8551e-01, 9.8543e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 474:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0054,  ..., 0.0055, 0.0055, 0.0056],
         [0.0055, 0.0055, 0.0054,  ..., 0.0055, 0.0055, 0.0056],
         [0.0055, 0.0055, 0.0054,  ..., 0.0055, 0.0055, 0.0056],
         [0.9834, 0.9835, 0.9837,  ..., 0.9835, 0.9835, 0.9833]],
        [[0.0057, 0.0055, 0.0055,  ..., 0.0055, 0.0055, 0.0056],
         [0.0057, 0.0055, 0.0055,  ..., 0.0055, 0.0055, 0.0056],
         [0.0057, 0.0055, 0.0055,  ..., 0.0055, 0.0055, 0.0056],
         [0.9830, 0.9836, 0.9835,  ..., 0.9834, 0.9835, 0.9832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:21,546 [Process: 0] Synchronize training processes
2024-08-16 16:43:21,546 [Process: 0] Evaluating...
2024-08-16 16:43:21,548 [Process: 0] EPOCH 475:
2024-08-16 16:43:21,550 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7812e-03, 4.9358e-03, 4.7455e-03,  ..., 4.6162e-03,
          4.8054e-03, 4.9813e-03],
         [4.7812e-03, 4.9358e-03, 4.7455e-03,  ..., 4.6162e-03,
          4.8054e-03, 4.9813e-03],
         [4.7812e-03, 4.9358e-03, 4.7455e-03,  ..., 4.6162e-03,
          4.8054e-03, 4.9813e-03],
         [9.8566e-01, 9.8519e-01, 9.8576e-01,  ..., 9.8615e-01,
          9.8558e-01, 9.8506e-01]],
        [[4.7571e-03, 4.7973e-03, 4.8499e-03,  ..., 1.5333e-07,
          4.8649e-03, 4.8459e-03],
         [4.7571e-03, 4.7973e-03, 4.8499e-03,  ..., 1.1209e-07,
          4.8649e-03, 4.8459e-03],
         [4.7571e-03, 4.7973e-03, 4.8499e-03,  ..., 1.0000e+00,
          4.8649e-03, 4.8459e-03],
         [9.8573e-01, 9.8561e-01, 9.8545e-01,  ..., 1.1209e-07,
          9.8541e-01, 9.8546e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 475:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0056,  ..., 0.0056, 0.0056, 0.0055],
         [0.0055, 0.0055, 0.0056,  ..., 0.0056, 0.0056, 0.0055],
         [0.0055, 0.0055, 0.0056,  ..., 0.0056, 0.0056, 0.0055],
         [0.9835, 0.9836, 0.9833,  ..., 0.9832, 0.9833, 0.9835]],
        [[0.0054, 0.0056, 0.0055,  ..., 0.0057, 0.0056, 0.0056],
         [0.0054, 0.0056, 0.0055,  ..., 0.0057, 0.0056, 0.0056],
         [0.0054, 0.0056, 0.0055,  ..., 0.0057, 0.0056, 0.0056],
         [0.9837, 0.9832, 0.9834,  ..., 0.9828, 0.9833, 0.9831]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:23,540 [Process: 0] Synchronize training processes
2024-08-16 16:43:23,540 [Process: 0] Evaluating...
2024-08-16 16:43:23,542 [Process: 0] EPOCH 476:
2024-08-16 16:43:23,544 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2402e-03, 5.0781e-03, 4.7153e-03,  ..., 4.8414e-03,
          4.7689e-03, 4.7914e-03],
         [5.2402e-03, 5.0781e-03, 4.7153e-03,  ..., 4.8414e-03,
          4.7689e-03, 4.7914e-03],
         [5.2402e-03, 5.0781e-03, 4.7153e-03,  ..., 4.8414e-03,
          4.7689e-03, 4.7914e-03],
         [9.8428e-01, 9.8477e-01, 9.8585e-01,  ..., 9.8548e-01,
          9.8569e-01, 9.8563e-01]],
        [[4.8641e-03, 4.8305e-03, 4.9249e-03,  ..., 8.7423e-09,
          4.8797e-03, 4.8383e-03],
         [4.8641e-03, 4.8305e-03, 4.9249e-03,  ..., 8.7423e-09,
          4.8797e-03, 4.8383e-03],
         [4.8641e-03, 4.8305e-03, 4.9249e-03,  ..., 1.0000e+00,
          4.8797e-03, 4.8383e-03],
         [9.8541e-01, 9.8551e-01, 9.8523e-01,  ..., 8.7423e-09,
          9.8536e-01, 9.8549e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 476:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0055, 0.0055, 0.0055,  ..., 0.0056, 0.0055, 0.0055],
         [0.0055, 0.0055, 0.0055,  ..., 0.0056, 0.0055, 0.0055],
         [0.0055, 0.0055, 0.0055,  ..., 0.0056, 0.0055, 0.0055],
         [0.9834, 0.9836, 0.9835,  ..., 0.9833, 0.9834, 0.9835]],
        [[0.0054, 0.0059, 0.0053,  ..., 0.0052, 0.0055, 0.0057],
         [0.0054, 0.0059, 0.0053,  ..., 0.0052, 0.0055, 0.0057],
         [0.0054, 0.0059, 0.0053,  ..., 0.0052, 0.0055, 0.0057],
         [0.9837, 0.9824, 0.9842,  ..., 0.9843, 0.9836, 0.9830]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:25,504 [Process: 0] Synchronize training processes
2024-08-16 16:43:25,504 [Process: 0] Evaluating...
2024-08-16 16:43:25,506 [Process: 0] EPOCH 477:
2024-08-16 16:43:25,508 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0759e-03, 4.5362e-03, 5.2363e-03,  ..., 4.8352e-03,
          4.7669e-03, 4.8978e-03],
         [5.0759e-03, 4.5362e-03, 5.2363e-03,  ..., 4.8352e-03,
          4.7669e-03, 4.8978e-03],
         [5.0759e-03, 4.5362e-03, 5.2363e-03,  ..., 4.8352e-03,
          4.7669e-03, 4.8978e-03],
         [9.8477e-01, 9.8639e-01, 9.8429e-01,  ..., 9.8549e-01,
          9.8570e-01, 9.8531e-01]],
        [[4.7617e-03, 4.7193e-03, 4.8015e-03,  ..., 3.3540e-06,
          4.8472e-03, 4.7808e-03],
         [4.7617e-03, 4.7193e-03, 4.8015e-03,  ..., 2.9080e-06,
          4.8472e-03, 4.7808e-03],
         [4.7617e-03, 4.7193e-03, 4.8015e-03,  ..., 9.9999e-01,
          4.8472e-03, 4.7808e-03],
         [9.8571e-01, 9.8584e-01, 9.8560e-01,  ..., 2.9080e-06,
          9.8546e-01, 9.8566e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 477:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0055],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0055],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0055],
         [0.9839, 0.9838, 0.9838,  ..., 0.9839, 0.9837, 0.9835]],
        [[0.0054, 0.0056, 0.0055,  ..., 0.0056, 0.0052, 0.0053],
         [0.0054, 0.0056, 0.0055,  ..., 0.0056, 0.0052, 0.0053],
         [0.0054, 0.0056, 0.0055,  ..., 0.0056, 0.0052, 0.0053],
         [0.9837, 0.9831, 0.9834,  ..., 0.9831, 0.9844, 0.9840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:27,592 [Process: 0] Synchronize training processes
2024-08-16 16:43:27,592 [Process: 0] Evaluating...
2024-08-16 16:43:27,594 [Process: 0] EPOCH 478:
2024-08-16 16:43:27,596 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1382e-03, 4.8121e-03, 4.8803e-03,  ..., 4.7033e-03,
          4.7037e-03, 4.6899e-03],
         [5.1382e-03, 4.8121e-03, 4.8803e-03,  ..., 4.7033e-03,
          4.7037e-03, 4.6899e-03],
         [5.1382e-03, 4.8121e-03, 4.8803e-03,  ..., 4.7033e-03,
          4.7037e-03, 4.6899e-03],
         [9.8459e-01, 9.8556e-01, 9.8536e-01,  ..., 9.8589e-01,
          9.8589e-01, 9.8593e-01]],
        [[4.7358e-03, 4.7509e-03, 4.7769e-03,  ..., 4.0681e-05,
          4.7865e-03, 4.7839e-03],
         [4.7358e-03, 4.7509e-03, 4.7769e-03,  ..., 2.2564e-05,
          4.7865e-03, 4.7839e-03],
         [4.7358e-03, 4.7509e-03, 4.7769e-03,  ..., 9.9991e-01,
          4.7865e-03, 4.7839e-03],
         [9.8579e-01, 9.8575e-01, 9.8567e-01,  ..., 2.2564e-05,
          9.8564e-01, 9.8565e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 478:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0053, 0.0053,  ..., 0.0054, 0.0054, 0.0054],
         [0.0054, 0.0053, 0.0053,  ..., 0.0054, 0.0054, 0.0054],
         [0.0054, 0.0053, 0.0053,  ..., 0.0054, 0.0054, 0.0054],
         [0.9839, 0.9840, 0.9840,  ..., 0.9837, 0.9837, 0.9838]],
        [[0.0050, 0.0056, 0.0052,  ..., 0.0052, 0.0054, 0.0053],
         [0.0050, 0.0056, 0.0052,  ..., 0.0052, 0.0054, 0.0053],
         [0.0050, 0.0056, 0.0052,  ..., 0.0052, 0.0054, 0.0053],
         [0.9850, 0.9832, 0.9843,  ..., 0.9844, 0.9838, 0.9842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7952e-03, 4.8311e-03, 5.1069e-03,  ..., 4.6316e-03,
          4.8037e-03, 4.5481e-03],
         [4.7952e-03, 4.8311e-03, 5.1069e-03,  ..., 4.6316e-03,
          4.8037e-03, 4.5481e-03],
         [4.7952e-03, 4.8311e-03, 5.1069e-03,  ..., 4.6316e-03,
          4.8037e-03, 4.5481e-03],
         [9.8561e-01, 9.8551e-01, 9.8468e-01,  ..., 9.8611e-01,
          9.8559e-01, 9.8636e-01]],
        [[4.7017e-03, 4.6431e-03, 4.7479e-03,  ..., 6.5228e-05,
          4.7700e-03, 4.7572e-03],
         [4.7017e-03, 4.6431e-03, 4.7479e-03,  ..., 6.5228e-05,
          4.7700e-03, 4.7572e-03],
         [4.7017e-03, 4.6431e-03, 4.7479e-03,  ..., 9.9980e-01,
          4.7700e-03, 4.7572e-03],
         [9.8590e-01, 9.8607e-01, 9.8576e-01,  ..., 6.5228e-05,
          9.8569e-01, 9.8573e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 479:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0053, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.0053, 0.0053, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.0053, 0.0053, 0.0053,  ..., 0.0053, 0.0053, 0.0053],
         [0.9841, 0.9842, 0.9841,  ..., 0.9840, 0.9841, 0.9841]],
        [[0.0053, 0.0052, 0.0051,  ..., 0.0052, 0.0051, 0.0051],
         [0.0053, 0.0052, 0.0051,  ..., 0.0052, 0.0051, 0.0051],
         [0.0053, 0.0052, 0.0051,  ..., 0.0052, 0.0051, 0.0051],
         [0.9841, 0.9844, 0.9846,  ..., 0.9843, 0.9846, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:29,694 [Process: 0] Synchronize training processes
2024-08-16 16:43:29,695 [Process: 0] Evaluating...
2024-08-16 16:43:29,697 [Process: 0] EPOCH 479:
2024-08-16 16:43:29,698 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.8644e-03, 4.6724e-03, 4.8584e-03,  ..., 4.7964e-03,
          4.6786e-03, 4.7015e-03],
         [4.8644e-03, 4.6724e-03, 4.8584e-03,  ..., 4.7964e-03,
          4.6786e-03, 4.7015e-03],
         [4.8644e-03, 4.6724e-03, 4.8584e-03,  ..., 4.7964e-03,
          4.6786e-03, 4.7015e-03],
         [9.8541e-01, 9.8598e-01, 9.8542e-01,  ..., 9.8561e-01,
          9.8596e-01, 9.8590e-01]],
        [[4.6079e-03, 4.6438e-03, 4.7236e-03,  ..., 6.2492e-07,
          4.7528e-03, 4.6789e-03],
         [4.6079e-03, 4.6438e-03, 4.7236e-03,  ..., 6.2492e-07,
          4.7528e-03, 4.6789e-03],
         [4.6079e-03, 4.6438e-03, 4.7236e-03,  ..., 1.0000e+00,
          4.7528e-03, 4.6789e-03],
         [9.8618e-01, 9.8607e-01, 9.8583e-01,  ..., 6.2492e-07,
          9.8574e-01, 9.8596e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 480:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0054],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0054],
         [0.0054, 0.0054, 0.0054,  ..., 0.0054, 0.0054, 0.0054],
         [0.9839, 0.9839, 0.9839,  ..., 0.9838, 0.9839, 0.9839]],
        [[0.0055, 0.0049, 0.0052,  ..., 0.0052, 0.0053, 0.0053],
         [0.0055, 0.0049, 0.0052,  ..., 0.0052, 0.0053, 0.0053],
         [0.0055, 0.0049, 0.0052,  ..., 0.0052, 0.0053, 0.0053],
         [0.9836, 0.9852, 0.9843,  ..., 0.9844, 0.9841, 0.9841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:43:31,785 [Process: 0] Synchronize training processes
2024-08-16 16:43:31,786 [Process: 0] Evaluating...
2024-08-16 16:43:31,788 [Process: 0] EPOCH 480:
2024-08-16 16:43:31,790 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7901e-03, 5.1274e-03, 5.0372e-03,  ..., 4.6151e-03,
          4.6614e-03, 4.5314e-03],
         [4.7901e-03, 5.1274e-03, 5.0372e-03,  ..., 4.6151e-03,
          4.6614e-03, 4.5314e-03],
         [4.7901e-03, 5.1274e-03, 5.0372e-03,  ..., 4.6151e-03,
          4.6614e-03, 4.5314e-03],
         [9.8563e-01, 9.8462e-01, 9.8489e-01,  ..., 9.8615e-01,
          9.8602e-01, 9.8641e-01]],
        [[4.6362e-03, 4.6705e-03, 4.6516e-03,  ..., 9.9156e-07,
          4.7194e-03, 4.7430e-03],
         [4.6362e-03, 4.6705e-03, 4.6516e-03,  ..., 9.9156e-07,
          4.7194e-03, 4.7430e-03],
         [4.6362e-03, 4.6705e-03, 4.6516e-03,  ..., 1.0000e+00,
          4.7194e-03, 4.7430e-03],
         [9.8609e-01, 9.8599e-01, 9.8605e-01,  ..., 9.9156e-07,
          9.8584e-01, 9.8577e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 481:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:43:33,862 [Process: 0] Synchronize training processes
2024-08-16 16:43:33,862 [Process: 0] Evaluating...
2024-08-16 16:43:33,864 [Process: 0] EPOCH 481:
2024-08-16 16:43:33,866 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 198, in train_one_epoch
    outputs = self.model(batch=batch)["affordance"].squeeze(1)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 62, in forward
    x_rgb = self.clipunet_module(batch=batch) # [B, C_rgbfeat, H, W]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/clip_unet.py", line 317, in forward
    x = self.forward_encoder(receptacle, target)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/clip_unet.py", line 293, in forward_encoder
    x, x_im_feats = self.clip(image)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/encoders/clip_encoder.py", line 82, in forward
    batch = self.preprocess(batch)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torchvision/transforms/transforms.py", line 277, in forward
    return F.normalize(tensor, self.mean, self.std, self.inplace)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torchvision/transforms/functional.py", line 363, in normalize
    return F_t.normalize(tensor, mean=mean, std=std, inplace=inplace)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torchvision/transforms/_functional_tensor.py", line 920, in normalize
    mean = torch.as_tensor(mean, dtype=dtype, device=tensor.device)
KeyboardInterrupt