2024-08-19 13:21:31,669 [Worker 0] Is distributed: False
2024-08-19 13:21:31,669 [Process: 0] Starting training
2024-08-19 13:21:31,669 [Process: 0] EPOCH 1:
2024-08-19 13:21:31,672 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:33,288 [Process: 0] Synchronize training processes
2024-08-19 13:21:33,289 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3041, 0.2512, 0.2688,  ..., 0.3002, 0.1932, 0.1431],
         [0.2499, 0.2764, 0.2581,  ..., 0.2704, 0.2544, 0.2810],
         [0.1834, 0.2226, 0.2200,  ..., 0.1930, 0.1657, 0.2015],
         [0.2627, 0.2497, 0.2531,  ..., 0.2364, 0.3868, 0.3744]],
        [[0.2272, 0.3091, 0.2701,  ..., 0.3159, 0.2730, 0.1731],
         [0.2037, 0.2219, 0.2334,  ..., 0.2263, 0.2722, 0.1731],
         [0.2544, 0.1992, 0.2334,  ..., 0.2108, 0.1972, 0.4807],
         [0.3148, 0.2697, 0.2631,  ..., 0.2469, 0.2576, 0.1731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:21:34,224 [Process: 0] EPOCH 2:
2024-08-19 13:21:34,228 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:35,216 [Process: 0] Synchronize training processes
2024-08-19 13:21:35,217 [Process: 0] Evaluating...
2024-08-19 13:21:35,218 [Process: 0] EPOCH 3:
2024-08-19 13:21:35,220 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2677, 0.0052, 0.2658,  ..., 0.2655, 0.2750, 0.2762],
         [0.2604, 0.0052, 0.2603,  ..., 0.2502, 0.2634, 0.2610],
         [0.2061, 0.9845, 0.2068,  ..., 0.2254, 0.1903, 0.2019],
         [0.2657, 0.0052, 0.2671,  ..., 0.2589, 0.2712, 0.2608]],
        [[0.2732, 0.2778, 0.2585,  ..., 0.2735, 0.2572, 0.2704],
         [0.2401, 0.2466, 0.2591,  ..., 0.2555, 0.2380, 0.2551],
         [0.2268, 0.2071, 0.2101,  ..., 0.2138, 0.2199, 0.2066],
         [0.2598, 0.2684, 0.2723,  ..., 0.2572, 0.2849, 0.2679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2728, 0.2651, 0.2678,  ..., 0.2712, 0.2625, 0.2659],
         [0.2544, 0.2503, 0.2558,  ..., 0.2598, 0.2492, 0.2637],
         [0.2082, 0.2072, 0.2068,  ..., 0.2073, 0.2190, 0.2027],
         [0.2646, 0.2774, 0.2696,  ..., 0.2617, 0.2694, 0.2677]],
        [[0.1073, 0.2690, 0.2668,  ..., 0.2733, 0.2740, 0.1550],
         [0.1073, 0.2504, 0.2549,  ..., 0.2472, 0.2556, 0.1550],
         [0.6780, 0.2104, 0.2079,  ..., 0.2101, 0.2079, 0.5350],
         [0.1073, 0.2702, 0.2704,  ..., 0.2695, 0.2626, 0.1550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:36,190 [Process: 0] Synchronize training processes
2024-08-19 13:21:36,191 [Process: 0] Evaluating...
2024-08-19 13:21:36,193 [Process: 0] EPOCH 4:
2024-08-19 13:21:36,194 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:37,165 [Process: 0] Synchronize training processes
2024-08-19 13:21:37,165 [Process: 0] Evaluating...
2024-08-19 13:21:37,167 [Process: 0] EPOCH 5:
2024-08-19 13:21:37,168 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5776e-01, 9.3788e-08, 2.6452e-01,  ..., 2.6116e-01,
          2.6312e-01, 2.6263e-01],
         [2.4906e-01, 9.3788e-08, 2.4813e-01,  ..., 2.5514e-01,
          2.4814e-01, 2.5613e-01],
         [2.2332e-01, 1.0000e+00, 2.2340e-01,  ..., 2.1863e-01,
          2.2255e-01, 2.2157e-01],
         [2.6986e-01, 9.3788e-08, 2.6395e-01,  ..., 2.6507e-01,
          2.6619e-01, 2.5967e-01]],
        [[2.4697e-01, 2.5867e-01, 2.5794e-01,  ..., 2.4824e-01,
          1.4909e-01, 2.5981e-01],
         [2.3827e-01, 2.4689e-01, 2.4758e-01,  ..., 2.3868e-01,
          1.4909e-01, 2.4735e-01],
         [2.6775e-01, 2.2427e-01, 2.2849e-01,  ..., 2.6301e-01,
          5.5272e-01, 2.2520e-01],
         [2.4700e-01, 2.7017e-01, 2.6600e-01,  ..., 2.5007e-01,
          1.4909e-01, 2.6764e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2766, 0.2768, 0.2699,  ..., 0.2646, 0.2828, 0.2618],
         [0.2488, 0.2481, 0.2517,  ..., 0.2513, 0.2488, 0.2545],
         [0.1981, 0.1946, 0.2063,  ..., 0.2094, 0.1962, 0.2115],
         [0.2765, 0.2805, 0.2722,  ..., 0.2747, 0.2721, 0.2722]],
        [[0.1464, 0.2776, 0.2696,  ..., 0.2671, 0.2781, 0.2329],
         [0.1464, 0.2529, 0.2487,  ..., 0.2538, 0.2503, 0.2329],
         [0.5609, 0.1995, 0.2033,  ..., 0.2033, 0.1997, 0.3013],
         [0.1464, 0.2700, 0.2783,  ..., 0.2759, 0.2719, 0.2329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2735, 0.2500, 0.2719,  ..., 0.2721, 0.2749, 0.2600],
         [0.2444, 0.2500, 0.2441,  ..., 0.2445, 0.2472, 0.2455],
         [0.2065, 0.2500, 0.2156,  ..., 0.2117, 0.2123, 0.2186],
         [0.2755, 0.2500, 0.2684,  ..., 0.2717, 0.2656, 0.2758]],
        [[0.0284, 0.2731, 0.2755,  ..., 0.2793, 0.0025, 0.2688],
         [0.0284, 0.2467, 0.2417,  ..., 0.2435, 0.0025, 0.2488],
         [0.9148, 0.2115, 0.2179,  ..., 0.2102, 0.9924, 0.2119],
         [0.0284, 0.2686, 0.2649,  ..., 0.2670, 0.0025, 0.2705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2821, 0.2792, 0.2691,  ..., 0.2829, 0.2839, 0.2783],
         [0.2436, 0.2447, 0.2422,  ..., 0.2441, 0.2433, 0.2477],
         [0.2059, 0.2041, 0.2089,  ..., 0.2048, 0.2077, 0.1999],
         [0.2684, 0.2719, 0.2797,  ..., 0.2682, 0.2651, 0.2742]],
        [[0.0474, 0.2788, 0.2765,  ..., 0.2722, 0.2818, 0.0510],
         [0.0474, 0.2435, 0.2404,  ..., 0.2460, 0.2412, 0.0510],
         [0.8579, 0.2089, 0.2107,  ..., 0.2076, 0.1998, 0.8471],
         [0.0474, 0.2687, 0.2724,  ..., 0.2742, 0.2771, 0.0510]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:38,141 [Process: 0] Synchronize training processes
2024-08-19 13:21:38,141 [Process: 0] Evaluating...
2024-08-19 13:21:38,143 [Process: 0] EPOCH 6:
2024-08-19 13:21:38,145 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:39,146 [Process: 0] Synchronize training processes
2024-08-19 13:21:39,146 [Process: 0] Evaluating...
2024-08-19 13:21:39,148 [Process: 0] EPOCH 7:
2024-08-19 13:21:39,150 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1160, 0.2193, 0.2740,  ..., 0.2810, 0.2855, 0.2723],
         [0.1169, 0.2030, 0.2365,  ..., 0.2368, 0.2379, 0.2411],
         [0.6512, 0.3703, 0.2160,  ..., 0.2099, 0.2149, 0.2123],
         [0.1160, 0.2073, 0.2734,  ..., 0.2723, 0.2617, 0.2742]],
        [[0.2227, 0.2779, 0.2764,  ..., 0.2808, 0.2500, 0.2826],
         [0.2051, 0.2386, 0.2399,  ..., 0.2385, 0.2500, 0.2391],
         [0.3396, 0.2116, 0.2090,  ..., 0.2017, 0.2500, 0.2136],
         [0.2326, 0.2719, 0.2748,  ..., 0.2790, 0.2500, 0.2647]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2341, 0.2787, 0.2874,  ..., 0.2808, 0.2729, 0.2795],
         [0.2208, 0.2343, 0.2378,  ..., 0.2451, 0.2398, 0.2371],
         [0.3145, 0.2072, 0.2120,  ..., 0.2061, 0.2184, 0.2074],
         [0.2306, 0.2798, 0.2628,  ..., 0.2681, 0.2689, 0.2760]],
        [[0.2500, 0.2634, 0.2686,  ..., 0.2795, 0.2782, 0.2500],
         [0.2500, 0.2327, 0.2413,  ..., 0.2421, 0.2369, 0.2500],
         [0.2500, 0.2328, 0.2071,  ..., 0.2064, 0.2125, 0.2500],
         [0.2500, 0.2711, 0.2830,  ..., 0.2720, 0.2724, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1289, 0.2909, 0.2955,  ..., 0.2831, 0.2745, 0.2790],
         [0.1289, 0.2285, 0.2317,  ..., 0.2317, 0.2267, 0.2285],
         [0.6134, 0.2132, 0.2027,  ..., 0.2116, 0.2414, 0.2189],
         [0.1289, 0.2674, 0.2700,  ..., 0.2737, 0.2573, 0.2736]],
        [[0.2822, 0.2838, 0.2778,  ..., 0.2896, 0.2500, 0.2621],
         [0.2365, 0.2287, 0.2381,  ..., 0.2328, 0.2500, 0.2307],
         [0.2152, 0.2133, 0.2157,  ..., 0.2138, 0.2500, 0.2488],
         [0.2662, 0.2742, 0.2684,  ..., 0.2639, 0.2500, 0.2584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1037, 0.2882, 0.3034,  ..., 0.2982, 0.2912, 0.3059],
         [0.1090, 0.2197, 0.2187,  ..., 0.2243, 0.2319, 0.2212],
         [0.6836, 0.2155, 0.2054,  ..., 0.2160, 0.2151, 0.2049],
         [0.1037, 0.2765, 0.2725,  ..., 0.2615, 0.2618, 0.2680]],
        [[0.2467, 0.2836, 0.2783,  ..., 0.2794, 0.2859, 0.0387],
         [0.2467, 0.2316, 0.2261,  ..., 0.2316, 0.2234, 0.0387],
         [0.2598, 0.2048, 0.2169,  ..., 0.2138, 0.2137, 0.8838],
         [0.2467, 0.2800, 0.2787,  ..., 0.2753, 0.2770, 0.0387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:40,122 [Process: 0] Synchronize training processes
2024-08-19 13:21:40,122 [Process: 0] Evaluating...
2024-08-19 13:21:40,124 [Process: 0] EPOCH 8:
2024-08-19 13:21:40,126 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:41,096 [Process: 0] Synchronize training processes
2024-08-19 13:21:41,097 [Process: 0] Evaluating...
2024-08-19 13:21:41,098 [Process: 0] EPOCH 9:
2024-08-19 13:21:41,100 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1745, 0.2961, 0.3043,  ..., 0.2999, 0.2970, 0.2804],
         [0.1738, 0.2266, 0.2283,  ..., 0.2286, 0.2320, 0.2295],
         [0.4755, 0.2034, 0.1936,  ..., 0.2001, 0.1998, 0.2116],
         [0.1761, 0.2740, 0.2737,  ..., 0.2715, 0.2711, 0.2785]],
        [[0.2179, 0.3008, 0.2987,  ..., 0.2937, 0.0336, 0.1967],
         [0.1985, 0.2260, 0.2262,  ..., 0.2311, 0.0336, 0.1967],
         [0.3614, 0.2055, 0.2033,  ..., 0.2092, 0.8992, 0.4098],
         [0.2222, 0.2677, 0.2717,  ..., 0.2659, 0.0336, 0.1967]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1942, 0.2959, 0.3356,  ..., 0.3126, 0.2971, 0.3038],
         [0.1927, 0.2136, 0.2098,  ..., 0.2167, 0.2226, 0.2192],
         [0.4022, 0.2136, 0.1894,  ..., 0.2073, 0.2226, 0.2134],
         [0.2110, 0.2770, 0.2652,  ..., 0.2634, 0.2577, 0.2636]],
        [[0.0026, 0.2918, 0.2951,  ..., 0.3001, 0.2961, 0.0076],
         [0.0026, 0.2233, 0.2122,  ..., 0.2216, 0.2163, 0.0076],
         [0.9923, 0.2116, 0.2066,  ..., 0.2124, 0.2163, 0.9773],
         [0.0026, 0.2733, 0.2862,  ..., 0.2659, 0.2714, 0.0076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1963, 0.3036, 0.2904,  ..., 0.2952, 0.2921, 0.3144],
         [0.1963, 0.2147, 0.2227,  ..., 0.2220, 0.2153, 0.2108],
         [0.4112, 0.2125, 0.2227,  ..., 0.2014, 0.2092, 0.2020],
         [0.1963, 0.2692, 0.2641,  ..., 0.2814, 0.2834, 0.2729]],
        [[0.1735, 0.3245, 0.3088,  ..., 0.3264, 0.0028, 0.2033],
         [0.1750, 0.2069, 0.2143,  ..., 0.2071, 0.0028, 0.2033],
         [0.4611, 0.2032, 0.2055,  ..., 0.2012, 0.9917, 0.3900],
         [0.1903, 0.2654, 0.2714,  ..., 0.2653, 0.0028, 0.2033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1472, 0.3240, 0.3138,  ..., 0.3332, 0.3330, 0.3108],
         [0.1701, 0.2078, 0.2039,  ..., 0.2002, 0.1982, 0.2066],
         [0.5265, 0.1957, 0.2039,  ..., 0.1862, 0.1974, 0.2066],
         [0.1561, 0.2725, 0.2783,  ..., 0.2804, 0.2714, 0.2761]],
        [[0.0766, 0.3125, 0.3154,  ..., 0.2998, 0.3266, 0.2158],
         [0.0766, 0.2132, 0.2086,  ..., 0.2128, 0.1964, 0.2158],
         [0.7703, 0.2132, 0.1999,  ..., 0.2037, 0.1964, 0.3527],
         [0.0766, 0.2611, 0.2760,  ..., 0.2837, 0.2807, 0.2158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:42,077 [Process: 0] Synchronize training processes
2024-08-19 13:21:42,077 [Process: 0] Evaluating...
2024-08-19 13:21:42,079 [Process: 0] EPOCH 10:
2024-08-19 13:21:42,080 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:43,052 [Process: 0] Synchronize training processes
2024-08-19 13:21:43,053 [Process: 0] Evaluating...
2024-08-19 13:21:43,054 [Process: 0] EPOCH 11:
2024-08-19 13:21:43,056 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0211, 0.3197, 0.3237,  ..., 0.3141, 0.3039, 0.3209],
         [0.0211, 0.2027, 0.1992,  ..., 0.2038, 0.2103, 0.1959],
         [0.9368, 0.1877, 0.1968,  ..., 0.2038, 0.2103, 0.1924],
         [0.0211, 0.2898, 0.2804,  ..., 0.2782, 0.2755, 0.2907]],
        [[0.2576, 0.3287, 0.3441,  ..., 0.3128, 0.0336, 0.3255],
         [0.2158, 0.2078, 0.1926,  ..., 0.2026, 0.0336, 0.2042],
         [0.2598, 0.2078, 0.1926,  ..., 0.2026, 0.8993, 0.1959],
         [0.2669, 0.2557, 0.2708,  ..., 0.2820, 0.0336, 0.2745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1541, 0.3551, 0.3682,  ..., 0.3424, 0.3163, 0.3250],
         [0.1741, 0.1936, 0.1867,  ..., 0.1973, 0.2086, 0.2000],
         [0.5177, 0.1869, 0.1867,  ..., 0.1973, 0.2086, 0.2000],
         [0.1541, 0.2644, 0.2585,  ..., 0.2630, 0.2665, 0.2751]],
        [[0.2386, 0.3415, 0.3438,  ..., 0.3089, 0.3274, 0.1286],
         [0.2386, 0.1997, 0.1925,  ..., 0.2033, 0.1956, 0.1286],
         [0.2842, 0.1888, 0.1852,  ..., 0.2033, 0.1956, 0.6143],
         [0.2386, 0.2700, 0.2786,  ..., 0.2844, 0.2813, 0.1286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3318, 0.3032,  ..., 0.3457, 0.3071, 0.3294],
         [0.2500, 0.1984, 0.2101,  ..., 0.1863, 0.2062, 0.1897],
         [0.2500, 0.1984, 0.2101,  ..., 0.1863, 0.2062, 0.1897],
         [0.2500, 0.2715, 0.2765,  ..., 0.2817, 0.2804, 0.2912]],
        [[0.2501, 0.3296, 0.3246,  ..., 0.3152, 0.0727, 0.2066],
         [0.2157, 0.1976, 0.2068,  ..., 0.2032, 0.0727, 0.2066],
         [0.2811, 0.1976, 0.2068,  ..., 0.2032, 0.7818, 0.3801],
         [0.2531, 0.2751, 0.2617,  ..., 0.2784, 0.0727, 0.2066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1864, 0.3079, 0.3312,  ..., 0.3160, 0.3519, 0.3174],
         [0.1864, 0.2080, 0.2002,  ..., 0.2145, 0.1960, 0.2054],
         [0.4407, 0.2080, 0.2002,  ..., 0.2145, 0.1960, 0.2054],
         [0.1864, 0.2760, 0.2684,  ..., 0.2551, 0.2561, 0.2719]],
        [[0.2500, 0.3260, 0.3605,  ..., 0.3411, 0.3158, 0.1114],
         [0.2500, 0.1942, 0.1780,  ..., 0.1909, 0.1987, 0.1114],
         [0.2500, 0.1942, 0.1756,  ..., 0.1909, 0.1987, 0.6657],
         [0.2500, 0.2855, 0.2859,  ..., 0.2770, 0.2869, 0.1114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:21:44,028 [Process: 0] Synchronize training processes
2024-08-19 13:21:44,028 [Process: 0] Evaluating...
2024-08-19 13:21:44,958 [Process: 0] EPOCH 12:
2024-08-19 13:21:44,960 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.3652, 0.3564,  ..., 0.3393, 0.3134, 0.3705],
         [0.2500, 0.1814, 0.1892,  ..., 0.1885, 0.1995, 0.1714],
         [0.2500, 0.1814, 0.1795,  ..., 0.1855, 0.1995, 0.1714],
         [0.2500, 0.2721, 0.2749,  ..., 0.2868, 0.2875, 0.2866]],
        [[0.2387, 0.3275, 0.3488,  ..., 0.3507, 0.0671, 0.1232],
         [0.2028, 0.1991, 0.2012,  ..., 0.1894, 0.0671, 0.1232],
         [0.2907, 0.1991, 0.2012,  ..., 0.1894, 0.7986, 0.6303],
         [0.2679, 0.2743, 0.2488,  ..., 0.2705, 0.0671, 0.1232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1796, 0.3470, 0.3636,  ..., 0.3607, 0.3424, 0.3285],
         [0.1796, 0.1858, 0.1852,  ..., 0.1936, 0.1962, 0.2013],
         [0.4611, 0.1858, 0.1852,  ..., 0.1779, 0.1962, 0.2013],
         [0.1796, 0.2813, 0.2659,  ..., 0.2679, 0.2651, 0.2688]],
        [[0.0510, 0.3489, 0.3772,  ..., 0.3726, 0.3565, 0.0851],
         [0.0510, 0.1873, 0.1773,  ..., 0.1750, 0.1676, 0.0851],
         [0.8471, 0.1873, 0.1773,  ..., 0.1750, 0.1676, 0.7446],
         [0.0510, 0.2765, 0.2682,  ..., 0.2774, 0.3083, 0.0851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2166, 0.3151, 0.3697,  ..., 0.3272, 0.3472, 0.3419],
         [0.2166, 0.1925, 0.1623,  ..., 0.1879, 0.1811, 0.1893],
         [0.3503, 0.1925, 0.1623,  ..., 0.1879, 0.1783, 0.1893],
         [0.2166, 0.2999, 0.3057,  ..., 0.2970, 0.2934, 0.2795]],
        [[0.2115, 0.3201, 0.3346,  ..., 0.3362, 0.0504, 0.1060],
         [0.2012, 0.2010, 0.1973,  ..., 0.1930, 0.0504, 0.1060],
         [0.3531, 0.2010, 0.1973,  ..., 0.1930, 0.8487, 0.6820],
         [0.2342, 0.2779, 0.2708,  ..., 0.2779, 0.0504, 0.1060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:21:45,932 [Process: 0] Synchronize training processes
2024-08-19 13:21:45,932 [Process: 0] Evaluating...
2024-08-19 13:21:45,934 [Process: 0] EPOCH 13:
2024-08-19 13:21:45,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:46,905 [Process: 0] Synchronize training processes
2024-08-19 13:21:46,905 [Process: 0] Evaluating...
2024-08-19 13:21:46,907 [Process: 0] EPOCH 14:
2024-08-19 13:21:46,909 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1732, 0.3708, 0.3692,  ..., 0.3616, 0.3347, 0.3287],
         [0.1866, 0.1777, 0.1736,  ..., 0.1778, 0.1876, 0.1947],
         [0.4664, 0.1707, 0.1711,  ..., 0.1778, 0.1876, 0.1947],
         [0.1738, 0.2807, 0.2861,  ..., 0.2829, 0.2902, 0.2818]],
        [[0.0845, 0.3131, 0.3368,  ..., 0.3459, 0.3500, 0.1057],
         [0.0845, 0.2009, 0.1900,  ..., 0.1828, 0.1781, 0.1057],
         [0.7464, 0.2009, 0.1900,  ..., 0.1828, 0.1781, 0.6830],
         [0.0845, 0.2852, 0.2832,  ..., 0.2884, 0.2939, 0.1057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1805, 0.3474, 0.3799,  ..., 0.3154, 0.3254, 0.3100],
         [0.1816, 0.1792, 0.1749,  ..., 0.1995, 0.1940, 0.1926],
         [0.4461, 0.1792, 0.1647,  ..., 0.1995, 0.1940, 0.1926],
         [0.1918, 0.2942, 0.2805,  ..., 0.2856, 0.2866, 0.3049]],
        [[0.2569, 0.3743, 0.3426,  ..., 0.3496, 0.0948, 0.1883],
         [0.2053, 0.1748, 0.1942,  ..., 0.1914, 0.0948, 0.1883],
         [0.2663, 0.1748, 0.1942,  ..., 0.1914, 0.7155, 0.4352],
         [0.2715, 0.2762, 0.2690,  ..., 0.2676, 0.0948, 0.1883]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2016, 0.3906, 0.3725,  ..., 0.3385, 0.3710, 0.4008],
         [0.2016, 0.1655, 0.1720,  ..., 0.1848, 0.1801, 0.1617],
         [0.3428, 0.1649, 0.1720,  ..., 0.1848, 0.1801, 0.1617],
         [0.2540, 0.2791, 0.2835,  ..., 0.2920, 0.2687, 0.2757]],
        [[0.0847, 0.3686, 0.3893,  ..., 0.4023, 0.3309, 0.1148],
         [0.0847, 0.1712, 0.1708,  ..., 0.1576, 0.1883, 0.1148],
         [0.7460, 0.1712, 0.1584,  ..., 0.1576, 0.1792, 0.6557],
         [0.0847, 0.2890, 0.2815,  ..., 0.2825, 0.3016, 0.1148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1938, 0.3369, 0.3781,  ..., 0.3368, 0.3019, 0.3313],
         [0.2022, 0.1757, 0.1637,  ..., 0.1768, 0.1821, 0.1775],
         [0.3930, 0.1757, 0.1481,  ..., 0.1687, 0.1758, 0.1775],
         [0.2110, 0.3117, 0.3101,  ..., 0.3178, 0.3402, 0.3136]],
        [[0.2685, 0.3829, 0.3911,  ..., 0.3433, 0.1802, 0.1700],
         [0.2087, 0.1731, 0.1698,  ..., 0.1840, 0.1802, 0.1700],
         [0.2494, 0.1731, 0.1646,  ..., 0.1740, 0.4593, 0.4901],
         [0.2733, 0.2709, 0.2745,  ..., 0.2988, 0.1802, 0.1700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:21:47,901 [Process: 0] Synchronize training processes
2024-08-19 13:21:47,902 [Process: 0] Evaluating...
2024-08-19 13:21:47,903 [Process: 0] EPOCH 15:
2024-08-19 13:21:47,905 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:48,880 [Process: 0] Synchronize training processes
2024-08-19 13:21:48,880 [Process: 0] Evaluating...
2024-08-19 13:21:48,882 [Process: 0] EPOCH 16:
2024-08-19 13:21:48,883 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2825, 0.3979, 0.3730,  ..., 0.3821, 0.3611, 0.3501],
         [0.2067, 0.1694, 0.1702,  ..., 0.1721, 0.1906, 0.1956],
         [0.2162, 0.1694, 0.1702,  ..., 0.1721, 0.1781, 0.1956],
         [0.2945, 0.2633, 0.2867,  ..., 0.2737, 0.2702, 0.2588]],
        [[0.0334, 0.3418, 0.3076,  ..., 0.3600, 0.3575, 0.1011],
         [0.0334, 0.1757, 0.1879,  ..., 0.1603, 0.1680, 0.1011],
         [0.8997, 0.1728, 0.1879,  ..., 0.1544, 0.1655, 0.6967],
         [0.0334, 0.3097, 0.3167,  ..., 0.3253, 0.3091, 0.1011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2566, 0.3959, 0.3589,  ..., 0.4142, 0.3335, 0.3402],
         [0.1991, 0.1673, 0.1799,  ..., 0.1584, 0.1832, 0.1796],
         [0.1991, 0.1496, 0.1701,  ..., 0.1357, 0.1624, 0.1595],
         [0.3451, 0.2872, 0.2911,  ..., 0.2917, 0.3209, 0.3207]],
        [[0.2737, 0.3808, 0.3364,  ..., 0.3889, 0.1046, 0.1545],
         [0.2083, 0.1776, 0.1965,  ..., 0.1704, 0.1046, 0.1545],
         [0.2350, 0.1776, 0.1965,  ..., 0.1611, 0.6863, 0.5364],
         [0.2830, 0.2640, 0.2707,  ..., 0.2797, 0.1046, 0.1545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2387, 0.3788, 0.4028,  ..., 0.3172, 0.3147, 0.3266],
         [0.2054, 0.1721, 0.1526,  ..., 0.1965, 0.2045, 0.1864],
         [0.2925, 0.1721, 0.1458,  ..., 0.1965, 0.2045, 0.1842],
         [0.2635, 0.2771, 0.2988,  ..., 0.2899, 0.2762, 0.3028]],
        [[0.0526, 0.3687, 0.4387,  ..., 0.3729, 0.4186, 0.0582],
         [0.0526, 0.1608, 0.1458,  ..., 0.1628, 0.1495, 0.0582],
         [0.8423, 0.1519, 0.1304,  ..., 0.1628, 0.1495, 0.8254],
         [0.0526, 0.3186, 0.2850,  ..., 0.3015, 0.2824, 0.0582]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3012, 0.3388, 0.3612,  ..., 0.3464, 0.3444, 0.3623],
         [0.1835, 0.1731, 0.1682,  ..., 0.1747, 0.1716, 0.1634],
         [0.1799, 0.1731, 0.1531,  ..., 0.1616, 0.1695, 0.1454],
         [0.3355, 0.3150, 0.3175,  ..., 0.3173, 0.3145, 0.3289]],
        [[0.2523, 0.3744, 0.3874,  ..., 0.3401, 0.1192, 0.1986],
         [0.1998, 0.1693, 0.1703,  ..., 0.1899, 0.1192, 0.1986],
         [0.2628, 0.1671, 0.1703,  ..., 0.1899, 0.6423, 0.4042],
         [0.2850, 0.2892, 0.2719,  ..., 0.2801, 0.1192, 0.1986]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:21:49,857 [Process: 0] Synchronize training processes
2024-08-19 13:21:49,857 [Process: 0] Evaluating...
2024-08-19 13:21:49,859 [Process: 0] EPOCH 17:
2024-08-19 13:21:49,861 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:50,834 [Process: 0] Synchronize training processes
2024-08-19 13:21:50,835 [Process: 0] Evaluating...
2024-08-19 13:21:50,836 [Process: 0] EPOCH 18:
2024-08-19 13:21:50,838 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1715, 0.3709, 0.4081,  ..., 0.3716, 0.3358, 0.3506],
         [0.1715, 0.1843, 0.1658,  ..., 0.1872, 0.1869, 0.1737],
         [0.4855, 0.1843, 0.1502,  ..., 0.1872, 0.1869, 0.1737],
         [0.1715, 0.2606, 0.2758,  ..., 0.2539, 0.2905, 0.3020]],
        [[0.0525, 0.3370, 0.3445,  ..., 0.4235, 0.4286, 0.0852],
         [0.0525, 0.1598, 0.1786,  ..., 0.1169, 0.1404, 0.0852],
         [0.8425, 0.1430, 0.1786,  ..., 0.1115, 0.1214, 0.7443],
         [0.0525, 0.3602, 0.2982,  ..., 0.3481, 0.3097, 0.0852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3385, 0.3747, 0.3026,  ..., 0.2938, 0.3907, 0.3897],
         [0.1509, 0.1638, 0.1813,  ..., 0.1805, 0.1582, 0.1508],
         [0.1457, 0.1409, 0.1813,  ..., 0.1805, 0.1480, 0.1218],
         [0.3649, 0.3205, 0.3347,  ..., 0.3452, 0.3031, 0.3377]],
        [[0.2813, 0.4246, 0.4212,  ..., 0.3058, 0.0974, 0.1580],
         [0.2104, 0.1610, 0.1577,  ..., 0.2065, 0.0974, 0.1580],
         [0.2341, 0.1610, 0.1577,  ..., 0.2065, 0.7077, 0.5260],
         [0.2741, 0.2534, 0.2633,  ..., 0.2811, 0.0974, 0.1580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1401, 0.3589, 0.4285,  ..., 0.3808, 0.2788, 0.3968],
         [0.1401, 0.1759, 0.1696,  ..., 0.1783, 0.2004, 0.1605],
         [0.5797, 0.1759, 0.1696,  ..., 0.1783, 0.2093, 0.1605],
         [0.1401, 0.2892, 0.2323,  ..., 0.2626, 0.3115, 0.2822]],
        [[0.0411, 0.4200, 0.3456,  ..., 0.3798, 0.4845, 0.1014],
         [0.0411, 0.1167, 0.1411,  ..., 0.1228, 0.1244, 0.1014],
         [0.8768, 0.1096, 0.1410,  ..., 0.0950, 0.1211, 0.6959],
         [0.0411, 0.3537, 0.3723,  ..., 0.4024, 0.2700, 0.1014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3737, 0.4249, 0.4544,  ..., 0.4561, 0.3258, 0.3058],
         [0.1381, 0.1133, 0.1404,  ..., 0.1238, 0.1499, 0.1891],
         [0.1381, 0.1026, 0.1129,  ..., 0.1172, 0.1470, 0.1804],
         [0.3501, 0.3593, 0.2923,  ..., 0.3029, 0.3774, 0.3248]],
        [[0.3546, 0.3652, 0.3544,  ..., 0.3963, 0.0831, 0.1459],
         [0.1975, 0.1886, 0.1706,  ..., 0.1907, 0.0831, 0.1539],
         [0.1975, 0.1886, 0.1706,  ..., 0.1811, 0.7508, 0.5543],
         [0.2504, 0.2576, 0.3045,  ..., 0.2320, 0.0831, 0.1459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:21:51,813 [Process: 0] Synchronize training processes
2024-08-19 13:21:51,813 [Process: 0] Evaluating...
2024-08-19 13:21:51,815 [Process: 0] EPOCH 19:
2024-08-19 13:21:51,817 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:52,787 [Process: 0] Synchronize training processes
2024-08-19 13:21:52,788 [Process: 0] Evaluating...
2024-08-19 13:21:52,789 [Process: 0] EPOCH 20:
2024-08-19 13:21:52,791 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1630, 0.3709, 0.4242,  ..., 0.3962, 0.2781, 0.3524],
         [0.1630, 0.1808, 0.1604,  ..., 0.1675, 0.2127, 0.1826],
         [0.5110, 0.1808, 0.1604,  ..., 0.1675, 0.2252, 0.1826],
         [0.1630, 0.2675, 0.2549,  ..., 0.2689, 0.2841, 0.2825]],
        [[0.0515, 0.4733, 0.3792,  ..., 0.4781, 0.3902, 0.0942],
         [0.0515, 0.1291, 0.1374,  ..., 0.1454, 0.1606, 0.0942],
         [0.8456, 0.0926, 0.1374,  ..., 0.1434, 0.1539, 0.7175],
         [0.0515, 0.3049, 0.3461,  ..., 0.2332, 0.2953, 0.0942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5054, 0.3598, 0.4263,  ..., 0.4715, 0.4672, 0.2412],
         [0.1242, 0.1340, 0.1407,  ..., 0.1117, 0.1218, 0.1701],
         [0.0842, 0.1294, 0.1219,  ..., 0.0885, 0.1169, 0.1633],
         [0.2862, 0.3768, 0.3110,  ..., 0.3282, 0.2941, 0.4254]],
        [[0.4083, 0.3384, 0.3900,  ..., 0.3001, 0.0665, 0.1426],
         [0.1765, 0.2117, 0.1952,  ..., 0.1983, 0.0665, 0.1426],
         [0.1708, 0.2117, 0.1952,  ..., 0.1983, 0.8004, 0.5722],
         [0.2444, 0.2383, 0.2196,  ..., 0.3032, 0.0665, 0.1426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1816, 0.5095, 0.3513,  ..., 0.2609, 0.2298, 0.3133],
         [0.1816, 0.1565, 0.1927,  ..., 0.2193, 0.2229, 0.2156],
         [0.4543, 0.1565, 0.1927,  ..., 0.2297, 0.2323, 0.2156],
         [0.1826, 0.1775, 0.2633,  ..., 0.2901, 0.3150, 0.2554]],
        [[0.0518, 0.4029, 0.4339,  ..., 0.5779, 0.5145, 0.1116],
         [0.0518, 0.1301, 0.1568,  ..., 0.0998, 0.1158, 0.1116],
         [0.8447, 0.1180, 0.1568,  ..., 0.0755, 0.0995, 0.6651],
         [0.0518, 0.3489, 0.2524,  ..., 0.2467, 0.2701, 0.1116]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4660, 0.3957, 0.4379,  ..., 0.4291, 0.3478, 0.1556],
         [0.1127, 0.1247, 0.1181,  ..., 0.1319, 0.1430, 0.1510],
         [0.1114, 0.1012, 0.0942,  ..., 0.1079, 0.1340, 0.1510],
         [0.3099, 0.3784, 0.3499,  ..., 0.3310, 0.3752, 0.5423]],
        [[0.4915, 0.2779, 0.3116,  ..., 0.2910, 0.2019, 0.0977],
         [0.1668, 0.2087, 0.2252,  ..., 0.2107, 0.2019, 0.0977],
         [0.1668, 0.2328, 0.2252,  ..., 0.2138, 0.3943, 0.7069],
         [0.1749, 0.2806, 0.2379,  ..., 0.2845, 0.2019, 0.0977]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:21:53,761 [Process: 0] Synchronize training processes
2024-08-19 13:21:53,762 [Process: 0] Evaluating...
2024-08-19 13:21:53,763 [Process: 0] EPOCH 21:
2024-08-19 13:21:53,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:54,741 [Process: 0] Synchronize training processes
2024-08-19 13:21:54,741 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1588, 0.4734, 0.3519,  ..., 0.2794, 0.2484, 0.3475],
         [0.1588, 0.1577, 0.1893,  ..., 0.2165, 0.2192, 0.1988],
         [0.5168, 0.1577, 0.1893,  ..., 0.2205, 0.2424, 0.1988],
         [0.1656, 0.2113, 0.2696,  ..., 0.2836, 0.2899, 0.2548]],
        [[0.0637, 0.3788, 0.6252,  ..., 0.6183, 0.5967, 0.0855],
         [0.0637, 0.1527, 0.0983,  ..., 0.0909, 0.1177, 0.0855],
         [0.8090, 0.1527, 0.0905,  ..., 0.0808, 0.0789, 0.7435],
         [0.0637, 0.3158, 0.1860,  ..., 0.2101, 0.2068, 0.0855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3640, 0.2798, 0.3439,  ..., 0.5203, 0.3176, 0.2757],
         [0.1512, 0.1407, 0.1238,  ..., 0.1235, 0.1229, 0.1480],
         [0.1422, 0.1192, 0.1190,  ..., 0.1201, 0.1229, 0.1359],
         [0.3425, 0.4603, 0.4133,  ..., 0.2362, 0.4367, 0.4404]],
        [[0.3600, 0.2830, 0.6152,  ..., 0.2575, 0.0787, 0.1092],
         [0.2053, 0.2119, 0.1261,  ..., 0.2053, 0.0787, 0.1092],
         [0.2053, 0.2450, 0.1261,  ..., 0.2339, 0.7638, 0.6725],
         [0.2294, 0.2601, 0.1327,  ..., 0.3033, 0.0787, 0.1092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1216, 0.4787, 0.2955,  ..., 0.3166, 0.1898, 0.3271],
         [0.1216, 0.1473, 0.2025,  ..., 0.2090, 0.1898, 0.1923],
         [0.6353, 0.1451, 0.2025,  ..., 0.2237, 0.4306, 0.1923],
         [0.1216, 0.2289, 0.2996,  ..., 0.2507, 0.1898, 0.2883]],
        [[0.0596, 0.2335, 0.4376,  ..., 0.3437, 0.4480, 0.0370],
         [0.0596, 0.1099, 0.1118,  ..., 0.1453, 0.1212, 0.0370],
         [0.8213, 0.1096, 0.1118,  ..., 0.1313, 0.1212, 0.8889],
         [0.0596, 0.5470, 0.3388,  ..., 0.3796, 0.3096, 0.0370]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:21:55,672 [Process: 0] EPOCH 22:
2024-08-19 13:21:55,674 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:56,643 [Process: 0] Synchronize training processes
2024-08-19 13:21:56,644 [Process: 0] Evaluating...
2024-08-19 13:21:56,645 [Process: 0] EPOCH 23:
2024-08-19 13:21:56,647 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4082, 0.2354, 0.3687,  ..., 0.5286, 0.3048, 0.2976],
         [0.1071, 0.1390, 0.1479,  ..., 0.1218, 0.1614, 0.1543],
         [0.0994, 0.1371, 0.1467,  ..., 0.1138, 0.1614, 0.1225],
         [0.3852, 0.4885, 0.3366,  ..., 0.2359, 0.3725, 0.4256]],
        [[0.4485, 0.1955, 0.4913,  ..., 0.2640, 0.2104, 0.1040],
         [0.1838, 0.1955, 0.1696,  ..., 0.2029, 0.2104, 0.1040],
         [0.1838, 0.4136, 0.1696,  ..., 0.2123, 0.3689, 0.6881],
         [0.1838, 0.1955, 0.1696,  ..., 0.3208, 0.2104, 0.1040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1468, 0.4440, 0.2620,  ..., 0.4657, 0.1901, 0.3994],
         [0.1468, 0.1515, 0.2067,  ..., 0.1781, 0.1901, 0.1767],
         [0.5595, 0.1515, 0.2157,  ..., 0.1781, 0.3984, 0.1767],
         [0.1468, 0.2530, 0.3156,  ..., 0.1781, 0.2214, 0.2472]],
        [[0.0388, 0.2104, 0.5972,  ..., 0.5956, 0.5923, 0.0662],
         [0.0388, 0.1341, 0.0948,  ..., 0.1330, 0.1359, 0.0662],
         [0.8837, 0.1341, 0.0948,  ..., 0.1058, 0.1359, 0.8015],
         [0.0388, 0.5214, 0.2132,  ..., 0.1656, 0.1359, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1623, 0.1402, 0.2065,  ..., 0.3323, 0.1820, 0.1412],
         [0.1125, 0.1402, 0.1560,  ..., 0.1349, 0.1611, 0.1412],
         [0.1102, 0.5109, 0.1560,  ..., 0.1338, 0.1611, 0.1412],
         [0.6150, 0.2087, 0.4816,  ..., 0.3990, 0.4958, 0.5763]],
        [[0.7992, 0.5724, 0.6031,  ..., 0.2445, 0.1285, 0.1561],
         [0.0684, 0.1425, 0.1323,  ..., 0.2105, 0.1285, 0.1561],
         [0.0662, 0.1425, 0.1323,  ..., 0.2512, 0.6145, 0.3563],
         [0.0662, 0.1425, 0.1323,  ..., 0.2938, 0.1285, 0.3315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:21:57,643 [Process: 0] Synchronize training processes
2024-08-19 13:21:57,643 [Process: 0] Evaluating...
2024-08-19 13:21:57,645 [Process: 0] EPOCH 24:
2024-08-19 13:21:57,647 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:21:58,620 [Process: 0] Synchronize training processes
2024-08-19 13:21:58,621 [Process: 0] Evaluating...
2024-08-19 13:21:58,622 [Process: 0] EPOCH 25:
2024-08-19 13:21:58,624 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1419, 0.4996, 0.2636,  ..., 0.3519, 0.1493, 0.3158],
         [0.1419, 0.1547, 0.2252,  ..., 0.2040, 0.1493, 0.2077],
         [0.5743, 0.1547, 0.2297,  ..., 0.2040, 0.5522, 0.2077],
         [0.1419, 0.1909, 0.2815,  ..., 0.2400, 0.1493, 0.2687]],
        [[0.0397, 0.1298, 0.5038,  ..., 0.5801, 0.6491, 0.0978],
         [0.0397, 0.1002, 0.1738,  ..., 0.1042, 0.0995, 0.0978],
         [0.8809, 0.1002, 0.1353,  ..., 0.0927, 0.0962, 0.7067],
         [0.0397, 0.6699, 0.1871,  ..., 0.2230, 0.1552, 0.0978]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2534, 0.1706, 0.1909,  ..., 0.6435, 0.3523, 0.2105],
         [0.1413, 0.1117, 0.1381,  ..., 0.1393, 0.1481, 0.1339],
         [0.1413, 0.1040, 0.1362,  ..., 0.1086, 0.1277, 0.1217],
         [0.4639, 0.6137, 0.5347,  ..., 0.1086, 0.3720, 0.5339]],
        [[0.5492, 0.1857, 0.4548,  ..., 0.1745, 0.1319, 0.1110],
         [0.1503, 0.1857, 0.1817,  ..., 0.1745, 0.1319, 0.1110],
         [0.1503, 0.4428, 0.1817,  ..., 0.3089, 0.5522, 0.6671],
         [0.1503, 0.1857, 0.1817,  ..., 0.3420, 0.1840, 0.1110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1705, 0.2886, 0.3698,  ..., 0.3444, 0.1197, 0.2353],
         [0.1705, 0.1869, 0.2094,  ..., 0.1716, 0.1197, 0.1736],
         [0.4466, 0.1869, 0.2094,  ..., 0.1412, 0.6408, 0.1797],
         [0.2124, 0.3377, 0.2114,  ..., 0.3429, 0.1197, 0.4114]],
        [[0.0453, 0.2650, 0.5825,  ..., 0.6490, 0.6299, 0.0638],
         [0.0453, 0.1167, 0.1328,  ..., 0.1172, 0.1131, 0.0638],
         [0.8640, 0.0816, 0.0963,  ..., 0.1085, 0.0865, 0.8086],
         [0.0453, 0.5367, 0.1885,  ..., 0.1253, 0.1704, 0.0638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2691, 0.1491, 0.2975,  ..., 0.1916, 0.3342, 0.1594],
         [0.1949, 0.1023, 0.1603,  ..., 0.1531, 0.1719, 0.1390],
         [0.1938, 0.1023, 0.1579,  ..., 0.1531, 0.1675, 0.1390],
         [0.3422, 0.6464, 0.3844,  ..., 0.5022, 0.3265, 0.5626]],
        [[0.6862, 0.4157, 0.4665,  ..., 0.1847, 0.0796, 0.0654],
         [0.1317, 0.1925, 0.1716,  ..., 0.1847, 0.0796, 0.0654],
         [0.0824, 0.1820, 0.1530,  ..., 0.2532, 0.7611, 0.8038],
         [0.0997, 0.2097, 0.2089,  ..., 0.3774, 0.0796, 0.0654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1577, 0.2977, 0.2172,  ..., 0.5104, 0.0667, 0.1545],
         [0.1577, 0.1794, 0.2172,  ..., 0.1392, 0.0667, 0.1545],
         [0.5268, 0.1794, 0.2762,  ..., 0.1392, 0.7999, 0.3782],
         [0.1577, 0.3435, 0.2894,  ..., 0.2112, 0.0667, 0.3128]],
        [[0.0523, 0.1067, 0.5919,  ..., 0.5636, 0.1343, 0.0751],
         [0.0523, 0.0577, 0.0990,  ..., 0.0958, 0.1177, 0.0751],
         [0.8430, 0.0577, 0.0990,  ..., 0.0855, 0.1177, 0.7747],
         [0.0523, 0.7780, 0.2100,  ..., 0.2551, 0.6303, 0.0751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:21:59,595 [Process: 0] Synchronize training processes
2024-08-19 13:21:59,595 [Process: 0] Evaluating...
2024-08-19 13:21:59,597 [Process: 0] EPOCH 26:
2024-08-19 13:21:59,599 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:00,572 [Process: 0] Synchronize training processes
2024-08-19 13:22:00,572 [Process: 0] Evaluating...
2024-08-19 13:22:00,574 [Process: 0] EPOCH 27:
2024-08-19 13:22:00,575 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2177, 0.1368, 0.1847,  ..., 0.7398, 0.3868, 0.1359],
         [0.1714, 0.0970, 0.1522,  ..., 0.0840, 0.1557, 0.0996],
         [0.1555, 0.0970, 0.1522,  ..., 0.0840, 0.1436, 0.0971],
         [0.4554, 0.6693, 0.5109,  ..., 0.0923, 0.3140, 0.6674]],
        [[0.8759, 0.2799, 0.2821,  ..., 0.1638, 0.1306, 0.1717],
         [0.0414, 0.1953, 0.2054,  ..., 0.1638, 0.1306, 0.1717],
         [0.0414, 0.1804, 0.2054,  ..., 0.5086, 0.6082, 0.3859],
         [0.0414, 0.3445, 0.3071,  ..., 0.1638, 0.1306, 0.2707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0761, 0.2562, 0.2951,  ..., 0.7114, 0.1808, 0.4139],
         [0.0761, 0.1805, 0.1917,  ..., 0.0962, 0.1808, 0.1493],
         [0.7717, 0.1794, 0.1917,  ..., 0.0962, 0.2557, 0.1493],
         [0.0761, 0.3840, 0.3214,  ..., 0.0962, 0.3826, 0.2876]],
        [[0.0519, 0.1253, 0.7621,  ..., 0.3714, 0.1068, 0.1389],
         [0.0519, 0.0980, 0.0804,  ..., 0.1350, 0.0997, 0.1389],
         [0.8442, 0.0944, 0.0724,  ..., 0.1104, 0.0997, 0.5832],
         [0.0519, 0.6822, 0.0851,  ..., 0.3832, 0.6939, 0.1389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3132, 0.1096, 0.1132,  ..., 0.6828, 0.4014, 0.1563],
         [0.1487, 0.1096, 0.1132,  ..., 0.1046, 0.1258, 0.1563],
         [0.1487, 0.6712, 0.1132,  ..., 0.1046, 0.1065, 0.1880],
         [0.3894, 0.1096, 0.6603,  ..., 0.1079, 0.3663, 0.4993]],
        [[0.7782, 0.2200, 0.1931,  ..., 0.1849, 0.1449, 0.1050],
         [0.0739, 0.2032, 0.1931,  ..., 0.1849, 0.1449, 0.1050],
         [0.0739, 0.2072, 0.2102,  ..., 0.3715, 0.5461, 0.6850],
         [0.0739, 0.3697, 0.4035,  ..., 0.2586, 0.1640, 0.1050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1341, 0.2457, 0.2959,  ..., 0.3026, 0.1734, 0.1872],
         [0.1341, 0.1761, 0.1881,  ..., 0.1614, 0.1734, 0.1872],
         [0.5976, 0.1712, 0.1881,  ..., 0.1614, 0.4390, 0.2929],
         [0.1341, 0.4070, 0.3280,  ..., 0.3746, 0.2142, 0.3326]],
        [[0.0343, 0.1130, 0.7506,  ..., 0.1310, 0.1036, 0.0712],
         [0.0343, 0.1130, 0.0832,  ..., 0.1039, 0.1036, 0.0712],
         [0.8970, 0.1130, 0.0831,  ..., 0.1039, 0.1036, 0.7865],
         [0.0343, 0.6611, 0.0831,  ..., 0.6611, 0.6893, 0.0712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:01,547 [Process: 0] Synchronize training processes
2024-08-19 13:22:01,547 [Process: 0] Evaluating...
2024-08-19 13:22:01,549 [Process: 0] EPOCH 28:
2024-08-19 13:22:01,551 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:02,552 [Process: 0] Synchronize training processes
2024-08-19 13:22:02,552 [Process: 0] Evaluating...
2024-08-19 13:22:02,554 [Process: 0] EPOCH 29:
2024-08-19 13:22:02,556 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8796, 0.1994, 0.1526,  ..., 0.3536, 0.1362, 0.1169],
         [0.0401, 0.1544, 0.1363,  ..., 0.1405, 0.1397, 0.1169],
         [0.0401, 0.1389, 0.1363,  ..., 0.1405, 0.1362, 0.1169],
         [0.0401, 0.5073, 0.5749,  ..., 0.3654, 0.5880, 0.6492]],
        [[0.7943, 0.2247, 0.2070,  ..., 0.1314, 0.1127, 0.1076],
         [0.0686, 0.1990, 0.2059,  ..., 0.1314, 0.1127, 0.1076],
         [0.0686, 0.1990, 0.2132,  ..., 0.6058, 0.6619, 0.6773],
         [0.0686, 0.3774, 0.3739,  ..., 0.1314, 0.1127, 0.1076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1277, 0.1653, 0.3118,  ..., 0.2881, 0.1435, 0.1683],
         [0.1318, 0.1653, 0.1813,  ..., 0.1675, 0.1435, 0.1683],
         [0.6129, 0.2068, 0.1813,  ..., 0.1675, 0.5651, 0.3880],
         [0.1277, 0.4627, 0.3257,  ..., 0.3770, 0.1479, 0.2753]],
        [[0.0314, 0.0488, 0.9213,  ..., 0.8615, 0.0571, 0.0619],
         [0.0331, 0.0488, 0.0262,  ..., 0.0495, 0.0571, 0.0619],
         [0.9041, 0.0488, 0.0262,  ..., 0.0445, 0.0571, 0.8143],
         [0.0314, 0.8537, 0.0262,  ..., 0.0445, 0.8286, 0.0619]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6770, 0.1515, 0.1410,  ..., 0.9052, 0.2922, 0.0942],
         [0.1104, 0.1696, 0.1410,  ..., 0.0330, 0.1739, 0.0942],
         [0.1063, 0.1515, 0.1410,  ..., 0.0309, 0.1697, 0.0942],
         [0.1063, 0.5274, 0.5770,  ..., 0.0309, 0.3641, 0.7174]],
        [[0.8712, 0.1746, 0.1731,  ..., 0.1738, 0.0930, 0.1091],
         [0.0429, 0.1746, 0.1731,  ..., 0.1738, 0.0930, 0.1091],
         [0.0429, 0.2006, 0.2300,  ..., 0.3695, 0.7210, 0.6726],
         [0.0429, 0.4503, 0.4238,  ..., 0.2829, 0.0930, 0.1091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1599, 0.6751, 0.4326,  ..., 0.8521, 0.1194, 0.1478],
         [0.1599, 0.1083, 0.1771,  ..., 0.0493, 0.1194, 0.1478],
         [0.4795, 0.1083, 0.1771,  ..., 0.0493, 0.6417, 0.5140],
         [0.2007, 0.1083, 0.2132,  ..., 0.0493, 0.1194, 0.1905]],
        [[0.0386, 0.0766, 0.1424,  ..., 0.7430, 0.0861, 0.0446],
         [0.0386, 0.0766, 0.1781,  ..., 0.0857, 0.0874, 0.0446],
         [0.8842, 0.0766, 0.1424,  ..., 0.0857, 0.0861, 0.8661],
         [0.0386, 0.7701, 0.5371,  ..., 0.0857, 0.7404, 0.0446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:03,526 [Process: 0] Synchronize training processes
2024-08-19 13:22:03,526 [Process: 0] Evaluating...
2024-08-19 13:22:03,528 [Process: 0] EPOCH 30:
2024-08-19 13:22:03,530 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:04,512 [Process: 0] Synchronize training processes
2024-08-19 13:22:04,512 [Process: 0] Evaluating...
2024-08-19 13:22:04,514 [Process: 0] EPOCH 31:
2024-08-19 13:22:04,515 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5454, 0.1535, 0.1859,  ..., 0.1509, 0.1215, 0.1306],
         [0.1354, 0.1535, 0.1951,  ..., 0.1509, 0.1253, 0.1306],
         [0.1354, 0.1535, 0.1791,  ..., 0.1509, 0.1215, 0.1306],
         [0.1837, 0.5394, 0.4399,  ..., 0.5472, 0.6318, 0.6082]],
        [[0.9135, 0.2505, 0.1819,  ..., 0.5699, 0.0393, 0.0852],
         [0.0288, 0.2083, 0.1935,  ..., 0.1339, 0.0393, 0.0852],
         [0.0288, 0.2083, 0.1819,  ..., 0.1339, 0.8820, 0.7444],
         [0.0288, 0.3328, 0.4427,  ..., 0.1623, 0.0393, 0.0852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0908, 0.6911, 0.2999,  ..., 0.6809, 0.0766, 0.1165],
         [0.0908, 0.1030, 0.2021,  ..., 0.1064, 0.0766, 0.1165],
         [0.7276, 0.1030, 0.2021,  ..., 0.1064, 0.7702, 0.6504],
         [0.0908, 0.1030, 0.2959,  ..., 0.1064, 0.0766, 0.1165]],
        [[0.0142, 0.0808, 0.1865,  ..., 0.6940, 0.1283, 0.0599],
         [0.0142, 0.0808, 0.1762,  ..., 0.1023, 0.1288, 0.0599],
         [0.9574, 0.0808, 0.1762,  ..., 0.1018, 0.1283, 0.8203],
         [0.0142, 0.7575, 0.4610,  ..., 0.1018, 0.6145, 0.0599]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5449, 0.0790, 0.1941,  ..., 0.1383, 0.3604, 0.0955],
         [0.1517, 0.0790, 0.1941,  ..., 0.1383, 0.1771, 0.0955],
         [0.1517, 0.0790, 0.1941,  ..., 0.1383, 0.1750, 0.0955],
         [0.1517, 0.7629, 0.4178,  ..., 0.5852, 0.2875, 0.7136]],
        [[0.8824, 0.2000, 0.1688,  ..., 0.5793, 0.0353, 0.1300],
         [0.0392, 0.1970, 0.1688,  ..., 0.1326, 0.0353, 0.1300],
         [0.0392, 0.1970, 0.1688,  ..., 0.1326, 0.8941, 0.6018],
         [0.0392, 0.4061, 0.4936,  ..., 0.1555, 0.0353, 0.1381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0725, 0.4177, 0.2963,  ..., 0.1754, 0.1253, 0.1568],
         [0.0725, 0.1816, 0.1903,  ..., 0.1754, 0.1253, 0.1568],
         [0.7826, 0.1816, 0.1798,  ..., 0.1754, 0.6241, 0.4164],
         [0.0725, 0.2190, 0.3336,  ..., 0.4739, 0.1253, 0.2701]],
        [[0.1952, 0.0286, 0.8257,  ..., 0.7846, 0.0838, 0.0785],
         [0.1952, 0.0298, 0.0581,  ..., 0.0718, 0.0838, 0.0785],
         [0.3794, 0.0286, 0.0581,  ..., 0.0718, 0.0838, 0.7644],
         [0.2303, 0.9130, 0.0581,  ..., 0.0718, 0.7487, 0.0785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:22:05,522 [Process: 0] Synchronize training processes
2024-08-19 13:22:05,522 [Process: 0] Evaluating...
2024-08-19 13:22:06,454 [Process: 0] EPOCH 32:
2024-08-19 13:22:06,458 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:07,432 [Process: 0] Synchronize training processes
2024-08-19 13:22:07,432 [Process: 0] Evaluating...
2024-08-19 13:22:07,434 [Process: 0] EPOCH 33:
2024-08-19 13:22:07,436 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7563, 0.1130, 0.1335,  ..., 0.7475, 0.6130, 0.0811],
         [0.0812, 0.1130, 0.1335,  ..., 0.0842, 0.1310, 0.0876],
         [0.0812, 0.1130, 0.1335,  ..., 0.0842, 0.1251, 0.0811],
         [0.0812, 0.6609, 0.5995,  ..., 0.0842, 0.1310, 0.7502]],
        [[0.8304, 0.1488, 0.1582,  ..., 0.2580, 0.0964, 0.1551],
         [0.0565, 0.1488, 0.1582,  ..., 0.1905, 0.0964, 0.1551],
         [0.0565, 0.4468, 0.1582,  ..., 0.1875, 0.7107, 0.3841],
         [0.0565, 0.2555, 0.5254,  ..., 0.3640, 0.0964, 0.3057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0739, 0.4820, 0.2656,  ..., 0.4788, 0.1439, 0.1270],
         [0.0739, 0.1607, 0.1876,  ..., 0.1737, 0.1439, 0.1270],
         [0.7782, 0.1607, 0.1876,  ..., 0.1737, 0.5427, 0.6189],
         [0.0739, 0.1966, 0.3592,  ..., 0.1737, 0.1695, 0.1270]],
        [[0.0014, 0.1566, 0.8627,  ..., 0.8073, 0.0588, 0.0292],
         [0.0014, 0.1647, 0.0458,  ..., 0.0642, 0.0588, 0.0292],
         [0.9957, 0.1295, 0.0458,  ..., 0.0642, 0.0588, 0.9123],
         [0.0014, 0.5492, 0.0458,  ..., 0.0642, 0.8236, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:08,407 [Process: 0] Synchronize training processes
2024-08-19 13:22:08,407 [Process: 0] Evaluating...
2024-08-19 13:22:08,409 [Process: 0] EPOCH 34:
2024-08-19 13:22:08,411 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:09,381 [Process: 0] Synchronize training processes
2024-08-19 13:22:09,382 [Process: 0] Evaluating...
2024-08-19 13:22:09,383 [Process: 0] EPOCH 35:
2024-08-19 13:22:09,385 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6754, 0.0912, 0.1228,  ..., 0.7228, 0.4716, 0.0833],
         [0.1137, 0.0912, 0.1413,  ..., 0.0950, 0.1461, 0.0833],
         [0.1054, 0.0912, 0.1228,  ..., 0.0911, 0.1461, 0.0833],
         [0.1054, 0.7264, 0.6130,  ..., 0.0911, 0.2361, 0.7502]],
        [[0.7447, 0.1582, 0.2511,  ..., 0.1783, 0.0545, 0.1320],
         [0.0851, 0.1740, 0.1780,  ..., 0.1661, 0.0545, 0.1320],
         [0.0851, 0.1529, 0.1780,  ..., 0.1661, 0.8366, 0.3584],
         [0.0851, 0.5148, 0.3929,  ..., 0.4896, 0.0545, 0.3777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0718, 0.4465, 0.2056,  ..., 0.6808, 0.1355, 0.1620],
         [0.0718, 0.1640, 0.2056,  ..., 0.1064, 0.1355, 0.1620],
         [0.7845, 0.1640, 0.2056,  ..., 0.1064, 0.5934, 0.5100],
         [0.0718, 0.2255, 0.3833,  ..., 0.1064, 0.1355, 0.1661]],
        [[0.0069, 0.0837, 0.9224,  ..., 0.9023, 0.0512, 0.0068],
         [0.0069, 0.0842, 0.0259,  ..., 0.0326, 0.0580, 0.0068],
         [0.9792, 0.0837, 0.0259,  ..., 0.0326, 0.0512, 0.9797],
         [0.0069, 0.7483, 0.0259,  ..., 0.0326, 0.8395, 0.0068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7796, 0.0940, 0.0855,  ..., 0.7370, 0.5378, 0.0972],
         [0.0735, 0.0940, 0.0855,  ..., 0.0877, 0.1619, 0.0972],
         [0.0735, 0.0940, 0.0855,  ..., 0.0877, 0.1382, 0.0972],
         [0.0735, 0.7179, 0.7434,  ..., 0.0877, 0.1621, 0.7085]],
        [[0.9575, 0.1612, 0.1801,  ..., 0.2360, 0.0123, 0.1186],
         [0.0142, 0.1700, 0.1659,  ..., 0.2003, 0.0123, 0.1186],
         [0.0142, 0.1612, 0.1555,  ..., 0.1880, 0.9632, 0.6010],
         [0.0142, 0.5076, 0.4985,  ..., 0.3757, 0.0123, 0.1617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0771, 0.2182, 0.2039,  ..., 0.6979, 0.0726, 0.0969],
         [0.0771, 0.1898, 0.2039,  ..., 0.1034, 0.0726, 0.0969],
         [0.7686, 0.1898, 0.2039,  ..., 0.0994, 0.7821, 0.7092],
         [0.0771, 0.4022, 0.3884,  ..., 0.0994, 0.0726, 0.0969]],
        [[0.0607, 0.0821, 0.9582,  ..., 0.8319, 0.0751, 0.0995],
         [0.0607, 0.0821, 0.0139,  ..., 0.0560, 0.0751, 0.0995],
         [0.8179, 0.0821, 0.0139,  ..., 0.0560, 0.0751, 0.7016],
         [0.0607, 0.7538, 0.0139,  ..., 0.0560, 0.7747, 0.0995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:10,357 [Process: 0] Synchronize training processes
2024-08-19 13:22:10,358 [Process: 0] Evaluating...
2024-08-19 13:22:10,360 [Process: 0] EPOCH 36:
2024-08-19 13:22:10,362 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:11,332 [Process: 0] Synchronize training processes
2024-08-19 13:22:11,333 [Process: 0] Evaluating...
2024-08-19 13:22:11,334 [Process: 0] EPOCH 37:
2024-08-19 13:22:11,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8736, 0.1038, 0.1574,  ..., 0.6965, 0.6385, 0.1333],
         [0.0421, 0.1038, 0.1574,  ..., 0.1012, 0.1205, 0.1345],
         [0.0421, 0.1038, 0.1723,  ..., 0.1012, 0.1205, 0.1333],
         [0.0421, 0.6886, 0.5130,  ..., 0.1012, 0.1205, 0.5990]],
        [[0.9634, 0.1613, 0.1371,  ..., 0.1648, 0.0537, 0.0469],
         [0.0122, 0.1613, 0.1426,  ..., 0.1633, 0.0537, 0.0469],
         [0.0122, 0.1613, 0.1371,  ..., 0.1633, 0.8390, 0.8593],
         [0.0122, 0.5161, 0.5832,  ..., 0.5087, 0.0537, 0.0469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0969, 0.1973, 0.1963,  ..., 0.8401, 0.0898, 0.1282],
         [0.0969, 0.1973, 0.1963,  ..., 0.0533, 0.0898, 0.1282],
         [0.7094, 0.2001, 0.1963,  ..., 0.0533, 0.7307, 0.6155],
         [0.0969, 0.4053, 0.4112,  ..., 0.0533, 0.0898, 0.1282]],
        [[0.0373, 0.0250, 0.8295,  ..., 0.7612, 0.0939, 0.0774],
         [0.0373, 0.0250, 0.0568,  ..., 0.0796, 0.0976, 0.0774],
         [0.8882, 0.0250, 0.0568,  ..., 0.0796, 0.0939, 0.7677],
         [0.0373, 0.9250, 0.0568,  ..., 0.0796, 0.7147, 0.0774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8066, 0.1071, 0.1600,  ..., 0.6973, 0.8801, 0.1684],
         [0.0645, 0.1071, 0.1600,  ..., 0.1009, 0.0400, 0.1684],
         [0.0645, 0.1071, 0.1600,  ..., 0.1009, 0.0400, 0.1731],
         [0.0645, 0.6788, 0.5200,  ..., 0.1009, 0.0400, 0.4902]],
        [[0.9577, 0.1690, 0.1608,  ..., 0.1625, 0.0587, 0.0879],
         [0.0161, 0.1601, 0.1585,  ..., 0.1625, 0.0587, 0.0879],
         [0.0131, 0.1589, 0.1585,  ..., 0.1625, 0.8240, 0.7363],
         [0.0131, 0.5120, 0.5222,  ..., 0.5125, 0.0587, 0.0879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0702, 0.1980, 0.1883,  ..., 0.8861, 0.0713, 0.1255],
         [0.0702, 0.1980, 0.1883,  ..., 0.0380, 0.0713, 0.1255],
         [0.7894, 0.1980, 0.1883,  ..., 0.0380, 0.7862, 0.6234],
         [0.0702, 0.4061, 0.4350,  ..., 0.0380, 0.0713, 0.1255]],
        [[0.1089, 0.0990, 0.9432,  ..., 0.8599, 0.0290, 0.0864],
         [0.1089, 0.0990, 0.0190,  ..., 0.0467, 0.0290, 0.0864],
         [0.6675, 0.0990, 0.0189,  ..., 0.0467, 0.0290, 0.7275],
         [0.1147, 0.7031, 0.0189,  ..., 0.0467, 0.9129, 0.0997]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:12,310 [Process: 0] Synchronize training processes
2024-08-19 13:22:12,310 [Process: 0] Evaluating...
2024-08-19 13:22:12,312 [Process: 0] EPOCH 38:
2024-08-19 13:22:12,314 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:13,286 [Process: 0] Synchronize training processes
2024-08-19 13:22:13,286 [Process: 0] Evaluating...
2024-08-19 13:22:13,288 [Process: 0] EPOCH 39:
2024-08-19 13:22:13,290 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6072, 0.1214, 0.1567,  ..., 0.7364, 0.6573, 0.1677],
         [0.1258, 0.1214, 0.1588,  ..., 0.0879, 0.1142, 0.1721],
         [0.1413, 0.1214, 0.1567,  ..., 0.0879, 0.1142, 0.1677],
         [0.1258, 0.6359, 0.5278,  ..., 0.0879, 0.1142, 0.4926]],
        [[0.8819, 0.1533, 0.0852,  ..., 0.1807, 0.0714, 0.1298],
         [0.0394, 0.1533, 0.0852,  ..., 0.1881, 0.0714, 0.1298],
         [0.0394, 0.1533, 0.0852,  ..., 0.1768, 0.7858, 0.4823],
         [0.0394, 0.5400, 0.7443,  ..., 0.4544, 0.0714, 0.2580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0549, 0.3418, 0.2113,  ..., 0.7088, 0.0844, 0.0858],
         [0.0549, 0.1770, 0.2113,  ..., 0.0971, 0.0844, 0.0858],
         [0.8352, 0.1770, 0.2144,  ..., 0.0971, 0.7467, 0.7425],
         [0.0549, 0.3043, 0.3630,  ..., 0.0971, 0.0844, 0.0858]],
        [[0.0505, 0.0676, 0.9218,  ..., 0.6928, 0.0185, 0.0820],
         [0.0505, 0.0676, 0.0284,  ..., 0.1024, 0.0185, 0.0820],
         [0.8486, 0.0676, 0.0249,  ..., 0.1024, 0.0185, 0.7540],
         [0.0505, 0.7973, 0.0249,  ..., 0.1024, 0.9445, 0.0820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9186, 0.1046, 0.0960,  ..., 0.7683, 0.6812, 0.0791],
         [0.0271, 0.1046, 0.0960,  ..., 0.0772, 0.1063, 0.0791],
         [0.0271, 0.1046, 0.0960,  ..., 0.0772, 0.1063, 0.0791],
         [0.0271, 0.6862, 0.7121,  ..., 0.0772, 0.1063, 0.7626]],
        [[0.9163, 0.1251, 0.0682,  ..., 0.1407, 0.0883, 0.1097],
         [0.0279, 0.1265, 0.0682,  ..., 0.1407, 0.0883, 0.1097],
         [0.0279, 0.1251, 0.0682,  ..., 0.1407, 0.7350, 0.1804],
         [0.0279, 0.6234, 0.7955,  ..., 0.5778, 0.0884, 0.6002]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0377, 0.3706, 0.2540,  ..., 0.8704, 0.0907, 0.1037],
         [0.0385, 0.1748, 0.2000,  ..., 0.0432, 0.0907, 0.1037],
         [0.8861, 0.1748, 0.2000,  ..., 0.0432, 0.7279, 0.6889],
         [0.0377, 0.2798, 0.3460,  ..., 0.0432, 0.0907, 0.1037]],
        [[0.0365, 0.0423, 0.8365,  ..., 0.8956, 0.0053, 0.0414],
         [0.0365, 0.0423, 0.0545,  ..., 0.0348, 0.0053, 0.0414],
         [0.8905, 0.0423, 0.0545,  ..., 0.0348, 0.0053, 0.8759],
         [0.0365, 0.8730, 0.0545,  ..., 0.0348, 0.9840, 0.0414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:14,261 [Process: 0] Synchronize training processes
2024-08-19 13:22:14,261 [Process: 0] Evaluating...
2024-08-19 13:22:14,263 [Process: 0] EPOCH 40:
2024-08-19 13:22:14,265 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:15,236 [Process: 0] Synchronize training processes
2024-08-19 13:22:15,236 [Process: 0] Evaluating...
2024-08-19 13:22:15,238 [Process: 0] EPOCH 41:
2024-08-19 13:22:15,240 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8845, 0.0856, 0.0989,  ..., 0.7758, 0.7939, 0.1253],
         [0.0385, 0.0856, 0.0989,  ..., 0.0747, 0.0687, 0.1253],
         [0.0385, 0.0856, 0.0989,  ..., 0.0747, 0.0687, 0.1253],
         [0.0385, 0.7431, 0.7032,  ..., 0.0747, 0.0687, 0.6240]],
        [[0.8573, 0.1168, 0.1139,  ..., 0.1419, 0.0411, 0.1665],
         [0.0476, 0.1168, 0.1183,  ..., 0.1419, 0.0411, 0.1665],
         [0.0476, 0.1168, 0.1071,  ..., 0.1419, 0.8768, 0.4031],
         [0.0476, 0.6495, 0.6607,  ..., 0.5742, 0.0411, 0.2639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0801, 0.1999, 0.2711,  ..., 0.8241, 0.0731, 0.1166],
         [0.0801, 0.1999, 0.1851,  ..., 0.0586, 0.0731, 0.1166],
         [0.7597, 0.1999, 0.1851,  ..., 0.0586, 0.7808, 0.6487],
         [0.0801, 0.4003, 0.3588,  ..., 0.0586, 0.0731, 0.1180]],
        [[0.0272, 0.0683, 0.9639,  ..., 0.9086, 0.0258, 0.0949],
         [0.0272, 0.0683, 0.0120,  ..., 0.0305, 0.0266, 0.0580],
         [0.9183, 0.0683, 0.0120,  ..., 0.0305, 0.0258, 0.7892],
         [0.0272, 0.7951, 0.0120,  ..., 0.0305, 0.9218, 0.0580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9600, 0.0871, 0.1714,  ..., 0.9768, 0.7672, 0.0980],
         [0.0133, 0.0871, 0.1714,  ..., 0.0077, 0.0776, 0.0980],
         [0.0133, 0.0871, 0.2248,  ..., 0.0077, 0.0776, 0.0980],
         [0.0133, 0.7386, 0.4324,  ..., 0.0077, 0.0776, 0.7061]],
        [[0.7983, 0.2180, 0.1274,  ..., 0.1374, 0.1227, 0.0559],
         [0.0672, 0.1838, 0.1274,  ..., 0.1374, 0.1227, 0.0559],
         [0.0672, 0.1838, 0.1274,  ..., 0.5356, 0.5380, 0.8322],
         [0.0672, 0.4143, 0.6178,  ..., 0.1896, 0.2167, 0.0559]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0836, 0.2883, 0.2790,  ..., 0.7538, 0.0459, 0.0704],
         [0.0836, 0.2047, 0.2008,  ..., 0.0821, 0.0459, 0.0704],
         [0.7492, 0.2171, 0.2008,  ..., 0.0821, 0.8623, 0.7888],
         [0.0836, 0.2898, 0.3195,  ..., 0.0821, 0.0459, 0.0704]],
        [[0.0338, 0.0636, 0.8512,  ..., 0.9179, 0.0428, 0.0679],
         [0.0338, 0.0636, 0.0617,  ..., 0.0274, 0.0428, 0.0679],
         [0.8985, 0.0636, 0.0435,  ..., 0.0274, 0.0428, 0.7964],
         [0.0338, 0.8091, 0.0435,  ..., 0.0274, 0.8717, 0.0679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:22:16,212 [Process: 0] Synchronize training processes
2024-08-19 13:22:16,212 [Process: 0] Evaluating...
2024-08-19 13:22:17,158 [Process: 0] EPOCH 42:
2024-08-19 13:22:17,162 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9464, 0.1252, 0.0954,  ..., 0.8569, 0.8095, 0.0902],
         [0.0179, 0.1252, 0.0973,  ..., 0.0477, 0.0635, 0.0902],
         [0.0179, 0.1252, 0.0954,  ..., 0.0477, 0.0635, 0.0902],
         [0.0179, 0.6244, 0.7119,  ..., 0.0477, 0.0635, 0.7295]],
        [[0.5153, 0.1482, 0.1073,  ..., 0.1614, 0.0875, 0.0306],
         [0.1587, 0.1482, 0.1073,  ..., 0.1614, 0.0875, 0.0306],
         [0.1833, 0.1482, 0.1073,  ..., 0.1614, 0.7375, 0.9081],
         [0.1426, 0.5553, 0.6781,  ..., 0.5157, 0.0875, 0.0306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1091, 0.1590, 0.1383,  ..., 0.8779, 0.0708, 0.0865],
         [0.1091, 0.1590, 0.1383,  ..., 0.0407, 0.0708, 0.0865],
         [0.6728, 0.2195, 0.1383,  ..., 0.0407, 0.7877, 0.7406],
         [0.1091, 0.4625, 0.5852,  ..., 0.0407, 0.0708, 0.0865]],
        [[0.0628, 0.1307, 0.9547,  ..., 0.5340, 0.0048, 0.0942],
         [0.0628, 0.1307, 0.0151,  ..., 0.1499, 0.0048, 0.0942],
         [0.8117, 0.3815, 0.0151,  ..., 0.1413, 0.0048, 0.7174],
         [0.0628, 0.3572, 0.0151,  ..., 0.1748, 0.9855, 0.0942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9064, 0.1117, 0.0869,  ..., 0.8950, 0.7567, 0.1787],
         [0.0312, 0.1117, 0.0869,  ..., 0.0350, 0.0811, 0.1787],
         [0.0312, 0.1117, 0.0869,  ..., 0.0350, 0.0811, 0.3425],
         [0.0312, 0.6649, 0.7394,  ..., 0.0350, 0.0811, 0.3002]],
        [[0.4006, 0.1435, 0.1299,  ..., 0.3019, 0.0769, 0.0469],
         [0.1793, 0.1476, 0.1299,  ..., 0.1854, 0.0769, 0.0469],
         [0.2408, 0.1435, 0.1299,  ..., 0.1854, 0.7628, 0.8593],
         [0.1793, 0.5655, 0.6103,  ..., 0.3272, 0.0835, 0.0469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:18,135 [Process: 0] Synchronize training processes
2024-08-19 13:22:18,135 [Process: 0] Evaluating...
2024-08-19 13:22:18,137 [Process: 0] EPOCH 43:
2024-08-19 13:22:18,139 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:19,112 [Process: 0] Synchronize training processes
2024-08-19 13:22:19,112 [Process: 0] Evaluating...
2024-08-19 13:22:19,114 [Process: 0] EPOCH 44:
2024-08-19 13:22:19,116 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0508, 0.1537, 0.2164,  ..., 0.9193, 0.0725, 0.0645],
         [0.0508, 0.1537, 0.2133,  ..., 0.0269, 0.0725, 0.0645],
         [0.8475, 0.1537, 0.3437,  ..., 0.0269, 0.7825, 0.8066],
         [0.0508, 0.5388, 0.2266,  ..., 0.0269, 0.0725, 0.0645]],
        [[0.0061, 0.0108, 0.8496,  ..., 0.8917, 0.0840, 0.0990],
         [0.0061, 0.0108, 0.0501,  ..., 0.0361, 0.0833, 0.0990],
         [0.9818, 0.0108, 0.0501,  ..., 0.0361, 0.0833, 0.6417],
         [0.0061, 0.9676, 0.0501,  ..., 0.0361, 0.7493, 0.1604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9645, 0.2798, 0.0445,  ..., 0.8527, 0.9075, 0.1189],
         [0.0118, 0.1707, 0.0445,  ..., 0.0491, 0.0308, 0.1189],
         [0.0118, 0.1707, 0.0445,  ..., 0.0491, 0.0308, 0.1189],
         [0.0118, 0.3788, 0.8665,  ..., 0.0491, 0.0308, 0.6434]],
        [[0.8085, 0.1413, 0.0705,  ..., 0.2240, 0.0516, 0.0753],
         [0.0638, 0.1413, 0.0705,  ..., 0.1671, 0.0516, 0.0753],
         [0.0638, 0.2586, 0.0705,  ..., 0.1671, 0.8452, 0.7740],
         [0.0638, 0.4587, 0.7885,  ..., 0.4418, 0.0516, 0.0753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0732, 0.1140, 0.2928,  ..., 0.9446, 0.0507, 0.0482],
         [0.0732, 0.1140, 0.1954,  ..., 0.0191, 0.0507, 0.0482],
         [0.7804, 0.1140, 0.3165,  ..., 0.0182, 0.8479, 0.8553],
         [0.0732, 0.6581, 0.1954,  ..., 0.0182, 0.0507, 0.0482]],
        [[0.0029, 0.1635, 0.9393,  ..., 0.7978, 0.0902, 0.0427],
         [0.0019, 0.1635, 0.0202,  ..., 0.0674, 0.0902, 0.0427],
         [0.9932, 0.1635, 0.0202,  ..., 0.0674, 0.0902, 0.8719],
         [0.0019, 0.5095, 0.0202,  ..., 0.0674, 0.7293, 0.0427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9360, 0.1131, 0.0602,  ..., 0.8619, 0.8349, 0.0305],
         [0.0213, 0.1046, 0.0602,  ..., 0.0513, 0.0550, 0.0305],
         [0.0213, 0.1046, 0.0602,  ..., 0.0434, 0.0550, 0.0305],
         [0.0213, 0.6777, 0.8195,  ..., 0.0434, 0.0550, 0.9085]],
        [[0.7772, 0.0847, 0.0987,  ..., 0.0851, 0.0199, 0.0301],
         [0.0737, 0.0847, 0.0987,  ..., 0.0851, 0.0199, 0.0301],
         [0.0753, 0.0847, 0.0987,  ..., 0.0851, 0.9403, 0.9098],
         [0.0737, 0.7460, 0.7040,  ..., 0.7448, 0.0199, 0.0301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:20,090 [Process: 0] Synchronize training processes
2024-08-19 13:22:20,091 [Process: 0] Evaluating...
2024-08-19 13:22:20,092 [Process: 0] EPOCH 45:
2024-08-19 13:22:20,094 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:21,068 [Process: 0] Synchronize training processes
2024-08-19 13:22:21,068 [Process: 0] Evaluating...
2024-08-19 13:22:21,070 [Process: 0] EPOCH 46:
2024-08-19 13:22:21,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0745, 0.2436, 0.2756,  ..., 0.9363, 0.1468, 0.1467],
         [0.0745, 0.2265, 0.2415,  ..., 0.0212, 0.1468, 0.1467],
         [0.7766, 0.2265, 0.2415,  ..., 0.0212, 0.4277, 0.2364],
         [0.0745, 0.3034, 0.2415,  ..., 0.0212, 0.2787, 0.4702]],
        [[0.0267, 0.1999, 0.9341,  ..., 0.8345, 0.0074, 0.0137],
         [0.0267, 0.1999, 0.0246,  ..., 0.0610, 0.0074, 0.0137],
         [0.9198, 0.3408, 0.0207,  ..., 0.0506, 0.0074, 0.9589],
         [0.0267, 0.2593, 0.0207,  ..., 0.0539, 0.9777, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9008, 0.0759, 0.0472,  ..., 0.8259, 0.6346, 0.0518],
         [0.0331, 0.0759, 0.0472,  ..., 0.0665, 0.1369, 0.0518],
         [0.0331, 0.0759, 0.0472,  ..., 0.0538, 0.1142, 0.0518],
         [0.0331, 0.7723, 0.8583,  ..., 0.0538, 0.1142, 0.8447]],
        [[0.8396, 0.1137, 0.1026,  ..., 0.1964, 0.0671, 0.0664],
         [0.0535, 0.1137, 0.1026,  ..., 0.1964, 0.0671, 0.0664],
         [0.0535, 0.1137, 0.1026,  ..., 0.2123, 0.7988, 0.8009],
         [0.0535, 0.6589, 0.6921,  ..., 0.3949, 0.0671, 0.0664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0961, 0.3091, 0.2376,  ..., 0.9608, 0.0540, 0.0575],
         [0.0961, 0.2094, 0.2376,  ..., 0.0131, 0.0540, 0.0575],
         [0.7118, 0.2630, 0.2873,  ..., 0.0131, 0.8381, 0.8274],
         [0.0961, 0.2185, 0.2376,  ..., 0.0131, 0.0540, 0.0575]],
        [[0.1416, 0.1782, 0.9257,  ..., 0.9356, 0.0094, 0.1093],
         [0.0726, 0.1782, 0.0248,  ..., 0.0215, 0.0094, 0.0949],
         [0.7132, 0.3826, 0.0248,  ..., 0.0215, 0.0094, 0.7009],
         [0.0726, 0.2611, 0.0248,  ..., 0.0215, 0.9719, 0.0949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9636, 0.1221, 0.0945,  ..., 0.8275, 0.8573, 0.0395],
         [0.0121, 0.1221, 0.0945,  ..., 0.0575, 0.0476, 0.0395],
         [0.0121, 0.1493, 0.0945,  ..., 0.0575, 0.0476, 0.0395],
         [0.0121, 0.6065, 0.7166,  ..., 0.0575, 0.0476, 0.8814]],
        [[0.8879, 0.1338, 0.0852,  ..., 0.2009, 0.1262, 0.1581],
         [0.0374, 0.1338, 0.0852,  ..., 0.2009, 0.1262, 0.1568],
         [0.0374, 0.1338, 0.0852,  ..., 0.3833, 0.6034, 0.5282],
         [0.0374, 0.5986, 0.7443,  ..., 0.2150, 0.1441, 0.1568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:22,044 [Process: 0] Synchronize training processes
2024-08-19 13:22:22,045 [Process: 0] Evaluating...
2024-08-19 13:22:22,046 [Process: 0] EPOCH 47:
2024-08-19 13:22:22,048 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:23,020 [Process: 0] Synchronize training processes
2024-08-19 13:22:23,020 [Process: 0] Evaluating...
2024-08-19 13:22:23,022 [Process: 0] EPOCH 48:
2024-08-19 13:22:23,024 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1344, 0.1585, 0.2355,  ..., 0.9110, 0.0471, 0.0402],
         [0.1344, 0.1585, 0.2355,  ..., 0.0297, 0.0471, 0.0402],
         [0.5967, 0.1585, 0.2935,  ..., 0.0297, 0.8586, 0.8795],
         [0.1344, 0.5244, 0.2355,  ..., 0.0297, 0.0471, 0.0402]],
        [[0.1041, 0.1639, 0.9667,  ..., 0.9623, 0.0635, 0.1057],
         [0.0629, 0.1639, 0.0111,  ..., 0.0126, 0.0635, 0.1057],
         [0.7702, 0.1639, 0.0111,  ..., 0.0126, 0.0635, 0.6084],
         [0.0629, 0.5083, 0.0111,  ..., 0.0126, 0.8095, 0.1803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9397, 0.1258, 0.0772,  ..., 0.8576, 0.7196, 0.1069],
         [0.0201, 0.1258, 0.0772,  ..., 0.0475, 0.0935, 0.1069],
         [0.0201, 0.1258, 0.0772,  ..., 0.0475, 0.0935, 0.1069],
         [0.0201, 0.6226, 0.7684,  ..., 0.0475, 0.0935, 0.6793]],
        [[0.8276, 0.0715, 0.0946,  ..., 0.1177, 0.1015, 0.0973],
         [0.0575, 0.0715, 0.1058,  ..., 0.1177, 0.0903, 0.0993],
         [0.0575, 0.0718, 0.0946,  ..., 0.1177, 0.7179, 0.7062],
         [0.0575, 0.7852, 0.7050,  ..., 0.6470, 0.0903, 0.0973]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1482, 0.1352, 0.2089,  ..., 0.9207, 0.0726, 0.1175],
         [0.1482, 0.1352, 0.2089,  ..., 0.0264, 0.0726, 0.1175],
         [0.5448, 0.1352, 0.2089,  ..., 0.0264, 0.7823, 0.6475],
         [0.1589, 0.5944, 0.3732,  ..., 0.0264, 0.0726, 0.1175]],
        [[0.1829, 0.0184, 0.9481,  ..., 0.9378, 0.0029, 0.0729],
         [0.1450, 0.0184, 0.0173,  ..., 0.0207, 0.0029, 0.0729],
         [0.5271, 0.0184, 0.0173,  ..., 0.0207, 0.0029, 0.7814],
         [0.1450, 0.9449, 0.0173,  ..., 0.0207, 0.9914, 0.0729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9015, 0.0757, 0.0783,  ..., 0.9543, 0.8598, 0.0466],
         [0.0328, 0.0757, 0.0783,  ..., 0.0152, 0.0467, 0.0466],
         [0.0328, 0.0757, 0.0796,  ..., 0.0152, 0.0467, 0.0466],
         [0.0328, 0.7729, 0.7637,  ..., 0.0152, 0.0467, 0.8603]],
        [[0.8426, 0.1594, 0.1558,  ..., 0.0830, 0.0992, 0.0353],
         [0.0543, 0.1551, 0.1558,  ..., 0.0830, 0.0992, 0.0353],
         [0.0516, 0.1551, 0.1558,  ..., 0.0830, 0.7024, 0.8940],
         [0.0516, 0.5305, 0.5325,  ..., 0.7511, 0.0992, 0.0353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:23,996 [Process: 0] Synchronize training processes
2024-08-19 13:22:23,996 [Process: 0] Evaluating...
2024-08-19 13:22:23,998 [Process: 0] EPOCH 49:
2024-08-19 13:22:23,999 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:24,971 [Process: 0] Synchronize training processes
2024-08-19 13:22:24,971 [Process: 0] Evaluating...
2024-08-19 13:22:24,973 [Process: 0] EPOCH 50:
2024-08-19 13:22:24,974 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1069, 0.1315, 0.2341,  ..., 0.9196, 0.1072, 0.0574],
         [0.1069, 0.1315, 0.2341,  ..., 0.0268, 0.1072, 0.0574],
         [0.6688, 0.1315, 0.2341,  ..., 0.0268, 0.6676, 0.8279],
         [0.1174, 0.6054, 0.2976,  ..., 0.0268, 0.1179, 0.0574]],
        [[0.0271, 0.0213, 0.9713,  ..., 0.8843, 0.0420, 0.0944],
         [0.0271, 0.0213, 0.0096,  ..., 0.0380, 0.0420, 0.0944],
         [0.9186, 0.0213, 0.0096,  ..., 0.0380, 0.0420, 0.7168],
         [0.0271, 0.9362, 0.0096,  ..., 0.0397, 0.8740, 0.0944]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8659, 0.1111, 0.0970,  ..., 0.9356, 0.7929, 0.0611],
         [0.0447, 0.1111, 0.0970,  ..., 0.0215, 0.0690, 0.0611],
         [0.0447, 0.1111, 0.1138,  ..., 0.0215, 0.0690, 0.0611],
         [0.0447, 0.6666, 0.6921,  ..., 0.0215, 0.0690, 0.8168]],
        [[0.9116, 0.1207, 0.0417,  ..., 0.1642, 0.1351, 0.0751],
         [0.0295, 0.1207, 0.0417,  ..., 0.1360, 0.1351, 0.0751],
         [0.0295, 0.1207, 0.0417,  ..., 0.1393, 0.5946, 0.7746],
         [0.0295, 0.6378, 0.8750,  ..., 0.5605, 0.1351, 0.0751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1085, 0.0975, 0.2398,  ..., 0.9449, 0.0810, 0.0620],
         [0.1077, 0.0975, 0.2398,  ..., 0.0184, 0.0810, 0.0620],
         [0.6761, 0.0975, 0.2398,  ..., 0.0184, 0.7570, 0.8140],
         [0.1077, 0.7076, 0.2805,  ..., 0.0184, 0.0810, 0.0620]],
        [[0.0042, 0.0230, 0.9576,  ..., 0.6601, 0.0050, 0.0340],
         [0.0042, 0.0230, 0.0141,  ..., 0.0927, 0.0050, 0.0340],
         [0.9873, 0.0230, 0.0141,  ..., 0.0927, 0.0050, 0.8980],
         [0.0042, 0.9310, 0.0141,  ..., 0.1544, 0.9851, 0.0340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9062, 0.0586, 0.0610,  ..., 0.8767, 0.8539, 0.0677],
         [0.0313, 0.0586, 0.0612,  ..., 0.0411, 0.0466, 0.0698],
         [0.0313, 0.0586, 0.0610,  ..., 0.0411, 0.0528, 0.0677],
         [0.0313, 0.8241, 0.8167,  ..., 0.0411, 0.0466, 0.7948]],
        [[0.9296, 0.1243, 0.0625,  ..., 0.1621, 0.1461, 0.0340],
         [0.0235, 0.1219, 0.0625,  ..., 0.1621, 0.1461, 0.0312],
         [0.0235, 0.1219, 0.0625,  ..., 0.1621, 0.4562, 0.9036],
         [0.0235, 0.6319, 0.8124,  ..., 0.5137, 0.2515, 0.0312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:25,947 [Process: 0] Synchronize training processes
2024-08-19 13:22:25,947 [Process: 0] Evaluating...
2024-08-19 13:22:25,949 [Process: 0] EPOCH 51:
2024-08-19 13:22:25,951 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:26,925 [Process: 0] Synchronize training processes
2024-08-19 13:22:26,925 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0714, 0.0106, 0.2337,  ..., 0.9530, 0.0786, 0.0664],
         [0.0714, 0.0106, 0.2337,  ..., 0.0157, 0.0786, 0.0664],
         [0.7859, 0.0106, 0.2337,  ..., 0.0157, 0.7641, 0.8009],
         [0.0714, 0.9682, 0.2989,  ..., 0.0157, 0.0786, 0.0664]],
        [[0.0095, 0.0694, 0.9606,  ..., 0.9105, 0.0430, 0.0319],
         [0.0033, 0.0694, 0.0131,  ..., 0.0290, 0.0430, 0.0319],
         [0.9839, 0.0694, 0.0131,  ..., 0.0290, 0.0430, 0.9044],
         [0.0033, 0.7918, 0.0131,  ..., 0.0314, 0.8710, 0.0319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9190, 0.1037, 0.0440,  ..., 0.9166, 0.8186, 0.0644],
         [0.0270, 0.1037, 0.0440,  ..., 0.0278, 0.0605, 0.0644],
         [0.0270, 0.1186, 0.0440,  ..., 0.0278, 0.0605, 0.0644],
         [0.0270, 0.6740, 0.8680,  ..., 0.0278, 0.0605, 0.8068]],
        [[0.9864, 0.0515, 0.0576,  ..., 0.0972, 0.1045, 0.0428],
         [0.0045, 0.0515, 0.0576,  ..., 0.0972, 0.1045, 0.0428],
         [0.0045, 0.0613, 0.0762,  ..., 0.0972, 0.6865, 0.8717],
         [0.0045, 0.8358, 0.8086,  ..., 0.7085, 0.1045, 0.0428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0342, 0.0565, 0.2500,  ..., 0.9840, 0.0447, 0.0508],
         [0.0342, 0.0565, 0.2500,  ..., 0.0053, 0.0447, 0.0508],
         [0.8975, 0.0565, 0.2500,  ..., 0.0053, 0.8658, 0.8477],
         [0.0342, 0.8305, 0.2500,  ..., 0.0053, 0.0447, 0.0508]],
        [[0.0032, 0.0516, 0.9807,  ..., 0.9665, 0.0228, 0.0148],
         [0.0032, 0.0516, 0.0064,  ..., 0.0112, 0.0238, 0.0148],
         [0.9903, 0.0516, 0.0064,  ..., 0.0112, 0.0228, 0.9555],
         [0.0032, 0.8451, 0.0064,  ..., 0.0112, 0.9306, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:22:27,861 [Process: 0] EPOCH 52:
2024-08-19 13:22:27,864 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:28,838 [Process: 0] Synchronize training processes
2024-08-19 13:22:28,838 [Process: 0] Evaluating...
2024-08-19 13:22:28,840 [Process: 0] EPOCH 53:
2024-08-19 13:22:28,842 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8775, 0.1261, 0.0868,  ..., 0.9700, 0.9249, 0.0611],
         [0.0393, 0.1138, 0.0868,  ..., 0.0100, 0.0250, 0.0611],
         [0.0438, 0.1138, 0.0868,  ..., 0.0100, 0.0250, 0.0611],
         [0.0393, 0.6464, 0.7395,  ..., 0.0100, 0.0250, 0.8168]],
        [[0.7023, 0.1457, 0.0362,  ..., 0.1783, 0.0618, 0.1202],
         [0.0992, 0.1489, 0.0362,  ..., 0.1783, 0.0618, 0.1109],
         [0.0992, 0.1468, 0.0362,  ..., 0.2476, 0.8147, 0.6440],
         [0.0992, 0.5587, 0.8913,  ..., 0.3958, 0.0618, 0.1249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0660, 0.0464, 0.3414,  ..., 0.9653, 0.0506, 0.0519],
         [0.0660, 0.0464, 0.2261,  ..., 0.0116, 0.0506, 0.0519],
         [0.8019, 0.0464, 0.2027,  ..., 0.0116, 0.8482, 0.8444],
         [0.0660, 0.8608, 0.2297,  ..., 0.0116, 0.0506, 0.0519]],
        [[0.0125, 0.0389, 0.8973,  ..., 0.9308, 0.0080, 0.0605],
         [0.0125, 0.0389, 0.0342,  ..., 0.0231, 0.0080, 0.0605],
         [0.9624, 0.0389, 0.0342,  ..., 0.0231, 0.0080, 0.8186],
         [0.0125, 0.8833, 0.0342,  ..., 0.0231, 0.9759, 0.0605]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9347, 0.0661, 0.0431,  ..., 0.8680, 0.6147, 0.0620],
         [0.0228, 0.0661, 0.0431,  ..., 0.0440, 0.1377, 0.0620],
         [0.0213, 0.0779, 0.0431,  ..., 0.0440, 0.1238, 0.0620],
         [0.0213, 0.7899, 0.8706,  ..., 0.0440, 0.1238, 0.8141]],
        [[0.6244, 0.0706, 0.0628,  ..., 0.1049, 0.0995, 0.0183],
         [0.1206, 0.0706, 0.0628,  ..., 0.1091, 0.0990, 0.0183],
         [0.1345, 0.0706, 0.0628,  ..., 0.1000, 0.7024, 0.9452],
         [0.1206, 0.7883, 0.8117,  ..., 0.6860, 0.0990, 0.0183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:22:29,815 [Process: 0] Synchronize training processes
2024-08-19 13:22:29,816 [Process: 0] Evaluating...
2024-08-19 13:22:29,817 [Process: 0] EPOCH 54:
2024-08-19 13:22:29,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:30,797 [Process: 0] Synchronize training processes
2024-08-19 13:22:30,797 [Process: 0] Evaluating...
2024-08-19 13:22:30,799 [Process: 0] EPOCH 55:
2024-08-19 13:22:30,801 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0411, 0.0127, 0.2194,  ..., 0.9616, 0.0582, 0.0635],
         [0.0411, 0.0127, 0.2224,  ..., 0.0128, 0.0582, 0.0635],
         [0.8766, 0.0127, 0.2194,  ..., 0.0128, 0.8255, 0.8095],
         [0.0411, 0.9619, 0.3388,  ..., 0.0128, 0.0582, 0.0635]],
        [[0.0200, 0.0190, 0.8336,  ..., 0.9226, 0.0081, 0.0928],
         [0.0200, 0.0190, 0.0555,  ..., 0.0258, 0.0081, 0.0928],
         [0.9401, 0.0190, 0.0555,  ..., 0.0258, 0.0081, 0.7215],
         [0.0200, 0.9431, 0.0555,  ..., 0.0258, 0.9758, 0.0928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9276, 0.0557, 0.0608,  ..., 0.9024, 0.3249, 0.1521],
         [0.0212, 0.0557, 0.0608,  ..., 0.0294, 0.1877, 0.1521],
         [0.0300, 0.0557, 0.0660,  ..., 0.0388, 0.2610, 0.2574],
         [0.0212, 0.8329, 0.8123,  ..., 0.0294, 0.2264, 0.4383]],
        [[0.7250, 0.0597, 0.0433,  ..., 0.1258, 0.0582, 0.0240],
         [0.0934, 0.0597, 0.0433,  ..., 0.1382, 0.0582, 0.0240],
         [0.0908, 0.0597, 0.0433,  ..., 0.1258, 0.8158, 0.9280],
         [0.0908, 0.8210, 0.8701,  ..., 0.6102, 0.0677, 0.0240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0542, 0.1412, 0.2836,  ..., 0.9824, 0.0394, 0.0574],
         [0.0542, 0.1852, 0.3196,  ..., 0.0059, 0.0394, 0.0574],
         [0.8373, 0.1412, 0.1984,  ..., 0.0059, 0.8819, 0.8277],
         [0.0542, 0.5324, 0.1984,  ..., 0.0059, 0.0394, 0.0574]],
        [[0.0769, 0.0149, 0.9177,  ..., 0.9499, 0.0045, 0.0823],
         [0.0769, 0.0149, 0.0272,  ..., 0.0167, 0.0045, 0.0823],
         [0.7694, 0.0149, 0.0272,  ..., 0.0167, 0.0045, 0.7531],
         [0.0769, 0.9552, 0.0278,  ..., 0.0167, 0.9866, 0.0823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9693, 0.0880, 0.0330,  ..., 0.9221, 0.8108, 0.0768],
         [0.0102, 0.0837, 0.0330,  ..., 0.0260, 0.0595, 0.0747],
         [0.0102, 0.0837, 0.0330,  ..., 0.0260, 0.0702, 0.0747],
         [0.0102, 0.7447, 0.9009,  ..., 0.0260, 0.0595, 0.7738]],
        [[0.8295, 0.0475, 0.0695,  ..., 0.1059, 0.0565, 0.0185],
         [0.0574, 0.0475, 0.0695,  ..., 0.1067, 0.0565, 0.0185],
         [0.0566, 0.0475, 0.0695,  ..., 0.1057, 0.8304, 0.9446],
         [0.0566, 0.8576, 0.7914,  ..., 0.6817, 0.0565, 0.0185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0506, 0.0186, 0.1968,  ..., 0.8989, 0.0593, 0.0514],
         [0.0506, 0.0186, 0.2828,  ..., 0.0332, 0.0593, 0.0514],
         [0.8483, 0.0186, 0.1968,  ..., 0.0332, 0.8132, 0.8459],
         [0.0506, 0.9441, 0.3236,  ..., 0.0347, 0.0682, 0.0514]],
        [[0.0298, 0.0223, 0.9809,  ..., 0.9361, 0.0113, 0.0550],
         [0.0298, 0.0223, 0.0064,  ..., 0.0213, 0.0113, 0.0550],
         [0.9105, 0.0223, 0.0064,  ..., 0.0213, 0.0113, 0.8351],
         [0.0298, 0.9332, 0.0064,  ..., 0.0213, 0.9662, 0.0550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:31,773 [Process: 0] Synchronize training processes
2024-08-19 13:22:31,773 [Process: 0] Evaluating...
2024-08-19 13:22:31,775 [Process: 0] EPOCH 56:
2024-08-19 13:22:31,777 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:32,750 [Process: 0] Synchronize training processes
2024-08-19 13:22:32,750 [Process: 0] Evaluating...
2024-08-19 13:22:32,752 [Process: 0] EPOCH 57:
2024-08-19 13:22:32,754 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8883, 0.0562, 0.0978,  ..., 0.9372, 0.8342, 0.0731],
         [0.0372, 0.0553, 0.0978,  ..., 0.0234, 0.0568, 0.0731],
         [0.0372, 0.0553, 0.0978,  ..., 0.0197, 0.0545, 0.0731],
         [0.0372, 0.8333, 0.7067,  ..., 0.0197, 0.0545, 0.7808]],
        [[0.3105, 0.1229, 0.0503,  ..., 0.1128, 0.0284, 0.0645],
         [0.3004, 0.1229, 0.0503,  ..., 0.1196, 0.0284, 0.0645],
         [0.1946, 0.1229, 0.0503,  ..., 0.1128, 0.9149, 0.8065],
         [0.1946, 0.6312, 0.8490,  ..., 0.6548, 0.0284, 0.0645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0476, 0.0063, 0.2358,  ..., 0.9680, 0.0378, 0.0560],
         [0.0476, 0.0063, 0.3289,  ..., 0.0107, 0.0378, 0.0560],
         [0.8572, 0.0063, 0.2177,  ..., 0.0107, 0.8866, 0.8321],
         [0.0476, 0.9811, 0.2177,  ..., 0.0107, 0.0378, 0.0560]],
        [[0.0111, 0.0243, 0.9749,  ..., 0.9227, 0.0206, 0.0481],
         [0.0111, 0.0243, 0.0084,  ..., 0.0276, 0.0206, 0.0481],
         [0.9667, 0.0243, 0.0084,  ..., 0.0248, 0.0206, 0.8556],
         [0.0111, 0.9272, 0.0084,  ..., 0.0248, 0.9381, 0.0481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9354, 0.0583, 0.0462,  ..., 0.8858, 0.7957, 0.0745],
         [0.0215, 0.0583, 0.0462,  ..., 0.0381, 0.0681, 0.0745],
         [0.0215, 0.0660, 0.0462,  ..., 0.0381, 0.0681, 0.0745],
         [0.0215, 0.8174, 0.8615,  ..., 0.0381, 0.0681, 0.7764]],
        [[0.1955, 0.0918, 0.0311,  ..., 0.1319, 0.0169, 0.0538],
         [0.4136, 0.0918, 0.0311,  ..., 0.1414, 0.0169, 0.0538],
         [0.1955, 0.0918, 0.0311,  ..., 0.1319, 0.9492, 0.8387],
         [0.1955, 0.7247, 0.9068,  ..., 0.5947, 0.0169, 0.0538]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0298, 0.0322, 0.6165,  ..., 0.9155, 0.0232, 0.0613],
         [0.0298, 0.0322, 0.0818,  ..., 0.0236, 0.0232, 0.0613],
         [0.9105, 0.0322, 0.0818,  ..., 0.0236, 0.9305, 0.8161],
         [0.0298, 0.9034, 0.2199,  ..., 0.0373, 0.0232, 0.0613]],
        [[0.0039, 0.0175, 0.9621,  ..., 0.7919, 0.0079, 0.0489],
         [0.0013, 0.0175, 0.0126,  ..., 0.0694, 0.0079, 0.0489],
         [0.9935, 0.0175, 0.0126,  ..., 0.0694, 0.0079, 0.8533],
         [0.0013, 0.9474, 0.0126,  ..., 0.0694, 0.9764, 0.0489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:33,726 [Process: 0] Synchronize training processes
2024-08-19 13:22:33,727 [Process: 0] Evaluating...
2024-08-19 13:22:33,728 [Process: 0] EPOCH 58:
2024-08-19 13:22:33,730 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:34,664 [Process: 0] Synchronize training processes
2024-08-19 13:22:34,665 [Process: 0] Evaluating...
2024-08-19 13:22:34,667 [Process: 0] EPOCH 59:
2024-08-19 13:22:34,668 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8621, 0.0539, 0.0433,  ..., 0.9280, 0.7883, 0.1088],
         [0.0460, 0.0539, 0.0433,  ..., 0.0240, 0.0603, 0.1088],
         [0.0460, 0.0539, 0.0433,  ..., 0.0240, 0.0910, 0.1088],
         [0.0460, 0.8383, 0.8702,  ..., 0.0240, 0.0603, 0.6736]],
        [[0.2573, 0.0600, 0.0345,  ..., 0.0390, 0.1017, 0.0226],
         [0.2916, 0.0600, 0.0345,  ..., 0.0390, 0.1017, 0.0226],
         [0.2255, 0.0600, 0.0345,  ..., 0.0390, 0.6825, 0.9323],
         [0.2255, 0.8201, 0.8966,  ..., 0.8829, 0.1141, 0.0226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0579, 0.0216, 0.9198,  ..., 0.9738, 0.0328, 0.0393],
         [0.0579, 0.0216, 0.0231,  ..., 0.0087, 0.0328, 0.0393],
         [0.8263, 0.0216, 0.0231,  ..., 0.0087, 0.9015, 0.8822],
         [0.0579, 0.9351, 0.0340,  ..., 0.0087, 0.0328, 0.0393]],
        [[0.0615, 0.0173, 0.9547,  ..., 0.9655, 0.0171, 0.0356],
         [0.0322, 0.0173, 0.0143,  ..., 0.0115, 0.0171, 0.0356],
         [0.8741, 0.0173, 0.0143,  ..., 0.0115, 0.0171, 0.8931],
         [0.0322, 0.9480, 0.0166,  ..., 0.0115, 0.9486, 0.0356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9048, 0.0536, 0.0542,  ..., 0.9579, 0.9624, 0.0923],
         [0.0317, 0.0536, 0.0542,  ..., 0.0142, 0.0125, 0.0923],
         [0.0317, 0.0536, 0.0542,  ..., 0.0139, 0.0125, 0.0923],
         [0.0317, 0.8393, 0.8374,  ..., 0.0139, 0.0125, 0.7231]],
        [[0.2387, 0.0777, 0.0339,  ..., 0.0715, 0.0582, 0.0142],
         [0.1745, 0.0738, 0.0339,  ..., 0.0715, 0.0582, 0.0142],
         [0.4328, 0.0738, 0.0339,  ..., 0.0715, 0.8167, 0.9573],
         [0.1540, 0.7747, 0.8983,  ..., 0.7854, 0.0669, 0.0142]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0494, 0.0478, 0.2329,  ..., 0.9374, 0.0422, 0.0443],
         [0.0494, 0.0478, 0.1558,  ..., 0.0209, 0.0422, 0.0443],
         [0.8504, 0.0478, 0.1234,  ..., 0.0209, 0.8735, 0.8670],
         [0.0509, 0.8567, 0.4879,  ..., 0.0209, 0.0422, 0.0443]],
        [[0.7186, 0.0415, 0.9621,  ..., 0.8800, 0.0083, 0.0614],
         [0.0938, 0.0415, 0.0126,  ..., 0.0400, 0.0083, 0.0614],
         [0.0938, 0.0415, 0.0126,  ..., 0.0400, 0.0083, 0.8115],
         [0.0938, 0.8755, 0.0126,  ..., 0.0400, 0.9752, 0.0657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:35,640 [Process: 0] Synchronize training processes
2024-08-19 13:22:35,640 [Process: 0] Evaluating...
2024-08-19 13:22:35,642 [Process: 0] EPOCH 60:
2024-08-19 13:22:35,644 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:36,665 [Process: 0] Synchronize training processes
2024-08-19 13:22:36,665 [Process: 0] Evaluating...
2024-08-19 13:22:36,667 [Process: 0] EPOCH 61:
2024-08-19 13:22:36,669 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9665, 0.0983, 0.0575,  ..., 0.9356, 0.9509, 0.0689],
         [0.0112, 0.0983, 0.0575,  ..., 0.0215, 0.0163, 0.0689],
         [0.0112, 0.0983, 0.0575,  ..., 0.0215, 0.0165, 0.0689],
         [0.0112, 0.7050, 0.8274,  ..., 0.0215, 0.0163, 0.7934]],
        [[0.1449, 0.0627, 0.0423,  ..., 0.1556, 0.0976, 0.0235],
         [0.1890, 0.0627, 0.0423,  ..., 0.1859, 0.0976, 0.0235],
         [0.5399, 0.0627, 0.0423,  ..., 0.1556, 0.6384, 0.9294],
         [0.1263, 0.8119, 0.8732,  ..., 0.5030, 0.1663, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0443, 0.0096, 0.4484,  ..., 0.9506, 0.0544, 0.0491],
         [0.0443, 0.0096, 0.1675,  ..., 0.0165, 0.0544, 0.0491],
         [0.8670, 0.0096, 0.1197,  ..., 0.0165, 0.8344, 0.8493],
         [0.0443, 0.9712, 0.2643,  ..., 0.0165, 0.0568, 0.0524]],
        [[0.1325, 0.0039, 0.9884,  ..., 0.9513, 0.0430, 0.0523],
         [0.1325, 0.0039, 0.0051,  ..., 0.0163, 0.0430, 0.0523],
         [0.4623, 0.0039, 0.0032,  ..., 0.0162, 0.0430, 0.8432],
         [0.2727, 0.9884, 0.0032,  ..., 0.0162, 0.8710, 0.0523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9021, 0.0708, 0.0772,  ..., 0.9287, 0.8728, 0.0299],
         [0.0326, 0.0708, 0.0772,  ..., 0.0238, 0.0502, 0.0299],
         [0.0326, 0.0708, 0.0891,  ..., 0.0238, 0.0385, 0.0299],
         [0.0326, 0.7875, 0.7566,  ..., 0.0238, 0.0385, 0.9104]],
        [[0.2462, 0.0472, 0.0466,  ..., 0.0783, 0.1259, 0.0618],
         [0.4118, 0.0472, 0.0466,  ..., 0.0783, 0.1196, 0.0618],
         [0.1710, 0.0472, 0.0466,  ..., 0.0783, 0.6018, 0.8147],
         [0.1710, 0.8584, 0.8603,  ..., 0.7650, 0.1527, 0.0618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0247, 0.0143, 0.9220,  ..., 0.9513, 0.0453, 0.0316],
         [0.0247, 0.0143, 0.0260,  ..., 0.0157, 0.0453, 0.0316],
         [0.9260, 0.0143, 0.0260,  ..., 0.0157, 0.8642, 0.9051],
         [0.0247, 0.9571, 0.0260,  ..., 0.0174, 0.0453, 0.0316]],
        [[0.1600, 0.0634, 0.9320,  ..., 0.9684, 0.0069, 0.0512],
         [0.1600, 0.0634, 0.0227,  ..., 0.0105, 0.0069, 0.0512],
         [0.5200, 0.0634, 0.0227,  ..., 0.0105, 0.0069, 0.8464],
         [0.1600, 0.8099, 0.0227,  ..., 0.0105, 0.9792, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:22:37,709 [Process: 0] Synchronize training processes
2024-08-19 13:22:37,710 [Process: 0] Evaluating...
2024-08-19 13:22:38,675 [Process: 0] EPOCH 62:
2024-08-19 13:22:38,677 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9483, 0.0652, 0.0558,  ..., 0.8836, 0.8092, 0.0589],
         [0.0198, 0.0587, 0.0558,  ..., 0.0426, 0.0636, 0.0589],
         [0.0159, 0.0587, 0.0558,  ..., 0.0375, 0.0636, 0.0589],
         [0.0159, 0.8174, 0.8327,  ..., 0.0363, 0.0636, 0.8234]],
        [[0.9125, 0.0704, 0.0339,  ..., 0.0632, 0.0470, 0.0172],
         [0.0364, 0.0704, 0.0339,  ..., 0.0632, 0.0470, 0.0172],
         [0.0256, 0.0905, 0.0339,  ..., 0.0632, 0.8496, 0.9484],
         [0.0256, 0.7686, 0.8982,  ..., 0.8105, 0.0564, 0.0172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0438, 0.0280, 0.6601,  ..., 0.8837, 0.0345, 0.0531],
         [0.0438, 0.0145, 0.0714,  ..., 0.0361, 0.0345, 0.0531],
         [0.8685, 0.0145, 0.0714,  ..., 0.0361, 0.8966, 0.8407],
         [0.0438, 0.9431, 0.1970,  ..., 0.0441, 0.0345, 0.0531]],
        [[0.0700, 0.0334, 0.9654,  ..., 0.9442, 0.0031, 0.0970],
         [0.0700, 0.0334, 0.0115,  ..., 0.0186, 0.0031, 0.0970],
         [0.7899, 0.0334, 0.0115,  ..., 0.0186, 0.0031, 0.7091],
         [0.0700, 0.8999, 0.0115,  ..., 0.0186, 0.9907, 0.0970]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:39,680 [Process: 0] Synchronize training processes
2024-08-19 13:22:39,680 [Process: 0] Evaluating...
2024-08-19 13:22:39,682 [Process: 0] EPOCH 63:
2024-08-19 13:22:39,684 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:40,721 [Process: 0] Synchronize training processes
2024-08-19 13:22:40,721 [Process: 0] Evaluating...
2024-08-19 13:22:40,723 [Process: 0] EPOCH 64:
2024-08-19 13:22:40,725 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9650, 0.1178, 0.0488,  ..., 0.9522, 0.9313, 0.0393],
         [0.0117, 0.0885, 0.0488,  ..., 0.0173, 0.0246, 0.0393],
         [0.0117, 0.0885, 0.0488,  ..., 0.0152, 0.0220, 0.0393],
         [0.0117, 0.7052, 0.8537,  ..., 0.0152, 0.0220, 0.8821]],
        [[0.8612, 0.0920, 0.0418,  ..., 0.0603, 0.0634, 0.0147],
         [0.0435, 0.0920, 0.0418,  ..., 0.0603, 0.0634, 0.0147],
         [0.0519, 0.1031, 0.0418,  ..., 0.0603, 0.8099, 0.9558],
         [0.0435, 0.7130, 0.8745,  ..., 0.8192, 0.0634, 0.0147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0472, 0.0366, 0.3310,  ..., 0.9866, 0.0519, 0.0506],
         [0.0472, 0.0366, 0.1189,  ..., 0.0045, 0.0519, 0.0506],
         [0.8585, 0.0366, 0.1185,  ..., 0.0045, 0.8444, 0.8483],
         [0.0472, 0.8903, 0.4316,  ..., 0.0045, 0.0519, 0.0506]],
        [[0.0229, 0.0066, 0.9722,  ..., 0.9841, 0.0141, 0.0452],
         [0.0229, 0.0066, 0.0092,  ..., 0.0053, 0.0141, 0.0452],
         [0.9257, 0.0066, 0.0092,  ..., 0.0053, 0.0141, 0.8644],
         [0.0285, 0.9802, 0.0094,  ..., 0.0053, 0.9577, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9374, 0.0396, 0.0449,  ..., 0.9266, 0.8716, 0.0698],
         [0.0209, 0.0396, 0.0449,  ..., 0.0245, 0.0417, 0.0698],
         [0.0209, 0.0396, 0.0449,  ..., 0.0245, 0.0450, 0.0698],
         [0.0209, 0.8811, 0.8652,  ..., 0.0245, 0.0417, 0.7906]],
        [[0.9488, 0.0706, 0.0677,  ..., 0.0604, 0.0857, 0.0267],
         [0.0171, 0.0706, 0.0677,  ..., 0.0604, 0.0857, 0.0267],
         [0.0171, 0.0706, 0.0694,  ..., 0.0604, 0.6989, 0.9198],
         [0.0171, 0.7883, 0.7952,  ..., 0.8189, 0.1297, 0.0267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0327, 0.0312, 0.3984,  ..., 0.9667, 0.0466, 0.0400],
         [0.0327, 0.0312, 0.2471,  ..., 0.0111, 0.0466, 0.0400],
         [0.9019, 0.0312, 0.1688,  ..., 0.0111, 0.8602, 0.8800],
         [0.0327, 0.9064, 0.1857,  ..., 0.0111, 0.0466, 0.0400]],
        [[0.0097, 0.0106, 0.9773,  ..., 0.9308, 0.0044, 0.0444],
         [0.0097, 0.0106, 0.0076,  ..., 0.0231, 0.0044, 0.0444],
         [0.9710, 0.0106, 0.0076,  ..., 0.0231, 0.0044, 0.8669],
         [0.0097, 0.9683, 0.0076,  ..., 0.0231, 0.9868, 0.0444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:41,762 [Process: 0] Synchronize training processes
2024-08-19 13:22:41,762 [Process: 0] Evaluating...
2024-08-19 13:22:41,764 [Process: 0] EPOCH 65:
2024-08-19 13:22:41,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:42,801 [Process: 0] Synchronize training processes
2024-08-19 13:22:42,801 [Process: 0] Evaluating...
2024-08-19 13:22:42,803 [Process: 0] EPOCH 66:
2024-08-19 13:22:42,805 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9638, 0.0368, 0.1660,  ..., 0.9646, 0.4351, 0.1493],
         [0.0121, 0.0368, 0.1159,  ..., 0.0118, 0.2805, 0.1910],
         [0.0121, 0.0368, 0.1604,  ..., 0.0118, 0.1422, 0.1946],
         [0.0121, 0.8897, 0.5577,  ..., 0.0118, 0.1422, 0.4651]],
        [[0.9688, 0.0412, 0.0515,  ..., 0.0638, 0.0636, 0.0255],
         [0.0104, 0.0400, 0.0515,  ..., 0.0638, 0.0623, 0.0255],
         [0.0104, 0.0400, 0.0515,  ..., 0.0638, 0.8118, 0.9234],
         [0.0104, 0.8788, 0.8456,  ..., 0.8087, 0.0623, 0.0255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0548, 0.0066, 0.8374,  ..., 0.9328, 0.0235, 0.0418],
         [0.0548, 0.0066, 0.0500,  ..., 0.0213, 0.0235, 0.0418],
         [0.8273, 0.0066, 0.0500,  ..., 0.0213, 0.9294, 0.8747],
         [0.0631, 0.9802, 0.0625,  ..., 0.0247, 0.0235, 0.0418]],
        [[0.0118, 0.0218, 0.9886,  ..., 0.9779, 0.0017, 0.0336],
         [0.0118, 0.0218, 0.0038,  ..., 0.0074, 0.0017, 0.0336],
         [0.9647, 0.0218, 0.0038,  ..., 0.0074, 0.0017, 0.8992],
         [0.0118, 0.9346, 0.0038,  ..., 0.0074, 0.9949, 0.0336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9540, 0.0256, 0.0495,  ..., 0.9219, 0.0568, 0.0348],
         [0.0186, 0.0256, 0.0495,  ..., 0.0260, 0.0409, 0.0348],
         [0.0137, 0.0256, 0.0495,  ..., 0.0260, 0.0409, 0.0348],
         [0.0137, 0.9232, 0.8514,  ..., 0.0260, 0.8615, 0.8955]],
        [[0.9796, 0.0307, 0.0318,  ..., 0.0512, 0.0372, 0.0284],
         [0.0068, 0.0307, 0.0318,  ..., 0.0512, 0.0372, 0.0284],
         [0.0068, 0.0307, 0.0318,  ..., 0.0512, 0.8885, 0.9147],
         [0.0068, 0.9079, 0.9046,  ..., 0.8464, 0.0372, 0.0284]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0347, 0.0297, 0.9259,  ..., 0.9583, 0.0611, 0.0322],
         [0.0347, 0.0297, 0.0247,  ..., 0.0125, 0.0611, 0.0322],
         [0.8958, 0.0297, 0.0247,  ..., 0.0125, 0.8167, 0.9035],
         [0.0347, 0.9110, 0.0247,  ..., 0.0166, 0.0611, 0.0322]],
        [[0.0118, 0.0323, 0.9529,  ..., 0.9300, 0.0184, 0.0487],
         [0.0118, 0.0323, 0.0157,  ..., 0.0233, 0.0184, 0.0487],
         [0.9647, 0.0323, 0.0157,  ..., 0.0233, 0.0184, 0.8538],
         [0.0118, 0.9030, 0.0157,  ..., 0.0233, 0.9449, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:43,840 [Process: 0] Synchronize training processes
2024-08-19 13:22:43,841 [Process: 0] Evaluating...
2024-08-19 13:22:43,842 [Process: 0] EPOCH 67:
2024-08-19 13:22:43,844 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:44,880 [Process: 0] Synchronize training processes
2024-08-19 13:22:44,881 [Process: 0] Evaluating...
2024-08-19 13:22:44,882 [Process: 0] EPOCH 68:
2024-08-19 13:22:44,884 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9651, 0.0324, 0.0309,  ..., 0.9618, 0.9622, 0.0326],
         [0.0116, 0.0324, 0.0309,  ..., 0.0127, 0.0126, 0.0326],
         [0.0116, 0.0324, 0.0309,  ..., 0.0127, 0.0126, 0.0326],
         [0.0116, 0.9029, 0.9074,  ..., 0.0127, 0.0126, 0.9022]],
        [[0.8076, 0.0258, 0.0559,  ..., 0.0563, 0.0160, 0.0460],
         [0.0638, 0.0258, 0.0559,  ..., 0.0563, 0.0160, 0.0460],
         [0.0649, 0.0258, 0.0559,  ..., 0.0563, 0.9521, 0.8621],
         [0.0638, 0.9225, 0.8323,  ..., 0.8310, 0.0160, 0.0460]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0475, 0.0426, 0.9711,  ..., 0.9925, 0.0520, 0.0469],
         [0.0475, 0.0426, 0.0096,  ..., 0.0025, 0.0520, 0.0469],
         [0.8576, 0.0426, 0.0096,  ..., 0.0025, 0.8439, 0.8593],
         [0.0475, 0.8721, 0.0096,  ..., 0.0025, 0.0520, 0.0469]],
        [[0.0201, 0.0292, 0.9930,  ..., 0.9865, 0.0387, 0.0480],
         [0.0201, 0.0279, 0.0023,  ..., 0.0045, 0.0387, 0.0480],
         [0.9396, 0.0279, 0.0023,  ..., 0.0045, 0.0387, 0.8560],
         [0.0201, 0.9150, 0.0023,  ..., 0.0045, 0.8840, 0.0480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8839, 0.0833, 0.0641,  ..., 0.9532, 0.9373, 0.0701],
         [0.0346, 0.0726, 0.0641,  ..., 0.0156, 0.0237, 0.0701],
         [0.0469, 0.0726, 0.0641,  ..., 0.0156, 0.0195, 0.0770],
         [0.0346, 0.7715, 0.8078,  ..., 0.0156, 0.0195, 0.7827]],
        [[0.9543, 0.0399, 0.0558,  ..., 0.0943, 0.0448, 0.0258],
         [0.0152, 0.0399, 0.0558,  ..., 0.0872, 0.0416, 0.0258],
         [0.0152, 0.0399, 0.0558,  ..., 0.0872, 0.8720, 0.9226],
         [0.0152, 0.8803, 0.8325,  ..., 0.7313, 0.0416, 0.0258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:22:45,920 [Process: 0] Synchronize training processes
2024-08-19 13:22:45,921 [Process: 0] Evaluating...
2024-08-19 13:22:45,922 [Process: 0] EPOCH 69:
2024-08-19 13:22:45,924 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:46,962 [Process: 0] Synchronize training processes
2024-08-19 13:22:46,963 [Process: 0] Evaluating...
2024-08-19 13:22:46,964 [Process: 0] EPOCH 70:
2024-08-19 13:22:46,966 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0465, 0.0515, 0.9237,  ..., 0.9824, 0.0353, 0.0235],
         [0.0458, 0.0399, 0.0254,  ..., 0.0059, 0.0353, 0.0235],
         [0.8619, 0.0399, 0.0254,  ..., 0.0059, 0.8941, 0.9296],
         [0.0458, 0.8686, 0.0254,  ..., 0.0059, 0.0353, 0.0235]],
        [[0.0183, 0.1295, 0.9636,  ..., 0.9726, 0.0054, 0.0582],
         [0.0183, 0.1235, 0.0141,  ..., 0.0091, 0.0054, 0.0572],
         [0.9451, 0.1235, 0.0111,  ..., 0.0091, 0.0054, 0.8273],
         [0.0183, 0.6235, 0.0111,  ..., 0.0091, 0.9838, 0.0572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9861, 0.0409, 0.0705,  ..., 0.7840, 0.9294, 0.0360],
         [0.0046, 0.0409, 0.0705,  ..., 0.0717, 0.0229, 0.0360],
         [0.0046, 0.0409, 0.0931,  ..., 0.0764, 0.0249, 0.0360],
         [0.0046, 0.8774, 0.7660,  ..., 0.0678, 0.0229, 0.8919]],
        [[0.9335, 0.0352, 0.0314,  ..., 0.0575, 0.0790, 0.0152],
         [0.0222, 0.0352, 0.0314,  ..., 0.0575, 0.0790, 0.0152],
         [0.0222, 0.0352, 0.0314,  ..., 0.0575, 0.7494, 0.9543],
         [0.0222, 0.8944, 0.9058,  ..., 0.8276, 0.0925, 0.0152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0412, 0.0132, 0.9574,  ..., 0.9911, 0.0414, 0.0559],
         [0.0395, 0.0132, 0.0141,  ..., 0.0030, 0.0414, 0.0559],
         [0.8798, 0.0132, 0.0141,  ..., 0.0030, 0.8758, 0.8324],
         [0.0395, 0.9604, 0.0145,  ..., 0.0030, 0.0414, 0.0559]],
        [[0.0891, 0.1347, 0.9757,  ..., 0.9632, 0.0151, 0.0350],
         [0.0891, 0.1347, 0.0081,  ..., 0.0123, 0.0151, 0.0350],
         [0.7327, 0.2720, 0.0081,  ..., 0.0123, 0.0151, 0.8949],
         [0.0891, 0.4586, 0.0081,  ..., 0.0123, 0.9547, 0.0350]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9534, 0.0775, 0.0636,  ..., 0.8724, 0.9507, 0.0359],
         [0.0155, 0.0571, 0.0551,  ..., 0.0449, 0.0174, 0.0359],
         [0.0155, 0.0571, 0.0551,  ..., 0.0414, 0.0160, 0.0359],
         [0.0155, 0.8084, 0.8262,  ..., 0.0414, 0.0160, 0.8922]],
        [[0.1788, 0.0374, 0.0566,  ..., 0.1404, 0.0217, 0.0861],
         [0.3158, 0.0374, 0.0540,  ..., 0.1517, 0.0217, 0.0861],
         [0.3023, 0.0374, 0.0540,  ..., 0.1404, 0.9348, 0.6979],
         [0.2031, 0.8878, 0.8354,  ..., 0.5674, 0.0217, 0.1299]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:48,002 [Process: 0] Synchronize training processes
2024-08-19 13:22:48,002 [Process: 0] Evaluating...
2024-08-19 13:22:48,004 [Process: 0] EPOCH 71:
2024-08-19 13:22:48,006 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:49,043 [Process: 0] Synchronize training processes
2024-08-19 13:22:49,044 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0495, 0.0234, 0.9287,  ..., 0.9842, 0.0517, 0.0702],
         [0.0480, 0.0234, 0.0238,  ..., 0.0053, 0.0517, 0.0677],
         [0.8544, 0.0234, 0.0238,  ..., 0.0053, 0.8448, 0.7830],
         [0.0480, 0.9297, 0.0238,  ..., 0.0053, 0.0517, 0.0790]],
        [[0.0329, 0.0291, 0.9604,  ..., 0.9140, 0.0113, 0.0373],
         [0.0228, 0.0278, 0.0132,  ..., 0.0287, 0.0113, 0.0363],
         [0.9215, 0.0278, 0.0132,  ..., 0.0287, 0.0113, 0.8900],
         [0.0228, 0.9153, 0.0132,  ..., 0.0287, 0.9661, 0.0363]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9716, 0.0145, 0.0347,  ..., 0.9730, 0.9865, 0.1080],
         [0.0095, 0.0145, 0.0347,  ..., 0.0090, 0.0045, 0.1080],
         [0.0095, 0.0145, 0.0347,  ..., 0.0090, 0.0045, 0.1080],
         [0.0095, 0.9564, 0.8958,  ..., 0.0090, 0.0045, 0.6760]],
        [[0.1650, 0.0174, 0.0306,  ..., 0.0135, 0.0193, 0.0406],
         [0.2675, 0.0174, 0.0306,  ..., 0.0135, 0.0193, 0.0406],
         [0.4026, 0.0174, 0.0306,  ..., 0.0135, 0.9421, 0.8781],
         [0.1650, 0.9478, 0.9082,  ..., 0.9594, 0.0193, 0.0406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0220, 0.0066, 0.9447,  ..., 0.9868, 0.0362, 0.0713],
         [0.0220, 0.0066, 0.0184,  ..., 0.0044, 0.0362, 0.0637],
         [0.9341, 0.0066, 0.0184,  ..., 0.0044, 0.8915, 0.8013],
         [0.0220, 0.9801, 0.0184,  ..., 0.0044, 0.0362, 0.0637]],
        [[0.0375, 0.0206, 0.9892,  ..., 0.9740, 0.0066, 0.0468],
         [0.0375, 0.0206, 0.0036,  ..., 0.0087, 0.0066, 0.0466],
         [0.8876, 0.0206, 0.0036,  ..., 0.0087, 0.0066, 0.8599],
         [0.0375, 0.9383, 0.0036,  ..., 0.0087, 0.9802, 0.0466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:22:50,006 [Process: 0] EPOCH 72:
2024-08-19 13:22:50,008 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:51,006 [Process: 0] Synchronize training processes
2024-08-19 13:22:51,006 [Process: 0] Evaluating...
2024-08-19 13:22:51,008 [Process: 0] EPOCH 73:
2024-08-19 13:22:51,010 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9667, 0.0630, 0.0454,  ..., 0.9667, 0.9580, 0.0860],
         [0.0105, 0.0630, 0.0416,  ..., 0.0111, 0.0140, 0.0860],
         [0.0118, 0.0642, 0.0476,  ..., 0.0111, 0.0140, 0.0860],
         [0.0111, 0.8098, 0.8654,  ..., 0.0111, 0.0140, 0.7419]],
        [[0.1810, 0.0238, 0.0244,  ..., 0.1535, 0.0308, 0.0257],
         [0.4566, 0.0238, 0.0187,  ..., 0.1826, 0.0394, 0.0257],
         [0.1810, 0.0238, 0.0187,  ..., 0.2566, 0.8990, 0.9229],
         [0.1813, 0.9287, 0.9383,  ..., 0.4073, 0.0308, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0295, 0.0158, 0.7369,  ..., 0.9845, 0.0331, 0.0508],
         [0.0295, 0.0086, 0.0703,  ..., 0.0052, 0.0331, 0.0508],
         [0.9115, 0.0086, 0.0703,  ..., 0.0052, 0.9006, 0.8477],
         [0.0295, 0.9671, 0.1225,  ..., 0.0052, 0.0331, 0.0508]],
        [[0.0254, 0.0048, 0.9823,  ..., 0.9662, 0.0220, 0.0580],
         [0.0254, 0.0048, 0.0059,  ..., 0.0113, 0.0187, 0.0580],
         [0.9238, 0.0048, 0.0059,  ..., 0.0113, 0.0187, 0.8260],
         [0.0254, 0.9857, 0.0059,  ..., 0.0113, 0.9406, 0.0580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9663, 0.0527, 0.0399,  ..., 0.9582, 0.9558, 0.0347],
         [0.0112, 0.0490, 0.0399,  ..., 0.0139, 0.0147, 0.0346],
         [0.0112, 0.0612, 0.0399,  ..., 0.0139, 0.0147, 0.0346],
         [0.0112, 0.8371, 0.8803,  ..., 0.0139, 0.0147, 0.8960]],
        [[0.6002, 0.0551, 0.0280,  ..., 0.0864, 0.0237, 0.0308],
         [0.0952, 0.0469, 0.0280,  ..., 0.0864, 0.0237, 0.0308],
         [0.1393, 0.0469, 0.0280,  ..., 0.0865, 0.9288, 0.9077],
         [0.1653, 0.8510, 0.9160,  ..., 0.7406, 0.0237, 0.0308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:52,060 [Process: 0] Synchronize training processes
2024-08-19 13:22:52,060 [Process: 0] Evaluating...
2024-08-19 13:22:52,062 [Process: 0] EPOCH 74:
2024-08-19 13:22:52,064 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:53,098 [Process: 0] Synchronize training processes
2024-08-19 13:22:53,099 [Process: 0] Evaluating...
2024-08-19 13:22:53,101 [Process: 0] EPOCH 75:
2024-08-19 13:22:53,102 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0315, 0.0068, 0.6898,  ..., 0.9651, 0.0592, 0.0559],
         [0.0315, 0.0068, 0.0545,  ..., 0.0116, 0.0592, 0.0559],
         [0.9054, 0.0068, 0.0545,  ..., 0.0116, 0.8223, 0.8323],
         [0.0315, 0.9795, 0.2012,  ..., 0.0116, 0.0592, 0.0559]],
        [[0.1085, 0.0265, 0.9944,  ..., 0.9756, 0.0184, 0.0335],
         [0.1085, 0.0169, 0.0019,  ..., 0.0081, 0.0184, 0.0335],
         [0.6744, 0.0169, 0.0019,  ..., 0.0081, 0.0184, 0.8994],
         [0.1085, 0.9397, 0.0019,  ..., 0.0081, 0.9448, 0.0335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9914, 0.0186, 0.0444,  ..., 0.9724, 0.9846, 0.0329],
         [0.0029, 0.0186, 0.0444,  ..., 0.0092, 0.0051, 0.0329],
         [0.0029, 0.0186, 0.0444,  ..., 0.0092, 0.0051, 0.0329],
         [0.0029, 0.9443, 0.8667,  ..., 0.0092, 0.0051, 0.9013]],
        [[0.8565, 0.0443, 0.0251,  ..., 0.0278, 0.0469, 0.0092],
         [0.0478, 0.0443, 0.0251,  ..., 0.0278, 0.0842, 0.0092],
         [0.0478, 0.0485, 0.0251,  ..., 0.0278, 0.8220, 0.9725],
         [0.0478, 0.8629, 0.9246,  ..., 0.9166, 0.0469, 0.0092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0783, 0.0055, 0.9116,  ..., 0.9949, 0.0584, 0.0356],
         [0.0783, 0.0055, 0.0289,  ..., 0.0017, 0.0584, 0.0356],
         [0.7313, 0.0055, 0.0289,  ..., 0.0017, 0.8192, 0.8932],
         [0.1121, 0.9836, 0.0307,  ..., 0.0017, 0.0640, 0.0356]],
        [[0.0337, 0.0014, 0.9484,  ..., 0.9558, 0.0019, 0.0621],
         [0.0337, 0.0014, 0.0170,  ..., 0.0147, 0.0019, 0.0621],
         [0.8989, 0.0014, 0.0170,  ..., 0.0147, 0.0019, 0.8138],
         [0.0337, 0.9957, 0.0175,  ..., 0.0147, 0.9943, 0.0621]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8978, 0.0350, 0.0193,  ..., 0.9127, 0.8444, 0.0744],
         [0.0475, 0.0350, 0.0193,  ..., 0.0291, 0.0479, 0.0744],
         [0.0273, 0.0350, 0.0193,  ..., 0.0291, 0.0598, 0.0759],
         [0.0273, 0.8950, 0.9421,  ..., 0.0291, 0.0479, 0.7753]],
        [[0.9633, 0.0184, 0.0181,  ..., 0.0437, 0.0759, 0.1075],
         [0.0122, 0.0174, 0.0181,  ..., 0.0437, 0.0759, 0.1075],
         [0.0122, 0.0174, 0.0181,  ..., 0.0437, 0.7724, 0.4894],
         [0.0122, 0.9468, 0.9458,  ..., 0.8689, 0.0759, 0.2956]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:54,137 [Process: 0] Synchronize training processes
2024-08-19 13:22:54,138 [Process: 0] Evaluating...
2024-08-19 13:22:54,139 [Process: 0] EPOCH 76:
2024-08-19 13:22:54,141 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:55,180 [Process: 0] Synchronize training processes
2024-08-19 13:22:55,181 [Process: 0] Evaluating...
2024-08-19 13:22:55,184 [Process: 0] EPOCH 77:
2024-08-19 13:22:55,186 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.7611e-02, 5.1131e-03, 8.7713e-01,  ..., 9.8954e-01,
          2.8676e-02, 2.7085e-02],
         [7.7611e-02, 5.1131e-03, 3.3048e-02,  ..., 3.4879e-03,
          2.8676e-02, 2.7085e-02],
         [7.2417e-01, 5.1131e-03, 3.3048e-02,  ..., 3.4879e-03,
          9.1397e-01, 9.1875e-01],
         [1.2060e-01, 9.8466e-01, 5.6771e-02,  ..., 3.4879e-03,
          2.8676e-02, 2.7085e-02]],
        [[1.2501e-02, 5.9702e-04, 9.9247e-01,  ..., 9.6199e-01,
          1.8759e-03, 2.6372e-02],
         [1.2501e-02, 5.9702e-04, 2.5086e-03,  ..., 1.2670e-02,
          1.8759e-03, 2.6372e-02],
         [9.6250e-01, 5.9702e-04, 2.5086e-03,  ..., 1.2670e-02,
          1.8759e-03, 9.2088e-01],
         [1.2501e-02, 9.9821e-01, 2.5086e-03,  ..., 1.2670e-02,
          9.9437e-01, 2.6372e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9656, 0.0319, 0.0391,  ..., 0.9322, 0.9549, 0.0469],
         [0.0134, 0.0319, 0.0391,  ..., 0.0226, 0.0177, 0.0469],
         [0.0105, 0.0319, 0.0391,  ..., 0.0226, 0.0137, 0.0469],
         [0.0105, 0.9043, 0.8826,  ..., 0.0226, 0.0137, 0.8593]],
        [[0.9394, 0.0304, 0.0686,  ..., 0.0794, 0.0639, 0.0148],
         [0.0202, 0.0304, 0.0686,  ..., 0.0794, 0.0639, 0.0148],
         [0.0202, 0.0304, 0.0686,  ..., 0.0801, 0.7983, 0.9555],
         [0.0202, 0.9089, 0.7941,  ..., 0.7611, 0.0738, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0468, 0.0031, 0.9240,  ..., 0.9578, 0.0244, 0.0410],
         [0.0468, 0.0031, 0.0242,  ..., 0.0141, 0.0244, 0.0410],
         [0.8572, 0.0031, 0.0242,  ..., 0.0141, 0.9269, 0.8769],
         [0.0491, 0.9907, 0.0275,  ..., 0.0141, 0.0244, 0.0410]],
        [[0.0404, 0.0058, 0.9606,  ..., 0.9661, 0.0102, 0.0169],
         [0.0404, 0.0058, 0.0131,  ..., 0.0113, 0.0102, 0.0169],
         [0.8788, 0.0058, 0.0131,  ..., 0.0113, 0.0102, 0.9492],
         [0.0404, 0.9826, 0.0131,  ..., 0.0113, 0.9693, 0.0169]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9794, 0.0535, 0.0622,  ..., 0.9119, 0.9727, 0.0399],
         [0.0069, 0.0535, 0.0594,  ..., 0.0294, 0.0091, 0.0399],
         [0.0069, 0.0680, 0.0594,  ..., 0.0294, 0.0091, 0.0399],
         [0.0069, 0.8249, 0.8190,  ..., 0.0294, 0.0091, 0.8804]],
        [[0.8620, 0.0284, 0.0380,  ..., 0.0519, 0.0406, 0.0090],
         [0.0488, 0.0284, 0.0380,  ..., 0.0519, 0.0406, 0.0090],
         [0.0446, 0.0284, 0.0380,  ..., 0.0519, 0.8782, 0.9729],
         [0.0446, 0.9148, 0.8859,  ..., 0.8444, 0.0406, 0.0090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:56,221 [Process: 0] Synchronize training processes
2024-08-19 13:22:56,221 [Process: 0] Evaluating...
2024-08-19 13:22:56,223 [Process: 0] EPOCH 78:
2024-08-19 13:22:56,225 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:57,260 [Process: 0] Synchronize training processes
2024-08-19 13:22:57,261 [Process: 0] Evaluating...
2024-08-19 13:22:57,262 [Process: 0] EPOCH 79:
2024-08-19 13:22:57,264 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0653, 0.0070, 0.8865,  ..., 0.9809, 0.0467, 0.0424],
         [0.0653, 0.0070, 0.0344,  ..., 0.0064, 0.0467, 0.0424],
         [0.7993, 0.0070, 0.0344,  ..., 0.0064, 0.8600, 0.8729],
         [0.0700, 0.9791, 0.0447,  ..., 0.0064, 0.0467, 0.0424]],
        [[0.0516, 0.0062, 0.9782,  ..., 0.9475, 0.0190, 0.0373],
         [0.0414, 0.0062, 0.0073,  ..., 0.0163, 0.0190, 0.0373],
         [0.8656, 0.0062, 0.0073,  ..., 0.0163, 0.0190, 0.8882],
         [0.0414, 0.9815, 0.0073,  ..., 0.0199, 0.9430, 0.0373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9720, 0.0311, 0.0356,  ..., 0.9703, 0.9658, 0.0442],
         [0.0093, 0.0311, 0.0356,  ..., 0.0099, 0.0114, 0.0442],
         [0.0093, 0.0311, 0.0356,  ..., 0.0099, 0.0114, 0.0442],
         [0.0093, 0.9066, 0.8933,  ..., 0.0099, 0.0114, 0.8673]],
        [[0.9835, 0.0453, 0.0390,  ..., 0.0609, 0.0606, 0.0083],
         [0.0055, 0.0453, 0.0390,  ..., 0.0609, 0.0606, 0.0083],
         [0.0055, 0.0453, 0.0390,  ..., 0.0609, 0.8013, 0.9751],
         [0.0055, 0.8641, 0.8830,  ..., 0.8173, 0.0776, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0506, 0.0039, 0.9773,  ..., 0.9860, 0.0331, 0.0276],
         [0.0506, 0.0039, 0.0076,  ..., 0.0047, 0.0311, 0.0276],
         [0.8436, 0.0039, 0.0076,  ..., 0.0047, 0.9047, 0.9173],
         [0.0553, 0.9882, 0.0076,  ..., 0.0047, 0.0311, 0.0276]],
        [[0.0034, 0.0027, 0.9051,  ..., 0.9453, 0.0148, 0.0242],
         [0.0034, 0.0027, 0.0247,  ..., 0.0182, 0.0148, 0.0242],
         [0.9899, 0.0027, 0.0247,  ..., 0.0182, 0.0148, 0.9274],
         [0.0034, 0.9920, 0.0454,  ..., 0.0182, 0.9555, 0.0242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9937, 0.0566, 0.0180,  ..., 0.9665, 0.9766, 0.0328],
         [0.0021, 0.0566, 0.0180,  ..., 0.0112, 0.0078, 0.0328],
         [0.0021, 0.0583, 0.0180,  ..., 0.0112, 0.0078, 0.0328],
         [0.0021, 0.8285, 0.9459,  ..., 0.0112, 0.0078, 0.9015]],
        [[0.9940, 0.0386, 0.0195,  ..., 0.0291, 0.0542, 0.0298],
         [0.0020, 0.0386, 0.0195,  ..., 0.0291, 0.0542, 0.0298],
         [0.0020, 0.0393, 0.0195,  ..., 0.0291, 0.8373, 0.9106],
         [0.0020, 0.8836, 0.9416,  ..., 0.9127, 0.0542, 0.0298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:22:58,354 [Process: 0] Synchronize training processes
2024-08-19 13:22:58,354 [Process: 0] Evaluating...
2024-08-19 13:22:58,356 [Process: 0] EPOCH 80:
2024-08-19 13:22:58,358 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:22:59,392 [Process: 0] Synchronize training processes
2024-08-19 13:22:59,392 [Process: 0] Evaluating...
2024-08-19 13:22:59,394 [Process: 0] EPOCH 81:
2024-08-19 13:22:59,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0423, 0.0088, 0.9238,  ..., 0.9863, 0.0185, 0.0607],
         [0.0423, 0.0088, 0.0248,  ..., 0.0046, 0.0185, 0.0562],
         [0.8731, 0.0088, 0.0248,  ..., 0.0046, 0.9444, 0.8193],
         [0.0423, 0.9736, 0.0265,  ..., 0.0046, 0.0185, 0.0638]],
        [[0.0555, 0.0024, 0.9587,  ..., 0.9509, 0.0270, 0.0382],
         [0.2267, 0.0024, 0.0138,  ..., 0.0164, 0.0270, 0.0382],
         [0.6687, 0.0024, 0.0138,  ..., 0.0164, 0.0270, 0.8853],
         [0.0490, 0.9929, 0.0138,  ..., 0.0164, 0.9191, 0.0382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9651, 0.0341, 0.0247,  ..., 0.9310, 0.9202, 0.0364],
         [0.0116, 0.0341, 0.0247,  ..., 0.0230, 0.0266, 0.0364],
         [0.0116, 0.0341, 0.0247,  ..., 0.0230, 0.0266, 0.0364],
         [0.0116, 0.8977, 0.9260,  ..., 0.0230, 0.0266, 0.8908]],
        [[0.9737, 0.0453, 0.0381,  ..., 0.0491, 0.0182, 0.0142],
         [0.0088, 0.0453, 0.0381,  ..., 0.0491, 0.0182, 0.0142],
         [0.0088, 0.0453, 0.0381,  ..., 0.0491, 0.9453, 0.9573],
         [0.0088, 0.8640, 0.8857,  ..., 0.8526, 0.0182, 0.0142]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8219e-02, 7.3800e-03, 8.0259e-01,  ..., 9.9738e-01,
          4.7825e-02, 5.5016e-02],
         [3.8219e-02, 7.3800e-03, 5.5330e-02,  ..., 8.7332e-04,
          4.6492e-02, 5.2689e-02],
         [8.8534e-01, 7.3800e-03, 5.5330e-02,  ..., 8.7332e-04,
          8.5710e-01, 8.3961e-01],
         [3.8219e-02, 9.7786e-01, 8.6745e-02,  ..., 8.7332e-04,
          4.8585e-02, 5.2689e-02]],
        [[2.0825e-02, 1.4510e-03, 9.8082e-01,  ..., 9.9025e-01,
          3.2308e-03, 4.3801e-02],
         [1.8691e-02, 1.4510e-03, 6.3945e-03,  ..., 3.2487e-03,
          3.2308e-03, 4.3801e-02],
         [9.4179e-01, 1.4510e-03, 6.3945e-03,  ..., 3.2487e-03,
          3.2308e-03, 8.6860e-01],
         [1.8691e-02, 9.9565e-01, 6.3945e-03,  ..., 3.2487e-03,
          9.9031e-01, 4.3801e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9860, 0.0308, 0.0370,  ..., 0.9829, 0.9839, 0.0447],
         [0.0047, 0.0308, 0.0370,  ..., 0.0056, 0.0054, 0.0447],
         [0.0047, 0.0308, 0.0370,  ..., 0.0059, 0.0054, 0.0479],
         [0.0047, 0.9077, 0.8890,  ..., 0.0056, 0.0054, 0.8627]],
        [[0.8717, 0.0665, 0.0699,  ..., 0.0312, 0.0857, 0.0092],
         [0.0428, 0.0709, 0.0699,  ..., 0.0312, 0.0794, 0.0092],
         [0.0428, 0.0665, 0.0699,  ..., 0.0312, 0.7510, 0.9725],
         [0.0428, 0.7962, 0.7902,  ..., 0.9063, 0.0839, 0.0092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:00,432 [Process: 0] Synchronize training processes
2024-08-19 13:23:00,432 [Process: 0] Evaluating...
2024-08-19 13:23:01,389 [Process: 0] EPOCH 82:
2024-08-19 13:23:01,394 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0224, 0.0305, 0.9786,  ..., 0.9597, 0.0557, 0.0331],
         [0.0224, 0.0305, 0.0071,  ..., 0.0129, 0.0557, 0.0331],
         [0.9327, 0.0305, 0.0071,  ..., 0.0129, 0.8164, 0.9008],
         [0.0224, 0.9084, 0.0071,  ..., 0.0145, 0.0723, 0.0331]],
        [[0.0192, 0.0034, 0.9244,  ..., 0.9853, 0.0020, 0.0140],
         [0.0172, 0.0034, 0.0252,  ..., 0.0049, 0.0020, 0.0140],
         [0.9463, 0.0034, 0.0252,  ..., 0.0049, 0.0020, 0.9581],
         [0.0172, 0.9898, 0.0252,  ..., 0.0049, 0.9940, 0.0140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:02,395 [Process: 0] Synchronize training processes
2024-08-19 13:23:02,395 [Process: 0] Evaluating...
2024-08-19 13:23:02,397 [Process: 0] EPOCH 83:
2024-08-19 13:23:02,399 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:03,435 [Process: 0] Synchronize training processes
2024-08-19 13:23:03,436 [Process: 0] Evaluating...
2024-08-19 13:23:03,437 [Process: 0] EPOCH 84:
2024-08-19 13:23:03,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9635, 0.0367, 0.0337,  ..., 0.9609, 0.9776, 0.0571],
         [0.0131, 0.0367, 0.0337,  ..., 0.0138, 0.0078, 0.0571],
         [0.0117, 0.0367, 0.0337,  ..., 0.0126, 0.0073, 0.0571],
         [0.0117, 0.8898, 0.8989,  ..., 0.0126, 0.0073, 0.8287]],
        [[0.9649, 0.0579, 0.0229,  ..., 0.0390, 0.0699, 0.0050],
         [0.0117, 0.0579, 0.0229,  ..., 0.0390, 0.0699, 0.0050],
         [0.0117, 0.0579, 0.0229,  ..., 0.0390, 0.7602, 0.9850],
         [0.0117, 0.8264, 0.9312,  ..., 0.8831, 0.1001, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0425, 0.0063, 0.8773,  ..., 0.9600, 0.0183, 0.0223],
         [0.0425, 0.0063, 0.0394,  ..., 0.0128, 0.0183, 0.0223],
         [0.8726, 0.0063, 0.0394,  ..., 0.0128, 0.9450, 0.9331],
         [0.0425, 0.9812, 0.0440,  ..., 0.0144, 0.0183, 0.0223]],
        [[0.0257, 0.0020, 0.9907,  ..., 0.9637, 0.0037, 0.0317],
         [0.0257, 0.0020, 0.0031,  ..., 0.0116, 0.0037, 0.0317],
         [0.9230, 0.0020, 0.0031,  ..., 0.0116, 0.0037, 0.9049],
         [0.0257, 0.9940, 0.0031,  ..., 0.0132, 0.9890, 0.0317]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9307, 0.0130, 0.0372,  ..., 0.9225, 0.8756, 0.0505],
         [0.0329, 0.0130, 0.0372,  ..., 0.0258, 0.0388, 0.0505],
         [0.0182, 0.0130, 0.0372,  ..., 0.0258, 0.0469, 0.0602],
         [0.0182, 0.9611, 0.8884,  ..., 0.0258, 0.0388, 0.8388]],
        [[0.9791, 0.0319, 0.0131,  ..., 0.0283, 0.0748, 0.0199],
         [0.0070, 0.0319, 0.0131,  ..., 0.0283, 0.0748, 0.0199],
         [0.0070, 0.0319, 0.0131,  ..., 0.0283, 0.7572, 0.9402],
         [0.0070, 0.9044, 0.9606,  ..., 0.9150, 0.0932, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0370, 0.0161, 0.9391,  ..., 0.9845, 0.0560, 0.0439],
         [0.0370, 0.0161, 0.0219,  ..., 0.0051, 0.0560, 0.0439],
         [0.8889, 0.0161, 0.0195,  ..., 0.0051, 0.8275, 0.8684],
         [0.0370, 0.9516, 0.0195,  ..., 0.0052, 0.0606, 0.0439]],
        [[0.1276, 0.0015, 0.9772,  ..., 0.9836, 0.0195, 0.0289],
         [0.0990, 0.0015, 0.0076,  ..., 0.0055, 0.0195, 0.0289],
         [0.6915, 0.0015, 0.0076,  ..., 0.0055, 0.0195, 0.9132],
         [0.0819, 0.9954, 0.0076,  ..., 0.0055, 0.9416, 0.0289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:23:04,477 [Process: 0] Synchronize training processes
2024-08-19 13:23:04,478 [Process: 0] Evaluating...
2024-08-19 13:23:04,479 [Process: 0] EPOCH 85:
2024-08-19 13:23:04,481 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:05,517 [Process: 0] Synchronize training processes
2024-08-19 13:23:05,517 [Process: 0] Evaluating...
2024-08-19 13:23:05,519 [Process: 0] EPOCH 86:
2024-08-19 13:23:05,521 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.9207, 0.0172, 0.0269,  ..., 0.8893, 0.9869, 0.0356],
         [0.0264, 0.0172, 0.0269,  ..., 0.0369, 0.0051, 0.0356],
         [0.0264, 0.0172, 0.0269,  ..., 0.0369, 0.0040, 0.0356],
         [0.0264, 0.9485, 0.9192,  ..., 0.0369, 0.0040, 0.8931]],
        [[0.9753, 0.0205, 0.0406,  ..., 0.0344, 0.0558, 0.0484],
         [0.0084, 0.0205, 0.0406,  ..., 0.0344, 0.0558, 0.0484],
         [0.0082, 0.0205, 0.0406,  ..., 0.0344, 0.8327, 0.8306],
         [0.0082, 0.9384, 0.8781,  ..., 0.8968, 0.0558, 0.0725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0251, 0.0236, 0.9902,  ..., 0.9785, 0.0363, 0.0623],
         [0.0251, 0.0236, 0.0033,  ..., 0.0069, 0.0363, 0.0623],
         [0.9248, 0.0236, 0.0033,  ..., 0.0069, 0.8910, 0.8019],
         [0.0251, 0.9292, 0.0033,  ..., 0.0076, 0.0363, 0.0734]],
        [[0.1363, 0.0060, 0.9562,  ..., 0.9864, 0.0055, 0.0637],
         [0.0779, 0.0060, 0.0146,  ..., 0.0045, 0.0055, 0.0637],
         [0.7078, 0.0060, 0.0146,  ..., 0.0045, 0.0055, 0.8066],
         [0.0779, 0.9820, 0.0146,  ..., 0.0045, 0.9835, 0.0661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9523, 0.0294, 0.0465,  ..., 0.6366, 0.8708, 0.0416],
         [0.0159, 0.0294, 0.0465,  ..., 0.1769, 0.0561, 0.0416],
         [0.0159, 0.0294, 0.0529,  ..., 0.0932, 0.0365, 0.0416],
         [0.0159, 0.9118, 0.8541,  ..., 0.0932, 0.0365, 0.8751]],
        [[0.9697, 0.0294, 0.0145,  ..., 0.0098, 0.0646, 0.0555],
         [0.0101, 0.0294, 0.0145,  ..., 0.0098, 0.0646, 0.0555],
         [0.0101, 0.0294, 0.0145,  ..., 0.0098, 0.7737, 0.8043],
         [0.0101, 0.9119, 0.9565,  ..., 0.9707, 0.0970, 0.0847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0234, 0.0105, 0.9878,  ..., 0.9865, 0.0166, 0.0217],
         [0.0234, 0.0105, 0.0041,  ..., 0.0045, 0.0166, 0.0217],
         [0.9299, 0.0105, 0.0041,  ..., 0.0045, 0.9501, 0.9349],
         [0.0234, 0.9686, 0.0041,  ..., 0.0045, 0.0166, 0.0217]],
        [[0.0277, 0.0019, 0.9795,  ..., 0.9405, 0.0062, 0.0289],
         [0.0277, 0.0019, 0.0068,  ..., 0.0193, 0.0062, 0.0289],
         [0.9168, 0.0019, 0.0068,  ..., 0.0193, 0.0062, 0.9134],
         [0.0277, 0.9944, 0.0068,  ..., 0.0209, 0.9815, 0.0289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 13:23:06,556 [Process: 0] Synchronize training processes
2024-08-19 13:23:06,557 [Process: 0] Evaluating...
2024-08-19 13:23:06,559 [Process: 0] EPOCH 87:
2024-08-19 13:23:06,560 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9668, 0.0306, 0.0257,  ..., 0.9844, 0.9055, 0.0349],
         [0.0111, 0.0306, 0.0257,  ..., 0.0052, 0.0315, 0.0349],
         [0.0111, 0.0306, 0.0257,  ..., 0.0052, 0.0315, 0.0349],
         [0.0111, 0.9083, 0.9230,  ..., 0.0052, 0.0315, 0.8953]],
        [[0.9753, 0.0349, 0.0134,  ..., 0.0783, 0.0475, 0.0192],
         [0.0082, 0.0349, 0.0134,  ..., 0.0783, 0.0475, 0.0192],
         [0.0082, 0.0349, 0.0134,  ..., 0.0806, 0.8574, 0.9424],
         [0.0082, 0.8954, 0.9598,  ..., 0.7627, 0.0475, 0.0192]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0679, 0.0029, 0.9737,  ..., 0.9898, 0.0248, 0.0490],
         [0.0652, 0.0029, 0.0087,  ..., 0.0034, 0.0248, 0.0490],
         [0.7905, 0.0029, 0.0087,  ..., 0.0034, 0.9257, 0.8531],
         [0.0764, 0.9912, 0.0089,  ..., 0.0034, 0.0248, 0.0490]],
        [[0.0425, 0.0021, 0.9567,  ..., 0.9523, 0.0040, 0.0205],
         [0.0409, 0.0021, 0.0144,  ..., 0.0125, 0.0040, 0.0205],
         [0.8758, 0.0021, 0.0144,  ..., 0.0125, 0.0040, 0.9384],
         [0.0409, 0.9937, 0.0144,  ..., 0.0226, 0.9879, 0.0205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9943, 0.0270, 0.0445,  ..., 0.9718, 0.9389, 0.0541],
         [0.0019, 0.0270, 0.0445,  ..., 0.0094, 0.0204, 0.0541],
         [0.0019, 0.0286, 0.0445,  ..., 0.0094, 0.0204, 0.0641],
         [0.0019, 0.9173, 0.8665,  ..., 0.0094, 0.0204, 0.8277]],
        [[0.9786, 0.0318, 0.0097,  ..., 0.0250, 0.0530, 0.0101],
         [0.0071, 0.0318, 0.0097,  ..., 0.0250, 0.0530, 0.0110],
         [0.0071, 0.0318, 0.0097,  ..., 0.0250, 0.8310, 0.9688],
         [0.0071, 0.9045, 0.9708,  ..., 0.9250, 0.0629, 0.0101]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8927e-02, 2.5215e-02, 8.7370e-01,  ..., 9.7812e-01,
          3.4014e-02, 2.6519e-02],
         [2.8927e-02, 2.5215e-02, 2.4407e-02,  ..., 6.6920e-03,
          3.4014e-02, 2.6519e-02],
         [9.1322e-01, 2.5215e-02, 2.4407e-02,  ..., 6.6920e-03,
          8.9796e-01, 9.2044e-01],
         [2.8927e-02, 9.2435e-01, 7.7480e-02,  ..., 8.5001e-03,
          3.4014e-02, 2.6519e-02]],
        [[1.5562e-02, 4.8094e-04, 9.8863e-01,  ..., 9.8128e-01,
          2.2463e-03, 3.7335e-02],
         [1.5562e-02, 4.8094e-04, 3.7900e-03,  ..., 5.9570e-03,
          2.2463e-03, 3.7335e-02],
         [9.5331e-01, 4.8094e-04, 3.7900e-03,  ..., 5.9570e-03,
          2.2463e-03, 8.8766e-01],
         [1.5562e-02, 9.9856e-01, 3.7900e-03,  ..., 6.8081e-03,
          9.9326e-01, 3.7666e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:07,597 [Process: 0] Synchronize training processes
2024-08-19 13:23:07,597 [Process: 0] Evaluating...
2024-08-19 13:23:07,599 [Process: 0] EPOCH 88:
2024-08-19 13:23:07,601 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:08,638 [Process: 0] Synchronize training processes
2024-08-19 13:23:08,638 [Process: 0] Evaluating...
2024-08-19 13:23:08,640 [Process: 0] EPOCH 89:
2024-08-19 13:23:08,642 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9816, 0.0436, 0.0317,  ..., 0.9626, 0.9848, 0.0692],
         [0.0061, 0.0435, 0.0317,  ..., 0.0125, 0.0051, 0.0692],
         [0.0061, 0.0435, 0.0317,  ..., 0.0125, 0.0051, 0.0991],
         [0.0061, 0.8694, 0.9049,  ..., 0.0125, 0.0051, 0.7626]],
        [[0.9760, 0.0210, 0.0290,  ..., 0.0223, 0.0699, 0.0128],
         [0.0080, 0.0210, 0.0290,  ..., 0.0223, 0.0699, 0.0128],
         [0.0080, 0.0210, 0.0290,  ..., 0.0223, 0.7860, 0.9617],
         [0.0080, 0.9370, 0.9129,  ..., 0.9330, 0.0742, 0.0128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4965e-02, 1.4268e-02, 9.8658e-01,  ..., 9.7539e-01,
          2.4317e-02, 2.0494e-02],
         [2.4965e-02, 1.3346e-02, 4.4718e-03,  ..., 8.2025e-03,
          2.4317e-02, 2.0494e-02],
         [9.2511e-01, 1.3346e-02, 4.4718e-03,  ..., 8.2025e-03,
          9.2705e-01, 9.3852e-01],
         [2.4965e-02, 9.5904e-01, 4.4718e-03,  ..., 8.2025e-03,
          2.4317e-02, 2.0494e-02]],
        [[5.6946e-02, 1.4867e-02, 9.6826e-01,  ..., 9.4427e-01,
          9.5361e-04, 3.2767e-02],
         [6.6577e-02, 1.4867e-02, 1.0581e-02,  ..., 1.6944e-02,
          9.5361e-04, 3.2767e-02],
         [8.1953e-01, 1.4867e-02, 1.0581e-02,  ..., 1.6944e-02,
          9.5361e-04, 9.0170e-01],
         [5.6946e-02, 9.5540e-01, 1.0581e-02,  ..., 2.1841e-02,
          9.9714e-01, 3.2767e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9661, 0.0080, 0.0438,  ..., 0.9589, 0.9712, 0.0327],
         [0.0102, 0.0080, 0.0438,  ..., 0.0137, 0.0096, 0.0325],
         [0.0135, 0.0080, 0.0438,  ..., 0.0137, 0.0096, 0.0325],
         [0.0102, 0.9760, 0.8685,  ..., 0.0137, 0.0096, 0.9023]],
        [[0.9080, 0.0195, 0.0476,  ..., 0.0069, 0.0511, 0.0166],
         [0.0307, 0.0195, 0.0366,  ..., 0.0069, 0.0511, 0.0166],
         [0.0307, 0.0195, 0.0366,  ..., 0.0069, 0.8090, 0.9501],
         [0.0307, 0.9414, 0.8791,  ..., 0.9792, 0.0887, 0.0166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0409, 0.0094, 0.9781,  ..., 0.9801, 0.0314, 0.0406],
         [0.0409, 0.0094, 0.0073,  ..., 0.0062, 0.0314, 0.0406],
         [0.8726, 0.0094, 0.0073,  ..., 0.0062, 0.9059, 0.8783],
         [0.0456, 0.9719, 0.0073,  ..., 0.0076, 0.0314, 0.0406]],
        [[0.0388, 0.0065, 0.9703,  ..., 0.9766, 0.0021, 0.0614],
         [0.0388, 0.0065, 0.0116,  ..., 0.0078, 0.0021, 0.0614],
         [0.8835, 0.0065, 0.0091,  ..., 0.0078, 0.0021, 0.8029],
         [0.0388, 0.9806, 0.0091,  ..., 0.0078, 0.9936, 0.0743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:09,681 [Process: 0] Synchronize training processes
2024-08-19 13:23:09,682 [Process: 0] Evaluating...
2024-08-19 13:23:09,683 [Process: 0] EPOCH 90:
2024-08-19 13:23:09,685 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:10,721 [Process: 0] Synchronize training processes
2024-08-19 13:23:10,721 [Process: 0] Evaluating...
2024-08-19 13:23:10,723 [Process: 0] EPOCH 91:
2024-08-19 13:23:10,725 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9865, 0.0376, 0.0234,  ..., 0.9416, 0.9784, 0.0347],
         [0.0045, 0.0376, 0.0234,  ..., 0.0195, 0.0072, 0.0347],
         [0.0045, 0.0376, 0.0234,  ..., 0.0195, 0.0072, 0.0347],
         [0.0045, 0.8873, 0.9298,  ..., 0.0195, 0.0072, 0.8959]],
        [[0.9254, 0.0274, 0.1030,  ..., 0.0175, 0.0197, 0.0172],
         [0.0243, 0.0274, 0.0843,  ..., 0.0175, 0.0197, 0.0172],
         [0.0259, 0.0274, 0.1163,  ..., 0.0175, 0.9408, 0.9483],
         [0.0243, 0.9178, 0.6964,  ..., 0.9476, 0.0197, 0.0172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0941e-02, 2.2518e-02, 9.8194e-01,  ..., 9.9723e-01,
          1.8259e-02, 3.3835e-02],
         [3.9037e-02, 2.2518e-02, 5.7831e-03,  ..., 9.2344e-04,
          1.8259e-02, 3.3835e-02],
         [8.7915e-01, 2.2518e-02, 5.7831e-03,  ..., 9.2344e-04,
          9.4522e-01, 8.9540e-01],
         [4.0873e-02, 9.3245e-01, 6.4927e-03,  ..., 9.2344e-04,
          1.8259e-02, 3.6929e-02]],
        [[1.2828e-02, 4.6253e-03, 9.7847e-01,  ..., 9.8072e-01,
          1.5016e-03, 5.8954e-02],
         [1.2828e-02, 4.6253e-03, 7.1768e-03,  ..., 6.4279e-03,
          1.5016e-03, 5.8954e-02],
         [9.6152e-01, 4.6253e-03, 7.1768e-03,  ..., 6.4279e-03,
          1.5016e-03, 8.2314e-01],
         [1.2828e-02, 9.8612e-01, 7.1768e-03,  ..., 6.4279e-03,
          9.9550e-01, 5.8954e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9951, 0.0607, 0.0215,  ..., 0.9774, 0.9290, 0.0451],
         [0.0016, 0.0607, 0.0215,  ..., 0.0089, 0.0235, 0.0451],
         [0.0016, 0.0607, 0.0215,  ..., 0.0068, 0.0239, 0.0451],
         [0.0016, 0.8179, 0.9356,  ..., 0.0068, 0.0235, 0.8648]],
        [[0.8990, 0.0502, 0.0356,  ..., 0.0235, 0.0354, 0.0114],
         [0.0282, 0.0502, 0.0356,  ..., 0.0235, 0.0354, 0.0114],
         [0.0446, 0.0502, 0.0356,  ..., 0.0235, 0.8939, 0.9657],
         [0.0282, 0.8494, 0.8931,  ..., 0.9295, 0.0354, 0.0114]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0355, 0.0327, 0.9962,  ..., 0.9932, 0.0180, 0.0237],
         [0.0335, 0.0327, 0.0013,  ..., 0.0023, 0.0180, 0.0237],
         [0.8976, 0.0327, 0.0013,  ..., 0.0023, 0.9460, 0.9290],
         [0.0335, 0.9018, 0.0013,  ..., 0.0023, 0.0180, 0.0237]],
        [[0.0143, 0.0047, 0.9885,  ..., 0.9668, 0.0119, 0.0420],
         [0.0143, 0.0047, 0.0038,  ..., 0.0111, 0.0119, 0.0420],
         [0.9572, 0.0047, 0.0038,  ..., 0.0111, 0.0119, 0.8739],
         [0.0143, 0.9860, 0.0038,  ..., 0.0111, 0.9643, 0.0420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:23:11,761 [Process: 0] Synchronize training processes
2024-08-19 13:23:11,761 [Process: 0] Evaluating...
2024-08-19 13:23:12,719 [Process: 0] EPOCH 92:
2024-08-19 13:23:12,722 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9582, 0.0196, 0.0165,  ..., 0.9553, 0.9406, 0.0686],
         [0.0139, 0.0196, 0.0165,  ..., 0.0149, 0.0215, 0.0619],
         [0.0139, 0.0196, 0.0165,  ..., 0.0149, 0.0189, 0.0619],
         [0.0139, 0.9412, 0.9504,  ..., 0.0149, 0.0189, 0.8077]],
        [[0.9730, 0.0189, 0.0400,  ..., 0.0356, 0.0203, 0.0214],
         [0.0090, 0.0189, 0.0400,  ..., 0.0356, 0.0203, 0.0214],
         [0.0091, 0.0189, 0.0400,  ..., 0.0356, 0.9390, 0.9357],
         [0.0090, 0.9433, 0.8800,  ..., 0.8931, 0.0203, 0.0214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.6095e-02, 1.6213e-02, 9.8582e-01,  ..., 9.7925e-01,
          1.5153e-02, 2.5028e-02],
         [3.3061e-02, 1.6213e-02, 4.7262e-03,  ..., 6.9165e-03,
          1.5153e-02, 2.5028e-02],
         [8.9778e-01, 1.6213e-02, 4.7262e-03,  ..., 6.9165e-03,
          9.5454e-01, 9.2492e-01],
         [3.3061e-02, 9.5136e-01, 4.7262e-03,  ..., 6.9165e-03,
          1.5153e-02, 2.5028e-02]],
        [[8.6791e-03, 2.7935e-02, 9.7592e-01,  ..., 8.4676e-01,
          6.5363e-04, 4.4685e-02],
         [8.6791e-03, 2.7935e-02, 8.0256e-03,  ..., 3.9753e-02,
          6.5363e-04, 4.2904e-02],
         [9.7396e-01, 2.7935e-02, 8.0256e-03,  ..., 3.9753e-02,
          6.5363e-04, 8.6880e-01],
         [8.6791e-03, 9.1619e-01, 8.0256e-03,  ..., 7.3735e-02,
          9.9804e-01, 4.3606e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:13,720 [Process: 0] Synchronize training processes
2024-08-19 13:23:13,720 [Process: 0] Evaluating...
2024-08-19 13:23:13,722 [Process: 0] EPOCH 93:
2024-08-19 13:23:13,724 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:14,761 [Process: 0] Synchronize training processes
2024-08-19 13:23:14,761 [Process: 0] Evaluating...
2024-08-19 13:23:14,763 [Process: 0] EPOCH 94:
2024-08-19 13:23:14,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9887, 0.0440, 0.0616,  ..., 0.9673, 0.9815, 0.0574],
         [0.0038, 0.0440, 0.0616,  ..., 0.0109, 0.0062, 0.0574],
         [0.0038, 0.0499, 0.0616,  ..., 0.0109, 0.0062, 0.0589],
         [0.0038, 0.8621, 0.8153,  ..., 0.0109, 0.0062, 0.8264]],
        [[0.9784, 0.0405, 0.0419,  ..., 0.1337, 0.0133, 0.0065],
         [0.0072, 0.0405, 0.0419,  ..., 0.2300, 0.0133, 0.0065],
         [0.0072, 0.0405, 0.0419,  ..., 0.2417, 0.9601, 0.9804],
         [0.0072, 0.8784, 0.8742,  ..., 0.3945, 0.0133, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0508, 0.0043, 0.9771,  ..., 0.9826, 0.0213, 0.0231],
         [0.0456, 0.0043, 0.0076,  ..., 0.0058, 0.0213, 0.0231],
         [0.8521, 0.0043, 0.0076,  ..., 0.0058, 0.9362, 0.9308],
         [0.0515, 0.9871, 0.0076,  ..., 0.0058, 0.0213, 0.0231]],
        [[0.0092, 0.0023, 0.9526,  ..., 0.9667, 0.0067, 0.0594],
         [0.0092, 0.0023, 0.0158,  ..., 0.0111, 0.0067, 0.0530],
         [0.9724, 0.0023, 0.0158,  ..., 0.0111, 0.0067, 0.8294],
         [0.0092, 0.9930, 0.0158,  ..., 0.0111, 0.9798, 0.0582]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8811, 0.0478, 0.0490,  ..., 0.9859, 0.9905, 0.0548],
         [0.0375, 0.0478, 0.0490,  ..., 0.0047, 0.0032, 0.0548],
         [0.0440, 0.0545, 0.0490,  ..., 0.0047, 0.0032, 0.0557],
         [0.0375, 0.8498, 0.8529,  ..., 0.0047, 0.0032, 0.8347]],
        [[0.9894, 0.0390, 0.0673,  ..., 0.0490, 0.0199, 0.1044],
         [0.0035, 0.0390, 0.0673,  ..., 0.0490, 0.0199, 0.0831],
         [0.0035, 0.0390, 0.1146,  ..., 0.0512, 0.9404, 0.6652],
         [0.0035, 0.8830, 0.7508,  ..., 0.8508, 0.0199, 0.1473]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9437e-02, 3.2375e-03, 9.8734e-01,  ..., 9.9712e-01,
          3.6245e-02, 3.6476e-02],
         [2.9437e-02, 3.2375e-03, 4.2187e-03,  ..., 9.5885e-04,
          3.6245e-02, 3.6043e-02],
         [9.1169e-01, 3.2375e-03, 4.2187e-03,  ..., 9.5885e-04,
          8.9126e-01, 8.8984e-01],
         [2.9437e-02, 9.9029e-01, 4.2187e-03,  ..., 9.5885e-04,
          3.6245e-02, 3.7642e-02]],
        [[9.6070e-03, 1.2548e-02, 9.6118e-01,  ..., 9.5857e-01,
          1.4973e-03, 2.2421e-02],
         [9.6070e-03, 1.2548e-02, 1.2531e-02,  ..., 1.1715e-02,
          1.4973e-03, 2.2421e-02],
         [9.7118e-01, 1.2548e-02, 1.2531e-02,  ..., 1.1715e-02,
          1.4973e-03, 9.3274e-01],
         [9.6070e-03, 9.6236e-01, 1.3754e-02,  ..., 1.8000e-02,
          9.9551e-01, 2.2421e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:15,806 [Process: 0] Synchronize training processes
2024-08-19 13:23:15,806 [Process: 0] Evaluating...
2024-08-19 13:23:15,808 [Process: 0] EPOCH 95:
2024-08-19 13:23:15,810 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:16,849 [Process: 0] Synchronize training processes
2024-08-19 13:23:16,849 [Process: 0] Evaluating...
2024-08-19 13:23:16,851 [Process: 0] EPOCH 96:
2024-08-19 13:23:16,853 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9739, 0.0239, 0.0577,  ..., 0.9539, 0.9902, 0.0163],
         [0.0087, 0.0239, 0.0577,  ..., 0.0154, 0.0033, 0.0163],
         [0.0087, 0.0239, 0.0717,  ..., 0.0154, 0.0033, 0.0163],
         [0.0087, 0.9283, 0.8130,  ..., 0.0154, 0.0033, 0.9512]],
        [[0.9813, 0.0147, 0.0377,  ..., 0.1199, 0.0355, 0.0048],
         [0.0062, 0.0147, 0.0377,  ..., 0.0957, 0.0355, 0.0048],
         [0.0062, 0.0147, 0.0377,  ..., 0.1569, 0.8935, 0.9855],
         [0.0062, 0.9558, 0.8869,  ..., 0.6275, 0.0355, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1831e-02, 2.0195e-03, 9.7360e-01,  ..., 9.9014e-01,
          2.6268e-02, 2.2392e-02],
         [3.1831e-02, 2.0195e-03, 8.7993e-03,  ..., 3.2858e-03,
          2.6268e-02, 2.2392e-02],
         [9.0451e-01, 2.0195e-03, 8.7993e-03,  ..., 3.2858e-03,
          9.2120e-01, 9.3283e-01],
         [3.1831e-02, 9.9394e-01, 8.7993e-03,  ..., 3.2858e-03,
          2.6268e-02, 2.2392e-02]],
        [[1.4191e-02, 9.6935e-04, 9.8092e-01,  ..., 9.9276e-01,
          2.5162e-03, 3.5639e-02],
         [1.4191e-02, 9.6935e-04, 6.3611e-03,  ..., 2.4121e-03,
          2.5162e-03, 3.5639e-02],
         [9.5743e-01, 9.6935e-04, 6.3611e-03,  ..., 2.4121e-03,
          2.5162e-03, 8.9308e-01],
         [1.4191e-02, 9.9709e-01, 6.3611e-03,  ..., 2.4121e-03,
          9.9245e-01, 3.5639e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9952, 0.0136, 0.0242,  ..., 0.9767, 0.9410, 0.0531],
         [0.0016, 0.0136, 0.0242,  ..., 0.0078, 0.0197, 0.0475],
         [0.0016, 0.0136, 0.0242,  ..., 0.0078, 0.0197, 0.0607],
         [0.0016, 0.9592, 0.9275,  ..., 0.0078, 0.0197, 0.8387]],
        [[0.9858, 0.0379, 0.0423,  ..., 0.0314, 0.0207, 0.0033],
         [0.0047, 0.0379, 0.0423,  ..., 0.0314, 0.0207, 0.0033],
         [0.0047, 0.0383, 0.0423,  ..., 0.0314, 0.9380, 0.9900],
         [0.0047, 0.8860, 0.8731,  ..., 0.9058, 0.0207, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0413, 0.0089, 0.9793,  ..., 0.9931, 0.0215, 0.0269],
         [0.0413, 0.0089, 0.0069,  ..., 0.0023, 0.0215, 0.0269],
         [0.8762, 0.0089, 0.0069,  ..., 0.0023, 0.9354, 0.9193],
         [0.0413, 0.9732, 0.0069,  ..., 0.0023, 0.0215, 0.0269]],
        [[0.0220, 0.0180, 0.9715,  ..., 0.9563, 0.0030, 0.0171],
         [0.0220, 0.0180, 0.0094,  ..., 0.0146, 0.0030, 0.0171],
         [0.9341, 0.0180, 0.0094,  ..., 0.0146, 0.0030, 0.9487],
         [0.0220, 0.9461, 0.0097,  ..., 0.0146, 0.9909, 0.0171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:17,889 [Process: 0] Synchronize training processes
2024-08-19 13:23:17,889 [Process: 0] Evaluating...
2024-08-19 13:23:17,891 [Process: 0] EPOCH 97:
2024-08-19 13:23:17,892 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:18,929 [Process: 0] Synchronize training processes
2024-08-19 13:23:18,930 [Process: 0] Evaluating...
2024-08-19 13:23:18,931 [Process: 0] EPOCH 98:
2024-08-19 13:23:18,933 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9952, 0.0305, 0.0345,  ..., 0.9788, 0.9836, 0.0267],
         [0.0016, 0.0305, 0.0345,  ..., 0.0071, 0.0055, 0.0267],
         [0.0016, 0.0305, 0.0345,  ..., 0.0071, 0.0055, 0.0267],
         [0.0016, 0.9085, 0.8966,  ..., 0.0071, 0.0055, 0.9199]],
        [[0.9478, 0.0252, 0.0400,  ..., 0.0192, 0.0624, 0.0139],
         [0.0174, 0.0252, 0.0400,  ..., 0.0192, 0.0624, 0.0139],
         [0.0174, 0.0252, 0.0400,  ..., 0.0192, 0.7807, 0.9584],
         [0.0174, 0.9244, 0.8799,  ..., 0.9425, 0.0945, 0.0139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0560, 0.0019, 0.9646,  ..., 0.9664, 0.0239, 0.0217],
         [0.0530, 0.0019, 0.0118,  ..., 0.0112, 0.0239, 0.0217],
         [0.8338, 0.0019, 0.0118,  ..., 0.0112, 0.9282, 0.9348],
         [0.0573, 0.9942, 0.0118,  ..., 0.0112, 0.0239, 0.0217]],
        [[0.0253, 0.0065, 0.9873,  ..., 0.9766, 0.0032, 0.0405],
         [0.0253, 0.0065, 0.0042,  ..., 0.0078, 0.0032, 0.0405],
         [0.9241, 0.0065, 0.0042,  ..., 0.0078, 0.0032, 0.8784],
         [0.0253, 0.9804, 0.0042,  ..., 0.0078, 0.9904, 0.0406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9710, 0.0214, 0.0456,  ..., 0.9807, 0.9223, 0.0463],
         [0.0097, 0.0214, 0.0456,  ..., 0.0064, 0.0259, 0.0420],
         [0.0097, 0.0214, 0.0456,  ..., 0.0064, 0.0259, 0.0420],
         [0.0097, 0.9359, 0.8633,  ..., 0.0064, 0.0259, 0.8697]],
        [[0.9796, 0.0134, 0.0495,  ..., 0.0156, 0.0113, 0.0156],
         [0.0068, 0.0134, 0.0495,  ..., 0.0156, 0.0113, 0.0156],
         [0.0068, 0.0134, 0.0495,  ..., 0.0156, 0.9661, 0.9533],
         [0.0068, 0.9599, 0.8516,  ..., 0.9533, 0.0113, 0.0156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0200, 0.0040, 0.9720,  ..., 0.9803, 0.0105, 0.0368],
         [0.0200, 0.0040, 0.0093,  ..., 0.0066, 0.0105, 0.0368],
         [0.9399, 0.0040, 0.0093,  ..., 0.0066, 0.9685, 0.8886],
         [0.0200, 0.9879, 0.0093,  ..., 0.0066, 0.0105, 0.0378]],
        [[0.0940, 0.0015, 0.9682,  ..., 0.9789, 0.0080, 0.0137],
         [0.0748, 0.0015, 0.0100,  ..., 0.0070, 0.0080, 0.0137],
         [0.7510, 0.0015, 0.0100,  ..., 0.0070, 0.0080, 0.9588],
         [0.0803, 0.9955, 0.0118,  ..., 0.0070, 0.9759, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:19,971 [Process: 0] Synchronize training processes
2024-08-19 13:23:19,972 [Process: 0] Evaluating...
2024-08-19 13:23:19,973 [Process: 0] EPOCH 99:
2024-08-19 13:23:19,975 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:21,016 [Process: 0] Synchronize training processes
2024-08-19 13:23:21,016 [Process: 0] Evaluating...
2024-08-19 13:23:21,018 [Process: 0] EPOCH 100:
2024-08-19 13:23:21,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9925, 0.0405, 0.0232,  ..., 0.9686, 0.9517, 0.0374],
         [0.0025, 0.0405, 0.0232,  ..., 0.0105, 0.0161, 0.0374],
         [0.0025, 0.0405, 0.0232,  ..., 0.0105, 0.0161, 0.0374],
         [0.0025, 0.8784, 0.9305,  ..., 0.0105, 0.0161, 0.8878]],
        [[0.9408, 0.0518, 0.0289,  ..., 0.0229, 0.0059, 0.0013],
         [0.0183, 0.0518, 0.0289,  ..., 0.0195, 0.0059, 0.0013],
         [0.0226, 0.0566, 0.0289,  ..., 0.0195, 0.9823, 0.9960],
         [0.0183, 0.8399, 0.9134,  ..., 0.9382, 0.0059, 0.0013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0427, 0.0144, 0.9921,  ..., 0.9857, 0.0238, 0.0298],
         [0.0427, 0.0144, 0.0026,  ..., 0.0048, 0.0238, 0.0298],
         [0.8631, 0.0144, 0.0026,  ..., 0.0048, 0.9287, 0.9107],
         [0.0515, 0.9567, 0.0026,  ..., 0.0048, 0.0238, 0.0298]],
        [[0.0375, 0.0082, 0.9937,  ..., 0.9741, 0.0182, 0.0174],
         [0.0375, 0.0082, 0.0021,  ..., 0.0086, 0.0182, 0.0174],
         [0.8875, 0.0082, 0.0021,  ..., 0.0086, 0.0182, 0.9478],
         [0.0375, 0.9753, 0.0021,  ..., 0.0086, 0.9453, 0.0174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9840, 0.0414, 0.0487,  ..., 0.9611, 0.9735, 0.0266],
         [0.0053, 0.0414, 0.0487,  ..., 0.0130, 0.0088, 0.0266],
         [0.0053, 0.0414, 0.0501,  ..., 0.0130, 0.0088, 0.0266],
         [0.0053, 0.8758, 0.8525,  ..., 0.0130, 0.0088, 0.9201]],
        [[0.9904, 0.0928, 0.0439,  ..., 0.0107, 0.0214, 0.0232],
         [0.0032, 0.0850, 0.0426,  ..., 0.0107, 0.0214, 0.0232],
         [0.0032, 0.1440, 0.0426,  ..., 0.0107, 0.9359, 0.9304],
         [0.0032, 0.6782, 0.8708,  ..., 0.9679, 0.0214, 0.0232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4159e-02, 7.6733e-03, 9.9187e-01,  ..., 9.8948e-01,
          2.1995e-02, 9.4914e-03],
         [1.4159e-02, 7.6733e-03, 2.7091e-03,  ..., 3.5072e-03,
          2.1995e-02, 9.4914e-03],
         [9.5752e-01, 7.6733e-03, 2.7091e-03,  ..., 3.5072e-03,
          9.3401e-01, 9.7153e-01],
         [1.4159e-02, 9.7698e-01, 2.7091e-03,  ..., 3.5072e-03,
          2.1995e-02, 9.4914e-03]],
        [[3.5510e-02, 4.4913e-03, 8.8500e-01,  ..., 9.6712e-01,
          2.2190e-04, 2.8935e-02],
         [3.5510e-02, 4.4913e-03, 3.6309e-02,  ..., 1.0958e-02,
          2.2190e-04, 2.8935e-02],
         [8.9086e-01, 4.4913e-03, 3.6309e-02,  ..., 1.0958e-02,
          2.2190e-04, 9.1319e-01],
         [3.8123e-02, 9.8653e-01, 4.2380e-02,  ..., 1.0958e-02,
          9.9933e-01, 2.8935e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:22,054 [Process: 0] Synchronize training processes
2024-08-19 13:23:22,055 [Process: 0] Evaluating...
2024-08-19 13:23:22,056 [Process: 0] EPOCH 101:
2024-08-19 13:23:22,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:23,094 [Process: 0] Synchronize training processes
2024-08-19 13:23:23,095 [Process: 0] Evaluating...
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9843, 0.0360, 0.0570,  ..., 0.9535, 0.9651, 0.0238],
         [0.0052, 0.0360, 0.0570,  ..., 0.0155, 0.0116, 0.0238],
         [0.0052, 0.0360, 0.0956,  ..., 0.0155, 0.0116, 0.0238],
         [0.0052, 0.8920, 0.7905,  ..., 0.0155, 0.0116, 0.9287]],
        [[0.9351, 0.3197, 0.0209,  ..., 0.0308, 0.0039, 0.0106],
         [0.0216, 0.0968, 0.0209,  ..., 0.0308, 0.0039, 0.0106],
         [0.0216, 0.0995, 0.0209,  ..., 0.0308, 0.9884, 0.9683],
         [0.0216, 0.4840, 0.9374,  ..., 0.9076, 0.0039, 0.0106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0539, 0.0045, 0.9872,  ..., 0.9835, 0.0290, 0.0244],
         [0.0435, 0.0045, 0.0043,  ..., 0.0042, 0.0290, 0.0244],
         [0.8592, 0.0045, 0.0043,  ..., 0.0042, 0.9129, 0.9267],
         [0.0435, 0.9865, 0.0043,  ..., 0.0082, 0.0290, 0.0244]],
        [[0.0226, 0.0011, 0.9756,  ..., 0.9670, 0.0043, 0.0205],
         [0.0226, 0.0011, 0.0081,  ..., 0.0101, 0.0043, 0.0205],
         [0.9323, 0.0011, 0.0081,  ..., 0.0101, 0.0043, 0.9384],
         [0.0226, 0.9967, 0.0081,  ..., 0.0129, 0.9870, 0.0205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:23:24,056 [Process: 0] EPOCH 102:
2024-08-19 13:23:24,061 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:25,067 [Process: 0] Synchronize training processes
2024-08-19 13:23:25,067 [Process: 0] Evaluating...
2024-08-19 13:23:25,069 [Process: 0] EPOCH 103:
2024-08-19 13:23:25,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8987, 0.0493, 0.0126,  ..., 0.9707, 0.9735, 0.0274],
         [0.0306, 0.0493, 0.0126,  ..., 0.0098, 0.0088, 0.0274],
         [0.0401, 0.0640, 0.0126,  ..., 0.0098, 0.0088, 0.0274],
         [0.0306, 0.8374, 0.9623,  ..., 0.0098, 0.0088, 0.9179]],
        [[0.0070, 0.0232, 0.0314,  ..., 0.0541, 0.0143, 0.0081],
         [0.0105, 0.0232, 0.0314,  ..., 0.0541, 0.0143, 0.0081],
         [0.9755, 0.0232, 0.0314,  ..., 0.0719, 0.9572, 0.9756],
         [0.0070, 0.9304, 0.9057,  ..., 0.8198, 0.0143, 0.0081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0335, 0.0029, 0.9926,  ..., 0.9911, 0.0298, 0.0245],
         [0.0333, 0.0029, 0.0025,  ..., 0.0030, 0.0298, 0.0245],
         [0.8998, 0.0029, 0.0025,  ..., 0.0030, 0.9106, 0.9266],
         [0.0333, 0.9913, 0.0025,  ..., 0.0030, 0.0298, 0.0245]],
        [[0.0395, 0.0046, 0.9888,  ..., 0.9628, 0.0021, 0.0324],
         [0.0395, 0.0046, 0.0037,  ..., 0.0119, 0.0021, 0.0324],
         [0.8814, 0.0046, 0.0037,  ..., 0.0119, 0.0021, 0.9028],
         [0.0395, 0.9862, 0.0037,  ..., 0.0134, 0.9938, 0.0324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9756, 0.0281, 0.0304,  ..., 0.9712, 0.8997, 0.0549],
         [0.0081, 0.0281, 0.0304,  ..., 0.0096, 0.0294, 0.0549],
         [0.0081, 0.0281, 0.0304,  ..., 0.0096, 0.0415, 0.0778],
         [0.0081, 0.9157, 0.9087,  ..., 0.0096, 0.0294, 0.8124]],
        [[0.0490, 0.0423, 0.0331,  ..., 0.0435, 0.0201, 0.0131],
         [0.0445, 0.0423, 0.0331,  ..., 0.0435, 0.0201, 0.0131],
         [0.8620, 0.0466, 0.0331,  ..., 0.0511, 0.9396, 0.9607],
         [0.0445, 0.8688, 0.9008,  ..., 0.8619, 0.0201, 0.0131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0158, 0.0063, 0.9935,  ..., 0.9396, 0.0243, 0.0148],
         [0.0158, 0.0063, 0.0022,  ..., 0.0167, 0.0243, 0.0148],
         [0.9527, 0.0063, 0.0022,  ..., 0.0167, 0.9271, 0.9557],
         [0.0158, 0.9810, 0.0022,  ..., 0.0270, 0.0243, 0.0148]],
        [[0.0048, 0.0026, 0.9453,  ..., 0.9430, 0.0022, 0.0244],
         [0.0048, 0.0026, 0.0178,  ..., 0.0188, 0.0022, 0.0244],
         [0.9855, 0.0026, 0.0178,  ..., 0.0188, 0.0022, 0.9269],
         [0.0048, 0.9922, 0.0190,  ..., 0.0195, 0.9933, 0.0244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:26,106 [Process: 0] Synchronize training processes
2024-08-19 13:23:26,107 [Process: 0] Evaluating...
2024-08-19 13:23:26,108 [Process: 0] EPOCH 104:
2024-08-19 13:23:26,110 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:27,148 [Process: 0] Synchronize training processes
2024-08-19 13:23:27,148 [Process: 0] Evaluating...
2024-08-19 13:23:27,150 [Process: 0] EPOCH 105:
2024-08-19 13:23:27,152 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9672, 0.0250, 0.0266,  ..., 0.9845, 0.9805, 0.0309],
         [0.0109, 0.0250, 0.0266,  ..., 0.0052, 0.0065, 0.0309],
         [0.0109, 0.0250, 0.0266,  ..., 0.0052, 0.0065, 0.0309],
         [0.0109, 0.9250, 0.9201,  ..., 0.0052, 0.0065, 0.9072]],
        [[0.3926, 0.0411, 0.0287,  ..., 0.0380, 0.0555, 0.0050],
         [0.1093, 0.0411, 0.0287,  ..., 0.0380, 0.0555, 0.0050],
         [0.3535, 0.0411, 0.0287,  ..., 0.0380, 0.8082, 0.9850],
         [0.1447, 0.8766, 0.9138,  ..., 0.8860, 0.0809, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0372, 0.0242, 0.9783,  ..., 0.9969, 0.0330, 0.0153],
         [0.0348, 0.0189, 0.0061,  ..., 0.0010, 0.0330, 0.0153],
         [0.8924, 0.0189, 0.0061,  ..., 0.0010, 0.9011, 0.9540],
         [0.0356, 0.9380, 0.0095,  ..., 0.0010, 0.0330, 0.0153]],
        [[0.0058, 0.0068, 0.9922,  ..., 0.9891, 0.0019, 0.0173],
         [0.0058, 0.0068, 0.0026,  ..., 0.0036, 0.0019, 0.0173],
         [0.9825, 0.0068, 0.0026,  ..., 0.0036, 0.0019, 0.9480],
         [0.0058, 0.9795, 0.0026,  ..., 0.0036, 0.9943, 0.0173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9835, 0.0522, 0.0297,  ..., 0.9937, 0.9969, 0.0162],
         [0.0055, 0.0522, 0.0297,  ..., 0.0021, 0.0010, 0.0162],
         [0.0055, 0.0577, 0.0297,  ..., 0.0021, 0.0010, 0.0162],
         [0.0055, 0.8379, 0.9109,  ..., 0.0021, 0.0010, 0.9514]],
        [[0.4255, 0.0105, 0.0251,  ..., 0.0419, 0.0384, 0.0084],
         [0.1104, 0.0105, 0.0251,  ..., 0.0525, 0.0384, 0.0084],
         [0.2784, 0.0105, 0.0251,  ..., 0.0419, 0.8683, 0.9749],
         [0.1857, 0.9685, 0.9247,  ..., 0.8636, 0.0549, 0.0084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:23:28,190 [Process: 0] Synchronize training processes
2024-08-19 13:23:28,190 [Process: 0] Evaluating...
2024-08-19 13:23:28,192 [Process: 0] EPOCH 106:
2024-08-19 13:23:28,194 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:29,230 [Process: 0] Synchronize training processes
2024-08-19 13:23:29,230 [Process: 0] Evaluating...
2024-08-19 13:23:29,232 [Process: 0] EPOCH 107:
2024-08-19 13:23:29,233 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7863e-02, 1.8063e-02, 9.3451e-01,  ..., 9.9365e-01,
          5.1723e-02, 2.4041e-02],
         [7.0084e-02, 1.5587e-02, 2.1830e-02,  ..., 2.1069e-03,
          5.1723e-02, 2.4041e-02],
         [7.3260e-01, 1.5587e-02, 2.1830e-02,  ..., 2.1069e-03,
          8.4483e-01, 9.2788e-01],
         [9.9455e-02, 9.5076e-01, 2.1830e-02,  ..., 2.1380e-03,
          5.1723e-02, 2.4041e-02]],
        [[9.9699e-03, 3.1687e-03, 9.9491e-01,  ..., 9.1109e-01,
          9.3813e-04, 1.4070e-02],
         [9.9699e-03, 3.1687e-03, 1.6963e-03,  ..., 2.1496e-02,
          9.3813e-04, 1.4070e-02],
         [9.7009e-01, 3.1687e-03, 1.6963e-03,  ..., 2.1496e-02,
          9.3813e-04, 9.5779e-01],
         [9.9699e-03, 9.9049e-01, 1.6963e-03,  ..., 4.5916e-02,
          9.9719e-01, 1.4070e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9958, 0.0181, 0.0359,  ..., 0.9920, 0.9798, 0.0440],
         [0.0014, 0.0181, 0.0359,  ..., 0.0027, 0.0067, 0.0440],
         [0.0014, 0.0181, 0.0359,  ..., 0.0027, 0.0067, 0.0440],
         [0.0014, 0.9457, 0.8924,  ..., 0.0027, 0.0067, 0.8681]],
        [[0.6023, 0.0214, 0.0102,  ..., 0.0252, 0.0433, 0.0166],
         [0.0828, 0.0214, 0.0102,  ..., 0.0275, 0.0433, 0.0166],
         [0.2123, 0.0214, 0.0102,  ..., 0.0252, 0.8700, 0.9503],
         [0.1026, 0.9359, 0.9693,  ..., 0.9222, 0.0433, 0.0166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1069, 0.0254, 0.9767,  ..., 0.9968, 0.0111, 0.0139],
         [0.0781, 0.0238, 0.0078,  ..., 0.0011, 0.0111, 0.0139],
         [0.6998, 0.0238, 0.0078,  ..., 0.0011, 0.9668, 0.9584],
         [0.1153, 0.9270, 0.0078,  ..., 0.0011, 0.0111, 0.0139]],
        [[0.0197, 0.0077, 0.9385,  ..., 0.9730, 0.0032, 0.0371],
         [0.0197, 0.0077, 0.0132,  ..., 0.0065, 0.0032, 0.0371],
         [0.9410, 0.0077, 0.0132,  ..., 0.0065, 0.0032, 0.8888],
         [0.0197, 0.9769, 0.0351,  ..., 0.0141, 0.9903, 0.0371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9768, 0.0251, 0.0444,  ..., 0.9867, 0.9596, 0.0406],
         [0.0077, 0.0278, 0.0557,  ..., 0.0044, 0.0131, 0.0406],
         [0.0077, 0.0251, 0.0444,  ..., 0.0044, 0.0143, 0.0542],
         [0.0077, 0.9220, 0.8555,  ..., 0.0044, 0.0131, 0.8646]],
        [[0.6396, 0.0250, 0.0160,  ..., 0.0847, 0.0242, 0.0043],
         [0.0694, 0.0250, 0.0160,  ..., 0.1019, 0.0242, 0.0043],
         [0.2139, 0.0250, 0.0160,  ..., 0.0744, 0.9274, 0.9870],
         [0.0771, 0.9251, 0.9520,  ..., 0.7390, 0.0242, 0.0043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:30,270 [Process: 0] Synchronize training processes
2024-08-19 13:23:30,270 [Process: 0] Evaluating...
2024-08-19 13:23:30,272 [Process: 0] EPOCH 108:
2024-08-19 13:23:30,274 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:31,313 [Process: 0] Synchronize training processes
2024-08-19 13:23:31,313 [Process: 0] Evaluating...
2024-08-19 13:23:31,315 [Process: 0] EPOCH 109:
2024-08-19 13:23:31,316 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5337e-02, 4.1019e-03, 9.1160e-01,  ..., 9.8855e-01,
          2.7935e-02, 2.2514e-02],
         [7.1222e-02, 4.1019e-03, 2.6964e-02,  ..., 3.6750e-03,
          2.7935e-02, 2.2514e-02],
         [7.2867e-01, 4.1019e-03, 2.6964e-02,  ..., 3.6750e-03,
          9.1620e-01, 9.3246e-01],
         [1.0477e-01, 9.8769e-01, 3.4468e-02,  ..., 4.1003e-03,
          2.7935e-02, 2.2514e-02]],
        [[4.7316e-02, 3.8040e-04, 9.8071e-01,  ..., 9.6067e-01,
          6.9254e-03, 3.9273e-02],
         [6.1327e-02, 3.8040e-04, 5.8646e-03,  ..., 9.5603e-03,
          6.9254e-03, 3.9273e-02],
         [8.4404e-01, 3.8040e-04, 5.8646e-03,  ..., 9.5603e-03,
          6.9254e-03, 8.8218e-01],
         [4.7316e-02, 9.9886e-01, 7.5618e-03,  ..., 2.0209e-02,
          9.7922e-01, 3.9273e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9917, 0.0254, 0.0155,  ..., 0.9381, 0.9741, 0.0315],
         [0.0028, 0.0254, 0.0155,  ..., 0.0208, 0.0085, 0.0315],
         [0.0028, 0.0254, 0.0155,  ..., 0.0206, 0.0089, 0.0315],
         [0.0028, 0.9239, 0.9534,  ..., 0.0206, 0.0085, 0.9054]],
        [[0.9087, 0.0151, 0.0166,  ..., 0.0247, 0.0176, 0.0086],
         [0.0233, 0.0151, 0.0166,  ..., 0.0247, 0.0176, 0.0086],
         [0.0447, 0.0151, 0.0166,  ..., 0.0247, 0.9473, 0.9741],
         [0.0233, 0.9546, 0.9502,  ..., 0.9260, 0.0176, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1006, 0.0030, 0.9479,  ..., 0.9943, 0.0132, 0.0209],
         [0.0689, 0.0030, 0.0174,  ..., 0.0019, 0.0132, 0.0209],
         [0.7308, 0.0030, 0.0174,  ..., 0.0019, 0.9604, 0.9374],
         [0.0996, 0.9910, 0.0174,  ..., 0.0019, 0.0132, 0.0209]],
        [[0.0605, 0.0086, 0.9752,  ..., 0.9399, 0.0082, 0.0464],
         [0.0576, 0.0086, 0.0083,  ..., 0.0162, 0.0082, 0.0464],
         [0.8161, 0.0086, 0.0083,  ..., 0.0162, 0.0082, 0.8522],
         [0.0658, 0.9743, 0.0083,  ..., 0.0278, 0.9754, 0.0549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9882, 0.0225, 0.0552,  ..., 0.9598, 0.9785, 0.0232],
         [0.0039, 0.0225, 0.0552,  ..., 0.0122, 0.0066, 0.0232],
         [0.0039, 0.0225, 0.0578,  ..., 0.0159, 0.0083, 0.0232],
         [0.0039, 0.9325, 0.8318,  ..., 0.0122, 0.0066, 0.9304]],
        [[0.8449, 0.0424, 0.0389,  ..., 0.0651, 0.0171, 0.0043],
         [0.0372, 0.0424, 0.0389,  ..., 0.0651, 0.0171, 0.0043],
         [0.0807, 0.0555, 0.0501,  ..., 0.1001, 0.9486, 0.9870],
         [0.0372, 0.8597, 0.8721,  ..., 0.7698, 0.0171, 0.0043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:32,360 [Process: 0] Synchronize training processes
2024-08-19 13:23:32,360 [Process: 0] Evaluating...
2024-08-19 13:23:32,362 [Process: 0] EPOCH 110:
2024-08-19 13:23:32,364 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:33,403 [Process: 0] Synchronize training processes
2024-08-19 13:23:33,403 [Process: 0] Evaluating...
2024-08-19 13:23:33,405 [Process: 0] EPOCH 111:
2024-08-19 13:23:33,406 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0592, 0.0147, 0.9607,  ..., 0.9910, 0.0280, 0.0145],
         [0.0499, 0.0103, 0.0155,  ..., 0.0030, 0.0280, 0.0145],
         [0.8190, 0.0103, 0.0119,  ..., 0.0030, 0.9136, 0.9566],
         [0.0719, 0.9647, 0.0119,  ..., 0.0030, 0.0304, 0.0145]],
        [[0.0549, 0.0019, 0.9904,  ..., 0.9747, 0.0046, 0.0166],
         [0.0478, 0.0019, 0.0032,  ..., 0.0075, 0.0046, 0.0166],
         [0.8390, 0.0019, 0.0032,  ..., 0.0075, 0.0046, 0.9503],
         [0.0583, 0.9942, 0.0032,  ..., 0.0104, 0.9863, 0.0166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9841, 0.0328, 0.0453,  ..., 0.9783, 0.9921, 0.0326],
         [0.0053, 0.0328, 0.0453,  ..., 0.0072, 0.0030, 0.0326],
         [0.0053, 0.0328, 0.0531,  ..., 0.0073, 0.0025, 0.0326],
         [0.0053, 0.9016, 0.8563,  ..., 0.0072, 0.0025, 0.9023]],
        [[0.9530, 0.0146, 0.0173,  ..., 0.0262, 0.0332, 0.0030],
         [0.0126, 0.0146, 0.0173,  ..., 0.0262, 0.0332, 0.0030],
         [0.0218, 0.0146, 0.0173,  ..., 0.0262, 0.9003, 0.9911],
         [0.0126, 0.9561, 0.9481,  ..., 0.9214, 0.0332, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0286, 0.0345, 0.9756,  ..., 0.9963, 0.0341, 0.0479],
         [0.0286, 0.0155, 0.0086,  ..., 0.0012, 0.0341, 0.0479],
         [0.9106, 0.0155, 0.0079,  ..., 0.0012, 0.8976, 0.8344],
         [0.0322, 0.9346, 0.0079,  ..., 0.0012, 0.0341, 0.0697]],
        [[0.0539, 0.0033, 0.9690,  ..., 0.9423, 0.0032, 0.0140],
         [0.0539, 0.0033, 0.0118,  ..., 0.0164, 0.0030, 0.0140],
         [0.8171, 0.0033, 0.0096,  ..., 0.0164, 0.0030, 0.9581],
         [0.0751, 0.9901, 0.0096,  ..., 0.0250, 0.9907, 0.0140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9622, 0.0386, 0.0143,  ..., 0.9723, 0.9850, 0.0236],
         [0.0132, 0.0386, 0.0143,  ..., 0.0092, 0.0049, 0.0236],
         [0.0123, 0.0423, 0.0143,  ..., 0.0092, 0.0052, 0.0236],
         [0.0123, 0.8805, 0.9572,  ..., 0.0092, 0.0049, 0.9293]],
        [[0.9904, 0.0050, 0.0120,  ..., 0.0175, 0.0119, 0.0032],
         [0.0032, 0.0050, 0.0120,  ..., 0.0175, 0.0130, 0.0032],
         [0.0033, 0.0050, 0.0120,  ..., 0.0175, 0.9633, 0.9903],
         [0.0032, 0.9850, 0.9641,  ..., 0.9476, 0.0119, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:34,444 [Process: 0] Synchronize training processes
2024-08-19 13:23:34,445 [Process: 0] Evaluating...
2024-08-19 13:23:35,406 [Process: 0] EPOCH 112:
2024-08-19 13:23:35,411 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0596, 0.0087, 0.9698,  ..., 0.9961, 0.0361, 0.0303],
         [0.0501, 0.0066, 0.0098,  ..., 0.0013, 0.0361, 0.0303],
         [0.8278, 0.0066, 0.0098,  ..., 0.0013, 0.8863, 0.9089],
         [0.0624, 0.9781, 0.0105,  ..., 0.0013, 0.0414, 0.0305]],
        [[0.0199, 0.0025, 0.9939,  ..., 0.9664, 0.0049, 0.0151],
         [0.0199, 0.0025, 0.0020,  ..., 0.0101, 0.0049, 0.0151],
         [0.9403, 0.0025, 0.0020,  ..., 0.0101, 0.0049, 0.9547],
         [0.0199, 0.9926, 0.0020,  ..., 0.0133, 0.9853, 0.0151]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9637, 0.0314, 0.0130,  ..., 0.9908, 0.9549, 0.0296],
         [0.0121, 0.0314, 0.0130,  ..., 0.0031, 0.0150, 0.0296],
         [0.0121, 0.0314, 0.0130,  ..., 0.0031, 0.0150, 0.0296],
         [0.0121, 0.9058, 0.9609,  ..., 0.0031, 0.0150, 0.9111]],
        [[0.9899, 0.0493, 0.0117,  ..., 0.0382, 0.0433, 0.0080],
         [0.0034, 0.0493, 0.0117,  ..., 0.0382, 0.0433, 0.0080],
         [0.0034, 0.0617, 0.0117,  ..., 0.0408, 0.8683, 0.9760],
         [0.0034, 0.8397, 0.9650,  ..., 0.8828, 0.0452, 0.0080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:36,415 [Process: 0] Synchronize training processes
2024-08-19 13:23:36,415 [Process: 0] Evaluating...
2024-08-19 13:23:36,417 [Process: 0] EPOCH 113:
2024-08-19 13:23:36,419 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:37,459 [Process: 0] Synchronize training processes
2024-08-19 13:23:37,460 [Process: 0] Evaluating...
2024-08-19 13:23:37,461 [Process: 0] EPOCH 114:
2024-08-19 13:23:37,463 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1838e-02, 4.8418e-03, 9.8419e-01,  ..., 9.9514e-01,
          1.9208e-02, 2.4436e-02],
         [3.1294e-02, 4.8418e-03, 5.2685e-03,  ..., 1.6188e-03,
          1.9208e-02, 2.4436e-02],
         [9.0232e-01, 4.8418e-03, 5.2685e-03,  ..., 1.6188e-03,
          9.4238e-01, 9.2669e-01],
         [3.4549e-02, 9.8547e-01, 5.2685e-03,  ..., 1.6188e-03,
          1.9208e-02, 2.4436e-02]],
        [[1.3656e-02, 6.7541e-04, 9.6538e-01,  ..., 9.7181e-01,
          4.9850e-03, 3.0323e-02],
         [1.3656e-02, 6.7541e-04, 1.0934e-02,  ..., 7.7910e-03,
          4.9850e-03, 3.0323e-02],
         [9.5903e-01, 6.7541e-04, 1.0934e-02,  ..., 7.7910e-03,
          4.9850e-03, 9.0903e-01],
         [1.3656e-02, 9.9797e-01, 1.2750e-02,  ..., 1.2609e-02,
          9.8505e-01, 3.0323e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9759, 0.0233, 0.0179,  ..., 0.9788, 0.9675, 0.0098],
         [0.0080, 0.0233, 0.0179,  ..., 0.0085, 0.0108, 0.0098],
         [0.0080, 0.0233, 0.0179,  ..., 0.0063, 0.0108, 0.0098],
         [0.0080, 0.9302, 0.9463,  ..., 0.0063, 0.0108, 0.9705]],
        [[0.9480, 0.0252, 0.0276,  ..., 0.0251, 0.0135, 0.0041],
         [0.0159, 0.0252, 0.0276,  ..., 0.0251, 0.0135, 0.0041],
         [0.0202, 0.0252, 0.0276,  ..., 0.0251, 0.9596, 0.9878],
         [0.0159, 0.9244, 0.9171,  ..., 0.9247, 0.0135, 0.0041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0295, 0.1318, 0.9957,  ..., 0.9608, 0.0202, 0.0326],
         [0.0271, 0.0367, 0.0014,  ..., 0.0126, 0.0202, 0.0303],
         [0.9164, 0.0367, 0.0014,  ..., 0.0126, 0.9395, 0.9014],
         [0.0271, 0.7949, 0.0014,  ..., 0.0141, 0.0202, 0.0357]],
        [[0.0497, 0.0074, 0.9802,  ..., 0.9646, 0.0017, 0.0174],
         [0.0448, 0.0074, 0.0065,  ..., 0.0090, 0.0017, 0.0174],
         [0.8536, 0.0074, 0.0065,  ..., 0.0090, 0.0017, 0.9477],
         [0.0519, 0.9777, 0.0068,  ..., 0.0174, 0.9950, 0.0174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9855, 0.0138, 0.0383,  ..., 0.9779, 0.9743, 0.0387],
         [0.0048, 0.0138, 0.0383,  ..., 0.0074, 0.0086, 0.0317],
         [0.0048, 0.0138, 0.0383,  ..., 0.0074, 0.0086, 0.0359],
         [0.0048, 0.9585, 0.8850,  ..., 0.0074, 0.0086, 0.8937]],
        [[0.8778, 0.0315, 0.0232,  ..., 0.0230, 0.0301, 0.0145],
         [0.0307, 0.0315, 0.0232,  ..., 0.0230, 0.0301, 0.0145],
         [0.0608, 0.0337, 0.0232,  ..., 0.0230, 0.9097, 0.9566],
         [0.0307, 0.9032, 0.9305,  ..., 0.9311, 0.0301, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:38,505 [Process: 0] Synchronize training processes
2024-08-19 13:23:38,505 [Process: 0] Evaluating...
2024-08-19 13:23:38,507 [Process: 0] EPOCH 115:
2024-08-19 13:23:38,509 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:39,547 [Process: 0] Synchronize training processes
2024-08-19 13:23:39,547 [Process: 0] Evaluating...
2024-08-19 13:23:39,549 [Process: 0] EPOCH 116:
2024-08-19 13:23:39,551 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0156, 0.3273, 0.9900,  ..., 0.9899, 0.0136, 0.0378],
         [0.0155, 0.0634, 0.0033,  ..., 0.0034, 0.0136, 0.0353],
         [0.9533, 0.0634, 0.0033,  ..., 0.0034, 0.9592, 0.8874],
         [0.0155, 0.5459, 0.0033,  ..., 0.0034, 0.0136, 0.0395]],
        [[0.0098, 0.0020, 0.9911,  ..., 0.9686, 0.0018, 0.0334],
         [0.0098, 0.0020, 0.0030,  ..., 0.0105, 0.0018, 0.0334],
         [0.9707, 0.0020, 0.0030,  ..., 0.0105, 0.0018, 0.8999],
         [0.0098, 0.9939, 0.0030,  ..., 0.0105, 0.9947, 0.0334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9913, 0.0162, 0.0492,  ..., 0.9818, 0.8689, 0.0307],
         [0.0029, 0.0162, 0.0414,  ..., 0.0061, 0.0417, 0.0297],
         [0.0029, 0.0162, 0.0414,  ..., 0.0061, 0.0477, 0.0300],
         [0.0029, 0.9513, 0.8681,  ..., 0.0061, 0.0417, 0.9096]],
        [[0.2575, 0.0248, 0.0621,  ..., 0.0304, 0.0225, 0.0066],
         [0.0764, 0.0248, 0.0589,  ..., 0.0304, 0.0225, 0.0066],
         [0.5897, 0.0248, 0.0793,  ..., 0.0304, 0.9326, 0.9802],
         [0.0764, 0.9256, 0.7997,  ..., 0.9089, 0.0225, 0.0066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6442e-02, 6.8779e-03, 9.8788e-01,  ..., 9.9652e-01,
          1.6397e-02, 4.5912e-02],
         [1.6331e-02, 7.0251e-03, 4.0405e-03,  ..., 1.1611e-03,
          1.6397e-02, 4.1391e-02],
         [9.5090e-01, 6.8779e-03, 4.0405e-03,  ..., 1.1611e-03,
          9.5081e-01, 8.6746e-01],
         [1.6331e-02, 9.7922e-01, 4.0405e-03,  ..., 1.1611e-03,
          1.6397e-02, 4.5239e-02]],
        [[1.8857e-02, 9.9218e-04, 9.7747e-01,  ..., 8.7117e-01,
          1.8925e-02, 1.9905e-02],
         [1.8024e-02, 9.9218e-04, 6.1994e-03,  ..., 3.4504e-02,
          1.8925e-02, 1.9905e-02],
         [9.4509e-01, 9.9218e-04, 6.1994e-03,  ..., 3.4504e-02,
          1.8925e-02, 9.4029e-01],
         [1.8024e-02, 9.9702e-01, 1.0127e-02,  ..., 5.9827e-02,
          9.4323e-01, 1.9905e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9916, 0.0152, 0.0188,  ..., 0.9026, 0.8313, 0.0311],
         [0.0028, 0.0152, 0.0188,  ..., 0.0287, 0.0463, 0.0311],
         [0.0028, 0.0152, 0.0188,  ..., 0.0399, 0.0761, 0.0311],
         [0.0028, 0.9544, 0.9437,  ..., 0.0287, 0.0463, 0.9067]],
        [[0.3309, 0.0102, 0.0177,  ..., 0.0442, 0.0203, 0.0094],
         [0.1184, 0.0102, 0.0177,  ..., 0.0442, 0.0203, 0.0094],
         [0.4212, 0.0102, 0.0177,  ..., 0.0468, 0.9390, 0.9719],
         [0.1295, 0.9695, 0.9469,  ..., 0.8647, 0.0203, 0.0094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:40,591 [Process: 0] Synchronize training processes
2024-08-19 13:23:40,592 [Process: 0] Evaluating...
2024-08-19 13:23:40,594 [Process: 0] EPOCH 117:
2024-08-19 13:23:40,596 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4715e-02, 3.5333e-03, 9.8910e-01,  ..., 9.7925e-01,
          1.8534e-02, 2.0844e-02],
         [2.4715e-02, 3.5333e-03, 3.6321e-03,  ..., 6.2597e-03,
          1.8534e-02, 2.0844e-02],
         [9.2586e-01, 3.5333e-03, 3.6321e-03,  ..., 6.2597e-03,
          9.4440e-01, 9.3747e-01],
         [2.4715e-02, 9.8940e-01, 3.6321e-03,  ..., 8.2288e-03,
          1.8534e-02, 2.0844e-02]],
        [[1.9932e-02, 3.6549e-03, 9.8442e-01,  ..., 8.7900e-01,
          2.1597e-04, 1.2206e-02],
         [1.9683e-02, 3.6549e-03, 5.1922e-03,  ..., 2.3736e-02,
          2.1597e-04, 1.2206e-02],
         [9.4070e-01, 3.6549e-03, 5.1922e-03,  ..., 2.3736e-02,
          2.1597e-04, 9.6338e-01],
         [1.9683e-02, 9.8904e-01, 5.1922e-03,  ..., 7.3528e-02,
          9.9935e-01, 1.2206e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9562, 0.0158, 0.0175,  ..., 0.9797, 0.5337, 0.0198],
         [0.0136, 0.0158, 0.0175,  ..., 0.0068, 0.1027, 0.0198],
         [0.0166, 0.0158, 0.0175,  ..., 0.0068, 0.1942, 0.0198],
         [0.0136, 0.9526, 0.9475,  ..., 0.0068, 0.1694, 0.9406]],
        [[0.8350, 0.0094, 0.0143,  ..., 0.0208, 0.0127, 0.0052],
         [0.0423, 0.0094, 0.0143,  ..., 0.0208, 0.0127, 0.0052],
         [0.0719, 0.0094, 0.0143,  ..., 0.0208, 0.9619, 0.9844],
         [0.0508, 0.9717, 0.9571,  ..., 0.9376, 0.0127, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5418e-02, 4.5349e-03, 9.9945e-01,  ..., 9.7860e-01,
          1.4336e-02, 2.9981e-02],
         [1.5418e-02, 3.7449e-03, 1.8216e-04,  ..., 7.1028e-03,
          1.4336e-02, 2.9981e-02],
         [9.5375e-01, 3.7449e-03, 1.8216e-04,  ..., 7.1028e-03,
          9.5699e-01, 9.1006e-01],
         [1.5418e-02, 9.8798e-01, 1.8216e-04,  ..., 7.1989e-03,
          1.4336e-02, 2.9981e-02]],
        [[3.2314e-02, 4.2582e-03, 9.9337e-01,  ..., 9.4356e-01,
          4.1217e-03, 2.6944e-02],
         [2.8937e-02, 3.3067e-03, 2.1067e-03,  ..., 1.5837e-02,
          4.1217e-03, 2.6944e-02],
         [9.0981e-01, 3.3067e-03, 2.1067e-03,  ..., 1.5837e-02,
          4.1217e-03, 9.1917e-01],
         [2.8937e-02, 9.8913e-01, 2.4149e-03,  ..., 2.4765e-02,
          9.8763e-01, 2.6944e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9496, 0.0236, 0.0156,  ..., 0.9891, 0.9549, 0.0300],
         [0.0164, 0.0236, 0.0156,  ..., 0.0036, 0.0141, 0.0329],
         [0.0175, 0.0236, 0.0156,  ..., 0.0036, 0.0170, 0.0300],
         [0.0164, 0.9292, 0.9531,  ..., 0.0036, 0.0141, 0.9071]],
        [[0.9154, 0.0399, 0.0423,  ..., 0.0192, 0.0091, 0.0022],
         [0.0259, 0.0296, 0.0423,  ..., 0.0192, 0.0091, 0.0022],
         [0.0329, 0.0296, 0.0501,  ..., 0.0192, 0.9728, 0.9935],
         [0.0259, 0.9008, 0.8652,  ..., 0.9424, 0.0091, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:23:41,633 [Process: 0] Synchronize training processes
2024-08-19 13:23:41,634 [Process: 0] Evaluating...
2024-08-19 13:23:41,635 [Process: 0] EPOCH 118:
2024-08-19 13:23:41,637 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:42,681 [Process: 0] Synchronize training processes
2024-08-19 13:23:42,681 [Process: 0] Evaluating...
2024-08-19 13:23:42,683 [Process: 0] EPOCH 119:
2024-08-19 13:23:42,685 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1540e-02, 1.7161e-03, 9.9719e-01,  ..., 9.8339e-01,
          3.7765e-02, 3.9932e-02],
         [3.1540e-02, 1.3412e-03, 9.3702e-04,  ..., 5.5373e-03,
          3.7765e-02, 3.9932e-02],
         [9.0538e-01, 1.3412e-03, 9.3702e-04,  ..., 5.5373e-03,
          8.8227e-01, 8.8020e-01],
         [3.1540e-02, 9.9560e-01, 9.3702e-04,  ..., 5.5373e-03,
          4.2203e-02, 3.9932e-02]],
        [[1.3329e-02, 4.2627e-03, 9.8314e-01,  ..., 9.8149e-01,
          6.7481e-04, 2.8812e-02],
         [1.3329e-02, 4.2627e-03, 5.5078e-03,  ..., 5.0915e-03,
          6.7481e-04, 2.8812e-02],
         [9.6001e-01, 4.2627e-03, 5.5078e-03,  ..., 5.0915e-03,
          6.7481e-04, 9.1356e-01],
         [1.3329e-02, 9.8721e-01, 5.8450e-03,  ..., 8.3277e-03,
          9.9798e-01, 2.8812e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9307, 0.0157, 0.0336,  ..., 0.9764, 0.9375, 0.0202],
         [0.0228, 0.0157, 0.0336,  ..., 0.0079, 0.0199, 0.0202],
         [0.0238, 0.0157, 0.0336,  ..., 0.0079, 0.0226, 0.9394],
         [0.0228, 0.9530, 0.8991,  ..., 0.0079, 0.0199, 0.0202]],
        [[0.9256, 0.0128, 0.0352,  ..., 0.0119, 0.0206, 0.0176],
         [0.0224, 0.0128, 0.0254,  ..., 0.0106, 0.0206, 0.0106],
         [0.0295, 0.0128, 0.0254,  ..., 0.0106, 0.9382, 0.0106],
         [0.0224, 0.9616, 0.9139,  ..., 0.9668, 0.0206, 0.9611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4139e-02, 2.7624e-03, 9.8502e-01,  ..., 9.9811e-01,
          3.3338e-02, 3.6469e-02],
         [4.1446e-02, 2.7624e-03, 4.9922e-03,  ..., 6.2966e-04,
          3.3338e-02, 3.6469e-02],
         [8.6728e-01, 2.7624e-03, 4.9922e-03,  ..., 6.2966e-04,
          8.9999e-01, 8.8939e-01],
         [4.7137e-02, 9.9171e-01, 4.9922e-03,  ..., 6.2966e-04,
          3.3338e-02, 3.7678e-02]],
        [[1.6656e-02, 4.0653e-02, 9.8383e-01,  ..., 9.8697e-01,
          2.0244e-04, 2.1595e-02],
         [1.6656e-02, 4.0653e-02, 5.2181e-03,  ..., 2.3941e-03,
          2.0244e-04, 2.1595e-02],
         [9.5003e-01, 8.7804e-01, 5.2181e-03,  ..., 2.3941e-03,
          2.0244e-04, 9.3521e-01],
         [1.6656e-02, 4.0653e-02, 5.7359e-03,  ..., 8.2406e-03,
          9.9939e-01, 2.1595e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:23:43,722 [Process: 0] Synchronize training processes
2024-08-19 13:23:43,723 [Process: 0] Evaluating...
2024-08-19 13:23:43,725 [Process: 0] EPOCH 120:
2024-08-19 13:23:43,726 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:44,764 [Process: 0] Synchronize training processes
2024-08-19 13:23:44,765 [Process: 0] Evaluating...
2024-08-19 13:23:44,767 [Process: 0] EPOCH 121:
2024-08-19 13:23:44,768 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9098, 0.0313, 0.0253,  ..., 0.9783, 0.9786, 0.0114],
         [0.0266, 0.0228, 0.0253,  ..., 0.0078, 0.0071, 0.0114],
         [0.0369, 0.0228, 0.0253,  ..., 0.0070, 0.0071, 0.9658],
         [0.0266, 0.9231, 0.9241,  ..., 0.0070, 0.0071, 0.0114]],
        [[0.9564, 0.0138, 0.0335,  ..., 0.0093, 0.0260, 0.0023],
         [0.0139, 0.0138, 0.0317,  ..., 0.0093, 0.0260, 0.0019],
         [0.0158, 0.0138, 0.0325,  ..., 0.0093, 0.9219, 0.0019],
         [0.0139, 0.9586, 0.9023,  ..., 0.9721, 0.0260, 0.9940]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0244, 0.0075, 0.9915,  ..., 0.9484, 0.0134, 0.0146],
         [0.0244, 0.0075, 0.0028,  ..., 0.0117, 0.0134, 0.0146],
         [0.9267, 0.0075, 0.0028,  ..., 0.0117, 0.9598, 0.9561],
         [0.0244, 0.9774, 0.0028,  ..., 0.0281, 0.0134, 0.0146]],
        [[0.0090, 0.1259, 0.9893,  ..., 0.9702, 0.0020, 0.0200],
         [0.0090, 0.0982, 0.0036,  ..., 0.0099, 0.0020, 0.0200],
         [0.9731, 0.3768, 0.0036,  ..., 0.0099, 0.0020, 0.9399],
         [0.0090, 0.3991, 0.0036,  ..., 0.0099, 0.9939, 0.0200]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9853, 0.0201, 0.0261,  ..., 0.9678, 0.9726, 0.0704],
         [0.0049, 0.0160, 0.0284,  ..., 0.0107, 0.0091, 0.0633],
         [0.0049, 0.0160, 0.0261,  ..., 0.0107, 0.0091, 0.7760],
         [0.0049, 0.9479, 0.9194,  ..., 0.0107, 0.0091, 0.0902]],
        [[0.4384, 0.0294, 0.0069,  ..., 0.0119, 0.0069, 0.0450],
         [0.0999, 0.0258, 0.0069,  ..., 0.0092, 0.0069, 0.0450],
         [0.2540, 0.0269, 0.0069,  ..., 0.0092, 0.9792, 0.8513],
         [0.2076, 0.9178, 0.9794,  ..., 0.9697, 0.0069, 0.0588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7946e-01, 3.4674e-02, 8.8961e-01,  ..., 9.9718e-01,
          1.4106e-02, 1.4427e-02],
         [3.1695e-03, 3.0406e-02, 1.7484e-02,  ..., 8.7358e-04,
          1.4106e-02, 1.4427e-02],
         [3.1695e-03, 4.7659e-02, 1.7484e-02,  ..., 8.7358e-04,
          9.5768e-01, 9.5672e-01],
         [1.4201e-02, 8.8726e-01, 7.5418e-02,  ..., 1.0729e-03,
          1.4106e-02, 1.4427e-02]],
        [[8.2843e-05, 5.0873e-04, 9.8831e-01,  ..., 9.7247e-01,
          3.7002e-04, 7.0631e-03],
         [8.2843e-05, 5.0873e-04, 3.1698e-03,  ..., 5.6357e-03,
          3.7002e-04, 7.0631e-03],
         [9.9975e-01, 5.0873e-04, 3.1698e-03,  ..., 5.6357e-03,
          3.7002e-04, 9.7881e-01],
         [8.2843e-05, 9.9847e-01, 5.3534e-03,  ..., 1.6254e-02,
          9.9889e-01, 7.0631e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:23:45,807 [Process: 0] Synchronize training processes
2024-08-19 13:23:45,808 [Process: 0] Evaluating...
2024-08-19 13:23:46,773 [Process: 0] EPOCH 122:
2024-08-19 13:23:46,778 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9872, 0.0096, 0.0083,  ..., 0.9615, 0.9407, 0.1589],
         [0.0043, 0.0096, 0.0085,  ..., 0.0128, 0.0176, 0.1038],
         [0.0043, 0.0096, 0.0083,  ..., 0.0128, 0.0176, 0.4352],
         [0.0043, 0.9712, 0.9750,  ..., 0.0128, 0.0242, 0.3021]],
        [[0.3065, 0.0436, 0.0435,  ..., 0.0900, 0.0071, 0.0044],
         [0.1450, 0.0427, 0.0304,  ..., 0.0662, 0.0071, 0.0044],
         [0.3052, 0.0644, 0.0415,  ..., 0.1811, 0.9787, 0.9867],
         [0.2433, 0.8493, 0.8845,  ..., 0.6627, 0.0071, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7923e-01, 1.5247e-02, 7.9076e-01,  ..., 9.9901e-01,
          6.8302e-03, 7.7428e-03],
         [4.4619e-03, 1.5247e-02, 2.3320e-02,  ..., 2.5989e-04,
          6.8302e-03, 7.7428e-03],
         [4.4619e-03, 1.8375e-02, 2.3320e-02,  ..., 2.5989e-04,
          9.7951e-01, 9.7677e-01],
         [1.1849e-02, 9.5113e-01, 1.6260e-01,  ..., 4.7416e-04,
          6.8302e-03, 7.7428e-03]],
        [[7.4677e-05, 1.0019e-02, 9.7872e-01,  ..., 9.3364e-01,
          8.1858e-04, 3.9466e-03],
         [7.4677e-05, 1.0019e-02, 5.5474e-03,  ..., 1.0808e-02,
          8.1858e-04, 3.9466e-03],
         [9.9978e-01, 1.0019e-02, 5.5474e-03,  ..., 1.0808e-02,
          8.1858e-04, 9.8816e-01],
         [7.4677e-05, 9.6994e-01, 1.0189e-02,  ..., 4.4745e-02,
          9.9754e-01, 3.9466e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:23:47,780 [Process: 0] Synchronize training processes
2024-08-19 13:23:47,780 [Process: 0] Evaluating...
2024-08-19 13:23:47,782 [Process: 0] EPOCH 123:
2024-08-19 13:23:47,784 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:48,822 [Process: 0] Synchronize training processes
2024-08-19 13:23:48,822 [Process: 0] Evaluating...
2024-08-19 13:23:48,824 [Process: 0] EPOCH 124:
2024-08-19 13:23:48,825 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8747, 0.0196, 0.0194,  ..., 0.8687, 0.9211, 0.1497],
         [0.0378, 0.0171, 0.0190,  ..., 0.0356, 0.0246, 0.0946],
         [0.0386, 0.0249, 0.0238,  ..., 0.0426, 0.0283, 0.2824],
         [0.0490, 0.9383, 0.9378,  ..., 0.0531, 0.0260, 0.4733]],
        [[0.1897, 0.0535, 0.0173,  ..., 0.0220, 0.0114, 0.1330],
         [0.1636, 0.0437, 0.0173,  ..., 0.0215, 0.0114, 0.0946],
         [0.3208, 0.0603, 0.0173,  ..., 0.0351, 0.9657, 0.5694],
         [0.3259, 0.8425, 0.9481,  ..., 0.9214, 0.0114, 0.2030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7559e-01, 2.0090e-02, 9.9093e-01,  ..., 9.8405e-01,
          8.3767e-03, 4.9879e-03],
         [6.8689e-03, 9.2649e-01, 2.6276e-03,  ..., 3.6762e-03,
          8.3767e-03, 4.9879e-03],
         [6.8689e-03, 2.0090e-02, 2.6276e-03,  ..., 3.6762e-03,
          9.7487e-01, 9.8504e-01],
         [1.0669e-02, 3.3334e-02, 3.8161e-03,  ..., 8.6001e-03,
          8.3767e-03, 4.9879e-03]],
        [[9.7091e-07, 1.9075e-03, 9.9192e-01,  ..., 9.6514e-01,
          6.1449e-03, 2.7079e-03],
         [9.7091e-07, 1.9075e-03, 1.8526e-03,  ..., 9.2438e-03,
          4.8915e-03, 2.7079e-03],
         [1.0000e+00, 1.9075e-03, 1.8526e-03,  ..., 9.2438e-03,
          4.8915e-03, 9.9188e-01],
         [9.7091e-07, 9.9428e-01, 4.3756e-03,  ..., 1.6375e-02,
          9.8407e-01, 2.7079e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9214e-01, 2.4846e-02, 3.0079e-02,  ..., 9.8009e-01,
          9.6956e-01, 5.5453e-02],
         [2.6190e-03, 1.8428e-02, 1.9495e-02,  ..., 6.6368e-03,
          1.0148e-02, 3.5538e-02],
         [2.6190e-03, 1.8428e-02, 2.0485e-02,  ..., 6.6368e-03,
          1.0148e-02, 4.7320e-02],
         [2.6190e-03, 9.3830e-01, 9.2994e-01,  ..., 6.6368e-03,
          1.0148e-02, 8.6169e-01]],
        [[2.2566e-01, 5.7473e-03, 1.7627e-02,  ..., 2.7407e-02,
          4.2629e-04, 1.1036e-02],
         [1.3416e-01, 5.7473e-03, 1.7627e-02,  ..., 2.7407e-02,
          4.2629e-04, 1.1036e-02],
         [2.5827e-01, 5.8458e-03, 1.7627e-02,  ..., 2.9263e-02,
          9.9872e-01, 9.6689e-01],
         [3.8191e-01, 9.8266e-01, 9.4712e-01,  ..., 9.1592e-01,
          4.2629e-04, 1.1036e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2002e-01, 1.6888e-02, 9.7339e-01,  ..., 9.9689e-01,
          6.1057e-03, 6.2939e-03],
         [5.8891e-02, 9.4854e-01, 7.2708e-03,  ..., 1.0356e-03,
          6.1057e-03, 6.2939e-03],
         [5.4508e-02, 1.6888e-02, 7.2708e-03,  ..., 1.0356e-03,
          9.8168e-01, 9.8112e-01],
         [1.6658e-01, 1.7686e-02, 1.2068e-02,  ..., 1.0356e-03,
          6.1057e-03, 6.2939e-03]],
        [[3.3687e-06, 4.1154e-03, 9.9612e-01,  ..., 9.9674e-01,
          1.2536e-03, 6.4113e-04],
         [3.3687e-06, 4.1154e-03, 1.2949e-03,  ..., 1.0873e-03,
          1.2536e-03, 6.4113e-04],
         [9.9999e-01, 4.1154e-03, 1.2949e-03,  ..., 1.0873e-03,
          1.2536e-03, 9.9808e-01],
         [3.3687e-06, 9.8765e-01, 1.2949e-03,  ..., 1.0873e-03,
          9.9624e-01, 6.4113e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:49,862 [Process: 0] Synchronize training processes
2024-08-19 13:23:49,862 [Process: 0] Evaluating...
2024-08-19 13:23:49,864 [Process: 0] EPOCH 125:
2024-08-19 13:23:49,866 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:50,905 [Process: 0] Synchronize training processes
2024-08-19 13:23:50,905 [Process: 0] Evaluating...
2024-08-19 13:23:50,907 [Process: 0] EPOCH 126:
2024-08-19 13:23:50,908 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9547e-01, 4.7620e-02, 1.6534e-02,  ..., 9.8677e-01,
          9.5247e-01, 2.7526e-02],
         [1.5095e-03, 2.4172e-02, 1.6359e-02,  ..., 5.5258e-03,
          1.5607e-02, 2.4914e-02],
         [1.5095e-03, 2.4172e-02, 1.5345e-02,  ..., 3.8520e-03,
          1.6311e-02, 2.8382e-02],
         [1.5095e-03, 9.0404e-01, 9.5176e-01,  ..., 3.8520e-03,
          1.5607e-02, 9.1918e-01]],
        [[2.7862e-01, 2.5334e-02, 4.1615e-02,  ..., 1.7971e-02,
          6.7442e-04, 6.4938e-02],
         [1.1107e-01, 2.5334e-02, 3.1257e-02,  ..., 1.7971e-02,
          6.7442e-04, 6.4938e-02],
         [3.5666e-01, 3.0916e-02, 3.1257e-02,  ..., 1.7971e-02,
          9.9798e-01, 7.1870e-01],
         [2.5366e-01, 9.1842e-01, 8.9587e-01,  ..., 9.4609e-01,
          6.7442e-04, 1.5142e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4754e-01, 1.5641e-01, 9.9912e-01,  ..., 9.8959e-01,
          1.3690e-02, 1.0258e-02],
         [1.4408e-02, 5.3613e-01, 2.9300e-04,  ..., 3.4689e-03,
          1.3690e-02, 1.0258e-02],
         [1.4408e-02, 1.2309e-01, 2.9300e-04,  ..., 3.4689e-03,
          9.5893e-01, 9.6923e-01],
         [2.3642e-02, 1.8437e-01, 2.9300e-04,  ..., 3.4689e-03,
          1.3690e-02, 1.0258e-02]],
        [[2.7594e-06, 1.2277e-03, 9.9255e-01,  ..., 9.9488e-01,
          3.1091e-04, 7.5039e-04],
         [2.7594e-06, 1.2277e-03, 2.2932e-03,  ..., 1.7052e-03,
          3.1091e-04, 7.5039e-04],
         [9.9999e-01, 1.2277e-03, 2.2932e-03,  ..., 1.7052e-03,
          3.1091e-04, 9.9775e-01],
         [2.7594e-06, 9.9632e-01, 2.8587e-03,  ..., 1.7052e-03,
          9.9907e-01, 7.5039e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8057e-01, 1.4805e-02, 2.1508e-02,  ..., 9.4212e-01,
          9.9815e-01, 9.2314e-02],
         [1.2188e-02, 1.1876e-02, 1.8860e-02,  ..., 2.0107e-02,
          6.1707e-04, 6.4649e-02],
         [3.6222e-03, 1.1876e-02, 1.8860e-02,  ..., 1.8884e-02,
          6.1707e-04, 1.0661e-01],
         [3.6222e-03, 9.6144e-01, 9.4077e-01,  ..., 1.8884e-02,
          6.1707e-04, 7.3643e-01]],
        [[2.1014e-01, 2.5265e-02, 1.8687e-02,  ..., 7.4138e-02,
          1.0632e-02, 2.7492e-02],
         [1.0978e-01, 2.0328e-02, 2.1762e-02,  ..., 5.1341e-02,
          1.0632e-02, 3.6832e-02],
         [4.5980e-01, 2.0328e-02, 1.8687e-02,  ..., 1.0846e-01,
          9.6327e-01, 9.0496e-01],
         [2.2027e-01, 9.3408e-01, 9.4086e-01,  ..., 7.6606e-01,
          1.5468e-02, 3.0721e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.4463e-01, 5.7534e-01, 9.9642e-01,  ..., 9.9084e-01,
          1.2930e-02, 1.8275e-02],
         [2.2344e-02, 5.6863e-02, 1.1940e-03,  ..., 3.6431e-03,
          1.2930e-02, 1.8275e-02],
         [1.2014e-02, 5.6863e-02, 1.1940e-03,  ..., 2.7602e-03,
          9.6121e-01, 9.4518e-01],
         [2.1012e-02, 3.1093e-01, 1.1940e-03,  ..., 2.7602e-03,
          1.2930e-02, 1.8275e-02]],
        [[7.2032e-04, 4.5908e-04, 9.8985e-01,  ..., 9.4082e-01,
          2.5023e-03, 2.1759e-02],
         [4.1255e-04, 4.5908e-04, 3.3842e-03,  ..., 1.2525e-02,
          2.0882e-03, 1.3954e-02],
         [9.9845e-01, 4.5908e-04, 3.3842e-03,  ..., 1.2525e-02,
          2.0882e-03, 9.5033e-01],
         [4.1255e-04, 9.9862e-01, 3.3842e-03,  ..., 3.4126e-02,
          9.9332e-01, 1.3954e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:51,944 [Process: 0] Synchronize training processes
2024-08-19 13:23:51,945 [Process: 0] Evaluating...
2024-08-19 13:23:51,946 [Process: 0] EPOCH 127:
2024-08-19 13:23:51,948 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:52,984 [Process: 0] Synchronize training processes
2024-08-19 13:23:52,985 [Process: 0] Evaluating...
2024-08-19 13:23:52,987 [Process: 0] EPOCH 128:
2024-08-19 13:23:52,988 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9953, 0.0085, 0.0165,  ..., 0.9739, 0.9883, 0.0304],
         [0.0018, 0.0085, 0.0165,  ..., 0.0087, 0.0047, 0.0248],
         [0.0015, 0.0085, 0.0165,  ..., 0.0087, 0.0035, 0.0248],
         [0.0015, 0.9745, 0.9505,  ..., 0.0087, 0.0035, 0.9201]],
        [[0.1712, 0.0074, 0.0176,  ..., 0.0220, 0.0230, 0.0075],
         [0.1392, 0.0074, 0.0167,  ..., 0.0188, 0.0230, 0.0177],
         [0.4664, 0.0074, 0.0167,  ..., 0.0218, 0.9151, 0.9673],
         [0.2232, 0.9779, 0.9489,  ..., 0.9375, 0.0390, 0.0075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7062e-01, 7.2250e-01, 9.8852e-01,  ..., 9.9624e-01,
          2.4415e-02, 1.3020e-02],
         [1.5689e-02, 6.4585e-02, 3.8260e-03,  ..., 1.5507e-03,
          2.4415e-02, 1.3020e-02],
         [6.8448e-03, 6.4585e-02, 3.8260e-03,  ..., 1.1044e-03,
          9.2502e-01, 9.6094e-01],
         [6.8448e-03, 1.4833e-01, 3.8260e-03,  ..., 1.1044e-03,
          2.6145e-02, 1.3020e-02]],
        [[1.7406e-03, 4.2473e-04, 9.9422e-01,  ..., 9.8380e-01,
          7.5956e-03, 6.0137e-03],
         [1.7406e-03, 4.2473e-04, 1.9276e-03,  ..., 4.9166e-03,
          8.5278e-03, 3.1176e-03],
         [9.9478e-01, 4.2473e-04, 1.9276e-03,  ..., 4.9166e-03,
          7.5956e-03, 9.8775e-01],
         [1.7406e-03, 9.9873e-01, 1.9276e-03,  ..., 6.3671e-03,
          9.7628e-01, 3.1176e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9041e-01, 3.0243e-02, 7.1069e-03,  ..., 8.8068e-01,
          9.9800e-01, 9.4123e-03],
         [3.1958e-03, 3.0606e-02, 7.1069e-03,  ..., 3.2828e-02,
          6.6813e-04, 9.4123e-03],
         [3.1958e-03, 3.0243e-02, 7.1069e-03,  ..., 5.3666e-02,
          6.6813e-04, 9.4123e-03],
         [3.1958e-03, 9.0891e-01, 9.7868e-01,  ..., 3.2828e-02,
          6.6813e-04, 9.7176e-01]],
        [[2.5484e-01, 1.1836e-02, 2.1258e-02,  ..., 1.7774e-02,
          4.0643e-02, 1.7344e-03],
         [2.6950e-01, 1.1836e-02, 2.1258e-02,  ..., 1.8412e-02,
          4.0643e-02, 1.9804e-03],
         [3.0771e-01, 1.1836e-02, 2.1258e-02,  ..., 1.7774e-02,
          7.0729e-01, 9.9455e-01],
         [1.6795e-01, 9.6449e-01, 9.3623e-01,  ..., 9.4604e-01,
          2.1142e-01, 1.7344e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7820e-01, 3.3445e-01, 9.4473e-01,  ..., 9.7131e-01,
          1.3856e-02, 3.4475e-02],
         [3.8307e-02, 1.0390e-01, 1.6097e-02,  ..., 9.5628e-03,
          1.3856e-02, 3.4475e-02],
         [3.8307e-02, 1.1809e-01, 1.6097e-02,  ..., 9.5628e-03,
          9.5843e-01, 8.7318e-01],
         [4.5187e-02, 4.4356e-01, 2.3077e-02,  ..., 9.5628e-03,
          1.3856e-02, 5.7867e-02]],
        [[1.2600e-01, 2.2186e-03, 9.9050e-01,  ..., 9.9606e-01,
          1.5353e-04, 2.1203e-02],
         [6.8254e-02, 2.2186e-03, 3.1661e-03,  ..., 1.3146e-03,
          1.5353e-04, 2.1034e-02],
         [5.5462e-01, 2.2186e-03, 3.1661e-03,  ..., 1.3146e-03,
          1.5353e-04, 9.2210e-01],
         [2.5113e-01, 9.9334e-01, 3.1661e-03,  ..., 1.3146e-03,
          9.9954e-01, 3.5668e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:54,026 [Process: 0] Synchronize training processes
2024-08-19 13:23:54,027 [Process: 0] Evaluating...
2024-08-19 13:23:54,029 [Process: 0] EPOCH 129:
2024-08-19 13:23:54,030 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:55,069 [Process: 0] Synchronize training processes
2024-08-19 13:23:55,070 [Process: 0] Evaluating...
2024-08-19 13:23:55,072 [Process: 0] EPOCH 130:
2024-08-19 13:23:55,073 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8786e-01, 1.0250e-02, 3.1901e-02,  ..., 9.7661e-01,
          9.9536e-01, 4.1398e-02],
         [4.0466e-03, 9.1093e-03, 3.1563e-02,  ..., 7.7976e-03,
          1.5481e-03, 3.4233e-02],
         [4.0466e-03, 9.1093e-03, 3.1563e-02,  ..., 7.7976e-03,
          1.5481e-03, 3.4981e-02],
         [4.0466e-03, 9.7153e-01, 9.0497e-01,  ..., 7.7976e-03,
          1.5481e-03, 8.8939e-01]],
        [[2.5494e-01, 2.3912e-02, 8.6488e-03,  ..., 3.7096e-02,
          5.2102e-02, 8.1396e-04],
         [1.7927e-01, 2.9019e-02, 7.3308e-03,  ..., 3.6866e-02,
          5.2102e-02, 1.1042e-03],
         [3.6114e-01, 2.3912e-02, 7.3308e-03,  ..., 3.6866e-02,
          2.4073e-01, 9.9727e-01],
         [2.0465e-01, 9.2316e-01, 9.7669e-01,  ..., 8.8917e-01,
          6.5507e-01, 8.1396e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8407e-01, 6.8079e-01, 9.9454e-01,  ..., 9.7018e-01,
          1.9057e-02, 8.8669e-03],
         [1.1819e-01, 7.3610e-02, 1.8186e-03,  ..., 9.9388e-03,
          1.9057e-02, 8.8669e-03],
         [1.7476e-01, 7.3610e-02, 1.8186e-03,  ..., 9.9388e-03,
          9.3786e-01, 9.7340e-01],
         [3.2298e-01, 1.7199e-01, 1.8186e-03,  ..., 9.9388e-03,
          2.4030e-02, 8.8669e-03]],
        [[6.2495e-02, 9.6517e-04, 9.9115e-01,  ..., 9.9613e-01,
          1.0297e-03, 5.4987e-02],
         [6.0765e-02, 9.6517e-04, 2.9516e-03,  ..., 1.2896e-03,
          1.0297e-03, 3.9310e-02],
         [8.0603e-01, 9.6517e-04, 2.9516e-03,  ..., 1.2896e-03,
          1.0297e-03, 8.3239e-01],
         [7.0706e-02, 9.9710e-01, 2.9516e-03,  ..., 1.2896e-03,
          9.9691e-01, 7.3310e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9828, 0.0176, 0.0119,  ..., 0.9683, 0.9886, 0.0106],
         [0.0057, 0.0176, 0.0119,  ..., 0.0096, 0.0036, 0.0106],
         [0.0059, 0.0176, 0.0119,  ..., 0.0125, 0.0042, 0.0106],
         [0.0057, 0.9472, 0.9642,  ..., 0.0096, 0.0036, 0.9683]],
        [[0.7766, 0.0150, 0.0083,  ..., 0.0859, 0.0594, 0.0037],
         [0.0552, 0.0192, 0.0083,  ..., 0.0603, 0.0499, 0.0052],
         [0.1129, 0.0150, 0.0083,  ..., 0.0603, 0.8219, 0.9874],
         [0.0552, 0.9508, 0.9752,  ..., 0.7936, 0.0689, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7664e-01, 6.5663e-01, 9.9814e-01,  ..., 9.8613e-01,
          2.0208e-02, 1.4088e-02],
         [1.2215e-01, 6.5846e-02, 6.1922e-04,  ..., 4.6229e-03,
          2.0208e-02, 1.4088e-02],
         [3.3527e-01, 6.5846e-02, 6.1922e-04,  ..., 4.6229e-03,
          9.3803e-01, 9.5774e-01],
         [2.6593e-01, 2.1168e-01, 6.1922e-04,  ..., 4.6229e-03,
          2.1552e-02, 1.4088e-02]],
        [[5.6049e-02, 2.6220e-04, 9.9573e-01,  ..., 9.9225e-01,
          2.3413e-03, 3.5986e-02],
         [1.6405e-02, 2.6220e-04, 1.4232e-03,  ..., 2.5817e-03,
          2.3413e-03, 2.9003e-02],
         [9.1114e-01, 2.6220e-04, 1.4232e-03,  ..., 2.5817e-03,
          2.3413e-03, 9.0436e-01],
         [1.6405e-02, 9.9921e-01, 1.4232e-03,  ..., 2.5817e-03,
          9.9298e-01, 3.0652e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:56,109 [Process: 0] Synchronize training processes
2024-08-19 13:23:56,110 [Process: 0] Evaluating...
2024-08-19 13:23:56,111 [Process: 0] EPOCH 131:
2024-08-19 13:23:56,113 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:57,149 [Process: 0] Synchronize training processes
2024-08-19 13:23:57,150 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9935, 0.0165, 0.0676,  ..., 0.9924, 0.9768, 0.0167],
         [0.0022, 0.0165, 0.0700,  ..., 0.0025, 0.0072, 0.0167],
         [0.0022, 0.0165, 0.0689,  ..., 0.0025, 0.0089, 0.0167],
         [0.0022, 0.9506, 0.7935,  ..., 0.0025, 0.0072, 0.9498]],
        [[0.8646, 0.0281, 0.0418,  ..., 0.0517, 0.0430, 0.0022],
         [0.0369, 0.0281, 0.0329,  ..., 0.0517, 0.0430, 0.0022],
         [0.0616, 0.0281, 0.0329,  ..., 0.0620, 0.8463, 0.9933],
         [0.0369, 0.9156, 0.8925,  ..., 0.8346, 0.0676, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2023e-01, 2.9501e-01, 9.7421e-01,  ..., 9.9474e-01,
          1.2970e-02, 1.5338e-02],
         [9.6581e-02, 8.5654e-02, 8.5978e-03,  ..., 1.7536e-03,
          1.2970e-02, 1.5338e-02],
         [5.2670e-01, 8.5654e-02, 8.5978e-03,  ..., 1.7536e-03,
          9.6109e-01, 9.5399e-01],
         [2.5649e-01, 5.3369e-01, 8.5978e-03,  ..., 1.7536e-03,
          1.2970e-02, 1.5338e-02]],
        [[1.2456e-02, 5.4669e-03, 9.8787e-01,  ..., 9.9492e-01,
          3.8243e-04, 2.2678e-03],
         [4.5482e-03, 5.4669e-03, 3.3174e-03,  ..., 1.6930e-03,
          3.8243e-04, 2.2678e-03],
         [9.7845e-01, 5.4669e-03, 3.3174e-03,  ..., 1.6930e-03,
          3.8243e-04, 9.9320e-01],
         [4.5482e-03, 9.8360e-01, 5.4902e-03,  ..., 1.6930e-03,
          9.9885e-01, 2.2678e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:58,115 [Process: 0] EPOCH 132:
2024-08-19 13:23:58,119 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:23:59,119 [Process: 0] Synchronize training processes
2024-08-19 13:23:59,119 [Process: 0] Evaluating...
2024-08-19 13:23:59,121 [Process: 0] EPOCH 133:
2024-08-19 13:23:59,123 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9921, 0.0075, 0.0209,  ..., 0.9661, 0.9872, 0.0142],
         [0.0026, 0.0075, 0.0209,  ..., 0.0103, 0.0043, 0.0142],
         [0.0027, 0.0075, 0.0209,  ..., 0.0132, 0.0043, 0.0142],
         [0.0026, 0.9774, 0.9373,  ..., 0.0103, 0.0043, 0.9575]],
        [[0.8486, 0.0212, 0.0094,  ..., 0.0294, 0.0842, 0.0045],
         [0.0656, 0.0202, 0.0094,  ..., 0.0294, 0.0650, 0.0045],
         [0.0480, 0.0202, 0.0094,  ..., 0.0294, 0.7306, 0.9865],
         [0.0378, 0.9383, 0.9718,  ..., 0.9119, 0.1202, 0.0045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5791e-01, 2.3122e-02, 9.9758e-01,  ..., 9.9202e-01,
          1.2579e-02, 9.6181e-03],
         [1.1463e-01, 2.3122e-02, 8.0715e-04,  ..., 2.6590e-03,
          1.2579e-02, 9.6181e-03],
         [4.1492e-01, 2.3122e-02, 8.0715e-04,  ..., 2.6590e-03,
          9.6226e-01, 9.7115e-01],
         [3.1254e-01, 9.3063e-01, 8.0715e-04,  ..., 2.6590e-03,
          1.2579e-02, 9.6181e-03]],
        [[7.6137e-03, 8.8912e-04, 9.9761e-01,  ..., 9.9641e-01,
          3.3099e-04, 7.8843e-03],
         [6.8543e-03, 7.2029e-04, 7.9633e-04,  ..., 1.1961e-03,
          3.3099e-04, 7.8843e-03],
         [9.7868e-01, 7.2029e-04, 7.9633e-04,  ..., 1.1961e-03,
          3.3099e-04, 9.7635e-01],
         [6.8543e-03, 9.9767e-01, 7.9633e-04,  ..., 1.1961e-03,
          9.9901e-01, 7.8843e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9205e-01, 3.5156e-02, 1.4711e-02,  ..., 9.9468e-01,
          9.8410e-01, 1.5974e-02],
         [2.6504e-03, 3.5361e-02, 1.4711e-02,  ..., 1.7735e-03,
          5.1250e-03, 1.5974e-02],
         [2.6504e-03, 3.5156e-02, 1.4711e-02,  ..., 1.7735e-03,
          5.6550e-03, 1.5974e-02],
         [2.6504e-03, 8.9433e-01, 9.5587e-01,  ..., 1.7735e-03,
          5.1250e-03, 9.5208e-01]],
        [[9.6093e-01, 4.3197e-02, 1.0748e-02,  ..., 1.9848e-02,
          8.3760e-02, 5.3354e-04],
         [1.1594e-02, 4.3197e-02, 1.0748e-02,  ..., 1.9848e-02,
          8.3760e-02, 5.3354e-04],
         [1.5886e-02, 4.3197e-02, 1.0748e-02,  ..., 1.9848e-02,
          6.3473e-01, 9.9840e-01],
         [1.1594e-02, 8.7041e-01, 9.6775e-01,  ..., 9.4046e-01,
          1.9775e-01, 5.3354e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6535e-02, 1.7236e-02, 9.8452e-01,  ..., 9.9723e-01,
          1.6369e-02, 6.1812e-03],
         [7.4442e-02, 1.7236e-02, 5.1609e-03,  ..., 9.2486e-04,
          1.6369e-02, 6.1812e-03],
         [7.2230e-01, 1.7236e-02, 5.1609e-03,  ..., 9.2486e-04,
          9.5089e-01, 9.8146e-01],
         [1.1673e-01, 9.4829e-01, 5.1609e-03,  ..., 9.2486e-04,
          1.6369e-02, 6.1812e-03]],
        [[2.4329e-03, 2.7826e-03, 9.8917e-01,  ..., 9.9792e-01,
          2.8685e-03, 5.5398e-03],
         [2.3779e-03, 2.7826e-03, 3.4877e-03,  ..., 6.9448e-04,
          2.8685e-03, 5.5398e-03],
         [9.9281e-01, 2.7826e-03, 3.4877e-03,  ..., 6.9448e-04,
          2.8685e-03, 9.8338e-01],
         [2.3779e-03, 9.9165e-01, 3.8585e-03,  ..., 6.9448e-04,
          9.9139e-01, 5.5398e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:00,161 [Process: 0] Synchronize training processes
2024-08-19 13:24:00,162 [Process: 0] Evaluating...
2024-08-19 13:24:00,163 [Process: 0] EPOCH 134:
2024-08-19 13:24:00,165 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:01,202 [Process: 0] Synchronize training processes
2024-08-19 13:24:01,202 [Process: 0] Evaluating...
2024-08-19 13:24:01,204 [Process: 0] EPOCH 135:
2024-08-19 13:24:01,206 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9910, 0.0129, 0.0300,  ..., 0.9965, 0.9371, 0.0147],
         [0.0030, 0.0129, 0.0300,  ..., 0.0012, 0.0190, 0.0147],
         [0.0030, 0.0129, 0.0303,  ..., 0.0012, 0.0252, 0.0147],
         [0.0030, 0.9614, 0.9098,  ..., 0.0012, 0.0186, 0.9558]],
        [[0.8236, 0.0274, 0.0119,  ..., 0.0241, 0.0790, 0.0017],
         [0.0444, 0.0274, 0.0119,  ..., 0.0241, 0.0728, 0.0017],
         [0.0876, 0.0274, 0.0119,  ..., 0.0241, 0.7111, 0.9949],
         [0.0444, 0.9178, 0.9642,  ..., 0.9276, 0.1370, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0359, 0.0028, 0.9917,  ..., 0.9321, 0.0161, 0.0194],
         [0.0359, 0.0028, 0.0028,  ..., 0.0169, 0.0161, 0.0194],
         [0.0359, 0.0028, 0.0028,  ..., 0.0169, 0.9518, 0.9419],
         [0.8923, 0.9916, 0.0028,  ..., 0.0341, 0.0161, 0.0194]],
        [[0.0226, 0.0044, 0.9942,  ..., 0.9952, 0.0053, 0.0189],
         [0.0166, 0.0044, 0.0018,  ..., 0.0016, 0.0053, 0.0189],
         [0.9441, 0.0044, 0.0018,  ..., 0.0016, 0.0053, 0.9434],
         [0.0166, 0.9868, 0.0023,  ..., 0.0016, 0.9840, 0.0189]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9878, 0.0164, 0.0200,  ..., 0.9745, 0.9970, 0.0215],
         [0.0041, 0.0164, 0.0200,  ..., 0.0085, 0.0010, 0.0215],
         [0.0041, 0.0164, 0.0200,  ..., 0.0085, 0.0010, 0.0215],
         [0.0041, 0.9507, 0.9399,  ..., 0.0085, 0.0010, 0.9354]],
        [[0.9045, 0.0184, 0.0097,  ..., 0.0464, 0.0584, 0.0016],
         [0.0390, 0.0184, 0.0097,  ..., 0.0464, 0.0535, 0.0016],
         [0.0314, 0.0184, 0.0097,  ..., 0.0506, 0.8069, 0.9953],
         [0.0251, 0.9447, 0.9708,  ..., 0.8566, 0.0811, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0391e-02, 2.0493e-02, 9.3211e-01,  ..., 9.9750e-01,
          2.5050e-02, 1.6636e-02],
         [4.0128e-02, 2.0493e-02, 2.1337e-02,  ..., 8.0354e-04,
          2.5050e-02, 1.6636e-02],
         [8.7935e-01, 2.0493e-02, 2.1337e-02,  ..., 8.0354e-04,
          9.2485e-01, 9.5009e-01],
         [4.0128e-02, 9.3852e-01, 2.5213e-02,  ..., 8.9724e-04,
          2.5050e-02, 1.6636e-02]],
        [[1.8349e-02, 1.2126e-04, 9.8579e-01,  ..., 9.9856e-01,
          2.3914e-03, 2.0503e-02],
         [1.8292e-02, 1.2126e-04, 4.6617e-03,  ..., 4.8074e-04,
          2.3914e-03, 2.0503e-02],
         [9.4507e-01, 1.2126e-04, 4.6617e-03,  ..., 4.8074e-04,
          2.3914e-03, 9.3816e-01],
         [1.8292e-02, 9.9964e-01, 4.8872e-03,  ..., 4.8074e-04,
          9.9283e-01, 2.0834e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:02,244 [Process: 0] Synchronize training processes
2024-08-19 13:24:02,245 [Process: 0] Evaluating...
2024-08-19 13:24:02,246 [Process: 0] EPOCH 136:
2024-08-19 13:24:02,248 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:03,285 [Process: 0] Synchronize training processes
2024-08-19 13:24:03,285 [Process: 0] Evaluating...
2024-08-19 13:24:03,287 [Process: 0] EPOCH 137:
2024-08-19 13:24:03,288 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9924, 0.0130, 0.0233,  ..., 0.9767, 0.9756, 0.0074],
         [0.0025, 0.0130, 0.0233,  ..., 0.0081, 0.0081, 0.0074],
         [0.0025, 0.0130, 0.0234,  ..., 0.0076, 0.0081, 0.0074],
         [0.0025, 0.9610, 0.9300,  ..., 0.0076, 0.0081, 0.9779]],
        [[0.3852, 0.0500, 0.0289,  ..., 0.0077, 0.0481, 0.0050],
         [0.0631, 0.0486, 0.0289,  ..., 0.0077, 0.0401, 0.0050],
         [0.4885, 0.0486, 0.0289,  ..., 0.0077, 0.8593, 0.9850],
         [0.0631, 0.8527, 0.9133,  ..., 0.9770, 0.0526, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3244e-02, 5.2170e-02, 9.9776e-01,  ..., 9.9392e-01,
          1.7236e-02, 3.6398e-02],
         [4.0857e-02, 5.2170e-02, 7.4534e-04,  ..., 2.0281e-03,
          1.7236e-02, 3.6045e-02],
         [8.7085e-01, 8.9283e-02, 7.4534e-04,  ..., 2.0281e-03,
          9.4829e-01, 8.8780e-01],
         [4.5051e-02, 8.0638e-01, 7.4534e-04,  ..., 2.0281e-03,
          1.7236e-02, 3.9761e-02]],
        [[4.0166e-03, 3.2585e-03, 9.7973e-01,  ..., 9.6275e-01,
          6.1803e-04, 1.0746e-02],
         [4.0166e-03, 3.2585e-03, 7.0539e-03,  ..., 9.6658e-03,
          6.1803e-04, 1.0746e-02],
         [9.8795e-01, 3.2585e-03, 6.6077e-03,  ..., 9.6658e-03,
          6.1803e-04, 9.6776e-01],
         [4.0166e-03, 9.9022e-01, 6.6077e-03,  ..., 1.7918e-02,
          9.9815e-01, 1.0746e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9621, 0.0168, 0.0126,  ..., 0.9748, 0.9964, 0.0187],
         [0.0202, 0.0168, 0.0126,  ..., 0.0084, 0.0015, 0.0187],
         [0.0089, 0.0168, 0.0126,  ..., 0.0084, 0.0011, 0.0187],
         [0.0089, 0.9496, 0.9623,  ..., 0.0084, 0.0011, 0.9439]],
        [[0.9652, 0.0228, 0.0116,  ..., 0.0113, 0.0320, 0.0293],
         [0.0112, 0.0228, 0.0116,  ..., 0.0113, 0.0320, 0.0293],
         [0.0125, 0.0228, 0.0116,  ..., 0.0113, 0.8982, 0.9121],
         [0.0112, 0.9317, 0.9652,  ..., 0.9661, 0.0378, 0.0293]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3812e-02, 1.0540e-02, 9.9113e-01,  ..., 9.7404e-01,
          1.7306e-02, 9.5822e-03],
         [5.8642e-02, 1.0540e-02, 2.9561e-03,  ..., 8.0537e-03,
          1.7306e-02, 9.5822e-03],
         [7.8982e-01, 1.0540e-02, 2.9561e-03,  ..., 8.0537e-03,
          9.4808e-01, 9.7125e-01],
         [7.7723e-02, 9.6838e-01, 2.9561e-03,  ..., 9.8548e-03,
          1.7306e-02, 9.5822e-03]],
        [[1.6212e-03, 1.9434e-04, 9.7656e-01,  ..., 9.8301e-01,
          5.8059e-04, 1.2051e-02],
         [1.6212e-03, 1.9434e-04, 6.7358e-03,  ..., 5.1890e-03,
          5.8059e-04, 1.2051e-02],
         [9.9514e-01, 1.9434e-04, 6.7358e-03,  ..., 5.1890e-03,
          5.8059e-04, 9.6385e-01],
         [1.6212e-03, 9.9942e-01, 9.9656e-03,  ..., 6.6072e-03,
          9.9826e-01, 1.2051e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:24:04,328 [Process: 0] Synchronize training processes
2024-08-19 13:24:04,328 [Process: 0] Evaluating...
2024-08-19 13:24:04,330 [Process: 0] EPOCH 138:
2024-08-19 13:24:04,332 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:05,398 [Process: 0] Synchronize training processes
2024-08-19 13:24:05,398 [Process: 0] Evaluating...
2024-08-19 13:24:05,400 [Process: 0] EPOCH 139:
2024-08-19 13:24:05,402 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9952, 0.0131, 0.0184,  ..., 0.9928, 0.9789, 0.0131],
         [0.0016, 0.0131, 0.0184,  ..., 0.0024, 0.0079, 0.0131],
         [0.0016, 0.0131, 0.0184,  ..., 0.0024, 0.0066, 0.0131],
         [0.0016, 0.9608, 0.9449,  ..., 0.0024, 0.0066, 0.9607]],
        [[0.9854, 0.0280, 0.0148,  ..., 0.0047, 0.0266, 0.0038],
         [0.0063, 0.0280, 0.0148,  ..., 0.0047, 0.0259, 0.0038],
         [0.0041, 0.0280, 0.0148,  ..., 0.0047, 0.9216, 0.9886],
         [0.0041, 0.9160, 0.9556,  ..., 0.9860, 0.0259, 0.0038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8437e-01, 4.0226e-03, 9.9346e-01,  ..., 9.9643e-01,
          2.0016e-02, 1.2661e-02],
         [1.1060e-01, 4.0226e-03, 2.1786e-03,  ..., 1.1889e-03,
          2.0016e-02, 1.2661e-02],
         [2.4170e-01, 4.0226e-03, 2.1786e-03,  ..., 1.1889e-03,
          9.3995e-01, 9.6202e-01],
         [2.6333e-01, 9.8793e-01, 2.1786e-03,  ..., 1.1889e-03,
          2.0016e-02, 1.2661e-02]],
        [[4.5678e-03, 6.0230e-04, 9.9473e-01,  ..., 9.9532e-01,
          2.8994e-04, 1.1767e-02],
         [4.5678e-03, 6.0230e-04, 1.7555e-03,  ..., 1.5615e-03,
          2.8994e-04, 1.1767e-02],
         [9.8630e-01, 6.0230e-04, 1.7555e-03,  ..., 1.5615e-03,
          2.8994e-04, 9.6470e-01],
         [4.5678e-03, 9.9819e-01, 1.7555e-03,  ..., 1.5615e-03,
          9.9913e-01, 1.1767e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9923, 0.0253, 0.0066,  ..., 0.9899, 0.9934, 0.0682],
         [0.0026, 0.0253, 0.0066,  ..., 0.0034, 0.0022, 0.0514],
         [0.0026, 0.0270, 0.0066,  ..., 0.0034, 0.0022, 0.0514],
         [0.0026, 0.9224, 0.9801,  ..., 0.0034, 0.0022, 0.8289]],
        [[0.9883, 0.0238, 0.0079,  ..., 0.0140, 0.0700, 0.0020],
         [0.0039, 0.0238, 0.0079,  ..., 0.0140, 0.0700, 0.0020],
         [0.0039, 0.0260, 0.0079,  ..., 0.0140, 0.6343, 0.9941],
         [0.0039, 0.9264, 0.9764,  ..., 0.9581, 0.2256, 0.0020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:24:06,437 [Process: 0] Synchronize training processes
2024-08-19 13:24:06,438 [Process: 0] Evaluating...
2024-08-19 13:24:06,439 [Process: 0] EPOCH 140:
2024-08-19 13:24:06,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:07,476 [Process: 0] Synchronize training processes
2024-08-19 13:24:07,477 [Process: 0] Evaluating...
2024-08-19 13:24:07,478 [Process: 0] EPOCH 141:
2024-08-19 13:24:07,480 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8393e-01, 2.9297e-03, 9.7561e-01,  ..., 9.9614e-01,
          1.6810e-02, 3.0310e-03],
         [1.2288e-01, 2.9297e-03, 7.3754e-03,  ..., 1.2875e-03,
          1.6810e-02, 3.0310e-03],
         [2.1955e-01, 2.9297e-03, 7.3754e-03,  ..., 1.2875e-03,
          9.4957e-01, 9.9091e-01],
         [2.7364e-01, 9.9121e-01, 9.6360e-03,  ..., 1.2875e-03,
          1.6810e-02, 3.0310e-03]],
        [[5.1877e-04, 1.8792e-03, 9.5917e-01,  ..., 9.9291e-01,
          2.3934e-03, 4.3900e-03],
         [5.1877e-04, 1.8792e-03, 1.2991e-02,  ..., 2.3645e-03,
          2.3934e-03, 4.3900e-03],
         [9.9844e-01, 1.8792e-03, 1.2991e-02,  ..., 2.3645e-03,
          2.3934e-03, 9.8683e-01],
         [5.1877e-04, 9.9436e-01, 1.4853e-02,  ..., 2.3645e-03,
          9.9282e-01, 4.3900e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5093e-01, 2.4110e-02, 5.0540e-02,  ..., 9.9211e-01,
          9.9776e-01, 1.5600e-02],
         [1.7965e-02, 2.4110e-02, 4.5756e-02,  ..., 2.6289e-03,
          7.4552e-04, 1.5600e-02],
         [1.6760e-02, 2.5935e-02, 5.3015e-02,  ..., 2.6289e-03,
          7.4552e-04, 1.5600e-02],
         [1.4347e-02, 9.2585e-01, 8.5069e-01,  ..., 2.6289e-03,
          7.4552e-04, 9.5320e-01]],
        [[9.6626e-01, 9.7156e-03, 1.0787e-02,  ..., 3.3544e-02,
          5.4789e-03, 4.9546e-03],
         [1.2260e-02, 9.7156e-03, 1.0787e-02,  ..., 3.3544e-02,
          5.4789e-03, 4.9546e-03],
         [1.0740e-02, 9.7156e-03, 1.0787e-02,  ..., 5.1460e-02,
          9.8356e-01, 9.8514e-01],
         [1.0740e-02, 9.7085e-01, 9.6764e-01,  ..., 8.8145e-01,
          5.4789e-03, 4.9546e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3374, 0.0093, 0.9905,  ..., 0.9855, 0.0135, 0.0061],
         [0.1231, 0.0093, 0.0032,  ..., 0.0048, 0.0135, 0.0061],
         [0.3139, 0.0093, 0.0032,  ..., 0.0048, 0.9595, 0.9818],
         [0.2255, 0.9720, 0.0032,  ..., 0.0048, 0.0135, 0.0061]],
        [[0.0011, 0.0020, 0.9884,  ..., 0.9947, 0.0015, 0.0159],
         [0.0011, 0.0020, 0.0036,  ..., 0.0018, 0.0015, 0.0159],
         [0.9967, 0.0020, 0.0036,  ..., 0.0018, 0.0015, 0.9523],
         [0.0011, 0.9940, 0.0043,  ..., 0.0018, 0.9955, 0.0159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9933, 0.0217, 0.0139,  ..., 0.9949, 0.9461, 0.0190],
         [0.0022, 0.0217, 0.0139,  ..., 0.0017, 0.0180, 0.0190],
         [0.0022, 0.0220, 0.0139,  ..., 0.0017, 0.0180, 0.0190],
         [0.0022, 0.9347, 0.9584,  ..., 0.0017, 0.0180, 0.9431]],
        [[0.9952, 0.0161, 0.0026,  ..., 0.0043, 0.0038, 0.0207],
         [0.0016, 0.0161, 0.0026,  ..., 0.0043, 0.0038, 0.0207],
         [0.0016, 0.0161, 0.0026,  ..., 0.0043, 0.9887, 0.9379],
         [0.0016, 0.9517, 0.9921,  ..., 0.9872, 0.0038, 0.0207]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:24:08,516 [Process: 0] Synchronize training processes
2024-08-19 13:24:08,517 [Process: 0] Evaluating...
2024-08-19 13:24:09,475 [Process: 0] EPOCH 142:
2024-08-19 13:24:09,478 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1554e-02, 1.0463e-02, 9.9645e-01,  ..., 9.9818e-01,
          1.1896e-02, 2.3351e-02],
         [7.4813e-02, 1.0463e-02, 1.1828e-03,  ..., 6.0738e-04,
          1.1896e-02, 2.3351e-02],
         [7.1440e-01, 1.0463e-02, 1.1828e-03,  ..., 6.0738e-04,
          9.6431e-01, 9.2870e-01],
         [1.1923e-01, 9.6861e-01, 1.1828e-03,  ..., 6.0738e-04,
          1.1896e-02, 2.4598e-02]],
        [[4.3672e-03, 3.0768e-03, 9.9422e-01,  ..., 9.4348e-01,
          1.4516e-03, 1.5703e-02],
         [4.3672e-03, 3.0768e-03, 1.9281e-03,  ..., 1.4934e-02,
          1.4516e-03, 1.5703e-02],
         [9.8690e-01, 3.0768e-03, 1.9281e-03,  ..., 1.4934e-02,
          1.4516e-03, 9.5289e-01],
         [4.3672e-03, 9.9077e-01, 1.9281e-03,  ..., 2.6648e-02,
          9.9565e-01, 1.5703e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9585, 0.0142, 0.0252,  ..., 0.9849, 0.9785, 0.0248],
         [0.0138, 0.0142, 0.0252,  ..., 0.0050, 0.0072, 0.0248],
         [0.0138, 0.0142, 0.0278,  ..., 0.0050, 0.0072, 0.0277],
         [0.0138, 0.9574, 0.9217,  ..., 0.0050, 0.0072, 0.9228]],
        [[0.9921, 0.0108, 0.0141,  ..., 0.0129, 0.0078, 0.0237],
         [0.0028, 0.0108, 0.0141,  ..., 0.0129, 0.0078, 0.0237],
         [0.0025, 0.0108, 0.0141,  ..., 0.0129, 0.9766, 0.9289],
         [0.0025, 0.9676, 0.9578,  ..., 0.9614, 0.0078, 0.0237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:24:10,485 [Process: 0] Synchronize training processes
2024-08-19 13:24:10,486 [Process: 0] Evaluating...
2024-08-19 13:24:10,487 [Process: 0] EPOCH 143:
2024-08-19 13:24:10,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:11,525 [Process: 0] Synchronize training processes
2024-08-19 13:24:11,526 [Process: 0] Evaluating...
2024-08-19 13:24:11,527 [Process: 0] EPOCH 144:
2024-08-19 13:24:11,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2629e-02, 1.5176e-02, 9.9521e-01,  ..., 9.8382e-01,
          2.0507e-02, 1.2734e-02],
         [5.7402e-02, 1.5176e-02, 1.5952e-03,  ..., 5.3919e-03,
          2.0507e-02, 1.2734e-02],
         [7.9780e-01, 1.5176e-02, 1.5952e-03,  ..., 5.3919e-03,
          9.3826e-01, 9.6180e-01],
         [8.2168e-02, 9.5447e-01, 1.5952e-03,  ..., 5.3919e-03,
          2.0729e-02, 1.2734e-02]],
        [[5.0297e-03, 1.1807e-02, 9.9385e-01,  ..., 9.9780e-01,
          7.5647e-04, 3.2602e-02],
         [5.0297e-03, 1.1807e-02, 2.0489e-03,  ..., 7.3253e-04,
          7.5647e-04, 3.0175e-02],
         [9.8491e-01, 1.1807e-02, 2.0489e-03,  ..., 7.3253e-04,
          7.5647e-04, 8.9567e-01],
         [5.0297e-03, 9.6458e-01, 2.0489e-03,  ..., 7.3253e-04,
          9.9773e-01, 4.1552e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9852, 0.0048, 0.0067,  ..., 0.9901, 0.9921, 0.0332],
         [0.0065, 0.0048, 0.0067,  ..., 0.0033, 0.0026, 0.0277],
         [0.0042, 0.0048, 0.0067,  ..., 0.0033, 0.0027, 0.0277],
         [0.0042, 0.9857, 0.9798,  ..., 0.0033, 0.0026, 0.9114]],
        [[0.9434, 0.0348, 0.0120,  ..., 0.0291, 0.0178, 0.0076],
         [0.0172, 0.0348, 0.0120,  ..., 0.0291, 0.0178, 0.0076],
         [0.0222, 0.0661, 0.0120,  ..., 0.0367, 0.9465, 0.9771],
         [0.0172, 0.8642, 0.9639,  ..., 0.9051, 0.0178, 0.0076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0314e-02, 4.0723e-02, 9.6579e-01,  ..., 9.9029e-01,
          1.3219e-02, 3.5212e-02],
         [2.9575e-02, 4.0723e-02, 9.4594e-03,  ..., 3.2356e-03,
          1.3219e-02, 3.5212e-02],
         [9.0450e-01, 7.1704e-02, 9.4594e-03,  ..., 3.2356e-03,
          9.6034e-01, 8.8333e-01],
         [3.5616e-02, 8.4685e-01, 1.5292e-02,  ..., 3.2356e-03,
          1.3219e-02, 4.6244e-02]],
        [[1.0433e-02, 1.4920e-02, 9.9370e-01,  ..., 9.8306e-01,
          4.9416e-04, 1.7085e-02],
         [1.0433e-02, 1.4920e-02, 2.0996e-03,  ..., 5.4409e-03,
          4.9416e-04, 1.7085e-02],
         [9.6870e-01, 1.4920e-02, 2.0996e-03,  ..., 5.4409e-03,
          4.9416e-04, 9.4874e-01],
         [1.0433e-02, 9.5524e-01, 2.0996e-03,  ..., 6.0599e-03,
          9.9852e-01, 1.7085e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9927, 0.0243, 0.0092,  ..., 0.9846, 0.9956, 0.0425],
         [0.0025, 0.0296, 0.0092,  ..., 0.0051, 0.0020, 0.0399],
         [0.0024, 0.0243, 0.0092,  ..., 0.0051, 0.0012, 0.0477],
         [0.0024, 0.9218, 0.9723,  ..., 0.0051, 0.0012, 0.8699]],
        [[0.9927, 0.0178, 0.0484,  ..., 0.0107, 0.0109, 0.0139],
         [0.0024, 0.0178, 0.0469,  ..., 0.0107, 0.0109, 0.0139],
         [0.0024, 0.0178, 0.0469,  ..., 0.0107, 0.9674, 0.9583],
         [0.0024, 0.9467, 0.8578,  ..., 0.9679, 0.0109, 0.0139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:24:12,566 [Process: 0] Synchronize training processes
2024-08-19 13:24:12,566 [Process: 0] Evaluating...
2024-08-19 13:24:12,568 [Process: 0] EPOCH 145:
2024-08-19 13:24:12,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:13,605 [Process: 0] Synchronize training processes
2024-08-19 13:24:13,606 [Process: 0] Evaluating...
2024-08-19 13:24:13,607 [Process: 0] EPOCH 146:
2024-08-19 13:24:13,609 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.7458e-02, 1.7520e-01, 9.9213e-01,  ..., 9.9792e-01,
          3.3056e-02, 2.0907e-02],
         [7.2312e-02, 9.3870e-02, 2.6224e-03,  ..., 6.9242e-04,
          3.1363e-02, 2.0907e-02],
         [7.0061e-01, 1.8260e-01, 2.6224e-03,  ..., 6.9242e-04,
          8.9565e-01, 9.3728e-01],
         [1.3962e-01, 5.4833e-01, 2.6224e-03,  ..., 6.9242e-04,
          3.9935e-02, 2.0907e-02]],
        [[4.4621e-03, 1.8174e-02, 9.9615e-01,  ..., 9.9020e-01,
          2.7580e-04, 2.5378e-02],
         [4.4621e-03, 1.8174e-02, 1.2837e-03,  ..., 3.2683e-03,
          2.7580e-04, 2.5378e-02],
         [9.8661e-01, 1.8174e-02, 1.2837e-03,  ..., 3.2683e-03,
          2.7580e-04, 9.2267e-01],
         [4.4621e-03, 9.4548e-01, 1.2837e-03,  ..., 3.2683e-03,
          9.9917e-01, 2.6575e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6631e-01, 4.1288e-02, 2.4611e-02,  ..., 9.8919e-01,
          9.8753e-01, 1.9057e-02],
         [1.5853e-02, 3.4189e-02, 2.4611e-02,  ..., 3.6040e-03,
          4.1572e-03, 1.9057e-02],
         [8.9176e-03, 3.5800e-02, 2.4611e-02,  ..., 3.6040e-03,
          4.1572e-03, 1.9057e-02],
         [8.9176e-03, 8.8872e-01, 9.2617e-01,  ..., 3.6040e-03,
          4.1572e-03, 9.4283e-01]],
        [[9.9953e-01, 2.7761e-02, 2.6377e-02,  ..., 8.0285e-03,
          7.2546e-03, 1.6334e-03],
         [1.5772e-04, 2.7427e-02, 2.6377e-02,  ..., 8.0285e-03,
          7.2546e-03, 1.6334e-03],
         [1.5772e-04, 2.7427e-02, 2.6377e-02,  ..., 8.0285e-03,
          9.7824e-01, 9.9510e-01],
         [1.5772e-04, 9.1738e-01, 9.2087e-01,  ..., 9.7591e-01,
          7.2546e-03, 1.6334e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.4577e-02, 1.8347e-01, 9.9171e-01,  ..., 9.4234e-01,
          2.2249e-02, 1.7037e-02],
         [4.4577e-02, 8.3983e-02, 2.7628e-03,  ..., 1.4706e-02,
          2.2249e-02, 1.7037e-02],
         [8.4845e-01, 1.1934e-01, 2.7628e-03,  ..., 1.4706e-02,
          9.3325e-01, 9.4889e-01],
         [6.2398e-02, 6.1321e-01, 2.7628e-03,  ..., 2.8249e-02,
          2.2249e-02, 1.7037e-02]],
        [[7.7339e-03, 6.6683e-04, 9.8375e-01,  ..., 9.7519e-01,
          4.7707e-04, 2.7992e-02],
         [7.7339e-03, 6.6683e-04, 5.4172e-03,  ..., 8.1138e-03,
          4.7707e-04, 2.7992e-02],
         [9.7680e-01, 6.6683e-04, 5.4172e-03,  ..., 8.1138e-03,
          4.7707e-04, 9.1275e-01],
         [7.7339e-03, 9.9800e-01, 5.4172e-03,  ..., 8.5793e-03,
          9.9857e-01, 3.1263e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9964, 0.0392, 0.0204,  ..., 0.9695, 0.9869, 0.0142],
         [0.0012, 0.0367, 0.0204,  ..., 0.0106, 0.0044, 0.0142],
         [0.0012, 0.0552, 0.0204,  ..., 0.0100, 0.0044, 0.0142],
         [0.0012, 0.8689, 0.9388,  ..., 0.0100, 0.0044, 0.9573]],
        [[0.9940, 0.0299, 0.0150,  ..., 0.0186, 0.0062, 0.0053],
         [0.0020, 0.0299, 0.0150,  ..., 0.0186, 0.0062, 0.0053],
         [0.0020, 0.0299, 0.0150,  ..., 0.0186, 0.9815, 0.9841],
         [0.0020, 0.9104, 0.9550,  ..., 0.9442, 0.0062, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:24:14,649 [Process: 0] Synchronize training processes
2024-08-19 13:24:14,649 [Process: 0] Evaluating...
2024-08-19 13:24:14,651 [Process: 0] EPOCH 147:
2024-08-19 13:24:14,653 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0461, 0.0137, 0.9934,  ..., 0.8990, 0.0116, 0.0099],
         [0.0461, 0.0137, 0.0022,  ..., 0.0254, 0.0116, 0.0099],
         [0.8494, 0.0137, 0.0022,  ..., 0.0254, 0.9652, 0.9702],
         [0.0585, 0.9588, 0.0022,  ..., 0.0503, 0.0116, 0.0099]],
        [[0.0104, 0.0036, 0.9140,  ..., 0.9892, 0.0027, 0.0356],
         [0.0104, 0.0036, 0.0209,  ..., 0.0036, 0.0027, 0.0356],
         [0.9689, 0.0036, 0.0209,  ..., 0.0036, 0.0027, 0.8820],
         [0.0104, 0.9892, 0.0442,  ..., 0.0036, 0.9920, 0.0467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9696, 0.0148, 0.0265,  ..., 0.9789, 0.8343, 0.0213],
         [0.0095, 0.0148, 0.0265,  ..., 0.0068, 0.0428, 0.0213],
         [0.0115, 0.0148, 0.0265,  ..., 0.0076, 0.0534, 0.0213],
         [0.0095, 0.9555, 0.9204,  ..., 0.0068, 0.0695, 0.9361]],
        [[0.9962, 0.0273, 0.0285,  ..., 0.0363, 0.0168, 0.0081],
         [0.0013, 0.0273, 0.0285,  ..., 0.0320, 0.0168, 0.0081],
         [0.0013, 0.0273, 0.0316,  ..., 0.0320, 0.9496, 0.9757],
         [0.0013, 0.9180, 0.9114,  ..., 0.8998, 0.0168, 0.0081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1162e-01, 5.4761e-01, 9.7099e-01,  ..., 9.9782e-01,
          1.5919e-02, 1.2965e-02],
         [8.5523e-02, 7.5439e-02, 8.3292e-03,  ..., 7.2829e-04,
          1.5919e-02, 1.2965e-02],
         [6.4397e-01, 9.2191e-02, 8.3292e-03,  ..., 7.2829e-04,
          9.5224e-01, 9.6110e-01],
         [1.5889e-01, 2.8476e-01, 1.2355e-02,  ..., 7.2829e-04,
          1.5919e-02, 1.2965e-02]],
        [[7.6426e-03, 9.8085e-03, 9.4526e-01,  ..., 9.9713e-01,
          3.9397e-04, 2.0926e-02],
         [7.6426e-03, 9.8085e-03, 1.6978e-02,  ..., 9.5832e-04,
          3.9397e-04, 2.0876e-02],
         [9.7707e-01, 9.8085e-03, 1.6978e-02,  ..., 9.5832e-04,
          3.9397e-04, 9.3732e-01],
         [7.6426e-03, 9.7057e-01, 2.0779e-02,  ..., 9.5832e-04,
          9.9882e-01, 2.0876e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9707e-01, 1.8966e-02, 2.1564e-02,  ..., 9.8540e-01,
          8.1513e-01, 1.6641e-02],
         [9.7820e-04, 1.8966e-02, 2.1564e-02,  ..., 4.8624e-03,
          4.2583e-02, 1.6641e-02],
         [9.7820e-04, 1.8966e-02, 2.1564e-02,  ..., 4.8776e-03,
          5.7070e-02, 1.6641e-02],
         [9.7820e-04, 9.4310e-01, 9.3531e-01,  ..., 4.8624e-03,
          8.5221e-02, 9.5008e-01]],
        [[9.9746e-01, 2.3067e-02, 1.4283e-02,  ..., 8.2998e-03,
          1.4578e-02, 6.8744e-03],
         [8.8531e-04, 2.3067e-02, 1.4283e-02,  ..., 8.2998e-03,
          1.4578e-02, 6.8744e-03],
         [8.2661e-04, 2.3067e-02, 1.4283e-02,  ..., 8.2998e-03,
          9.5627e-01, 9.7938e-01],
         [8.2661e-04, 9.3080e-01, 9.5715e-01,  ..., 9.7510e-01,
          1.4578e-02, 6.8744e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:24:15,690 [Process: 0] Synchronize training processes
2024-08-19 13:24:15,691 [Process: 0] Evaluating...
2024-08-19 13:24:15,693 [Process: 0] EPOCH 148:
2024-08-19 13:24:15,694 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:16,731 [Process: 0] Synchronize training processes
2024-08-19 13:24:16,732 [Process: 0] Evaluating...
2024-08-19 13:24:16,733 [Process: 0] EPOCH 149:
2024-08-19 13:24:16,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0670e-01, 1.2259e-02, 9.6662e-01,  ..., 9.9751e-01,
          8.4004e-03, 1.3643e-02],
         [1.1176e-01, 1.0479e-02, 9.5794e-03,  ..., 8.2279e-04,
          8.4004e-03, 1.3643e-02],
         [6.7874e-01, 1.0479e-02, 9.5794e-03,  ..., 8.2279e-04,
          9.7480e-01, 9.5907e-01],
         [1.0280e-01, 9.6678e-01, 1.4223e-02,  ..., 8.4584e-04,
          8.4004e-03, 1.3643e-02]],
        [[2.5866e-03, 4.0257e-03, 9.8090e-01,  ..., 9.7393e-01,
          6.0268e-05, 1.0118e-02],
         [2.5866e-03, 4.0257e-03, 5.6960e-03,  ..., 7.2569e-03,
          6.0268e-05, 1.0118e-02],
         [9.9224e-01, 4.0257e-03, 5.6960e-03,  ..., 7.2569e-03,
          6.0268e-05, 9.6965e-01],
         [2.5866e-03, 9.8792e-01, 7.7032e-03,  ..., 1.1561e-02,
          9.9982e-01, 1.0118e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9721, 0.0189, 0.0210,  ..., 0.9812, 0.9727, 0.0436],
         [0.0093, 0.0189, 0.0210,  ..., 0.0063, 0.0091, 0.0436],
         [0.0093, 0.0189, 0.0210,  ..., 0.0063, 0.0091, 0.0436],
         [0.0093, 0.9434, 0.9369,  ..., 0.0063, 0.0091, 0.8693]],
        [[0.9943, 0.0184, 0.0187,  ..., 0.0117, 0.0029, 0.0018],
         [0.0019, 0.0181, 0.0187,  ..., 0.0117, 0.0029, 0.0018],
         [0.0019, 0.0181, 0.0187,  ..., 0.0117, 0.9913, 0.9946],
         [0.0019, 0.9453, 0.9438,  ..., 0.9648, 0.0029, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6064e-01, 4.7017e-04, 9.8372e-01,  ..., 9.9712e-01,
          1.2286e-02, 1.8807e-02],
         [1.0941e-01, 4.7017e-04, 5.4279e-03,  ..., 9.5945e-04,
          1.2286e-02, 1.8209e-02],
         [5.8621e-01, 4.7017e-04, 5.4279e-03,  ..., 9.5945e-04,
          9.6314e-01, 9.4477e-01],
         [1.4374e-01, 9.9859e-01, 5.4279e-03,  ..., 9.5945e-04,
          1.2286e-02, 1.8209e-02]],
        [[2.3759e-03, 1.0558e-03, 9.9476e-01,  ..., 9.9215e-01,
          1.5452e-03, 1.0390e-02],
         [2.3759e-03, 1.0558e-03, 1.7482e-03,  ..., 2.6169e-03,
          1.5452e-03, 1.0390e-02],
         [9.9287e-01, 1.0558e-03, 1.7482e-03,  ..., 2.6169e-03,
          1.5452e-03, 9.6883e-01],
         [2.3759e-03, 9.9683e-01, 1.7482e-03,  ..., 2.6169e-03,
          9.9536e-01, 1.0390e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:24:17,772 [Process: 0] Synchronize training processes
2024-08-19 13:24:17,773 [Process: 0] Evaluating...
2024-08-19 13:24:17,775 [Process: 0] EPOCH 150:
2024-08-19 13:24:17,776 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 55, in is_yellow
    return (color[0] > 1 - tolerance and color[1] > 1 - tolerance and color[2] < tolerance)
KeyboardInterrupt