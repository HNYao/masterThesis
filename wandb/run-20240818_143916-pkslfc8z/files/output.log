2024-08-18 14:39:22,189 [Worker 0] Is distributed: False
2024-08-18 14:39:22,189 [Process: 0] Starting training
2024-08-18 14:39:22,190 [Process: 0] EPOCH 1:
2024-08-18 14:39:22,193 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.3891, 0.5000, 0.7018],
         [0.5000, 0.5000, 0.5000,  ..., 0.6109, 0.5000, 0.2982]],
        [[0.5000, 0.7181, 0.9068,  ..., 0.5497, 0.6961, 0.4613],
         [0.5000, 0.2819, 0.0932,  ..., 0.4503, 0.3039, 0.5387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:24,285 [Process: 0] Synchronize training processes
2024-08-18 14:39:24,285 [Process: 0] Evaluating...
2024-08-18 14:39:24,294 [Process: 0] EPOCH 2:
2024-08-18 14:39:24,296 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:25,669 [Process: 0] Synchronize training processes
2024-08-18 14:39:25,669 [Process: 0] Evaluating...
2024-08-18 14:39:25,671 [Process: 0] EPOCH 3:
2024-08-18 14:39:25,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.5052],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.4948]],
        [[0.6352, 0.5966, 0.7011,  ..., 0.5000, 0.4677, 0.5000],
         [0.3648, 0.4034, 0.2989,  ..., 0.5000, 0.5323, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[5.9172e-01, 2.6773e-07, 5.0000e-01,  ..., 5.0000e-01,
          4.9588e-01, 1.3024e-03],
         [4.0828e-01, 1.0000e+00, 5.0000e-01,  ..., 5.0000e-01,
          5.0412e-01, 9.9870e-01]],
        [[5.0000e-01, 5.0000e-01, 5.3318e-01,  ..., 8.0815e-01,
          4.9996e-01, 5.1221e-01],
         [5.0000e-01, 5.0000e-01, 4.6682e-01,  ..., 1.9185e-01,
          5.0004e-01, 4.8779e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9271, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8041],
         [0.0729, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1959]],
        [[0.5000, 0.8348, 0.5000,  ..., 0.6063, 0.8556, 0.7013],
         [0.5000, 0.1652, 0.5000,  ..., 0.3937, 0.1444, 0.2987]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:27,026 [Process: 0] Synchronize training processes
2024-08-18 14:39:27,026 [Process: 0] Evaluating...
2024-08-18 14:39:27,028 [Process: 0] EPOCH 4:
2024-08-18 14:39:27,030 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7094, 0.5000, 0.5483,  ..., 0.7020, 0.7802, 0.7753],
         [0.2906, 0.5000, 0.4517,  ..., 0.2980, 0.2198, 0.2247]],
        [[0.7246, 0.5000, 0.5000,  ..., 0.6459, 0.5000, 0.5000],
         [0.2754, 0.5000, 0.5000,  ..., 0.3541, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.6981],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.3019]],
        [[0.5969, 0.5518, 0.5000,  ..., 0.7120, 0.0863, 0.5905],
         [0.4031, 0.4482, 0.5000,  ..., 0.2880, 0.9137, 0.4095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6650, 0.5000, 0.5000,  ..., 0.6498, 0.7205, 0.5000],
         [0.3350, 0.5000, 0.5000,  ..., 0.3502, 0.2795, 0.5000]],
        [[0.5000, 0.6846, 0.4890,  ..., 0.5000, 0.5000, 0.5000],
         [0.5000, 0.3154, 0.5110,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:28,383 [Process: 0] Synchronize training processes
2024-08-18 14:39:28,383 [Process: 0] Evaluating...
2024-08-18 14:39:28,385 [Process: 0] EPOCH 5:
2024-08-18 14:39:28,387 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:29,749 [Process: 0] Synchronize training processes
2024-08-18 14:39:29,750 [Process: 0] Evaluating...
2024-08-18 14:39:29,751 [Process: 0] EPOCH 6:
2024-08-18 14:39:29,753 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4777, 0.5000, 0.6971,  ..., 0.6572, 0.6446, 0.7420],
         [0.5223, 0.5000, 0.3029,  ..., 0.3428, 0.3554, 0.2580]],
        [[0.7281, 0.5000, 0.5000,  ..., 0.5000, 0.1894, 0.2634],
         [0.2719, 0.5000, 0.5000,  ..., 0.5000, 0.8106, 0.7366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7504, 0.7155, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2496, 0.2845, 0.5000]],
        [[0.5000, 0.6885, 0.7417,  ..., 0.5000, 0.7864, 0.5000],
         [0.5000, 0.3115, 0.2583,  ..., 0.5000, 0.2136, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7250,  ..., 0.6935, 0.7007, 0.6742],
         [0.5000, 0.5000, 0.2750,  ..., 0.3065, 0.2993, 0.3258]],
        [[0.5000, 0.5000, 0.6963,  ..., 0.5882, 0.3071, 0.8059],
         [0.5000, 0.5000, 0.3037,  ..., 0.4118, 0.6929, 0.1941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:31,113 [Process: 0] Synchronize training processes
2024-08-18 14:39:31,114 [Process: 0] Evaluating...
2024-08-18 14:39:31,115 [Process: 0] EPOCH 7:
2024-08-18 14:39:31,117 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.4579, 0.5000,  ..., 0.7358, 0.6251, 0.5000],
         [0.5000, 0.5421, 0.5000,  ..., 0.2642, 0.3749, 0.5000]],
        [[0.5000, 0.7202, 0.5000,  ..., 0.5000, 0.5000, 0.7499],
         [0.5000, 0.2798, 0.5000,  ..., 0.5000, 0.5000, 0.2501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4575, 0.5000, 0.5000,  ..., 0.7175, 0.7285, 0.5000],
         [0.5425, 0.5000, 0.5000,  ..., 0.2825, 0.2715, 0.5000]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5802, 0.7895],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.4198, 0.2105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7001, 0.5000, 0.5000,  ..., 0.7374, 0.7911, 0.5000],
         [0.2999, 0.5000, 0.5000,  ..., 0.2626, 0.2089, 0.5000]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7886, 0.5000, 0.7455],
         [0.5000, 0.5000, 0.5000,  ..., 0.2114, 0.5000, 0.2545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:32,468 [Process: 0] Synchronize training processes
2024-08-18 14:39:32,469 [Process: 0] Evaluating...
2024-08-18 14:39:32,470 [Process: 0] EPOCH 8:
2024-08-18 14:39:32,472 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:33,824 [Process: 0] Synchronize training processes
2024-08-18 14:39:33,825 [Process: 0] Evaluating...
2024-08-18 14:39:33,827 [Process: 0] EPOCH 9:
2024-08-18 14:39:33,829 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.8014, 0.6916, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.1986, 0.3084, 0.5000]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.6094, 0.7866],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.3906, 0.2134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7594, 0.5000, 0.7308,  ..., 0.7306, 0.7614, 0.6744],
         [0.2406, 0.5000, 0.2692,  ..., 0.2694, 0.2386, 0.3256]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7822, 0.5000, 0.6722],
         [0.5000, 0.5000, 0.5000,  ..., 0.2178, 0.5000, 0.3278]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7086, 0.7499, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2914, 0.2501, 0.5000]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.8323, 0.8529],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.1677, 0.1471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:35,182 [Process: 0] Synchronize training processes
2024-08-18 14:39:35,183 [Process: 0] Evaluating...
2024-08-18 14:39:35,185 [Process: 0] EPOCH 10:
2024-08-18 14:39:35,187 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7800, 0.6637, 0.7066,  ..., 0.7263, 0.7603, 0.7074],
         [0.2200, 0.3363, 0.2934,  ..., 0.2737, 0.2397, 0.2926]],
        [[0.4126, 0.4789, 0.5000,  ..., 0.7381, 0.5000, 0.5000],
         [0.5874, 0.5211, 0.5000,  ..., 0.2619, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7794, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2206, 0.5000, 0.5000]],
        [[0.5000, 0.7416, 0.7070,  ..., 0.5000, 0.7798, 0.8408],
         [0.5000, 0.2584, 0.2930,  ..., 0.5000, 0.2202, 0.1592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7759, 0.7298, 0.7350,  ..., 0.7449, 0.7627, 0.7422],
         [0.2241, 0.2702, 0.2650,  ..., 0.2551, 0.2373, 0.2578]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.6708, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.3292, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:36,551 [Process: 0] Synchronize training processes
2024-08-18 14:39:36,552 [Process: 0] Evaluating...
2024-08-18 14:39:36,554 [Process: 0] EPOCH 11:
2024-08-18 14:39:36,556 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:37,907 [Process: 0] Synchronize training processes
2024-08-18 14:39:37,908 [Process: 0] Evaluating...
2024-08-18 14:39:37,917 [Process: 0] EPOCH 12:
2024-08-18 14:39:37,918 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7374, 0.7371, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2626, 0.2629, 0.5000]],
        [[0.5000, 0.7016, 0.7305,  ..., 0.5000, 0.7231, 0.5409],
         [0.5000, 0.2984, 0.2695,  ..., 0.5000, 0.2769, 0.4591]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7726, 0.7919, 0.7498,  ..., 0.7448, 0.7483, 0.7519],
         [0.2274, 0.2081, 0.2502,  ..., 0.2552, 0.2517, 0.2481]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7449, 0.5000, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2551, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4965, 0.5000, 0.4980,  ..., 0.7128, 0.7453, 0.5000],
         [0.5035, 0.5000, 0.5020,  ..., 0.2872, 0.2547, 0.5000]],
        [[0.7578, 0.7108, 0.7033,  ..., 0.7354, 0.7033, 0.1720],
         [0.2422, 0.2892, 0.2967,  ..., 0.2646, 0.2967, 0.8280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:39,269 [Process: 0] Synchronize training processes
2024-08-18 14:39:39,270 [Process: 0] Evaluating...
2024-08-18 14:39:39,271 [Process: 0] EPOCH 13:
2024-08-18 14:39:39,273 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7398, 0.7802, 0.7371,  ..., 0.8090, 0.7334, 0.7336],
         [0.2602, 0.2198, 0.2629,  ..., 0.1910, 0.2666, 0.2664]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7630, 0.5000, 0.5787],
         [0.5000, 0.5000, 0.5000,  ..., 0.2370, 0.5000, 0.4213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7689, 0.7346, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2311, 0.2654, 0.5000]],
        [[0.7091, 0.7210, 0.7001,  ..., 0.7801, 0.7052, 0.7031],
         [0.2909, 0.2790, 0.2999,  ..., 0.2199, 0.2948, 0.2969]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7576, 0.7973, 0.7745,  ..., 0.7526, 0.7997, 0.7421],
         [0.2424, 0.2027, 0.2255,  ..., 0.2474, 0.2003, 0.2579]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7824, 0.5000, 0.7780],
         [0.5000, 0.5000, 0.5000,  ..., 0.2176, 0.5000, 0.2220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:40,624 [Process: 0] Synchronize training processes
2024-08-18 14:39:40,625 [Process: 0] Evaluating...
2024-08-18 14:39:40,627 [Process: 0] EPOCH 14:
2024-08-18 14:39:40,628 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7754, 0.7440, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2246, 0.2560, 0.5000]],
        [[0.7862, 0.5000, 0.7414,  ..., 0.7256, 0.7515, 0.7447],
         [0.2138, 0.5000, 0.2586,  ..., 0.2744, 0.2485, 0.2553]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7594, 0.7197, 0.7579,  ..., 0.7753, 0.8104, 0.7461],
         [0.2406, 0.2803, 0.2421,  ..., 0.2247, 0.1896, 0.2539]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7805, 0.5000, 0.7220],
         [0.5000, 0.5000, 0.5000,  ..., 0.2195, 0.5000, 0.2780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4896, 0.5000, 0.5000,  ..., 0.7725, 0.7516, 0.5000],
         [0.5104, 0.5000, 0.5000,  ..., 0.2275, 0.2484, 0.5000]],
        [[0.7197, 0.7379, 0.7125,  ..., 0.7021, 0.7318, 0.7383],
         [0.2803, 0.2621, 0.2875,  ..., 0.2979, 0.2682, 0.2617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:41,981 [Process: 0] Synchronize training processes
2024-08-18 14:39:41,981 [Process: 0] Evaluating...
2024-08-18 14:39:41,983 [Process: 0] EPOCH 15:
2024-08-18 14:39:41,985 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:43,336 [Process: 0] Synchronize training processes
2024-08-18 14:39:43,336 [Process: 0] Evaluating...
2024-08-18 14:39:43,338 [Process: 0] EPOCH 16:
2024-08-18 14:39:43,340 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7162, 0.7942, 0.7344,  ..., 0.7573, 0.7354, 0.7398],
         [0.2838, 0.2058, 0.2656,  ..., 0.2427, 0.2646, 0.2602]],
        [[0.7669, 0.5000, 0.5000,  ..., 0.7528, 0.5000, 0.7356],
         [0.2331, 0.5000, 0.5000,  ..., 0.2472, 0.5000, 0.2644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.7371, 0.7076, 0.5000],
         [0.5000, 0.5000, 0.5000,  ..., 0.2629, 0.2924, 0.5000]],
        [[0.7209, 0.7523, 0.5000,  ..., 0.7112, 0.7481, 0.7268],
         [0.2791, 0.2477, 0.5000,  ..., 0.2888, 0.2519, 0.2732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7813, 0.6723, 0.7698,  ..., 0.7578, 0.7708, 0.5000],
         [0.2187, 0.3277, 0.2302,  ..., 0.2422, 0.2292, 0.5000]],
        [[0.7405, 0.5000, 0.5000,  ..., 0.7816, 0.5000, 0.7983],
         [0.2595, 0.5000, 0.5000,  ..., 0.2184, 0.5000, 0.2017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:44,691 [Process: 0] Synchronize training processes
2024-08-18 14:39:44,691 [Process: 0] Evaluating...
2024-08-18 14:39:44,693 [Process: 0] EPOCH 17:
2024-08-18 14:39:44,695 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7466, 0.7163, 0.5000,  ..., 0.7817, 0.7511, 0.7284],
         [0.2534, 0.2837, 0.5000,  ..., 0.2183, 0.2489, 0.2716]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.4942, 0.7178, 0.7895],
         [0.5000, 0.5000, 0.5000,  ..., 0.5058, 0.2822, 0.2105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7933, 0.6886, 0.5000,  ..., 0.7669, 0.7789, 0.5000],
         [0.2067, 0.3114, 0.5000,  ..., 0.2331, 0.2211, 0.5000]],
        [[0.5168, 0.5000, 0.5000,  ..., 0.7967, 0.5000, 0.7905],
         [0.4832, 0.5000, 0.5000,  ..., 0.2033, 0.5000, 0.2095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7791,  ..., 0.7679, 0.8009, 0.5000],
         [0.5000, 0.5000, 0.2209,  ..., 0.2321, 0.1991, 0.5000]],
        [[0.7604, 0.5000, 0.5000,  ..., 0.7317, 0.7910, 0.7171],
         [0.2396, 0.5000, 0.5000,  ..., 0.2683, 0.2090, 0.2829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:46,046 [Process: 0] Synchronize training processes
2024-08-18 14:39:46,046 [Process: 0] Evaluating...
2024-08-18 14:39:46,048 [Process: 0] EPOCH 18:
2024-08-18 14:39:46,050 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:47,402 [Process: 0] Synchronize training processes
2024-08-18 14:39:47,402 [Process: 0] Evaluating...
2024-08-18 14:39:47,404 [Process: 0] EPOCH 19:
2024-08-18 14:39:47,406 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7586, 0.7745, 0.5000,  ..., 0.7982, 0.7965, 0.7473],
         [0.2414, 0.2255, 0.5000,  ..., 0.2018, 0.2035, 0.2527]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7524, 0.5000, 0.7694],
         [0.5000, 0.5000, 0.5000,  ..., 0.2476, 0.5000, 0.2306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7714,  ..., 0.7742, 0.8289, 0.5000],
         [0.5000, 0.5000, 0.2286,  ..., 0.2258, 0.1711, 0.5000]],
        [[0.7913, 0.5000, 0.8123,  ..., 0.7705, 0.7475, 0.7539],
         [0.2087, 0.5000, 0.1877,  ..., 0.2295, 0.2525, 0.2461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7717, 0.7450, 0.7877,  ..., 0.7444, 0.7817, 0.8121],
         [0.2283, 0.2550, 0.2123,  ..., 0.2556, 0.2183, 0.1879]],
        [[0.7611, 0.5000, 0.5000,  ..., 0.7476, 0.5000, 0.7756],
         [0.2389, 0.5000, 0.5000,  ..., 0.2524, 0.5000, 0.2244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:48,757 [Process: 0] Synchronize training processes
2024-08-18 14:39:48,757 [Process: 0] Evaluating...
2024-08-18 14:39:48,760 [Process: 0] EPOCH 20:
2024-08-18 14:39:48,763 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7647,  ..., 0.7982, 0.7765, 0.5000],
         [0.5000, 0.5000, 0.2353,  ..., 0.2018, 0.2235, 0.5000]],
        [[0.7843, 0.5000, 0.7904,  ..., 0.7958, 0.7905, 0.7558],
         [0.2157, 0.5000, 0.2096,  ..., 0.2042, 0.2095, 0.2442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8295, 0.8424, 0.8192,  ..., 0.6699, 0.7773, 0.8363],
         [0.1705, 0.1576, 0.1808,  ..., 0.3301, 0.2227, 0.1637]],
        [[0.8324, 0.5000, 0.5000,  ..., 0.7884, 0.5000, 0.7917],
         [0.1676, 0.5000, 0.5000,  ..., 0.2116, 0.5000, 0.2083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7715,  ..., 0.7620, 0.7821, 0.5000],
         [0.5000, 0.5000, 0.2285,  ..., 0.2380, 0.2179, 0.5000]],
        [[0.8185, 0.6101, 0.7342,  ..., 0.7911, 0.7953, 0.7465],
         [0.1815, 0.3899, 0.2658,  ..., 0.2089, 0.2047, 0.2535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:50,115 [Process: 0] Synchronize training processes
2024-08-18 14:39:50,115 [Process: 0] Evaluating...
2024-08-18 14:39:50,117 [Process: 0] EPOCH 21:
2024-08-18 14:39:50,119 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:51,473 [Process: 0] Synchronize training processes
2024-08-18 14:39:51,474 [Process: 0] Evaluating...
2024-08-18 14:39:51,481 [Process: 0] EPOCH 22:
2024-08-18 14:39:51,483 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7899, 0.7507, 0.7792,  ..., 0.8262, 0.7849, 0.7764],
         [0.2101, 0.2493, 0.2208,  ..., 0.1738, 0.2151, 0.2236]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7926, 0.5000, 0.7670],
         [0.5000, 0.5000, 0.5000,  ..., 0.2074, 0.5000, 0.2330]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7797,  ..., 0.8312, 0.7776, 0.5000],
         [0.5000, 0.5000, 0.2203,  ..., 0.1688, 0.2224, 0.5000]],
        [[0.7647, 0.5000, 0.7944,  ..., 0.5061, 0.7604, 0.7959],
         [0.2353, 0.5000, 0.2056,  ..., 0.4939, 0.2396, 0.2041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8111, 0.7972, 0.7715,  ..., 0.8171, 0.7824, 0.7534],
         [0.1889, 0.2028, 0.2285,  ..., 0.1829, 0.2176, 0.2466]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.7641],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.2359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:52,836 [Process: 0] Synchronize training processes
2024-08-18 14:39:52,837 [Process: 0] Evaluating...
2024-08-18 14:39:52,839 [Process: 0] EPOCH 23:
2024-08-18 14:39:52,840 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8056,  ..., 0.7834, 0.8268, 0.5000],
         [0.5000, 0.5000, 0.1944,  ..., 0.2166, 0.1732, 0.5000]],
        [[0.8218, 0.5000, 0.5000,  ..., 0.7968, 0.7879, 0.7554],
         [0.1782, 0.5000, 0.5000,  ..., 0.2032, 0.2121, 0.2446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7706, 0.7809, 0.7288,  ..., 0.7962, 0.7733, 0.7760],
         [0.2294, 0.2191, 0.2712,  ..., 0.2038, 0.2267, 0.2240]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8070],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7829,  ..., 0.7775, 0.7769, 0.4935],
         [0.5000, 0.5000, 0.2171,  ..., 0.2225, 0.2231, 0.5065]],
        [[0.7946, 0.5000, 0.8024,  ..., 0.7758, 0.7682, 0.7926],
         [0.2054, 0.5000, 0.1976,  ..., 0.2242, 0.2318, 0.2074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:39:54,191 [Process: 0] Synchronize training processes
2024-08-18 14:39:54,192 [Process: 0] Evaluating...
2024-08-18 14:39:54,193 [Process: 0] EPOCH 24:
2024-08-18 14:39:54,195 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:55,548 [Process: 0] Synchronize training processes
2024-08-18 14:39:55,548 [Process: 0] Evaluating...
2024-08-18 14:39:55,550 [Process: 0] EPOCH 25:
2024-08-18 14:39:55,552 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7569, 0.7678, 0.7803,  ..., 0.7856, 0.8013, 0.7855],
         [0.2431, 0.2322, 0.2197,  ..., 0.2144, 0.1987, 0.2145]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8055],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1945]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7989,  ..., 0.7868, 0.7890, 0.5000],
         [0.5000, 0.5000, 0.2011,  ..., 0.2132, 0.2110, 0.5000]],
        [[0.7865, 0.5000, 0.7916,  ..., 0.8202, 0.7881, 0.7700],
         [0.2135, 0.5000, 0.2084,  ..., 0.1798, 0.2119, 0.2300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-18 14:39:56,906 [Process: 0] Synchronize training processes
2024-08-18 14:39:56,906 [Process: 0] Evaluating...
2024-08-18 14:39:56,908 [Process: 0] EPOCH 26:
2024-08-18 14:39:56,910 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7626, 0.7584, 0.7903,  ..., 0.8117, 0.7989, 0.7786],
         [0.2374, 0.2416, 0.2097,  ..., 0.1883, 0.2011, 0.2214]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8037],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1963]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7743,  ..., 0.7675, 0.7829, 0.5000],
         [0.5000, 0.5000, 0.2257,  ..., 0.2325, 0.2171, 0.5000]],
        [[0.7936, 0.5000, 0.7768,  ..., 0.7928, 0.7856, 0.7535],
         [0.2064, 0.5000, 0.2232,  ..., 0.2072, 0.2144, 0.2465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8057, 0.7765, 0.8108,  ..., 0.8108, 0.8070, 0.8188],
         [0.1943, 0.2235, 0.1892,  ..., 0.1892, 0.1930, 0.1812]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.7912],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.2088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:39:58,265 [Process: 0] Synchronize training processes
2024-08-18 14:39:58,266 [Process: 0] Evaluating...
2024-08-18 14:39:58,267 [Process: 0] EPOCH 27:
2024-08-18 14:39:58,269 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:39:59,623 [Process: 0] Synchronize training processes
2024-08-18 14:39:59,623 [Process: 0] Evaluating...
2024-08-18 14:39:59,625 [Process: 0] EPOCH 28:
2024-08-18 14:39:59,627 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7594,  ..., 0.7607, 0.7649, 0.5000],
         [0.5000, 0.5000, 0.2406,  ..., 0.2393, 0.2351, 0.5000]],
        [[0.7778, 0.5000, 0.7962,  ..., 0.7743, 0.8302, 0.7919],
         [0.2222, 0.5000, 0.2038,  ..., 0.2257, 0.1698, 0.2081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8216, 0.7967, 0.7946,  ..., 0.8123, 0.8159, 0.8043],
         [0.1784, 0.2033, 0.2054,  ..., 0.1877, 0.1841, 0.1957]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.7943],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.2057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7934,  ..., 0.8069, 0.7975, 0.5000],
         [0.5000, 0.5000, 0.2066,  ..., 0.1931, 0.2025, 0.5000]],
        [[0.8069, 0.5000, 0.7998,  ..., 0.8123, 0.8255, 0.7976],
         [0.1931, 0.5000, 0.2002,  ..., 0.1877, 0.1745, 0.2024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-18 14:40:00,982 [Process: 0] Synchronize training processes
2024-08-18 14:40:00,982 [Process: 0] Evaluating...
2024-08-18 14:40:00,984 [Process: 0] EPOCH 29:
2024-08-18 14:40:00,986 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8235, 0.7930, 0.7824,  ..., 0.7983, 0.8189, 0.8010],
         [0.1765, 0.2070, 0.2176,  ..., 0.2017, 0.1811, 0.1990]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8120],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7999,  ..., 0.7976, 0.8074, 0.5000],
         [0.5000, 0.5000, 0.2001,  ..., 0.2024, 0.1926, 0.5000]],
        [[0.7914, 0.5000, 0.8038,  ..., 0.8250, 0.8071, 0.8201],
         [0.2086, 0.5000, 0.1962,  ..., 0.1750, 0.1929, 0.1799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8044, 0.7852, 0.7981,  ..., 0.7995, 0.8262, 0.7980],
         [0.1956, 0.2148, 0.2019,  ..., 0.2005, 0.1738, 0.2020]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8043],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1957]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:02,342 [Process: 0] Synchronize training processes
2024-08-18 14:40:02,343 [Process: 0] Evaluating...
2024-08-18 14:40:02,345 [Process: 0] EPOCH 30:
2024-08-18 14:40:02,347 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:03,712 [Process: 0] Synchronize training processes
2024-08-18 14:40:03,712 [Process: 0] Evaluating...
2024-08-18 14:40:03,714 [Process: 0] EPOCH 31:
2024-08-18 14:40:03,715 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8038,  ..., 0.8090, 0.8004, 0.5000],
         [0.5000, 0.5000, 0.1962,  ..., 0.1910, 0.1996, 0.5000]],
        [[0.7891, 0.5000, 0.8106,  ..., 0.8091, 0.8471, 0.7941],
         [0.2109, 0.5000, 0.1894,  ..., 0.1909, 0.1529, 0.2059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8450, 0.8103, 0.7217,  ..., 0.8002, 0.8225, 0.7734],
         [0.1550, 0.1897, 0.2783,  ..., 0.1998, 0.1775, 0.2266]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.7814, 0.5000, 0.8163],
         [0.5000, 0.5000, 0.5000,  ..., 0.2186, 0.5000, 0.1837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8048,  ..., 0.8174, 0.7938, 0.5000],
         [0.5000, 0.5000, 0.1952,  ..., 0.1826, 0.2062, 0.5000]],
        [[0.8152, 0.5000, 0.8189,  ..., 0.8086, 0.8021, 0.8324],
         [0.1848, 0.5000, 0.1811,  ..., 0.1914, 0.1979, 0.1676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:05,070 [Process: 0] Synchronize training processes
2024-08-18 14:40:05,070 [Process: 0] Evaluating...
2024-08-18 14:40:05,078 [Process: 0] EPOCH 32:
2024-08-18 14:40:05,080 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8146, 0.8109, 0.8033,  ..., 0.8126, 0.8105, 0.8183],
         [0.1854, 0.1891, 0.1967,  ..., 0.1874, 0.1895, 0.1817]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8000, 0.5000, 0.8307],
         [0.5000, 0.5000, 0.5000,  ..., 0.2000, 0.5000, 0.1693]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8064,  ..., 0.8296, 0.8113, 0.5000],
         [0.5000, 0.5000, 0.1936,  ..., 0.1704, 0.1887, 0.5000]],
        [[0.8183, 0.5000, 0.8151,  ..., 0.8087, 0.8130, 0.8042],
         [0.1817, 0.5000, 0.1849,  ..., 0.1913, 0.1870, 0.1958]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8235, 0.8034, 0.8120,  ..., 0.8074, 0.8164, 0.8144],
         [0.1765, 0.1966, 0.1880,  ..., 0.1926, 0.1836, 0.1856]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8106, 0.5000, 0.7925],
         [0.5000, 0.5000, 0.5000,  ..., 0.1894, 0.5000, 0.2075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:06,435 [Process: 0] Synchronize training processes
2024-08-18 14:40:06,435 [Process: 0] Evaluating...
2024-08-18 14:40:06,437 [Process: 0] EPOCH 33:
2024-08-18 14:40:06,439 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:07,791 [Process: 0] Synchronize training processes
2024-08-18 14:40:07,792 [Process: 0] Evaluating...
2024-08-18 14:40:07,794 [Process: 0] EPOCH 34:
2024-08-18 14:40:07,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7825,  ..., 0.7869, 0.8019, 0.5000],
         [0.5000, 0.5000, 0.2175,  ..., 0.2131, 0.1981, 0.5000]],
        [[0.8074, 0.5000, 0.8029,  ..., 0.8102, 0.8166, 0.8026],
         [0.1926, 0.5000, 0.1971,  ..., 0.1898, 0.1834, 0.1974]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8078, 0.8088, 0.8111,  ..., 0.8178, 0.7889, 0.8070],
         [0.1922, 0.1912, 0.1889,  ..., 0.1822, 0.2111, 0.1930]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8120, 0.5000, 0.8214],
         [0.5000, 0.5000, 0.5000,  ..., 0.1880, 0.5000, 0.1786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.7985,  ..., 0.8138, 0.7885, 0.5000],
         [0.5000, 0.5000, 0.2015,  ..., 0.1862, 0.2115, 0.5000]],
        [[0.8133, 0.5000, 0.7947,  ..., 0.8158, 0.8186, 0.7861],
         [0.1867, 0.5000, 0.2053,  ..., 0.1842, 0.1814, 0.2139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:09,138 [Process: 0] Synchronize training processes
2024-08-18 14:40:09,138 [Process: 0] Evaluating...
2024-08-18 14:40:09,140 [Process: 0] EPOCH 35:
2024-08-18 14:40:09,142 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8294, 0.8199, 0.8292,  ..., 0.8311, 0.8189, 0.8388],
         [0.1706, 0.1801, 0.1708,  ..., 0.1689, 0.1811, 0.1612]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8306, 0.5000, 0.8189],
         [0.5000, 0.5000, 0.5000,  ..., 0.1694, 0.5000, 0.1811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8149,  ..., 0.8028, 0.8249, 0.5000],
         [0.5000, 0.5000, 0.1851,  ..., 0.1972, 0.1751, 0.5000]],
        [[0.8003, 0.5000, 0.7981,  ..., 0.7968, 0.8010, 0.8124],
         [0.1997, 0.5000, 0.2019,  ..., 0.2032, 0.1990, 0.1876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8085, 0.8259, 0.8165,  ..., 0.8289, 0.8054, 0.8054],
         [0.1915, 0.1741, 0.1835,  ..., 0.1711, 0.1946, 0.1946]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8299, 0.5000, 0.8061],
         [0.5000, 0.5000, 0.5000,  ..., 0.1701, 0.5000, 0.1939]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:10,476 [Process: 0] Synchronize training processes
2024-08-18 14:40:10,476 [Process: 0] Evaluating...
2024-08-18 14:40:10,478 [Process: 0] EPOCH 36:
2024-08-18 14:40:10,480 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:11,843 [Process: 0] Synchronize training processes
2024-08-18 14:40:11,843 [Process: 0] Evaluating...
2024-08-18 14:40:11,845 [Process: 0] EPOCH 37:
2024-08-18 14:40:11,847 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8287,  ..., 0.8319, 0.8215, 0.5000],
         [0.5000, 0.5000, 0.1713,  ..., 0.1681, 0.1785, 0.5000]],
        [[0.8216, 0.5000, 0.7833,  ..., 0.8110, 0.8101, 0.7898],
         [0.1784, 0.5000, 0.2167,  ..., 0.1890, 0.1899, 0.2102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7912, 0.8119, 0.8245,  ..., 0.8151, 0.8269, 0.8200],
         [0.2088, 0.1881, 0.1755,  ..., 0.1849, 0.1731, 0.1800]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8154, 0.5000, 0.8070],
         [0.5000, 0.5000, 0.5000,  ..., 0.1846, 0.5000, 0.1930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8061,  ..., 0.8034, 0.8011, 0.7920],
         [0.5000, 0.5000, 0.1939,  ..., 0.1966, 0.1989, 0.2080]],
        [[0.8103, 0.8221, 0.7990,  ..., 0.8087, 0.8217, 0.7918],
         [0.1897, 0.1779, 0.2010,  ..., 0.1913, 0.1783, 0.2082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:13,203 [Process: 0] Synchronize training processes
2024-08-18 14:40:13,203 [Process: 0] Evaluating...
2024-08-18 14:40:13,205 [Process: 0] EPOCH 38:
2024-08-18 14:40:13,207 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8193, 0.8303, 0.5000,  ..., 0.8123, 0.8205, 0.8309],
         [0.1807, 0.1697, 0.5000,  ..., 0.1877, 0.1795, 0.1691]],
        [[0.8289, 0.5000, 0.5000,  ..., 0.8200, 0.5000, 0.8167],
         [0.1711, 0.5000, 0.5000,  ..., 0.1800, 0.5000, 0.1833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.8015,  ..., 0.8084, 0.8104, 0.7940],
         [0.5000, 0.5000, 0.1985,  ..., 0.1916, 0.1896, 0.2060]],
        [[0.8200, 0.8016, 0.7942,  ..., 0.8090, 0.8119, 0.7845],
         [0.1800, 0.1984, 0.2058,  ..., 0.1910, 0.1881, 0.2155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8263, 0.8151, 0.5000,  ..., 0.8142, 0.8151, 0.8474],
         [0.1737, 0.1849, 0.5000,  ..., 0.1858, 0.1849, 0.1526]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8260, 0.5000, 0.8221],
         [0.5000, 0.5000, 0.5000,  ..., 0.1740, 0.5000, 0.1779]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:14,559 [Process: 0] Synchronize training processes
2024-08-18 14:40:14,559 [Process: 0] Evaluating...
2024-08-18 14:40:14,561 [Process: 0] EPOCH 39:
2024-08-18 14:40:14,563 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:15,916 [Process: 0] Synchronize training processes
2024-08-18 14:40:15,916 [Process: 0] Evaluating...
2024-08-18 14:40:15,918 [Process: 0] EPOCH 40:
2024-08-18 14:40:15,920 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7789, 0.5000, 0.8054,  ..., 0.8156, 0.8033, 0.8292],
         [0.2211, 0.5000, 0.1946,  ..., 0.1844, 0.1967, 0.1708]],
        [[0.8015, 0.5000, 0.8073,  ..., 0.8170, 0.7980, 0.8171],
         [0.1985, 0.5000, 0.1927,  ..., 0.1830, 0.2020, 0.1829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8559, 0.8390, 0.5000,  ..., 0.8294, 0.8311, 0.8370],
         [0.1441, 0.1610, 0.5000,  ..., 0.1706, 0.1689, 0.1630]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8505],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1495]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8272, 0.5000, 0.8171,  ..., 0.8355, 0.8211, 0.8153],
         [0.1728, 0.5000, 0.1829,  ..., 0.1645, 0.1789, 0.1847]],
        [[0.8167, 0.5000, 0.8262,  ..., 0.8036, 0.8088, 0.8071],
         [0.1833, 0.5000, 0.1738,  ..., 0.1964, 0.1912, 0.1929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:17,271 [Process: 0] Synchronize training processes
2024-08-18 14:40:17,272 [Process: 0] Evaluating...
2024-08-18 14:40:17,274 [Process: 0] EPOCH 41:
2024-08-18 14:40:17,276 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8466, 0.8418, 0.5000,  ..., 0.8406, 0.8407, 0.8433],
         [0.1534, 0.1582, 0.5000,  ..., 0.1594, 0.1593, 0.1567]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8654],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8411, 0.5000, 0.8302,  ..., 0.8119, 0.8100, 0.8112],
         [0.1589, 0.5000, 0.1698,  ..., 0.1881, 0.1900, 0.1888]],
        [[0.8450, 0.5000, 0.8212,  ..., 0.8365, 0.8305, 0.7896],
         [0.1550, 0.5000, 0.1788,  ..., 0.1635, 0.1695, 0.2104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8440, 0.8596, 0.8599,  ..., 0.8401, 0.8454, 0.8434],
         [0.1560, 0.1404, 0.1401,  ..., 0.1599, 0.1546, 0.1566]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8480],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:18,627 [Process: 0] Synchronize training processes
2024-08-18 14:40:18,627 [Process: 0] Evaluating...
2024-08-18 14:40:18,636 [Process: 0] EPOCH 42:
2024-08-18 14:40:18,638 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:19,991 [Process: 0] Synchronize training processes
2024-08-18 14:40:19,991 [Process: 0] Evaluating...
2024-08-18 14:40:19,993 [Process: 0] EPOCH 43:
2024-08-18 14:40:19,995 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8251, 0.5000, 0.8235,  ..., 0.8237, 0.8165, 0.8319],
         [0.1749, 0.5000, 0.1765,  ..., 0.1763, 0.1835, 0.1681]],
        [[0.8344, 0.5000, 0.8273,  ..., 0.8200, 0.8403, 0.8287],
         [0.1656, 0.5000, 0.1727,  ..., 0.1800, 0.1597, 0.1713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8517, 0.8641, 0.8513,  ..., 0.8578, 0.8534, 0.8536],
         [0.1483, 0.1359, 0.1487,  ..., 0.1422, 0.1466, 0.1464]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8428],
         [0.5000, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8344, 0.5000, 0.8334,  ..., 0.8225, 0.8329, 0.8229],
         [0.1656, 0.5000, 0.1666,  ..., 0.1775, 0.1671, 0.1771]],
        [[0.8255, 0.5000, 0.8292,  ..., 0.8300, 0.8472, 0.7993],
         [0.1745, 0.5000, 0.1708,  ..., 0.1700, 0.1528, 0.2007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:21,348 [Process: 0] Synchronize training processes
2024-08-18 14:40:21,348 [Process: 0] Evaluating...
2024-08-18 14:40:21,350 [Process: 0] EPOCH 44:
2024-08-18 14:40:21,352 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8636, 0.8595, 0.8629,  ..., 0.8611, 0.8681, 0.8609],
         [0.1364, 0.1405, 0.1371,  ..., 0.1389, 0.1319, 0.1391]],
        [[0.8579, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8538],
         [0.1421, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8224, 0.5000, 0.8264,  ..., 0.8262, 0.8180, 0.8079],
         [0.1776, 0.5000, 0.1736,  ..., 0.1738, 0.1820, 0.1921]],
        [[0.8469, 0.8406, 0.8231,  ..., 0.8309, 0.8345, 0.8375],
         [0.1531, 0.1594, 0.1769,  ..., 0.1691, 0.1655, 0.1625]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8587, 0.8532, 0.8595,  ..., 0.8671, 0.8653, 0.8676],
         [0.1413, 0.1468, 0.1405,  ..., 0.1329, 0.1347, 0.1324]],
        [[0.8651, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.8746],
         [0.1349, 0.5000, 0.5000,  ..., 0.5000, 0.5000, 0.1254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:22,706 [Process: 0] Synchronize training processes
2024-08-18 14:40:22,707 [Process: 0] Evaluating...
2024-08-18 14:40:22,709 [Process: 0] EPOCH 45:
2024-08-18 14:40:22,710 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8238, 0.5000, 0.8357,  ..., 0.8105, 0.8460, 0.8343],
         [0.1762, 0.5000, 0.1643,  ..., 0.1895, 0.1540, 0.1657]],
        [[0.8426, 0.8157, 0.8344,  ..., 0.8457, 0.8395, 0.8308],
         [0.1574, 0.1843, 0.1656,  ..., 0.1543, 0.1605, 0.1692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8639, 0.8572, 0.8753,  ..., 0.8655, 0.8632, 0.8694],
         [0.1361, 0.1428, 0.1247,  ..., 0.1345, 0.1368, 0.1306]],
        [[0.8627, 0.5000, 0.5000,  ..., 0.8625, 0.5000, 0.8568],
         [0.1373, 0.5000, 0.5000,  ..., 0.1375, 0.5000, 0.1432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8137, 0.5000, 0.8426,  ..., 0.8306, 0.8337, 0.8292],
         [0.1863, 0.5000, 0.1574,  ..., 0.1694, 0.1663, 0.1708]],
        [[0.8124, 0.8386, 0.8389,  ..., 0.8218, 0.8436, 0.8318],
         [0.1876, 0.1614, 0.1611,  ..., 0.1782, 0.1564, 0.1682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:24,064 [Process: 0] Synchronize training processes
2024-08-18 14:40:24,064 [Process: 0] Evaluating...
2024-08-18 14:40:24,066 [Process: 0] EPOCH 46:
2024-08-18 14:40:24,068 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:25,445 [Process: 0] Synchronize training processes
2024-08-18 14:40:25,445 [Process: 0] Evaluating...
2024-08-18 14:40:25,447 [Process: 0] EPOCH 47:
2024-08-18 14:40:25,449 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8540, 0.8481, 0.8598,  ..., 0.8476, 0.8597, 0.8637],
         [0.1460, 0.1519, 0.1402,  ..., 0.1524, 0.1403, 0.1363]],
        [[0.8538, 0.5000, 0.5000,  ..., 0.8582, 0.5000, 0.8664],
         [0.1462, 0.5000, 0.5000,  ..., 0.1418, 0.5000, 0.1336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8412, 0.5000, 0.8447,  ..., 0.8498, 0.8389, 0.8411],
         [0.1588, 0.5000, 0.1553,  ..., 0.1502, 0.1611, 0.1589]],
        [[0.8460, 0.5000, 0.5117,  ..., 0.8543, 0.8417, 0.8476],
         [0.1540, 0.5000, 0.4883,  ..., 0.1457, 0.1583, 0.1524]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8532, 0.8502, 0.8624,  ..., 0.8463, 0.8482, 0.6327],
         [0.1468, 0.1498, 0.1376,  ..., 0.1537, 0.1518, 0.3673]],
        [[0.8509, 0.5000, 0.5000,  ..., 0.8565, 0.5000, 0.8518],
         [0.1491, 0.5000, 0.5000,  ..., 0.1435, 0.5000, 0.1482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:26,782 [Process: 0] Synchronize training processes
2024-08-18 14:40:26,782 [Process: 0] Evaluating...
2024-08-18 14:40:26,784 [Process: 0] EPOCH 48:
2024-08-18 14:40:26,786 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8318, 0.5000, 0.8338,  ..., 0.8249, 0.8407, 0.8220],
         [0.1682, 0.5000, 0.1662,  ..., 0.1751, 0.1593, 0.1780]],
        [[0.8286, 0.8366, 0.8283,  ..., 0.8404, 0.8486, 0.8464],
         [0.1714, 0.1634, 0.1717,  ..., 0.1596, 0.1514, 0.1536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8444, 0.8446, 0.8534,  ..., 0.8471, 0.8475, 0.8480],
         [0.1556, 0.1554, 0.1466,  ..., 0.1529, 0.1525, 0.1520]],
        [[0.8466, 0.5000, 0.5000,  ..., 0.8674, 0.5000, 0.8480],
         [0.1534, 0.5000, 0.5000,  ..., 0.1326, 0.5000, 0.1520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8279, 0.5000, 0.8178,  ..., 0.8336, 0.8210, 0.8211],
         [0.1721, 0.5000, 0.1822,  ..., 0.1664, 0.1790, 0.1789]],
        [[0.8337, 0.8359, 0.8343,  ..., 0.8378, 0.8412, 0.8160],
         [0.1663, 0.1641, 0.1657,  ..., 0.1622, 0.1588, 0.1840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:28,156 [Process: 0] Synchronize training processes
2024-08-18 14:40:28,157 [Process: 0] Evaluating...
2024-08-18 14:40:28,158 [Process: 0] EPOCH 49:
2024-08-18 14:40:28,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:29,517 [Process: 0] Synchronize training processes
2024-08-18 14:40:29,517 [Process: 0] Evaluating...
2024-08-18 14:40:29,519 [Process: 0] EPOCH 50:
2024-08-18 14:40:29,521 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8544, 0.8591, 0.8483,  ..., 0.8451, 0.8546, 0.8529],
         [0.1456, 0.1409, 0.1517,  ..., 0.1549, 0.1454, 0.1471]],
        [[0.8577, 0.5000, 0.5000,  ..., 0.8513, 0.5000, 0.8588],
         [0.1423, 0.5000, 0.5000,  ..., 0.1487, 0.5000, 0.1412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8325, 0.5000, 0.8389,  ..., 0.8392, 0.8442, 0.8408],
         [0.1675, 0.5000, 0.1611,  ..., 0.1608, 0.1558, 0.1592]],
        [[0.8227, 0.8355, 0.8254,  ..., 0.8400, 0.8274, 0.8561],
         [0.1773, 0.1645, 0.1746,  ..., 0.1600, 0.1726, 0.1439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8487, 0.8532, 0.8561,  ..., 0.8563, 0.8509, 0.8617],
         [0.1513, 0.1468, 0.1439,  ..., 0.1437, 0.1491, 0.1383]],
        [[0.8549, 0.5000, 0.5000,  ..., 0.8558, 0.5000, 0.8587],
         [0.1451, 0.5000, 0.5000,  ..., 0.1442, 0.5000, 0.1413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:30,868 [Process: 0] Synchronize training processes
2024-08-18 14:40:30,868 [Process: 0] Evaluating...
2024-08-18 14:40:30,870 [Process: 0] EPOCH 51:
2024-08-18 14:40:30,872 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8460, 0.5000, 0.8427,  ..., 0.8516, 0.8395, 0.8527],
         [0.1540, 0.5000, 0.1573,  ..., 0.1484, 0.1605, 0.1473]],
        [[0.8326, 0.8237, 0.8270,  ..., 0.8465, 0.8512, 0.8456],
         [0.1674, 0.1763, 0.1730,  ..., 0.1535, 0.1488, 0.1544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8603, 0.8681, 0.8696,  ..., 0.8644, 0.8723, 0.8605],
         [0.1397, 0.1319, 0.1304,  ..., 0.1356, 0.1277, 0.1395]],
        [[0.8608, 0.5000, 0.5000,  ..., 0.8606, 0.5000, 0.8594],
         [0.1392, 0.5000, 0.5000,  ..., 0.1394, 0.5000, 0.1406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8587, 0.5000, 0.8565,  ..., 0.8607, 0.8589, 0.8560],
         [0.1413, 0.5000, 0.1435,  ..., 0.1393, 0.1411, 0.1440]],
        [[0.8536, 0.8509, 0.8567,  ..., 0.8525, 0.8573, 0.8514],
         [0.1464, 0.1491, 0.1433,  ..., 0.1475, 0.1427, 0.1486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:32,217 [Process: 0] Synchronize training processes
2024-08-18 14:40:32,217 [Process: 0] Evaluating...
2024-08-18 14:40:32,226 [Process: 0] EPOCH 52:
2024-08-18 14:40:32,228 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:33,582 [Process: 0] Synchronize training processes
2024-08-18 14:40:33,582 [Process: 0] Evaluating...
2024-08-18 14:40:33,584 [Process: 0] EPOCH 53:
2024-08-18 14:40:33,586 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8658, 0.8588, 0.8799,  ..., 0.8730, 0.8635, 0.8728],
         [0.1342, 0.1412, 0.1201,  ..., 0.1270, 0.1365, 0.1272]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8665, 0.5000, 0.8621],
         [0.5000, 0.5000, 0.5000,  ..., 0.1335, 0.5000, 0.1379]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8699, 0.5000, 0.8600,  ..., 0.8598, 0.8669, 0.8584],
         [0.1301, 0.5000, 0.1400,  ..., 0.1402, 0.1331, 0.1416]],
        [[0.8537, 0.8655, 0.8614,  ..., 0.8679, 0.8838, 0.8779],
         [0.1463, 0.1345, 0.1386,  ..., 0.1321, 0.1162, 0.1221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8689, 0.8592, 0.8598,  ..., 0.8549, 0.8660, 0.8658],
         [0.1311, 0.1408, 0.1402,  ..., 0.1451, 0.1340, 0.1342]],
        [[0.5000, 0.5000, 0.5000,  ..., 0.8752, 0.5000, 0.8600],
         [0.5000, 0.5000, 0.5000,  ..., 0.1248, 0.5000, 0.1400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:34,940 [Process: 0] Synchronize training processes
2024-08-18 14:40:34,940 [Process: 0] Evaluating...
2024-08-18 14:40:34,942 [Process: 0] EPOCH 54:
2024-08-18 14:40:34,944 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8664, 0.8670, 0.8521,  ..., 0.8632, 0.8572, 0.8542],
         [0.1336, 0.1330, 0.1479,  ..., 0.1368, 0.1428, 0.1458]],
        [[0.8569, 0.8599, 0.8540,  ..., 0.8648, 0.8659, 0.8600],
         [0.1431, 0.1401, 0.1460,  ..., 0.1352, 0.1341, 0.1400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8624, 0.8690, 0.8598,  ..., 0.8744, 0.8574, 0.8627],
         [0.1376, 0.1310, 0.1402,  ..., 0.1256, 0.1426, 0.1373]],
        [[0.8715, 0.5000, 0.5000,  ..., 0.8631, 0.5000, 0.8641],
         [0.1285, 0.5000, 0.5000,  ..., 0.1369, 0.5000, 0.1359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8519, 0.8449, 0.8534,  ..., 0.8516, 0.8550, 0.8621],
         [0.1481, 0.1551, 0.1466,  ..., 0.1484, 0.1450, 0.1379]],
        [[0.8536, 0.8517, 0.8604,  ..., 0.8494, 0.8713, 0.8733],
         [0.1464, 0.1483, 0.1396,  ..., 0.1506, 0.1287, 0.1267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:36,299 [Process: 0] Synchronize training processes
2024-08-18 14:40:36,299 [Process: 0] Evaluating...
2024-08-18 14:40:36,301 [Process: 0] EPOCH 55:
2024-08-18 14:40:36,303 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:37,658 [Process: 0] Synchronize training processes
2024-08-18 14:40:37,659 [Process: 0] Evaluating...
2024-08-18 14:40:37,660 [Process: 0] EPOCH 56:
2024-08-18 14:40:37,663 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8535, 0.8604, 0.8590,  ..., 0.8639, 0.8556, 0.8737],
         [0.1465, 0.1396, 0.1410,  ..., 0.1361, 0.1444, 0.1263]],
        [[0.8630, 0.5000, 0.5000,  ..., 0.8603, 0.5000, 0.8692],
         [0.1370, 0.5000, 0.5000,  ..., 0.1397, 0.5000, 0.1308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8528, 0.8533, 0.8573,  ..., 0.8548, 0.8538, 0.8543],
         [0.1472, 0.1467, 0.1427,  ..., 0.1452, 0.1462, 0.1457]],
        [[0.8502, 0.8597, 0.8609,  ..., 0.8567, 0.8708, 0.8596],
         [0.1498, 0.1403, 0.1391,  ..., 0.1433, 0.1292, 0.1404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8753, 0.8709, 0.8655,  ..., 0.8701, 0.8654, 0.8755],
         [0.1247, 0.1291, 0.1345,  ..., 0.1299, 0.1346, 0.1245]],
        [[0.8762, 0.5000, 0.5000,  ..., 0.8711, 0.5000, 0.8673],
         [0.1238, 0.5000, 0.5000,  ..., 0.1289, 0.5000, 0.1327]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:39,031 [Process: 0] Synchronize training processes
2024-08-18 14:40:39,032 [Process: 0] Evaluating...
2024-08-18 14:40:39,034 [Process: 0] EPOCH 57:
2024-08-18 14:40:39,035 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8516, 0.8420, 0.8517,  ..., 0.8506, 0.8397, 0.8508],
         [0.1484, 0.1580, 0.1483,  ..., 0.1494, 0.1603, 0.1492]],
        [[0.8563, 0.8425, 0.8299,  ..., 0.8340, 0.8585, 0.8536],
         [0.1437, 0.1575, 0.1701,  ..., 0.1660, 0.1415, 0.1464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8712, 0.8639, 0.8805,  ..., 0.8761, 0.8736, 0.8715],
         [0.1288, 0.1361, 0.1195,  ..., 0.1239, 0.1264, 0.1285]],
        [[0.8795, 0.5000, 0.5000,  ..., 0.8696, 0.5000, 0.8710],
         [0.1205, 0.5000, 0.5000,  ..., 0.1304, 0.5000, 0.1290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8498, 0.8467, 0.8400,  ..., 0.8448, 0.8461, 0.8454],
         [0.1502, 0.1533, 0.1600,  ..., 0.1552, 0.1539, 0.1546]],
        [[0.8373, 0.8524, 0.8327,  ..., 0.8398, 0.8404, 0.8521],
         [0.1627, 0.1476, 0.1673,  ..., 0.1602, 0.1596, 0.1479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:40,387 [Process: 0] Synchronize training processes
2024-08-18 14:40:40,387 [Process: 0] Evaluating...
2024-08-18 14:40:40,389 [Process: 0] EPOCH 58:
2024-08-18 14:40:40,391 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:41,743 [Process: 0] Synchronize training processes
2024-08-18 14:40:41,744 [Process: 0] Evaluating...
2024-08-18 14:40:41,745 [Process: 0] EPOCH 59:
2024-08-18 14:40:41,747 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8611, 0.8609, 0.8557,  ..., 0.8532, 0.8569, 0.8622],
         [0.1389, 0.1391, 0.1443,  ..., 0.1468, 0.1431, 0.1378]],
        [[0.8587, 0.8536, 0.5000,  ..., 0.8580, 0.5000, 0.8610],
         [0.1413, 0.1464, 0.5000,  ..., 0.1420, 0.5000, 0.1390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8451, 0.8352, 0.8361,  ..., 0.8388, 0.8357, 0.8455],
         [0.1549, 0.1648, 0.1639,  ..., 0.1612, 0.1643, 0.1545]],
        [[0.8322, 0.8404, 0.8429,  ..., 0.8419, 0.8504, 0.8456],
         [0.1678, 0.1596, 0.1571,  ..., 0.1581, 0.1496, 0.1544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:40:43,102 [Process: 0] Synchronize training processes
2024-08-18 14:40:43,102 [Process: 0] Evaluating...
2024-08-18 14:40:43,104 [Process: 0] EPOCH 60:
2024-08-18 14:40:43,106 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.8516, 0.8556, 0.8486,  ..., 0.8554, 0.8515, 0.8525],
         [0.1484, 0.1444, 0.1514,  ..., 0.1446, 0.1485, 0.1475]],
        [[0.8468, 0.5000, 0.8498,  ..., 0.8498, 0.5000, 0.8507],
         [0.1532, 0.5000, 0.1502,  ..., 0.1502, 0.5000, 0.1493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8460, 0.8495, 0.8483,  ..., 0.8429, 0.8448, 0.8433],
         [0.1540, 0.1505, 0.1517,  ..., 0.1571, 0.1552, 0.1567]],
        [[0.8545, 0.8545, 0.8511,  ..., 0.8539, 0.8628, 0.8501],
         [0.1455, 0.1455, 0.1489,  ..., 0.1461, 0.1372, 0.1499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8683, 0.8652, 0.8650,  ..., 0.8658, 0.8620, 0.8730],
         [0.1317, 0.1348, 0.1350,  ..., 0.1342, 0.1380, 0.1270]],
        [[0.8616, 0.8702, 0.8653,  ..., 0.5000, 0.8602, 0.8666],
         [0.1384, 0.1298, 0.1347,  ..., 0.5000, 0.1398, 0.1334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:40:44,459 [Process: 0] Synchronize training processes
2024-08-18 14:40:44,459 [Process: 0] Evaluating...
2024-08-18 14:40:44,461 [Process: 0] EPOCH 61:
2024-08-18 14:40:44,463 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:45,815 [Process: 0] Synchronize training processes
2024-08-18 14:40:45,815 [Process: 0] Evaluating...
2024-08-18 14:40:45,823 [Process: 0] EPOCH 62:
2024-08-18 14:40:45,825 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8393, 0.8664, 0.8470,  ..., 0.8522, 0.8531, 0.8492],
         [0.1607, 0.1336, 0.1530,  ..., 0.1478, 0.1469, 0.1508]],
        [[0.8646, 0.8599, 0.8645,  ..., 0.8577, 0.8607, 0.8685],
         [0.1354, 0.1401, 0.1355,  ..., 0.1423, 0.1393, 0.1315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8870, 0.8906, 0.8909,  ..., 0.8872, 0.8949, 0.8844],
         [0.1130, 0.1094, 0.1091,  ..., 0.1128, 0.1051, 0.1156]],
        [[0.5000, 0.8802, 0.8927,  ..., 0.5000, 0.8891, 0.8798],
         [0.5000, 0.1198, 0.1073,  ..., 0.5000, 0.1109, 0.1202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8626, 0.5000, 0.8601,  ..., 0.8599, 0.8622, 0.8674],
         [0.1374, 0.5000, 0.1399,  ..., 0.1401, 0.1378, 0.1326]],
        [[0.8665, 0.8717, 0.8702,  ..., 0.8641, 0.8715, 0.8649],
         [0.1335, 0.1283, 0.1298,  ..., 0.1359, 0.1285, 0.1351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-18 14:40:47,181 [Process: 0] Synchronize training processes
2024-08-18 14:40:47,181 [Process: 0] Evaluating...
2024-08-18 14:40:47,183 [Process: 0] EPOCH 63:
2024-08-18 14:40:47,185 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8865, 0.8907, 0.8812,  ..., 0.8884, 0.8872, 0.8878],
         [0.1135, 0.1093, 0.1188,  ..., 0.1116, 0.1128, 0.1122]],
        [[0.5000, 0.5000, 0.8941,  ..., 0.5000, 0.8820, 0.8844],
         [0.5000, 0.5000, 0.1059,  ..., 0.5000, 0.1180, 0.1156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8686, 0.5000, 0.8559,  ..., 0.8570, 0.8569, 0.8574],
         [0.1314, 0.5000, 0.1441,  ..., 0.1430, 0.1431, 0.1426]],
        [[0.8684, 0.8615, 0.8704,  ..., 0.8697, 0.8784, 0.8709],
         [0.1316, 0.1385, 0.1296,  ..., 0.1303, 0.1216, 0.1291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8831, 0.8837, 0.8800,  ..., 0.8833, 0.8911, 0.8877],
         [0.1169, 0.1163, 0.1200,  ..., 0.1167, 0.1089, 0.1123]],
        [[0.5000, 0.5000, 0.8927,  ..., 0.5000, 0.8862, 0.8909],
         [0.5000, 0.5000, 0.1073,  ..., 0.5000, 0.1138, 0.1091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:48,538 [Process: 0] Synchronize training processes
2024-08-18 14:40:48,538 [Process: 0] Evaluating...
2024-08-18 14:40:48,540 [Process: 0] EPOCH 64:
2024-08-18 14:40:48,542 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:49,894 [Process: 0] Synchronize training processes
2024-08-18 14:40:49,894 [Process: 0] Evaluating...
2024-08-18 14:40:49,896 [Process: 0] EPOCH 65:
2024-08-18 14:40:49,898 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8586, 0.5000, 0.8624,  ..., 0.8646, 0.8597, 0.8663],
         [0.1414, 0.5000, 0.1376,  ..., 0.1354, 0.1403, 0.1337]],
        [[0.8643, 0.8660, 0.8635,  ..., 0.8644, 0.8610, 0.8630],
         [0.1357, 0.1340, 0.1365,  ..., 0.1356, 0.1390, 0.1370]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8868, 0.8872, 0.8857,  ..., 0.8815, 0.8855, 0.8816],
         [0.1132, 0.1128, 0.1143,  ..., 0.1185, 0.1145, 0.1184]],
        [[0.5000, 0.5000, 0.8886,  ..., 0.5000, 0.8795, 0.8855],
         [0.5000, 0.5000, 0.1114,  ..., 0.5000, 0.1205, 0.1145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8647, 0.5000, 0.8650,  ..., 0.8636, 0.8594, 0.8683],
         [0.1353, 0.5000, 0.1350,  ..., 0.1364, 0.1406, 0.1317]],
        [[0.8682, 0.8657, 0.8602,  ..., 0.8666, 0.8771, 0.8692],
         [0.1318, 0.1343, 0.1398,  ..., 0.1334, 0.1229, 0.1308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:51,253 [Process: 0] Synchronize training processes
2024-08-18 14:40:51,253 [Process: 0] Evaluating...
2024-08-18 14:40:51,255 [Process: 0] EPOCH 66:
2024-08-18 14:40:51,257 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8814, 0.8845, 0.8866,  ..., 0.8815, 0.8860, 0.8885],
         [0.1186, 0.1155, 0.1134,  ..., 0.1185, 0.1140, 0.1115]],
        [[0.5000, 0.5000, 0.8822,  ..., 0.5000, 0.8825, 0.8870],
         [0.5000, 0.5000, 0.1178,  ..., 0.5000, 0.1175, 0.1130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8617, 0.5000, 0.8594,  ..., 0.8611, 0.8566, 0.8582],
         [0.1383, 0.5000, 0.1406,  ..., 0.1389, 0.1434, 0.1418]],
        [[0.8680, 0.8594, 0.8693,  ..., 0.8713, 0.8718, 0.8645],
         [0.1320, 0.1406, 0.1307,  ..., 0.1287, 0.1282, 0.1355]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8823, 0.8831, 0.8873,  ..., 0.8830, 0.8851, 0.8841],
         [0.1177, 0.1169, 0.1127,  ..., 0.1170, 0.1149, 0.1159]],
        [[0.5000, 0.5000, 0.8844,  ..., 0.5000, 0.8825, 0.8829],
         [0.5000, 0.5000, 0.1156,  ..., 0.5000, 0.1175, 0.1171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:52,610 [Process: 0] Synchronize training processes
2024-08-18 14:40:52,611 [Process: 0] Evaluating...
2024-08-18 14:40:52,613 [Process: 0] EPOCH 67:
2024-08-18 14:40:52,615 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:53,967 [Process: 0] Synchronize training processes
2024-08-18 14:40:53,967 [Process: 0] Evaluating...
2024-08-18 14:40:53,969 [Process: 0] EPOCH 68:
2024-08-18 14:40:53,971 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8689, 0.5000, 0.8627,  ..., 0.8673, 0.8624, 0.8666],
         [0.1311, 0.5000, 0.1373,  ..., 0.1327, 0.1376, 0.1334]],
        [[0.8675, 0.8672, 0.8640,  ..., 0.8659, 0.8672, 0.8648],
         [0.1325, 0.1328, 0.1360,  ..., 0.1341, 0.1328, 0.1352]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8860, 0.8872, 0.8834,  ..., 0.8883, 0.8838, 0.8848],
         [0.1140, 0.1128, 0.1166,  ..., 0.1117, 0.1162, 0.1152]],
        [[0.5000, 0.5000, 0.8813,  ..., 0.5000, 0.8819, 0.8901],
         [0.5000, 0.5000, 0.1187,  ..., 0.5000, 0.1181, 0.1099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8732, 0.5000, 0.8692,  ..., 0.8724, 0.8670, 0.8692],
         [0.1268, 0.5000, 0.1308,  ..., 0.1276, 0.1330, 0.1308]],
        [[0.8723, 0.8720, 0.8679,  ..., 0.8706, 0.8696, 0.8677],
         [0.1277, 0.1280, 0.1321,  ..., 0.1294, 0.1304, 0.1323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:55,323 [Process: 0] Synchronize training processes
2024-08-18 14:40:55,323 [Process: 0] Evaluating...
2024-08-18 14:40:55,325 [Process: 0] EPOCH 69:
2024-08-18 14:40:55,327 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8878, 0.8832, 0.8852,  ..., 0.8830, 0.8859, 0.8874],
         [0.1122, 0.1168, 0.1148,  ..., 0.1170, 0.1141, 0.1126]],
        [[0.5000, 0.5000, 0.8828,  ..., 0.5000, 0.8855, 0.8842],
         [0.5000, 0.5000, 0.1172,  ..., 0.5000, 0.1145, 0.1158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8716, 0.5000, 0.8711,  ..., 0.8672, 0.8666, 0.8672],
         [0.1284, 0.5000, 0.1289,  ..., 0.1328, 0.1334, 0.1328]],
        [[0.8742, 0.8784, 0.8663,  ..., 0.8809, 0.8795, 0.8685],
         [0.1258, 0.1216, 0.1337,  ..., 0.1191, 0.1205, 0.1315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8914, 0.8877, 0.8876,  ..., 0.8916, 0.8900, 0.8869],
         [0.1086, 0.1123, 0.1124,  ..., 0.1084, 0.1100, 0.1131]],
        [[0.5000, 0.5000, 0.8844,  ..., 0.5000, 0.8915, 0.8847],
         [0.5000, 0.5000, 0.1156,  ..., 0.5000, 0.1085, 0.1153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:40:56,680 [Process: 0] Synchronize training processes
2024-08-18 14:40:56,681 [Process: 0] Evaluating...
2024-08-18 14:40:56,682 [Process: 0] EPOCH 70:
2024-08-18 14:40:56,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:58,037 [Process: 0] Synchronize training processes
2024-08-18 14:40:58,037 [Process: 0] Evaluating...
2024-08-18 14:40:58,039 [Process: 0] EPOCH 71:
2024-08-18 14:40:58,041 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8798, 0.5000, 0.8799,  ..., 0.8731, 0.8707, 0.8771],
         [0.1202, 0.5000, 0.1201,  ..., 0.1269, 0.1293, 0.1229]],
        [[0.8779, 0.8831, 0.8721,  ..., 0.8852, 0.8742, 0.8848],
         [0.1221, 0.1169, 0.1279,  ..., 0.1148, 0.1258, 0.1152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8905, 0.8858, 0.8872,  ..., 0.8870, 0.8875, 0.8847],
         [0.1095, 0.1142, 0.1128,  ..., 0.1130, 0.1125, 0.1153]],
        [[0.5000, 0.5000, 0.8872,  ..., 0.5000, 0.8914, 0.8879],
         [0.5000, 0.5000, 0.1128,  ..., 0.5000, 0.1086, 0.1121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8834, 0.5000, 0.8796,  ..., 0.8832, 0.8817, 0.8734],
         [0.1166, 0.5000, 0.1204,  ..., 0.1168, 0.1183, 0.1266]],
        [[0.8760, 0.8729, 0.8822,  ..., 0.8815, 0.8769, 0.8761],
         [0.1240, 0.1271, 0.1178,  ..., 0.1185, 0.1231, 0.1239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:40:59,399 [Process: 0] Synchronize training processes
2024-08-18 14:40:59,399 [Process: 0] Evaluating...
2024-08-18 14:40:59,407 [Process: 0] EPOCH 72:
2024-08-18 14:40:59,410 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8913, 0.8946, 0.8970,  ..., 0.8893, 0.8918, 0.8917],
         [0.1087, 0.1054, 0.1030,  ..., 0.1107, 0.1082, 0.1083]],
        [[0.5000, 0.5000, 0.8919,  ..., 0.5000, 0.8949, 0.8912],
         [0.5000, 0.5000, 0.1081,  ..., 0.5000, 0.1051, 0.1088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8904, 0.5000, 0.8798,  ..., 0.8824, 0.8818, 0.8889],
         [0.1096, 0.5000, 0.1202,  ..., 0.1176, 0.1182, 0.1111]],
        [[0.8854, 0.8857, 0.8890,  ..., 0.8796, 0.8844, 0.8906],
         [0.1146, 0.1143, 0.1110,  ..., 0.1204, 0.1156, 0.1094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8872, 0.8912, 0.8905,  ..., 0.8890, 0.8941, 0.8856],
         [0.1128, 0.1088, 0.1095,  ..., 0.1110, 0.1059, 0.1144]],
        [[0.5000, 0.5000, 0.8914,  ..., 0.5000, 0.8908, 0.8860],
         [0.5000, 0.5000, 0.1086,  ..., 0.5000, 0.1092, 0.1140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:00,765 [Process: 0] Synchronize training processes
2024-08-18 14:41:00,766 [Process: 0] Evaluating...
2024-08-18 14:41:00,767 [Process: 0] EPOCH 73:
2024-08-18 14:41:00,769 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8827, 0.5000, 0.8899,  ..., 0.8894, 0.8815, 0.8882],
         [0.1173, 0.5000, 0.1101,  ..., 0.1106, 0.1185, 0.1118]],
        [[0.8843, 0.8882, 0.8878,  ..., 0.8906, 0.8846, 0.8917],
         [0.1157, 0.1118, 0.1122,  ..., 0.1094, 0.1154, 0.1083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8812, 0.8881, 0.8752,  ..., 0.8792, 0.8859, 0.8804],
         [0.1188, 0.1119, 0.1248,  ..., 0.1208, 0.1141, 0.1196]],
        [[0.5000, 0.5000, 0.8856,  ..., 0.5000, 0.8838, 0.8838],
         [0.5000, 0.5000, 0.1144,  ..., 0.5000, 0.1162, 0.1162]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8839, 0.5000, 0.8883,  ..., 0.8867, 0.8891, 0.8944],
         [0.1161, 0.5000, 0.1117,  ..., 0.1133, 0.1109, 0.1056]],
        [[0.8840, 0.8878, 0.8828,  ..., 0.8832, 0.8873, 0.8870],
         [0.1160, 0.1122, 0.1172,  ..., 0.1168, 0.1127, 0.1130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:02,121 [Process: 0] Synchronize training processes
2024-08-18 14:41:02,121 [Process: 0] Evaluating...
2024-08-18 14:41:02,123 [Process: 0] EPOCH 74:
2024-08-18 14:41:02,125 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:03,481 [Process: 0] Synchronize training processes
2024-08-18 14:41:03,481 [Process: 0] Evaluating...
2024-08-18 14:41:03,483 [Process: 0] EPOCH 75:
2024-08-18 14:41:03,485 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8787, 0.8705, 0.8706,  ..., 0.8785, 0.8772, 0.8711],
         [0.1213, 0.1295, 0.1294,  ..., 0.1215, 0.1228, 0.1289]],
        [[0.5000, 0.5000, 0.8812,  ..., 0.5000, 0.8816, 0.8750],
         [0.5000, 0.5000, 0.1188,  ..., 0.5000, 0.1184, 0.1250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8877, 0.5000, 0.8897,  ..., 0.8885, 0.8914, 0.8847],
         [0.1123, 0.5000, 0.1103,  ..., 0.1115, 0.1086, 0.1153]],
        [[0.8923, 0.8877, 0.8887,  ..., 0.8916, 0.8880, 0.8898],
         [0.1077, 0.1123, 0.1113,  ..., 0.1084, 0.1120, 0.1102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8772, 0.8768, 0.8806,  ..., 0.8738, 0.8767, 0.8769],
         [0.1228, 0.1232, 0.1194,  ..., 0.1262, 0.1233, 0.1231]],
        [[0.5000, 0.5000, 0.8744,  ..., 0.5000, 0.8717, 0.8787],
         [0.5000, 0.5000, 0.1256,  ..., 0.5000, 0.1283, 0.1213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:04,836 [Process: 0] Synchronize training processes
2024-08-18 14:41:04,837 [Process: 0] Evaluating...
2024-08-18 14:41:04,839 [Process: 0] EPOCH 76:
2024-08-18 14:41:04,841 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8870, 0.5000, 0.8954,  ..., 0.8885, 0.8896, 0.8884],
         [0.1130, 0.5000, 0.1046,  ..., 0.1115, 0.1104, 0.1116]],
        [[0.8892, 0.8891, 0.8900,  ..., 0.8936, 0.8915, 0.8906],
         [0.1108, 0.1109, 0.1100,  ..., 0.1064, 0.1085, 0.1094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8804, 0.8735, 0.8804,  ..., 0.8764, 0.8795, 0.8791],
         [0.1196, 0.1265, 0.1196,  ..., 0.1236, 0.1205, 0.1209]],
        [[0.5000, 0.5000, 0.8796,  ..., 0.5000, 0.8815, 0.8784],
         [0.5000, 0.5000, 0.1204,  ..., 0.5000, 0.1185, 0.1216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8951, 0.8902, 0.8917,  ..., 0.8887, 0.8922, 0.8852],
         [0.1049, 0.1098, 0.1083,  ..., 0.1113, 0.1078, 0.1148]],
        [[0.8924, 0.8931, 0.8913,  ..., 0.8922, 0.8943, 0.8918],
         [0.1076, 0.1069, 0.1087,  ..., 0.1078, 0.1057, 0.1082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:06,192 [Process: 0] Synchronize training processes
2024-08-18 14:41:06,192 [Process: 0] Evaluating...
2024-08-18 14:41:06,194 [Process: 0] EPOCH 77:
2024-08-18 14:41:06,196 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:07,549 [Process: 0] Synchronize training processes
2024-08-18 14:41:07,550 [Process: 0] Evaluating...
2024-08-18 14:41:07,552 [Process: 0] EPOCH 78:
2024-08-18 14:41:07,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8827, 0.8847, 0.8839,  ..., 0.8863, 0.8844, 0.8855],
         [0.1173, 0.1153, 0.1161,  ..., 0.1137, 0.1156, 0.1145]],
        [[0.5000, 0.5000, 0.8830,  ..., 0.5000, 0.8874, 0.8839],
         [0.5000, 0.5000, 0.1170,  ..., 0.5000, 0.1126, 0.1161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8905, 0.8962, 0.8909,  ..., 0.8955, 0.8948, 0.8919],
         [0.1095, 0.1038, 0.1091,  ..., 0.1045, 0.1052, 0.1081]],
        [[0.8944, 0.8934, 0.8898,  ..., 0.8909, 0.8946, 0.8925],
         [0.1056, 0.1066, 0.1102,  ..., 0.1091, 0.1054, 0.1075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8902, 0.8864, 0.8856,  ..., 0.8887, 0.8905, 0.8882],
         [0.1098, 0.1136, 0.1144,  ..., 0.1113, 0.1095, 0.1118]],
        [[0.5000, 0.5000, 0.8869,  ..., 0.5000, 0.8858, 0.8865],
         [0.5000, 0.5000, 0.1131,  ..., 0.5000, 0.1142, 0.1135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:08,905 [Process: 0] Synchronize training processes
2024-08-18 14:41:08,905 [Process: 0] Evaluating...
2024-08-18 14:41:08,907 [Process: 0] EPOCH 79:
2024-08-18 14:41:08,909 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8970, 0.8984, 0.8974,  ..., 0.8929, 0.8926, 0.8971],
         [0.1030, 0.1016, 0.1026,  ..., 0.1071, 0.1074, 0.1029]],
        [[0.8918, 0.8954, 0.8912,  ..., 0.8929, 0.8958, 0.8973],
         [0.1082, 0.1046, 0.1088,  ..., 0.1071, 0.1042, 0.1027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8890, 0.8933, 0.8910,  ..., 0.8901, 0.8923, 0.8912],
         [0.1110, 0.1067, 0.1090,  ..., 0.1099, 0.1077, 0.1088]],
        [[0.5000, 0.5000, 0.8915,  ..., 0.5000, 0.8906, 0.8902],
         [0.5000, 0.5000, 0.1085,  ..., 0.5000, 0.1094, 0.1098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8957, 0.8938, 0.8922,  ..., 0.9010, 0.8972, 0.8973],
         [0.1043, 0.1062, 0.1078,  ..., 0.0990, 0.1028, 0.1027]],
        [[0.8938, 0.8963, 0.8964,  ..., 0.8988, 0.8957, 0.8955],
         [0.1062, 0.1037, 0.1036,  ..., 0.1012, 0.1043, 0.1045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:10,267 [Process: 0] Synchronize training processes
2024-08-18 14:41:10,267 [Process: 0] Evaluating...
2024-08-18 14:41:10,269 [Process: 0] EPOCH 80:
2024-08-18 14:41:10,271 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:11,618 [Process: 0] Synchronize training processes
2024-08-18 14:41:11,618 [Process: 0] Evaluating...
2024-08-18 14:41:11,620 [Process: 0] EPOCH 81:
2024-08-18 14:41:11,622 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8932, 0.8941, 0.8892,  ..., 0.8897, 0.8924, 0.8895],
         [0.1068, 0.1059, 0.1108,  ..., 0.1103, 0.1076, 0.1105]],
        [[0.5000, 0.5000, 0.8883,  ..., 0.5000, 0.8919, 0.8916],
         [0.5000, 0.5000, 0.1117,  ..., 0.5000, 0.1081, 0.1084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8968, 0.8968, 0.8979,  ..., 0.8980, 0.8965, 0.8964],
         [0.1032, 0.1032, 0.1021,  ..., 0.1020, 0.1035, 0.1036]],
        [[0.8948, 0.9004, 0.8958,  ..., 0.8982, 0.8986, 0.8947],
         [0.1052, 0.0996, 0.1042,  ..., 0.1018, 0.1014, 0.1053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8979, 0.8956, 0.8991,  ..., 0.8945, 0.8969, 0.8946],
         [0.1021, 0.1044, 0.1009,  ..., 0.1055, 0.1031, 0.1054]],
        [[0.5000, 0.5000, 0.8954,  ..., 0.5000, 0.9002, 0.8950],
         [0.5000, 0.5000, 0.1046,  ..., 0.5000, 0.0998, 0.1050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:12,960 [Process: 0] Synchronize training processes
2024-08-18 14:41:12,961 [Process: 0] Evaluating...
2024-08-18 14:41:12,969 [Process: 0] EPOCH 82:
2024-08-18 14:41:12,971 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8985, 0.8989, 0.8984,  ..., 0.8982, 0.9005, 0.8996],
         [0.1015, 0.1011, 0.1016,  ..., 0.1018, 0.0995, 0.1004]],
        [[0.8989, 0.8985, 0.8992,  ..., 0.9025, 0.9047, 0.9038],
         [0.1011, 0.1015, 0.1008,  ..., 0.0975, 0.0953, 0.0962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8948, 0.8990, 0.8998,  ..., 0.8967, 0.8983, 0.8996],
         [0.1052, 0.1010, 0.1002,  ..., 0.1033, 0.1017, 0.1004]],
        [[0.5000, 0.5000, 0.8964,  ..., 0.5000, 0.8956, 0.8967],
         [0.5000, 0.5000, 0.1036,  ..., 0.5000, 0.1044, 0.1033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9027, 0.9011, 0.9012,  ..., 0.8971, 0.9001, 0.9044],
         [0.0973, 0.0989, 0.0988,  ..., 0.1029, 0.0999, 0.0956]],
        [[0.9011, 0.9036, 0.8987,  ..., 0.8994, 0.9061, 0.9053],
         [0.0989, 0.0964, 0.1013,  ..., 0.1006, 0.0939, 0.0947]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:14,321 [Process: 0] Synchronize training processes
2024-08-18 14:41:14,322 [Process: 0] Evaluating...
2024-08-18 14:41:14,323 [Process: 0] EPOCH 83:
2024-08-18 14:41:14,325 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:15,681 [Process: 0] Synchronize training processes
2024-08-18 14:41:15,681 [Process: 0] Evaluating...
2024-08-18 14:41:15,683 [Process: 0] EPOCH 84:
2024-08-18 14:41:15,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8981, 0.9034, 0.9023,  ..., 0.8992, 0.9013, 0.9029],
         [0.1019, 0.0966, 0.0977,  ..., 0.1008, 0.0987, 0.0971]],
        [[0.5000, 0.5000, 0.8977,  ..., 0.5000, 0.8991, 0.9001],
         [0.5000, 0.5000, 0.1023,  ..., 0.5000, 0.1009, 0.0999]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9004, 0.8980, 0.8997,  ..., 0.9057, 0.9063, 0.9017],
         [0.0996, 0.1020, 0.1003,  ..., 0.0943, 0.0937, 0.0983]],
        [[0.9037, 0.9011, 0.9001,  ..., 0.9059, 0.9035, 0.9032],
         [0.0963, 0.0989, 0.0999,  ..., 0.0941, 0.0965, 0.0968]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9015, 0.9050, 0.8982,  ..., 0.9016, 0.8986, 0.9037],
         [0.0985, 0.0950, 0.1018,  ..., 0.0984, 0.1014, 0.0963]],
        [[0.5000, 0.5000, 0.9010,  ..., 0.5000, 0.9012, 0.9006],
         [0.5000, 0.5000, 0.0990,  ..., 0.5000, 0.0988, 0.0994]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:17,039 [Process: 0] Synchronize training processes
2024-08-18 14:41:17,039 [Process: 0] Evaluating...
2024-08-18 14:41:17,041 [Process: 0] EPOCH 85:
2024-08-18 14:41:17,043 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9036, 0.9022, 0.9037,  ..., 0.9065, 0.9081, 0.9035],
         [0.0964, 0.0978, 0.0963,  ..., 0.0935, 0.0919, 0.0965]],
        [[0.9029, 0.9060, 0.9043,  ..., 0.9058, 0.9077, 0.9073],
         [0.0971, 0.0940, 0.0957,  ..., 0.0942, 0.0923, 0.0927]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9050, 0.9086, 0.9062,  ..., 0.9065, 0.9057, 0.9070],
         [0.0950, 0.0914, 0.0938,  ..., 0.0935, 0.0943, 0.0930]],
        [[0.5000, 0.5000, 0.9015,  ..., 0.5000, 0.9025, 0.9059],
         [0.5000, 0.5000, 0.0985,  ..., 0.5000, 0.0975, 0.0941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9050, 0.9035, 0.9046,  ..., 0.9074, 0.9056, 0.9068],
         [0.0950, 0.0965, 0.0954,  ..., 0.0926, 0.0944, 0.0932]],
        [[0.9031, 0.9086, 0.9061,  ..., 0.9064, 0.9101, 0.9025],
         [0.0969, 0.0914, 0.0939,  ..., 0.0936, 0.0899, 0.0975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:18,394 [Process: 0] Synchronize training processes
2024-08-18 14:41:18,394 [Process: 0] Evaluating...
2024-08-18 14:41:18,396 [Process: 0] EPOCH 86:
2024-08-18 14:41:18,398 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:19,754 [Process: 0] Synchronize training processes
2024-08-18 14:41:19,754 [Process: 0] Evaluating...
2024-08-18 14:41:19,756 [Process: 0] EPOCH 87:
2024-08-18 14:41:19,758 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9047, 0.9117, 0.9086,  ..., 0.9045, 0.9055, 0.9074],
         [0.0953, 0.0883, 0.0914,  ..., 0.0955, 0.0945, 0.0926]],
        [[0.5000, 0.5000, 0.9083,  ..., 0.5000, 0.9073, 0.9034],
         [0.5000, 0.5000, 0.0917,  ..., 0.5000, 0.0927, 0.0966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9013, 0.9027, 0.9024,  ..., 0.9045, 0.9031, 0.9031],
         [0.0987, 0.0973, 0.0976,  ..., 0.0955, 0.0969, 0.0969]],
        [[0.9030, 0.9011, 0.9027,  ..., 0.9034, 0.9031, 0.8798],
         [0.0970, 0.0989, 0.0973,  ..., 0.0966, 0.0969, 0.1202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9088, 0.9116, 0.9076,  ..., 0.9077, 0.9115, 0.9105],
         [0.0912, 0.0884, 0.0924,  ..., 0.0923, 0.0885, 0.0895]],
        [[0.5000, 0.5000, 0.9084,  ..., 0.5000, 0.9087, 0.9068],
         [0.5000, 0.5000, 0.0916,  ..., 0.5000, 0.0913, 0.0932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:21,108 [Process: 0] Synchronize training processes
2024-08-18 14:41:21,108 [Process: 0] Evaluating...
2024-08-18 14:41:21,110 [Process: 0] EPOCH 88:
2024-08-18 14:41:21,112 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9005, 0.9006, 0.9031,  ..., 0.9049, 0.9005, 0.8993],
         [0.0995, 0.0994, 0.0969,  ..., 0.0951, 0.0995, 0.1007]],
        [[0.8946, 0.9037, 0.9044,  ..., 0.8923, 0.9001, 0.8994],
         [0.1054, 0.0963, 0.0956,  ..., 0.1077, 0.0999, 0.1006]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9111, 0.9125, 0.9111,  ..., 0.9109, 0.9135, 0.9119],
         [0.0889, 0.0875, 0.0889,  ..., 0.0891, 0.0865, 0.0881]],
        [[0.5000, 0.5000, 0.9089,  ..., 0.5000, 0.9119, 0.9120],
         [0.5000, 0.5000, 0.0911,  ..., 0.5000, 0.0881, 0.0880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:22,468 [Process: 0] Synchronize training processes
2024-08-18 14:41:22,468 [Process: 0] Evaluating...
2024-08-18 14:41:22,470 [Process: 0] EPOCH 89:
2024-08-18 14:41:22,472 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:23,829 [Process: 0] Synchronize training processes
2024-08-18 14:41:23,829 [Process: 0] Evaluating...
2024-08-18 14:41:23,831 [Process: 0] EPOCH 90:
2024-08-18 14:41:23,834 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9025, 0.9025, 0.8976,  ..., 0.9011, 0.8995, 0.8938],
         [0.0975, 0.0975, 0.1024,  ..., 0.0989, 0.1005, 0.1062]],
        [[0.9039, 0.9035, 0.9025,  ..., 0.9016, 0.9054, 0.8964],
         [0.0961, 0.0965, 0.0975,  ..., 0.0984, 0.0946, 0.1036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9133, 0.9123, 0.9108,  ..., 0.9099, 0.9108, 0.9164],
         [0.0867, 0.0877, 0.0892,  ..., 0.0901, 0.0892, 0.0836]],
        [[0.5000, 0.5000, 0.9101,  ..., 0.5000, 0.9127, 0.9118],
         [0.5000, 0.5000, 0.0899,  ..., 0.5000, 0.0873, 0.0882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8984, 0.8994, 0.8993,  ..., 0.9006, 0.8975, 0.9001],
         [0.1016, 0.1006, 0.1007,  ..., 0.0994, 0.1025, 0.0999]],
        [[0.8953, 0.9009, 0.9021,  ..., 0.8994, 0.8975, 0.8897],
         [0.1047, 0.0991, 0.0979,  ..., 0.1006, 0.1025, 0.1103]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9151, 0.9135, 0.9147,  ..., 0.9133, 0.9105, 0.9139],
         [0.0849, 0.0865, 0.0853,  ..., 0.0867, 0.0895, 0.0861]],
        [[0.5000, 0.5000, 0.9144,  ..., 0.5000, 0.9127, 0.9122],
         [0.5000, 0.5000, 0.0856,  ..., 0.5000, 0.0873, 0.0878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:25,193 [Process: 0] Synchronize training processes
2024-08-18 14:41:25,193 [Process: 0] Evaluating...
2024-08-18 14:41:25,195 [Process: 0] EPOCH 91:
2024-08-18 14:41:25,197 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8995, 0.8980, 0.8982,  ..., 0.9041, 0.8993, 0.9007],
         [0.1005, 0.1020, 0.1018,  ..., 0.0959, 0.1007, 0.0993]],
        [[0.8990, 0.8997, 0.9037,  ..., 0.8993, 0.9004, 0.8866],
         [0.1010, 0.1003, 0.0963,  ..., 0.1007, 0.0996, 0.1134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9142, 0.9114, 0.9131,  ..., 0.9136, 0.9125, 0.9144],
         [0.0858, 0.0886, 0.0869,  ..., 0.0864, 0.0875, 0.0856]],
        [[0.5000, 0.5000, 0.9109,  ..., 0.5000, 0.9138, 0.9142],
         [0.5000, 0.5000, 0.0891,  ..., 0.5000, 0.0862, 0.0858]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9016, 0.9011, 0.9024,  ..., 0.9006, 0.9034, 0.9001],
         [0.0984, 0.0989, 0.0976,  ..., 0.0994, 0.0966, 0.0999]],
        [[0.9032, 0.9023, 0.9020,  ..., 0.9023, 0.9041, 0.8890],
         [0.0968, 0.0977, 0.0980,  ..., 0.0977, 0.0959, 0.1110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:26,551 [Process: 0] Synchronize training processes
2024-08-18 14:41:26,551 [Process: 0] Evaluating...
2024-08-18 14:41:26,560 [Process: 0] EPOCH 92:
2024-08-18 14:41:26,562 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:27,914 [Process: 0] Synchronize training processes
2024-08-18 14:41:27,914 [Process: 0] Evaluating...
2024-08-18 14:41:27,916 [Process: 0] EPOCH 93:
2024-08-18 14:41:27,918 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9128, 0.9145, 0.9121,  ..., 0.9134, 0.9100, 0.9103],
         [0.0872, 0.0855, 0.0879,  ..., 0.0866, 0.0900, 0.0897]],
        [[0.5000, 0.5000, 0.9108,  ..., 0.5000, 0.9134, 0.9115],
         [0.5000, 0.5000, 0.0892,  ..., 0.5000, 0.0866, 0.0885]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9004, 0.9049, 0.9043,  ..., 0.9018, 0.9026, 0.9023],
         [0.0996, 0.0951, 0.0957,  ..., 0.0982, 0.0974, 0.0977]],
        [[0.9000, 0.9048, 0.9040,  ..., 0.9018, 0.9002, 0.8999],
         [0.1000, 0.0952, 0.0960,  ..., 0.0982, 0.0998, 0.1001]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9101, 0.9113, 0.9094,  ..., 0.9109, 0.9112, 0.9129],
         [0.0899, 0.0887, 0.0906,  ..., 0.0891, 0.0888, 0.0871]],
        [[0.5000, 0.9084, 0.9112,  ..., 0.5000, 0.9090, 0.9119],
         [0.5000, 0.0916, 0.0888,  ..., 0.5000, 0.0910, 0.0881]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:29,271 [Process: 0] Synchronize training processes
2024-08-18 14:41:29,271 [Process: 0] Evaluating...
2024-08-18 14:41:29,273 [Process: 0] EPOCH 94:
2024-08-18 14:41:29,275 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9030, 0.9027, 0.9045,  ..., 0.9040, 0.9050, 0.8995],
         [0.0970, 0.0973, 0.0955,  ..., 0.0960, 0.0950, 0.1005]],
        [[0.9056, 0.9016, 0.9051,  ..., 0.9060, 0.9070, 0.9039],
         [0.0944, 0.0984, 0.0949,  ..., 0.0940, 0.0930, 0.0961]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9117, 0.9097, 0.9113,  ..., 0.9103, 0.9105, 0.9134],
         [0.0883, 0.0903, 0.0887,  ..., 0.0897, 0.0895, 0.0866]],
        [[0.5000, 0.9130, 0.9119,  ..., 0.5000, 0.9125, 0.9116],
         [0.5000, 0.0870, 0.0881,  ..., 0.5000, 0.0875, 0.0884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9044, 0.9083, 0.9053,  ..., 0.9053, 0.9044, 0.9066],
         [0.0956, 0.0917, 0.0947,  ..., 0.0947, 0.0956, 0.0934]],
        [[0.9065, 0.9061, 0.9044,  ..., 0.9043, 0.9081, 0.9039],
         [0.0935, 0.0939, 0.0956,  ..., 0.0957, 0.0919, 0.0961]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:30,626 [Process: 0] Synchronize training processes
2024-08-18 14:41:30,626 [Process: 0] Evaluating...
2024-08-18 14:41:30,628 [Process: 0] EPOCH 95:
2024-08-18 14:41:30,630 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:31,982 [Process: 0] Synchronize training processes
2024-08-18 14:41:31,982 [Process: 0] Evaluating...
2024-08-18 14:41:31,984 [Process: 0] EPOCH 96:
2024-08-18 14:41:31,986 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9124, 0.9132, 0.9119,  ..., 0.9139, 0.9110, 0.9139],
         [0.0876, 0.0868, 0.0881,  ..., 0.0861, 0.0890, 0.0861]],
        [[0.5000, 0.9133, 0.9124,  ..., 0.5000, 0.9126, 0.9081],
         [0.5000, 0.0867, 0.0876,  ..., 0.5000, 0.0874, 0.0919]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9093, 0.9057, 0.9078,  ..., 0.9047, 0.9072, 0.9048],
         [0.0907, 0.0943, 0.0922,  ..., 0.0953, 0.0928, 0.0952]],
        [[0.9080, 0.9067, 0.9049,  ..., 0.9070, 0.9089, 0.9045],
         [0.0920, 0.0933, 0.0951,  ..., 0.0930, 0.0911, 0.0955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:41:33,340 [Process: 0] Synchronize training processes
2024-08-18 14:41:33,340 [Process: 0] Evaluating...
2024-08-18 14:41:33,342 [Process: 0] EPOCH 97:
2024-08-18 14:41:33,344 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9173, 0.9150, 0.9155,  ..., 0.9152, 0.9159, 0.9161],
         [0.0827, 0.0850, 0.0845,  ..., 0.0848, 0.0841, 0.0839]],
        [[0.5000, 0.9161, 0.9148,  ..., 0.5000, 0.9159, 0.9151],
         [0.5000, 0.0839, 0.0852,  ..., 0.5000, 0.0841, 0.0849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9066, 0.9084, 0.9082,  ..., 0.9072, 0.9062, 0.9086],
         [0.0934, 0.0916, 0.0918,  ..., 0.0928, 0.0938, 0.0914]],
        [[0.9068, 0.9095, 0.9072,  ..., 0.9075, 0.9080, 0.9096],
         [0.0932, 0.0905, 0.0928,  ..., 0.0925, 0.0920, 0.0904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9169, 0.9169, 0.9185,  ..., 0.9183, 0.9203, 0.9183],
         [0.0831, 0.0831, 0.0815,  ..., 0.0817, 0.0797, 0.0817]],
        [[0.5000, 0.9182, 0.9180,  ..., 0.5000, 0.9215, 0.9207],
         [0.5000, 0.0818, 0.0820,  ..., 0.5000, 0.0785, 0.0793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:41:34,702 [Process: 0] Synchronize training processes
2024-08-18 14:41:34,702 [Process: 0] Evaluating...
2024-08-18 14:41:34,704 [Process: 0] EPOCH 98:
2024-08-18 14:41:34,706 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:36,060 [Process: 0] Synchronize training processes
2024-08-18 14:41:36,061 [Process: 0] Evaluating...
2024-08-18 14:41:36,062 [Process: 0] EPOCH 99:
2024-08-18 14:41:36,064 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9096, 0.9087, 0.9085,  ..., 0.9070, 0.9085, 0.9095],
         [0.0904, 0.0913, 0.0915,  ..., 0.0930, 0.0915, 0.0905]],
        [[0.9077, 0.9096, 0.9080,  ..., 0.9081, 0.9150, 0.9070],
         [0.0923, 0.0904, 0.0920,  ..., 0.0919, 0.0850, 0.0930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9207, 0.9202, 0.9212,  ..., 0.9216, 0.9201, 0.9225],
         [0.0793, 0.0798, 0.0788,  ..., 0.0784, 0.0799, 0.0775]],
        [[0.5000, 0.9219, 0.9203,  ..., 0.5000, 0.9210, 0.9211],
         [0.5000, 0.0781, 0.0797,  ..., 0.5000, 0.0790, 0.0789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9090, 0.9078, 0.9095,  ..., 0.9096, 0.9097, 0.9089],
         [0.0910, 0.0922, 0.0905,  ..., 0.0904, 0.0903, 0.0911]],
        [[0.9093, 0.9107, 0.9115,  ..., 0.9119, 0.9141, 0.9113],
         [0.0907, 0.0893, 0.0885,  ..., 0.0881, 0.0859, 0.0887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-18 14:41:37,421 [Process: 0] Synchronize training processes
2024-08-18 14:41:37,422 [Process: 0] Evaluating...
2024-08-18 14:41:37,423 [Process: 0] EPOCH 100:
2024-08-18 14:41:37,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9234, 0.9256, 0.9240,  ..., 0.9264, 0.9218, 0.9233],
         [0.0766, 0.0744, 0.0760,  ..., 0.0736, 0.0782, 0.0767]],
        [[0.5000, 0.9246, 0.9239,  ..., 0.5000, 0.9230, 0.9250],
         [0.5000, 0.0754, 0.0761,  ..., 0.5000, 0.0770, 0.0750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9103, 0.9089, 0.9075,  ..., 0.9093, 0.9104, 0.9095],
         [0.0897, 0.0911, 0.0925,  ..., 0.0907, 0.0896, 0.0905]],
        [[0.9103, 0.9126, 0.9111,  ..., 0.9093, 0.9091, 0.9120],
         [0.0897, 0.0874, 0.0889,  ..., 0.0907, 0.0909, 0.0880]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9263, 0.9245, 0.9251,  ..., 0.9257, 0.9241, 0.9240],
         [0.0737, 0.0755, 0.0749,  ..., 0.0743, 0.0759, 0.0760]],
        [[0.5000, 0.9256, 0.9245,  ..., 0.5000, 0.9240, 0.9232],
         [0.5000, 0.0744, 0.0755,  ..., 0.5000, 0.0760, 0.0768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:38,781 [Process: 0] Synchronize training processes
2024-08-18 14:41:38,781 [Process: 0] Evaluating...
2024-08-18 14:41:38,783 [Process: 0] EPOCH 101:
2024-08-18 14:41:38,785 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9078, 0.9104, 0.9082,  ..., 0.9106, 0.9122, 0.9105],
         [0.0922, 0.0896, 0.0918,  ..., 0.0894, 0.0878, 0.0895]],
        [[0.9074, 0.9108, 0.9124,  ..., 0.9098, 0.9126, 0.9100],
         [0.0926, 0.0892, 0.0876,  ..., 0.0902, 0.0874, 0.0900]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9189, 0.9170, 0.9176,  ..., 0.9176, 0.9172, 0.9167],
         [0.0811, 0.0830, 0.0824,  ..., 0.0824, 0.0828, 0.0833]],
        [[0.9188, 0.9187, 0.9176,  ..., 0.5000, 0.9190, 0.9168],
         [0.0812, 0.0813, 0.0824,  ..., 0.5000, 0.0810, 0.0832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9114, 0.9090, 0.9094,  ..., 0.9107, 0.9115, 0.9121],
         [0.0886, 0.0910, 0.0906,  ..., 0.0893, 0.0885, 0.0879]],
        [[0.9114, 0.9130, 0.9120,  ..., 0.9098, 0.9117, 0.9137],
         [0.0886, 0.0870, 0.0880,  ..., 0.0902, 0.0883, 0.0863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:40,139 [Process: 0] Synchronize training processes
2024-08-18 14:41:40,139 [Process: 0] Evaluating...
2024-08-18 14:41:40,147 [Process: 0] EPOCH 102:
2024-08-18 14:41:40,148 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:41,503 [Process: 0] Synchronize training processes
2024-08-18 14:41:41,503 [Process: 0] Evaluating...
2024-08-18 14:41:41,505 [Process: 0] EPOCH 103:
2024-08-18 14:41:41,506 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9150, 0.9141, 0.9143,  ..., 0.9153, 0.9137, 0.9172],
         [0.0850, 0.0859, 0.0857,  ..., 0.0847, 0.0863, 0.0828]],
        [[0.9113, 0.9147, 0.9130,  ..., 0.5000, 0.9145, 0.9129],
         [0.0887, 0.0853, 0.0870,  ..., 0.5000, 0.0855, 0.0871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9109, 0.9126, 0.9120,  ..., 0.9128, 0.9109, 0.9110],
         [0.0891, 0.0874, 0.0880,  ..., 0.0872, 0.0891, 0.0890]],
        [[0.9104, 0.9132, 0.9117,  ..., 0.9090, 0.9153, 0.9126],
         [0.0896, 0.0868, 0.0883,  ..., 0.0910, 0.0847, 0.0874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9155, 0.9121, 0.9105,  ..., 0.9145, 0.9153, 0.9161],
         [0.0845, 0.0879, 0.0895,  ..., 0.0855, 0.0847, 0.0839]],
        [[0.9096, 0.9145, 0.9132,  ..., 0.5000, 0.9142, 0.9123],
         [0.0904, 0.0855, 0.0868,  ..., 0.5000, 0.0858, 0.0877]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:42,863 [Process: 0] Synchronize training processes
2024-08-18 14:41:42,863 [Process: 0] Evaluating...
2024-08-18 14:41:42,865 [Process: 0] EPOCH 104:
2024-08-18 14:41:42,867 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9117, 0.8999, 0.9103,  ..., 0.9137, 0.9094, 0.9096],
         [0.0883, 0.1001, 0.0897,  ..., 0.0863, 0.0906, 0.0904]],
        [[0.9170, 0.9180, 0.9161,  ..., 0.9167, 0.9175, 0.9171],
         [0.0830, 0.0820, 0.0839,  ..., 0.0833, 0.0825, 0.0829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9124, 0.9128, 0.9127,  ..., 0.9131, 0.9141, 0.9136],
         [0.0876, 0.0872, 0.0873,  ..., 0.0869, 0.0859, 0.0864]],
        [[0.9094, 0.9077, 0.9126,  ..., 0.9146, 0.9105, 0.9118],
         [0.0906, 0.0923, 0.0874,  ..., 0.0854, 0.0895, 0.0882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9300, 0.9314, 0.9310,  ..., 0.9304, 0.9303, 0.9307],
         [0.0700, 0.0686, 0.0690,  ..., 0.0696, 0.0697, 0.0693]],
        [[0.8396, 0.8557, 0.8406,  ..., 0.8525, 0.9305, 0.9308],
         [0.1604, 0.1443, 0.1594,  ..., 0.1475, 0.0695, 0.0692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:44,222 [Process: 0] Synchronize training processes
2024-08-18 14:41:44,222 [Process: 0] Evaluating...
2024-08-18 14:41:44,224 [Process: 0] EPOCH 105:
2024-08-18 14:41:44,226 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:45,577 [Process: 0] Synchronize training processes
2024-08-18 14:41:45,578 [Process: 0] Evaluating...
2024-08-18 14:41:45,579 [Process: 0] EPOCH 106:
2024-08-18 14:41:45,581 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9143, 0.9151, 0.9137,  ..., 0.9146, 0.9141, 0.9137],
         [0.0857, 0.0849, 0.0863,  ..., 0.0854, 0.0859, 0.0863]],
        [[0.9068, 0.9107, 0.9127,  ..., 0.9139, 0.9125, 0.9103],
         [0.0932, 0.0893, 0.0873,  ..., 0.0861, 0.0875, 0.0897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9156, 0.9171, 0.9149,  ..., 0.9181, 0.9176, 0.9168],
         [0.0844, 0.0829, 0.0851,  ..., 0.0819, 0.0824, 0.0832]],
        [[0.9188, 0.9182, 0.9186,  ..., 0.9173, 0.5697, 0.5000],
         [0.0812, 0.0818, 0.0814,  ..., 0.0827, 0.4303, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9095, 0.9086, 0.9105,  ..., 0.9102, 0.9090, 0.9099],
         [0.0905, 0.0914, 0.0895,  ..., 0.0898, 0.0910, 0.0901]],
        [[0.9117, 0.9092, 0.9103,  ..., 0.9097, 0.9129, 0.9112],
         [0.0883, 0.0908, 0.0897,  ..., 0.0903, 0.0871, 0.0888]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:46,934 [Process: 0] Synchronize training processes
2024-08-18 14:41:46,935 [Process: 0] Evaluating...
2024-08-18 14:41:46,936 [Process: 0] EPOCH 107:
2024-08-18 14:41:46,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9135, 0.9160, 0.9154,  ..., 0.9176, 0.9131, 0.9148],
         [0.0865, 0.0840, 0.0846,  ..., 0.0824, 0.0869, 0.0852]],
        [[0.9130, 0.9112, 0.9133,  ..., 0.9124, 0.8853, 0.5000],
         [0.0870, 0.0888, 0.0867,  ..., 0.0876, 0.1147, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9104, 0.9091, 0.9101,  ..., 0.9115, 0.9108, 0.9120],
         [0.0896, 0.0909, 0.0899,  ..., 0.0885, 0.0892, 0.0880]],
        [[0.9150, 0.9101, 0.9121,  ..., 0.9118, 0.9141, 0.9103],
         [0.0850, 0.0899, 0.0879,  ..., 0.0882, 0.0859, 0.0897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9121, 0.9155, 0.9177,  ..., 0.9169, 0.9201, 0.9190],
         [0.0879, 0.0845, 0.0823,  ..., 0.0831, 0.0799, 0.0810]],
        [[0.9171, 0.9184, 0.9140,  ..., 0.9153, 0.9259, 0.9112],
         [0.0829, 0.0816, 0.0860,  ..., 0.0847, 0.0741, 0.0888]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:48,292 [Process: 0] Synchronize training processes
2024-08-18 14:41:48,292 [Process: 0] Evaluating...
2024-08-18 14:41:48,294 [Process: 0] EPOCH 108:
2024-08-18 14:41:48,296 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:49,650 [Process: 0] Synchronize training processes
2024-08-18 14:41:49,650 [Process: 0] Evaluating...
2024-08-18 14:41:49,652 [Process: 0] EPOCH 109:
2024-08-18 14:41:49,654 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9149, 0.9143, 0.9134,  ..., 0.9122, 0.9150, 0.9137],
         [0.0851, 0.0857, 0.0866,  ..., 0.0878, 0.0850, 0.0863]],
        [[0.9139, 0.9129, 0.9141,  ..., 0.9156, 0.9149, 0.9125],
         [0.0861, 0.0871, 0.0859,  ..., 0.0844, 0.0851, 0.0875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9181, 0.9189, 0.9213,  ..., 0.9205, 0.9204, 0.9202],
         [0.0819, 0.0811, 0.0787,  ..., 0.0795, 0.0796, 0.0798]],
        [[0.9205, 0.9190, 0.9203,  ..., 0.9172, 0.9294, 0.9116],
         [0.0795, 0.0810, 0.0797,  ..., 0.0828, 0.0706, 0.0884]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9146, 0.9139, 0.9134,  ..., 0.9128, 0.9130, 0.9132],
         [0.0854, 0.0861, 0.0866,  ..., 0.0872, 0.0870, 0.0868]],
        [[0.9117, 0.9124, 0.9166,  ..., 0.9165, 0.9150, 0.9146],
         [0.0883, 0.0876, 0.0834,  ..., 0.0835, 0.0850, 0.0854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:51,010 [Process: 0] Synchronize training processes
2024-08-18 14:41:51,011 [Process: 0] Evaluating...
2024-08-18 14:41:51,012 [Process: 0] EPOCH 110:
2024-08-18 14:41:51,014 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9111, 0.9174, 0.9175,  ..., 0.9174, 0.9197, 0.9162],
         [0.0889, 0.0826, 0.0825,  ..., 0.0826, 0.0803, 0.0838]],
        [[0.9181, 0.9210, 0.9191,  ..., 0.9199, 0.9229, 0.9290],
         [0.0819, 0.0790, 0.0809,  ..., 0.0801, 0.0771, 0.0710]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9147, 0.9121, 0.9164,  ..., 0.9105, 0.9108, 0.9131],
         [0.0853, 0.0879, 0.0836,  ..., 0.0895, 0.0892, 0.0869]],
        [[0.9116, 0.9140, 0.9165,  ..., 0.9125, 0.9107, 0.9156],
         [0.0884, 0.0860, 0.0835,  ..., 0.0875, 0.0893, 0.0844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9224, 0.9202, 0.9174,  ..., 0.9172, 0.9199, 0.9223],
         [0.0776, 0.0798, 0.0826,  ..., 0.0828, 0.0801, 0.0777]],
        [[0.9211, 0.9203, 0.9223,  ..., 0.9209, 0.9215, 0.9355],
         [0.0789, 0.0797, 0.0777,  ..., 0.0791, 0.0785, 0.0645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:52,390 [Process: 0] Synchronize training processes
2024-08-18 14:41:52,390 [Process: 0] Evaluating...
2024-08-18 14:41:52,392 [Process: 0] EPOCH 111:
2024-08-18 14:41:52,394 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:53,824 [Process: 0] Synchronize training processes
2024-08-18 14:41:53,824 [Process: 0] Evaluating...
2024-08-18 14:41:53,832 [Process: 0] EPOCH 112:
2024-08-18 14:41:53,834 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9157, 0.9145, 0.9159,  ..., 0.9126, 0.9172, 0.9145],
         [0.0843, 0.0855, 0.0841,  ..., 0.0874, 0.0828, 0.0855]],
        [[0.9118, 0.9191, 0.9134,  ..., 0.9206, 0.9190, 0.9131],
         [0.0882, 0.0809, 0.0866,  ..., 0.0794, 0.0810, 0.0869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9200, 0.9171, 0.9202,  ..., 0.9220, 0.9166, 0.9203],
         [0.0800, 0.0829, 0.0798,  ..., 0.0780, 0.0834, 0.0797]],
        [[0.9214, 0.9239, 0.9175,  ..., 0.9232, 0.9326, 0.9279],
         [0.0786, 0.0761, 0.0825,  ..., 0.0768, 0.0674, 0.0721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9175, 0.9147, 0.9133,  ..., 0.9123, 0.9176, 0.9190],
         [0.0825, 0.0853, 0.0867,  ..., 0.0877, 0.0824, 0.0810]],
        [[0.9170, 0.9183, 0.9179,  ..., 0.9152, 0.9169, 0.9163],
         [0.0830, 0.0817, 0.0821,  ..., 0.0848, 0.0831, 0.0837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:55,292 [Process: 0] Synchronize training processes
2024-08-18 14:41:55,292 [Process: 0] Evaluating...
2024-08-18 14:41:55,294 [Process: 0] EPOCH 113:
2024-08-18 14:41:55,296 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9243, 0.9266, 0.9246,  ..., 0.9237, 0.9232, 0.9252],
         [0.0757, 0.0734, 0.0754,  ..., 0.0763, 0.0768, 0.0748]],
        [[0.9252, 0.9282, 0.9253,  ..., 0.9232, 0.9283, 0.9266],
         [0.0748, 0.0718, 0.0747,  ..., 0.0768, 0.0717, 0.0734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9216, 0.9188, 0.9194,  ..., 0.9191, 0.9211, 0.9173],
         [0.0784, 0.0812, 0.0806,  ..., 0.0809, 0.0789, 0.0827]],
        [[0.9145, 0.9143, 0.9194,  ..., 0.9163, 0.9186, 0.9171],
         [0.0855, 0.0857, 0.0806,  ..., 0.0837, 0.0814, 0.0829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9265, 0.9276, 0.9200,  ..., 0.9168, 0.9273, 0.9268],
         [0.0735, 0.0724, 0.0800,  ..., 0.0832, 0.0727, 0.0732]],
        [[0.9198, 0.9264, 0.9278,  ..., 0.9205, 0.9261, 0.8946],
         [0.0802, 0.0736, 0.0722,  ..., 0.0795, 0.0739, 0.1054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:41:56,728 [Process: 0] Synchronize training processes
2024-08-18 14:41:56,729 [Process: 0] Evaluating...
2024-08-18 14:41:56,730 [Process: 0] EPOCH 114:
2024-08-18 14:41:56,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9147, 0.9190, 0.9137,  ..., 0.9171, 0.9215, 0.9155],
         [0.0853, 0.0810, 0.0863,  ..., 0.0829, 0.0785, 0.0845]],
        [[0.9227, 0.9177, 0.9126,  ..., 0.9155, 0.9184, 0.9166],
         [0.0773, 0.0823, 0.0874,  ..., 0.0845, 0.0816, 0.0834]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9241, 0.9242, 0.9240,  ..., 0.9228, 0.9151, 0.9263],
         [0.0759, 0.0758, 0.0760,  ..., 0.0772, 0.0849, 0.0737]],
        [[0.9261, 0.9260, 0.9210,  ..., 0.9285, 0.9246, 0.8850],
         [0.0739, 0.0740, 0.0790,  ..., 0.0715, 0.0754, 0.1150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:58,169 [Process: 0] Synchronize training processes
2024-08-18 14:41:58,169 [Process: 0] Evaluating...
2024-08-18 14:41:58,171 [Process: 0] EPOCH 115:
2024-08-18 14:41:58,173 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:41:59,607 [Process: 0] Synchronize training processes
2024-08-18 14:41:59,607 [Process: 0] Evaluating...
2024-08-18 14:41:59,609 [Process: 0] EPOCH 116:
2024-08-18 14:41:59,611 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9222, 0.9195, 0.9228,  ..., 0.9197, 0.9219, 0.9224],
         [0.0778, 0.0805, 0.0772,  ..., 0.0803, 0.0781, 0.0776]],
        [[0.9210, 0.9146, 0.9128,  ..., 0.9141, 0.9158, 0.9187],
         [0.0790, 0.0854, 0.0872,  ..., 0.0859, 0.0842, 0.0813]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9274, 0.9240, 0.9236,  ..., 0.9290, 0.9276, 0.9262],
         [0.0726, 0.0760, 0.0764,  ..., 0.0710, 0.0724, 0.0738]],
        [[0.9246, 0.9266, 0.9298,  ..., 0.9266, 0.9279, 0.9081],
         [0.0754, 0.0734, 0.0702,  ..., 0.0734, 0.0721, 0.0919]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9195, 0.9242, 0.9243,  ..., 0.9223, 0.9257, 0.9250],
         [0.0805, 0.0758, 0.0757,  ..., 0.0777, 0.0743, 0.0750]],
        [[0.9248, 0.9240, 0.9188,  ..., 0.9203, 0.9227, 0.9177],
         [0.0752, 0.0760, 0.0812,  ..., 0.0797, 0.0773, 0.0823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:01,042 [Process: 0] Synchronize training processes
2024-08-18 14:42:01,042 [Process: 0] Evaluating...
2024-08-18 14:42:01,044 [Process: 0] EPOCH 117:
2024-08-18 14:42:01,045 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9292, 0.9264, 0.9254,  ..., 0.9281, 0.9250, 0.9264],
         [0.0708, 0.0736, 0.0746,  ..., 0.0719, 0.0750, 0.0736]],
        [[0.9285, 0.9266, 0.9275,  ..., 0.9265, 0.9269, 0.9194],
         [0.0715, 0.0734, 0.0725,  ..., 0.0735, 0.0731, 0.0806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9207, 0.9210, 0.9229,  ..., 0.9219, 0.9222, 0.9244],
         [0.0793, 0.0790, 0.0771,  ..., 0.0781, 0.0778, 0.0756]],
        [[0.9225, 0.9199, 0.9243,  ..., 0.9168, 0.9202, 0.9226],
         [0.0775, 0.0801, 0.0757,  ..., 0.0832, 0.0798, 0.0774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9275, 0.9309, 0.9281,  ..., 0.9288, 0.9267, 0.9299],
         [0.0725, 0.0691, 0.0719,  ..., 0.0712, 0.0733, 0.0701]],
        [[0.9301, 0.9263, 0.9259,  ..., 0.9272, 0.9297, 0.9141],
         [0.0699, 0.0737, 0.0741,  ..., 0.0728, 0.0703, 0.0859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:02,490 [Process: 0] Synchronize training processes
2024-08-18 14:42:02,490 [Process: 0] Evaluating...
2024-08-18 14:42:02,492 [Process: 0] EPOCH 118:
2024-08-18 14:42:02,494 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:03,925 [Process: 0] Synchronize training processes
2024-08-18 14:42:03,925 [Process: 0] Evaluating...
2024-08-18 14:42:03,927 [Process: 0] EPOCH 119:
2024-08-18 14:42:03,929 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9218, 0.9217, 0.9218,  ..., 0.9191, 0.9209, 0.9184],
         [0.0782, 0.0783, 0.0782,  ..., 0.0809, 0.0791, 0.0816]],
        [[0.9241, 0.9201, 0.9176,  ..., 0.9188, 0.9225, 0.9242],
         [0.0759, 0.0799, 0.0824,  ..., 0.0812, 0.0775, 0.0758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9272, 0.9303, 0.9327,  ..., 0.9312, 0.9310, 0.9280],
         [0.0728, 0.0697, 0.0673,  ..., 0.0688, 0.0690, 0.0720]],
        [[0.9262, 0.9303, 0.9293,  ..., 0.9288, 0.9276, 0.9159],
         [0.0738, 0.0697, 0.0707,  ..., 0.0712, 0.0724, 0.0841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9219, 0.9210, 0.9220,  ..., 0.9224, 0.9233, 0.9211],
         [0.0781, 0.0790, 0.0780,  ..., 0.0776, 0.0767, 0.0789]],
        [[0.9243, 0.9213, 0.9209,  ..., 0.9251, 0.9197, 0.9219],
         [0.0757, 0.0787, 0.0791,  ..., 0.0749, 0.0803, 0.0781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:05,357 [Process: 0] Synchronize training processes
2024-08-18 14:42:05,357 [Process: 0] Evaluating...
2024-08-18 14:42:05,359 [Process: 0] EPOCH 120:
2024-08-18 14:42:05,361 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9328, 0.9308, 0.9339,  ..., 0.9328, 0.9321, 0.9319],
         [0.0672, 0.0692, 0.0661,  ..., 0.0672, 0.0679, 0.0681]],
        [[0.9302, 0.9297, 0.9313,  ..., 0.9275, 0.9343, 0.9259],
         [0.0698, 0.0703, 0.0687,  ..., 0.0725, 0.0657, 0.0741]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9253, 0.9196, 0.9247,  ..., 0.9244, 0.9240, 0.9247],
         [0.0747, 0.0804, 0.0753,  ..., 0.0756, 0.0760, 0.0753]],
        [[0.9219, 0.9254, 0.9203,  ..., 0.9218, 0.9263, 0.9241],
         [0.0781, 0.0746, 0.0797,  ..., 0.0782, 0.0737, 0.0759]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:42:06,788 [Process: 0] Synchronize training processes
2024-08-18 14:42:06,788 [Process: 0] Evaluating...
2024-08-18 14:42:06,790 [Process: 0] EPOCH 121:
2024-08-18 14:42:06,792 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9298, 0.9334, 0.9321,  ..., 0.9332, 0.9320, 0.9312],
         [0.0702, 0.0666, 0.0679,  ..., 0.0668, 0.0680, 0.0688]],
        [[0.9338, 0.9329, 0.9317,  ..., 0.9323, 0.9302, 0.9371],
         [0.0662, 0.0671, 0.0683,  ..., 0.0677, 0.0698, 0.0629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9283, 0.9244, 0.9263,  ..., 0.9244, 0.9262, 0.9231],
         [0.0717, 0.0756, 0.0737,  ..., 0.0756, 0.0738, 0.0769]],
        [[0.9239, 0.9264, 0.9242,  ..., 0.9242, 0.9237, 0.9248],
         [0.0761, 0.0736, 0.0758,  ..., 0.0758, 0.0763, 0.0752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9334, 0.9321, 0.9302,  ..., 0.9307, 0.9305, 0.9333],
         [0.0666, 0.0679, 0.0698,  ..., 0.0693, 0.0695, 0.0667]],
        [[0.9331, 0.9301, 0.9313,  ..., 0.9316, 0.9324, 0.9338],
         [0.0669, 0.0699, 0.0687,  ..., 0.0684, 0.0676, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:08,230 [Process: 0] Synchronize training processes
2024-08-18 14:42:08,230 [Process: 0] Evaluating...
2024-08-18 14:42:08,238 [Process: 0] EPOCH 122:
2024-08-18 14:42:08,240 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:09,669 [Process: 0] Synchronize training processes
2024-08-18 14:42:09,670 [Process: 0] Evaluating...
2024-08-18 14:42:09,671 [Process: 0] EPOCH 123:
2024-08-18 14:42:09,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9251, 0.9246, 0.9277,  ..., 0.9250, 0.9263, 0.9242],
         [0.0749, 0.0754, 0.0723,  ..., 0.0750, 0.0737, 0.0758]],
        [[0.9257, 0.9249, 0.9254,  ..., 0.9240, 0.9242, 0.9291],
         [0.0743, 0.0751, 0.0746,  ..., 0.0760, 0.0758, 0.0709]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9359, 0.9348, 0.9342,  ..., 0.9321, 0.9312, 0.9355],
         [0.0641, 0.0652, 0.0658,  ..., 0.0679, 0.0688, 0.0645]],
        [[0.9324, 0.9319, 0.9310,  ..., 0.9322, 0.9334, 0.9244],
         [0.0676, 0.0681, 0.0690,  ..., 0.0678, 0.0666, 0.0756]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9265, 0.9260, 0.9261,  ..., 0.9257, 0.9258, 0.9277],
         [0.0735, 0.0740, 0.0739,  ..., 0.0743, 0.0742, 0.0723]],
        [[0.9242, 0.9274, 0.9230,  ..., 0.9278, 0.9254, 0.9261],
         [0.0758, 0.0726, 0.0770,  ..., 0.0722, 0.0746, 0.0739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:11,103 [Process: 0] Synchronize training processes
2024-08-18 14:42:11,103 [Process: 0] Evaluating...
2024-08-18 14:42:11,105 [Process: 0] EPOCH 124:
2024-08-18 14:42:11,107 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9338, 0.9337, 0.9338,  ..., 0.9328, 0.9316, 0.9331],
         [0.0662, 0.0663, 0.0662,  ..., 0.0672, 0.0684, 0.0669]],
        [[0.9370, 0.9336, 0.9357,  ..., 0.9350, 0.9341, 0.9289],
         [0.0630, 0.0664, 0.0643,  ..., 0.0650, 0.0659, 0.0711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9300, 0.9292, 0.9300,  ..., 0.9283, 0.9281, 0.9284],
         [0.0700, 0.0708, 0.0700,  ..., 0.0717, 0.0719, 0.0716]],
        [[0.9275, 0.9267, 0.9262,  ..., 0.9280, 0.9276, 0.9265],
         [0.0725, 0.0733, 0.0738,  ..., 0.0720, 0.0724, 0.0735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9346, 0.9325, 0.9371,  ..., 0.9329, 0.9308, 0.9359],
         [0.0654, 0.0675, 0.0629,  ..., 0.0671, 0.0692, 0.0641]],
        [[0.9357, 0.9331, 0.9355,  ..., 0.9336, 0.9347, 0.9382],
         [0.0643, 0.0669, 0.0645,  ..., 0.0664, 0.0653, 0.0618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:12,536 [Process: 0] Synchronize training processes
2024-08-18 14:42:12,537 [Process: 0] Evaluating...
2024-08-18 14:42:12,538 [Process: 0] EPOCH 125:
2024-08-18 14:42:12,540 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:13,967 [Process: 0] Synchronize training processes
2024-08-18 14:42:13,968 [Process: 0] Evaluating...
2024-08-18 14:42:13,969 [Process: 0] EPOCH 126:
2024-08-18 14:42:13,972 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9286, 0.9299, 0.9293,  ..., 0.9296, 0.9287, 0.9288],
         [0.0714, 0.0701, 0.0707,  ..., 0.0704, 0.0713, 0.0712]],
        [[0.9277, 0.9293, 0.9276,  ..., 0.9273, 0.9274, 0.9269],
         [0.0723, 0.0707, 0.0724,  ..., 0.0727, 0.0726, 0.0731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9341, 0.9354, 0.9354,  ..., 0.9339, 0.9339, 0.9360],
         [0.0659, 0.0646, 0.0646,  ..., 0.0661, 0.0661, 0.0640]],
        [[0.9373, 0.9374, 0.9377,  ..., 0.9363, 0.9359, 0.9360],
         [0.0627, 0.0626, 0.0623,  ..., 0.0637, 0.0641, 0.0640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9307, 0.9322, 0.9329,  ..., 0.9321, 0.9308, 0.9326],
         [0.0693, 0.0678, 0.0671,  ..., 0.0679, 0.0692, 0.0674]],
        [[0.9319, 0.9318, 0.9303,  ..., 0.9313, 0.9320, 0.9316],
         [0.0681, 0.0682, 0.0697,  ..., 0.0687, 0.0680, 0.0684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:15,400 [Process: 0] Synchronize training processes
2024-08-18 14:42:15,400 [Process: 0] Evaluating...
2024-08-18 14:42:15,402 [Process: 0] EPOCH 127:
2024-08-18 14:42:15,404 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9364, 0.9355, 0.9340,  ..., 0.9355, 0.9362, 0.9356],
         [0.0636, 0.0645, 0.0660,  ..., 0.0645, 0.0638, 0.0644]],
        [[0.9356, 0.9353, 0.9362,  ..., 0.9369, 0.9343, 0.9362],
         [0.0644, 0.0647, 0.0638,  ..., 0.0631, 0.0657, 0.0638]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9344, 0.9323, 0.9301,  ..., 0.9329, 0.9318, 0.9340],
         [0.0656, 0.0677, 0.0699,  ..., 0.0671, 0.0682, 0.0660]],
        [[0.9334, 0.9326, 0.9323,  ..., 0.9315, 0.9336, 0.9347],
         [0.0666, 0.0674, 0.0677,  ..., 0.0685, 0.0664, 0.0653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:42:16,834 [Process: 0] Synchronize training processes
2024-08-18 14:42:16,834 [Process: 0] Evaluating...
2024-08-18 14:42:16,836 [Process: 0] EPOCH 128:
2024-08-18 14:42:16,838 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9359, 0.9355, 0.9379,  ..., 0.9366, 0.9373, 0.9382],
         [0.0641, 0.0645, 0.0621,  ..., 0.0634, 0.0627, 0.0618]],
        [[0.9365, 0.9356, 0.9367,  ..., 0.9342, 0.9357, 0.9294],
         [0.0635, 0.0644, 0.0633,  ..., 0.0658, 0.0643, 0.0706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9350, 0.9334, 0.9345,  ..., 0.9364, 0.9343, 0.9346],
         [0.0650, 0.0666, 0.0655,  ..., 0.0636, 0.0657, 0.0654]],
        [[0.9325, 0.9345, 0.9340,  ..., 0.9330, 0.9324, 0.9332],
         [0.0675, 0.0655, 0.0660,  ..., 0.0670, 0.0676, 0.0668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9383, 0.9350, 0.9365,  ..., 0.9375, 0.9381, 0.9361],
         [0.0617, 0.0650, 0.0635,  ..., 0.0625, 0.0619, 0.0639]],
        [[0.9353, 0.9348, 0.9341,  ..., 0.9373, 0.9369, 0.9351],
         [0.0647, 0.0652, 0.0659,  ..., 0.0627, 0.0631, 0.0649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:18,265 [Process: 0] Synchronize training processes
2024-08-18 14:42:18,265 [Process: 0] Evaluating...
2024-08-18 14:42:18,267 [Process: 0] EPOCH 129:
2024-08-18 14:42:18,269 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:19,697 [Process: 0] Synchronize training processes
2024-08-18 14:42:19,697 [Process: 0] Evaluating...
2024-08-18 14:42:19,699 [Process: 0] EPOCH 130:
2024-08-18 14:42:19,701 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9357, 0.9325, 0.9361,  ..., 0.9349, 0.9348, 0.9359],
         [0.0643, 0.0675, 0.0639,  ..., 0.0651, 0.0652, 0.0641]],
        [[0.9346, 0.9358, 0.9366,  ..., 0.9340, 0.9351, 0.9352],
         [0.0654, 0.0642, 0.0634,  ..., 0.0660, 0.0649, 0.0648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9367, 0.9378, 0.9409,  ..., 0.9390, 0.9378, 0.9382],
         [0.0633, 0.0622, 0.0591,  ..., 0.0610, 0.0622, 0.0618]],
        [[0.9358, 0.9381, 0.9375,  ..., 0.9362, 0.9379, 0.9338],
         [0.0642, 0.0619, 0.0625,  ..., 0.0638, 0.0621, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9371, 0.9362, 0.9350,  ..., 0.9338, 0.9371, 0.9363],
         [0.0629, 0.0638, 0.0650,  ..., 0.0662, 0.0629, 0.0637]],
        [[0.9351, 0.9361, 0.9372,  ..., 0.5000, 0.9356, 0.9343],
         [0.0649, 0.0639, 0.0628,  ..., 0.5000, 0.0644, 0.0657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:21,128 [Process: 0] Synchronize training processes
2024-08-18 14:42:21,128 [Process: 0] Evaluating...
2024-08-18 14:42:21,130 [Process: 0] EPOCH 131:
2024-08-18 14:42:21,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9372, 0.9389, 0.9391,  ..., 0.9398, 0.9388, 0.9370],
         [0.0628, 0.0611, 0.0609,  ..., 0.0602, 0.0612, 0.0630]],
        [[0.9383, 0.9387, 0.9395,  ..., 0.9378, 0.9390, 0.9403],
         [0.0617, 0.0613, 0.0605,  ..., 0.0622, 0.0610, 0.0597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9360, 0.9354, 0.9366,  ..., 0.9383, 0.9366, 0.9369],
         [0.0640, 0.0646, 0.0634,  ..., 0.0617, 0.0634, 0.0631]],
        [[0.9362, 0.9373, 0.9378,  ..., 0.5000, 0.9347, 0.9368],
         [0.0638, 0.0627, 0.0622,  ..., 0.5000, 0.0653, 0.0632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9401, 0.9370, 0.9381,  ..., 0.9389, 0.9396, 0.9386],
         [0.0599, 0.0630, 0.0619,  ..., 0.0611, 0.0604, 0.0614]],
        [[0.9387, 0.9385, 0.9393,  ..., 0.9393, 0.9383, 0.9421],
         [0.0613, 0.0615, 0.0607,  ..., 0.0607, 0.0617, 0.0579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:22,561 [Process: 0] Synchronize training processes
2024-08-18 14:42:22,561 [Process: 0] Evaluating...
2024-08-18 14:42:22,569 [Process: 0] EPOCH 132:
2024-08-18 14:42:22,571 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:24,019 [Process: 0] Synchronize training processes
2024-08-18 14:42:24,019 [Process: 0] Evaluating...
2024-08-18 14:42:24,021 [Process: 0] EPOCH 133:
2024-08-18 14:42:24,023 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9396, 0.9364, 0.9373,  ..., 0.9369, 0.9372, 0.9372],
         [0.0604, 0.0636, 0.0627,  ..., 0.0631, 0.0628, 0.0628]],
        [[0.9373, 0.9367, 0.9373,  ..., 0.5000, 0.9370, 0.9364],
         [0.0627, 0.0633, 0.0627,  ..., 0.5000, 0.0630, 0.0636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9385, 0.9372, 0.9391,  ..., 0.9388, 0.9383, 0.9404],
         [0.0615, 0.0628, 0.0609,  ..., 0.0612, 0.0617, 0.0596]],
        [[0.9397, 0.9384, 0.9384,  ..., 0.9395, 0.9376, 0.9412],
         [0.0603, 0.0616, 0.0616,  ..., 0.0605, 0.0624, 0.0588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9411, 0.9391, 0.9397,  ..., 0.9399, 0.9379, 0.9384],
         [0.0589, 0.0609, 0.0603,  ..., 0.0601, 0.0621, 0.0616]],
        [[0.9393, 0.9390, 0.9394,  ..., 0.5000, 0.9389, 0.9393],
         [0.0607, 0.0610, 0.0606,  ..., 0.5000, 0.0611, 0.0607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:25,450 [Process: 0] Synchronize training processes
2024-08-18 14:42:25,450 [Process: 0] Evaluating...
2024-08-18 14:42:25,452 [Process: 0] EPOCH 134:
2024-08-18 14:42:25,453 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9385, 0.9363, 0.9383,  ..., 0.9361, 0.9378, 0.9377],
         [0.0615, 0.0637, 0.0617,  ..., 0.0639, 0.0622, 0.0623]],
        [[0.9402, 0.9402, 0.9391,  ..., 0.9392, 0.9405, 0.9445],
         [0.0598, 0.0598, 0.0609,  ..., 0.0608, 0.0595, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9417, 0.9428, 0.9411,  ..., 0.9422, 0.9404, 0.9404],
         [0.0583, 0.0572, 0.0589,  ..., 0.0578, 0.0596, 0.0596]],
        [[0.9400, 0.9405, 0.9416,  ..., 0.5000, 0.9414, 0.9403],
         [0.0600, 0.0595, 0.0584,  ..., 0.5000, 0.0586, 0.0597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:42:26,880 [Process: 0] Synchronize training processes
2024-08-18 14:42:26,881 [Process: 0] Evaluating...
2024-08-18 14:42:26,883 [Process: 0] EPOCH 135:
2024-08-18 14:42:26,885 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9352, 0.9360, 0.9378,  ..., 0.9385, 0.9366, 0.9366],
         [0.0648, 0.0640, 0.0622,  ..., 0.0615, 0.0634, 0.0634]],
        [[0.9403, 0.9396, 0.9384,  ..., 0.9387, 0.9398, 0.9430],
         [0.0597, 0.0604, 0.0616,  ..., 0.0613, 0.0602, 0.0570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9416, 0.9412, 0.9415,  ..., 0.9420, 0.9418, 0.9417],
         [0.0584, 0.0588, 0.0585,  ..., 0.0580, 0.0582, 0.0583]],
        [[0.9413, 0.9414, 0.9428,  ..., 0.5000, 0.9421, 0.9401],
         [0.0587, 0.0586, 0.0572,  ..., 0.5000, 0.0579, 0.0599]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9356, 0.9397, 0.9337,  ..., 0.9349, 0.9390, 0.9363],
         [0.0644, 0.0603, 0.0663,  ..., 0.0651, 0.0610, 0.0637]],
        [[0.9393, 0.9393, 0.9390,  ..., 0.9393, 0.9393, 0.9425],
         [0.0607, 0.0607, 0.0610,  ..., 0.0607, 0.0607, 0.0575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:28,314 [Process: 0] Synchronize training processes
2024-08-18 14:42:28,314 [Process: 0] Evaluating...
2024-08-18 14:42:28,316 [Process: 0] EPOCH 136:
2024-08-18 14:42:28,318 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:29,736 [Process: 0] Synchronize training processes
2024-08-18 14:42:29,736 [Process: 0] Evaluating...
2024-08-18 14:42:29,738 [Process: 0] EPOCH 137:
2024-08-18 14:42:29,740 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9410, 0.9401, 0.9401,  ..., 0.9407, 0.9414, 0.9397],
         [0.0590, 0.0599, 0.0599,  ..., 0.0593, 0.0586, 0.0603]],
        [[0.9401, 0.9407, 0.9406,  ..., 0.5000, 0.9395, 0.9407],
         [0.0599, 0.0593, 0.0594,  ..., 0.5000, 0.0605, 0.0593]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9325, 0.9157, 0.9339,  ..., 0.9297, 0.9336, 0.9306],
         [0.0675, 0.0843, 0.0661,  ..., 0.0703, 0.0664, 0.0694]],
        [[0.9394, 0.9395, 0.9394,  ..., 0.9392, 0.9394, 0.9423],
         [0.0606, 0.0605, 0.0606,  ..., 0.0608, 0.0606, 0.0577]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9386, 0.9390, 0.9383,  ..., 0.9394, 0.9396, 0.9389],
         [0.0614, 0.0610, 0.0617,  ..., 0.0606, 0.0604, 0.0611]],
        [[0.9389, 0.9389, 0.9385,  ..., 0.5000, 0.9391, 0.9390],
         [0.0611, 0.0611, 0.0615,  ..., 0.5000, 0.0609, 0.0610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:31,157 [Process: 0] Synchronize training processes
2024-08-18 14:42:31,157 [Process: 0] Evaluating...
2024-08-18 14:42:31,159 [Process: 0] EPOCH 138:
2024-08-18 14:42:31,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9281, 0.9248, 0.9260,  ..., 0.9273, 0.9276, 0.9274],
         [0.0719, 0.0752, 0.0740,  ..., 0.0727, 0.0724, 0.0726]],
        [[0.9280, 0.9283, 0.9277,  ..., 0.9280, 0.9281, 0.9251],
         [0.0720, 0.0717, 0.0723,  ..., 0.0720, 0.0719, 0.0749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9347, 0.9342, 0.9347,  ..., 0.9346, 0.9347, 0.9345],
         [0.0653, 0.0658, 0.0653,  ..., 0.0654, 0.0653, 0.0655]],
        [[0.9350, 0.9348, 0.9346,  ..., 0.5000, 0.9348, 0.9348],
         [0.0650, 0.0652, 0.0654,  ..., 0.5000, 0.0652, 0.0652]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9337, 0.9324, 0.9326,  ..., 0.9326, 0.9339, 0.9324],
         [0.0663, 0.0676, 0.0674,  ..., 0.0674, 0.0661, 0.0676]],
        [[0.9323, 0.9316, 0.9314,  ..., 0.9327, 0.9319, 0.9361],
         [0.0677, 0.0684, 0.0686,  ..., 0.0673, 0.0681, 0.0639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:32,591 [Process: 0] Synchronize training processes
2024-08-18 14:42:32,591 [Process: 0] Evaluating...
2024-08-18 14:42:32,593 [Process: 0] EPOCH 139:
2024-08-18 14:42:32,595 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:34,022 [Process: 0] Synchronize training processes
2024-08-18 14:42:34,023 [Process: 0] Evaluating...
2024-08-18 14:42:34,024 [Process: 0] EPOCH 140:
2024-08-18 14:42:34,026 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9401, 0.9405, 0.9391,  ..., 0.9407, 0.9439, 0.9398],
         [0.0599, 0.0595, 0.0609,  ..., 0.0593, 0.0561, 0.0602]],
        [[0.9412, 0.9368, 0.9418,  ..., 0.5000, 0.9409, 0.9424],
         [0.0588, 0.0632, 0.0582,  ..., 0.5000, 0.0591, 0.0576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9447, 0.9450, 0.9467,  ..., 0.9456, 0.9451, 0.9463],
         [0.0553, 0.0550, 0.0533,  ..., 0.0544, 0.0549, 0.0537]],
        [[0.9421, 0.9416, 0.9426,  ..., 0.9439, 0.9436, 0.9431],
         [0.0579, 0.0584, 0.0574,  ..., 0.0561, 0.0564, 0.0569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9443, 0.9422, 0.9406,  ..., 0.9446, 0.9413, 0.9431],
         [0.0557, 0.0578, 0.0594,  ..., 0.0554, 0.0587, 0.0569]],
        [[0.9438, 0.9449, 0.9421,  ..., 0.5000, 0.9444, 0.9442],
         [0.0562, 0.0551, 0.0579,  ..., 0.5000, 0.0556, 0.0558]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:35,457 [Process: 0] Synchronize training processes
2024-08-18 14:42:35,458 [Process: 0] Evaluating...
2024-08-18 14:42:35,459 [Process: 0] EPOCH 141:
2024-08-18 14:42:35,461 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9457, 0.9462, 0.9471,  ..., 0.9465, 0.9461, 0.9471],
         [0.0543, 0.0538, 0.0529,  ..., 0.0535, 0.0539, 0.0529]],
        [[0.9437, 0.9425, 0.9446,  ..., 0.9431, 0.9454, 0.9406],
         [0.0563, 0.0575, 0.0554,  ..., 0.0569, 0.0546, 0.0594]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9430, 0.9421, 0.9421,  ..., 0.9424, 0.9440, 0.9442],
         [0.0570, 0.0579, 0.0579,  ..., 0.0576, 0.0560, 0.0558]],
        [[0.9435, 0.9443, 0.9431,  ..., 0.5000, 0.9445, 0.9428],
         [0.0565, 0.0557, 0.0569,  ..., 0.5000, 0.0555, 0.0572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9457, 0.9476, 0.9462,  ..., 0.9464, 0.9467, 0.9452],
         [0.0543, 0.0524, 0.0538,  ..., 0.0536, 0.0533, 0.0548]],
        [[0.9447, 0.9445, 0.9441,  ..., 0.9448, 0.9443, 0.9495],
         [0.0553, 0.0555, 0.0559,  ..., 0.0552, 0.0557, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:36,890 [Process: 0] Synchronize training processes
2024-08-18 14:42:36,891 [Process: 0] Evaluating...
2024-08-18 14:42:36,899 [Process: 0] EPOCH 142:
2024-08-18 14:42:36,900 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9431, 0.9429, 0.9437,  ..., 0.9433, 0.9429, 0.9441],
         [0.0569, 0.0571, 0.0563,  ..., 0.0567, 0.0571, 0.0559]],
        [[0.9441, 0.9432, 0.9442,  ..., 0.5000, 0.9446, 0.9443],
         [0.0559, 0.0568, 0.0558,  ..., 0.5000, 0.0554, 0.0557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9476, 0.9470, 0.9466,  ..., 0.9481, 0.9475, 0.9486],
         [0.0524, 0.0530, 0.0534,  ..., 0.0519, 0.0525, 0.0514]],
        [[0.9457, 0.9472, 0.9472,  ..., 0.9462, 0.9474, 0.9557],
         [0.0543, 0.0528, 0.0528,  ..., 0.0538, 0.0526, 0.0443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:38,332 [Process: 0] Synchronize training processes
2024-08-18 14:42:38,332 [Process: 0] Evaluating...
2024-08-18 14:42:38,334 [Process: 0] EPOCH 143:
2024-08-18 14:42:38,336 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:39,764 [Process: 0] Synchronize training processes
2024-08-18 14:42:39,764 [Process: 0] Evaluating...
2024-08-18 14:42:39,766 [Process: 0] EPOCH 144:
2024-08-18 14:42:39,768 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9428, 0.9423, 0.9427,  ..., 0.9421, 0.9420, 0.9425],
         [0.0572, 0.0577, 0.0573,  ..., 0.0579, 0.0580, 0.0575]],
        [[0.9423, 0.9427, 0.9420,  ..., 0.9413, 0.9433, 0.9423],
         [0.0577, 0.0573, 0.0580,  ..., 0.0587, 0.0567, 0.0577]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9484, 0.9467, 0.9467,  ..., 0.9478, 0.9483, 0.9475],
         [0.0516, 0.0533, 0.0533,  ..., 0.0522, 0.0517, 0.0525]],
        [[0.9465, 0.9470, 0.9464,  ..., 0.9470, 0.9468, 0.9516],
         [0.0535, 0.0530, 0.0536,  ..., 0.0530, 0.0532, 0.0484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9423, 0.9406, 0.9416,  ..., 0.9414, 0.9410, 0.9420],
         [0.0577, 0.0594, 0.0584,  ..., 0.0586, 0.0590, 0.0580]],
        [[0.9416, 0.9410, 0.9411,  ..., 0.9408, 0.9424, 0.9406],
         [0.0584, 0.0590, 0.0589,  ..., 0.0592, 0.0576, 0.0594]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:41,199 [Process: 0] Synchronize training processes
2024-08-18 14:42:41,200 [Process: 0] Evaluating...
2024-08-18 14:42:41,202 [Process: 0] EPOCH 145:
2024-08-18 14:42:41,204 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9483, 0.9464, 0.9477,  ..., 0.9471, 0.9457, 0.9469],
         [0.0517, 0.0536, 0.0523,  ..., 0.0529, 0.0543, 0.0531]],
        [[0.9455, 0.9465, 0.9463,  ..., 0.9470, 0.9459, 0.9608],
         [0.0545, 0.0535, 0.0537,  ..., 0.0530, 0.0541, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9408, 0.9396, 0.9406,  ..., 0.9406, 0.9408, 0.9408],
         [0.0592, 0.0604, 0.0594,  ..., 0.0594, 0.0592, 0.0592]],
        [[0.9409, 0.9409, 0.9409,  ..., 0.9408, 0.9403, 0.9402],
         [0.0591, 0.0591, 0.0591,  ..., 0.0592, 0.0597, 0.0598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9445, 0.9451, 0.9447,  ..., 0.9446, 0.9450, 0.9451],
         [0.0555, 0.0549, 0.0553,  ..., 0.0554, 0.0550, 0.0549]],
        [[0.9444, 0.9446, 0.9434,  ..., 0.9436, 0.9433, 0.9485],
         [0.0556, 0.0554, 0.0566,  ..., 0.0564, 0.0567, 0.0515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:42,635 [Process: 0] Synchronize training processes
2024-08-18 14:42:42,635 [Process: 0] Evaluating...
2024-08-18 14:42:42,637 [Process: 0] EPOCH 146:
2024-08-18 14:42:42,638 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:44,069 [Process: 0] Synchronize training processes
2024-08-18 14:42:44,069 [Process: 0] Evaluating...
2024-08-18 14:42:44,071 [Process: 0] EPOCH 147:
2024-08-18 14:42:44,073 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9401, 0.9392, 0.9401,  ..., 0.9398, 0.9403, 0.9403],
         [0.0599, 0.0608, 0.0599,  ..., 0.0602, 0.0597, 0.0597]],
        [[0.9404, 0.9393, 0.9404,  ..., 0.9402, 0.9395, 0.9399],
         [0.0596, 0.0607, 0.0596,  ..., 0.0598, 0.0605, 0.0601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9421, 0.9431, 0.9427,  ..., 0.9431, 0.9430, 0.9429],
         [0.0579, 0.0569, 0.0573,  ..., 0.0569, 0.0570, 0.0571]],
        [[0.9422, 0.9416, 0.9417,  ..., 0.9418, 0.9418, 0.9550],
         [0.0578, 0.0584, 0.0583,  ..., 0.0582, 0.0582, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9388, 0.8946, 0.9387,  ..., 0.9391, 0.9389, 0.9393],
         [0.0612, 0.1054, 0.0613,  ..., 0.0609, 0.0611, 0.0607]],
        [[0.9387, 0.9391, 0.9387,  ..., 0.9387, 0.9393, 0.9388],
         [0.0613, 0.0609, 0.0613,  ..., 0.0613, 0.0607, 0.0612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:45,501 [Process: 0] Synchronize training processes
2024-08-18 14:42:45,502 [Process: 0] Evaluating...
2024-08-18 14:42:45,504 [Process: 0] EPOCH 148:
2024-08-18 14:42:45,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9401, 0.9397, 0.9401,  ..., 0.9405, 0.9397, 0.9403],
         [0.0599, 0.0603, 0.0599,  ..., 0.0595, 0.0603, 0.0597]],
        [[0.9396, 0.9408, 0.9398,  ..., 0.9394, 0.9392, 0.9495],
         [0.0604, 0.0592, 0.0602,  ..., 0.0606, 0.0608, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9407, 0.9404, 0.9408,  ..., 0.9403, 0.9405, 0.9408],
         [0.0593, 0.0596, 0.0592,  ..., 0.0597, 0.0595, 0.0592]],
        [[0.9404, 0.9404, 0.9402,  ..., 0.9406, 0.9404, 0.9408],
         [0.0596, 0.0596, 0.0598,  ..., 0.0594, 0.0596, 0.0592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9407, 0.9402, 0.9402,  ..., 0.9412, 0.9408, 0.9408],
         [0.0593, 0.0598, 0.0598,  ..., 0.0588, 0.0592, 0.0592]],
        [[0.9393, 0.9396, 0.9401,  ..., 0.9390, 0.9390, 0.9459],
         [0.0607, 0.0604, 0.0599,  ..., 0.0610, 0.0610, 0.0541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:46,933 [Process: 0] Synchronize training processes
2024-08-18 14:42:46,933 [Process: 0] Evaluating...
2024-08-18 14:42:46,935 [Process: 0] EPOCH 149:
2024-08-18 14:42:46,937 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9405, 0.9406, 0.9406,  ..., 0.9407, 0.9408, 0.9411],
         [0.0595, 0.0594, 0.0594,  ..., 0.0593, 0.0592, 0.0589]],
        [[0.9404, 0.9404, 0.9410,  ..., 0.9413, 0.9410, 0.9404],
         [0.0596, 0.0596, 0.0590,  ..., 0.0587, 0.0590, 0.0596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9406, 0.9417, 0.9411,  ..., 0.9404, 0.9421, 0.9407],
         [0.0594, 0.0583, 0.0589,  ..., 0.0596, 0.0579, 0.0593]],
        [[0.9403, 0.9411, 0.9410,  ..., 0.9403, 0.9406, 0.9409],
         [0.0597, 0.0589, 0.0590,  ..., 0.0597, 0.0594, 0.0591]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:48,356 [Process: 0] Synchronize training processes
2024-08-18 14:42:48,357 [Process: 0] Evaluating...
2024-08-18 14:42:48,358 [Process: 0] EPOCH 150:
2024-08-18 14:42:48,360 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:49,828 [Process: 0] Synchronize training processes
2024-08-18 14:42:49,828 [Process: 0] Evaluating...
2024-08-18 14:42:49,830 [Process: 0] EPOCH 151:
2024-08-18 14:42:49,832 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9409, 0.9404, 0.9406,  ..., 0.9406, 0.9408, 0.9404],
         [0.0591, 0.0596, 0.0594,  ..., 0.0594, 0.0592, 0.0596]],
        [[0.9409, 0.9410, 0.9411,  ..., 0.9407, 0.9409, 0.9408],
         [0.0591, 0.0590, 0.0589,  ..., 0.0593, 0.0591, 0.0592]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9426, 0.9435, 0.9433,  ..., 0.9412, 0.9426, 0.9434],
         [0.0574, 0.0565, 0.0567,  ..., 0.0588, 0.0574, 0.0566]],
        [[0.9426, 0.9425, 0.9426,  ..., 0.9419, 0.9405, 0.9257],
         [0.0574, 0.0575, 0.0574,  ..., 0.0581, 0.0595, 0.0743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9393, 0.9396, 0.9401,  ..., 0.9402, 0.9402, 0.9404],
         [0.0607, 0.0604, 0.0599,  ..., 0.0598, 0.0598, 0.0596]],
        [[0.9396, 0.9406, 0.9399,  ..., 0.9395, 0.9398, 0.9407],
         [0.0604, 0.0594, 0.0601,  ..., 0.0605, 0.0602, 0.0593]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:51,268 [Process: 0] Synchronize training processes
2024-08-18 14:42:51,268 [Process: 0] Evaluating...
2024-08-18 14:42:51,276 [Process: 0] EPOCH 152:
2024-08-18 14:42:51,278 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9440, 0.9412, 0.9411,  ..., 0.9437, 0.9430, 0.9423],
         [0.0560, 0.0588, 0.0589,  ..., 0.0563, 0.0570, 0.0577]],
        [[0.9441, 0.9440, 0.9440,  ..., 0.9444, 0.9447, 0.9353],
         [0.0559, 0.0560, 0.0560,  ..., 0.0556, 0.0553, 0.0647]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9379, 0.9376, 0.9388,  ..., 0.9384, 0.9381, 0.9381],
         [0.0621, 0.0624, 0.0612,  ..., 0.0616, 0.0619, 0.0619]],
        [[0.9386, 0.9388, 0.9382,  ..., 0.9373, 0.9378, 0.9377],
         [0.0614, 0.0612, 0.0618,  ..., 0.0627, 0.0622, 0.0623]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9426, 0.9419, 0.9396,  ..., 0.9439, 0.9371, 0.9380],
         [0.0574, 0.0581, 0.0604,  ..., 0.0561, 0.0629, 0.0620]],
        [[0.9478, 0.9471, 0.9466,  ..., 0.9472, 0.9460, 0.9389],
         [0.0522, 0.0529, 0.0534,  ..., 0.0528, 0.0540, 0.0611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:52,706 [Process: 0] Synchronize training processes
2024-08-18 14:42:52,706 [Process: 0] Evaluating...
2024-08-18 14:42:52,708 [Process: 0] EPOCH 153:
2024-08-18 14:42:52,710 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:54,139 [Process: 0] Synchronize training processes
2024-08-18 14:42:54,139 [Process: 0] Evaluating...
2024-08-18 14:42:54,141 [Process: 0] EPOCH 154:
2024-08-18 14:42:54,144 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9363, 0.9366, 0.9376,  ..., 0.9361, 0.9364, 0.9362],
         [0.0637, 0.0634, 0.0624,  ..., 0.0639, 0.0636, 0.0638]],
        [[0.9371, 0.9368, 0.9359,  ..., 0.9348, 0.9372, 0.9358],
         [0.0629, 0.0632, 0.0641,  ..., 0.0652, 0.0628, 0.0642]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9437, 0.9419, 0.9443,  ..., 0.9436, 0.9437, 0.9420],
         [0.0563, 0.0581, 0.0557,  ..., 0.0564, 0.0563, 0.0580]],
        [[0.9438, 0.9445, 0.9442,  ..., 0.9438, 0.9448, 0.9331],
         [0.0562, 0.0555, 0.0558,  ..., 0.0562, 0.0552, 0.0669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9374, 0.9375, 0.9368,  ..., 0.9382, 0.9367, 0.9377],
         [0.0626, 0.0625, 0.0632,  ..., 0.0618, 0.0633, 0.0623]],
        [[0.9373, 0.9375, 0.9383,  ..., 0.9380, 0.9375, 0.9371],
         [0.0627, 0.0625, 0.0617,  ..., 0.0620, 0.0625, 0.0629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:42:55,571 [Process: 0] Synchronize training processes
2024-08-18 14:42:55,572 [Process: 0] Evaluating...
2024-08-18 14:42:55,573 [Process: 0] EPOCH 155:
2024-08-18 14:42:55,575 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9450, 0.9457, 0.9459,  ..., 0.9459, 0.9446, 0.9444],
         [0.0550, 0.0543, 0.0541,  ..., 0.0541, 0.0554, 0.0556]],
        [[0.9448, 0.9455, 0.9449,  ..., 0.9440, 0.9444, 0.9359],
         [0.0552, 0.0545, 0.0551,  ..., 0.0560, 0.0556, 0.0641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9352, 0.9360, 0.9365,  ..., 0.9366, 0.9366, 0.9363],
         [0.0648, 0.0640, 0.0635,  ..., 0.0634, 0.0634, 0.0637]],
        [[0.9362, 0.9357, 0.9362,  ..., 0.9362, 0.9367, 0.9366],
         [0.0638, 0.0643, 0.0638,  ..., 0.0638, 0.0633, 0.0634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:42:57,005 [Process: 0] Synchronize training processes
2024-08-18 14:42:57,005 [Process: 0] Evaluating...
2024-08-18 14:42:57,007 [Process: 0] EPOCH 156:
2024-08-18 14:42:57,009 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9476, 0.9469, 0.9467,  ..., 0.9461, 0.9477, 0.9461],
         [0.0524, 0.0531, 0.0533,  ..., 0.0539, 0.0523, 0.0539]],
        [[0.9456, 0.9453, 0.9463,  ..., 0.9454, 0.9457, 0.9430],
         [0.0544, 0.0547, 0.0537,  ..., 0.0546, 0.0543, 0.0570]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9354, 0.9358, 0.9361,  ..., 0.9358, 0.9360, 0.9364],
         [0.0646, 0.0642, 0.0639,  ..., 0.0642, 0.0640, 0.0636]],
        [[0.9352, 0.9351, 0.9360,  ..., 0.9361, 0.9352, 0.9355],
         [0.0648, 0.0649, 0.0640,  ..., 0.0639, 0.0648, 0.0645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9482, 0.9485, 0.9494,  ..., 0.9472, 0.9481, 0.9489],
         [0.0518, 0.0515, 0.0506,  ..., 0.0528, 0.0519, 0.0511]],
        [[0.9466, 0.9482, 0.9460,  ..., 0.9473, 0.9465, 0.9445],
         [0.0534, 0.0518, 0.0540,  ..., 0.0527, 0.0535, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:58,437 [Process: 0] Synchronize training processes
2024-08-18 14:42:58,437 [Process: 0] Evaluating...
2024-08-18 14:42:58,439 [Process: 0] EPOCH 157:
2024-08-18 14:42:58,441 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:42:59,873 [Process: 0] Synchronize training processes
2024-08-18 14:42:59,873 [Process: 0] Evaluating...
2024-08-18 14:42:59,875 [Process: 0] EPOCH 158:
2024-08-18 14:42:59,877 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9375, 0.9383, 0.9376,  ..., 0.9376, 0.9378, 0.9380],
         [0.0625, 0.0617, 0.0624,  ..., 0.0624, 0.0622, 0.0620]],
        [[0.9375, 0.9379, 0.9376,  ..., 0.9376, 0.9383, 0.9374],
         [0.0625, 0.0621, 0.0624,  ..., 0.0624, 0.0617, 0.0626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9482, 0.9490, 0.9496,  ..., 0.9500, 0.9487, 0.9502],
         [0.0518, 0.0510, 0.0504,  ..., 0.0500, 0.0513, 0.0498]],
        [[0.9482, 0.9494, 0.9487,  ..., 0.9481, 0.9484, 0.9466],
         [0.0518, 0.0506, 0.0513,  ..., 0.0519, 0.0516, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9391, 0.9401, 0.9395,  ..., 0.9402, 0.9392, 0.9400],
         [0.0609, 0.0599, 0.0605,  ..., 0.0598, 0.0608, 0.0600]],
        [[0.9396, 0.9393, 0.9392,  ..., 0.9392, 0.9398, 0.9399],
         [0.0604, 0.0607, 0.0608,  ..., 0.0608, 0.0602, 0.0601]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:01,316 [Process: 0] Synchronize training processes
2024-08-18 14:43:01,316 [Process: 0] Evaluating...
2024-08-18 14:43:01,318 [Process: 0] EPOCH 159:
2024-08-18 14:43:01,320 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9511, 0.9509, 0.9498,  ..., 0.9510, 0.9503, 0.9505],
         [0.0489, 0.0491, 0.0502,  ..., 0.0490, 0.0497, 0.0495]],
        [[0.9497, 0.9506, 0.9480,  ..., 0.9498, 0.9484, 0.9515],
         [0.0503, 0.0494, 0.0520,  ..., 0.0502, 0.0516, 0.0485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9415, 0.9410, 0.9418,  ..., 0.9414, 0.9412, 0.9412],
         [0.0585, 0.0590, 0.0582,  ..., 0.0586, 0.0588, 0.0588]],
        [[0.9415, 0.9409, 0.9409,  ..., 0.9411, 0.9410, 0.9417],
         [0.0585, 0.0591, 0.0591,  ..., 0.0589, 0.0590, 0.0583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9503, 0.9510, 0.9522,  ..., 0.9507, 0.9504, 0.9506],
         [0.0497, 0.0490, 0.0478,  ..., 0.0493, 0.0496, 0.0494]],
        [[0.9510, 0.9510, 0.9502,  ..., 0.9503, 0.9505, 0.9499],
         [0.0490, 0.0490, 0.0498,  ..., 0.0497, 0.0495, 0.0501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:02,754 [Process: 0] Synchronize training processes
2024-08-18 14:43:02,754 [Process: 0] Evaluating...
2024-08-18 14:43:02,756 [Process: 0] EPOCH 160:
2024-08-18 14:43:02,758 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:04,187 [Process: 0] Synchronize training processes
2024-08-18 14:43:04,187 [Process: 0] Evaluating...
2024-08-18 14:43:04,189 [Process: 0] EPOCH 161:
2024-08-18 14:43:04,191 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9412, 0.9414, 0.9423,  ..., 0.9414, 0.9414, 0.9419],
         [0.0588, 0.0586, 0.0577,  ..., 0.0586, 0.0586, 0.0581]],
        [[0.9411, 0.9412, 0.9413,  ..., 0.9413, 0.9417, 0.9414],
         [0.0589, 0.0588, 0.0587,  ..., 0.0587, 0.0583, 0.0586]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9521, 0.9532, 0.9519,  ..., 0.9523, 0.9528, 0.9517],
         [0.0479, 0.0468, 0.0481,  ..., 0.0477, 0.0472, 0.0483]],
        [[0.9521, 0.9525, 0.9519,  ..., 0.9518, 0.9509, 0.9518],
         [0.0479, 0.0475, 0.0481,  ..., 0.0482, 0.0491, 0.0482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9423, 0.9426, 0.9425,  ..., 0.9430, 0.9425, 0.9422],
         [0.0577, 0.0574, 0.0575,  ..., 0.0570, 0.0575, 0.0578]],
        [[0.9426, 0.9424, 0.9424,  ..., 0.9423, 0.9425, 0.9427],
         [0.0574, 0.0576, 0.0576,  ..., 0.0577, 0.0575, 0.0573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:05,621 [Process: 0] Synchronize training processes
2024-08-18 14:43:05,622 [Process: 0] Evaluating...
2024-08-18 14:43:05,630 [Process: 0] EPOCH 162:
2024-08-18 14:43:05,632 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9535, 0.9527, 0.9529,  ..., 0.9540, 0.9537, 0.9524],
         [0.0465, 0.0473, 0.0471,  ..., 0.0460, 0.0463, 0.0476]],
        [[0.9525, 0.9533, 0.9529,  ..., 0.9525, 0.9518, 0.9535],
         [0.0475, 0.0467, 0.0471,  ..., 0.0475, 0.0482, 0.0465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9429, 0.9434, 0.9432,  ..., 0.9428, 0.9429, 0.9435],
         [0.0571, 0.0566, 0.0568,  ..., 0.0572, 0.0571, 0.0565]],
        [[0.9428, 0.9429, 0.9428,  ..., 0.9427, 0.9428, 0.9431],
         [0.0572, 0.0571, 0.0572,  ..., 0.0573, 0.0572, 0.0569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-18 14:43:07,062 [Process: 0] Synchronize training processes
2024-08-18 14:43:07,062 [Process: 0] Evaluating...
2024-08-18 14:43:07,064 [Process: 0] EPOCH 163:
2024-08-18 14:43:07,066 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9526, 0.9527, 0.9531,  ..., 0.9525, 0.9534, 0.9530],
         [0.0474, 0.0473, 0.0469,  ..., 0.0475, 0.0466, 0.0470]],
        [[0.9530, 0.9526, 0.9530,  ..., 0.9521, 0.9513, 0.9519],
         [0.0470, 0.0474, 0.0470,  ..., 0.0479, 0.0487, 0.0481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9435, 0.9434, 0.9444,  ..., 0.9439, 0.9439, 0.9444],
         [0.0565, 0.0566, 0.0556,  ..., 0.0561, 0.0561, 0.0556]],
        [[0.9436, 0.9440, 0.9439,  ..., 0.9443, 0.9440, 0.9438],
         [0.0564, 0.0560, 0.0561,  ..., 0.0557, 0.0560, 0.0562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9530, 0.9537, 0.9531,  ..., 0.9532, 0.9535, 0.9528],
         [0.0470, 0.0463, 0.0469,  ..., 0.0468, 0.0465, 0.0472]],
        [[0.9527, 0.9523, 0.9527,  ..., 0.9532, 0.9517, 0.9515],
         [0.0473, 0.0477, 0.0473,  ..., 0.0468, 0.0483, 0.0485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:08,495 [Process: 0] Synchronize training processes
2024-08-18 14:43:08,495 [Process: 0] Evaluating...
2024-08-18 14:43:08,497 [Process: 0] EPOCH 164:
2024-08-18 14:43:08,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:09,926 [Process: 0] Synchronize training processes
2024-08-18 14:43:09,926 [Process: 0] Evaluating...
2024-08-18 14:43:09,928 [Process: 0] EPOCH 165:
2024-08-18 14:43:09,930 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9449, 0.9448, 0.9446,  ..., 0.9448, 0.9446, 0.9453],
         [0.0551, 0.0552, 0.0554,  ..., 0.0552, 0.0554, 0.0547]],
        [[0.9450, 0.9449, 0.9450,  ..., 0.9452, 0.9447, 0.9451],
         [0.0550, 0.0551, 0.0550,  ..., 0.0548, 0.0553, 0.0549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9522, 0.9534, 0.9528,  ..., 0.9531, 0.9536, 0.9532],
         [0.0478, 0.0466, 0.0472,  ..., 0.0469, 0.0464, 0.0468]],
        [[0.9539, 0.9529, 0.9530,  ..., 0.9547, 0.9526, 0.9518],
         [0.0461, 0.0471, 0.0470,  ..., 0.0453, 0.0474, 0.0482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9469, 0.9461, 0.9468,  ..., 0.9463, 0.9460, 0.9466],
         [0.0531, 0.0539, 0.0532,  ..., 0.0537, 0.0540, 0.0534]],
        [[0.9459, 0.9459, 0.9458,  ..., 0.9462, 0.9458, 0.9463],
         [0.0541, 0.0541, 0.0542,  ..., 0.0538, 0.0542, 0.0537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:11,360 [Process: 0] Synchronize training processes
2024-08-18 14:43:11,361 [Process: 0] Evaluating...
2024-08-18 14:43:11,363 [Process: 0] EPOCH 166:
2024-08-18 14:43:11,365 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9527, 0.9532, 0.9533,  ..., 0.9533, 0.9536, 0.9537],
         [0.0473, 0.0468, 0.0467,  ..., 0.0467, 0.0464, 0.0463]],
        [[0.9534, 0.9538, 0.9531,  ..., 0.9536, 0.9522, 0.9532],
         [0.0466, 0.0462, 0.0469,  ..., 0.0464, 0.0478, 0.0468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9463, 0.9464, 0.9462,  ..., 0.9469, 0.9465, 0.9462],
         [0.0537, 0.0536, 0.0538,  ..., 0.0531, 0.0535, 0.0538]],
        [[0.9463, 0.9461, 0.9458,  ..., 0.9458, 0.9459, 0.9459],
         [0.0537, 0.0539, 0.0542,  ..., 0.0542, 0.0541, 0.0541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9537, 0.9536, 0.9534,  ..., 0.9525, 0.9537, 0.9534],
         [0.0463, 0.0464, 0.0466,  ..., 0.0475, 0.0463, 0.0466]],
        [[0.9534, 0.9536, 0.9536,  ..., 0.9529, 0.9518, 0.9526],
         [0.0466, 0.0464, 0.0464,  ..., 0.0471, 0.0482, 0.0474]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:12,793 [Process: 0] Synchronize training processes
2024-08-18 14:43:12,793 [Process: 0] Evaluating...
2024-08-18 14:43:12,795 [Process: 0] EPOCH 167:
2024-08-18 14:43:12,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:14,227 [Process: 0] Synchronize training processes
2024-08-18 14:43:14,227 [Process: 0] Evaluating...
2024-08-18 14:43:14,229 [Process: 0] EPOCH 168:
2024-08-18 14:43:14,230 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9467, 0.9465, 0.9464,  ..., 0.9462, 0.9468, 0.9470],
         [0.0533, 0.0535, 0.0536,  ..., 0.0538, 0.0532, 0.0530]],
        [[0.9464, 0.9464, 0.9461,  ..., 0.9466, 0.9467, 0.9466],
         [0.0536, 0.0536, 0.0539,  ..., 0.0534, 0.0533, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9537, 0.9532, 0.9540,  ..., 0.9526, 0.9537, 0.9545],
         [0.0463, 0.0468, 0.0460,  ..., 0.0474, 0.0463, 0.0455]],
        [[0.9525, 0.9536, 0.9529,  ..., 0.9539, 0.9525, 0.9520],
         [0.0475, 0.0464, 0.0471,  ..., 0.0461, 0.0475, 0.0480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9475, 0.9475, 0.9480,  ..., 0.9473, 0.9475, 0.9475],
         [0.0525, 0.0525, 0.0520,  ..., 0.0527, 0.0525, 0.0525]],
        [[0.9477, 0.9472, 0.9472,  ..., 0.9468, 0.9473, 0.9471],
         [0.0523, 0.0528, 0.0528,  ..., 0.0532, 0.0527, 0.0529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:15,661 [Process: 0] Synchronize training processes
2024-08-18 14:43:15,662 [Process: 0] Evaluating...
2024-08-18 14:43:15,664 [Process: 0] EPOCH 169:
2024-08-18 14:43:15,665 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9543, 0.9534, 0.9532,  ..., 0.9529, 0.9534, 0.9534],
         [0.0457, 0.0466, 0.0468,  ..., 0.0471, 0.0466, 0.0466]],
        [[0.9535, 0.9535, 0.9538,  ..., 0.9540, 0.9518, 0.9513],
         [0.0465, 0.0465, 0.0462,  ..., 0.0460, 0.0482, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9480, 0.9478, 0.9484,  ..., 0.9482, 0.9489, 0.9480],
         [0.0520, 0.0522, 0.0516,  ..., 0.0518, 0.0511, 0.0520]],
        [[0.9480, 0.9479, 0.9479,  ..., 0.9479, 0.9481, 0.9479],
         [0.0520, 0.0521, 0.0521,  ..., 0.0521, 0.0519, 0.0521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:43:17,094 [Process: 0] Synchronize training processes
2024-08-18 14:43:17,094 [Process: 0] Evaluating...
2024-08-18 14:43:17,096 [Process: 0] EPOCH 170:
2024-08-18 14:43:17,098 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9536, 0.9535, 0.9535,  ..., 0.9533, 0.9528, 0.9526],
         [0.0464, 0.0465, 0.0465,  ..., 0.0467, 0.0472, 0.0474]],
        [[0.9539, 0.9538, 0.9525,  ..., 0.9533, 0.9532, 0.9516],
         [0.0461, 0.0462, 0.0475,  ..., 0.0467, 0.0468, 0.0484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9493, 0.9497, 0.9494,  ..., 0.9490, 0.9495, 0.9488],
         [0.0507, 0.0503, 0.0506,  ..., 0.0510, 0.0505, 0.0512]],
        [[0.9488, 0.9486, 0.9486,  ..., 0.9487, 0.9489, 0.9489],
         [0.0512, 0.0514, 0.0514,  ..., 0.0513, 0.0511, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9532, 0.9533, 0.9538,  ..., 0.9542, 0.9524, 0.9542],
         [0.0468, 0.0467, 0.0462,  ..., 0.0458, 0.0476, 0.0458]],
        [[0.9532, 0.9531, 0.9527,  ..., 0.9533, 0.9533, 0.9513],
         [0.0468, 0.0469, 0.0473,  ..., 0.0467, 0.0467, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:18,534 [Process: 0] Synchronize training processes
2024-08-18 14:43:18,535 [Process: 0] Evaluating...
2024-08-18 14:43:18,537 [Process: 0] EPOCH 171:
2024-08-18 14:43:18,538 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:19,968 [Process: 0] Synchronize training processes
2024-08-18 14:43:19,968 [Process: 0] Evaluating...
2024-08-18 14:43:19,977 [Process: 0] EPOCH 172:
2024-08-18 14:43:19,979 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9498, 0.9504, 0.9508,  ..., 0.9511, 0.9505, 0.9495],
         [0.0502, 0.0496, 0.0492,  ..., 0.0489, 0.0495, 0.0505]],
        [[0.9502, 0.9499, 0.9501,  ..., 0.9498, 0.9498, 0.9500],
         [0.0498, 0.0501, 0.0499,  ..., 0.0502, 0.0502, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9536, 0.9537, 0.9535,  ..., 0.9531, 0.9532, 0.9528],
         [0.0464, 0.0463, 0.0465,  ..., 0.0469, 0.0468, 0.0472]],
        [[0.9529, 0.9535, 0.9528,  ..., 0.9539, 0.9530, 0.9516],
         [0.0471, 0.0465, 0.0472,  ..., 0.0461, 0.0470, 0.0484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9505, 0.9520, 0.9516,  ..., 0.9507, 0.9511, 0.9506],
         [0.0495, 0.0480, 0.0484,  ..., 0.0493, 0.0489, 0.0494]],
        [[0.9506, 0.9507, 0.9505,  ..., 0.9507, 0.9506, 0.9507],
         [0.0494, 0.0493, 0.0495,  ..., 0.0493, 0.0494, 0.0493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:21,413 [Process: 0] Synchronize training processes
2024-08-18 14:43:21,413 [Process: 0] Evaluating...
2024-08-18 14:43:21,415 [Process: 0] EPOCH 173:
2024-08-18 14:43:21,417 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9524, 0.9523, 0.9524,  ..., 0.9522, 0.9529, 0.9528],
         [0.0476, 0.0477, 0.0476,  ..., 0.0478, 0.0471, 0.0472]],
        [[0.9515, 0.9518, 0.9516,  ..., 0.9523, 0.9520, 0.9521],
         [0.0485, 0.0482, 0.0484,  ..., 0.0477, 0.0480, 0.0479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9515, 0.9518, 0.9518,  ..., 0.9516, 0.9517, 0.9508],
         [0.0485, 0.0482, 0.0482,  ..., 0.0484, 0.0483, 0.0492]],
        [[0.9511, 0.9514, 0.9514,  ..., 0.9513, 0.9512, 0.9514],
         [0.0489, 0.0486, 0.0486,  ..., 0.0487, 0.0488, 0.0486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9537, 0.9530, 0.9539,  ..., 0.9535, 0.9534, 0.9537],
         [0.0463, 0.0470, 0.0461,  ..., 0.0465, 0.0466, 0.0463]],
        [[0.9525, 0.9523, 0.9521,  ..., 0.9530, 0.9518, 0.9528],
         [0.0475, 0.0477, 0.0479,  ..., 0.0470, 0.0482, 0.0472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:22,849 [Process: 0] Synchronize training processes
2024-08-18 14:43:22,850 [Process: 0] Evaluating...
2024-08-18 14:43:22,851 [Process: 0] EPOCH 174:
2024-08-18 14:43:22,853 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:24,281 [Process: 0] Synchronize training processes
2024-08-18 14:43:24,281 [Process: 0] Evaluating...
2024-08-18 14:43:24,283 [Process: 0] EPOCH 175:
2024-08-18 14:43:24,285 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9517, 0.9525, 0.9521,  ..., 0.9520, 0.9523, 0.9511],
         [0.0483, 0.0475, 0.0479,  ..., 0.0480, 0.0477, 0.0489]],
        [[0.9514, 0.9513, 0.9514,  ..., 0.9514, 0.9517, 0.9514],
         [0.0486, 0.0487, 0.0486,  ..., 0.0486, 0.0483, 0.0486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9540, 0.9544, 0.9539,  ..., 0.9543, 0.9544, 0.9538],
         [0.0460, 0.0456, 0.0461,  ..., 0.0457, 0.0456, 0.0462]],
        [[0.9538, 0.9536, 0.9536,  ..., 0.9554, 0.9530, 0.9518],
         [0.0462, 0.0464, 0.0464,  ..., 0.0446, 0.0470, 0.0482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9515, 0.9519, 0.9523,  ..., 0.9517, 0.9519, 0.9505],
         [0.0485, 0.0481, 0.0477,  ..., 0.0483, 0.0481, 0.0495]],
        [[0.9512, 0.9513, 0.9513,  ..., 0.9512, 0.9510, 0.9514],
         [0.0488, 0.0487, 0.0487,  ..., 0.0488, 0.0490, 0.0486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:25,714 [Process: 0] Synchronize training processes
2024-08-18 14:43:25,714 [Process: 0] Evaluating...
2024-08-18 14:43:25,716 [Process: 0] EPOCH 176:
2024-08-18 14:43:25,718 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9553, 0.9550, 0.9543,  ..., 0.9552, 0.9548, 0.9553],
         [0.0447, 0.0450, 0.0457,  ..., 0.0448, 0.0452, 0.0447]],
        [[0.9543, 0.9553, 0.9545,  ..., 0.9552, 0.9537, 0.9537],
         [0.0457, 0.0447, 0.0455,  ..., 0.0448, 0.0463, 0.0463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9513, 0.9521, 0.9517,  ..., 0.9518, 0.9510, 0.9515],
         [0.0487, 0.0479, 0.0483,  ..., 0.0482, 0.0490, 0.0485]],
        [[0.9511, 0.9510, 0.9513,  ..., 0.9514, 0.9513, 0.9510],
         [0.0489, 0.0490, 0.0487,  ..., 0.0486, 0.0487, 0.0490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:43:27,149 [Process: 0] Synchronize training processes
2024-08-18 14:43:27,149 [Process: 0] Evaluating...
2024-08-18 14:43:27,151 [Process: 0] EPOCH 177:
2024-08-18 14:43:27,152 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9554, 0.9556, 0.9553,  ..., 0.9553, 0.9561, 0.9554],
         [0.0446, 0.0444, 0.0447,  ..., 0.0447, 0.0439, 0.0446]],
        [[0.9553, 0.9558, 0.9546,  ..., 0.9567, 0.9538, 0.9542],
         [0.0447, 0.0442, 0.0454,  ..., 0.0433, 0.0462, 0.0458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9510, 0.9516, 0.9503,  ..., 0.9501, 0.9509, 0.9504],
         [0.0490, 0.0484, 0.0497,  ..., 0.0499, 0.0491, 0.0496]],
        [[0.9500, 0.9504, 0.9504,  ..., 0.9508, 0.9501, 0.9503],
         [0.0500, 0.0496, 0.0496,  ..., 0.0492, 0.0499, 0.0497]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9559, 0.9561, 0.9559,  ..., 0.9560, 0.9558, 0.9557],
         [0.0441, 0.0439, 0.0441,  ..., 0.0440, 0.0442, 0.0443]],
        [[0.9568, 0.9559, 0.9559,  ..., 0.9565, 0.9544, 0.9553],
         [0.0432, 0.0441, 0.0441,  ..., 0.0435, 0.0456, 0.0447]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:28,582 [Process: 0] Synchronize training processes
2024-08-18 14:43:28,582 [Process: 0] Evaluating...
2024-08-18 14:43:28,584 [Process: 0] EPOCH 178:
2024-08-18 14:43:28,586 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:30,012 [Process: 0] Synchronize training processes
2024-08-18 14:43:30,012 [Process: 0] Evaluating...
2024-08-18 14:43:30,014 [Process: 0] EPOCH 179:
2024-08-18 14:43:30,016 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9496, 0.9505, 0.9505,  ..., 0.9507, 0.9503, 0.9489],
         [0.0504, 0.0495, 0.0495,  ..., 0.0493, 0.0497, 0.0511]],
        [[0.9495, 0.9500, 0.9497,  ..., 0.9502, 0.9504, 0.9500],
         [0.0505, 0.0500, 0.0503,  ..., 0.0498, 0.0496, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9567, 0.9567, 0.9561,  ..., 0.9564, 0.9560, 0.9568],
         [0.0433, 0.0433, 0.0439,  ..., 0.0436, 0.0440, 0.0432]],
        [[0.9575, 0.9562, 0.9559,  ..., 0.9564, 0.9542, 0.9549],
         [0.0425, 0.0438, 0.0441,  ..., 0.0436, 0.0458, 0.0451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9498, 0.9506, 0.9504,  ..., 0.9497, 0.9508, 0.9483],
         [0.0502, 0.0494, 0.0496,  ..., 0.0503, 0.0492, 0.0517]],
        [[0.9497, 0.9497, 0.9496,  ..., 0.9497, 0.9499, 0.9499],
         [0.0503, 0.0503, 0.0504,  ..., 0.0503, 0.0501, 0.0501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:31,444 [Process: 0] Synchronize training processes
2024-08-18 14:43:31,444 [Process: 0] Evaluating...
2024-08-18 14:43:31,446 [Process: 0] EPOCH 180:
2024-08-18 14:43:31,448 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9560, 0.9558, 0.9566,  ..., 0.9561, 0.9564, 0.9558],
         [0.0440, 0.0442, 0.0434,  ..., 0.0439, 0.0436, 0.0442]],
        [[0.9568, 0.9567, 0.9555,  ..., 0.9569, 0.9568, 0.9548],
         [0.0432, 0.0433, 0.0445,  ..., 0.0431, 0.0432, 0.0452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9496, 0.9502, 0.9499,  ..., 0.9495, 0.9498, 0.9480],
         [0.0504, 0.0498, 0.0501,  ..., 0.0505, 0.0502, 0.0520]],
        [[0.9499, 0.9493, 0.9496,  ..., 0.9495, 0.9498, 0.9495],
         [0.0501, 0.0507, 0.0504,  ..., 0.0505, 0.0502, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9561, 0.9563, 0.9563,  ..., 0.9560, 0.9558, 0.9565],
         [0.0439, 0.0437, 0.0437,  ..., 0.0440, 0.0442, 0.0435]],
        [[0.9553, 0.9563, 0.9556,  ..., 0.9569, 0.9557, 0.9545],
         [0.0447, 0.0437, 0.0444,  ..., 0.0431, 0.0443, 0.0455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:32,879 [Process: 0] Synchronize training processes
2024-08-18 14:43:32,880 [Process: 0] Evaluating...
2024-08-18 14:43:32,881 [Process: 0] EPOCH 181:
2024-08-18 14:43:32,883 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:34,311 [Process: 0] Synchronize training processes
2024-08-18 14:43:34,312 [Process: 0] Evaluating...
2024-08-18 14:43:34,320 [Process: 0] EPOCH 182:
2024-08-18 14:43:34,322 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9495, 0.9501, 0.9498,  ..., 0.9499, 0.9501, 0.9471],
         [0.0505, 0.0499, 0.0502,  ..., 0.0501, 0.0499, 0.0529]],
        [[0.9494, 0.9490, 0.9491,  ..., 0.9494, 0.9493, 0.9492],
         [0.0506, 0.0510, 0.0509,  ..., 0.0506, 0.0507, 0.0508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9563, 0.9564, 0.9561,  ..., 0.9567, 0.9560, 0.9564],
         [0.0437, 0.0436, 0.0439,  ..., 0.0433, 0.0440, 0.0436]],
        [[0.9573, 0.9571, 0.9553,  ..., 0.9566, 0.9553, 0.9550],
         [0.0427, 0.0429, 0.0447,  ..., 0.0434, 0.0447, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9494, 0.9496, 0.9494,  ..., 0.9495, 0.9493, 0.9478],
         [0.0506, 0.0504, 0.0506,  ..., 0.0505, 0.0507, 0.0522]],
        [[0.9492, 0.9495, 0.9494,  ..., 0.9492, 0.9492, 0.9493],
         [0.0508, 0.0505, 0.0506,  ..., 0.0508, 0.0508, 0.0507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:35,749 [Process: 0] Synchronize training processes
2024-08-18 14:43:35,749 [Process: 0] Evaluating...
2024-08-18 14:43:35,751 [Process: 0] EPOCH 183:
2024-08-18 14:43:35,753 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9567, 0.9569, 0.9559,  ..., 0.9570, 0.9565, 0.9569],
         [0.0433, 0.0431, 0.0441,  ..., 0.0430, 0.0435, 0.0431]],
        [[0.9567, 0.9565, 0.9559,  ..., 0.9560, 0.9557, 0.9551],
         [0.0433, 0.0435, 0.0441,  ..., 0.0440, 0.0443, 0.0449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9498, 0.9498, 0.9497,  ..., 0.9498, 0.9495, 0.9493],
         [0.0502, 0.0502, 0.0503,  ..., 0.0502, 0.0505, 0.0507]],
        [[0.9494, 0.9497, 0.9494,  ..., 0.9495, 0.9493, 0.9495],
         [0.0506, 0.0503, 0.0506,  ..., 0.0505, 0.0507, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9571, 0.9577, 0.9567,  ..., 0.9570, 0.9572, 0.9568],
         [0.0429, 0.0423, 0.0433,  ..., 0.0430, 0.0428, 0.0432]],
        [[0.9569, 0.9566, 0.9566,  ..., 0.9576, 0.9564, 0.9552],
         [0.0431, 0.0434, 0.0434,  ..., 0.0424, 0.0436, 0.0448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:37,184 [Process: 0] Synchronize training processes
2024-08-18 14:43:37,184 [Process: 0] Evaluating...
2024-08-18 14:43:37,186 [Process: 0] EPOCH 184:
2024-08-18 14:43:37,188 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9500, 0.9504, 0.9505,  ..., 0.9506, 0.9508, 0.9494],
         [0.0500, 0.0496, 0.0495,  ..., 0.0494, 0.0492, 0.0506]],
        [[0.9503, 0.9500, 0.9500,  ..., 0.9503, 0.9500, 0.9500],
         [0.0497, 0.0500, 0.0500,  ..., 0.0497, 0.0500, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9581, 0.9567, 0.9576,  ..., 0.9580, 0.9574, 0.9567],
         [0.0419, 0.0433, 0.0424,  ..., 0.0420, 0.0426, 0.0433]],
        [[0.9569, 0.9563, 0.9575,  ..., 0.9578, 0.9570, 0.9578],
         [0.0431, 0.0437, 0.0425,  ..., 0.0422, 0.0430, 0.0422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:38,619 [Process: 0] Synchronize training processes
2024-08-18 14:43:38,619 [Process: 0] Evaluating...
2024-08-18 14:43:38,621 [Process: 0] EPOCH 185:
2024-08-18 14:43:38,623 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:40,042 [Process: 0] Synchronize training processes
2024-08-18 14:43:40,042 [Process: 0] Evaluating...
2024-08-18 14:43:40,044 [Process: 0] EPOCH 186:
2024-08-18 14:43:40,046 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9506, 0.9513, 0.9508,  ..., 0.9512, 0.9515, 0.9498],
         [0.0494, 0.0487, 0.0492,  ..., 0.0488, 0.0485, 0.0502]],
        [[0.9509, 0.9506, 0.9506,  ..., 0.9508, 0.9510, 0.9507],
         [0.0491, 0.0494, 0.0494,  ..., 0.0492, 0.0490, 0.0493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9577, 0.9579, 0.9575,  ..., 0.9588, 0.9581, 0.9581],
         [0.0423, 0.0421, 0.0425,  ..., 0.0412, 0.0419, 0.0419]],
        [[0.9577, 0.9584, 0.9577,  ..., 0.9580, 0.9576, 0.9577],
         [0.0423, 0.0416, 0.0423,  ..., 0.0420, 0.0424, 0.0423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:43:41,469 [Process: 0] Synchronize training processes
2024-08-18 14:43:41,469 [Process: 0] Evaluating...
2024-08-18 14:43:41,471 [Process: 0] EPOCH 187:
2024-08-18 14:43:41,473 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9514, 0.9515, 0.9515,  ..., 0.9515, 0.9520, 0.9514],
         [0.0486, 0.0485, 0.0485,  ..., 0.0485, 0.0480, 0.0486]],
        [[0.9515, 0.9513, 0.9515,  ..., 0.9517, 0.9514, 0.9517],
         [0.0485, 0.0487, 0.0485,  ..., 0.0483, 0.0486, 0.0483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9583, 0.9588, 0.9590,  ..., 0.9590, 0.9592, 0.9588],
         [0.0417, 0.0412, 0.0410,  ..., 0.0410, 0.0408, 0.0412]],
        [[0.9590, 0.9580, 0.9589,  ..., 0.9587, 0.9580, 0.9569],
         [0.0410, 0.0420, 0.0411,  ..., 0.0413, 0.0420, 0.0431]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9512, 0.9521, 0.9518,  ..., 0.9517, 0.9521, 0.9515],
         [0.0488, 0.0479, 0.0482,  ..., 0.0483, 0.0479, 0.0485]],
        [[0.9521, 0.9518, 0.9518,  ..., 0.9523, 0.9517, 0.9517],
         [0.0479, 0.0482, 0.0482,  ..., 0.0477, 0.0483, 0.0483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:42,903 [Process: 0] Synchronize training processes
2024-08-18 14:43:42,904 [Process: 0] Evaluating...
2024-08-18 14:43:42,905 [Process: 0] EPOCH 188:
2024-08-18 14:43:42,907 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:44,339 [Process: 0] Synchronize training processes
2024-08-18 14:43:44,339 [Process: 0] Evaluating...
2024-08-18 14:43:44,341 [Process: 0] EPOCH 189:
2024-08-18 14:43:44,343 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9590, 0.9595, 0.9588,  ..., 0.9591, 0.9590, 0.9594],
         [0.0410, 0.0405, 0.0412,  ..., 0.0409, 0.0410, 0.0406]],
        [[0.9593, 0.9594, 0.9589,  ..., 0.9583, 0.9586, 0.9591],
         [0.0407, 0.0406, 0.0411,  ..., 0.0417, 0.0414, 0.0409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9517, 0.9522, 0.9525,  ..., 0.9521, 0.9522, 0.9521],
         [0.0483, 0.0478, 0.0475,  ..., 0.0479, 0.0478, 0.0479]],
        [[0.9521, 0.9519, 0.9518,  ..., 0.9521, 0.9522, 0.9516],
         [0.0479, 0.0481, 0.0482,  ..., 0.0479, 0.0478, 0.0484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9595, 0.9592, 0.9594,  ..., 0.9593, 0.9594, 0.9597],
         [0.0405, 0.0408, 0.0406,  ..., 0.0407, 0.0406, 0.0403]],
        [[0.9591, 0.9597, 0.9591,  ..., 0.9597, 0.9588, 0.9591],
         [0.0409, 0.0403, 0.0409,  ..., 0.0403, 0.0412, 0.0409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:45,762 [Process: 0] Synchronize training processes
2024-08-18 14:43:45,762 [Process: 0] Evaluating...
2024-08-18 14:43:45,764 [Process: 0] EPOCH 190:
2024-08-18 14:43:45,766 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9522, 0.9525, 0.9530,  ..., 0.9524, 0.9530, 0.9525],
         [0.0478, 0.0475, 0.0470,  ..., 0.0476, 0.0470, 0.0475]],
        [[0.9527, 0.9525, 0.9523,  ..., 0.9528, 0.9530, 0.9530],
         [0.0473, 0.0475, 0.0477,  ..., 0.0472, 0.0470, 0.0470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9607, 0.9593, 0.9597,  ..., 0.9595, 0.9603, 0.9596],
         [0.0393, 0.0407, 0.0403,  ..., 0.0405, 0.0397, 0.0404]],
        [[0.9602, 0.9599, 0.9602,  ..., 0.9596, 0.9594, 0.9589],
         [0.0398, 0.0401, 0.0398,  ..., 0.0404, 0.0406, 0.0411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9533, 0.9535, 0.9535,  ..., 0.9529, 0.9534, 0.9524],
         [0.0467, 0.0465, 0.0465,  ..., 0.0471, 0.0466, 0.0476]],
        [[0.9530, 0.9531, 0.9530,  ..., 0.9530, 0.9529, 0.9528],
         [0.0470, 0.0469, 0.0470,  ..., 0.0470, 0.0471, 0.0472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:47,180 [Process: 0] Synchronize training processes
2024-08-18 14:43:47,180 [Process: 0] Evaluating...
2024-08-18 14:43:47,182 [Process: 0] EPOCH 191:
2024-08-18 14:43:47,184 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9610, 0.9605, 0.9604,  ..., 0.9599, 0.9603, 0.9604],
         [0.0390, 0.0395, 0.0396,  ..., 0.0401, 0.0397, 0.0396]],
        [[0.9604, 0.9600, 0.9605,  ..., 0.9598, 0.9589, 0.9585],
         [0.0396, 0.0400, 0.0395,  ..., 0.0402, 0.0411, 0.0415]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9535, 0.9534, 0.9539,  ..., 0.9535, 0.9534, 0.9536],
         [0.0465, 0.0466, 0.0461,  ..., 0.0465, 0.0466, 0.0464]],
        [[0.9532, 0.9537, 0.9532,  ..., 0.9532, 0.9533, 0.9532],
         [0.0468, 0.0463, 0.0468,  ..., 0.0468, 0.0467, 0.0468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9605, 0.9604, 0.9606,  ..., 0.9613, 0.9604, 0.9608],
         [0.0395, 0.0396, 0.0394,  ..., 0.0387, 0.0396, 0.0392]],
        [[0.9598, 0.9608, 0.9608,  ..., 0.9610, 0.9598, 0.9595],
         [0.0402, 0.0392, 0.0392,  ..., 0.0390, 0.0402, 0.0405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 14:43:48,608 [Process: 0] Synchronize training processes
2024-08-18 14:43:48,608 [Process: 0] Evaluating...
2024-08-18 14:43:48,617 [Process: 0] EPOCH 192:
2024-08-18 14:43:48,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:50,047 [Process: 0] Synchronize training processes
2024-08-18 14:43:50,048 [Process: 0] Evaluating...
2024-08-18 14:43:50,050 [Process: 0] EPOCH 193:
2024-08-18 14:43:50,051 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9537, 0.9539, 0.9535,  ..., 0.9537, 0.9537, 0.9532],
         [0.0463, 0.0461, 0.0465,  ..., 0.0463, 0.0463, 0.0468]],
        [[0.9537, 0.9536, 0.9535,  ..., 0.9535, 0.9539, 0.9535],
         [0.0463, 0.0464, 0.0465,  ..., 0.0465, 0.0461, 0.0465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9611, 0.9603, 0.9606,  ..., 0.9607, 0.9610, 0.9612],
         [0.0389, 0.0397, 0.0394,  ..., 0.0393, 0.0390, 0.0388]],
        [[0.9612, 0.9598, 0.9601,  ..., 0.9614, 0.9600, 0.9601],
         [0.0388, 0.0402, 0.0399,  ..., 0.0386, 0.0400, 0.0399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-18 14:43:51,481 [Process: 0] Synchronize training processes
2024-08-18 14:43:51,482 [Process: 0] Evaluating...
2024-08-18 14:43:51,483 [Process: 0] EPOCH 194:
2024-08-18 14:43:51,485 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9541, 0.9540, 0.9543,  ..., 0.9540, 0.9547, 0.9531],
         [0.0459, 0.0460, 0.0457,  ..., 0.0460, 0.0453, 0.0469]],
        [[0.9541, 0.9544, 0.9541,  ..., 0.9538, 0.9540, 0.9542],
         [0.0459, 0.0456, 0.0459,  ..., 0.0462, 0.0460, 0.0458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9616, 0.9609, 0.9611,  ..., 0.9608, 0.9617, 0.9610],
         [0.0384, 0.0391, 0.0389,  ..., 0.0392, 0.0383, 0.0390]],
        [[0.9606, 0.9606, 0.9610,  ..., 0.9606, 0.9603, 0.9601],
         [0.0394, 0.0394, 0.0390,  ..., 0.0394, 0.0397, 0.0399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9544, 0.9547, 0.9548,  ..., 0.9545, 0.9545, 0.9543],
         [0.0456, 0.0453, 0.0452,  ..., 0.0455, 0.0455, 0.0457]],
        [[0.9542, 0.9545, 0.9544,  ..., 0.9539, 0.9540, 0.9541],
         [0.0458, 0.0455, 0.0456,  ..., 0.0461, 0.0460, 0.0459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:52,918 [Process: 0] Synchronize training processes
2024-08-18 14:43:52,919 [Process: 0] Evaluating...
2024-08-18 14:43:52,920 [Process: 0] EPOCH 195:
2024-08-18 14:43:52,922 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:54,352 [Process: 0] Synchronize training processes
2024-08-18 14:43:54,352 [Process: 0] Evaluating...
2024-08-18 14:43:54,354 [Process: 0] EPOCH 196:
2024-08-18 14:43:54,356 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9618, 0.9614, 0.9605,  ..., 0.9613, 0.9621, 0.9609],
         [0.0382, 0.0386, 0.0395,  ..., 0.0387, 0.0379, 0.0391]],
        [[0.9602, 0.9615, 0.9606,  ..., 0.9606, 0.9608, 0.9605],
         [0.0398, 0.0385, 0.0394,  ..., 0.0394, 0.0392, 0.0395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9543, 0.9552, 0.9552,  ..., 0.9551, 0.9550, 0.9549],
         [0.0457, 0.0448, 0.0448,  ..., 0.0449, 0.0450, 0.0451]],
        [[0.9552, 0.9547, 0.9551,  ..., 0.9550, 0.9550, 0.9549],
         [0.0448, 0.0453, 0.0449,  ..., 0.0450, 0.0450, 0.0451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9614, 0.9615, 0.9614,  ..., 0.9620, 0.9618, 0.9618],
         [0.0386, 0.0385, 0.0386,  ..., 0.0380, 0.0382, 0.0382]],
        [[0.9609, 0.9618, 0.9601,  ..., 0.9617, 0.9616, 0.9608],
         [0.0391, 0.0382, 0.0399,  ..., 0.0383, 0.0384, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:43:55,787 [Process: 0] Synchronize training processes
2024-08-18 14:43:55,787 [Process: 0] Evaluating...
2024-08-18 14:43:55,789 [Process: 0] EPOCH 197:
2024-08-18 14:43:55,791 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9548, 0.9557, 0.9555,  ..., 0.9553, 0.9553, 0.9550],
         [0.0452, 0.0443, 0.0445,  ..., 0.0447, 0.0447, 0.0450]],
        [[0.9555, 0.9552, 0.9554,  ..., 0.9551, 0.9550, 0.9554],
         [0.0445, 0.0448, 0.0446,  ..., 0.0449, 0.0450, 0.0446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9615, 0.9622, 0.9621,  ..., 0.9617, 0.9616, 0.9618],
         [0.0385, 0.0378, 0.0379,  ..., 0.0383, 0.0384, 0.0382]],
        [[0.9622, 0.9620, 0.9606,  ..., 0.9620, 0.9617, 0.9608],
         [0.0378, 0.0380, 0.0394,  ..., 0.0380, 0.0383, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9554, 0.9561, 0.9560,  ..., 0.9566, 0.9567, 0.9549],
         [0.0446, 0.0439, 0.0440,  ..., 0.0434, 0.0433, 0.0451]],
        [[0.9560, 0.9559, 0.9558,  ..., 0.9556, 0.9559, 0.9558],
         [0.0440, 0.0441, 0.0442,  ..., 0.0444, 0.0441, 0.0442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:43:57,220 [Process: 0] Synchronize training processes
2024-08-18 14:43:57,221 [Process: 0] Evaluating...
2024-08-18 14:43:57,222 [Process: 0] EPOCH 198:
2024-08-18 14:43:57,224 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9628, 0.9622, 0.9622,  ..., 0.9623, 0.9623, 0.9629],
         [0.0372, 0.0378, 0.0378,  ..., 0.0377, 0.0377, 0.0371]],
        [[0.9628, 0.9619, 0.9622,  ..., 0.9620, 0.9618, 0.9597],
         [0.0372, 0.0381, 0.0378,  ..., 0.0380, 0.0382, 0.0403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9563, 0.9569, 0.9571,  ..., 0.9571, 0.9565, 0.9555],
         [0.0437, 0.0431, 0.0429,  ..., 0.0429, 0.0435, 0.0445]],
        [[0.9562, 0.9566, 0.9564,  ..., 0.9564, 0.9565, 0.9564],
         [0.0438, 0.0434, 0.0436,  ..., 0.0436, 0.0435, 0.0436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9637, 0.9628, 0.9632,  ..., 0.9629, 0.9628, 0.9627],
         [0.0363, 0.0372, 0.0368,  ..., 0.0371, 0.0372, 0.0373]],
        [[0.9621, 0.9626, 0.9617,  ..., 0.9638, 0.9616, 0.9625],
         [0.0379, 0.0374, 0.0383,  ..., 0.0362, 0.0384, 0.0375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
2024-08-18 14:43:58,655 [Process: 0] Synchronize training processes
2024-08-18 14:43:58,655 [Process: 0] Evaluating...
2024-08-18 14:43:58,657 [Process: 0] EPOCH 199:
2024-08-18 14:43:58,659 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:00,089 [Process: 0] Synchronize training processes
2024-08-18 14:44:00,089 [Process: 0] Evaluating...
2024-08-18 14:44:00,091 [Process: 0] EPOCH 200:
2024-08-18 14:44:00,093 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9566, 0.9568, 0.9568,  ..., 0.9570, 0.9571, 0.9569],
         [0.0434, 0.0432, 0.0432,  ..., 0.0430, 0.0429, 0.0431]],
        [[0.9568, 0.9568, 0.9567,  ..., 0.9567, 0.9567, 0.9567],
         [0.0432, 0.0432, 0.0433,  ..., 0.0433, 0.0433, 0.0433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9633, 0.9632, 0.9638,  ..., 0.9633, 0.9636, 0.9631],
         [0.0367, 0.0368, 0.0362,  ..., 0.0367, 0.0364, 0.0369]],
        [[0.9627, 0.9629, 0.9625,  ..., 0.9632, 0.9622, 0.9616],
         [0.0373, 0.0371, 0.0375,  ..., 0.0368, 0.0378, 0.0384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:44:01,526 [Process: 0] Synchronize training processes
2024-08-18 14:44:01,526 [Process: 0] Evaluating...
2024-08-18 14:44:01,528 [Process: 0] EPOCH 201:
2024-08-18 14:44:01,529 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9574, 0.9577, 0.9581,  ..., 0.9578, 0.9583, 0.9574],
         [0.0426, 0.0423, 0.0419,  ..., 0.0422, 0.0417, 0.0426]],
        [[0.9573, 0.9573, 0.9573,  ..., 0.9576, 0.9574, 0.9576],
         [0.0427, 0.0427, 0.0427,  ..., 0.0424, 0.0426, 0.0424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9638, 0.9635, 0.9642,  ..., 0.9638, 0.9632, 0.9635],
         [0.0362, 0.0365, 0.0358,  ..., 0.0362, 0.0368, 0.0365]],
        [[0.9639, 0.9640, 0.9628,  ..., 0.9634, 0.9626, 0.9624],
         [0.0361, 0.0360, 0.0372,  ..., 0.0366, 0.0374, 0.0376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9576, 0.9585, 0.9585,  ..., 0.9579, 0.9578, 0.9580],
         [0.0424, 0.0415, 0.0415,  ..., 0.0421, 0.0422, 0.0420]],
        [[0.9578, 0.9577, 0.9577,  ..., 0.9577, 0.9576, 0.9574],
         [0.0422, 0.0423, 0.0423,  ..., 0.0423, 0.0424, 0.0426]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:02,963 [Process: 0] Synchronize training processes
2024-08-18 14:44:02,963 [Process: 0] Evaluating...
2024-08-18 14:44:02,971 [Process: 0] EPOCH 202:
2024-08-18 14:44:02,973 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9636, 0.9635, 0.9640,  ..., 0.9638, 0.9641, 0.9637],
         [0.0364, 0.0365, 0.0360,  ..., 0.0362, 0.0359, 0.0363]],
        [[0.9637, 0.9638, 0.9635,  ..., 0.9638, 0.9626, 0.9639],
         [0.0363, 0.0362, 0.0365,  ..., 0.0362, 0.0374, 0.0361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9579, 0.9583, 0.9580,  ..., 0.9579, 0.9581, 0.9576],
         [0.0421, 0.0417, 0.0420,  ..., 0.0421, 0.0419, 0.0424]],
        [[0.9578, 0.9575, 0.9574,  ..., 0.9578, 0.9579, 0.9577],
         [0.0422, 0.0425, 0.0426,  ..., 0.0422, 0.0421, 0.0423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9638, 0.9637, 0.9636,  ..., 0.9634, 0.9642, 0.9640],
         [0.0362, 0.0363, 0.0364,  ..., 0.0366, 0.0358, 0.0360]],
        [[0.9640, 0.9643, 0.9640,  ..., 0.9634, 0.9628, 0.9625],
         [0.0360, 0.0357, 0.0360,  ..., 0.0366, 0.0372, 0.0375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:04,406 [Process: 0] Synchronize training processes
2024-08-18 14:44:04,406 [Process: 0] Evaluating...
2024-08-18 14:44:04,408 [Process: 0] EPOCH 203:
2024-08-18 14:44:04,409 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:05,841 [Process: 0] Synchronize training processes
2024-08-18 14:44:05,841 [Process: 0] Evaluating...
2024-08-18 14:44:05,843 [Process: 0] EPOCH 204:
2024-08-18 14:44:05,845 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9580, 0.9582, 0.9583,  ..., 0.9583, 0.9585, 0.9580],
         [0.0420, 0.0418, 0.0417,  ..., 0.0417, 0.0415, 0.0420]],
        [[0.9579, 0.9581, 0.9579,  ..., 0.9579, 0.9579, 0.9578],
         [0.0421, 0.0419, 0.0421,  ..., 0.0421, 0.0421, 0.0422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9642, 0.9631, 0.9639,  ..., 0.9642, 0.9644, 0.9637],
         [0.0358, 0.0369, 0.0361,  ..., 0.0358, 0.0356, 0.0363]],
        [[0.9637, 0.9643, 0.9646,  ..., 0.9637, 0.9639, 0.9633],
         [0.0363, 0.0357, 0.0354,  ..., 0.0363, 0.0361, 0.0367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9568, 0.9578, 0.9577,  ..., 0.9575, 0.9577, 0.9560],
         [0.0432, 0.0422, 0.0423,  ..., 0.0425, 0.0423, 0.0440]],
        [[0.9574, 0.9575, 0.9576,  ..., 0.9573, 0.9572, 0.9573],
         [0.0426, 0.0425, 0.0424,  ..., 0.0427, 0.0428, 0.0427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:07,276 [Process: 0] Synchronize training processes
2024-08-18 14:44:07,277 [Process: 0] Evaluating...
2024-08-18 14:44:07,278 [Process: 0] EPOCH 205:
2024-08-18 14:44:07,280 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9641, 0.9641, 0.9640,  ..., 0.9635, 0.9648, 0.9633],
         [0.0359, 0.0359, 0.0360,  ..., 0.0365, 0.0352, 0.0367]],
        [[0.9639, 0.9648, 0.9637,  ..., 0.9639, 0.9638, 0.9640],
         [0.0361, 0.0352, 0.0363,  ..., 0.0361, 0.0362, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9561, 0.9574, 0.9574,  ..., 0.9575, 0.9576, 0.9554],
         [0.0439, 0.0426, 0.0426,  ..., 0.0425, 0.0424, 0.0446]],
        [[0.9572, 0.9572, 0.9573,  ..., 0.9572, 0.9573, 0.9571],
         [0.0428, 0.0428, 0.0427,  ..., 0.0428, 0.0427, 0.0429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9642, 0.9641, 0.9640,  ..., 0.9643, 0.9643, 0.9645],
         [0.0358, 0.0359, 0.0360,  ..., 0.0357, 0.0357, 0.0355]],
        [[0.9647, 0.9642, 0.9638,  ..., 0.9639, 0.9640, 0.9634],
         [0.0353, 0.0358, 0.0362,  ..., 0.0361, 0.0360, 0.0366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:08,708 [Process: 0] Synchronize training processes
2024-08-18 14:44:08,708 [Process: 0] Evaluating...
2024-08-18 14:44:08,710 [Process: 0] EPOCH 206:
2024-08-18 14:44:08,712 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:10,145 [Process: 0] Synchronize training processes
2024-08-18 14:44:10,145 [Process: 0] Evaluating...
2024-08-18 14:44:10,147 [Process: 0] EPOCH 207:
2024-08-18 14:44:10,148 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9569, 0.9577, 0.9569,  ..., 0.9573, 0.9577, 0.9574],
         [0.0431, 0.0423, 0.0431,  ..., 0.0427, 0.0423, 0.0426]],
        [[0.9571, 0.9572, 0.9573,  ..., 0.9568, 0.9569, 0.9570],
         [0.0429, 0.0428, 0.0427,  ..., 0.0432, 0.0431, 0.0430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9650, 0.9647, 0.9644,  ..., 0.9653, 0.9643, 0.9641],
         [0.0350, 0.0353, 0.0356,  ..., 0.0347, 0.0357, 0.0359]],
        [[0.9643, 0.9646, 0.9644,  ..., 0.9652, 0.9641, 0.9654],
         [0.0357, 0.0354, 0.0356,  ..., 0.0348, 0.0359, 0.0346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:44:11,581 [Process: 0] Synchronize training processes
2024-08-18 14:44:11,581 [Process: 0] Evaluating...
2024-08-18 14:44:11,583 [Process: 0] EPOCH 208:
2024-08-18 14:44:11,585 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9556, 0.9571, 0.9573,  ..., 0.9570, 0.9574, 0.9549],
         [0.0444, 0.0429, 0.0427,  ..., 0.0430, 0.0426, 0.0451]],
        [[0.9568, 0.9567, 0.9570,  ..., 0.9568, 0.9567, 0.9567],
         [0.0432, 0.0433, 0.0430,  ..., 0.0432, 0.0433, 0.0433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9649, 0.9656, 0.9654,  ..., 0.9650, 0.9651, 0.9652],
         [0.0351, 0.0344, 0.0346,  ..., 0.0350, 0.0349, 0.0348]],
        [[0.9652, 0.9648, 0.9655,  ..., 0.9662, 0.9655, 0.9643],
         [0.0348, 0.0352, 0.0345,  ..., 0.0338, 0.0345, 0.0357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9551, 0.9565, 0.9564,  ..., 0.9566, 0.9569, 0.9547],
         [0.0449, 0.0435, 0.0436,  ..., 0.0434, 0.0431, 0.0453]],
        [[0.9565, 0.9566, 0.9564,  ..., 0.9566, 0.9566, 0.9566],
         [0.0435, 0.0434, 0.0436,  ..., 0.0434, 0.0434, 0.0434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:13,015 [Process: 0] Synchronize training processes
2024-08-18 14:44:13,015 [Process: 0] Evaluating...
2024-08-18 14:44:13,017 [Process: 0] EPOCH 209:
2024-08-18 14:44:13,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9647, 0.9641, 0.9649,  ..., 0.9649, 0.9647, 0.9649],
         [0.0353, 0.0359, 0.0351,  ..., 0.0351, 0.0353, 0.0351]],
        [[0.9648, 0.9649, 0.9646,  ..., 0.9651, 0.9650, 0.9711],
         [0.0352, 0.0351, 0.0354,  ..., 0.0349, 0.0350, 0.0289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9540, 0.9545, 0.9540,  ..., 0.9539, 0.9541, 0.9538],
         [0.0460, 0.0455, 0.0460,  ..., 0.0461, 0.0459, 0.0462]],
        [[0.9540, 0.9541, 0.9537,  ..., 0.9539, 0.9541, 0.9539],
         [0.0460, 0.0459, 0.0463,  ..., 0.0461, 0.0459, 0.0461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9642, 0.9640, 0.9644,  ..., 0.9642, 0.9644, 0.9646],
         [0.0358, 0.0360, 0.0356,  ..., 0.0358, 0.0356, 0.0354]],
        [[0.9644, 0.9644, 0.9644,  ..., 0.9646, 0.9650, 0.9730],
         [0.0356, 0.0356, 0.0356,  ..., 0.0354, 0.0350, 0.0270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:14,434 [Process: 0] Synchronize training processes
2024-08-18 14:44:14,434 [Process: 0] Evaluating...
2024-08-18 14:44:14,436 [Process: 0] EPOCH 210:
2024-08-18 14:44:14,438 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:15,857 [Process: 0] Synchronize training processes
2024-08-18 14:44:15,857 [Process: 0] Evaluating...
2024-08-18 14:44:15,859 [Process: 0] EPOCH 211:
2024-08-18 14:44:15,861 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9548, 0.9548, 0.9549,  ..., 0.9548, 0.9550, 0.9536],
         [0.0452, 0.0452, 0.0451,  ..., 0.0452, 0.0450, 0.0464]],
        [[0.9549, 0.9549, 0.9550,  ..., 0.9549, 0.9549, 0.9550],
         [0.0451, 0.0451, 0.0450,  ..., 0.0451, 0.0451, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9657, 0.9657, 0.9656,  ..., 0.9657, 0.9655, 0.9655],
         [0.0343, 0.0343, 0.0344,  ..., 0.0343, 0.0345, 0.0345]],
        [[0.9657, 0.9655, 0.9655,  ..., 0.9657, 0.9656, 0.9647],
         [0.0343, 0.0345, 0.0345,  ..., 0.0343, 0.0344, 0.0353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9561, 0.9561, 0.9560,  ..., 0.9562, 0.9563, 0.9557],
         [0.0439, 0.0439, 0.0440,  ..., 0.0438, 0.0437, 0.0443]],
        [[0.9561, 0.9561, 0.9560,  ..., 0.9560, 0.9561, 0.9560],
         [0.0439, 0.0439, 0.0440,  ..., 0.0440, 0.0439, 0.0440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:17,291 [Process: 0] Synchronize training processes
2024-08-18 14:44:17,292 [Process: 0] Evaluating...
2024-08-18 14:44:17,300 [Process: 0] EPOCH 212:
2024-08-18 14:44:17,302 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9661, 0.9663, 0.9661,  ..., 0.9661, 0.9660, 0.9662],
         [0.0339, 0.0337, 0.0339,  ..., 0.0339, 0.0340, 0.0338]],
        [[0.9662, 0.9663, 0.9660,  ..., 0.9663, 0.9659, 0.9618],
         [0.0338, 0.0337, 0.0340,  ..., 0.0337, 0.0341, 0.0382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9565, 0.9566, 0.9565,  ..., 0.9566, 0.9566, 0.9565],
         [0.0435, 0.0434, 0.0435,  ..., 0.0434, 0.0434, 0.0435]],
        [[0.9565, 0.9565, 0.9565,  ..., 0.9565, 0.9564, 0.9564],
         [0.0435, 0.0435, 0.0435,  ..., 0.0435, 0.0436, 0.0436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9662, 0.9662, 0.9660,  ..., 0.9663, 0.9665, 0.9665],
         [0.0338, 0.0338, 0.0340,  ..., 0.0337, 0.0335, 0.0335]],
        [[0.9661, 0.9664, 0.9662,  ..., 0.9661, 0.9664, 0.9530],
         [0.0339, 0.0336, 0.0338,  ..., 0.0339, 0.0336, 0.0470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:18,730 [Process: 0] Synchronize training processes
2024-08-18 14:44:18,730 [Process: 0] Evaluating...
2024-08-18 14:44:18,732 [Process: 0] EPOCH 213:
2024-08-18 14:44:18,734 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:20,163 [Process: 0] Synchronize training processes
2024-08-18 14:44:20,163 [Process: 0] Evaluating...
2024-08-18 14:44:20,165 [Process: 0] EPOCH 214:
2024-08-18 14:44:20,167 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9563, 0.9563, 0.9564,  ..., 0.9565, 0.9566, 0.9564],
         [0.0437, 0.0437, 0.0436,  ..., 0.0435, 0.0434, 0.0436]],
        [[0.9564, 0.9563, 0.9565,  ..., 0.9564, 0.9565, 0.9564],
         [0.0436, 0.0437, 0.0435,  ..., 0.0436, 0.0435, 0.0436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9661, 0.9659, 0.9659,  ..., 0.9662, 0.9661, 0.9662],
         [0.0339, 0.0341, 0.0341,  ..., 0.0338, 0.0339, 0.0338]],
        [[0.9662, 0.9660, 0.9660,  ..., 0.9663, 0.9663, 0.9604],
         [0.0338, 0.0340, 0.0340,  ..., 0.0337, 0.0337, 0.0396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9565, 0.9565, 0.9565,  ..., 0.9568, 0.9565, 0.9563],
         [0.0435, 0.0435, 0.0435,  ..., 0.0432, 0.0435, 0.0437]],
        [[0.9566, 0.9566, 0.9566,  ..., 0.9565, 0.9563, 0.9566],
         [0.0434, 0.0434, 0.0434,  ..., 0.0435, 0.0437, 0.0434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:21,598 [Process: 0] Synchronize training processes
2024-08-18 14:44:21,598 [Process: 0] Evaluating...
2024-08-18 14:44:21,600 [Process: 0] EPOCH 215:
2024-08-18 14:44:21,602 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9658, 0.9656, 0.9659,  ..., 0.9658, 0.9659, 0.9656],
         [0.0342, 0.0344, 0.0341,  ..., 0.0342, 0.0341, 0.0344]],
        [[0.9654, 0.9661, 0.9656,  ..., 0.9657, 0.9659, 0.9681],
         [0.0346, 0.0339, 0.0344,  ..., 0.0343, 0.0341, 0.0319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9576, 0.9581, 0.9575,  ..., 0.9574, 0.9577, 0.9571],
         [0.0424, 0.0419, 0.0425,  ..., 0.0426, 0.0423, 0.0429]],
        [[0.9576, 0.9574, 0.9577,  ..., 0.9573, 0.9577, 0.9577],
         [0.0424, 0.0426, 0.0423,  ..., 0.0427, 0.0423, 0.0423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:23,015 [Process: 0] Synchronize training processes
2024-08-18 14:44:23,016 [Process: 0] Evaluating...
2024-08-18 14:44:23,017 [Process: 0] EPOCH 216:
2024-08-18 14:44:23,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9667, 0.9663, 0.9665,  ..., 0.9662, 0.9665, 0.9668],
         [0.0333, 0.0337, 0.0335,  ..., 0.0338, 0.0335, 0.0332]],
        [[0.9664, 0.9664, 0.9663,  ..., 0.9665, 0.9660, 0.9637],
         [0.0336, 0.0336, 0.0337,  ..., 0.0335, 0.0340, 0.0363]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9582, 0.9585, 0.9584,  ..., 0.9586, 0.9586, 0.9583],
         [0.0418, 0.0415, 0.0416,  ..., 0.0414, 0.0414, 0.0417]],
        [[0.9585, 0.9583, 0.9587,  ..., 0.9586, 0.9586, 0.9586],
         [0.0415, 0.0417, 0.0413,  ..., 0.0414, 0.0414, 0.0414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9675, 0.9671, 0.9671,  ..., 0.9676, 0.9675, 0.9676],
         [0.0325, 0.0329, 0.0329,  ..., 0.0324, 0.0325, 0.0324]],
        [[0.9676, 0.9673, 0.9674,  ..., 0.9675, 0.9669, 0.9653],
         [0.0324, 0.0327, 0.0326,  ..., 0.0325, 0.0331, 0.0347]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:24,437 [Process: 0] Synchronize training processes
2024-08-18 14:44:24,438 [Process: 0] Evaluating...
2024-08-18 14:44:24,439 [Process: 0] EPOCH 217:
2024-08-18 14:44:24,441 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:25,868 [Process: 0] Synchronize training processes
2024-08-18 14:44:25,869 [Process: 0] Evaluating...
2024-08-18 14:44:25,871 [Process: 0] EPOCH 218:
2024-08-18 14:44:25,872 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9578, 0.9584, 0.9580,  ..., 0.9580, 0.9581, 0.9580],
         [0.0422, 0.0416, 0.0420,  ..., 0.0420, 0.0419, 0.0420]],
        [[0.9580, 0.9578, 0.9579,  ..., 0.9581, 0.9581, 0.9578],
         [0.0420, 0.0422, 0.0421,  ..., 0.0419, 0.0419, 0.0422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9673, 0.9679, 0.9677,  ..., 0.9678, 0.9677, 0.9678],
         [0.0327, 0.0321, 0.0323,  ..., 0.0322, 0.0323, 0.0322]],
        [[0.9673, 0.9680, 0.9675,  ..., 0.9676, 0.9672, 0.9687],
         [0.0327, 0.0320, 0.0325,  ..., 0.0324, 0.0328, 0.0313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9582, 0.9583, 0.9582,  ..., 0.9583, 0.9583, 0.9582],
         [0.0418, 0.0417, 0.0418,  ..., 0.0417, 0.0417, 0.0418]],
        [[0.9583, 0.9582, 0.9585,  ..., 0.9582, 0.9583, 0.9584],
         [0.0417, 0.0418, 0.0415,  ..., 0.0418, 0.0417, 0.0416]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:27,299 [Process: 0] Synchronize training processes
2024-08-18 14:44:27,299 [Process: 0] Evaluating...
2024-08-18 14:44:27,301 [Process: 0] EPOCH 219:
2024-08-18 14:44:27,303 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9679, 0.9683, 0.9678,  ..., 0.9681, 0.9686, 0.9683],
         [0.0321, 0.0317, 0.0322,  ..., 0.0319, 0.0314, 0.0317]],
        [[0.9682, 0.9679, 0.9678,  ..., 0.9677, 0.9677, 0.9696],
         [0.0318, 0.0321, 0.0322,  ..., 0.0323, 0.0323, 0.0304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9587, 0.9589, 0.9587,  ..., 0.9587, 0.9591, 0.9588],
         [0.0413, 0.0411, 0.0413,  ..., 0.0413, 0.0409, 0.0412]],
        [[0.9588, 0.9587, 0.9589,  ..., 0.9589, 0.9588, 0.9588],
         [0.0412, 0.0413, 0.0411,  ..., 0.0411, 0.0412, 0.0412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9688, 0.9685, 0.9686,  ..., 0.9683, 0.9684, 0.9684],
         [0.0312, 0.0315, 0.0314,  ..., 0.0317, 0.0316, 0.0316]],
        [[0.9683, 0.9685, 0.9681,  ..., 0.9686, 0.9680, 0.9681],
         [0.0317, 0.0315, 0.0319,  ..., 0.0314, 0.0320, 0.0319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:28,728 [Process: 0] Synchronize training processes
2024-08-18 14:44:28,728 [Process: 0] Evaluating...
2024-08-18 14:44:28,730 [Process: 0] EPOCH 220:
2024-08-18 14:44:28,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:30,159 [Process: 0] Synchronize training processes
2024-08-18 14:44:30,159 [Process: 0] Evaluating...
2024-08-18 14:44:30,161 [Process: 0] EPOCH 221:
2024-08-18 14:44:30,163 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9596, 0.9595, 0.9598,  ..., 0.9599, 0.9598, 0.9596],
         [0.0404, 0.0405, 0.0402,  ..., 0.0401, 0.0402, 0.0404]],
        [[0.9596, 0.9596, 0.9600,  ..., 0.9599, 0.9598, 0.9599],
         [0.0404, 0.0404, 0.0400,  ..., 0.0401, 0.0402, 0.0401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9691, 0.9686, 0.9686,  ..., 0.9686, 0.9687, 0.9687],
         [0.0309, 0.0314, 0.0314,  ..., 0.0314, 0.0313, 0.0313]],
        [[0.9688, 0.9688, 0.9686,  ..., 0.9687, 0.9684, 0.9664],
         [0.0312, 0.0312, 0.0314,  ..., 0.0313, 0.0316, 0.0336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9618, 0.9620, 0.9620,  ..., 0.9621, 0.9622, 0.9619],
         [0.0382, 0.0380, 0.0380,  ..., 0.0379, 0.0378, 0.0381]],
        [[0.9621, 0.9619, 0.9617,  ..., 0.9620, 0.9618, 0.9620],
         [0.0379, 0.0381, 0.0383,  ..., 0.0380, 0.0382, 0.0380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:31,591 [Process: 0] Synchronize training processes
2024-08-18 14:44:31,591 [Process: 0] Evaluating...
2024-08-18 14:44:31,598 [Process: 0] EPOCH 222:
2024-08-18 14:44:31,600 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9691, 0.9694, 0.9688,  ..., 0.9696, 0.9691, 0.9693],
         [0.0309, 0.0306, 0.0312,  ..., 0.0304, 0.0309, 0.0307]],
        [[0.9695, 0.9691, 0.9686,  ..., 0.9690, 0.9688, 0.9663],
         [0.0305, 0.0309, 0.0314,  ..., 0.0310, 0.0312, 0.0337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9630, 0.9632, 0.9631,  ..., 0.9635, 0.9631, 0.9631],
         [0.0370, 0.0368, 0.0369,  ..., 0.0365, 0.0369, 0.0369]],
        [[0.9632, 0.9630, 0.9630,  ..., 0.9629, 0.9632, 0.9629],
         [0.0368, 0.0370, 0.0370,  ..., 0.0371, 0.0368, 0.0371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-18 14:44:33,027 [Process: 0] Synchronize training processes
2024-08-18 14:44:33,027 [Process: 0] Evaluating...
2024-08-18 14:44:33,029 [Process: 0] EPOCH 223:
2024-08-18 14:44:33,031 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9697, 0.9691, 0.9690,  ..., 0.9697, 0.9691, 0.9691],
         [0.0303, 0.0309, 0.0310,  ..., 0.0303, 0.0309, 0.0309]],
        [[0.9694, 0.9696, 0.9691,  ..., 0.9690, 0.9692, 0.9666],
         [0.0306, 0.0304, 0.0309,  ..., 0.0310, 0.0308, 0.0334]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9632, 0.9632, 0.9633,  ..., 0.9636, 0.9635, 0.9631],
         [0.0368, 0.0368, 0.0367,  ..., 0.0364, 0.0365, 0.0369]],
        [[0.9636, 0.9634, 0.9633,  ..., 0.9634, 0.9633, 0.9631],
         [0.0364, 0.0366, 0.0367,  ..., 0.0366, 0.0367, 0.0369]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9696, 0.9693, 0.9690,  ..., 0.9689, 0.9691, 0.9689],
         [0.0304, 0.0307, 0.0310,  ..., 0.0311, 0.0309, 0.0311]],
        [[0.9690, 0.9694, 0.9689,  ..., 0.9689, 0.9691, 0.9679],
         [0.0310, 0.0306, 0.0311,  ..., 0.0311, 0.0309, 0.0321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:34,453 [Process: 0] Synchronize training processes
2024-08-18 14:44:34,453 [Process: 0] Evaluating...
2024-08-18 14:44:34,455 [Process: 0] EPOCH 224:
2024-08-18 14:44:34,457 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:35,884 [Process: 0] Synchronize training processes
2024-08-18 14:44:35,885 [Process: 0] Evaluating...
2024-08-18 14:44:35,886 [Process: 0] EPOCH 225:
2024-08-18 14:44:35,888 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9638, 0.9640, 0.9637,  ..., 0.9638, 0.9638, 0.9641],
         [0.0362, 0.0360, 0.0363,  ..., 0.0362, 0.0362, 0.0359]],
        [[0.9636, 0.9637, 0.9638,  ..., 0.9637, 0.9636, 0.9638],
         [0.0364, 0.0363, 0.0362,  ..., 0.0363, 0.0364, 0.0362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9693, 0.9696, 0.9690,  ..., 0.9695, 0.9694, 0.9695],
         [0.0307, 0.0304, 0.0310,  ..., 0.0305, 0.0306, 0.0305]],
        [[0.9693, 0.9695, 0.9691,  ..., 0.9694, 0.9692, 0.9688],
         [0.0307, 0.0305, 0.0309,  ..., 0.0306, 0.0308, 0.0312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9640, 0.9643, 0.9641,  ..., 0.9641, 0.9644, 0.9641],
         [0.0360, 0.0357, 0.0359,  ..., 0.0359, 0.0356, 0.0359]],
        [[0.9642, 0.9643, 0.9641,  ..., 0.9641, 0.9640, 0.9642],
         [0.0358, 0.0357, 0.0359,  ..., 0.0359, 0.0360, 0.0358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:37,316 [Process: 0] Synchronize training processes
2024-08-18 14:44:37,316 [Process: 0] Evaluating...
2024-08-18 14:44:37,318 [Process: 0] EPOCH 226:
2024-08-18 14:44:37,319 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9698, 0.9696, 0.9694,  ..., 0.9695, 0.9698, 0.9698],
         [0.0302, 0.0304, 0.0306,  ..., 0.0305, 0.0302, 0.0302]],
        [[0.9696, 0.9692, 0.9696,  ..., 0.9695, 0.9693, 0.9689],
         [0.0304, 0.0308, 0.0304,  ..., 0.0305, 0.0307, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9648, 0.9650, 0.9647,  ..., 0.9650, 0.9649, 0.9649],
         [0.0352, 0.0350, 0.0353,  ..., 0.0350, 0.0351, 0.0351]],
        [[0.9648, 0.9646, 0.9647,  ..., 0.9647, 0.9648, 0.9647],
         [0.0352, 0.0354, 0.0353,  ..., 0.0353, 0.0352, 0.0353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9702, 0.9697, 0.9700,  ..., 0.9701, 0.9700, 0.9697],
         [0.0298, 0.0303, 0.0300,  ..., 0.0299, 0.0300, 0.0303]],
        [[0.9694, 0.9699, 0.9696,  ..., 0.9694, 0.9692, 0.9702],
         [0.0306, 0.0301, 0.0304,  ..., 0.0306, 0.0308, 0.0298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:38,748 [Process: 0] Synchronize training processes
2024-08-18 14:44:38,748 [Process: 0] Evaluating...
2024-08-18 14:44:38,750 [Process: 0] EPOCH 227:
2024-08-18 14:44:38,752 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:40,183 [Process: 0] Synchronize training processes
2024-08-18 14:44:40,183 [Process: 0] Evaluating...
2024-08-18 14:44:40,185 [Process: 0] EPOCH 228:
2024-08-18 14:44:40,187 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9651, 0.9653, 0.9653,  ..., 0.9651, 0.9652, 0.9652],
         [0.0349, 0.0347, 0.0347,  ..., 0.0349, 0.0348, 0.0348]],
        [[0.9652, 0.9653, 0.9652,  ..., 0.9650, 0.9653, 0.9652],
         [0.0348, 0.0347, 0.0348,  ..., 0.0350, 0.0347, 0.0348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9703, 0.9696, 0.9704,  ..., 0.9699, 0.9697, 0.9697],
         [0.0297, 0.0304, 0.0296,  ..., 0.0301, 0.0303, 0.0303]],
        [[0.9701, 0.9697, 0.9702,  ..., 0.9696, 0.9697, 0.9688],
         [0.0299, 0.0303, 0.0298,  ..., 0.0304, 0.0303, 0.0312]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9657, 0.9659, 0.9659,  ..., 0.9660, 0.9659, 0.9658],
         [0.0343, 0.0341, 0.0341,  ..., 0.0340, 0.0341, 0.0342]],
        [[0.9658, 0.9659, 0.9657,  ..., 0.9657, 0.9657, 0.9658],
         [0.0342, 0.0341, 0.0343,  ..., 0.0343, 0.0343, 0.0342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:41,670 [Process: 0] Synchronize training processes
2024-08-18 14:44:41,671 [Process: 0] Evaluating...
2024-08-18 14:44:41,673 [Process: 0] EPOCH 229:
2024-08-18 14:44:41,674 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9701, 0.9701, 0.9706,  ..., 0.9702, 0.9703, 0.9702],
         [0.0299, 0.0299, 0.0294,  ..., 0.0298, 0.0297, 0.0298]],
        [[0.9702, 0.9703, 0.9697,  ..., 0.9699, 0.9700, 0.9689],
         [0.0298, 0.0297, 0.0303,  ..., 0.0301, 0.0300, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9659, 0.9663, 0.9661,  ..., 0.9661, 0.9659, 0.9659],
         [0.0341, 0.0337, 0.0339,  ..., 0.0339, 0.0341, 0.0341]],
        [[0.9659, 0.9663, 0.9658,  ..., 0.9660, 0.9659, 0.9657],
         [0.0341, 0.0337, 0.0342,  ..., 0.0340, 0.0341, 0.0343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:43,208 [Process: 0] Synchronize training processes
2024-08-18 14:44:43,208 [Process: 0] Evaluating...
2024-08-18 14:44:43,210 [Process: 0] EPOCH 230:
2024-08-18 14:44:43,212 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9703, 0.9695, 0.9705,  ..., 0.9710, 0.9707, 0.9705],
         [0.0297, 0.0305, 0.0295,  ..., 0.0290, 0.0293, 0.0295]],
        [[0.9701, 0.9702, 0.9701,  ..., 0.9704, 0.9702, 0.9689],
         [0.0299, 0.0298, 0.0299,  ..., 0.0296, 0.0298, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9660, 0.9662, 0.9662,  ..., 0.9660, 0.9663, 0.9660],
         [0.0340, 0.0338, 0.0338,  ..., 0.0340, 0.0337, 0.0340]],
        [[0.9659, 0.9660, 0.9660,  ..., 0.9661, 0.9660, 0.9661],
         [0.0341, 0.0340, 0.0340,  ..., 0.0339, 0.0340, 0.0339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9704, 0.9677, 0.9702,  ..., 0.9702, 0.9710, 0.9706],
         [0.0296, 0.0323, 0.0298,  ..., 0.0298, 0.0290, 0.0294]],
        [[0.9705, 0.9704, 0.9705,  ..., 0.9707, 0.9708, 0.9697],
         [0.0295, 0.0296, 0.0295,  ..., 0.0293, 0.0292, 0.0303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:44,695 [Process: 0] Synchronize training processes
2024-08-18 14:44:44,695 [Process: 0] Evaluating...
2024-08-18 14:44:44,697 [Process: 0] EPOCH 231:
2024-08-18 14:44:44,699 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:46,130 [Process: 0] Synchronize training processes
2024-08-18 14:44:46,131 [Process: 0] Evaluating...
2024-08-18 14:44:46,139 [Process: 0] EPOCH 232:
2024-08-18 14:44:46,141 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9658, 0.9659, 0.9660,  ..., 0.9660, 0.9660, 0.9659],
         [0.0342, 0.0341, 0.0340,  ..., 0.0340, 0.0340, 0.0341]],
        [[0.9659, 0.9658, 0.9661,  ..., 0.9658, 0.9659, 0.9657],
         [0.0341, 0.0342, 0.0339,  ..., 0.0342, 0.0341, 0.0343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9695, 0.9669, 0.9705,  ..., 0.9707, 0.9703, 0.9681],
         [0.0305, 0.0331, 0.0295,  ..., 0.0293, 0.0297, 0.0319]],
        [[0.9712, 0.9705, 0.9710,  ..., 0.9708, 0.9710, 0.9703],
         [0.0288, 0.0295, 0.0290,  ..., 0.0292, 0.0290, 0.0297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9659, 0.9660, 0.9657,  ..., 0.9660, 0.9660, 0.9655],
         [0.0341, 0.0340, 0.0343,  ..., 0.0340, 0.0340, 0.0345]],
        [[0.9658, 0.9657, 0.9658,  ..., 0.9659, 0.9660, 0.9657],
         [0.0342, 0.0343, 0.0342,  ..., 0.0341, 0.0340, 0.0343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:47,573 [Process: 0] Synchronize training processes
2024-08-18 14:44:47,574 [Process: 0] Evaluating...
2024-08-18 14:44:47,575 [Process: 0] EPOCH 233:
2024-08-18 14:44:47,577 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9700, 0.9695, 0.9706,  ..., 0.9705, 0.9704, 0.9701],
         [0.0300, 0.0305, 0.0294,  ..., 0.0295, 0.0296, 0.0299]],
        [[0.9702, 0.9706, 0.9705,  ..., 0.9705, 0.9702, 0.9701],
         [0.0298, 0.0294, 0.0295,  ..., 0.0295, 0.0298, 0.0299]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9648, 0.9651, 0.9652,  ..., 0.9651, 0.9652, 0.9648],
         [0.0352, 0.0349, 0.0348,  ..., 0.0349, 0.0348, 0.0352]],
        [[0.9649, 0.9650, 0.9650,  ..., 0.9649, 0.9650, 0.9649],
         [0.0351, 0.0350, 0.0350,  ..., 0.0351, 0.0350, 0.0351]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:44:49,010 [Process: 0] Synchronize training processes
2024-08-18 14:44:49,011 [Process: 0] Evaluating...
2024-08-18 14:44:49,013 [Process: 0] EPOCH 234:
2024-08-18 14:44:49,014 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9703, 0.9698, 0.9703,  ..., 0.9704, 0.9707, 0.9706],
         [0.0297, 0.0302, 0.0297,  ..., 0.0296, 0.0293, 0.0294]],
        [[0.9703, 0.9705, 0.9703,  ..., 0.9704, 0.9703, 0.9699],
         [0.0297, 0.0295, 0.0297,  ..., 0.0296, 0.0297, 0.0301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9655, 0.9657, 0.9653,  ..., 0.9653, 0.9657, 0.9655],
         [0.0345, 0.0343, 0.0347,  ..., 0.0347, 0.0343, 0.0345]],
        [[0.9656, 0.9654, 0.9656,  ..., 0.9656, 0.9654, 0.9654],
         [0.0344, 0.0346, 0.0344,  ..., 0.0344, 0.0346, 0.0346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9707, 0.9706, 0.9707,  ..., 0.9701, 0.9703, 0.9704],
         [0.0293, 0.0294, 0.0293,  ..., 0.0299, 0.0297, 0.0296]],
        [[0.9706, 0.9701, 0.9702,  ..., 0.9703, 0.9702, 0.9698],
         [0.0294, 0.0299, 0.0298,  ..., 0.0297, 0.0298, 0.0302]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:50,446 [Process: 0] Synchronize training processes
2024-08-18 14:44:50,446 [Process: 0] Evaluating...
2024-08-18 14:44:50,448 [Process: 0] EPOCH 235:
2024-08-18 14:44:50,450 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:51,878 [Process: 0] Synchronize training processes
2024-08-18 14:44:51,878 [Process: 0] Evaluating...
2024-08-18 14:44:51,880 [Process: 0] EPOCH 236:
2024-08-18 14:44:51,882 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9659, 0.9663, 0.9664,  ..., 0.9663, 0.9664, 0.9661],
         [0.0341, 0.0337, 0.0336,  ..., 0.0337, 0.0336, 0.0339]],
        [[0.9661, 0.9662, 0.9662,  ..., 0.9662, 0.9660, 0.9660],
         [0.0339, 0.0338, 0.0338,  ..., 0.0338, 0.0340, 0.0340]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9704, 0.9701, 0.9701,  ..., 0.9706, 0.9703, 0.9701],
         [0.0296, 0.0299, 0.0299,  ..., 0.0294, 0.0297, 0.0299]],
        [[0.9704, 0.9703, 0.9702,  ..., 0.9705, 0.9699, 0.9700],
         [0.0296, 0.0297, 0.0298,  ..., 0.0295, 0.0301, 0.0300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9664, 0.9663, 0.9664,  ..., 0.9667, 0.9665, 0.9663],
         [0.0336, 0.0337, 0.0336,  ..., 0.0333, 0.0335, 0.0337]],
        [[0.9666, 0.9664, 0.9665,  ..., 0.9662, 0.9665, 0.9664],
         [0.0334, 0.0336, 0.0335,  ..., 0.0338, 0.0335, 0.0336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:53,318 [Process: 0] Synchronize training processes
2024-08-18 14:44:53,319 [Process: 0] Evaluating...
2024-08-18 14:44:53,321 [Process: 0] EPOCH 237:
2024-08-18 14:44:53,322 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9704, 0.9704, 0.9705,  ..., 0.9706, 0.9704, 0.9704],
         [0.0296, 0.0296, 0.0295,  ..., 0.0294, 0.0296, 0.0296]],
        [[0.9706, 0.9707, 0.9700,  ..., 0.9705, 0.9702, 0.9702],
         [0.0294, 0.0293, 0.0300,  ..., 0.0295, 0.0298, 0.0298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9673, 0.9673, 0.9674,  ..., 0.9676, 0.9672, 0.9671],
         [0.0327, 0.0327, 0.0326,  ..., 0.0324, 0.0328, 0.0329]],
        [[0.9672, 0.9674, 0.9672,  ..., 0.9672, 0.9672, 0.9671],
         [0.0328, 0.0326, 0.0328,  ..., 0.0328, 0.0328, 0.0329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9714, 0.9712, 0.9711,  ..., 0.9715, 0.9713, 0.9711],
         [0.0286, 0.0288, 0.0289,  ..., 0.0285, 0.0287, 0.0289]],
        [[0.9710, 0.9712, 0.9713,  ..., 0.9712, 0.9711, 0.9710],
         [0.0290, 0.0288, 0.0287,  ..., 0.0288, 0.0289, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:54,753 [Process: 0] Synchronize training processes
2024-08-18 14:44:54,753 [Process: 0] Evaluating...
2024-08-18 14:44:54,755 [Process: 0] EPOCH 238:
2024-08-18 14:44:54,757 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:44:56,188 [Process: 0] Synchronize training processes
2024-08-18 14:44:56,189 [Process: 0] Evaluating...
2024-08-18 14:44:56,190 [Process: 0] EPOCH 239:
2024-08-18 14:44:56,192 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9691, 0.9694, 0.9692,  ..., 0.9690, 0.9695, 0.9691],
         [0.0309, 0.0306, 0.0308,  ..., 0.0310, 0.0305, 0.0309]],
        [[0.9692, 0.9690, 0.9692,  ..., 0.9691, 0.9691, 0.9694],
         [0.0308, 0.0310, 0.0308,  ..., 0.0309, 0.0309, 0.0306]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9721, 0.9714, 0.9719,  ..., 0.9715, 0.9721, 0.9720],
         [0.0279, 0.0286, 0.0281,  ..., 0.0285, 0.0279, 0.0280]],
        [[0.9721, 0.9721, 0.9721,  ..., 0.9724, 0.9714, 0.9715],
         [0.0279, 0.0279, 0.0279,  ..., 0.0276, 0.0286, 0.0285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9702, 0.9704, 0.9707,  ..., 0.9704, 0.9701, 0.9702],
         [0.0298, 0.0296, 0.0293,  ..., 0.0296, 0.0299, 0.0298]],
        [[0.9704, 0.9702, 0.9701,  ..., 0.9702, 0.9703, 0.9703],
         [0.0296, 0.0298, 0.0299,  ..., 0.0298, 0.0297, 0.0297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:44:57,624 [Process: 0] Synchronize training processes
2024-08-18 14:44:57,624 [Process: 0] Evaluating...
2024-08-18 14:44:57,626 [Process: 0] EPOCH 240:
2024-08-18 14:44:57,628 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9722, 0.9724, 0.9724,  ..., 0.9724, 0.9722, 0.9722],
         [0.0278, 0.0276, 0.0276,  ..., 0.0276, 0.0278, 0.0278]],
        [[0.9727, 0.9723, 0.9725,  ..., 0.9721, 0.9722, 0.9720],
         [0.0273, 0.0277, 0.0275,  ..., 0.0279, 0.0278, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9710, 0.9712, 0.9714,  ..., 0.9717, 0.9716, 0.9712],
         [0.0290, 0.0288, 0.0286,  ..., 0.0283, 0.0284, 0.0288]],
        [[0.9712, 0.9711, 0.9709,  ..., 0.9709, 0.9711, 0.9711],
         [0.0288, 0.0289, 0.0291,  ..., 0.0291, 0.0289, 0.0289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:44:59,057 [Process: 0] Synchronize training processes
2024-08-18 14:44:59,057 [Process: 0] Evaluating...
2024-08-18 14:44:59,059 [Process: 0] EPOCH 241:
2024-08-18 14:44:59,061 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9726, 0.9724, 0.9724,  ..., 0.9724, 0.9728, 0.9727],
         [0.0274, 0.0276, 0.0276,  ..., 0.0276, 0.0272, 0.0273]],
        [[0.9725, 0.9728, 0.9724,  ..., 0.9725, 0.9720, 0.9718],
         [0.0275, 0.0272, 0.0276,  ..., 0.0275, 0.0280, 0.0282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9719, 0.9717, 0.9720,  ..., 0.9716, 0.9718, 0.9715],
         [0.0281, 0.0283, 0.0280,  ..., 0.0284, 0.0282, 0.0285]],
        [[0.9714, 0.9715, 0.9715,  ..., 0.9714, 0.9715, 0.9715],
         [0.0286, 0.0285, 0.0285,  ..., 0.0286, 0.0285, 0.0285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9722, 0.9726, 0.9722,  ..., 0.9722, 0.9723, 0.9725],
         [0.0278, 0.0274, 0.0278,  ..., 0.0278, 0.0277, 0.0275]],
        [[0.9723, 0.9726, 0.9723,  ..., 0.9722, 0.9719, 0.9725],
         [0.0277, 0.0274, 0.0277,  ..., 0.0278, 0.0281, 0.0275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:00,490 [Process: 0] Synchronize training processes
2024-08-18 14:45:00,490 [Process: 0] Evaluating...
2024-08-18 14:45:00,499 [Process: 0] EPOCH 242:
2024-08-18 14:45:00,501 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:01,934 [Process: 0] Synchronize training processes
2024-08-18 14:45:01,935 [Process: 0] Evaluating...
2024-08-18 14:45:01,937 [Process: 0] EPOCH 243:
2024-08-18 14:45:01,939 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9719, 0.9716, 0.9716,  ..., 0.9723, 0.9718, 0.9716],
         [0.0281, 0.0284, 0.0284,  ..., 0.0277, 0.0282, 0.0284]],
        [[0.9718, 0.9718, 0.9717,  ..., 0.9715, 0.9719, 0.9715],
         [0.0282, 0.0282, 0.0283,  ..., 0.0285, 0.0281, 0.0285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9724, 0.9725, 0.9722,  ..., 0.9726, 0.9726, 0.9720],
         [0.0276, 0.0275, 0.0278,  ..., 0.0274, 0.0274, 0.0280]],
        [[0.9725, 0.9722, 0.9725,  ..., 0.9724, 0.9718, 0.9719],
         [0.0275, 0.0278, 0.0275,  ..., 0.0276, 0.0282, 0.0281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9721, 0.9721, 0.9725,  ..., 0.9721, 0.9721, 0.9720],
         [0.0279, 0.0279, 0.0275,  ..., 0.0279, 0.0279, 0.0280]],
        [[0.9720, 0.9719, 0.9720,  ..., 0.9721, 0.9721, 0.9721],
         [0.0280, 0.0281, 0.0280,  ..., 0.0279, 0.0279, 0.0279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:03,382 [Process: 0] Synchronize training processes
2024-08-18 14:45:03,382 [Process: 0] Evaluating...
2024-08-18 14:45:03,384 [Process: 0] EPOCH 244:
2024-08-18 14:45:03,386 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9720, 0.9724, 0.9717,  ..., 0.9724, 0.9720, 0.9723],
         [0.0280, 0.0276, 0.0283,  ..., 0.0276, 0.0280, 0.0277]],
        [[0.9722, 0.9720, 0.9723,  ..., 0.9724, 0.9718, 0.9720],
         [0.0278, 0.0280, 0.0277,  ..., 0.0276, 0.0282, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9722, 0.9722, 0.9722,  ..., 0.9722, 0.9721, 0.9717],
         [0.0278, 0.0278, 0.0278,  ..., 0.0278, 0.0279, 0.0283]],
        [[0.9721, 0.9718, 0.9720,  ..., 0.9720, 0.9719, 0.9720],
         [0.0279, 0.0282, 0.0280,  ..., 0.0280, 0.0281, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9722, 0.9721, 0.9721,  ..., 0.9723, 0.9720, 0.9720],
         [0.0278, 0.0279, 0.0279,  ..., 0.0277, 0.0280, 0.0280]],
        [[0.9725, 0.9725, 0.9722,  ..., 0.9720, 0.9719, 0.9720],
         [0.0275, 0.0275, 0.0278,  ..., 0.0280, 0.0281, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:04,817 [Process: 0] Synchronize training processes
2024-08-18 14:45:04,817 [Process: 0] Evaluating...
2024-08-18 14:45:04,819 [Process: 0] EPOCH 245:
2024-08-18 14:45:04,821 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:06,253 [Process: 0] Synchronize training processes
2024-08-18 14:45:06,253 [Process: 0] Evaluating...
2024-08-18 14:45:06,255 [Process: 0] EPOCH 246:
2024-08-18 14:45:06,257 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9720, 0.9718, 0.9722,  ..., 0.9720, 0.9722, 0.9717],
         [0.0280, 0.0282, 0.0278,  ..., 0.0280, 0.0278, 0.0283]],
        [[0.9721, 0.9717, 0.9716,  ..., 0.9720, 0.9716, 0.9718],
         [0.0279, 0.0283, 0.0284,  ..., 0.0280, 0.0284, 0.0282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9720, 0.9723, 0.9720,  ..., 0.9721, 0.9722, 0.9719],
         [0.0280, 0.0277, 0.0280,  ..., 0.0279, 0.0278, 0.0281]],
        [[0.9720, 0.9720, 0.9720,  ..., 0.9725, 0.9715, 0.9718],
         [0.0280, 0.0280, 0.0280,  ..., 0.0275, 0.0285, 0.0282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9714, 0.9717, 0.9712,  ..., 0.9716, 0.9712, 0.9712],
         [0.0286, 0.0283, 0.0288,  ..., 0.0284, 0.0288, 0.0288]],
        [[0.9714, 0.9713, 0.9714,  ..., 0.9713, 0.9710, 0.9713],
         [0.0286, 0.0287, 0.0286,  ..., 0.0287, 0.0290, 0.0287]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:07,685 [Process: 0] Synchronize training processes
2024-08-18 14:45:07,685 [Process: 0] Evaluating...
2024-08-18 14:45:07,687 [Process: 0] EPOCH 247:
2024-08-18 14:45:07,689 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9723, 0.9723, 0.9723,  ..., 0.9724, 0.9723, 0.9723],
         [0.0277, 0.0277, 0.0277,  ..., 0.0276, 0.0277, 0.0277]],
        [[0.9724, 0.9722, 0.9721,  ..., 0.9720, 0.9719, 0.9717],
         [0.0276, 0.0278, 0.0279,  ..., 0.0280, 0.0281, 0.0283]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9712, 0.9714, 0.9716,  ..., 0.9713, 0.9712, 0.9710],
         [0.0288, 0.0286, 0.0284,  ..., 0.0287, 0.0288, 0.0290]],
        [[0.9712, 0.9711, 0.9709,  ..., 0.9712, 0.9711, 0.9708],
         [0.0288, 0.0289, 0.0291,  ..., 0.0288, 0.0289, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:45:09,117 [Process: 0] Synchronize training processes
2024-08-18 14:45:09,117 [Process: 0] Evaluating...
2024-08-18 14:45:09,119 [Process: 0] EPOCH 248:
2024-08-18 14:45:09,121 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9725, 0.9727, 0.9726,  ..., 0.9724, 0.9725, 0.9728],
         [0.0275, 0.0273, 0.0274,  ..., 0.0276, 0.0275, 0.0272]],
        [[0.9727, 0.9724, 0.9729,  ..., 0.9723, 0.9717, 0.9724],
         [0.0273, 0.0276, 0.0271,  ..., 0.0277, 0.0283, 0.0276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9712, 0.9712, 0.9716,  ..., 0.9715, 0.9712, 0.9711],
         [0.0288, 0.0288, 0.0284,  ..., 0.0285, 0.0288, 0.0289]],
        [[0.9708, 0.9711, 0.9710,  ..., 0.9710, 0.9709, 0.9710],
         [0.0292, 0.0289, 0.0290,  ..., 0.0290, 0.0291, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9727, 0.9726, 0.9728,  ..., 0.9729, 0.9726, 0.9731],
         [0.0273, 0.0274, 0.0272,  ..., 0.0271, 0.0274, 0.0269]],
        [[0.9724, 0.9728, 0.9725,  ..., 0.9730, 0.9725, 0.9722],
         [0.0276, 0.0272, 0.0275,  ..., 0.0270, 0.0275, 0.0278]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:10,546 [Process: 0] Synchronize training processes
2024-08-18 14:45:10,547 [Process: 0] Evaluating...
2024-08-18 14:45:10,548 [Process: 0] EPOCH 249:
2024-08-18 14:45:10,550 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:11,977 [Process: 0] Synchronize training processes
2024-08-18 14:45:11,978 [Process: 0] Evaluating...
2024-08-18 14:45:11,980 [Process: 0] EPOCH 250:
2024-08-18 14:45:11,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9711, 0.9713, 0.9711,  ..., 0.9714, 0.9713, 0.9709],
         [0.0289, 0.0287, 0.0289,  ..., 0.0286, 0.0287, 0.0291]],
        [[0.9709, 0.9709, 0.9709,  ..., 0.9709, 0.9712, 0.9710],
         [0.0291, 0.0291, 0.0291,  ..., 0.0291, 0.0288, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9728, 0.9726, 0.9727,  ..., 0.9728, 0.9730, 0.9728],
         [0.0272, 0.0274, 0.0273,  ..., 0.0272, 0.0270, 0.0272]],
        [[0.9731, 0.9730, 0.9734,  ..., 0.9726, 0.9721, 0.9728],
         [0.0269, 0.0270, 0.0266,  ..., 0.0274, 0.0279, 0.0272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9707, 0.9707, 0.9704,  ..., 0.9703, 0.9710, 0.9704],
         [0.0293, 0.0293, 0.0296,  ..., 0.0297, 0.0290, 0.0296]],
        [[0.9705, 0.9706, 0.9705,  ..., 0.9705, 0.9705, 0.9705],
         [0.0295, 0.0294, 0.0295,  ..., 0.0295, 0.0295, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:13,408 [Process: 0] Synchronize training processes
2024-08-18 14:45:13,408 [Process: 0] Evaluating...
2024-08-18 14:45:13,410 [Process: 0] EPOCH 251:
2024-08-18 14:45:13,412 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9732, 0.9729, 0.9731,  ..., 0.9731, 0.9728, 0.9731],
         [0.0268, 0.0271, 0.0269,  ..., 0.0269, 0.0272, 0.0269]],
        [[0.9729, 0.9733, 0.9737,  ..., 0.9730, 0.9726, 0.9728],
         [0.0271, 0.0267, 0.0263,  ..., 0.0270, 0.0274, 0.0272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9704, 0.9707, 0.9704,  ..., 0.9709, 0.9701, 0.9705],
         [0.0296, 0.0293, 0.0296,  ..., 0.0291, 0.0299, 0.0295]],
        [[0.9703, 0.9706, 0.9702,  ..., 0.9704, 0.9704, 0.9705],
         [0.0297, 0.0294, 0.0298,  ..., 0.0296, 0.0296, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9736, 0.9732, 0.9729,  ..., 0.9732, 0.9733, 0.9732],
         [0.0264, 0.0268, 0.0271,  ..., 0.0268, 0.0267, 0.0268]],
        [[0.9731, 0.9732, 0.9734,  ..., 0.9733, 0.9724, 0.9727],
         [0.0269, 0.0268, 0.0266,  ..., 0.0267, 0.0276, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:14,838 [Process: 0] Synchronize training processes
2024-08-18 14:45:14,838 [Process: 0] Evaluating...
2024-08-18 14:45:14,846 [Process: 0] EPOCH 252:
2024-08-18 14:45:14,848 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:16,275 [Process: 0] Synchronize training processes
2024-08-18 14:45:16,275 [Process: 0] Evaluating...
2024-08-18 14:45:16,277 [Process: 0] EPOCH 253:
2024-08-18 14:45:16,279 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9708, 0.9705, 0.9706,  ..., 0.9707, 0.9704, 0.9704],
         [0.0292, 0.0295, 0.0294,  ..., 0.0293, 0.0296, 0.0296]],
        [[0.9703, 0.9703, 0.9704,  ..., 0.9705, 0.9703, 0.9703],
         [0.0297, 0.0297, 0.0296,  ..., 0.0295, 0.0297, 0.0297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9736, 0.9736, 0.9734,  ..., 0.9732, 0.9734, 0.9736],
         [0.0264, 0.0264, 0.0266,  ..., 0.0268, 0.0266, 0.0264]],
        [[0.9735, 0.9734, 0.9735,  ..., 0.9738, 0.9728, 0.9730],
         [0.0265, 0.0266, 0.0265,  ..., 0.0262, 0.0272, 0.0270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9706, 0.9705, 0.9709,  ..., 0.9708, 0.9705, 0.9705],
         [0.0294, 0.0295, 0.0291,  ..., 0.0292, 0.0295, 0.0295]],
        [[0.9704, 0.9705, 0.9706,  ..., 0.9705, 0.9704, 0.9705],
         [0.0296, 0.0295, 0.0294,  ..., 0.0295, 0.0296, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:17,709 [Process: 0] Synchronize training processes
2024-08-18 14:45:17,710 [Process: 0] Evaluating...
2024-08-18 14:45:17,711 [Process: 0] EPOCH 254:
2024-08-18 14:45:17,713 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9738, 0.9738, 0.9734,  ..., 0.9736, 0.9738, 0.9736],
         [0.0262, 0.0262, 0.0266,  ..., 0.0264, 0.0262, 0.0264]],
        [[0.9738, 0.9739, 0.9737,  ..., 0.9738, 0.9734, 0.9732],
         [0.0262, 0.0261, 0.0263,  ..., 0.0262, 0.0266, 0.0268]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9708, 0.9710, 0.9707,  ..., 0.9709, 0.9709, 0.9706],
         [0.0292, 0.0290, 0.0293,  ..., 0.0291, 0.0291, 0.0294]],
        [[0.9707, 0.9706, 0.9707,  ..., 0.9706, 0.9706, 0.9706],
         [0.0293, 0.0294, 0.0293,  ..., 0.0294, 0.0294, 0.0294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-18 14:45:19,143 [Process: 0] Synchronize training processes
2024-08-18 14:45:19,143 [Process: 0] Evaluating...
2024-08-18 14:45:19,145 [Process: 0] EPOCH 255:
2024-08-18 14:45:19,147 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.9739, 0.9739, 0.9738,  ..., 0.9738, 0.9742, 0.9738],
         [0.0261, 0.0261, 0.0262,  ..., 0.0262, 0.0258, 0.0262]],
        [[0.9738, 0.9737, 0.9738,  ..., 0.9739, 0.9734, 0.9737],
         [0.0262, 0.0263, 0.0262,  ..., 0.0261, 0.0266, 0.0263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9708, 0.9707, 0.9710,  ..., 0.9710, 0.9712, 0.9706],
         [0.0292, 0.0293, 0.0290,  ..., 0.0290, 0.0288, 0.0294]],
        [[0.9706, 0.9706, 0.9705,  ..., 0.9708, 0.9707, 0.9708],
         [0.0294, 0.0294, 0.0295,  ..., 0.0292, 0.0293, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9740, 0.9741, 0.9741,  ..., 0.9737, 0.9740, 0.9738],
         [0.0260, 0.0259, 0.0259,  ..., 0.0263, 0.0260, 0.0262]],
        [[0.9743, 0.9740, 0.9739,  ..., 0.9742, 0.9734, 0.9735],
         [0.0257, 0.0260, 0.0261,  ..., 0.0258, 0.0266, 0.0265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:20,573 [Process: 0] Synchronize training processes
2024-08-18 14:45:20,574 [Process: 0] Evaluating...
2024-08-18 14:45:20,576 [Process: 0] EPOCH 256:
2024-08-18 14:45:20,577 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:22,005 [Process: 0] Synchronize training processes
2024-08-18 14:45:22,006 [Process: 0] Evaluating...
2024-08-18 14:45:22,007 [Process: 0] EPOCH 257:
2024-08-18 14:45:22,009 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9713, 0.9710, 0.9711,  ..., 0.9709, 0.9713, 0.9708],
         [0.0287, 0.0290, 0.0289,  ..., 0.0291, 0.0287, 0.0292]],
        [[0.9707, 0.9708, 0.9710,  ..., 0.9707, 0.9707, 0.9710],
         [0.0293, 0.0292, 0.0290,  ..., 0.0293, 0.0293, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9742, 0.9742, 0.9739,  ..., 0.9743, 0.9740, 0.9742],
         [0.0258, 0.0258, 0.0261,  ..., 0.0257, 0.0260, 0.0258]],
        [[0.9738, 0.9739, 0.9738,  ..., 0.9741, 0.9738, 0.9736],
         [0.0262, 0.0261, 0.0262,  ..., 0.0259, 0.0262, 0.0264]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9705, 0.9707, 0.9708,  ..., 0.9708, 0.9704, 0.9708],
         [0.0295, 0.0293, 0.0292,  ..., 0.0292, 0.0296, 0.0292]],
        [[0.9709, 0.9705, 0.9706,  ..., 0.9708, 0.9709, 0.9706],
         [0.0291, 0.0295, 0.0294,  ..., 0.0292, 0.0291, 0.0294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:23,430 [Process: 0] Synchronize training processes
2024-08-18 14:45:23,431 [Process: 0] Evaluating...
2024-08-18 14:45:23,432 [Process: 0] EPOCH 258:
2024-08-18 14:45:23,434 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9742, 0.9742, 0.9744,  ..., 0.9745, 0.9739, 0.9741],
         [0.0258, 0.0258, 0.0256,  ..., 0.0255, 0.0261, 0.0259]],
        [[0.9741, 0.9739, 0.9746,  ..., 0.9742, 0.9734, 0.9736],
         [0.0259, 0.0261, 0.0254,  ..., 0.0258, 0.0266, 0.0264]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9704, 0.9708, 0.9712,  ..., 0.9710, 0.9708, 0.9706],
         [0.0296, 0.0292, 0.0288,  ..., 0.0290, 0.0292, 0.0294]],
        [[0.9707, 0.9708, 0.9709,  ..., 0.9708, 0.9710, 0.9708],
         [0.0293, 0.0292, 0.0291,  ..., 0.0292, 0.0290, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9743, 0.9742, 0.9746,  ..., 0.9740, 0.9744, 0.9742],
         [0.0257, 0.0258, 0.0254,  ..., 0.0260, 0.0256, 0.0258]],
        [[0.9743, 0.9746, 0.9742,  ..., 0.9741, 0.9737, 0.9740],
         [0.0257, 0.0254, 0.0258,  ..., 0.0259, 0.0263, 0.0260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:24,855 [Process: 0] Synchronize training processes
2024-08-18 14:45:24,855 [Process: 0] Evaluating...
2024-08-18 14:45:24,857 [Process: 0] EPOCH 259:
2024-08-18 14:45:24,859 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:26,285 [Process: 0] Synchronize training processes
2024-08-18 14:45:26,286 [Process: 0] Evaluating...
2024-08-18 14:45:26,287 [Process: 0] EPOCH 260:
2024-08-18 14:45:26,289 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9711, 0.9709, 0.9716,  ..., 0.9713, 0.9709, 0.9710],
         [0.0289, 0.0291, 0.0284,  ..., 0.0287, 0.0291, 0.0290]],
        [[0.9713, 0.9709, 0.9710,  ..., 0.9710, 0.9708, 0.9710],
         [0.0287, 0.0291, 0.0290,  ..., 0.0290, 0.0292, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9747, 0.9747, 0.9746,  ..., 0.9745, 0.9747, 0.9743],
         [0.0253, 0.0253, 0.0254,  ..., 0.0255, 0.0253, 0.0257]],
        [[0.9748, 0.9737, 0.9750,  ..., 0.9746, 0.9737, 0.9739],
         [0.0252, 0.0263, 0.0250,  ..., 0.0254, 0.0263, 0.0261]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9703, 0.9711, 0.9711,  ..., 0.9712, 0.9710, 0.9710],
         [0.0297, 0.0289, 0.0289,  ..., 0.0288, 0.0290, 0.0290]],
        [[0.9711, 0.9708, 0.9711,  ..., 0.9708, 0.9711, 0.9707],
         [0.0289, 0.0292, 0.0289,  ..., 0.0292, 0.0289, 0.0293]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:27,729 [Process: 0] Synchronize training processes
2024-08-18 14:45:27,729 [Process: 0] Evaluating...
2024-08-18 14:45:27,731 [Process: 0] EPOCH 261:
2024-08-18 14:45:27,733 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9749, 0.9745, 0.9747,  ..., 0.9748, 0.9742, 0.9749],
         [0.0251, 0.0255, 0.0253,  ..., 0.0252, 0.0258, 0.0251]],
        [[0.9747, 0.9744, 0.9743,  ..., 0.9750, 0.9732, 0.9739],
         [0.0253, 0.0256, 0.0257,  ..., 0.0250, 0.0268, 0.0261]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9712, 0.9716, 0.9712,  ..., 0.9713, 0.9715, 0.9707],
         [0.0288, 0.0284, 0.0288,  ..., 0.0287, 0.0285, 0.0293]],
        [[0.9711, 0.9709, 0.9709,  ..., 0.9711, 0.9710, 0.9713],
         [0.0289, 0.0291, 0.0291,  ..., 0.0289, 0.0290, 0.0287]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9749, 0.9750, 0.9748,  ..., 0.9748, 0.9745, 0.9747],
         [0.0251, 0.0250, 0.0252,  ..., 0.0252, 0.0255, 0.0253]],
        [[0.9742, 0.9744, 0.9749,  ..., 0.9750, 0.9747, 0.9741],
         [0.0258, 0.0256, 0.0251,  ..., 0.0250, 0.0253, 0.0259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:29,155 [Process: 0] Synchronize training processes
2024-08-18 14:45:29,156 [Process: 0] Evaluating...
2024-08-18 14:45:29,164 [Process: 0] EPOCH 262:
2024-08-18 14:45:29,166 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9715, 0.9717, 0.9719,  ..., 0.9717, 0.9720, 0.9717],
         [0.0285, 0.0283, 0.0281,  ..., 0.0283, 0.0280, 0.0283]],
        [[0.9719, 0.9715, 0.9715,  ..., 0.9716, 0.9716, 0.9717],
         [0.0281, 0.0285, 0.0285,  ..., 0.0284, 0.0284, 0.0283]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9748, 0.9747, 0.9747,  ..., 0.9746, 0.9746, 0.9745],
         [0.0252, 0.0253, 0.0253,  ..., 0.0254, 0.0254, 0.0255]],
        [[0.9748, 0.9749, 0.9743,  ..., 0.9750, 0.9745, 0.9743],
         [0.0252, 0.0251, 0.0257,  ..., 0.0250, 0.0255, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:30,597 [Process: 0] Synchronize training processes
2024-08-18 14:45:30,597 [Process: 0] Evaluating...
2024-08-18 14:45:30,599 [Process: 0] EPOCH 263:
2024-08-18 14:45:30,601 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:32,031 [Process: 0] Synchronize training processes
2024-08-18 14:45:32,032 [Process: 0] Evaluating...
2024-08-18 14:45:32,034 [Process: 0] EPOCH 264:
2024-08-18 14:45:32,036 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9723, 0.9722, 0.9727,  ..., 0.9727, 0.9723, 0.9722],
         [0.0277, 0.0278, 0.0273,  ..., 0.0273, 0.0277, 0.0278]],
        [[0.9722, 0.9720, 0.9721,  ..., 0.9723, 0.9722, 0.9721],
         [0.0278, 0.0280, 0.0279,  ..., 0.0277, 0.0278, 0.0279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9749, 0.9749, 0.9749,  ..., 0.9753, 0.9750, 0.9750],
         [0.0251, 0.0251, 0.0251,  ..., 0.0247, 0.0250, 0.0250]],
        [[0.9747, 0.9753, 0.9747,  ..., 0.9751, 0.9739, 0.9745],
         [0.0253, 0.0247, 0.0253,  ..., 0.0249, 0.0261, 0.0255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9733, 0.9732, 0.9729,  ..., 0.9728, 0.9728, 0.9728],
         [0.0267, 0.0268, 0.0271,  ..., 0.0272, 0.0272, 0.0272]],
        [[0.9728, 0.9729, 0.9728,  ..., 0.9728, 0.9728, 0.9728],
         [0.0272, 0.0271, 0.0272,  ..., 0.0272, 0.0272, 0.0272]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:33,466 [Process: 0] Synchronize training processes
2024-08-18 14:45:33,467 [Process: 0] Evaluating...
2024-08-18 14:45:33,468 [Process: 0] EPOCH 265:
2024-08-18 14:45:33,470 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9749, 0.9747, 0.9749,  ..., 0.9749, 0.9750, 0.9750],
         [0.0251, 0.0253, 0.0251,  ..., 0.0251, 0.0250, 0.0250]],
        [[0.9753, 0.9747, 0.9751,  ..., 0.9750, 0.9745, 0.9744],
         [0.0247, 0.0253, 0.0249,  ..., 0.0250, 0.0255, 0.0256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9736, 0.9734, 0.9737,  ..., 0.9741, 0.9736, 0.9734],
         [0.0264, 0.0266, 0.0263,  ..., 0.0259, 0.0264, 0.0266]],
        [[0.9736, 0.9735, 0.9734,  ..., 0.9736, 0.9734, 0.9732],
         [0.0264, 0.0265, 0.0266,  ..., 0.0264, 0.0266, 0.0268]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9748, 0.9746, 0.9748,  ..., 0.9750, 0.9747, 0.9750],
         [0.0252, 0.0254, 0.0252,  ..., 0.0250, 0.0253, 0.0250]],
        [[0.9752, 0.9747, 0.9745,  ..., 0.9748, 0.9740, 0.9744],
         [0.0248, 0.0253, 0.0255,  ..., 0.0252, 0.0260, 0.0256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:34,893 [Process: 0] Synchronize training processes
2024-08-18 14:45:34,893 [Process: 0] Evaluating...
2024-08-18 14:45:34,895 [Process: 0] EPOCH 266:
2024-08-18 14:45:34,897 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:36,320 [Process: 0] Synchronize training processes
2024-08-18 14:45:36,320 [Process: 0] Evaluating...
2024-08-18 14:45:36,322 [Process: 0] EPOCH 267:
2024-08-18 14:45:36,323 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9746, 0.9748, 0.9749,  ..., 0.9745, 0.9742, 0.9743],
         [0.0254, 0.0252, 0.0251,  ..., 0.0255, 0.0258, 0.0257]],
        [[0.9743, 0.9741, 0.9742,  ..., 0.9743, 0.9745, 0.9742],
         [0.0257, 0.0259, 0.0258,  ..., 0.0257, 0.0255, 0.0258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9745, 0.9737, 0.9748,  ..., 0.9746, 0.9743, 0.9749],
         [0.0255, 0.0263, 0.0252,  ..., 0.0254, 0.0257, 0.0251]],
        [[0.9744, 0.9745, 0.9746,  ..., 0.9745, 0.9739, 0.9740],
         [0.0256, 0.0255, 0.0254,  ..., 0.0255, 0.0261, 0.0260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9748, 0.9748, 0.9747,  ..., 0.9749, 0.9750, 0.9749],
         [0.0252, 0.0252, 0.0253,  ..., 0.0251, 0.0250, 0.0251]],
        [[0.9746, 0.9747, 0.9748,  ..., 0.9747, 0.9747, 0.9747],
         [0.0254, 0.0253, 0.0252,  ..., 0.0253, 0.0253, 0.0253]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:37,758 [Process: 0] Synchronize training processes
2024-08-18 14:45:37,759 [Process: 0] Evaluating...
2024-08-18 14:45:37,760 [Process: 0] EPOCH 268:
2024-08-18 14:45:37,762 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9748, 0.9747, 0.9747,  ..., 0.9749, 0.9749, 0.9749],
         [0.0252, 0.0253, 0.0253,  ..., 0.0251, 0.0251, 0.0251]],
        [[0.9748, 0.9746, 0.9749,  ..., 0.9745, 0.9748, 0.9746],
         [0.0252, 0.0254, 0.0251,  ..., 0.0255, 0.0252, 0.0254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9758, 0.9757, 0.9760,  ..., 0.9759, 0.9758, 0.9756],
         [0.0242, 0.0243, 0.0240,  ..., 0.0241, 0.0242, 0.0244]],
        [[0.9757, 0.9758, 0.9756,  ..., 0.9753, 0.9758, 0.9756],
         [0.0243, 0.0242, 0.0244,  ..., 0.0247, 0.0242, 0.0244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9753, 0.9753, 0.9756,  ..., 0.9753, 0.9751, 0.9754],
         [0.0247, 0.0247, 0.0244,  ..., 0.0247, 0.0249, 0.0246]],
        [[0.9750, 0.9748, 0.9751,  ..., 0.9748, 0.9746, 0.9749],
         [0.0250, 0.0252, 0.0249,  ..., 0.0252, 0.0254, 0.0251]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:39,186 [Process: 0] Synchronize training processes
2024-08-18 14:45:39,187 [Process: 0] Evaluating...
2024-08-18 14:45:39,188 [Process: 0] EPOCH 269:
2024-08-18 14:45:39,190 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9760, 0.9759, 0.9758,  ..., 0.9757, 0.9761, 0.9757],
         [0.0240, 0.0241, 0.0242,  ..., 0.0243, 0.0239, 0.0243]],
        [[0.9757, 0.9758, 0.9760,  ..., 0.9748, 0.9757, 0.9758],
         [0.0243, 0.0242, 0.0240,  ..., 0.0252, 0.0243, 0.0242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9755, 0.9756, 0.9754,  ..., 0.9755, 0.9753, 0.9754],
         [0.0245, 0.0244, 0.0246,  ..., 0.0245, 0.0247, 0.0246]],
        [[0.9757, 0.9756, 0.9754,  ..., 0.9755, 0.9750, 0.9748],
         [0.0243, 0.0244, 0.0246,  ..., 0.0245, 0.0250, 0.0252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-18 14:45:40,615 [Process: 0] Synchronize training processes
2024-08-18 14:45:40,616 [Process: 0] Evaluating...
2024-08-18 14:45:40,617 [Process: 0] EPOCH 270:
2024-08-18 14:45:40,619 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:42,045 [Process: 0] Synchronize training processes
2024-08-18 14:45:42,045 [Process: 0] Evaluating...
2024-08-18 14:45:42,047 [Process: 0] EPOCH 271:
2024-08-18 14:45:42,049 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9757, 0.9752, 0.9753,  ..., 0.9752, 0.9752, 0.9751],
         [0.0243, 0.0248, 0.0247,  ..., 0.0248, 0.0248, 0.0249]],
        [[0.9751, 0.9751, 0.9751,  ..., 0.9753, 0.9752, 0.9751],
         [0.0249, 0.0249, 0.0249,  ..., 0.0247, 0.0248, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9755, 0.9755, 0.9754,  ..., 0.9758, 0.9750, 0.9757],
         [0.0245, 0.0245, 0.0246,  ..., 0.0242, 0.0250, 0.0243]],
        [[0.9752, 0.9756, 0.9754,  ..., 0.9756, 0.9746, 0.9751],
         [0.0248, 0.0244, 0.0246,  ..., 0.0244, 0.0254, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9745, 0.9746, 0.9747,  ..., 0.9747, 0.9747, 0.9748],
         [0.0255, 0.0254, 0.0253,  ..., 0.0253, 0.0253, 0.0252]],
        [[0.9747, 0.9750, 0.9747,  ..., 0.9746, 0.9744, 0.9747],
         [0.0253, 0.0250, 0.0253,  ..., 0.0254, 0.0256, 0.0253]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:43,487 [Process: 0] Synchronize training processes
2024-08-18 14:45:43,487 [Process: 0] Evaluating...
2024-08-18 14:45:43,498 [Process: 0] EPOCH 272:
2024-08-18 14:45:43,500 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9759, 0.9754, 0.9758,  ..., 0.9753, 0.9758, 0.9756],
         [0.0241, 0.0246, 0.0242,  ..., 0.0247, 0.0242, 0.0244]],
        [[0.9762, 0.9754, 0.9753,  ..., 0.9760, 0.9761, 0.9751],
         [0.0238, 0.0246, 0.0247,  ..., 0.0240, 0.0239, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9743, 0.9745, 0.9743,  ..., 0.9742, 0.9746, 0.9744],
         [0.0257, 0.0255, 0.0257,  ..., 0.0258, 0.0254, 0.0256]],
        [[0.9743, 0.9742, 0.9741,  ..., 0.9740, 0.9741, 0.9742],
         [0.0257, 0.0258, 0.0259,  ..., 0.0260, 0.0259, 0.0258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9762, 0.9760, 0.9761,  ..., 0.9760, 0.9759, 0.9764],
         [0.0238, 0.0240, 0.0239,  ..., 0.0240, 0.0241, 0.0236]],
        [[0.9756, 0.9755, 0.9761,  ..., 0.9760, 0.9757, 0.9756],
         [0.0244, 0.0245, 0.0239,  ..., 0.0240, 0.0243, 0.0244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:44,922 [Process: 0] Synchronize training processes
2024-08-18 14:45:44,922 [Process: 0] Evaluating...
2024-08-18 14:45:44,924 [Process: 0] EPOCH 273:
2024-08-18 14:45:44,926 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:46,361 [Process: 0] Synchronize training processes
2024-08-18 14:45:46,361 [Process: 0] Evaluating...
2024-08-18 14:45:46,363 [Process: 0] EPOCH 274:
2024-08-18 14:45:46,365 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9743, 0.9741, 0.9742,  ..., 0.9744, 0.9745, 0.9742],
         [0.0257, 0.0259, 0.0258,  ..., 0.0256, 0.0255, 0.0258]],
        [[0.9742, 0.9743, 0.9741,  ..., 0.9742, 0.9741, 0.9741],
         [0.0258, 0.0257, 0.0259,  ..., 0.0258, 0.0259, 0.0259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9765, 0.9760, 0.9765,  ..., 0.9762, 0.9765, 0.9762],
         [0.0235, 0.0240, 0.0235,  ..., 0.0238, 0.0235, 0.0238]],
        [[0.9758, 0.9767, 0.9765,  ..., 0.9762, 0.9755, 0.9757],
         [0.0242, 0.0233, 0.0235,  ..., 0.0238, 0.0245, 0.0243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9744, 0.9744, 0.9745,  ..., 0.9745, 0.9746, 0.9744],
         [0.0256, 0.0256, 0.0255,  ..., 0.0255, 0.0254, 0.0256]],
        [[0.9743, 0.9744, 0.9743,  ..., 0.9742, 0.9741, 0.9743],
         [0.0257, 0.0256, 0.0257,  ..., 0.0258, 0.0259, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:47,792 [Process: 0] Synchronize training processes
2024-08-18 14:45:47,792 [Process: 0] Evaluating...
2024-08-18 14:45:47,794 [Process: 0] EPOCH 275:
2024-08-18 14:45:47,796 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9767, 0.9763, 0.9769,  ..., 0.9764, 0.9770, 0.9764],
         [0.0233, 0.0237, 0.0231,  ..., 0.0236, 0.0230, 0.0236]],
        [[0.9770, 0.9767, 0.9764,  ..., 0.9768, 0.9761, 0.9762],
         [0.0230, 0.0233, 0.0236,  ..., 0.0232, 0.0239, 0.0238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9745, 0.9748, 0.9743,  ..., 0.9747, 0.9742, 0.9742],
         [0.0255, 0.0252, 0.0257,  ..., 0.0253, 0.0258, 0.0258]],
        [[0.9744, 0.9744, 0.9744,  ..., 0.9743, 0.9743, 0.9743],
         [0.0256, 0.0256, 0.0256,  ..., 0.0257, 0.0257, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9768, 0.9771, 0.9769,  ..., 0.9770, 0.9772, 0.9772],
         [0.0232, 0.0229, 0.0231,  ..., 0.0230, 0.0228, 0.0228]],
        [[0.9765, 0.9769, 0.9769,  ..., 0.9771, 0.9762, 0.9763],
         [0.0235, 0.0231, 0.0231,  ..., 0.0229, 0.0238, 0.0237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:49,215 [Process: 0] Synchronize training processes
2024-08-18 14:45:49,216 [Process: 0] Evaluating...
2024-08-18 14:45:49,217 [Process: 0] EPOCH 276:
2024-08-18 14:45:49,219 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9746, 0.9748, 0.9746,  ..., 0.9746, 0.9751, 0.9746],
         [0.0254, 0.0252, 0.0254,  ..., 0.0254, 0.0249, 0.0254]],
        [[0.9745, 0.9746, 0.9745,  ..., 0.9744, 0.9744, 0.9743],
         [0.0255, 0.0254, 0.0255,  ..., 0.0256, 0.0256, 0.0257]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9769, 0.9772, 0.9769,  ..., 0.9768, 0.9773, 0.9773],
         [0.0231, 0.0228, 0.0231,  ..., 0.0232, 0.0227, 0.0227]],
        [[0.9769, 0.9771, 0.9776,  ..., 0.9769, 0.9763, 0.9765],
         [0.0231, 0.0229, 0.0224,  ..., 0.0231, 0.0237, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-18 14:45:50,640 [Process: 0] Synchronize training processes
2024-08-18 14:45:50,640 [Process: 0] Evaluating...
2024-08-18 14:45:50,642 [Process: 0] EPOCH 277:
2024-08-18 14:45:50,644 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:52,069 [Process: 0] Synchronize training processes
2024-08-18 14:45:52,070 [Process: 0] Evaluating...
2024-08-18 14:45:52,071 [Process: 0] EPOCH 278:
2024-08-18 14:45:52,073 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9751, 0.9751, 0.9751,  ..., 0.9750, 0.9747, 0.9749],
         [0.0249, 0.0249, 0.0249,  ..., 0.0250, 0.0253, 0.0251]],
        [[0.9748, 0.9747, 0.9750,  ..., 0.9747, 0.9747, 0.9749],
         [0.0252, 0.0253, 0.0250,  ..., 0.0253, 0.0253, 0.0251]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9774, 0.9772, 0.9771,  ..., 0.9777, 0.9774, 0.9772],
         [0.0226, 0.0228, 0.0229,  ..., 0.0223, 0.0226, 0.0228]],
        [[0.9777, 0.9772, 0.9777,  ..., 0.9774, 0.9774, 0.9769],
         [0.0223, 0.0228, 0.0223,  ..., 0.0226, 0.0226, 0.0231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9749, 0.9751, 0.9752,  ..., 0.9750, 0.9751, 0.9751],
         [0.0251, 0.0249, 0.0248,  ..., 0.0250, 0.0249, 0.0249]],
        [[0.9749, 0.9749, 0.9750,  ..., 0.9749, 0.9749, 0.9750],
         [0.0251, 0.0251, 0.0250,  ..., 0.0251, 0.0251, 0.0250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:53,498 [Process: 0] Synchronize training processes
2024-08-18 14:45:53,499 [Process: 0] Evaluating...
2024-08-18 14:45:53,500 [Process: 0] EPOCH 279:
2024-08-18 14:45:53,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9773, 0.9774, 0.9774,  ..., 0.9776, 0.9775, 0.9778],
         [0.0227, 0.0226, 0.0226,  ..., 0.0224, 0.0225, 0.0222]],
        [[0.9776, 0.9772, 0.9776,  ..., 0.9777, 0.9772, 0.9771],
         [0.0224, 0.0228, 0.0224,  ..., 0.0223, 0.0228, 0.0229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9751, 0.9752, 0.9751,  ..., 0.9750, 0.9752, 0.9750],
         [0.0249, 0.0248, 0.0249,  ..., 0.0250, 0.0248, 0.0250]],
        [[0.9750, 0.9749, 0.9749,  ..., 0.9750, 0.9750, 0.9749],
         [0.0250, 0.0251, 0.0251,  ..., 0.0250, 0.0250, 0.0251]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9775, 0.9778, 0.9778,  ..., 0.9774, 0.9777, 0.9781],
         [0.0225, 0.0222, 0.0222,  ..., 0.0226, 0.0223, 0.0219]],
        [[0.9778, 0.9775, 0.9776,  ..., 0.9779, 0.9772, 0.9773],
         [0.0222, 0.0225, 0.0224,  ..., 0.0221, 0.0228, 0.0227]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:54,926 [Process: 0] Synchronize training processes
2024-08-18 14:45:54,926 [Process: 0] Evaluating...
2024-08-18 14:45:54,928 [Process: 0] EPOCH 280:
2024-08-18 14:45:54,930 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:45:56,356 [Process: 0] Synchronize training processes
2024-08-18 14:45:56,356 [Process: 0] Evaluating...
2024-08-18 14:45:56,358 [Process: 0] EPOCH 281:
2024-08-18 14:45:56,360 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9754, 0.9752, 0.9753,  ..., 0.9749, 0.9753, 0.9751],
         [0.0246, 0.0248, 0.0247,  ..., 0.0251, 0.0247, 0.0249]],
        [[0.9752, 0.9752, 0.9751,  ..., 0.9749, 0.9752, 0.9750],
         [0.0248, 0.0248, 0.0249,  ..., 0.0251, 0.0248, 0.0250]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9783, 0.9778, 0.9780,  ..., 0.9779, 0.9781, 0.9776],
         [0.0217, 0.0222, 0.0220,  ..., 0.0221, 0.0219, 0.0224]],
        [[0.9779, 0.9779, 0.9779,  ..., 0.9778, 0.9776, 0.9775],
         [0.0221, 0.0221, 0.0221,  ..., 0.0222, 0.0224, 0.0225]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9750, 0.9753, 0.9753,  ..., 0.9752, 0.9749, 0.9750],
         [0.0250, 0.0247, 0.0247,  ..., 0.0248, 0.0251, 0.0250]],
        [[0.9750, 0.9750, 0.9750,  ..., 0.9750, 0.9753, 0.9752],
         [0.0250, 0.0250, 0.0250,  ..., 0.0250, 0.0247, 0.0248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:57,767 [Process: 0] Synchronize training processes
2024-08-18 14:45:57,767 [Process: 0] Evaluating...
2024-08-18 14:45:57,775 [Process: 0] EPOCH 282:
2024-08-18 14:45:57,777 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9781, 0.9777, 0.9781,  ..., 0.9777, 0.9778, 0.9777],
         [0.0219, 0.0223, 0.0219,  ..., 0.0223, 0.0222, 0.0223]],
        [[0.9780, 0.9778, 0.9776,  ..., 0.9777, 0.9781, 0.9773],
         [0.0220, 0.0222, 0.0224,  ..., 0.0223, 0.0219, 0.0227]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9756, 0.9754, 0.9754,  ..., 0.9754, 0.9756, 0.9755],
         [0.0244, 0.0246, 0.0246,  ..., 0.0246, 0.0244, 0.0245]],
        [[0.9751, 0.9753, 0.9751,  ..., 0.9751, 0.9754, 0.9754],
         [0.0249, 0.0247, 0.0249,  ..., 0.0249, 0.0246, 0.0246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9782, 0.9779, 0.9779,  ..., 0.9782, 0.9777, 0.9781],
         [0.0218, 0.0221, 0.0221,  ..., 0.0218, 0.0223, 0.0219]],
        [[0.9781, 0.9781, 0.9777,  ..., 0.9779, 0.9779, 0.9776],
         [0.0219, 0.0219, 0.0223,  ..., 0.0221, 0.0221, 0.0224]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:45:59,201 [Process: 0] Synchronize training processes
2024-08-18 14:45:59,201 [Process: 0] Evaluating...
2024-08-18 14:45:59,203 [Process: 0] EPOCH 283:
2024-08-18 14:45:59,205 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9756, 0.9759, 0.9760,  ..., 0.9756, 0.9755, 0.9756],
         [0.0244, 0.0241, 0.0240,  ..., 0.0244, 0.0245, 0.0244]],
        [[0.9756, 0.9754, 0.9755,  ..., 0.9754, 0.9756, 0.9755],
         [0.0244, 0.0246, 0.0245,  ..., 0.0246, 0.0244, 0.0245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9784, 0.9783, 0.9783,  ..., 0.9781, 0.9783, 0.9783],
         [0.0216, 0.0217, 0.0217,  ..., 0.0219, 0.0217, 0.0217]],
        [[0.9783, 0.9787, 0.9785,  ..., 0.9784, 0.9777, 0.9777],
         [0.0217, 0.0213, 0.0215,  ..., 0.0216, 0.0223, 0.0223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:46:00,629 [Process: 0] Synchronize training processes
2024-08-18 14:46:00,629 [Process: 0] Evaluating...
2024-08-18 14:46:00,631 [Process: 0] EPOCH 284:
2024-08-18 14:46:00,633 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:02,067 [Process: 0] Synchronize training processes
2024-08-18 14:46:02,067 [Process: 0] Evaluating...
2024-08-18 14:46:02,069 [Process: 0] EPOCH 285:
2024-08-18 14:46:02,071 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9761, 0.9760, 0.9756,  ..., 0.9759, 0.9759, 0.9758],
         [0.0239, 0.0240, 0.0244,  ..., 0.0241, 0.0241, 0.0242]],
        [[0.9758, 0.9756, 0.9758,  ..., 0.9759, 0.9757, 0.9757],
         [0.0242, 0.0244, 0.0242,  ..., 0.0241, 0.0243, 0.0243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9783, 0.9788,  ..., 0.9786, 0.9785, 0.9786],
         [0.0210, 0.0217, 0.0212,  ..., 0.0214, 0.0215, 0.0214]],
        [[0.9786, 0.9787, 0.9784,  ..., 0.9781, 0.9778, 0.9781],
         [0.0214, 0.0213, 0.0216,  ..., 0.0219, 0.0222, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9761, 0.9761, 0.9763,  ..., 0.9763, 0.9762, 0.9762],
         [0.0239, 0.0239, 0.0237,  ..., 0.0237, 0.0238, 0.0238]],
        [[0.9761, 0.9760, 0.9759,  ..., 0.9760, 0.9760, 0.9762],
         [0.0239, 0.0240, 0.0241,  ..., 0.0240, 0.0240, 0.0238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:03,496 [Process: 0] Synchronize training processes
2024-08-18 14:46:03,496 [Process: 0] Evaluating...
2024-08-18 14:46:03,498 [Process: 0] EPOCH 286:
2024-08-18 14:46:03,500 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9786, 0.9785, 0.9789,  ..., 0.9789, 0.9790, 0.9788],
         [0.0214, 0.0215, 0.0211,  ..., 0.0211, 0.0210, 0.0212]],
        [[0.9785, 0.9788, 0.9788,  ..., 0.9790, 0.9786, 0.9781],
         [0.0215, 0.0212, 0.0212,  ..., 0.0210, 0.0214, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9767, 0.9765, 0.9765,  ..., 0.9766, 0.9767, 0.9767],
         [0.0233, 0.0235, 0.0235,  ..., 0.0234, 0.0233, 0.0233]],
        [[0.9765, 0.9764, 0.9763,  ..., 0.9763, 0.9765, 0.9763],
         [0.0235, 0.0236, 0.0237,  ..., 0.0237, 0.0235, 0.0237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9785, 0.9788, 0.9791,  ..., 0.9787, 0.9789, 0.9788],
         [0.0215, 0.0212, 0.0209,  ..., 0.0213, 0.0211, 0.0212]],
        [[0.9790, 0.9789, 0.9790,  ..., 0.9792, 0.9785, 0.9782],
         [0.0210, 0.0211, 0.0210,  ..., 0.0208, 0.0215, 0.0218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:04,929 [Process: 0] Synchronize training processes
2024-08-18 14:46:04,929 [Process: 0] Evaluating...
2024-08-18 14:46:04,931 [Process: 0] EPOCH 287:
2024-08-18 14:46:04,933 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:06,355 [Process: 0] Synchronize training processes
2024-08-18 14:46:06,355 [Process: 0] Evaluating...
2024-08-18 14:46:06,357 [Process: 0] EPOCH 288:
2024-08-18 14:46:06,359 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9772, 0.9769, 0.9767,  ..., 0.9770, 0.9769, 0.9765],
         [0.0228, 0.0231, 0.0233,  ..., 0.0230, 0.0231, 0.0235]],
        [[0.9768, 0.9768, 0.9766,  ..., 0.9769, 0.9768, 0.9767],
         [0.0232, 0.0232, 0.0234,  ..., 0.0231, 0.0232, 0.0233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9789, 0.9791,  ..., 0.9788, 0.9794, 0.9790],
         [0.0210, 0.0211, 0.0209,  ..., 0.0212, 0.0206, 0.0210]],
        [[0.9787, 0.9790, 0.9790,  ..., 0.9790, 0.9787, 0.9781],
         [0.0213, 0.0210, 0.0210,  ..., 0.0210, 0.0213, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9769, 0.9773, 0.9769,  ..., 0.9771, 0.9771, 0.9771],
         [0.0231, 0.0227, 0.0231,  ..., 0.0229, 0.0229, 0.0229]],
        [[0.9771, 0.9770, 0.9768,  ..., 0.9770, 0.9770, 0.9770],
         [0.0229, 0.0230, 0.0232,  ..., 0.0230, 0.0230, 0.0230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:07,785 [Process: 0] Synchronize training processes
2024-08-18 14:46:07,785 [Process: 0] Evaluating...
2024-08-18 14:46:07,787 [Process: 0] EPOCH 289:
2024-08-18 14:46:07,789 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9788, 0.9789, 0.9787,  ..., 0.9792, 0.9790, 0.9793],
         [0.0212, 0.0211, 0.0213,  ..., 0.0208, 0.0210, 0.0207]],
        [[0.9792, 0.9790, 0.9790,  ..., 0.9788, 0.9783, 0.9783],
         [0.0208, 0.0210, 0.0210,  ..., 0.0212, 0.0217, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9769, 0.9771, 0.9767,  ..., 0.9766, 0.9767, 0.9768],
         [0.0231, 0.0229, 0.0233,  ..., 0.0234, 0.0233, 0.0232]],
        [[0.9767, 0.9767, 0.9767,  ..., 0.9766, 0.9767, 0.9766],
         [0.0233, 0.0233, 0.0233,  ..., 0.0234, 0.0233, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9784, 0.9790,  ..., 0.9791, 0.9789, 0.9791],
         [0.0210, 0.0216, 0.0210,  ..., 0.0209, 0.0211, 0.0209]],
        [[0.9784, 0.9786, 0.9789,  ..., 0.9787, 0.9782, 0.9783],
         [0.0216, 0.0214, 0.0211,  ..., 0.0213, 0.0218, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:09,212 [Process: 0] Synchronize training processes
2024-08-18 14:46:09,213 [Process: 0] Evaluating...
2024-08-18 14:46:09,214 [Process: 0] EPOCH 290:
2024-08-18 14:46:09,216 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9762, 0.9764, 0.9764,  ..., 0.9763, 0.9764, 0.9767],
         [0.0238, 0.0236, 0.0236,  ..., 0.0237, 0.0236, 0.0233]],
        [[0.9763, 0.9763, 0.9761,  ..., 0.9763, 0.9763, 0.9763],
         [0.0237, 0.0237, 0.0239,  ..., 0.0237, 0.0237, 0.0237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9787, 0.9789, 0.9788,  ..., 0.9792, 0.9785, 0.9789],
         [0.0213, 0.0211, 0.0212,  ..., 0.0208, 0.0215, 0.0211]],
        [[0.9789, 0.9789, 0.9787,  ..., 0.9789, 0.9787, 0.9784],
         [0.0211, 0.0211, 0.0213,  ..., 0.0211, 0.0213, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9759, 0.9757, 0.9759,  ..., 0.9759, 0.9758, 0.9759],
         [0.0241, 0.0243, 0.0241,  ..., 0.0241, 0.0242, 0.0241]],
        [[0.9758, 0.9758, 0.9758,  ..., 0.9757, 0.9760, 0.9759],
         [0.0242, 0.0242, 0.0242,  ..., 0.0243, 0.0240, 0.0241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:10,649 [Process: 0] Synchronize training processes
2024-08-18 14:46:10,650 [Process: 0] Evaluating...
2024-08-18 14:46:10,652 [Process: 0] EPOCH 291:
2024-08-18 14:46:10,653 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:12,077 [Process: 0] Synchronize training processes
2024-08-18 14:46:12,077 [Process: 0] Evaluating...
2024-08-18 14:46:12,085 [Process: 0] EPOCH 292:
2024-08-18 14:46:12,087 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9786, 0.9786, 0.9785,  ..., 0.9786, 0.9788, 0.9786],
         [0.0214, 0.0214, 0.0215,  ..., 0.0214, 0.0212, 0.0214]],
        [[0.9790, 0.9789, 0.9788,  ..., 0.9789, 0.9786, 0.9783],
         [0.0210, 0.0211, 0.0212,  ..., 0.0211, 0.0214, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9757, 0.9755, 0.9756,  ..., 0.9755, 0.9757, 0.9757],
         [0.0243, 0.0245, 0.0244,  ..., 0.0245, 0.0243, 0.0243]],
        [[0.9754, 0.9754, 0.9755,  ..., 0.9755, 0.9756, 0.9754],
         [0.0246, 0.0246, 0.0245,  ..., 0.0245, 0.0244, 0.0246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:13,513 [Process: 0] Synchronize training processes
2024-08-18 14:46:13,513 [Process: 0] Evaluating...
2024-08-18 14:46:13,515 [Process: 0] EPOCH 293:
2024-08-18 14:46:13,517 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9789, 0.9788, 0.9789,  ..., 0.9788, 0.9776, 0.9783],
         [0.0211, 0.0212, 0.0211,  ..., 0.0212, 0.0224, 0.0217]],
        [[0.9785, 0.9789, 0.9794,  ..., 0.9787, 0.9779, 0.9783],
         [0.0215, 0.0211, 0.0206,  ..., 0.0213, 0.0221, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9753, 0.9753, 0.9752,  ..., 0.9752, 0.9755, 0.9749],
         [0.0247, 0.0247, 0.0248,  ..., 0.0248, 0.0245, 0.0251]],
        [[0.9752, 0.9753, 0.9751,  ..., 0.9750, 0.9751, 0.9752],
         [0.0248, 0.0247, 0.0249,  ..., 0.0250, 0.0249, 0.0248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9789, 0.9790, 0.9791,  ..., 0.9778, 0.9782, 0.9784],
         [0.0211, 0.0210, 0.0209,  ..., 0.0222, 0.0218, 0.0216]],
        [[0.9794, 0.9790, 0.9794,  ..., 0.9791, 0.9781, 0.9789],
         [0.0206, 0.0210, 0.0206,  ..., 0.0209, 0.0219, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:14,945 [Process: 0] Synchronize training processes
2024-08-18 14:46:14,945 [Process: 0] Evaluating...
2024-08-18 14:46:14,947 [Process: 0] EPOCH 294:
2024-08-18 14:46:14,949 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:16,376 [Process: 0] Synchronize training processes
2024-08-18 14:46:16,377 [Process: 0] Evaluating...
2024-08-18 14:46:16,378 [Process: 0] EPOCH 295:
2024-08-18 14:46:16,380 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9751, 0.9752, 0.9751,  ..., 0.9752, 0.9750, 0.9750],
         [0.0249, 0.0248, 0.0249,  ..., 0.0248, 0.0250, 0.0250]],
        [[0.9752, 0.9752, 0.9750,  ..., 0.9750, 0.9754, 0.9753],
         [0.0248, 0.0248, 0.0250,  ..., 0.0250, 0.0246, 0.0247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9793, 0.9787,  ..., 0.9785, 0.9783, 0.9789],
         [0.0210, 0.0207, 0.0213,  ..., 0.0215, 0.0217, 0.0211]],
        [[0.9794, 0.9793, 0.9790,  ..., 0.9791, 0.9787, 0.9789],
         [0.0206, 0.0207, 0.0210,  ..., 0.0209, 0.0213, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9754, 0.9754, 0.9750,  ..., 0.9753, 0.9754, 0.9754],
         [0.0246, 0.0246, 0.0250,  ..., 0.0247, 0.0246, 0.0246]],
        [[0.9752, 0.9751, 0.9749,  ..., 0.9752, 0.9750, 0.9751],
         [0.0248, 0.0249, 0.0251,  ..., 0.0248, 0.0250, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:17,809 [Process: 0] Synchronize training processes
2024-08-18 14:46:17,809 [Process: 0] Evaluating...
2024-08-18 14:46:17,811 [Process: 0] EPOCH 296:
2024-08-18 14:46:17,813 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9796, 0.9792, 0.9793,  ..., 0.9792, 0.9788, 0.9795],
         [0.0204, 0.0208, 0.0207,  ..., 0.0208, 0.0212, 0.0205]],
        [[0.9794, 0.9791, 0.9794,  ..., 0.9793, 0.9789, 0.9788],
         [0.0206, 0.0209, 0.0206,  ..., 0.0207, 0.0211, 0.0212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9754, 0.9753, 0.9752,  ..., 0.9755, 0.9756, 0.9755],
         [0.0246, 0.0247, 0.0248,  ..., 0.0245, 0.0244, 0.0245]],
        [[0.9754, 0.9756, 0.9755,  ..., 0.9755, 0.9755, 0.9752],
         [0.0246, 0.0244, 0.0245,  ..., 0.0245, 0.0245, 0.0248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9794, 0.9794, 0.9799,  ..., 0.9796, 0.9795, 0.9796],
         [0.0206, 0.0206, 0.0201,  ..., 0.0204, 0.0205, 0.0204]],
        [[0.9797, 0.9795, 0.9798,  ..., 0.9792, 0.9789, 0.9787],
         [0.0203, 0.0205, 0.0202,  ..., 0.0208, 0.0211, 0.0213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:19,240 [Process: 0] Synchronize training processes
2024-08-18 14:46:19,240 [Process: 0] Evaluating...
2024-08-18 14:46:19,242 [Process: 0] EPOCH 297:
2024-08-18 14:46:19,243 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9756, 0.9756, 0.9757,  ..., 0.9757, 0.9757, 0.9760],
         [0.0244, 0.0244, 0.0243,  ..., 0.0243, 0.0243, 0.0240]],
        [[0.9757, 0.9758, 0.9757,  ..., 0.9756, 0.9758, 0.9758],
         [0.0243, 0.0242, 0.0243,  ..., 0.0244, 0.0242, 0.0242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9799, 0.9793, 0.9794,  ..., 0.9795, 0.9795, 0.9796],
         [0.0201, 0.0207, 0.0206,  ..., 0.0205, 0.0205, 0.0204]],
        [[0.9797, 0.9795, 0.9795,  ..., 0.9793, 0.9795, 0.9790],
         [0.0203, 0.0205, 0.0205,  ..., 0.0207, 0.0205, 0.0210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9761, 0.9759, 0.9759,  ..., 0.9763, 0.9761, 0.9762],
         [0.0239, 0.0241, 0.0241,  ..., 0.0237, 0.0239, 0.0238]],
        [[0.9760, 0.9759, 0.9758,  ..., 0.9760, 0.9762, 0.9760],
         [0.0240, 0.0241, 0.0242,  ..., 0.0240, 0.0238, 0.0240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:20,669 [Process: 0] Synchronize training processes
2024-08-18 14:46:20,669 [Process: 0] Evaluating...
2024-08-18 14:46:20,671 [Process: 0] EPOCH 298:
2024-08-18 14:46:20,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:22,097 [Process: 0] Synchronize training processes
2024-08-18 14:46:22,097 [Process: 0] Evaluating...
2024-08-18 14:46:22,099 [Process: 0] EPOCH 299:
2024-08-18 14:46:22,101 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9797, 0.9797, 0.9797,  ..., 0.9797, 0.9798, 0.9798],
         [0.0203, 0.0203, 0.0203,  ..., 0.0203, 0.0202, 0.0202]],
        [[0.9794, 0.9797, 0.9792,  ..., 0.9799, 0.9794, 0.9793],
         [0.0206, 0.0203, 0.0208,  ..., 0.0201, 0.0206, 0.0207]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9760, 0.9760, 0.9762,  ..., 0.9762, 0.9761, 0.9761],
         [0.0240, 0.0240, 0.0238,  ..., 0.0238, 0.0239, 0.0239]],
        [[0.9759, 0.9761, 0.9761,  ..., 0.9761, 0.9760, 0.9760],
         [0.0241, 0.0239, 0.0239,  ..., 0.0239, 0.0240, 0.0240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:23,524 [Process: 0] Synchronize training processes
2024-08-18 14:46:23,524 [Process: 0] Evaluating...
2024-08-18 14:46:23,526 [Process: 0] EPOCH 300:
2024-08-18 14:46:23,528 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9798, 0.9797, 0.9797,  ..., 0.9797, 0.9797, 0.9795],
         [0.0202, 0.0203, 0.0203,  ..., 0.0203, 0.0203, 0.0205]],
        [[0.9794, 0.9794, 0.9801,  ..., 0.9799, 0.9793, 0.9792],
         [0.0206, 0.0206, 0.0199,  ..., 0.0201, 0.0207, 0.0208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9764, 0.9762, 0.9762,  ..., 0.9763, 0.9764, 0.9763],
         [0.0236, 0.0238, 0.0238,  ..., 0.0237, 0.0236, 0.0237]],
        [[0.9761, 0.9761, 0.9762,  ..., 0.9763, 0.9762, 0.9761],
         [0.0239, 0.0239, 0.0238,  ..., 0.0237, 0.0238, 0.0239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9798, 0.9797, 0.9797,  ..., 0.9798, 0.9802, 0.9796],
         [0.0202, 0.0203, 0.0203,  ..., 0.0202, 0.0198, 0.0204]],
        [[0.9798, 0.9799, 0.9798,  ..., 0.9800, 0.9790, 0.9794],
         [0.0202, 0.0201, 0.0202,  ..., 0.0200, 0.0210, 0.0206]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:24,952 [Process: 0] Synchronize training processes
2024-08-18 14:46:24,952 [Process: 0] Evaluating...
2024-08-18 14:46:24,954 [Process: 0] EPOCH 301:
2024-08-18 14:46:24,956 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:26,379 [Process: 0] Synchronize training processes
2024-08-18 14:46:26,379 [Process: 0] Evaluating...
2024-08-18 14:46:26,387 [Process: 0] EPOCH 302:
2024-08-18 14:46:26,389 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9765, 0.9763, 0.9764,  ..., 0.9763, 0.9764, 0.9765],
         [0.0235, 0.0237, 0.0236,  ..., 0.0237, 0.0236, 0.0235]],
        [[0.9762, 0.9764, 0.9763,  ..., 0.9764, 0.9764, 0.9763],
         [0.0238, 0.0236, 0.0237,  ..., 0.0236, 0.0236, 0.0237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9802, 0.9803, 0.9801,  ..., 0.9799, 0.9803, 0.9797],
         [0.0198, 0.0197, 0.0199,  ..., 0.0201, 0.0197, 0.0203]],
        [[0.9799, 0.9803, 0.9806,  ..., 0.9798, 0.9795, 0.9794],
         [0.0201, 0.0197, 0.0194,  ..., 0.0202, 0.0205, 0.0206]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9767, 0.9765, 0.9764,  ..., 0.9765, 0.9767, 0.9766],
         [0.0233, 0.0235, 0.0236,  ..., 0.0235, 0.0233, 0.0234]],
        [[0.9765, 0.9767, 0.9766,  ..., 0.9765, 0.9766, 0.9765],
         [0.0235, 0.0233, 0.0234,  ..., 0.0235, 0.0234, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:27,824 [Process: 0] Synchronize training processes
2024-08-18 14:46:27,824 [Process: 0] Evaluating...
2024-08-18 14:46:27,826 [Process: 0] EPOCH 303:
2024-08-18 14:46:27,828 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9801, 0.9800, 0.9801,  ..., 0.9798, 0.9803, 0.9799],
         [0.0199, 0.0200, 0.0199,  ..., 0.0202, 0.0197, 0.0201]],
        [[0.9803, 0.9802, 0.9797,  ..., 0.9804, 0.9797, 0.9795],
         [0.0197, 0.0198, 0.0203,  ..., 0.0196, 0.0203, 0.0205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9766, 0.9764, 0.9765,  ..., 0.9766, 0.9765, 0.9767],
         [0.0234, 0.0236, 0.0235,  ..., 0.0234, 0.0235, 0.0233]],
        [[0.9765, 0.9764, 0.9765,  ..., 0.9765, 0.9763, 0.9765],
         [0.0235, 0.0236, 0.0235,  ..., 0.0235, 0.0237, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9801, 0.9805, 0.9803,  ..., 0.9801, 0.9802, 0.9801],
         [0.0199, 0.0195, 0.0197,  ..., 0.0199, 0.0198, 0.0199]],
        [[0.9803, 0.9801, 0.9805,  ..., 0.9798, 0.9792, 0.9797],
         [0.0197, 0.0199, 0.0195,  ..., 0.0202, 0.0208, 0.0203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:29,276 [Process: 0] Synchronize training processes
2024-08-18 14:46:29,276 [Process: 0] Evaluating...
2024-08-18 14:46:29,278 [Process: 0] EPOCH 304:
2024-08-18 14:46:29,280 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9771, 0.9765, 0.9766,  ..., 0.9766, 0.9765, 0.9766],
         [0.0229, 0.0235, 0.0234,  ..., 0.0234, 0.0235, 0.0234]],
        [[0.9765, 0.9766, 0.9765,  ..., 0.9766, 0.9766, 0.9766],
         [0.0235, 0.0234, 0.0235,  ..., 0.0234, 0.0234, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9807, 0.9804, 0.9806,  ..., 0.9803, 0.9806, 0.9803],
         [0.0193, 0.0196, 0.0194,  ..., 0.0197, 0.0194, 0.0197]],
        [[0.9804, 0.9805, 0.9805,  ..., 0.9804, 0.9798, 0.9798],
         [0.0196, 0.0195, 0.0195,  ..., 0.0196, 0.0202, 0.0202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9768, 0.9766, 0.9766,  ..., 0.9766, 0.9766, 0.9767],
         [0.0232, 0.0234, 0.0234,  ..., 0.0234, 0.0234, 0.0233]],
        [[0.9765, 0.9766, 0.9767,  ..., 0.9766, 0.9766, 0.9766],
         [0.0235, 0.0234, 0.0233,  ..., 0.0234, 0.0234, 0.0234]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:30,702 [Process: 0] Synchronize training processes
2024-08-18 14:46:30,703 [Process: 0] Evaluating...
2024-08-18 14:46:30,705 [Process: 0] EPOCH 305:
2024-08-18 14:46:30,706 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:32,130 [Process: 0] Synchronize training processes
2024-08-18 14:46:32,130 [Process: 0] Evaluating...
2024-08-18 14:46:32,132 [Process: 0] EPOCH 306:
2024-08-18 14:46:32,134 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9804, 0.9805, 0.9805,  ..., 0.9804, 0.9807, 0.9805],
         [0.0196, 0.0195, 0.0195,  ..., 0.0196, 0.0193, 0.0195]],
        [[0.9808, 0.9804, 0.9805,  ..., 0.9804, 0.9803, 0.9802],
         [0.0192, 0.0196, 0.0195,  ..., 0.0196, 0.0197, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9769, 0.9768, 0.9767,  ..., 0.9767, 0.9766, 0.9767],
         [0.0231, 0.0232, 0.0233,  ..., 0.0233, 0.0234, 0.0233]],
        [[0.9766, 0.9767, 0.9767,  ..., 0.9767, 0.9768, 0.9767],
         [0.0234, 0.0233, 0.0233,  ..., 0.0233, 0.0232, 0.0233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:33,567 [Process: 0] Synchronize training processes
2024-08-18 14:46:33,567 [Process: 0] Evaluating...
2024-08-18 14:46:33,569 [Process: 0] EPOCH 307:
2024-08-18 14:46:33,570 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9807, 0.9807, 0.9805,  ..., 0.9805, 0.9807, 0.9805],
         [0.0193, 0.0193, 0.0195,  ..., 0.0195, 0.0193, 0.0195]],
        [[0.9808, 0.9808, 0.9803,  ..., 0.9802, 0.9802, 0.9803],
         [0.0192, 0.0192, 0.0197,  ..., 0.0198, 0.0198, 0.0197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9768, 0.9770, 0.9767,  ..., 0.9771, 0.9769, 0.9769],
         [0.0232, 0.0230, 0.0233,  ..., 0.0229, 0.0231, 0.0231]],
        [[0.9769, 0.9769, 0.9769,  ..., 0.9769, 0.9768, 0.9769],
         [0.0231, 0.0231, 0.0231,  ..., 0.0231, 0.0232, 0.0231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9806, 0.9806, 0.9806,  ..., 0.9808, 0.9806, 0.9808],
         [0.0194, 0.0194, 0.0194,  ..., 0.0192, 0.0194, 0.0193]],
        [[0.9805, 0.9810, 0.9807,  ..., 0.9804, 0.9803, 0.9801],
         [0.0195, 0.0190, 0.0193,  ..., 0.0196, 0.0197, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:34,994 [Process: 0] Synchronize training processes
2024-08-18 14:46:34,995 [Process: 0] Evaluating...
2024-08-18 14:46:34,996 [Process: 0] EPOCH 308:
2024-08-18 14:46:34,998 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:36,420 [Process: 0] Synchronize training processes
2024-08-18 14:46:36,420 [Process: 0] Evaluating...
2024-08-18 14:46:36,422 [Process: 0] EPOCH 309:
2024-08-18 14:46:36,424 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9771, 0.9770, 0.9770,  ..., 0.9769, 0.9774, 0.9773],
         [0.0229, 0.0230, 0.0230,  ..., 0.0231, 0.0226, 0.0227]],
        [[0.9769, 0.9769, 0.9770,  ..., 0.9769, 0.9770, 0.9769],
         [0.0231, 0.0231, 0.0230,  ..., 0.0231, 0.0230, 0.0231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9806, 0.9805, 0.9804,  ..., 0.9803, 0.9804, 0.9808],
         [0.0194, 0.0195, 0.0196,  ..., 0.0197, 0.0196, 0.0192]],
        [[0.9806, 0.9806, 0.9808,  ..., 0.9808, 0.9799, 0.9801],
         [0.0194, 0.0194, 0.0192,  ..., 0.0192, 0.0201, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9772, 0.9772, 0.9772,  ..., 0.9771, 0.9773, 0.9773],
         [0.0228, 0.0228, 0.0228,  ..., 0.0229, 0.0227, 0.0227]],
        [[0.9772, 0.9772, 0.9770,  ..., 0.9771, 0.9771, 0.9772],
         [0.0228, 0.0228, 0.0230,  ..., 0.0229, 0.0229, 0.0228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:37,846 [Process: 0] Synchronize training processes
2024-08-18 14:46:37,846 [Process: 0] Evaluating...
2024-08-18 14:46:37,848 [Process: 0] EPOCH 310:
2024-08-18 14:46:37,850 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9807, 0.9806, 0.9807,  ..., 0.9808, 0.9805, 0.9807],
         [0.0193, 0.0194, 0.0193,  ..., 0.0192, 0.0195, 0.0193]],
        [[0.9809, 0.9805, 0.9806,  ..., 0.9804, 0.9803, 0.9803],
         [0.0191, 0.0195, 0.0194,  ..., 0.0196, 0.0197, 0.0197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9775, 0.9773, 0.9773,  ..., 0.9772, 0.9775, 0.9773],
         [0.0225, 0.0227, 0.0227,  ..., 0.0228, 0.0225, 0.0227]],
        [[0.9774, 0.9772, 0.9772,  ..., 0.9773, 0.9772, 0.9772],
         [0.0226, 0.0228, 0.0228,  ..., 0.0227, 0.0228, 0.0228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9807, 0.9808, 0.9805,  ..., 0.9806, 0.9807, 0.9805],
         [0.0193, 0.0192, 0.0195,  ..., 0.0194, 0.0193, 0.0195]],
        [[0.9808, 0.9808, 0.9806,  ..., 0.9806, 0.9802, 0.9803],
         [0.0192, 0.0192, 0.0194,  ..., 0.0194, 0.0198, 0.0197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:39,292 [Process: 0] Synchronize training processes
2024-08-18 14:46:39,292 [Process: 0] Evaluating...
2024-08-18 14:46:39,294 [Process: 0] EPOCH 311:
2024-08-18 14:46:39,296 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9777, 0.9774, 0.9776,  ..., 0.9775, 0.9775, 0.9776],
         [0.0223, 0.0226, 0.0224,  ..., 0.0225, 0.0225, 0.0224]],
        [[0.9776, 0.9776, 0.9775,  ..., 0.9774, 0.9775, 0.9775],
         [0.0224, 0.0224, 0.0225,  ..., 0.0226, 0.0225, 0.0225]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9808, 0.9808, 0.9809,  ..., 0.9806, 0.9809, 0.9805],
         [0.0192, 0.0192, 0.0191,  ..., 0.0194, 0.0191, 0.0195]],
        [[0.9812, 0.9810, 0.9808,  ..., 0.9805, 0.9805, 0.9804],
         [0.0188, 0.0190, 0.0192,  ..., 0.0195, 0.0195, 0.0196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9776, 0.9775, 0.9775,  ..., 0.9777, 0.9775, 0.9776],
         [0.0224, 0.0225, 0.0225,  ..., 0.0223, 0.0225, 0.0224]],
        [[0.9777, 0.9776, 0.9777,  ..., 0.9776, 0.9776, 0.9776],
         [0.0223, 0.0224, 0.0223,  ..., 0.0224, 0.0224, 0.0224]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:40,719 [Process: 0] Synchronize training processes
2024-08-18 14:46:40,720 [Process: 0] Evaluating...
2024-08-18 14:46:40,727 [Process: 0] EPOCH 312:
2024-08-18 14:46:40,729 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:42,159 [Process: 0] Synchronize training processes
2024-08-18 14:46:42,159 [Process: 0] Evaluating...
2024-08-18 14:46:42,161 [Process: 0] EPOCH 313:
2024-08-18 14:46:42,163 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9811, 0.9807, 0.9807,  ..., 0.9804, 0.9806, 0.9802],
         [0.0189, 0.0193, 0.0193,  ..., 0.0196, 0.0194, 0.0198]],
        [[0.9810, 0.9805, 0.9811,  ..., 0.9808, 0.9805, 0.9804],
         [0.0190, 0.0195, 0.0189,  ..., 0.0192, 0.0195, 0.0196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9779, 0.9776, 0.9776,  ..., 0.9777, 0.9779, 0.9780],
         [0.0221, 0.0224, 0.0224,  ..., 0.0223, 0.0221, 0.0220]],
        [[0.9776, 0.9778, 0.9779,  ..., 0.9777, 0.9778, 0.9777],
         [0.0224, 0.0222, 0.0221,  ..., 0.0223, 0.0222, 0.0223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-18 14:46:43,586 [Process: 0] Synchronize training processes
2024-08-18 14:46:43,586 [Process: 0] Evaluating...
2024-08-18 14:46:43,588 [Process: 0] EPOCH 314:
2024-08-18 14:46:43,590 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9809, 0.9810, 0.9808,  ..., 0.9802, 0.9809, 0.9807],
         [0.0191, 0.0190, 0.0192,  ..., 0.0198, 0.0191, 0.0193]],
        [[0.9813, 0.9813, 0.9813,  ..., 0.9808, 0.9809, 0.9805],
         [0.0187, 0.0187, 0.0187,  ..., 0.0192, 0.0191, 0.0195]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9781, 0.9778, 0.9780,  ..., 0.9781, 0.9779, 0.9780],
         [0.0219, 0.0222, 0.0220,  ..., 0.0219, 0.0221, 0.0220]],
        [[0.9777, 0.9779, 0.9778,  ..., 0.9779, 0.9779, 0.9780],
         [0.0223, 0.0221, 0.0222,  ..., 0.0221, 0.0221, 0.0220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9808, 0.9809, 0.9810,  ..., 0.9810, 0.9811, 0.9812],
         [0.0192, 0.0191, 0.0190,  ..., 0.0190, 0.0189, 0.0188]],
        [[0.9810, 0.9811, 0.9806,  ..., 0.9810, 0.9800, 0.9807],
         [0.0190, 0.0189, 0.0194,  ..., 0.0190, 0.0200, 0.0193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:45,015 [Process: 0] Synchronize training processes
2024-08-18 14:46:45,015 [Process: 0] Evaluating...
2024-08-18 14:46:45,017 [Process: 0] EPOCH 315:
2024-08-18 14:46:45,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:46,456 [Process: 0] Synchronize training processes
2024-08-18 14:46:46,456 [Process: 0] Evaluating...
2024-08-18 14:46:46,458 [Process: 0] EPOCH 316:
2024-08-18 14:46:46,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9783, 0.9781, 0.9782,  ..., 0.9783, 0.9783, 0.9781],
         [0.0217, 0.0219, 0.0218,  ..., 0.0217, 0.0217, 0.0219]],
        [[0.9782, 0.9781, 0.9781,  ..., 0.9781, 0.9780, 0.9780],
         [0.0218, 0.0219, 0.0219,  ..., 0.0219, 0.0220, 0.0220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9814, 0.9812, 0.9813,  ..., 0.9813, 0.9811, 0.9813],
         [0.0186, 0.0188, 0.0187,  ..., 0.0187, 0.0189, 0.0187]],
        [[0.9811, 0.9808, 0.9814,  ..., 0.9812, 0.9806, 0.9808],
         [0.0189, 0.0192, 0.0186,  ..., 0.0188, 0.0194, 0.0192]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9785, 0.9784, 0.9784,  ..., 0.9786, 0.9787, 0.9786],
         [0.0215, 0.0216, 0.0216,  ..., 0.0214, 0.0213, 0.0214]],
        [[0.9783, 0.9784, 0.9784,  ..., 0.9784, 0.9784, 0.9784],
         [0.0217, 0.0216, 0.0216,  ..., 0.0216, 0.0216, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:47,887 [Process: 0] Synchronize training processes
2024-08-18 14:46:47,887 [Process: 0] Evaluating...
2024-08-18 14:46:47,889 [Process: 0] EPOCH 317:
2024-08-18 14:46:47,891 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9816, 0.9812, 0.9812,  ..., 0.9813, 0.9813, 0.9814],
         [0.0184, 0.0188, 0.0188,  ..., 0.0187, 0.0187, 0.0186]],
        [[0.9812, 0.9813, 0.9814,  ..., 0.9812, 0.9805, 0.9809],
         [0.0188, 0.0187, 0.0186,  ..., 0.0188, 0.0195, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9785, 0.9786, 0.9786,  ..., 0.9785, 0.9789, 0.9786],
         [0.0215, 0.0214, 0.0214,  ..., 0.0215, 0.0211, 0.0214]],
        [[0.9785, 0.9786, 0.9786,  ..., 0.9786, 0.9786, 0.9786],
         [0.0215, 0.0214, 0.0214,  ..., 0.0214, 0.0214, 0.0214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9816, 0.9813, 0.9818,  ..., 0.9815, 0.9813, 0.9811],
         [0.0184, 0.0187, 0.0182,  ..., 0.0185, 0.0187, 0.0189]],
        [[0.9817, 0.9814, 0.9814,  ..., 0.9814, 0.9815, 0.9811],
         [0.0183, 0.0186, 0.0186,  ..., 0.0186, 0.0185, 0.0189]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:49,314 [Process: 0] Synchronize training processes
2024-08-18 14:46:49,314 [Process: 0] Evaluating...
2024-08-18 14:46:49,316 [Process: 0] EPOCH 318:
2024-08-18 14:46:49,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9787, 0.9789,  ..., 0.9789, 0.9791, 0.9788],
         [0.0210, 0.0213, 0.0211,  ..., 0.0211, 0.0209, 0.0212]],
        [[0.9787, 0.9788, 0.9787,  ..., 0.9788, 0.9788, 0.9786],
         [0.0213, 0.0212, 0.0213,  ..., 0.0212, 0.0212, 0.0214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9816, 0.9817, 0.9819,  ..., 0.9818, 0.9817, 0.9815],
         [0.0184, 0.0183, 0.0181,  ..., 0.0182, 0.0183, 0.0185]],
        [[0.9817, 0.9815, 0.9814,  ..., 0.9814, 0.9813, 0.9811],
         [0.0183, 0.0185, 0.0186,  ..., 0.0186, 0.0187, 0.0189]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9789, 0.9787, 0.9789,  ..., 0.9788, 0.9789, 0.9790],
         [0.0211, 0.0213, 0.0211,  ..., 0.0212, 0.0211, 0.0210]],
        [[0.9790, 0.9789, 0.9789,  ..., 0.9788, 0.9787, 0.9788],
         [0.0210, 0.0211, 0.0211,  ..., 0.0212, 0.0213, 0.0212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:50,742 [Process: 0] Synchronize training processes
2024-08-18 14:46:50,742 [Process: 0] Evaluating...
2024-08-18 14:46:50,744 [Process: 0] EPOCH 319:
2024-08-18 14:46:50,746 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:52,173 [Process: 0] Synchronize training processes
2024-08-18 14:46:52,173 [Process: 0] Evaluating...
2024-08-18 14:46:52,175 [Process: 0] EPOCH 320:
2024-08-18 14:46:52,176 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9815, 0.9816, 0.9817,  ..., 0.9816, 0.9817, 0.9818],
         [0.0185, 0.0184, 0.0183,  ..., 0.0184, 0.0183, 0.0182]],
        [[0.9814, 0.9816, 0.9818,  ..., 0.9817, 0.9815, 0.9813],
         [0.0186, 0.0184, 0.0182,  ..., 0.0183, 0.0185, 0.0187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9789, 0.9788, 0.9787,  ..., 0.9789, 0.9789, 0.9787],
         [0.0211, 0.0212, 0.0213,  ..., 0.0211, 0.0211, 0.0213]],
        [[0.9788, 0.9788, 0.9788,  ..., 0.9787, 0.9789, 0.9789],
         [0.0212, 0.0212, 0.0212,  ..., 0.0213, 0.0211, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:46:53,599 [Process: 0] Synchronize training processes
2024-08-18 14:46:53,599 [Process: 0] Evaluating...
2024-08-18 14:46:53,601 [Process: 0] EPOCH 321:
2024-08-18 14:46:53,603 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9818, 0.9819, 0.9817,  ..., 0.9820, 0.9816, 0.9818],
         [0.0182, 0.0181, 0.0183,  ..., 0.0180, 0.0184, 0.0182]],
        [[0.9818, 0.9817, 0.9820,  ..., 0.9819, 0.9812, 0.9814],
         [0.0182, 0.0183, 0.0180,  ..., 0.0181, 0.0188, 0.0186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9788, 0.9786,  ..., 0.9789, 0.9788, 0.9789],
         [0.0210, 0.0212, 0.0214,  ..., 0.0211, 0.0212, 0.0211]],
        [[0.9788, 0.9789, 0.9788,  ..., 0.9789, 0.9788, 0.9787],
         [0.0212, 0.0211, 0.0212,  ..., 0.0211, 0.0212, 0.0213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9819, 0.9818, 0.9821,  ..., 0.9819, 0.9818, 0.9817],
         [0.0181, 0.0182, 0.0179,  ..., 0.0181, 0.0182, 0.0183]],
        [[0.9818, 0.9816, 0.9821,  ..., 0.9818, 0.9816, 0.9814],
         [0.0182, 0.0184, 0.0179,  ..., 0.0182, 0.0184, 0.0186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:55,029 [Process: 0] Synchronize training processes
2024-08-18 14:46:55,029 [Process: 0] Evaluating...
2024-08-18 14:46:55,037 [Process: 0] EPOCH 322:
2024-08-18 14:46:55,039 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:56,460 [Process: 0] Synchronize training processes
2024-08-18 14:46:56,461 [Process: 0] Evaluating...
2024-08-18 14:46:56,462 [Process: 0] EPOCH 323:
2024-08-18 14:46:56,464 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9787, 0.9787,  ..., 0.9789, 0.9791, 0.9789],
         [0.0210, 0.0213, 0.0213,  ..., 0.0211, 0.0209, 0.0211]],
        [[0.9790, 0.9789, 0.9788,  ..., 0.9788, 0.9788, 0.9789],
         [0.0210, 0.0211, 0.0212,  ..., 0.0212, 0.0212, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9822, 0.9819, 0.9820,  ..., 0.9820, 0.9820, 0.9822],
         [0.0178, 0.0181, 0.0180,  ..., 0.0180, 0.0180, 0.0178]],
        [[0.9817, 0.9822, 0.9821,  ..., 0.9818, 0.9810, 0.9815],
         [0.0183, 0.0178, 0.0179,  ..., 0.0182, 0.0190, 0.0185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9788, 0.9788,  ..., 0.9788, 0.9792, 0.9789],
         [0.0210, 0.0212, 0.0212,  ..., 0.0212, 0.0208, 0.0211]],
        [[0.9790, 0.9790, 0.9788,  ..., 0.9788, 0.9789, 0.9788],
         [0.0210, 0.0210, 0.0212,  ..., 0.0212, 0.0211, 0.0212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:46:57,884 [Process: 0] Synchronize training processes
2024-08-18 14:46:57,884 [Process: 0] Evaluating...
2024-08-18 14:46:57,886 [Process: 0] EPOCH 324:
2024-08-18 14:46:57,888 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9816, 0.9819, 0.9822,  ..., 0.9820, 0.9822, 0.9820],
         [0.0184, 0.0181, 0.0178,  ..., 0.0180, 0.0178, 0.0180]],
        [[0.9818, 0.9823, 0.9821,  ..., 0.9817, 0.9811, 0.9816],
         [0.0182, 0.0177, 0.0179,  ..., 0.0183, 0.0189, 0.0184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9793, 0.9789, 0.9789,  ..., 0.9790, 0.9792, 0.9791],
         [0.0207, 0.0211, 0.0211,  ..., 0.0210, 0.0208, 0.0209]],
        [[0.9790, 0.9790, 0.9790,  ..., 0.9791, 0.9788, 0.9789],
         [0.0210, 0.0210, 0.0210,  ..., 0.0209, 0.0212, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9819, 0.9821, 0.9817,  ..., 0.9824, 0.9823, 0.9822],
         [0.0181, 0.0179, 0.0183,  ..., 0.0176, 0.0177, 0.0178]],
        [[0.9821, 0.9823, 0.9823,  ..., 0.9822, 0.9817, 0.9816],
         [0.0179, 0.0177, 0.0177,  ..., 0.0178, 0.0183, 0.0184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:46:59,309 [Process: 0] Synchronize training processes
2024-08-18 14:46:59,309 [Process: 0] Evaluating...
2024-08-18 14:46:59,311 [Process: 0] EPOCH 325:
2024-08-18 14:46:59,313 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9790, 0.9791, 0.9790,  ..., 0.9791, 0.9791, 0.9791],
         [0.0210, 0.0209, 0.0210,  ..., 0.0209, 0.0209, 0.0209]],
        [[0.9794, 0.9792, 0.9791,  ..., 0.9793, 0.9791, 0.9792],
         [0.0206, 0.0208, 0.0209,  ..., 0.0207, 0.0209, 0.0208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9822, 0.9820, 0.9819,  ..., 0.9825, 0.9822, 0.9822],
         [0.0178, 0.0180, 0.0181,  ..., 0.0175, 0.0178, 0.0178]],
        [[0.9822, 0.9821, 0.9820,  ..., 0.9821, 0.9818, 0.9819],
         [0.0178, 0.0179, 0.0180,  ..., 0.0179, 0.0182, 0.0181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9795, 0.9792, 0.9791,  ..., 0.9792, 0.9793, 0.9793],
         [0.0205, 0.0208, 0.0209,  ..., 0.0208, 0.0207, 0.0207]],
        [[0.9793, 0.9792, 0.9790,  ..., 0.9792, 0.9792, 0.9791],
         [0.0207, 0.0208, 0.0210,  ..., 0.0208, 0.0208, 0.0209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:00,734 [Process: 0] Synchronize training processes
2024-08-18 14:47:00,734 [Process: 0] Evaluating...
2024-08-18 14:47:00,736 [Process: 0] EPOCH 326:
2024-08-18 14:47:00,738 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:02,160 [Process: 0] Synchronize training processes
2024-08-18 14:47:02,160 [Process: 0] Evaluating...
2024-08-18 14:47:02,162 [Process: 0] EPOCH 327:
2024-08-18 14:47:02,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9822, 0.9823, 0.9821,  ..., 0.9824, 0.9821, 0.9823],
         [0.0178, 0.0177, 0.0179,  ..., 0.0176, 0.0179, 0.0177]],
        [[0.9823, 0.9826, 0.9824,  ..., 0.9820, 0.9814, 0.9817],
         [0.0177, 0.0174, 0.0176,  ..., 0.0180, 0.0186, 0.0183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9795, 0.9793, 0.9792,  ..., 0.9794, 0.9794, 0.9794],
         [0.0205, 0.0207, 0.0208,  ..., 0.0206, 0.0206, 0.0206]],
        [[0.9794, 0.9792, 0.9793,  ..., 0.9793, 0.9793, 0.9793],
         [0.0206, 0.0208, 0.0207,  ..., 0.0207, 0.0207, 0.0207]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9823, 0.9822, 0.9824,  ..., 0.9824, 0.9822, 0.9823],
         [0.0177, 0.0178, 0.0176,  ..., 0.0176, 0.0178, 0.0177]],
        [[0.9825, 0.9824, 0.9823,  ..., 0.9821, 0.9822, 0.9820],
         [0.0175, 0.0176, 0.0177,  ..., 0.0179, 0.0178, 0.0180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:03,584 [Process: 0] Synchronize training processes
2024-08-18 14:47:03,584 [Process: 0] Evaluating...
2024-08-18 14:47:03,586 [Process: 0] EPOCH 328:
2024-08-18 14:47:03,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9796, 0.9793, 0.9794,  ..., 0.9795, 0.9794, 0.9794],
         [0.0204, 0.0207, 0.0206,  ..., 0.0205, 0.0206, 0.0206]],
        [[0.9795, 0.9794, 0.9794,  ..., 0.9793, 0.9793, 0.9796],
         [0.0205, 0.0206, 0.0206,  ..., 0.0207, 0.0207, 0.0204]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9826, 0.9823, 0.9823,  ..., 0.9825, 0.9827, 0.9824],
         [0.0174, 0.0177, 0.0177,  ..., 0.0175, 0.0173, 0.0176]],
        [[0.9822, 0.9826, 0.9825,  ..., 0.9824, 0.9825, 0.9821],
         [0.0178, 0.0174, 0.0175,  ..., 0.0176, 0.0175, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:05,010 [Process: 0] Synchronize training processes
2024-08-18 14:47:05,010 [Process: 0] Evaluating...
2024-08-18 14:47:05,012 [Process: 0] EPOCH 329:
2024-08-18 14:47:05,014 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:06,447 [Process: 0] Synchronize training processes
2024-08-18 14:47:06,447 [Process: 0] Evaluating...
2024-08-18 14:47:06,449 [Process: 0] EPOCH 330:
2024-08-18 14:47:06,451 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9796, 0.9794, 0.9793,  ..., 0.9795, 0.9796, 0.9796],
         [0.0204, 0.0206, 0.0207,  ..., 0.0205, 0.0204, 0.0204]],
        [[0.9793, 0.9794, 0.9796,  ..., 0.9793, 0.9795, 0.9794],
         [0.0207, 0.0206, 0.0204,  ..., 0.0207, 0.0205, 0.0206]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9826, 0.9826, 0.9825,  ..., 0.9827, 0.9824, 0.9825],
         [0.0174, 0.0174, 0.0175,  ..., 0.0173, 0.0176, 0.0175]],
        [[0.9824, 0.9826, 0.9826,  ..., 0.9827, 0.9825, 0.9821],
         [0.0176, 0.0174, 0.0174,  ..., 0.0173, 0.0175, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9798, 0.9794, 0.9795,  ..., 0.9796, 0.9797, 0.9797],
         [0.0202, 0.0206, 0.0205,  ..., 0.0204, 0.0203, 0.0203]],
        [[0.9796, 0.9795, 0.9796,  ..., 0.9795, 0.9796, 0.9797],
         [0.0204, 0.0205, 0.0204,  ..., 0.0205, 0.0204, 0.0203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:07,874 [Process: 0] Synchronize training processes
2024-08-18 14:47:07,874 [Process: 0] Evaluating...
2024-08-18 14:47:07,876 [Process: 0] EPOCH 331:
2024-08-18 14:47:07,878 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9824, 0.9823, 0.9827,  ..., 0.9825, 0.9824, 0.9827],
         [0.0176, 0.0177, 0.0173,  ..., 0.0175, 0.0176, 0.0173]],
        [[0.9826, 0.9827, 0.9826,  ..., 0.9827, 0.9819, 0.9822],
         [0.0174, 0.0173, 0.0174,  ..., 0.0173, 0.0181, 0.0178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9796, 0.9796, 0.9796,  ..., 0.9798, 0.9798, 0.9796],
         [0.0204, 0.0204, 0.0204,  ..., 0.0202, 0.0202, 0.0204]],
        [[0.9798, 0.9797, 0.9797,  ..., 0.9797, 0.9797, 0.9796],
         [0.0202, 0.0203, 0.0203,  ..., 0.0203, 0.0203, 0.0204]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9827, 0.9827, 0.9824,  ..., 0.9826, 0.9825, 0.9828],
         [0.0173, 0.0173, 0.0176,  ..., 0.0174, 0.0175, 0.0172]],
        [[0.9828, 0.9828, 0.9830,  ..., 0.9826, 0.9818, 0.9823],
         [0.0172, 0.0172, 0.0170,  ..., 0.0174, 0.0182, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:09,299 [Process: 0] Synchronize training processes
2024-08-18 14:47:09,299 [Process: 0] Evaluating...
2024-08-18 14:47:09,307 [Process: 0] EPOCH 332:
2024-08-18 14:47:09,309 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9800, 0.9797, 0.9795,  ..., 0.9798, 0.9798, 0.9799],
         [0.0200, 0.0203, 0.0205,  ..., 0.0202, 0.0202, 0.0201]],
        [[0.9799, 0.9798, 0.9798,  ..., 0.9797, 0.9797, 0.9798],
         [0.0201, 0.0202, 0.0202,  ..., 0.0203, 0.0203, 0.0202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9827, 0.9828, 0.9828,  ..., 0.9827, 0.9828, 0.9829],
         [0.0173, 0.0172, 0.0172,  ..., 0.0173, 0.0172, 0.0171]],
        [[0.9827, 0.9826, 0.9829,  ..., 0.9828, 0.9823, 0.9823],
         [0.0173, 0.0174, 0.0171,  ..., 0.0172, 0.0177, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9799, 0.9798, 0.9798,  ..., 0.9799, 0.9798, 0.9797],
         [0.0201, 0.0202, 0.0202,  ..., 0.0201, 0.0202, 0.0203]],
        [[0.9800, 0.9799, 0.9799,  ..., 0.9797, 0.9797, 0.9798],
         [0.0200, 0.0201, 0.0201,  ..., 0.0203, 0.0203, 0.0202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:10,730 [Process: 0] Synchronize training processes
2024-08-18 14:47:10,730 [Process: 0] Evaluating...
2024-08-18 14:47:10,732 [Process: 0] EPOCH 333:
2024-08-18 14:47:10,734 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:12,157 [Process: 0] Synchronize training processes
2024-08-18 14:47:12,157 [Process: 0] Evaluating...
2024-08-18 14:47:12,159 [Process: 0] EPOCH 334:
2024-08-18 14:47:12,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9828, 0.9829, 0.9827,  ..., 0.9829, 0.9828, 0.9825],
         [0.0172, 0.0171, 0.0173,  ..., 0.0171, 0.0172, 0.0175]],
        [[0.9828, 0.9832, 0.9832,  ..., 0.9827, 0.9826, 0.9824],
         [0.0172, 0.0168, 0.0168,  ..., 0.0173, 0.0174, 0.0176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9797, 0.9799, 0.9799,  ..., 0.9800, 0.9799, 0.9800],
         [0.0203, 0.0201, 0.0201,  ..., 0.0200, 0.0201, 0.0200]],
        [[0.9799, 0.9800, 0.9801,  ..., 0.9800, 0.9798, 0.9799],
         [0.0201, 0.0200, 0.0199,  ..., 0.0200, 0.0202, 0.0201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9827, 0.9830, 0.9827,  ..., 0.9832, 0.9830, 0.9830],
         [0.0173, 0.0170, 0.0173,  ..., 0.0168, 0.0170, 0.0170]],
        [[0.9828, 0.9831, 0.9827,  ..., 0.9831, 0.9827, 0.9826],
         [0.0172, 0.0169, 0.0173,  ..., 0.0169, 0.0173, 0.0174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:13,586 [Process: 0] Synchronize training processes
2024-08-18 14:47:13,586 [Process: 0] Evaluating...
2024-08-18 14:47:13,588 [Process: 0] EPOCH 335:
2024-08-18 14:47:13,590 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9801, 0.9799, 0.9799,  ..., 0.9800, 0.9799, 0.9801],
         [0.0199, 0.0201, 0.0201,  ..., 0.0200, 0.0201, 0.0199]],
        [[0.9801, 0.9801, 0.9799,  ..., 0.9801, 0.9800, 0.9799],
         [0.0199, 0.0199, 0.0201,  ..., 0.0199, 0.0200, 0.0201]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9830, 0.9829, 0.9832,  ..., 0.9830, 0.9829, 0.9830],
         [0.0170, 0.0171, 0.0168,  ..., 0.0170, 0.0171, 0.0170]],
        [[0.9829, 0.9832, 0.9829,  ..., 0.9831, 0.9830, 0.9826],
         [0.0171, 0.0168, 0.0171,  ..., 0.0169, 0.0170, 0.0174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-18 14:47:15,015 [Process: 0] Synchronize training processes
2024-08-18 14:47:15,015 [Process: 0] Evaluating...
2024-08-18 14:47:15,017 [Process: 0] EPOCH 336:
2024-08-18 14:47:15,019 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:16,442 [Process: 0] Synchronize training processes
2024-08-18 14:47:16,442 [Process: 0] Evaluating...
2024-08-18 14:47:16,444 [Process: 0] EPOCH 337:
2024-08-18 14:47:16,445 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9802, 0.9800, 0.9800,  ..., 0.9802, 0.9804, 0.9804],
         [0.0198, 0.0200, 0.0200,  ..., 0.0198, 0.0196, 0.0196]],
        [[0.9801, 0.9801, 0.9801,  ..., 0.9802, 0.9802, 0.9802],
         [0.0199, 0.0199, 0.0199,  ..., 0.0198, 0.0198, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9832, 0.9830, 0.9832,  ..., 0.9832, 0.9831, 0.9832],
         [0.0168, 0.0170, 0.0168,  ..., 0.0168, 0.0169, 0.0168]],
        [[0.9832, 0.9834, 0.9831,  ..., 0.9832, 0.9826, 0.9828],
         [0.0168, 0.0166, 0.0169,  ..., 0.0168, 0.0174, 0.0172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9802, 0.9802, 0.9799,  ..., 0.9802, 0.9804, 0.9803],
         [0.0198, 0.0198, 0.0201,  ..., 0.0198, 0.0196, 0.0197]],
        [[0.9803, 0.9803, 0.9802,  ..., 0.9802, 0.9801, 0.9801],
         [0.0197, 0.0197, 0.0198,  ..., 0.0198, 0.0199, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:17,865 [Process: 0] Synchronize training processes
2024-08-18 14:47:17,866 [Process: 0] Evaluating...
2024-08-18 14:47:17,867 [Process: 0] EPOCH 338:
2024-08-18 14:47:17,869 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9833, 0.9830, 0.9834,  ..., 0.9831, 0.9832, 0.9832],
         [0.0167, 0.0170, 0.0166,  ..., 0.0169, 0.0168, 0.0168]],
        [[0.9834, 0.9833, 0.9827,  ..., 0.9832, 0.9828, 0.9827],
         [0.0166, 0.0167, 0.0173,  ..., 0.0168, 0.0172, 0.0173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9806, 0.9802, 0.9803,  ..., 0.9803, 0.9802, 0.9800],
         [0.0194, 0.0198, 0.0197,  ..., 0.0197, 0.0198, 0.0200]],
        [[0.9801, 0.9804, 0.9803,  ..., 0.9803, 0.9802, 0.9802],
         [0.0199, 0.0196, 0.0197,  ..., 0.0197, 0.0198, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9833, 0.9831, 0.9833,  ..., 0.9833, 0.9833, 0.9831],
         [0.0167, 0.0169, 0.0167,  ..., 0.0167, 0.0167, 0.0169]],
        [[0.9831, 0.9833, 0.9833,  ..., 0.9836, 0.9829, 0.9829],
         [0.0169, 0.0167, 0.0167,  ..., 0.0164, 0.0171, 0.0171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:19,293 [Process: 0] Synchronize training processes
2024-08-18 14:47:19,293 [Process: 0] Evaluating...
2024-08-18 14:47:19,295 [Process: 0] EPOCH 339:
2024-08-18 14:47:19,297 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9805, 0.9804, 0.9802,  ..., 0.9803, 0.9804, 0.9803],
         [0.0195, 0.0196, 0.0198,  ..., 0.0197, 0.0196, 0.0197]],
        [[0.9805, 0.9805, 0.9804,  ..., 0.9803, 0.9803, 0.9803],
         [0.0195, 0.0195, 0.0196,  ..., 0.0197, 0.0197, 0.0197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9832, 0.9834, 0.9834,  ..., 0.9836, 0.9836, 0.9833],
         [0.0168, 0.0166, 0.0166,  ..., 0.0164, 0.0164, 0.0167]],
        [[0.9835, 0.9833, 0.9831,  ..., 0.9836, 0.9832, 0.9829],
         [0.0165, 0.0167, 0.0169,  ..., 0.0164, 0.0168, 0.0171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9807, 0.9804, 0.9806,  ..., 0.9805, 0.9805, 0.9806],
         [0.0193, 0.0196, 0.0194,  ..., 0.0195, 0.0195, 0.0194]],
        [[0.9805, 0.9805, 0.9805,  ..., 0.9804, 0.9806, 0.9804],
         [0.0195, 0.0195, 0.0195,  ..., 0.0196, 0.0194, 0.0196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:20,721 [Process: 0] Synchronize training processes
2024-08-18 14:47:20,722 [Process: 0] Evaluating...
2024-08-18 14:47:20,724 [Process: 0] EPOCH 340:
2024-08-18 14:47:20,725 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:22,149 [Process: 0] Synchronize training processes
2024-08-18 14:47:22,150 [Process: 0] Evaluating...
2024-08-18 14:47:22,151 [Process: 0] EPOCH 341:
2024-08-18 14:47:22,153 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9835, 0.9833, 0.9834,  ..., 0.9835, 0.9837, 0.9835],
         [0.0165, 0.0167, 0.0166,  ..., 0.0165, 0.0163, 0.0165]],
        [[0.9832, 0.9834, 0.9839,  ..., 0.9836, 0.9829, 0.9830],
         [0.0168, 0.0166, 0.0161,  ..., 0.0164, 0.0171, 0.0170]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9808, 0.9806, 0.9806,  ..., 0.9807, 0.9807, 0.9809],
         [0.0192, 0.0194, 0.0194,  ..., 0.0193, 0.0193, 0.0191]],
        [[0.9805, 0.9806, 0.9806,  ..., 0.9806, 0.9806, 0.9806],
         [0.0195, 0.0194, 0.0194,  ..., 0.0194, 0.0194, 0.0194]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9837, 0.9836, 0.9834,  ..., 0.9837, 0.9833, 0.9834],
         [0.0163, 0.0164, 0.0166,  ..., 0.0163, 0.0167, 0.0166]],
        [[0.9835, 0.9835, 0.9836,  ..., 0.9833, 0.9831, 0.9832],
         [0.0165, 0.0165, 0.0164,  ..., 0.0167, 0.0169, 0.0168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-18 14:47:23,587 [Process: 0] Synchronize training processes
2024-08-18 14:47:23,588 [Process: 0] Evaluating...
2024-08-18 14:47:23,595 [Process: 0] EPOCH 342:
2024-08-18 14:47:23,597 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9809, 0.9807, 0.9806,  ..., 0.9807, 0.9807, 0.9808],
         [0.0191, 0.0193, 0.0194,  ..., 0.0193, 0.0193, 0.0192]],
        [[0.9807, 0.9808, 0.9808,  ..., 0.9807, 0.9806, 0.9807],
         [0.0193, 0.0192, 0.0192,  ..., 0.0193, 0.0194, 0.0193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9835, 0.9837, 0.9834,  ..., 0.9836, 0.9833, 0.9837],
         [0.0165, 0.0163, 0.0166,  ..., 0.0164, 0.0167, 0.0163]],
        [[0.9837, 0.9836, 0.9839,  ..., 0.9837, 0.9832, 0.9832],
         [0.0163, 0.0164, 0.0161,  ..., 0.0163, 0.0168, 0.0168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-18 14:47:25,019 [Process: 0] Synchronize training processes
2024-08-18 14:47:25,019 [Process: 0] Evaluating...
2024-08-18 14:47:25,021 [Process: 0] EPOCH 343:
2024-08-18 14:47:25,023 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-18 14:47:26,447 [Process: 0] Synchronize training processes
2024-08-18 14:47:26,448 [Process: 0] Evaluating...
2024-08-18 14:47:26,449 [Process: 0] EPOCH 344:
2024-08-18 14:47:26,451 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9809, 0.9808, 0.9809,  ..., 0.9808, 0.9809, 0.9810],
         [0.0191, 0.0192, 0.0191,  ..., 0.0192, 0.0191, 0.0190]],
        [[0.9810, 0.9807, 0.9809,  ..., 0.9808, 0.9809, 0.9808],
         [0.0190, 0.0193, 0.0191,  ..., 0.0192, 0.0191, 0.0192]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9835, 0.9837, 0.9838,  ..., 0.9835, 0.9835, 0.9840],
         [0.0165, 0.0163, 0.0162,  ..., 0.0165, 0.0165, 0.0160]],
        [[0.9840, 0.9837, 0.9837,  ..., 0.9840, 0.9835, 0.9833],
         [0.0160, 0.0163, 0.0163,  ..., 0.0160, 0.0165, 0.0167]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 198, in train_one_epoch
    outputs = self.model(batch=batch)["affordance"].squeeze(1)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 67, in forward
    x_align = self.concate(x_rgb["affordance"], scene_pcs, self.instrics).permute(0,2,1) # [B, Num_pts, C_rgbfeat]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/modules.py", line 133, in forward
    feat_2d = self.interpolate_image_grid_features(
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/modules.py", line 76, in interpolate_image_grid_features
    query_grids = self.project_3d(query_points, intrinsics)  # [B, 2, N]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/modules.py", line 35, in forward
    K = torch.from_numpy(K).float().to(points.device)
KeyboardInterrupt