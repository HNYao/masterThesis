2024-08-19 13:03:46,416 [Worker 0] Is distributed: False
2024-08-19 13:03:46,417 [Process: 0] Starting training
2024-08-19 13:03:46,417 [Process: 0] EPOCH 1:
2024-08-19 13:03:46,420 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:48,063 [Process: 0] Synchronize training processes
2024-08-19 13:03:48,063 [Process: 0] Evaluating...
2024-08-19 13:03:48,339 [Process: 0] EPOCH 2:
2024-08-19 13:03:48,342 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2555, 0.2396, 0.2349,  ..., 0.3120, 0.2102, 0.1922],
         [0.3122, 0.2643, 0.3169,  ..., 0.2783, 0.2484, 0.2657],
         [0.1811, 0.1565, 0.2022,  ..., 0.1632, 0.1238, 0.2132],
         [0.2511, 0.3396, 0.2459,  ..., 0.2464, 0.4176, 0.3289]],
        [[0.2250, 0.2676, 0.2350,  ..., 0.2840, 0.2650, 0.1663],
         [0.2250, 0.2264, 0.2060,  ..., 0.2387, 0.2787, 0.2219],
         [0.3251, 0.2264, 0.2193,  ..., 0.2387, 0.2154, 0.4456],
         [0.2250, 0.2795, 0.3398,  ..., 0.2387, 0.2408, 0.1663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:03:49,315 [Process: 0] Synchronize training processes
2024-08-19 13:03:49,315 [Process: 0] Evaluating...
2024-08-19 13:03:49,317 [Process: 0] EPOCH 3:
2024-08-19 13:03:49,319 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:50,291 [Process: 0] Synchronize training processes
2024-08-19 13:03:50,291 [Process: 0] Evaluating...
2024-08-19 13:03:50,293 [Process: 0] EPOCH 4:
2024-08-19 13:03:50,295 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2720, 0.2041, 0.2634,  ..., 0.1894, 0.2762, 0.2638],
         [0.2514, 0.2041, 0.2558,  ..., 0.1894, 0.2538, 0.2537],
         [0.2045, 0.3876, 0.2215,  ..., 0.4318, 0.1945, 0.2093],
         [0.2722, 0.2041, 0.2593,  ..., 0.1894, 0.2755, 0.2732]],
        [[0.1478, 0.2914, 0.2785,  ..., 0.2637, 0.2718, 0.2056],
         [0.1478, 0.2608, 0.2634,  ..., 0.2552, 0.2607, 0.2058],
         [0.5565, 0.2033, 0.2005,  ..., 0.2176, 0.2101, 0.3830],
         [0.1478, 0.2445, 0.2575,  ..., 0.2634, 0.2574, 0.2056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2729, 0.2697, 0.2672,  ..., 0.2654, 0.2673, 0.2667],
         [0.2514, 0.2549, 0.2570,  ..., 0.2605, 0.2524, 0.2602],
         [0.2189, 0.2061, 0.2054,  ..., 0.2076, 0.2151, 0.1981],
         [0.2568, 0.2693, 0.2704,  ..., 0.2665, 0.2652, 0.2751]],
        [[0.2688, 0.2577, 0.2302,  ..., 0.2703, 0.2421, 0.2387],
         [0.2512, 0.2479, 0.2619,  ..., 0.2511, 0.2621, 0.2647],
         [0.2193, 0.2132, 0.2451,  ..., 0.2131, 0.2383, 0.2238],
         [0.2606, 0.2811, 0.2628,  ..., 0.2655, 0.2575, 0.2727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.6629e-01, 2.1911e-06, 2.6800e-01,  ..., 2.5390e-01,
          2.6604e-01, 2.6930e-01],
         [2.4986e-01, 2.1911e-06, 2.4912e-01,  ..., 2.5484e-01,
          2.4782e-01, 2.5229e-01],
         [2.1596e-01, 9.9999e-01, 2.1588e-01,  ..., 2.4249e-01,
          2.2034e-01, 2.1777e-01],
         [2.6788e-01, 2.1911e-06, 2.6700e-01,  ..., 2.4877e-01,
          2.6579e-01, 2.6063e-01]],
        [[1.9211e-01, 2.5807e-01, 2.6356e-01,  ..., 2.4980e-01,
          2.5860e-01, 2.4879e-01],
         [1.9211e-01, 2.4758e-01, 2.4498e-01,  ..., 2.5128e-01,
          2.5725e-01, 2.5363e-01],
         [4.2366e-01, 2.2515e-01, 2.2521e-01,  ..., 2.2818e-01,
          2.1891e-01, 2.4879e-01],
         [1.9211e-01, 2.6920e-01, 2.6625e-01,  ..., 2.7074e-01,
          2.6524e-01, 2.4879e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2825, 0.2677, 0.2715,  ..., 0.2632, 0.2851, 0.2556],
         [0.2473, 0.2521, 0.2494,  ..., 0.2544, 0.2489, 0.2560],
         [0.1949, 0.2051, 0.2066,  ..., 0.2114, 0.2001, 0.2195],
         [0.2753, 0.2751, 0.2726,  ..., 0.2709, 0.2659, 0.2689]],
        [[0.2244, 0.2755, 0.2719,  ..., 0.2701, 0.2859, 0.0606],
         [0.2244, 0.2526, 0.2491,  ..., 0.2527, 0.2487, 0.0606],
         [0.3269, 0.2050, 0.2063,  ..., 0.2087, 0.1968, 0.8182],
         [0.2244, 0.2669, 0.2727,  ..., 0.2685, 0.2685, 0.0606]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:03:51,270 [Process: 0] Synchronize training processes
2024-08-19 13:03:51,270 [Process: 0] Evaluating...
2024-08-19 13:03:51,272 [Process: 0] EPOCH 5:
2024-08-19 13:03:51,274 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2706, 0.1602, 0.2663,  ..., 0.2777, 0.2726, 0.2616],
         [0.2489, 0.1602, 0.2506,  ..., 0.2485, 0.2519, 0.2487],
         [0.2093, 0.5194, 0.2145,  ..., 0.1982, 0.2077, 0.2135],
         [0.2712, 0.1602, 0.2686,  ..., 0.2756, 0.2678, 0.2763]],
        [[0.2844, 0.2680, 0.2743,  ..., 0.2823, 0.2747, 0.2725],
         [0.2496, 0.2556, 0.2469,  ..., 0.2406, 0.2499, 0.2533],
         [0.2054, 0.2157, 0.2157,  ..., 0.2065, 0.2031, 0.2045],
         [0.2606, 0.2606, 0.2631,  ..., 0.2706, 0.2723, 0.2697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2743, 0.2758, 0.2616,  ..., 0.2787, 0.2788, 0.2684],
         [0.2467, 0.2468, 0.2494,  ..., 0.2473, 0.2440, 0.2477],
         [0.2106, 0.2061, 0.2116,  ..., 0.2058, 0.2133, 0.2108],
         [0.2684, 0.2713, 0.2774,  ..., 0.2682, 0.2640, 0.2731]],
        [[0.1855, 0.2773, 0.2691,  ..., 0.2714, 0.2776, 0.0634],
         [0.1855, 0.2454, 0.2433,  ..., 0.2458, 0.2453, 0.0634],
         [0.4436, 0.2121, 0.2183,  ..., 0.2152, 0.2002, 0.8098],
         [0.1855, 0.2652, 0.2694,  ..., 0.2676, 0.2769, 0.0634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2793, 0.2844, 0.2693,  ..., 0.2824, 0.2766, 0.2730],
         [0.2379, 0.2396, 0.2435,  ..., 0.2420, 0.2434, 0.2436],
         [0.2064, 0.2037, 0.2099,  ..., 0.2010, 0.2163, 0.2059],
         [0.2764, 0.2723, 0.2772,  ..., 0.2746, 0.2638, 0.2775]],
        [[0.2725, 0.2772, 0.2770,  ..., 0.2782, 0.2443, 0.2542],
         [0.2343, 0.2502, 0.2412,  ..., 0.2486, 0.2372, 0.2541],
         [0.2065, 0.2007, 0.2019,  ..., 0.1965, 0.2713, 0.2350],
         [0.2867, 0.2719, 0.2799,  ..., 0.2767, 0.2472, 0.2568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2866, 0.2696, 0.2828,  ..., 0.2743, 0.2758, 0.2748],
         [0.2332, 0.2298, 0.2459,  ..., 0.2372, 0.2390, 0.2374],
         [0.2045, 0.2123, 0.2059,  ..., 0.2035, 0.2009, 0.2077],
         [0.2757, 0.2883, 0.2655,  ..., 0.2850, 0.2844, 0.2802]],
        [[0.2411, 0.2761, 0.2729,  ..., 0.2913, 0.2715, 0.2717],
         [0.2499, 0.2357, 0.2413,  ..., 0.2401, 0.2390, 0.2346],
         [0.2903, 0.2146, 0.2118,  ..., 0.1997, 0.2084, 0.2264],
         [0.2188, 0.2737, 0.2740,  ..., 0.2689, 0.2811, 0.2673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:03:52,261 [Process: 0] Synchronize training processes
2024-08-19 13:03:52,261 [Process: 0] Evaluating...
2024-08-19 13:03:52,263 [Process: 0] EPOCH 6:
2024-08-19 13:03:52,265 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:53,238 [Process: 0] Synchronize training processes
2024-08-19 13:03:53,238 [Process: 0] Evaluating...
2024-08-19 13:03:53,240 [Process: 0] EPOCH 7:
2024-08-19 13:03:53,242 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2784, 0.2858, 0.3116,  ..., 0.2887, 0.3034, 0.2866],
         [0.2352, 0.2353, 0.2329,  ..., 0.2360, 0.2335, 0.2353],
         [0.2008, 0.2014, 0.1833,  ..., 0.1911, 0.1939, 0.1967],
         [0.2856, 0.2776, 0.2722,  ..., 0.2842, 0.2691, 0.2815]],
        [[0.3096, 0.1203, 0.2811,  ..., 0.2984, 0.2670, 0.1862],
         [0.2312, 0.1203, 0.2436,  ..., 0.2353, 0.2455, 0.1892],
         [0.1886, 0.6392, 0.1912,  ..., 0.1996, 0.2425, 0.4305],
         [0.2707, 0.1203, 0.2841,  ..., 0.2667, 0.2450, 0.1941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2903, 0.2870, 0.3036,  ..., 0.2818, 0.2846, 0.2922],
         [0.2309, 0.2283, 0.2253,  ..., 0.2309, 0.2361, 0.2286],
         [0.2029, 0.1967, 0.1924,  ..., 0.2104, 0.2030, 0.2028],
         [0.2759, 0.2879, 0.2787,  ..., 0.2769, 0.2763, 0.2763]],
        [[0.3084, 0.2908, 0.2881,  ..., 0.2861, 0.2835, 0.1690],
         [0.2270, 0.2312, 0.2297,  ..., 0.2329, 0.2309, 0.1690],
         [0.1869, 0.1977, 0.2035,  ..., 0.2011, 0.2073, 0.4930],
         [0.2778, 0.2803, 0.2787,  ..., 0.2799, 0.2783, 0.1690]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2905, 0.2981, 0.3047,  ..., 0.3010, 0.3030, 0.2872],
         [0.2343, 0.2243, 0.2199,  ..., 0.2283, 0.2261, 0.2277],
         [0.2037, 0.1976, 0.1851,  ..., 0.1909, 0.1911, 0.1993],
         [0.2715, 0.2800, 0.2903,  ..., 0.2798, 0.2798, 0.2859]],
        [[0.2855, 0.2969, 0.3015,  ..., 0.3026, 0.2751, 0.2686],
         [0.2277, 0.2215, 0.2206,  ..., 0.2217, 0.2329, 0.2323],
         [0.2033, 0.2014, 0.1938,  ..., 0.1968, 0.2076, 0.2195],
         [0.2836, 0.2801, 0.2841,  ..., 0.2789, 0.2844, 0.2796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2924, 0.2998, 0.3132,  ..., 0.3023, 0.2941, 0.2968],
         [0.2242, 0.2190, 0.2161,  ..., 0.2211, 0.2273, 0.2303],
         [0.1954, 0.1975, 0.1852,  ..., 0.1985, 0.1955, 0.1951],
         [0.2879, 0.2836, 0.2855,  ..., 0.2781, 0.2831, 0.2778]],
        [[0.3067, 0.2902, 0.2442,  ..., 0.3045, 0.2857, 0.0826],
         [0.2215, 0.2297, 0.2316,  ..., 0.2290, 0.2343, 0.0826],
         [0.1972, 0.2019, 0.2690,  ..., 0.1965, 0.2111, 0.7523],
         [0.2746, 0.2782, 0.2552,  ..., 0.2700, 0.2689, 0.0826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:54,212 [Process: 0] Synchronize training processes
2024-08-19 13:03:54,212 [Process: 0] Evaluating...
2024-08-19 13:03:54,214 [Process: 0] EPOCH 8:
2024-08-19 13:03:54,216 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:55,187 [Process: 0] Synchronize training processes
2024-08-19 13:03:55,188 [Process: 0] Evaluating...
2024-08-19 13:03:55,189 [Process: 0] EPOCH 9:
2024-08-19 13:03:55,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:56,162 [Process: 0] Synchronize training processes
2024-08-19 13:03:56,162 [Process: 0] Evaluating...
2024-08-19 13:03:56,164 [Process: 0] EPOCH 10:
2024-08-19 13:03:56,165 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2945, 0.2957, 0.2815,  ..., 0.2891, 0.2904, 0.3100],
         [0.2226, 0.2205, 0.2212,  ..., 0.2309, 0.2250, 0.2144],
         [0.1996, 0.2084, 0.2157,  ..., 0.1911, 0.1969, 0.1988],
         [0.2834, 0.2754, 0.2816,  ..., 0.2889, 0.2877, 0.2768]],
        [[0.3034, 0.3148, 0.3081,  ..., 0.3250, 0.3050, 0.2176],
         [0.2211, 0.2095, 0.2167,  ..., 0.2108, 0.2153, 0.2205],
         [0.1925, 0.1898, 0.1933,  ..., 0.1873, 0.1925, 0.3272],
         [0.2830, 0.2860, 0.2820,  ..., 0.2769, 0.2871, 0.2347]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3037, 0.3132, 0.2907,  ..., 0.3149, 0.3043, 0.3048],
         [0.2142, 0.2169, 0.2122,  ..., 0.2109, 0.2090, 0.2131],
         [0.1935, 0.1858, 0.2010,  ..., 0.1918, 0.1948, 0.1940],
         [0.2885, 0.2842, 0.2961,  ..., 0.2824, 0.2918, 0.2881]],
        [[0.3106, 0.3039, 0.3055,  ..., 0.2961, 0.3126, 0.1720],
         [0.2130, 0.2208, 0.2139,  ..., 0.2193, 0.2116, 0.1741],
         [0.1896, 0.2062, 0.1973,  ..., 0.1977, 0.1888, 0.4820],
         [0.2868, 0.2691, 0.2833,  ..., 0.2869, 0.2871, 0.1720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3015, 0.3314, 0.3129,  ..., 0.3029, 0.3029, 0.3130],
         [0.2160, 0.2062, 0.2092,  ..., 0.2057, 0.2138, 0.2030],
         [0.1949, 0.1830, 0.1974,  ..., 0.2057, 0.2050, 0.1925],
         [0.2877, 0.2794, 0.2805,  ..., 0.2856, 0.2783, 0.2915]],
        [[0.3263, 0.3258, 0.3203,  ..., 0.3086, 0.2697, 0.1273],
         [0.2021, 0.2087, 0.2083,  ..., 0.2131, 0.2290, 0.1273],
         [0.1858, 0.1956, 0.1911,  ..., 0.1880, 0.2368, 0.6182],
         [0.2858, 0.2699, 0.2802,  ..., 0.2903, 0.2644, 0.1273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3245, 0.3430, 0.3453,  ..., 0.3239, 0.3070, 0.3204],
         [0.1990, 0.1955, 0.1906,  ..., 0.1957, 0.2020, 0.1981],
         [0.1912, 0.1786, 0.1766,  ..., 0.1924, 0.2020, 0.1945],
         [0.2853, 0.2830, 0.2876,  ..., 0.2880, 0.2890, 0.2870]],
        [[0.3210, 0.3263, 0.3418,  ..., 0.3095, 0.3251, 0.2489],
         [0.2013, 0.1970, 0.1938,  ..., 0.2015, 0.1993, 0.2212],
         [0.1879, 0.1903, 0.1831,  ..., 0.2015, 0.1900, 0.2762],
         [0.2897, 0.2864, 0.2814,  ..., 0.2874, 0.2856, 0.2537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:57,140 [Process: 0] Synchronize training processes
2024-08-19 13:03:57,140 [Process: 0] Evaluating...
2024-08-19 13:03:57,142 [Process: 0] EPOCH 11:
2024-08-19 13:03:57,144 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:58,117 [Process: 0] Synchronize training processes
2024-08-19 13:03:58,118 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3165, 0.3265, 0.3049,  ..., 0.3236, 0.3118, 0.3224],
         [0.1965, 0.1984, 0.2079,  ..., 0.1916, 0.2026, 0.1915],
         [0.1965, 0.1957, 0.2079,  ..., 0.1916, 0.2008, 0.1915],
         [0.2906, 0.2794, 0.2794,  ..., 0.2931, 0.2847, 0.2946]],
        [[0.3189, 0.3255, 0.3105,  ..., 0.3099, 0.1024, 0.1345],
         [0.1990, 0.1981, 0.1965,  ..., 0.1984, 0.1024, 0.1393],
         [0.1990, 0.1894, 0.1965,  ..., 0.1942, 0.6927, 0.5916],
         [0.2832, 0.2871, 0.2965,  ..., 0.2976, 0.1024, 0.1345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3161, 0.3058, 0.3184,  ..., 0.3052, 0.3454, 0.3054],
         [0.1980, 0.1994, 0.1977,  ..., 0.2017, 0.1887, 0.1984],
         [0.1831, 0.1983, 0.1870,  ..., 0.2017, 0.1817, 0.1984],
         [0.3028, 0.2964, 0.2969,  ..., 0.2914, 0.2841, 0.2978]],
        [[0.2851, 0.3062, 0.3420,  ..., 0.3304, 0.2990, 0.1517],
         [0.2148, 0.1976, 0.1883,  ..., 0.1948, 0.2028, 0.1517],
         [0.2148, 0.1976, 0.1729,  ..., 0.1948, 0.2007, 0.5448],
         [0.2854, 0.2987, 0.2968,  ..., 0.2799, 0.2975, 0.1517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2945, 0.3272, 0.3261,  ..., 0.3173, 0.3056, 0.3459],
         [0.2020, 0.1913, 0.1953,  ..., 0.1990, 0.2037, 0.1810],
         [0.2020, 0.1913, 0.1882,  ..., 0.1887, 0.2037, 0.1810],
         [0.3015, 0.2901, 0.2904,  ..., 0.2949, 0.2869, 0.2920]],
        [[0.3453, 0.3183, 0.3329,  ..., 0.2408, 0.1378, 0.1454],
         [0.1883, 0.1920, 0.1961,  ..., 0.2159, 0.1479, 0.1454],
         [0.1820, 0.1920, 0.1961,  ..., 0.3013, 0.5766, 0.5637],
         [0.2844, 0.2978, 0.2749,  ..., 0.2419, 0.1378, 0.1454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3500, 0.3313, 0.3592,  ..., 0.3522, 0.3417, 0.3099],
         [0.1869, 0.1855, 0.1711,  ..., 0.1803, 0.1856, 0.1978],
         [0.1869, 0.1786, 0.1656,  ..., 0.1743, 0.1790, 0.1978],
         [0.2761, 0.3046, 0.3041,  ..., 0.2933, 0.2937, 0.2944]],
        [[0.2165, 0.3449, 0.3613,  ..., 0.3363, 0.3431, 0.1047],
         [0.2033, 0.1873, 0.1826,  ..., 0.1908, 0.1790, 0.1047],
         [0.3308, 0.1873, 0.1826,  ..., 0.1841, 0.1790, 0.6859],
         [0.2495, 0.2804, 0.2736,  ..., 0.2887, 0.2989, 0.1047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:03:58,392 [Process: 0] EPOCH 12:
2024-08-19 13:03:58,395 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:03:59,369 [Process: 0] Synchronize training processes
2024-08-19 13:03:59,369 [Process: 0] Evaluating...
2024-08-19 13:03:59,371 [Process: 0] EPOCH 13:
2024-08-19 13:03:59,372 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3407, 0.3022, 0.3500,  ..., 0.3184, 0.3579, 0.3120],
         [0.1814, 0.1970, 0.1786,  ..., 0.1920, 0.1787, 0.2000],
         [0.1814, 0.1970, 0.1671,  ..., 0.1920, 0.1787, 0.2000],
         [0.2965, 0.3038, 0.3043,  ..., 0.2975, 0.2847, 0.2881]],
        [[0.3377, 0.3035, 0.3209,  ..., 0.2564, 0.1507, 0.1184],
         [0.1850, 0.2028, 0.1964,  ..., 0.2084, 0.1626, 0.1184],
         [0.1830, 0.2028, 0.1964,  ..., 0.2557, 0.5360, 0.6449],
         [0.2943, 0.2908, 0.2863,  ..., 0.2795, 0.1507, 0.1184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3687, 0.3740, 0.3512,  ..., 0.3451, 0.3135, 0.3162],
         [0.1680, 0.1777, 0.1759,  ..., 0.1797, 0.1944, 0.1949],
         [0.1661, 0.1577, 0.1707,  ..., 0.1797, 0.1944, 0.1912],
         [0.2973, 0.2907, 0.3023,  ..., 0.2954, 0.2976, 0.2978]],
        [[0.2326, 0.2854, 0.3151,  ..., 0.3408, 0.3284, 0.1472],
         [0.2068, 0.2016, 0.1942,  ..., 0.1844, 0.1841, 0.1472],
         [0.3208, 0.2016, 0.1942,  ..., 0.1728, 0.1841, 0.5585],
         [0.2398, 0.3114, 0.2965,  ..., 0.3019, 0.3034, 0.1472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3239, 0.3455, 0.3542,  ..., 0.3294, 0.3234, 0.2915],
         [0.1924, 0.1822, 0.1823,  ..., 0.1939, 0.1947, 0.1969],
         [0.1924, 0.1822, 0.1759,  ..., 0.1939, 0.1944, 0.1961],
         [0.2914, 0.2902, 0.2875,  ..., 0.2827, 0.2876, 0.3156]],
        [[0.3475, 0.3306, 0.3126,  ..., 0.3481, 0.0342, 0.2058],
         [0.1792, 0.1853, 0.1976,  ..., 0.1855, 0.0354, 0.2058],
         [0.1677, 0.1853, 0.1976,  ..., 0.1855, 0.8961, 0.3641],
         [0.3055, 0.2988, 0.2922,  ..., 0.2810, 0.0342, 0.2244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3218, 0.3704, 0.3498,  ..., 0.3334, 0.3514, 0.3631],
         [0.1847, 0.1694, 0.1674,  ..., 0.1854, 0.1867, 0.1688],
         [0.1847, 0.1619, 0.1644,  ..., 0.1854, 0.1805, 0.1603],
         [0.3089, 0.2982, 0.3184,  ..., 0.2958, 0.2815, 0.3078]],
        [[0.1804, 0.3553, 0.4026,  ..., 0.3883, 0.3430, 0.1178],
         [0.1804, 0.1837, 0.1632,  ..., 0.1568, 0.1937, 0.1178],
         [0.4588, 0.1682, 0.1452,  ..., 0.1568, 0.1670, 0.6465],
         [0.1804, 0.2928, 0.2889,  ..., 0.2981, 0.2962, 0.1178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:00,344 [Process: 0] Synchronize training processes
2024-08-19 13:04:00,344 [Process: 0] Evaluating...
2024-08-19 13:04:00,346 [Process: 0] EPOCH 14:
2024-08-19 13:04:00,348 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:01,320 [Process: 0] Synchronize training processes
2024-08-19 13:04:01,320 [Process: 0] Evaluating...
2024-08-19 13:04:01,322 [Process: 0] EPOCH 15:
2024-08-19 13:04:01,324 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3487, 0.3486, 0.3651,  ..., 0.3717, 0.3231, 0.3434],
         [0.1876, 0.1841, 0.1681,  ..., 0.1763, 0.1914, 0.1843],
         [0.1753, 0.1838, 0.1681,  ..., 0.1737, 0.1785, 0.1843],
         [0.2884, 0.2834, 0.2988,  ..., 0.2783, 0.3069, 0.2880]],
        [[0.2325, 0.3374, 0.3527,  ..., 0.3609, 0.1221, 0.3291],
         [0.2199, 0.1846, 0.1750,  ..., 0.1807, 0.1221, 0.1811],
         [0.2955, 0.1846, 0.1750,  ..., 0.1610, 0.6338, 0.1811],
         [0.2521, 0.2934, 0.2973,  ..., 0.2973, 0.1221, 0.3086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3682, 0.3748, 0.2303,  ..., 0.3632, 0.1898, 0.3273],
         [0.1685, 0.1656, 0.2154,  ..., 0.1701, 0.1898, 0.1914],
         [0.1685, 0.1656, 0.2882,  ..., 0.1673, 0.4269, 0.1914],
         [0.2948, 0.2940, 0.2661,  ..., 0.2994, 0.1936, 0.2899]],
        [[0.1725, 0.3228, 0.3370,  ..., 0.3863, 0.3723, 0.1356],
         [0.1725, 0.1898, 0.1832,  ..., 0.1659, 0.1705, 0.1356],
         [0.4826, 0.1733, 0.1760,  ..., 0.1566, 0.1550, 0.5932],
         [0.1725, 0.3142, 0.3037,  ..., 0.2911, 0.3022, 0.1356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3232, 0.3559, 0.3341,  ..., 0.4021, 0.3203, 0.3106],
         [0.1794, 0.1815, 0.1930,  ..., 0.1621, 0.1929, 0.2017],
         [0.1794, 0.1807, 0.1930,  ..., 0.1614, 0.1891, 0.2017],
         [0.3181, 0.2819, 0.2799,  ..., 0.2744, 0.2978, 0.2859]],
        [[0.1460, 0.3346, 0.3285,  ..., 0.3828, 0.0842, 0.3923],
         [0.1460, 0.1928, 0.1919,  ..., 0.1698, 0.0842, 0.1613],
         [0.5621, 0.1928, 0.1919,  ..., 0.1672, 0.7473, 0.1608],
         [0.1460, 0.2799, 0.2877,  ..., 0.2802, 0.0842, 0.2856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3474, 0.3865, 0.3539,  ..., 0.3266, 0.1237, 0.3348],
         [0.1699, 0.1733, 0.1754,  ..., 0.1797, 0.1237, 0.1760],
         [0.1604, 0.1476, 0.1635,  ..., 0.1757, 0.6288, 0.1660],
         [0.3224, 0.2927, 0.3072,  ..., 0.3180, 0.1237, 0.3232]],
        [[0.1944, 0.3672, 0.4464,  ..., 0.3924, 0.4066, 0.1332],
         [0.1944, 0.1660, 0.1422,  ..., 0.1616, 0.1520, 0.1332],
         [0.4053, 0.1588, 0.1374,  ..., 0.1577, 0.1520, 0.6003],
         [0.2059, 0.3080, 0.2739,  ..., 0.2883, 0.2895, 0.1332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:02,300 [Process: 0] Synchronize training processes
2024-08-19 13:04:02,300 [Process: 0] Evaluating...
2024-08-19 13:04:02,302 [Process: 0] EPOCH 16:
2024-08-19 13:04:02,303 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:03,275 [Process: 0] Synchronize training processes
2024-08-19 13:04:03,275 [Process: 0] Evaluating...
2024-08-19 13:04:03,277 [Process: 0] EPOCH 17:
2024-08-19 13:04:03,279 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3466, 0.3124, 0.3410,  ..., 0.3685, 0.3428, 0.3128],
         [0.1772, 0.1932, 0.1821,  ..., 0.1725, 0.1773, 0.1930],
         [0.1772, 0.1932, 0.1821,  ..., 0.1725, 0.1773, 0.1930],
         [0.2991, 0.3011, 0.2948,  ..., 0.2864, 0.3026, 0.3012]],
        [[0.1570, 0.3773, 0.3628,  ..., 0.3687, 0.1445, 0.3480],
         [0.1570, 0.1603, 0.1700,  ..., 0.1680, 0.1445, 0.1770],
         [0.5289, 0.1509, 0.1700,  ..., 0.1605, 0.5664, 0.1770],
         [0.1570, 0.3115, 0.2972,  ..., 0.3028, 0.1445, 0.2980]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3485, 0.3594, 0.4194,  ..., 0.3671, 0.1610, 0.3199],
         [0.1651, 0.1674, 0.1564,  ..., 0.1668, 0.1610, 0.1717],
         [0.1584, 0.1674, 0.1306,  ..., 0.1668, 0.5169, 0.1717],
         [0.3280, 0.3058, 0.2935,  ..., 0.2994, 0.1610, 0.3368]],
        [[0.2018, 0.3271, 0.3539,  ..., 0.4112, 0.4446, 0.1803],
         [0.2018, 0.1775, 0.1725,  ..., 0.1440, 0.1459, 0.1803],
         [0.3885, 0.1722, 0.1725,  ..., 0.1359, 0.1244, 0.4592],
         [0.2079, 0.3231, 0.3010,  ..., 0.3089, 0.2851, 0.1803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2976, 0.2962, 0.2841,  ..., 0.3065, 0.3554, 0.3095],
         [0.1941, 0.1978, 0.2022,  ..., 0.1916, 0.1763, 0.1930],
         [0.1941, 0.1895, 0.2022,  ..., 0.1892, 0.1706, 0.1930],
         [0.3141, 0.3164, 0.3115,  ..., 0.3127, 0.2978, 0.3046]],
        [[0.1853, 0.4214, 0.4587,  ..., 0.3627, 0.1644, 0.3461],
         [0.1853, 0.1432, 0.1395,  ..., 0.1750, 0.1644, 0.1788],
         [0.4442, 0.1330, 0.1160,  ..., 0.1750, 0.5069, 0.1788],
         [0.1853, 0.3023, 0.2858,  ..., 0.2872, 0.1644, 0.2963]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3676, 0.3752, 0.2082,  ..., 0.4027, 0.1495, 0.1758],
         [0.1533, 0.1597, 0.2082,  ..., 0.1424, 0.1495, 0.1758],
         [0.1533, 0.1532, 0.3525,  ..., 0.1423, 0.5514, 0.4726],
         [0.3259, 0.3118, 0.2310,  ..., 0.3126, 0.1495, 0.1758]],
        [[0.2498, 0.4131, 0.3428,  ..., 0.3978, 0.4576, 0.1574],
         [0.2059, 0.1383, 0.1580,  ..., 0.1400, 0.1309, 0.1574],
         [0.2265, 0.1366, 0.1580,  ..., 0.1253, 0.1220, 0.5278],
         [0.3178, 0.3120, 0.3412,  ..., 0.3369, 0.2896, 0.1574]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:04,249 [Process: 0] Synchronize training processes
2024-08-19 13:04:04,250 [Process: 0] Evaluating...
2024-08-19 13:04:04,252 [Process: 0] EPOCH 18:
2024-08-19 13:04:04,253 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:05,227 [Process: 0] Synchronize training processes
2024-08-19 13:04:05,228 [Process: 0] Evaluating...
2024-08-19 13:04:05,230 [Process: 0] EPOCH 19:
2024-08-19 13:04:05,231 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:06,203 [Process: 0] Synchronize training processes
2024-08-19 13:04:06,203 [Process: 0] Evaluating...
2024-08-19 13:04:06,205 [Process: 0] EPOCH 20:
2024-08-19 13:04:06,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2976, 0.3091, 0.3918,  ..., 0.3729, 0.3102, 0.3080],
         [0.1982, 0.1787, 0.1637,  ..., 0.1640, 0.1886, 0.1954],
         [0.1982, 0.1787, 0.1591,  ..., 0.1567, 0.1886, 0.1954],
         [0.3060, 0.3334, 0.2854,  ..., 0.3064, 0.3126, 0.3011]],
        [[0.3150, 0.3397, 0.3698,  ..., 0.4000, 0.1406, 0.3459],
         [0.1889, 0.1817, 0.1587,  ..., 0.1686, 0.1406, 0.1776],
         [0.1889, 0.1687, 0.1570,  ..., 0.1615, 0.5783, 0.1622],
         [0.3073, 0.3100, 0.3146,  ..., 0.2699, 0.1406, 0.3143]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3894, 0.3506, 0.3479,  ..., 0.4069, 0.1511, 0.0782],
         [0.1510, 0.1684, 0.1698,  ..., 0.1529, 0.1511, 0.0782],
         [0.1510, 0.1635, 0.1597,  ..., 0.1485, 0.5467, 0.7654],
         [0.3085, 0.3175, 0.3226,  ..., 0.2917, 0.1511, 0.0782]],
        [[0.3007, 0.4369, 0.3984,  ..., 0.4135, 0.3790, 0.0837],
         [0.1936, 0.1451, 0.1515,  ..., 0.1520, 0.1589, 0.0837],
         [0.1936, 0.1209, 0.1482,  ..., 0.1520, 0.1589, 0.7489],
         [0.3120, 0.2971, 0.3018,  ..., 0.2825, 0.3031, 0.0837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3637, 0.2931, 0.3489,  ..., 0.3972, 0.3666, 0.3225],
         [0.1692, 0.1896, 0.1728,  ..., 0.1529, 0.1635, 0.1912],
         [0.1648, 0.1896, 0.1672,  ..., 0.1451, 0.1571, 0.1880],
         [0.3023, 0.3276, 0.3111,  ..., 0.3048, 0.3128, 0.2983]],
        [[0.3943, 0.4565, 0.3901,  ..., 0.4074, 0.1098, 0.3410],
         [0.1688, 0.1349, 0.1504,  ..., 0.1456, 0.1098, 0.1827],
         [0.1522, 0.1345, 0.1495,  ..., 0.1363, 0.6705, 0.1617],
         [0.2847, 0.2741, 0.3101,  ..., 0.3107, 0.1098, 0.3145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3940, 0.4722, 0.3921,  ..., 0.3755, 0.1842, 0.1287],
         [0.1590, 0.1270, 0.1472,  ..., 0.1503, 0.1842, 0.1287],
         [0.1590, 0.1158, 0.1466,  ..., 0.1449, 0.4475, 0.6140],
         [0.2881, 0.2851, 0.3141,  ..., 0.3292, 0.1842, 0.1287]],
        [[0.2570, 0.3606, 0.3526,  ..., 0.4780, 0.4026, 0.1157],
         [0.2023, 0.1658, 0.1669,  ..., 0.1138, 0.1530, 0.1157],
         [0.2161, 0.1573, 0.1669,  ..., 0.1089, 0.1451, 0.6528],
         [0.3245, 0.3163, 0.3137,  ..., 0.2993, 0.2993, 0.1157]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:07,179 [Process: 0] Synchronize training processes
2024-08-19 13:04:07,180 [Process: 0] Evaluating...
2024-08-19 13:04:07,181 [Process: 0] EPOCH 21:
2024-08-19 13:04:07,183 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:08,159 [Process: 0] Synchronize training processes
2024-08-19 13:04:08,159 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3534, 0.2867, 0.3438,  ..., 0.4250, 0.3507, 0.2621],
         [0.1690, 0.1916, 0.1676,  ..., 0.1414, 0.1729, 0.2009],
         [0.1690, 0.1916, 0.1676,  ..., 0.1414, 0.1729, 0.2009],
         [0.3087, 0.3301, 0.3210,  ..., 0.2923, 0.3035, 0.3361]],
        [[0.3992, 0.4794, 0.3797,  ..., 0.4250, 0.1954, 0.1687],
         [0.1601, 0.1248, 0.1507,  ..., 0.1444, 0.1954, 0.1687],
         [0.1530, 0.1184, 0.1507,  ..., 0.1444, 0.4139, 0.4938],
         [0.2877, 0.2774, 0.3189,  ..., 0.2863, 0.1954, 0.1687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4233, 0.3984, 0.3969,  ..., 0.3629, 0.1701, 0.1849],
         [0.1451, 0.1424, 0.1473,  ..., 0.1614, 0.1701, 0.1849],
         [0.1324, 0.1424, 0.1455,  ..., 0.1614, 0.4898, 0.4371],
         [0.2991, 0.3167, 0.3104,  ..., 0.3142, 0.1701, 0.1931]],
        [[0.1956, 0.3748, 0.4464,  ..., 0.5184, 0.4897, 0.0571],
         [0.1956, 0.1672, 0.1302,  ..., 0.1106, 0.1238, 0.0571],
         [0.3785, 0.1672, 0.1302,  ..., 0.1056, 0.1128, 0.8287],
         [0.2304, 0.2908, 0.2932,  ..., 0.2654, 0.2738, 0.0571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3082, 0.2878, 0.3141,  ..., 0.5812, 0.3086, 0.2819],
         [0.1947, 0.1982, 0.1766,  ..., 0.1021, 0.1816, 0.2025],
         [0.1947, 0.1982, 0.1766,  ..., 0.1021, 0.1816, 0.2038],
         [0.3024, 0.3159, 0.3326,  ..., 0.2145, 0.3281, 0.3117]],
        [[0.4006, 0.5474, 0.5558,  ..., 0.1280, 0.0771, 0.1517],
         [0.1443, 0.1122, 0.1027,  ..., 0.1280, 0.0771, 0.1517],
         [0.1443, 0.1122, 0.0992,  ..., 0.6161, 0.7688, 0.5448],
         [0.3108, 0.2283, 0.2423,  ..., 0.1280, 0.0771, 0.1517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3809, 0.4903, 0.3812,  ..., 0.1864, 0.1562, 0.1130],
         [0.1556, 0.1140, 0.1485,  ..., 0.1864, 0.1562, 0.1130],
         [0.1556, 0.1140, 0.1485,  ..., 0.4267, 0.5314, 0.6609],
         [0.3080, 0.2818, 0.3219,  ..., 0.2006, 0.1562, 0.1130]],
        [[0.2525, 0.3740, 0.4814,  ..., 0.4612, 0.5205, 0.0921],
         [0.1982, 0.1545, 0.1199,  ..., 0.1295, 0.1211, 0.0921],
         [0.1982, 0.1545, 0.1199,  ..., 0.1191, 0.1211, 0.7237],
         [0.3510, 0.3171, 0.2788,  ..., 0.2902, 0.2373, 0.0921]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:04:08,438 [Process: 0] EPOCH 22:
2024-08-19 13:04:08,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:09,415 [Process: 0] Synchronize training processes
2024-08-19 13:04:09,415 [Process: 0] Evaluating...
2024-08-19 13:04:09,417 [Process: 0] EPOCH 23:
2024-08-19 13:04:09,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4347, 0.2713, 0.1228,  ..., 0.5128, 0.3893, 0.2077],
         [0.1397, 0.1943, 0.1228,  ..., 0.1219, 0.1720, 0.2077],
         [0.1397, 0.1999, 0.6316,  ..., 0.1219, 0.1720, 0.2457],
         [0.2859, 0.3345, 0.1228,  ..., 0.2433, 0.2666, 0.3389]],
        [[0.5178, 0.2632, 0.4397,  ..., 0.1756, 0.1050, 0.1646],
         [0.1263, 0.1968, 0.1486,  ..., 0.1756, 0.1050, 0.1646],
         [0.1263, 0.2014, 0.1486,  ..., 0.4731, 0.6851, 0.5061],
         [0.2296, 0.3386, 0.2630,  ..., 0.1756, 0.1050, 0.1646]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3120, 0.6092, 0.1993,  ..., 0.2149, 0.1348, 0.1406],
         [0.1701, 0.0898, 0.1987,  ..., 0.2010, 0.1348, 0.1406],
         [0.1701, 0.0898, 0.2494,  ..., 0.2010, 0.5957, 0.5782],
         [0.3478, 0.2113, 0.3527,  ..., 0.3831, 0.1348, 0.1406]],
        [[0.1587, 0.2468, 0.6185,  ..., 0.5644, 0.4159, 0.0721],
         [0.1587, 0.1841, 0.0920,  ..., 0.1106, 0.1529, 0.0721],
         [0.5238, 0.1841, 0.0920,  ..., 0.1086, 0.1529, 0.7836],
         [0.1587, 0.3850, 0.1976,  ..., 0.2164, 0.2783, 0.0721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5382, 0.2013, 0.2077,  ..., 0.6800, 0.2607, 0.2015],
         [0.1154, 0.2013, 0.2077,  ..., 0.0773, 0.1959, 0.2015],
         [0.1126, 0.2539, 0.2077,  ..., 0.0773, 0.1959, 0.2408],
         [0.2338, 0.3436, 0.3769,  ..., 0.1654, 0.3475, 0.3563]],
        [[0.1774, 0.3587, 0.3394,  ..., 0.2556, 0.1313, 0.1547],
         [0.1774, 0.1630, 0.1689,  ..., 0.1909, 0.1313, 0.1561],
         [0.4472, 0.1630, 0.1689,  ..., 0.1909, 0.6062, 0.5346],
         [0.1980, 0.3154, 0.3228,  ..., 0.3625, 0.1313, 0.1547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5154, 0.7542, 0.4679,  ..., 0.4942, 0.1246, 0.1554],
         [0.1185, 0.0623, 0.1243,  ..., 0.1426, 0.1246, 0.1554],
         [0.1166, 0.0623, 0.1243,  ..., 0.1426, 0.6261, 0.5220],
         [0.2495, 0.1212, 0.2835,  ..., 0.2205, 0.1246, 0.1672]],
        [[0.1669, 0.1956, 0.5357,  ..., 0.3481, 0.2380, 0.0766],
         [0.1669, 0.1956, 0.1245,  ..., 0.1514, 0.1780, 0.0766],
         [0.4805, 0.1956, 0.1116,  ..., 0.1514, 0.1780, 0.7701],
         [0.1858, 0.4133, 0.2282,  ..., 0.3491, 0.4061, 0.0766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:10,390 [Process: 0] Synchronize training processes
2024-08-19 13:04:10,390 [Process: 0] Evaluating...
2024-08-19 13:04:10,392 [Process: 0] EPOCH 24:
2024-08-19 13:04:10,394 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:11,367 [Process: 0] Synchronize training processes
2024-08-19 13:04:11,367 [Process: 0] Evaluating...
2024-08-19 13:04:11,369 [Process: 0] EPOCH 25:
2024-08-19 13:04:11,371 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5292, 0.2627, 0.2029,  ..., 0.7356, 0.7444, 0.2257],
         [0.1282, 0.1828, 0.2029,  ..., 0.0762, 0.0730, 0.2004],
         [0.1282, 0.1828, 0.2029,  ..., 0.0697, 0.0730, 0.2004],
         [0.2144, 0.3717, 0.3912,  ..., 0.1186, 0.1097, 0.3735]],
        [[0.1422, 0.2501, 0.2013,  ..., 0.1989, 0.0378, 0.1186],
         [0.1422, 0.1914, 0.2013,  ..., 0.1989, 0.0378, 0.1186],
         [0.5733, 0.1914, 0.2317,  ..., 0.2022, 0.8866, 0.6442],
         [0.1422, 0.3671, 0.3657,  ..., 0.4000, 0.0378, 0.1186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5038, 0.4497, 0.4479,  ..., 0.5125, 0.0689, 0.1190],
         [0.1180, 0.1302, 0.1420,  ..., 0.1197, 0.0689, 0.1190],
         [0.1180, 0.1302, 0.1420,  ..., 0.1197, 0.7934, 0.6430],
         [0.2602, 0.2899, 0.2681,  ..., 0.2480, 0.0689, 0.1190]],
        [[0.1696, 0.2392, 0.7833,  ..., 0.8053, 0.3290, 0.1048],
         [0.1696, 0.1562, 0.0518,  ..., 0.0581, 0.1397, 0.1048],
         [0.3862, 0.1561, 0.0518,  ..., 0.0581, 0.1397, 0.6856],
         [0.2746, 0.4484, 0.1132,  ..., 0.0785, 0.3916, 0.1048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9035, 0.1844, 0.3922,  ..., 0.8736, 0.7976, 0.2411],
         [0.0322, 0.1844, 0.1522,  ..., 0.0361, 0.0671, 0.1809],
         [0.0322, 0.1844, 0.1522,  ..., 0.0361, 0.0671, 0.1809],
         [0.0322, 0.4467, 0.3034,  ..., 0.0542, 0.0683, 0.3971]],
        [[0.1546, 0.1770, 0.1794,  ..., 0.1789, 0.1136, 0.0738],
         [0.1546, 0.1770, 0.1840,  ..., 0.1789, 0.1136, 0.0738],
         [0.5362, 0.3962, 0.2653,  ..., 0.1789, 0.6593, 0.7787],
         [0.1546, 0.2498, 0.3712,  ..., 0.4633, 0.1136, 0.0738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6837, 0.7422, 0.3081,  ..., 0.5826, 0.0865, 0.1021],
         [0.0935, 0.0763, 0.1804,  ..., 0.1219, 0.0865, 0.1021],
         [0.0935, 0.0763, 0.1565,  ..., 0.1219, 0.7404, 0.6937],
         [0.1293, 0.1052, 0.3550,  ..., 0.1735, 0.0865, 0.1021]],
        [[0.1705, 0.1532, 0.7069,  ..., 0.8270, 0.1551, 0.1178],
         [0.1705, 0.1532, 0.0789,  ..., 0.0524, 0.1551, 0.1178],
         [0.2579, 0.1532, 0.0789,  ..., 0.0524, 0.1551, 0.6466],
         [0.4011, 0.5405, 0.1354,  ..., 0.0681, 0.5348, 0.1178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:12,347 [Process: 0] Synchronize training processes
2024-08-19 13:04:12,347 [Process: 0] Evaluating...
2024-08-19 13:04:12,349 [Process: 0] EPOCH 26:
2024-08-19 13:04:12,351 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:13,327 [Process: 0] Synchronize training processes
2024-08-19 13:04:13,327 [Process: 0] Evaluating...
2024-08-19 13:04:13,329 [Process: 0] EPOCH 27:
2024-08-19 13:04:13,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9564, 0.1754, 0.1939,  ..., 0.8075, 0.6884, 0.1833],
         [0.0145, 0.1754, 0.1970,  ..., 0.0642, 0.1007, 0.1833],
         [0.0145, 0.1754, 0.2078,  ..., 0.0642, 0.1007, 0.1833],
         [0.0145, 0.4738, 0.4012,  ..., 0.0642, 0.1102, 0.4500]],
        [[0.2917, 0.2141, 0.5643,  ..., 0.1879, 0.0498, 0.0736],
         [0.1775, 0.1826, 0.1302,  ..., 0.1879, 0.0498, 0.0736],
         [0.1775, 0.1826, 0.1302,  ..., 0.1879, 0.8505, 0.7793],
         [0.3533, 0.4208, 0.1752,  ..., 0.4362, 0.0498, 0.0736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3256, 0.5719, 0.5991,  ..., 0.4805, 0.0406, 0.0995],
         [0.1745, 0.1262, 0.1148,  ..., 0.1536, 0.0406, 0.0995],
         [0.1662, 0.1222, 0.1148,  ..., 0.1536, 0.8783, 0.7015],
         [0.3337, 0.1796, 0.1712,  ..., 0.2124, 0.0406, 0.0995]],
        [[0.1801, 0.1577, 0.8390,  ..., 0.7897, 0.1431, 0.0739],
         [0.1801, 0.1582, 0.0537,  ..., 0.0701, 0.1431, 0.0654],
         [0.3388, 0.1577, 0.0537,  ..., 0.0701, 0.1431, 0.7954],
         [0.3011, 0.5264, 0.0537,  ..., 0.0701, 0.5707, 0.0654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9671, 0.1848, 0.1783,  ..., 0.8385, 0.8793, 0.1936],
         [0.0110, 0.1848, 0.1857,  ..., 0.0538, 0.0436, 0.2060],
         [0.0110, 0.1848, 0.1783,  ..., 0.0538, 0.0386, 0.2105],
         [0.0110, 0.4457, 0.4578,  ..., 0.0538, 0.0386, 0.3899]],
        [[0.1806, 0.1827, 0.2103,  ..., 0.1874, 0.0467, 0.1816],
         [0.1806, 0.1827, 0.2041,  ..., 0.1874, 0.0467, 0.1816],
         [0.1806, 0.1827, 0.1799,  ..., 0.1874, 0.8598, 0.3647],
         [0.4582, 0.4518, 0.4056,  ..., 0.4378, 0.0467, 0.2722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1443, 0.6867, 0.2875,  ..., 0.3022, 0.1376, 0.1081],
         [0.1443, 0.1041, 0.1725,  ..., 0.1444, 0.1376, 0.1081],
         [0.1443, 0.1041, 0.1546,  ..., 0.1402, 0.5871, 0.6757],
         [0.5670, 0.1051, 0.3855,  ..., 0.4133, 0.1376, 0.1081]],
        [[0.1433, 0.1455, 0.7969,  ..., 0.1204, 0.2184, 0.1104],
         [0.1433, 0.1455, 0.0677,  ..., 0.1273, 0.1727, 0.1104],
         [0.5346, 0.1455, 0.0677,  ..., 0.1204, 0.1559, 0.6688],
         [0.1788, 0.5634, 0.0677,  ..., 0.6319, 0.4531, 0.1104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:14,304 [Process: 0] Synchronize training processes
2024-08-19 13:04:14,305 [Process: 0] Evaluating...
2024-08-19 13:04:14,306 [Process: 0] EPOCH 28:
2024-08-19 13:04:14,308 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:15,279 [Process: 0] Synchronize training processes
2024-08-19 13:04:15,279 [Process: 0] Evaluating...
2024-08-19 13:04:15,281 [Process: 0] EPOCH 29:
2024-08-19 13:04:15,283 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9480, 0.1924, 0.1696,  ..., 0.7035, 0.8573, 0.1938],
         [0.0173, 0.1912, 0.1696,  ..., 0.0988, 0.0476, 0.1930],
         [0.0173, 0.1804, 0.1696,  ..., 0.0988, 0.0476, 0.1930],
         [0.0173, 0.4360, 0.4913,  ..., 0.0988, 0.0476, 0.4202]],
        [[0.1940, 0.2722, 0.2449,  ..., 0.2120, 0.0330, 0.1191],
         [0.1833, 0.1827, 0.1948,  ..., 0.1928, 0.0330, 0.1191],
         [0.1833, 0.1827, 0.1948,  ..., 0.1928, 0.9011, 0.6427],
         [0.4395, 0.3625, 0.3655,  ..., 0.4024, 0.0330, 0.1191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0916, 0.4670, 0.3572,  ..., 0.4582, 0.1436, 0.0966],
         [0.0916, 0.1454, 0.1407,  ..., 0.1403, 0.1479, 0.0966],
         [0.7253, 0.1454, 0.1407,  ..., 0.1403, 0.5635, 0.7101],
         [0.0916, 0.2422, 0.3613,  ..., 0.2612, 0.1450, 0.0966]],
        [[0.1051, 0.1923, 0.8963,  ..., 0.8620, 0.1106, 0.0513],
         [0.1051, 0.1212, 0.0346,  ..., 0.0520, 0.1106, 0.0513],
         [0.6847, 0.1161, 0.0346,  ..., 0.0430, 0.1106, 0.8461],
         [0.1051, 0.5704, 0.0346,  ..., 0.0430, 0.6681, 0.0513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7859, 0.1977, 0.1542,  ..., 0.2605, 0.6232, 0.1375],
         [0.0729, 0.1892, 0.1542,  ..., 0.1855, 0.1256, 0.1375],
         [0.0706, 0.2019, 0.1542,  ..., 0.1713, 0.1256, 0.1375],
         [0.0706, 0.4112, 0.5375,  ..., 0.3828, 0.1256, 0.5875]],
        [[0.7203, 0.5017, 0.3959,  ..., 0.2220, 0.0335, 0.0913],
         [0.0960, 0.1430, 0.1626,  ..., 0.1777, 0.0335, 0.0913],
         [0.0918, 0.1430, 0.1626,  ..., 0.1777, 0.8996, 0.7261],
         [0.0918, 0.2124, 0.2789,  ..., 0.4225, 0.0335, 0.0913]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1026, 0.6257, 0.7052,  ..., 0.6695, 0.1312, 0.0982],
         [0.1026, 0.1196, 0.0991,  ..., 0.1115, 0.1312, 0.0982],
         [0.6923, 0.1196, 0.0979,  ..., 0.1076, 0.6065, 0.7054],
         [0.1026, 0.1350, 0.0979,  ..., 0.1115, 0.1312, 0.0982]],
        [[0.1378, 0.2856, 0.7918,  ..., 0.7605, 0.1310, 0.0773],
         [0.1378, 0.1315, 0.0759,  ..., 0.0841, 0.0964, 0.0773],
         [0.5865, 0.1315, 0.0662,  ..., 0.0777, 0.0964, 0.7681],
         [0.1378, 0.4515, 0.0662,  ..., 0.0777, 0.6763, 0.0773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:16,255 [Process: 0] Synchronize training processes
2024-08-19 13:04:16,255 [Process: 0] Evaluating...
2024-08-19 13:04:16,257 [Process: 0] EPOCH 30:
2024-08-19 13:04:16,258 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:17,232 [Process: 0] Synchronize training processes
2024-08-19 13:04:17,232 [Process: 0] Evaluating...
2024-08-19 13:04:17,234 [Process: 0] EPOCH 31:
2024-08-19 13:04:17,236 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:18,209 [Process: 0] Synchronize training processes
2024-08-19 13:04:18,209 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3096, 0.1621, 0.1435,  ..., 0.7317, 0.3484, 0.1779],
         [0.1653, 0.1621, 0.1435,  ..., 0.0894, 0.1583, 0.1676],
         [0.1653, 0.1621, 0.1435,  ..., 0.0894, 0.1493, 0.1676],
         [0.3598, 0.5136, 0.5694,  ..., 0.0894, 0.3441, 0.4868]],
        [[0.6250, 0.3574, 0.4015,  ..., 0.3401, 0.0341, 0.0938],
         [0.1366, 0.1781, 0.1627,  ..., 0.1641, 0.0341, 0.0938],
         [0.1192, 0.1781, 0.1542,  ..., 0.1617, 0.8978, 0.7186],
         [0.1192, 0.2865, 0.2817,  ..., 0.3341, 0.0341, 0.0938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1292, 0.5874, 0.3776,  ..., 0.5884, 0.0743, 0.0910],
         [0.1292, 0.1293, 0.1686,  ..., 0.1342, 0.0743, 0.0910],
         [0.5796, 0.1287, 0.1686,  ..., 0.1342, 0.7771, 0.7270],
         [0.1621, 0.1546, 0.2853,  ..., 0.1432, 0.0743, 0.0910]],
        [[0.0780, 0.1091, 0.5868,  ..., 0.0714, 0.1227, 0.1153],
         [0.0780, 0.1091, 0.1377,  ..., 0.0714, 0.1227, 0.1153],
         [0.7659, 0.1091, 0.1377,  ..., 0.0714, 0.1227, 0.6542],
         [0.0780, 0.6727, 0.1377,  ..., 0.7859, 0.6318, 0.1153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1653, 0.1655, 0.1460,  ..., 0.8922, 0.4040, 0.1399],
         [0.1545, 0.1334, 0.1460,  ..., 0.0359, 0.1646, 0.1399],
         [0.1545, 0.1334, 0.1460,  ..., 0.0359, 0.1619, 0.1399],
         [0.5258, 0.5677, 0.5620,  ..., 0.0359, 0.2695, 0.5804]],
        [[0.6231, 0.2596, 0.1768,  ..., 0.2433, 0.0274, 0.0989],
         [0.1231, 0.1414, 0.1487,  ..., 0.1623, 0.0274, 0.0989],
         [0.1150, 0.1414, 0.1487,  ..., 0.1623, 0.9178, 0.7034],
         [0.1388, 0.4576, 0.5258,  ..., 0.4321, 0.0274, 0.0989]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1165, 0.5380, 0.4227,  ..., 0.3880, 0.0646, 0.1415],
         [0.1165, 0.1290, 0.1571,  ..., 0.1337, 0.0646, 0.1415],
         [0.6505, 0.1187, 0.1258,  ..., 0.1276, 0.8062, 0.5755],
         [0.1165, 0.2144, 0.2944,  ..., 0.3508, 0.0646, 0.1415]],
        [[0.0799, 0.2228, 0.7488,  ..., 0.0842, 0.0445, 0.0942],
         [0.0799, 0.1173, 0.0970,  ..., 0.0842, 0.0445, 0.0942],
         [0.7604, 0.1126, 0.0771,  ..., 0.0842, 0.0445, 0.7173],
         [0.0799, 0.5473, 0.0771,  ..., 0.7475, 0.8665, 0.0942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:04:18,480 [Process: 0] EPOCH 32:
2024-08-19 13:04:18,483 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:19,459 [Process: 0] Synchronize training processes
2024-08-19 13:04:19,459 [Process: 0] Evaluating...
2024-08-19 13:04:19,461 [Process: 0] EPOCH 33:
2024-08-19 13:04:19,463 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2912, 0.1422, 0.1903,  ..., 0.9163, 0.2593, 0.0817],
         [0.1745, 0.1422, 0.1661,  ..., 0.0305, 0.1718, 0.0817],
         [0.1745, 0.1422, 0.1661,  ..., 0.0266, 0.1718, 0.0817],
         [0.3597, 0.5735, 0.4775,  ..., 0.0266, 0.3972, 0.7549]],
        [[0.5869, 0.2679, 0.2175,  ..., 0.2165, 0.0884, 0.1267],
         [0.1378, 0.1574, 0.1493,  ..., 0.1516, 0.0884, 0.1267],
         [0.1177, 0.1512, 0.1493,  ..., 0.1474, 0.7348, 0.6200],
         [0.1576, 0.4236, 0.4838,  ..., 0.4845, 0.0884, 0.1267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0945, 0.5866, 0.3961,  ..., 0.4885, 0.1232, 0.1226],
         [0.0945, 0.1326, 0.1633,  ..., 0.1430, 0.1232, 0.1226],
         [0.7165, 0.1163, 0.1303,  ..., 0.1239, 0.6305, 0.6322],
         [0.0945, 0.1645, 0.3103,  ..., 0.2446, 0.1232, 0.1226]],
        [[0.0868, 0.0896, 0.7383,  ..., 0.5970, 0.0772, 0.1031],
         [0.0868, 0.0896, 0.1030,  ..., 0.1185, 0.0772, 0.1031],
         [0.7397, 0.0896, 0.0794,  ..., 0.1062, 0.0772, 0.6907],
         [0.0868, 0.7311, 0.0794,  ..., 0.1783, 0.7683, 0.1031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3615, 0.1648, 0.3243,  ..., 0.8565, 0.5115, 0.0902],
         [0.1659, 0.1648, 0.1747,  ..., 0.0648, 0.1434, 0.0902],
         [0.1593, 0.1648, 0.1705,  ..., 0.0394, 0.1336, 0.0902],
         [0.3133, 0.5056, 0.3305,  ..., 0.0394, 0.2115, 0.7295]],
        [[0.6664, 0.1666, 0.1403,  ..., 0.2020, 0.1144, 0.1368],
         [0.1251, 0.1351, 0.1403,  ..., 0.1620, 0.1144, 0.1368],
         [0.1042, 0.1351, 0.1403,  ..., 0.1620, 0.6568, 0.5897],
         [0.1042, 0.5631, 0.5792,  ..., 0.4740, 0.1144, 0.1368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1071, 0.7056, 0.4551,  ..., 0.4947, 0.1231, 0.1487],
         [0.1071, 0.1111, 0.1699,  ..., 0.1167, 0.1231, 0.1487],
         [0.6786, 0.0884, 0.1310,  ..., 0.1099, 0.6306, 0.4291],
         [0.1071, 0.0949, 0.2440,  ..., 0.2787, 0.1231, 0.2735]],
        [[0.0632, 0.0437, 0.7539,  ..., 0.7814, 0.0477, 0.0857],
         [0.0632, 0.0437, 0.0912,  ..., 0.0861, 0.0477, 0.0857],
         [0.8104, 0.0437, 0.0774,  ..., 0.0662, 0.0477, 0.7428],
         [0.0632, 0.8689, 0.0774,  ..., 0.0662, 0.8570, 0.0857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:20,434 [Process: 0] Synchronize training processes
2024-08-19 13:04:20,435 [Process: 0] Evaluating...
2024-08-19 13:04:20,436 [Process: 0] EPOCH 34:
2024-08-19 13:04:20,438 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:21,414 [Process: 0] Synchronize training processes
2024-08-19 13:04:21,414 [Process: 0] Evaluating...
2024-08-19 13:04:21,416 [Process: 0] EPOCH 35:
2024-08-19 13:04:21,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6798, 0.1160, 0.0897,  ..., 0.8696, 0.8172, 0.1390],
         [0.1095, 0.1160, 0.0897,  ..., 0.0435, 0.0786, 0.1390],
         [0.1054, 0.1160, 0.0897,  ..., 0.0435, 0.0521, 0.1390],
         [0.1054, 0.6519, 0.7308,  ..., 0.0435, 0.0521, 0.5830]],
        [[0.4625, 0.1184, 0.1847,  ..., 0.2597, 0.0343, 0.0933],
         [0.1695, 0.1184, 0.1484,  ..., 0.1714, 0.0343, 0.0933],
         [0.1661, 0.1184, 0.1484,  ..., 0.1714, 0.8970, 0.7202],
         [0.2018, 0.6448, 0.5185,  ..., 0.3976, 0.0343, 0.0933]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1409, 0.7989, 0.6278,  ..., 0.7188, 0.0700, 0.0993],
         [0.1409, 0.0815, 0.1284,  ..., 0.1172, 0.0700, 0.0993],
         [0.5667, 0.0598, 0.0979,  ..., 0.0820, 0.7900, 0.7020],
         [0.1515, 0.0598, 0.1459,  ..., 0.0820, 0.0700, 0.0993]],
        [[0.1488, 0.0300, 0.7534,  ..., 0.7117, 0.0612, 0.1506],
         [0.1488, 0.0300, 0.1041,  ..., 0.1040, 0.0612, 0.1506],
         [0.4435, 0.0300, 0.0712,  ..., 0.0922, 0.0612, 0.5102],
         [0.2589, 0.9100, 0.0712,  ..., 0.0922, 0.8163, 0.1886]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8648, 0.1566, 0.1403,  ..., 0.9183, 0.7871, 0.1279],
         [0.0526, 0.1566, 0.1403,  ..., 0.0273, 0.0782, 0.1279],
         [0.0413, 0.1566, 0.1403,  ..., 0.0272, 0.0673, 0.1279],
         [0.0413, 0.5301, 0.5792,  ..., 0.0272, 0.0673, 0.6164]],
        [[0.3455, 0.1178, 0.1673,  ..., 0.1350, 0.0532, 0.0547],
         [0.1795, 0.1178, 0.1673,  ..., 0.1350, 0.0532, 0.0547],
         [0.1795, 0.1178, 0.1673,  ..., 0.1350, 0.8403, 0.8359],
         [0.2956, 0.6466, 0.4981,  ..., 0.5950, 0.0532, 0.0547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1760, 0.6009, 0.1322,  ..., 0.7846, 0.0350, 0.0764],
         [0.1760, 0.1546, 0.1306,  ..., 0.0820, 0.0350, 0.0764],
         [0.2401, 0.1129, 0.1231,  ..., 0.0667, 0.8951, 0.7709],
         [0.4078, 0.1315, 0.6142,  ..., 0.0667, 0.0350, 0.0764]],
        [[0.4613, 0.0380, 0.8115,  ..., 0.8238, 0.1202, 0.0948],
         [0.1637, 0.0380, 0.0684,  ..., 0.0620, 0.1202, 0.0948],
         [0.1444, 0.0380, 0.0600,  ..., 0.0571, 0.1202, 0.7156],
         [0.2306, 0.8860, 0.0600,  ..., 0.0571, 0.6394, 0.0948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:22,393 [Process: 0] Synchronize training processes
2024-08-19 13:04:22,393 [Process: 0] Evaluating...
2024-08-19 13:04:22,395 [Process: 0] EPOCH 36:
2024-08-19 13:04:22,397 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:23,372 [Process: 0] Synchronize training processes
2024-08-19 13:04:23,372 [Process: 0] Evaluating...
2024-08-19 13:04:23,374 [Process: 0] EPOCH 37:
2024-08-19 13:04:23,375 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8267, 0.0601, 0.1289,  ..., 0.8056, 0.5759, 0.1372],
         [0.0595, 0.0601, 0.1289,  ..., 0.0690, 0.1475, 0.1372],
         [0.0569, 0.0601, 0.1289,  ..., 0.0627, 0.1383, 0.1372],
         [0.0569, 0.8197, 0.6132,  ..., 0.0627, 0.1383, 0.5885]],
        [[0.1480, 0.1156, 0.1905,  ..., 0.0759, 0.0597, 0.0902],
         [0.1410, 0.1156, 0.1677,  ..., 0.0759, 0.0597, 0.0902],
         [0.5699, 0.1156, 0.1677,  ..., 0.0759, 0.8208, 0.7293],
         [0.1410, 0.6531, 0.4742,  ..., 0.7724, 0.0597, 0.0902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1586, 0.6092, 0.4303,  ..., 0.7642, 0.0420, 0.0872],
         [0.1586, 0.1303, 0.1466,  ..., 0.0811, 0.0420, 0.0872],
         [0.4794, 0.1303, 0.1451,  ..., 0.0774, 0.8739, 0.7384],
         [0.2033, 0.1303, 0.2779,  ..., 0.0774, 0.0420, 0.0872]],
        [[0.1007, 0.0357, 0.9156,  ..., 0.8329, 0.0567, 0.0730],
         [0.1007, 0.0357, 0.0289,  ..., 0.0586, 0.0653, 0.0730],
         [0.6978, 0.0357, 0.0278,  ..., 0.0543, 0.0567, 0.7811],
         [0.1007, 0.8930, 0.0278,  ..., 0.0543, 0.8212, 0.0730]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6189, 0.1276, 0.1810,  ..., 0.8182, 0.7903, 0.1625],
         [0.1138, 0.1276, 0.1810,  ..., 0.0606, 0.0699, 0.1746],
         [0.1535, 0.1276, 0.2448,  ..., 0.0606, 0.0699, 0.1888],
         [0.1138, 0.6173, 0.3933,  ..., 0.0606, 0.0699, 0.4742]],
        [[0.1068, 0.1187, 0.0819,  ..., 0.1017, 0.0894, 0.1539],
         [0.1068, 0.1187, 0.0884,  ..., 0.1052, 0.0894, 0.1539],
         [0.6795, 0.1187, 0.0819,  ..., 0.1017, 0.7318, 0.4221],
         [0.1068, 0.6440, 0.7478,  ..., 0.6915, 0.0894, 0.2700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1448, 0.5159, 0.4264,  ..., 0.6625, 0.0807, 0.0752],
         [0.1448, 0.1538, 0.1646,  ..., 0.1188, 0.0807, 0.0752],
         [0.5475, 0.1317, 0.1646,  ..., 0.1052, 0.7578, 0.7743],
         [0.1628, 0.1986, 0.2445,  ..., 0.1135, 0.0807, 0.0752]],
        [[0.0607, 0.0500, 0.9195,  ..., 0.5412, 0.0610, 0.0673],
         [0.0607, 0.0581, 0.0268,  ..., 0.1437, 0.0744, 0.0673],
         [0.8179, 0.0500, 0.0268,  ..., 0.1256, 0.0610, 0.7981],
         [0.0607, 0.8419, 0.0268,  ..., 0.1895, 0.8037, 0.0673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:24,352 [Process: 0] Synchronize training processes
2024-08-19 13:04:24,353 [Process: 0] Evaluating...
2024-08-19 13:04:24,354 [Process: 0] EPOCH 38:
2024-08-19 13:04:24,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:25,332 [Process: 0] Synchronize training processes
2024-08-19 13:04:25,333 [Process: 0] Evaluating...
2024-08-19 13:04:25,334 [Process: 0] EPOCH 39:
2024-08-19 13:04:25,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8496, 0.1262, 0.1531,  ..., 0.8151, 0.8790, 0.1199],
         [0.0501, 0.1295, 0.1602,  ..., 0.0616, 0.0403, 0.1199],
         [0.0501, 0.1262, 0.1531,  ..., 0.0616, 0.0403, 0.1199],
         [0.0501, 0.6181, 0.5336,  ..., 0.0616, 0.0403, 0.6403]],
        [[0.1215, 0.0994, 0.1127,  ..., 0.2004, 0.0607, 0.0612],
         [0.1215, 0.1064, 0.1159,  ..., 0.1844, 0.0607, 0.0612],
         [0.6355, 0.0994, 0.1127,  ..., 0.3233, 0.8180, 0.8164],
         [0.1215, 0.6949, 0.6587,  ..., 0.2918, 0.0607, 0.0612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0894, 0.4217, 0.4534,  ..., 0.7891, 0.0996, 0.0825],
         [0.0894, 0.1659, 0.1548,  ..., 0.0703, 0.0996, 0.0825],
         [0.7319, 0.1503, 0.1422,  ..., 0.0703, 0.7012, 0.7524],
         [0.0894, 0.2621, 0.2496,  ..., 0.0703, 0.0996, 0.0825]],
        [[0.0594, 0.1373, 0.8611,  ..., 0.9087, 0.0165, 0.0446],
         [0.0594, 0.1373, 0.0463,  ..., 0.0304, 0.0193, 0.0446],
         [0.8217, 0.1389, 0.0463,  ..., 0.0304, 0.0165, 0.8662],
         [0.0594, 0.5866, 0.0463,  ..., 0.0304, 0.9478, 0.0446]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8690, 0.0939, 0.1413,  ..., 0.5326, 0.8259, 0.1185],
         [0.0437, 0.0939, 0.1413,  ..., 0.1425, 0.0580, 0.1185],
         [0.0437, 0.0939, 0.1413,  ..., 0.1425, 0.0580, 0.1185],
         [0.0437, 0.7182, 0.5760,  ..., 0.1825, 0.0580, 0.6445]],
        [[0.4511, 0.0836, 0.1262,  ..., 0.0692, 0.0761, 0.0733],
         [0.1733, 0.0855, 0.1262,  ..., 0.0692, 0.0761, 0.0733],
         [0.1733, 0.0836, 0.1262,  ..., 0.0692, 0.7716, 0.7801],
         [0.2022, 0.7473, 0.6214,  ..., 0.7924, 0.0761, 0.0733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1241, 0.5132, 0.3724,  ..., 0.8285, 0.0861, 0.1041],
         [0.1241, 0.1387, 0.1500,  ..., 0.0572, 0.0861, 0.1041],
         [0.6197, 0.1387, 0.1500,  ..., 0.0572, 0.7416, 0.6877],
         [0.1320, 0.2093, 0.3276,  ..., 0.0572, 0.0861, 0.1041]],
        [[0.0788, 0.1124, 0.9670,  ..., 0.9272, 0.0334, 0.0921],
         [0.0788, 0.1124, 0.0110,  ..., 0.0243, 0.0334, 0.0921],
         [0.7637, 0.1124, 0.0110,  ..., 0.0243, 0.0334, 0.7238],
         [0.0788, 0.6629, 0.0110,  ..., 0.0243, 0.8998, 0.0921]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:26,309 [Process: 0] Synchronize training processes
2024-08-19 13:04:26,309 [Process: 0] Evaluating...
2024-08-19 13:04:26,311 [Process: 0] EPOCH 40:
2024-08-19 13:04:26,313 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:27,289 [Process: 0] Synchronize training processes
2024-08-19 13:04:27,290 [Process: 0] Evaluating...
2024-08-19 13:04:27,291 [Process: 0] EPOCH 41:
2024-08-19 13:04:27,293 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9150, 0.1014, 0.3074,  ..., 0.9385, 0.7262, 0.0585],
         [0.0283, 0.1014, 0.1885,  ..., 0.0214, 0.0913, 0.0585],
         [0.0283, 0.1014, 0.2371,  ..., 0.0201, 0.0913, 0.0585],
         [0.0283, 0.6957, 0.2669,  ..., 0.0201, 0.0913, 0.8244]],
        [[0.5978, 0.1306, 0.0718,  ..., 0.0932, 0.0849, 0.0781],
         [0.1341, 0.1306, 0.0718,  ..., 0.0932, 0.0849, 0.0781],
         [0.1341, 0.1306, 0.0718,  ..., 0.0932, 0.7453, 0.7656],
         [0.1341, 0.6082, 0.7845,  ..., 0.7205, 0.0849, 0.0781]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1279, 0.2696, 0.3535,  ..., 0.8180, 0.0561, 0.0583],
         [0.1279, 0.1431, 0.1530,  ..., 0.0607, 0.0561, 0.0607],
         [0.5935, 0.1431, 0.1530,  ..., 0.0607, 0.8318, 0.8227],
         [0.1506, 0.4442, 0.3405,  ..., 0.0607, 0.0561, 0.0583]],
        [[0.0640, 0.1196, 0.8453,  ..., 0.9262, 0.0759, 0.0453],
         [0.0640, 0.1196, 0.0527,  ..., 0.0246, 0.0759, 0.0453],
         [0.8080, 0.1196, 0.0510,  ..., 0.0246, 0.0759, 0.8640],
         [0.0640, 0.6413, 0.0510,  ..., 0.0246, 0.7724, 0.0453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8397, 0.0983, 0.0906,  ..., 0.7156, 0.7415, 0.1250],
         [0.0534, 0.0983, 0.0906,  ..., 0.0948, 0.0862, 0.1250],
         [0.0534, 0.0983, 0.0906,  ..., 0.0948, 0.0862, 0.1250],
         [0.0534, 0.7050, 0.7281,  ..., 0.0948, 0.0862, 0.6251]],
        [[0.5871, 0.0348, 0.0543,  ..., 0.1712, 0.0603, 0.0640],
         [0.1375, 0.0348, 0.0543,  ..., 0.1712, 0.0603, 0.0640],
         [0.1379, 0.0348, 0.0543,  ..., 0.2031, 0.8190, 0.8079],
         [0.1375, 0.8956, 0.8371,  ..., 0.4545, 0.0603, 0.0640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1356, 0.4945, 0.5497,  ..., 0.7408, 0.0687, 0.0750],
         [0.1356, 0.1463, 0.1291,  ..., 0.0864, 0.0687, 0.0750],
         [0.5411, 0.1463, 0.1291,  ..., 0.0864, 0.7939, 0.7751],
         [0.1877, 0.2130, 0.1921,  ..., 0.0864, 0.0687, 0.0750]],
        [[0.0650, 0.0798, 0.9339,  ..., 0.7086, 0.0333, 0.0626],
         [0.0678, 0.0798, 0.0220,  ..., 0.1002, 0.0333, 0.0626],
         [0.8022, 0.0798, 0.0220,  ..., 0.0956, 0.0333, 0.8123],
         [0.0650, 0.7606, 0.0220,  ..., 0.0956, 0.9001, 0.0626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:04:28,265 [Process: 0] Synchronize training processes
2024-08-19 13:04:28,265 [Process: 0] Evaluating...
2024-08-19 13:04:28,541 [Process: 0] EPOCH 42:
2024-08-19 13:04:28,544 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:29,520 [Process: 0] Synchronize training processes
2024-08-19 13:04:29,521 [Process: 0] Evaluating...
2024-08-19 13:04:29,522 [Process: 0] EPOCH 43:
2024-08-19 13:04:29,524 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7860, 0.1455, 0.0971,  ..., 0.7962, 0.7613, 0.2412],
         [0.0698, 0.1455, 0.0971,  ..., 0.0679, 0.0796, 0.1823],
         [0.0744, 0.1739, 0.0971,  ..., 0.0679, 0.0796, 0.2040],
         [0.0698, 0.5350, 0.7087,  ..., 0.0679, 0.0796, 0.3725]],
        [[0.7621, 0.0814, 0.0881,  ..., 0.0598, 0.0847, 0.1040],
         [0.0793, 0.0814, 0.0881,  ..., 0.0598, 0.0847, 0.1040],
         [0.0793, 0.0814, 0.0881,  ..., 0.0598, 0.7459, 0.6881],
         [0.0793, 0.7559, 0.7358,  ..., 0.8206, 0.0847, 0.1040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1323, 0.4924, 0.3979,  ..., 0.8219, 0.1126, 0.0603],
         [0.1323, 0.1468, 0.1650,  ..., 0.0594, 0.1126, 0.0603],
         [0.5944, 0.1468, 0.1650,  ..., 0.0594, 0.6621, 0.8192],
         [0.1410, 0.2140, 0.2720,  ..., 0.0594, 0.1126, 0.0603]],
        [[0.0541, 0.0837, 0.9044,  ..., 0.8739, 0.0981, 0.0544],
         [0.0541, 0.0837, 0.0319,  ..., 0.0427, 0.0981, 0.0722],
         [0.8377, 0.0837, 0.0319,  ..., 0.0417, 0.0981, 0.8189],
         [0.0541, 0.7490, 0.0319,  ..., 0.0417, 0.7058, 0.0544]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9279, 0.1009, 0.0823,  ..., 0.8121, 0.6551, 0.2476],
         [0.0240, 0.1009, 0.0823,  ..., 0.0626, 0.1135, 0.1824],
         [0.0240, 0.1009, 0.0823,  ..., 0.0626, 0.1180, 0.2333],
         [0.0240, 0.6974, 0.7530,  ..., 0.0626, 0.1135, 0.3367]],
        [[0.5311, 0.1694, 0.0551,  ..., 0.0975, 0.0743, 0.1584],
         [0.1460, 0.1525, 0.0551,  ..., 0.0975, 0.0743, 0.1498],
         [0.1768, 0.1525, 0.0551,  ..., 0.0975, 0.7771, 0.5384],
         [0.1460, 0.5256, 0.8347,  ..., 0.7074, 0.0743, 0.1534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1410, 0.2886, 0.5026,  ..., 0.8711, 0.0652, 0.0372],
         [0.1410, 0.1605, 0.1559,  ..., 0.0453, 0.0652, 0.0372],
         [0.5346, 0.1605, 0.1559,  ..., 0.0418, 0.8044, 0.8883],
         [0.1834, 0.3903, 0.1855,  ..., 0.0418, 0.0652, 0.0372]],
        [[0.0462, 0.0461, 0.9580,  ..., 0.8623, 0.0555, 0.0443],
         [0.0462, 0.0461, 0.0140,  ..., 0.0477, 0.0555, 0.0443],
         [0.8614, 0.0461, 0.0140,  ..., 0.0450, 0.0555, 0.8670],
         [0.0462, 0.8618, 0.0140,  ..., 0.0450, 0.8334, 0.0443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:30,495 [Process: 0] Synchronize training processes
2024-08-19 13:04:30,495 [Process: 0] Evaluating...
2024-08-19 13:04:30,497 [Process: 0] EPOCH 44:
2024-08-19 13:04:30,499 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:31,471 [Process: 0] Synchronize training processes
2024-08-19 13:04:31,472 [Process: 0] Evaluating...
2024-08-19 13:04:31,474 [Process: 0] EPOCH 45:
2024-08-19 13:04:31,475 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9648, 0.1421, 0.0628,  ..., 0.8608, 0.7500, 0.2129],
         [0.0117, 0.1421, 0.0628,  ..., 0.0502, 0.0857, 0.1762],
         [0.0117, 0.1442, 0.0628,  ..., 0.0445, 0.0821, 0.1762],
         [0.0117, 0.5716, 0.8115,  ..., 0.0445, 0.0821, 0.4346]],
        [[0.4817, 0.0729, 0.0808,  ..., 0.0637, 0.0243, 0.0184],
         [0.1606, 0.0729, 0.0808,  ..., 0.0637, 0.0243, 0.0184],
         [0.1621, 0.0729, 0.0808,  ..., 0.0637, 0.9272, 0.9448],
         [0.1957, 0.7814, 0.7577,  ..., 0.8090, 0.0243, 0.0184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0600, 0.2756, 0.8069,  ..., 0.8968, 0.0484, 0.0356],
         [0.0600, 0.1388, 0.0644,  ..., 0.0351, 0.0484, 0.0356],
         [0.8200, 0.1388, 0.0644,  ..., 0.0340, 0.8547, 0.8933],
         [0.0600, 0.4467, 0.0644,  ..., 0.0340, 0.0484, 0.0356]],
        [[0.0701, 0.0412, 0.9488,  ..., 0.9322, 0.0445, 0.0385],
         [0.0701, 0.0412, 0.0206,  ..., 0.0270, 0.0445, 0.0385],
         [0.7896, 0.0412, 0.0153,  ..., 0.0204, 0.0445, 0.8845],
         [0.0701, 0.8765, 0.0153,  ..., 0.0204, 0.8664, 0.0385]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8980, 0.1303, 0.0788,  ..., 0.9620, 0.5606, 0.2009],
         [0.0340, 0.1303, 0.0788,  ..., 0.0131, 0.1422, 0.1727],
         [0.0340, 0.1303, 0.0788,  ..., 0.0124, 0.1422, 0.1767],
         [0.0340, 0.6092, 0.7637,  ..., 0.0124, 0.1551, 0.4497]],
        [[0.5767, 0.0942, 0.0646,  ..., 0.0926, 0.0212, 0.0421],
         [0.1419, 0.0942, 0.0646,  ..., 0.0926, 0.0212, 0.0421],
         [0.1407, 0.0942, 0.0646,  ..., 0.0926, 0.9365, 0.8737],
         [0.1407, 0.7174, 0.8062,  ..., 0.7221, 0.0212, 0.0421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0735, 0.3376, 0.5859,  ..., 0.8907, 0.0774, 0.0669],
         [0.0735, 0.1549, 0.1118,  ..., 0.0364, 0.0774, 0.0669],
         [0.7795, 0.1512, 0.1118,  ..., 0.0364, 0.7678, 0.7992],
         [0.0735, 0.3563, 0.1905,  ..., 0.0364, 0.0774, 0.0669]],
        [[0.0532, 0.0902, 0.9644,  ..., 0.9291, 0.0309, 0.0411],
         [0.0532, 0.0902, 0.0119,  ..., 0.0239, 0.0309, 0.0411],
         [0.8405, 0.0902, 0.0119,  ..., 0.0235, 0.0309, 0.8766],
         [0.0532, 0.7294, 0.0119,  ..., 0.0235, 0.9072, 0.0411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:32,448 [Process: 0] Synchronize training processes
2024-08-19 13:04:32,448 [Process: 0] Evaluating...
2024-08-19 13:04:32,450 [Process: 0] EPOCH 46:
2024-08-19 13:04:32,452 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:33,426 [Process: 0] Synchronize training processes
2024-08-19 13:04:33,426 [Process: 0] Evaluating...
2024-08-19 13:04:33,428 [Process: 0] EPOCH 47:
2024-08-19 13:04:33,430 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9491, 0.1094, 0.0667,  ..., 0.9411, 0.3203, 0.1337],
         [0.0170, 0.1094, 0.0667,  ..., 0.0196, 0.1740, 0.1337],
         [0.0170, 0.1252, 0.0667,  ..., 0.0196, 0.1740, 0.1337],
         [0.0170, 0.6561, 0.8000,  ..., 0.0196, 0.3317, 0.5990]],
        [[0.6217, 0.0929, 0.0736,  ..., 0.0692, 0.0849, 0.0663],
         [0.1261, 0.0929, 0.0736,  ..., 0.0692, 0.0849, 0.0663],
         [0.1261, 0.0929, 0.0736,  ..., 0.0692, 0.7454, 0.8010],
         [0.1261, 0.7213, 0.7791,  ..., 0.7924, 0.0849, 0.0663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0689, 0.2034, 0.8056,  ..., 0.8713, 0.0636, 0.0384],
         [0.0689, 0.1318, 0.0648,  ..., 0.0429, 0.0636, 0.0384],
         [0.7933, 0.1257, 0.0648,  ..., 0.0429, 0.8091, 0.8847],
         [0.0689, 0.5391, 0.0648,  ..., 0.0429, 0.0636, 0.0384]],
        [[0.0495, 0.0965, 0.9136,  ..., 0.9080, 0.1102, 0.0387],
         [0.0495, 0.0965, 0.0288,  ..., 0.0307, 0.1102, 0.0387],
         [0.8514, 0.0965, 0.0288,  ..., 0.0307, 0.1102, 0.8838],
         [0.0495, 0.7106, 0.0288,  ..., 0.0307, 0.6695, 0.0387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8901, 0.0931, 0.0731,  ..., 0.8342, 0.6485, 0.1204],
         [0.0366, 0.0931, 0.0731,  ..., 0.0553, 0.1067, 0.1204],
         [0.0366, 0.0931, 0.0731,  ..., 0.0553, 0.1381, 0.1204],
         [0.0366, 0.7207, 0.7808,  ..., 0.0553, 0.1067, 0.6388]],
        [[0.5803, 0.0647, 0.0734,  ..., 0.1599, 0.0784, 0.0413],
         [0.1375, 0.0647, 0.0734,  ..., 0.1599, 0.0784, 0.0413],
         [0.1447, 0.0647, 0.0734,  ..., 0.2445, 0.7647, 0.8761],
         [0.1375, 0.8058, 0.7799,  ..., 0.4357, 0.0784, 0.0413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1110, 0.1367, 0.7657,  ..., 0.8871, 0.0643, 0.0736],
         [0.1110, 0.1415, 0.0781,  ..., 0.0376, 0.0643, 0.0736],
         [0.6406, 0.1367, 0.0781,  ..., 0.0376, 0.8072, 0.7791],
         [0.1374, 0.5851, 0.0781,  ..., 0.0376, 0.0643, 0.0736]],
        [[0.0674, 0.0627, 0.9471,  ..., 0.8972, 0.1902, 0.0555],
         [0.0674, 0.0667, 0.0176,  ..., 0.0343, 0.1488, 0.0555],
         [0.7977, 0.0627, 0.0176,  ..., 0.0343, 0.1387, 0.8335],
         [0.0674, 0.8079, 0.0176,  ..., 0.0343, 0.5223, 0.0555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:34,404 [Process: 0] Synchronize training processes
2024-08-19 13:04:34,405 [Process: 0] Evaluating...
2024-08-19 13:04:34,406 [Process: 0] EPOCH 48:
2024-08-19 13:04:34,408 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:35,383 [Process: 0] Synchronize training processes
2024-08-19 13:04:35,383 [Process: 0] Evaluating...
2024-08-19 13:04:35,385 [Process: 0] EPOCH 49:
2024-08-19 13:04:35,387 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9252, 0.0555, 0.0689,  ..., 0.9023, 0.8752, 0.1234],
         [0.0249, 0.0555, 0.0689,  ..., 0.0326, 0.0416, 0.1234],
         [0.0249, 0.0555, 0.0689,  ..., 0.0326, 0.0416, 0.1234],
         [0.0249, 0.8335, 0.7934,  ..., 0.0326, 0.0416, 0.6297]],
        [[0.6113, 0.0953, 0.1113,  ..., 0.0445, 0.1207, 0.0679],
         [0.1181, 0.0953, 0.1113,  ..., 0.0445, 0.1207, 0.0679],
         [0.1525, 0.0953, 0.1142,  ..., 0.0445, 0.6357, 0.7964],
         [0.1181, 0.7140, 0.6632,  ..., 0.8665, 0.1229, 0.0679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0763, 0.1381, 0.8244,  ..., 0.8911, 0.0797, 0.0390],
         [0.0763, 0.1315, 0.0585,  ..., 0.0363, 0.0797, 0.0390],
         [0.7712, 0.1248, 0.0585,  ..., 0.0363, 0.7609, 0.8829],
         [0.0763, 0.6055, 0.0585,  ..., 0.0363, 0.0797, 0.0390]],
        [[0.0598, 0.0807, 0.9441,  ..., 0.8923, 0.0185, 0.0775],
         [0.0598, 0.0845, 0.0186,  ..., 0.0359, 0.0193, 0.0775],
         [0.8205, 0.0807, 0.0186,  ..., 0.0359, 0.0185, 0.7675],
         [0.0598, 0.7540, 0.0186,  ..., 0.0359, 0.9436, 0.0775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8371, 0.0429, 0.0946,  ..., 0.9012, 0.9040, 0.1031],
         [0.0543, 0.0429, 0.0946,  ..., 0.0329, 0.0320, 0.1051],
         [0.0543, 0.0429, 0.0946,  ..., 0.0329, 0.0320, 0.1031],
         [0.0543, 0.8712, 0.7161,  ..., 0.0329, 0.0320, 0.6888]],
        [[0.8353, 0.0716, 0.0725,  ..., 0.0826, 0.0564, 0.0146],
         [0.0549, 0.0723, 0.0740,  ..., 0.0826, 0.0564, 0.0146],
         [0.0549, 0.0716, 0.0725,  ..., 0.0826, 0.8309, 0.9563],
         [0.0549, 0.7844, 0.7811,  ..., 0.7521, 0.0564, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0974, 0.3235, 0.8096,  ..., 0.9256, 0.0601, 0.0475],
         [0.0974, 0.1699, 0.0635,  ..., 0.0248, 0.0601, 0.0475],
         [0.7078, 0.1559, 0.0635,  ..., 0.0248, 0.8196, 0.8574],
         [0.0974, 0.3506, 0.0635,  ..., 0.0248, 0.0601, 0.0475]],
        [[0.0499, 0.0621, 0.8725,  ..., 0.8169, 0.0095, 0.0612],
         [0.0499, 0.0748, 0.0425,  ..., 0.0630, 0.0113, 0.0612],
         [0.8504, 0.0621, 0.0425,  ..., 0.0600, 0.0095, 0.8163],
         [0.0499, 0.8009, 0.0425,  ..., 0.0600, 0.9698, 0.0612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:36,363 [Process: 0] Synchronize training processes
2024-08-19 13:04:36,363 [Process: 0] Evaluating...
2024-08-19 13:04:36,365 [Process: 0] EPOCH 50:
2024-08-19 13:04:36,366 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:37,340 [Process: 0] Synchronize training processes
2024-08-19 13:04:37,340 [Process: 0] Evaluating...
2024-08-19 13:04:37,342 [Process: 0] EPOCH 51:
2024-08-19 13:04:37,345 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9728, 0.0521, 0.0708,  ..., 0.9489, 0.9107, 0.1559],
         [0.0091, 0.0549, 0.0718,  ..., 0.0170, 0.0298, 0.1591],
         [0.0091, 0.0521, 0.0708,  ..., 0.0170, 0.0298, 0.1755],
         [0.0091, 0.8409, 0.7866,  ..., 0.0170, 0.0298, 0.5095]],
        [[0.7615, 0.0976, 0.0767,  ..., 0.1101, 0.0536, 0.0265],
         [0.0795, 0.0976, 0.0767,  ..., 0.1101, 0.0536, 0.0265],
         [0.0795, 0.0976, 0.0767,  ..., 0.1101, 0.8393, 0.9205],
         [0.0795, 0.7072, 0.7699,  ..., 0.6697, 0.0536, 0.0265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1139, 0.0915, 0.8358,  ..., 0.8814, 0.0764, 0.0680],
         [0.1080, 0.0978, 0.0547,  ..., 0.0395, 0.0764, 0.0680],
         [0.6701, 0.0875, 0.0547,  ..., 0.0395, 0.7709, 0.7960],
         [0.1080, 0.7232, 0.0547,  ..., 0.0395, 0.0764, 0.0680]],
        [[0.0602, 0.0339, 0.9280,  ..., 0.9550, 0.0181, 0.0509],
         [0.0602, 0.0339, 0.0240,  ..., 0.0150, 0.0181, 0.0509],
         [0.8195, 0.0339, 0.0240,  ..., 0.0150, 0.0181, 0.8472],
         [0.0602, 0.8982, 0.0240,  ..., 0.0150, 0.9458, 0.0509]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9571, 0.0933, 0.0634,  ..., 0.8583, 0.8146, 0.1289],
         [0.0143, 0.0933, 0.0634,  ..., 0.0472, 0.0618, 0.1289],
         [0.0143, 0.0933, 0.0634,  ..., 0.0472, 0.0618, 0.1289],
         [0.0143, 0.7200, 0.8097,  ..., 0.0472, 0.0618, 0.6133]],
        [[0.7412, 0.0935, 0.0301,  ..., 0.0710, 0.0246, 0.0776],
         [0.0863, 0.0935, 0.0301,  ..., 0.0710, 0.0246, 0.0776],
         [0.0863, 0.0935, 0.0301,  ..., 0.0710, 0.9262, 0.7672],
         [0.0863, 0.7196, 0.9097,  ..., 0.7869, 0.0246, 0.0776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0808, 0.1803, 0.8980,  ..., 0.9232, 0.0402, 0.0421],
         [0.0808, 0.1468, 0.0340,  ..., 0.0256, 0.0402, 0.0421],
         [0.7577, 0.1169, 0.0340,  ..., 0.0256, 0.8794, 0.8736],
         [0.0808, 0.5560, 0.0340,  ..., 0.0256, 0.0402, 0.0421]],
        [[0.0439, 0.1040, 0.9722,  ..., 0.9737, 0.0457, 0.0428],
         [0.0439, 0.1040, 0.0093,  ..., 0.0088, 0.0505, 0.0428],
         [0.8684, 0.1040, 0.0093,  ..., 0.0088, 0.0457, 0.8716],
         [0.0439, 0.6881, 0.0093,  ..., 0.0088, 0.8581, 0.0428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:04:38,318 [Process: 0] Synchronize training processes
2024-08-19 13:04:38,318 [Process: 0] Evaluating...
2024-08-19 13:04:38,592 [Process: 0] EPOCH 52:
2024-08-19 13:04:38,595 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:39,574 [Process: 0] Synchronize training processes
2024-08-19 13:04:39,575 [Process: 0] Evaluating...
2024-08-19 13:04:39,576 [Process: 0] EPOCH 53:
2024-08-19 13:04:39,578 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9072, 0.1273, 0.0505,  ..., 0.9251, 0.9148, 0.1626],
         [0.0309, 0.1345, 0.0505,  ..., 0.0250, 0.0284, 0.1639],
         [0.0309, 0.1273, 0.0505,  ..., 0.0250, 0.0284, 0.1942],
         [0.0309, 0.6110, 0.8484,  ..., 0.0250, 0.0284, 0.4793]],
        [[0.7148, 0.1229, 0.0325,  ..., 0.0936, 0.0378, 0.0764],
         [0.0916, 0.1229, 0.0325,  ..., 0.0936, 0.0378, 0.0764],
         [0.1020, 0.1229, 0.0325,  ..., 0.0936, 0.8866, 0.7707],
         [0.0916, 0.6312, 0.9026,  ..., 0.7192, 0.0378, 0.0764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1009, 0.0979, 0.8537,  ..., 0.9404, 0.0511, 0.0580],
         [0.1009, 0.0979, 0.0488,  ..., 0.0224, 0.0511, 0.0580],
         [0.6964, 0.0979, 0.0488,  ..., 0.0186, 0.8468, 0.8260],
         [0.1019, 0.7062, 0.0488,  ..., 0.0186, 0.0511, 0.0580]],
        [[0.0636, 0.0628, 0.9521,  ..., 0.9015, 0.4034, 0.0561],
         [0.0636, 0.0628, 0.0160,  ..., 0.0330, 0.1821, 0.0561],
         [0.8091, 0.0628, 0.0160,  ..., 0.0328, 0.1451, 0.8316],
         [0.0636, 0.8116, 0.0160,  ..., 0.0328, 0.2693, 0.0561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9251, 0.0971, 0.0738,  ..., 0.9151, 0.9339, 0.1009],
         [0.0280, 0.0971, 0.0738,  ..., 0.0312, 0.0220, 0.1009],
         [0.0234, 0.0971, 0.0738,  ..., 0.0269, 0.0220, 0.1009],
         [0.0234, 0.7087, 0.7786,  ..., 0.0269, 0.0220, 0.6974]],
        [[0.6860, 0.0650, 0.1068,  ..., 0.0689, 0.0826, 0.0487],
         [0.1153, 0.0650, 0.1078,  ..., 0.0689, 0.0826, 0.0487],
         [0.0994, 0.0650, 0.1068,  ..., 0.0689, 0.7523, 0.8539],
         [0.0994, 0.8051, 0.6785,  ..., 0.7933, 0.0826, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0730, 0.0232, 0.9584,  ..., 0.9461, 0.0641, 0.0611],
         [0.0730, 0.0232, 0.0139,  ..., 0.0180, 0.0641, 0.0611],
         [0.7811, 0.0232, 0.0139,  ..., 0.0180, 0.8076, 0.8166],
         [0.0730, 0.9305, 0.0139,  ..., 0.0180, 0.0641, 0.0611]],
        [[0.0599, 0.0559, 0.7384,  ..., 0.9342, 0.0471, 0.0566],
         [0.0599, 0.0559, 0.0904,  ..., 0.0219, 0.0523, 0.0566],
         [0.8204, 0.0559, 0.0856,  ..., 0.0219, 0.0471, 0.8302],
         [0.0599, 0.8323, 0.0856,  ..., 0.0219, 0.8535, 0.0566]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:40,550 [Process: 0] Synchronize training processes
2024-08-19 13:04:40,551 [Process: 0] Evaluating...
2024-08-19 13:04:40,553 [Process: 0] EPOCH 54:
2024-08-19 13:04:40,554 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:41,569 [Process: 0] Synchronize training processes
2024-08-19 13:04:41,569 [Process: 0] Evaluating...
2024-08-19 13:04:41,571 [Process: 0] EPOCH 55:
2024-08-19 13:04:41,573 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9635, 0.0506, 0.0440,  ..., 0.8937, 0.6282, 0.1357],
         [0.0122, 0.0506, 0.0440,  ..., 0.0354, 0.1140, 0.1409],
         [0.0122, 0.0506, 0.0440,  ..., 0.0354, 0.1439, 0.1614],
         [0.0122, 0.8483, 0.8681,  ..., 0.0354, 0.1140, 0.5620]],
        [[0.8526, 0.0789, 0.0821,  ..., 0.0932, 0.0177, 0.0242],
         [0.0491, 0.0789, 0.0821,  ..., 0.0932, 0.0177, 0.0242],
         [0.0491, 0.0789, 0.0893,  ..., 0.0932, 0.9470, 0.9274],
         [0.0491, 0.7633, 0.7464,  ..., 0.7205, 0.0177, 0.0242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0860, 0.0207, 0.9309,  ..., 0.9744, 0.0419, 0.0502],
         [0.0860, 0.0207, 0.0230,  ..., 0.0085, 0.0419, 0.0502],
         [0.7421, 0.0207, 0.0230,  ..., 0.0085, 0.8742, 0.8493],
         [0.0860, 0.9379, 0.0230,  ..., 0.0085, 0.0419, 0.0502]],
        [[0.0583, 0.0855, 0.9556,  ..., 0.9041, 0.0602, 0.0609],
         [0.0583, 0.0920, 0.0163,  ..., 0.0320, 0.0602, 0.0609],
         [0.8250, 0.0855, 0.0141,  ..., 0.0320, 0.0602, 0.8173],
         [0.0583, 0.7371, 0.0141,  ..., 0.0320, 0.8195, 0.0609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9463, 0.1837, 0.0267,  ..., 0.9367, 0.4150, 0.1614],
         [0.0179, 0.1945, 0.0267,  ..., 0.0211, 0.2150, 0.2043],
         [0.0179, 0.1471, 0.0267,  ..., 0.0211, 0.1852, 0.1815],
         [0.0179, 0.4747, 0.9200,  ..., 0.0211, 0.1849, 0.4529]],
        [[0.9645, 0.0420, 0.0469,  ..., 0.0561, 0.0538, 0.0188],
         [0.0118, 0.0420, 0.0469,  ..., 0.0561, 0.0538, 0.0188],
         [0.0118, 0.0420, 0.0469,  ..., 0.0561, 0.8385, 0.9436],
         [0.0118, 0.8741, 0.8592,  ..., 0.8316, 0.0538, 0.0188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0943, 0.0167, 0.8957,  ..., 0.9281, 0.0884, 0.0669],
         [0.0943, 0.0167, 0.0348,  ..., 0.0240, 0.0884, 0.0669],
         [0.7151, 0.0167, 0.0348,  ..., 0.0240, 0.7348, 0.7993],
         [0.0963, 0.9499, 0.0348,  ..., 0.0240, 0.0884, 0.0669]],
        [[0.0657, 0.0365, 0.9800,  ..., 0.9634, 0.0436, 0.0391],
         [0.0657, 0.0365, 0.0067,  ..., 0.0122, 0.0468, 0.0391],
         [0.8030, 0.0365, 0.0067,  ..., 0.0122, 0.0436, 0.8828],
         [0.0657, 0.8906, 0.0067,  ..., 0.0122, 0.8660, 0.0391]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:42,610 [Process: 0] Synchronize training processes
2024-08-19 13:04:42,610 [Process: 0] Evaluating...
2024-08-19 13:04:42,612 [Process: 0] EPOCH 56:
2024-08-19 13:04:42,614 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:43,590 [Process: 0] Synchronize training processes
2024-08-19 13:04:43,590 [Process: 0] Evaluating...
2024-08-19 13:04:43,592 [Process: 0] EPOCH 57:
2024-08-19 13:04:43,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7896, 0.0528, 0.0675,  ..., 0.9427, 0.9696, 0.1380],
         [0.0701, 0.0528, 0.0675,  ..., 0.0191, 0.0101, 0.1764],
         [0.0701, 0.0528, 0.0675,  ..., 0.0191, 0.0101, 0.1898],
         [0.0701, 0.8416, 0.7974,  ..., 0.0191, 0.0101, 0.4959]],
        [[0.9168, 0.0904, 0.0377,  ..., 0.1211, 0.0142, 0.0455],
         [0.0282, 0.0960, 0.0377,  ..., 0.1211, 0.0142, 0.0455],
         [0.0275, 0.0904, 0.0377,  ..., 0.1850, 0.9574, 0.8636],
         [0.0275, 0.7233, 0.8869,  ..., 0.5728, 0.0142, 0.0455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0733, 0.0112, 0.9684,  ..., 0.9477, 0.0342, 0.0621],
         [0.0733, 0.0112, 0.0105,  ..., 0.0174, 0.0342, 0.0621],
         [0.7802, 0.0112, 0.0105,  ..., 0.0174, 0.8973, 0.8138],
         [0.0733, 0.9664, 0.0105,  ..., 0.0174, 0.0342, 0.0621]],
        [[0.0523, 0.0451, 0.9902,  ..., 0.9865, 0.0973, 0.0466],
         [0.0523, 0.0494, 0.0033,  ..., 0.0045, 0.1293, 0.0466],
         [0.8432, 0.0451, 0.0033,  ..., 0.0045, 0.0973, 0.8602],
         [0.0523, 0.8604, 0.0033,  ..., 0.0045, 0.6761, 0.0466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9621, 0.0369, 0.0490,  ..., 0.9275, 0.9162, 0.0954],
         [0.0131, 0.0369, 0.0490,  ..., 0.0242, 0.0279, 0.1016],
         [0.0124, 0.0369, 0.0490,  ..., 0.0242, 0.0279, 0.0971],
         [0.0124, 0.8893, 0.8530,  ..., 0.0242, 0.0279, 0.7059]],
        [[0.9403, 0.1055, 0.0263,  ..., 0.0862, 0.1326, 0.0362],
         [0.0201, 0.1376, 0.0263,  ..., 0.0944, 0.1499, 0.0362],
         [0.0198, 0.1055, 0.0263,  ..., 0.0862, 0.5850, 0.8913],
         [0.0198, 0.6513, 0.9211,  ..., 0.7332, 0.1326, 0.0362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0803, 0.0249, 0.9078,  ..., 0.8941, 0.0285, 0.0525],
         [0.0803, 0.0249, 0.0307,  ..., 0.0425, 0.0285, 0.0525],
         [0.7586, 0.0249, 0.0307,  ..., 0.0317, 0.9144, 0.8426],
         [0.0807, 0.9253, 0.0307,  ..., 0.0317, 0.0285, 0.0525]],
        [[0.0343, 0.0138, 0.9709,  ..., 0.9619, 0.0159, 0.0612],
         [0.0343, 0.0138, 0.0097,  ..., 0.0127, 0.0159, 0.0612],
         [0.8970, 0.0138, 0.0097,  ..., 0.0127, 0.0159, 0.8165],
         [0.0343, 0.9586, 0.0097,  ..., 0.0127, 0.9524, 0.0612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:44,568 [Process: 0] Synchronize training processes
2024-08-19 13:04:44,568 [Process: 0] Evaluating...
2024-08-19 13:04:44,570 [Process: 0] EPOCH 58:
2024-08-19 13:04:44,572 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:45,551 [Process: 0] Synchronize training processes
2024-08-19 13:04:45,552 [Process: 0] Evaluating...
2024-08-19 13:04:45,553 [Process: 0] EPOCH 59:
2024-08-19 13:04:45,555 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8763, 0.0448, 0.0130,  ..., 0.9369, 0.8624, 0.1422],
         [0.0449, 0.0476, 0.0130,  ..., 0.0210, 0.0459, 0.2302],
         [0.0394, 0.0448, 0.0130,  ..., 0.0210, 0.0459, 0.1547],
         [0.0394, 0.8627, 0.9611,  ..., 0.0210, 0.0459, 0.4729]],
        [[0.6835, 0.0392, 0.0635,  ..., 0.0422, 0.0591, 0.0244],
         [0.1214, 0.0392, 0.0682,  ..., 0.0422, 0.0591, 0.0244],
         [0.0975, 0.0392, 0.0635,  ..., 0.0422, 0.8227, 0.9268],
         [0.0975, 0.8824, 0.8049,  ..., 0.8733, 0.0591, 0.0244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1121, 0.0053, 0.9915,  ..., 0.9465, 0.0249, 0.0274],
         [0.1427, 0.0053, 0.0028,  ..., 0.0190, 0.0249, 0.0274],
         [0.6330, 0.0053, 0.0028,  ..., 0.0172, 0.9252, 0.9179],
         [0.1121, 0.9841, 0.0028,  ..., 0.0172, 0.0249, 0.0274]],
        [[0.0688, 0.0056, 0.9147,  ..., 0.1062, 0.0214, 0.0403],
         [0.0688, 0.0056, 0.0304,  ..., 0.2519, 0.0214, 0.0403],
         [0.7936, 0.0056, 0.0274,  ..., 0.1062, 0.0214, 0.8790],
         [0.0688, 0.9832, 0.0274,  ..., 0.5358, 0.9357, 0.0403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8762, 0.0403, 0.0267,  ..., 0.9311, 0.9122, 0.1241],
         [0.0413, 0.0403, 0.0267,  ..., 0.0230, 0.0293, 0.1283],
         [0.0413, 0.0403, 0.0267,  ..., 0.0230, 0.0293, 0.5634],
         [0.0413, 0.8792, 0.9199,  ..., 0.0230, 0.0293, 0.1841]],
        [[0.5137, 0.0820, 0.0205,  ..., 0.0215, 0.0822, 0.0951],
         [0.2712, 0.0909, 0.0205,  ..., 0.0215, 0.0911, 0.0951],
         [0.1075, 0.0820, 0.0205,  ..., 0.0215, 0.7445, 0.6371],
         [0.1075, 0.7452, 0.9384,  ..., 0.9354, 0.0822, 0.1727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0870, 0.0340, 0.9457,  ..., 0.9558, 0.0298, 0.0284],
         [0.1143, 0.0340, 0.0212,  ..., 0.0147, 0.0298, 0.0284],
         [0.7118, 0.0340, 0.0165,  ..., 0.0147, 0.9105, 0.9149],
         [0.0870, 0.8981, 0.0165,  ..., 0.0147, 0.0298, 0.0284]],
        [[0.0869, 0.0171, 0.9721,  ..., 0.7411, 0.0105, 0.0489],
         [0.0869, 0.0171, 0.0093,  ..., 0.1253, 0.0105, 0.0489],
         [0.7394, 0.0171, 0.0093,  ..., 0.0668, 0.0105, 0.8532],
         [0.0869, 0.9486, 0.0093,  ..., 0.0668, 0.9685, 0.0489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:46,528 [Process: 0] Synchronize training processes
2024-08-19 13:04:46,528 [Process: 0] Evaluating...
2024-08-19 13:04:46,530 [Process: 0] EPOCH 60:
2024-08-19 13:04:46,532 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:47,510 [Process: 0] Synchronize training processes
2024-08-19 13:04:47,510 [Process: 0] Evaluating...
2024-08-19 13:04:47,512 [Process: 0] EPOCH 61:
2024-08-19 13:04:47,514 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9651, 0.0621, 0.0348,  ..., 0.9617, 0.9110, 0.1475],
         [0.0116, 0.0923, 0.0348,  ..., 0.0128, 0.0297, 0.2235],
         [0.0116, 0.0621, 0.0348,  ..., 0.0128, 0.0297, 0.3204],
         [0.0116, 0.7835, 0.8955,  ..., 0.0128, 0.0297, 0.3086]],
        [[0.7475, 0.0747, 0.1079,  ..., 0.1047, 0.0281, 0.0360],
         [0.1124, 0.1011, 0.1420,  ..., 0.1232, 0.0281, 0.0360],
         [0.0701, 0.0747, 0.0983,  ..., 0.6674, 0.9156, 0.8919],
         [0.0701, 0.7496, 0.6518,  ..., 0.1047, 0.0281, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0787, 0.0197, 0.9859,  ..., 0.9374, 0.0516, 0.0552],
         [0.0787, 0.0197, 0.0047,  ..., 0.0222, 0.0516, 0.0552],
         [0.7586, 0.0197, 0.0047,  ..., 0.0202, 0.8452, 0.8343],
         [0.0840, 0.9409, 0.0047,  ..., 0.0202, 0.0516, 0.0552]],
        [[0.0792, 0.0084, 0.9858,  ..., 0.8898, 0.0494, 0.0407],
         [0.0792, 0.0084, 0.0047,  ..., 0.0395, 0.0541, 0.0407],
         [0.7565, 0.0084, 0.0047,  ..., 0.0353, 0.0494, 0.8778],
         [0.0851, 0.9748, 0.0047,  ..., 0.0353, 0.8471, 0.0407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9246, 0.0570, 0.0223,  ..., 0.9308, 0.1192, 0.1088],
         [0.0251, 0.0570, 0.0223,  ..., 0.0231, 0.2301, 0.2003],
         [0.0251, 0.0570, 0.0223,  ..., 0.0231, 0.1192, 0.1088],
         [0.0251, 0.8291, 0.9331,  ..., 0.0231, 0.5316, 0.5822]],
        [[0.9379, 0.0512, 0.0467,  ..., 0.0976, 0.0427, 0.0664],
         [0.0214, 0.0512, 0.0467,  ..., 0.1249, 0.0427, 0.0664],
         [0.0204, 0.0512, 0.0467,  ..., 0.1143, 0.8719, 0.8008],
         [0.0204, 0.8463, 0.8599,  ..., 0.6632, 0.0427, 0.0664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0620, 0.0325, 0.9689,  ..., 0.9487, 0.0402, 0.0344],
         [0.0620, 0.0325, 0.0104,  ..., 0.0171, 0.0402, 0.0344],
         [0.8139, 0.0325, 0.0104,  ..., 0.0171, 0.8793, 0.8969],
         [0.0620, 0.9024, 0.0104,  ..., 0.0171, 0.0402, 0.0344]],
        [[0.0863, 0.0286, 0.9825,  ..., 0.9037, 0.0241, 0.0360],
         [0.0929, 0.0286, 0.0058,  ..., 0.0305, 0.0241, 0.0360],
         [0.7345, 0.0286, 0.0058,  ..., 0.0305, 0.0241, 0.8920],
         [0.0863, 0.9143, 0.0058,  ..., 0.0352, 0.9278, 0.0360]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:04:48,487 [Process: 0] Synchronize training processes
2024-08-19 13:04:48,488 [Process: 0] Evaluating...
2024-08-19 13:04:48,764 [Process: 0] EPOCH 62:
2024-08-19 13:04:48,767 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:49,740 [Process: 0] Synchronize training processes
2024-08-19 13:04:49,740 [Process: 0] Evaluating...
2024-08-19 13:04:49,742 [Process: 0] EPOCH 63:
2024-08-19 13:04:49,744 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9855, 0.0543, 0.0717,  ..., 0.9418, 0.0620, 0.1101],
         [0.0050, 0.0423, 0.1269,  ..., 0.0202, 0.0620, 0.1966],
         [0.0048, 0.0423, 0.0717,  ..., 0.0190, 0.0620, 0.1101],
         [0.0048, 0.8612, 0.7297,  ..., 0.0190, 0.8140, 0.5831]],
        [[0.9665, 0.0733, 0.0595,  ..., 0.0423, 0.0800, 0.0153],
         [0.0120, 0.0818, 0.0595,  ..., 0.0423, 0.0800, 0.0153],
         [0.0107, 0.0733, 0.0595,  ..., 0.0423, 0.7599, 0.9542],
         [0.0107, 0.7716, 0.8216,  ..., 0.8730, 0.0800, 0.0153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0736, 0.1365, 0.9851,  ..., 0.8523, 0.0479, 0.0666],
         [0.0736, 0.1738, 0.0050,  ..., 0.0500, 0.0479, 0.0666],
         [0.7670, 0.1106, 0.0050,  ..., 0.0488, 0.8563, 0.8001],
         [0.0858, 0.5791, 0.0050,  ..., 0.0488, 0.0479, 0.0666]],
        [[0.0766, 0.0431, 0.9647,  ..., 0.9510, 0.0192, 0.0235],
         [0.0766, 0.0431, 0.0118,  ..., 0.0163, 0.0192, 0.0235],
         [0.7534, 0.0431, 0.0118,  ..., 0.0163, 0.0192, 0.9294],
         [0.0934, 0.8708, 0.0118,  ..., 0.0163, 0.9425, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9814, 0.0681, 0.0432,  ..., 0.9324, 0.0975, 0.1472],
         [0.0062, 0.0785, 0.0432,  ..., 0.0232, 0.1147, 0.1762],
         [0.0062, 0.0681, 0.0432,  ..., 0.0222, 0.0959, 0.1198],
         [0.0062, 0.7854, 0.8704,  ..., 0.0222, 0.6920, 0.5568]],
        [[0.8090, 0.0810, 0.0773,  ..., 0.0400, 0.0894, 0.0138],
         [0.0911, 0.0810, 0.0773,  ..., 0.0400, 0.0894, 0.0138],
         [0.0499, 0.0810, 0.0773,  ..., 0.0400, 0.7318, 0.9587],
         [0.0499, 0.7571, 0.7682,  ..., 0.8800, 0.0894, 0.0138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:04:50,717 [Process: 0] Synchronize training processes
2024-08-19 13:04:50,717 [Process: 0] Evaluating...
2024-08-19 13:04:50,719 [Process: 0] EPOCH 64:
2024-08-19 13:04:50,721 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:51,692 [Process: 0] Synchronize training processes
2024-08-19 13:04:51,692 [Process: 0] Evaluating...
2024-08-19 13:04:51,694 [Process: 0] EPOCH 65:
2024-08-19 13:04:51,696 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0656, 0.0547, 0.8096,  ..., 0.9799, 0.0532, 0.0380],
         [0.0656, 0.0701, 0.0718,  ..., 0.0067, 0.0532, 0.0380],
         [0.8033, 0.0547, 0.0593,  ..., 0.0067, 0.8405, 0.8859],
         [0.0656, 0.8205, 0.0593,  ..., 0.0067, 0.0532, 0.0380]],
        [[0.0461, 0.0044, 0.9410,  ..., 0.9587, 0.0193, 0.0514],
         [0.0461, 0.0044, 0.0290,  ..., 0.0178, 0.0193, 0.0514],
         [0.8617, 0.0044, 0.0150,  ..., 0.0117, 0.0193, 0.8457],
         [0.0461, 0.9869, 0.0150,  ..., 0.0117, 0.9422, 0.0514]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9813, 0.0205, 0.0262,  ..., 0.9382, 0.8976, 0.0727],
         [0.0062, 0.0205, 0.0262,  ..., 0.0239, 0.0364, 0.0727],
         [0.0062, 0.0205, 0.0262,  ..., 0.0190, 0.0330, 0.0727],
         [0.0062, 0.9385, 0.9213,  ..., 0.0190, 0.0330, 0.7819]],
        [[0.9569, 0.1017, 0.0991,  ..., 0.0476, 0.0335, 0.0295],
         [0.0153, 0.1017, 0.0991,  ..., 0.0476, 0.0335, 0.0295],
         [0.0139, 0.1193, 0.1350,  ..., 0.0476, 0.8995, 0.9116],
         [0.0139, 0.6773, 0.6669,  ..., 0.8572, 0.0335, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5098e-02, 5.8519e-02, 9.7877e-01,  ..., 9.7594e-01,
          2.8590e-02, 3.0777e-02],
         [9.5098e-02, 6.8886e-02, 7.0753e-03,  ..., 8.0213e-03,
          2.8590e-02, 3.0777e-02],
         [7.1471e-01, 5.8519e-02, 7.0753e-03,  ..., 8.0213e-03,
          9.1423e-01, 9.0767e-01],
         [9.5098e-02, 8.1408e-01, 7.0753e-03,  ..., 8.0213e-03,
          2.8590e-02, 3.0777e-02]],
        [[4.5138e-02, 7.7185e-04, 9.8679e-01,  ..., 9.2580e-01,
          3.2252e-02, 4.4975e-02],
         [4.5138e-02, 7.7185e-04, 4.4045e-03,  ..., 2.7885e-02,
          3.2252e-02, 4.4975e-02],
         [8.6459e-01, 7.7185e-04, 4.4045e-03,  ..., 2.3156e-02,
          3.2252e-02, 8.6508e-01],
         [4.5138e-02, 9.9768e-01, 4.4045e-03,  ..., 2.3156e-02,
          9.0325e-01, 4.4975e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9924, 0.0407, 0.1173,  ..., 0.9759, 0.9498, 0.1181],
         [0.0025, 0.0407, 0.1410,  ..., 0.0084, 0.0219, 0.1486],
         [0.0025, 0.0407, 0.1173,  ..., 0.0079, 0.0142, 0.1126],
         [0.0025, 0.8780, 0.6243,  ..., 0.0079, 0.0142, 0.6207]],
        [[0.9892, 0.0968, 0.1040,  ..., 0.0313, 0.0165, 0.0531],
         [0.0036, 0.0922, 0.1066,  ..., 0.0313, 0.0165, 0.0531],
         [0.0036, 0.0922, 0.1040,  ..., 0.0313, 0.9505, 0.8406],
         [0.0036, 0.7189, 0.6854,  ..., 0.9062, 0.0165, 0.0531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1494, 0.0190, 0.8750,  ..., 0.8787, 0.0192, 0.0188],
         [0.1877, 0.0190, 0.0517,  ..., 0.0458, 0.0192, 0.0188],
         [0.4769, 0.0190, 0.0367,  ..., 0.0345, 0.9425, 0.9436],
         [0.1860, 0.9429, 0.0367,  ..., 0.0410, 0.0192, 0.0188]],
        [[0.0532, 0.0061, 0.9960,  ..., 0.9740, 0.0317, 0.0437],
         [0.0532, 0.0061, 0.0013,  ..., 0.0087, 0.0300, 0.0437],
         [0.8405, 0.0061, 0.0013,  ..., 0.0087, 0.0300, 0.8690],
         [0.0532, 0.9816, 0.0013,  ..., 0.0087, 0.9083, 0.0437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:52,669 [Process: 0] Synchronize training processes
2024-08-19 13:04:52,669 [Process: 0] Evaluating...
2024-08-19 13:04:52,671 [Process: 0] EPOCH 66:
2024-08-19 13:04:52,673 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:53,648 [Process: 0] Synchronize training processes
2024-08-19 13:04:53,649 [Process: 0] Evaluating...
2024-08-19 13:04:53,650 [Process: 0] EPOCH 67:
2024-08-19 13:04:53,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9942, 0.0188, 0.0556,  ..., 0.8370, 0.9886, 0.1138],
         [0.0019, 0.0188, 0.0556,  ..., 0.0675, 0.0038, 0.1721],
         [0.0019, 0.0188, 0.0556,  ..., 0.0478, 0.0038, 0.1138],
         [0.0019, 0.9437, 0.8331,  ..., 0.0478, 0.0038, 0.6004]],
        [[0.9727, 0.0235, 0.0347,  ..., 0.0191, 0.0124, 0.0524],
         [0.0091, 0.0235, 0.0347,  ..., 0.0191, 0.0124, 0.0524],
         [0.0091, 0.0235, 0.0347,  ..., 0.0191, 0.9628, 0.8428],
         [0.0091, 0.9296, 0.8959,  ..., 0.9426, 0.0124, 0.0524]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0715, 0.0206, 0.9666,  ..., 0.9892, 0.0340, 0.0259],
         [0.0715, 0.0206, 0.0101,  ..., 0.0036, 0.0340, 0.0259],
         [0.7854, 0.0206, 0.0101,  ..., 0.0036, 0.8979, 0.9224],
         [0.0715, 0.9382, 0.0132,  ..., 0.0036, 0.0340, 0.0259]],
        [[0.0772, 0.0144, 0.9103,  ..., 0.9106, 0.0489, 0.0310],
         [0.0772, 0.0144, 0.0299,  ..., 0.0277, 0.0524, 0.0310],
         [0.7684, 0.0144, 0.0299,  ..., 0.0277, 0.0489, 0.9070],
         [0.0772, 0.9568, 0.0299,  ..., 0.0340, 0.8498, 0.0310]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9614, 0.0163, 0.0221,  ..., 0.9081, 0.9466, 0.0725],
         [0.0139, 0.0163, 0.0221,  ..., 0.0402, 0.0178, 0.0889],
         [0.0124, 0.0163, 0.0221,  ..., 0.0258, 0.0178, 0.0725],
         [0.0124, 0.9512, 0.9336,  ..., 0.0258, 0.0178, 0.7662]],
        [[0.9041, 0.0741, 0.0466,  ..., 0.0848, 0.0084, 0.0222],
         [0.0349, 0.0753, 0.0466,  ..., 0.0821, 0.0084, 0.0222],
         [0.0305, 0.0741, 0.0466,  ..., 0.0794, 0.9747, 0.9335],
         [0.0305, 0.7765, 0.8602,  ..., 0.7537, 0.0084, 0.0222]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.0818e-02, 8.5277e-03, 9.8207e-01,  ..., 9.9405e-01,
          3.7040e-02, 4.1671e-02],
         [5.0818e-02, 8.5277e-03, 5.9753e-03,  ..., 1.9827e-03,
          3.7040e-02, 4.1671e-02],
         [8.4755e-01, 8.5277e-03, 5.9753e-03,  ..., 1.9827e-03,
          8.8888e-01, 8.7499e-01],
         [5.0818e-02, 9.7442e-01, 5.9753e-03,  ..., 1.9827e-03,
          3.7040e-02, 4.1671e-02]],
        [[5.9179e-02, 1.5024e-02, 9.9798e-01,  ..., 9.7963e-01,
          8.6891e-03, 6.8682e-02],
         [5.9179e-02, 1.5024e-02, 6.7442e-04,  ..., 6.7908e-03,
          8.6891e-03, 6.8682e-02],
         [8.2246e-01, 1.5024e-02, 6.7442e-04,  ..., 6.7908e-03,
          8.6891e-03, 7.9395e-01],
         [5.9179e-02, 9.5493e-01, 6.7442e-04,  ..., 6.7908e-03,
          9.7393e-01, 6.8682e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:04:54,629 [Process: 0] Synchronize training processes
2024-08-19 13:04:54,629 [Process: 0] Evaluating...
2024-08-19 13:04:54,631 [Process: 0] EPOCH 68:
2024-08-19 13:04:54,633 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:55,607 [Process: 0] Synchronize training processes
2024-08-19 13:04:55,608 [Process: 0] Evaluating...
2024-08-19 13:04:55,610 [Process: 0] EPOCH 69:
2024-08-19 13:04:55,612 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9415, 0.0778, 0.0828,  ..., 0.9246, 0.9197, 0.0892],
         [0.0226, 0.1009, 0.0822,  ..., 0.0236, 0.0340, 0.1102],
         [0.0179, 0.0778, 0.0962,  ..., 0.0282, 0.0232, 0.0892],
         [0.0179, 0.7435, 0.7389,  ..., 0.0236, 0.0232, 0.7114]],
        [[0.9863, 0.0249, 0.0864,  ..., 0.0297, 0.0388, 0.0290],
         [0.0046, 0.0249, 0.0991,  ..., 0.0297, 0.0388, 0.0290],
         [0.0046, 0.0249, 0.0864,  ..., 0.0297, 0.8836, 0.9131],
         [0.0046, 0.9254, 0.7281,  ..., 0.9110, 0.0388, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0836, 0.0046, 0.9660,  ..., 0.9960, 0.0290, 0.0192],
         [0.0883, 0.0046, 0.0102,  ..., 0.0013, 0.0290, 0.0192],
         [0.7446, 0.0046, 0.0102,  ..., 0.0013, 0.9130, 0.9424],
         [0.0836, 0.9863, 0.0137,  ..., 0.0013, 0.0290, 0.0192]],
        [[0.0448, 0.0098, 0.9615,  ..., 0.9700, 0.0083, 0.0813],
         [0.0448, 0.0098, 0.0128,  ..., 0.0100, 0.0083, 0.0817],
         [0.8657, 0.0098, 0.0128,  ..., 0.0100, 0.0083, 0.7557],
         [0.0448, 0.9705, 0.0128,  ..., 0.0100, 0.9750, 0.0813]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9906, 0.0523, 0.1085,  ..., 0.9067, 0.8926, 0.0380],
         [0.0031, 0.0714, 0.1296,  ..., 0.0374, 0.0429, 0.0380],
         [0.0031, 0.0523, 0.1094,  ..., 0.0279, 0.0322, 0.0380],
         [0.0031, 0.8241, 0.6525,  ..., 0.0279, 0.0322, 0.8859]],
        [[0.9275, 0.0463, 0.0370,  ..., 0.0501, 0.0481, 0.0139],
         [0.0267, 0.0463, 0.0370,  ..., 0.0501, 0.0481, 0.0139],
         [0.0229, 0.0463, 0.0370,  ..., 0.0501, 0.8558, 0.9582],
         [0.0229, 0.8610, 0.8891,  ..., 0.8496, 0.0481, 0.0139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0798, 0.0037, 0.9956,  ..., 0.9860, 0.0275, 0.0430],
         [0.0876, 0.0037, 0.0015,  ..., 0.0042, 0.0275, 0.0430],
         [0.7528, 0.0037, 0.0015,  ..., 0.0042, 0.9176, 0.8709],
         [0.0798, 0.9888, 0.0015,  ..., 0.0056, 0.0275, 0.0430]],
        [[0.0492, 0.0369, 0.9747,  ..., 0.9087, 0.0328, 0.0414],
         [0.0492, 0.0386, 0.0084,  ..., 0.0304, 0.0328, 0.0414],
         [0.8523, 0.0369, 0.0084,  ..., 0.0304, 0.0328, 0.8757],
         [0.0492, 0.8876, 0.0084,  ..., 0.0304, 0.9016, 0.0414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:56,585 [Process: 0] Synchronize training processes
2024-08-19 13:04:56,585 [Process: 0] Evaluating...
2024-08-19 13:04:56,587 [Process: 0] EPOCH 70:
2024-08-19 13:04:56,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:57,560 [Process: 0] Synchronize training processes
2024-08-19 13:04:57,561 [Process: 0] Evaluating...
2024-08-19 13:04:57,563 [Process: 0] EPOCH 71:
2024-08-19 13:04:57,564 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9576, 0.0491, 0.0370,  ..., 0.9602, 0.9078, 0.0459],
         [0.0141, 0.0533, 0.0370,  ..., 0.0134, 0.0358, 0.0549],
         [0.0141, 0.0491, 0.0370,  ..., 0.0132, 0.0282, 0.0459],
         [0.0141, 0.8485, 0.8889,  ..., 0.0132, 0.0282, 0.8532]],
        [[0.9371, 0.0335, 0.0629,  ..., 0.0432, 0.0117, 0.0187],
         [0.0241, 0.0335, 0.0754,  ..., 0.0432, 0.0117, 0.0187],
         [0.0194, 0.0335, 0.0629,  ..., 0.0432, 0.9649, 0.9439],
         [0.0194, 0.8995, 0.7989,  ..., 0.8705, 0.0117, 0.0187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0614, 0.0071, 0.9423,  ..., 0.9753, 0.0411, 0.0591],
         [0.0614, 0.0071, 0.0192,  ..., 0.0082, 0.0411, 0.0591],
         [0.8157, 0.0071, 0.0192,  ..., 0.0082, 0.8766, 0.8227],
         [0.0614, 0.9787, 0.0192,  ..., 0.0082, 0.0411, 0.0591]],
        [[0.0686, 0.0055, 0.9326,  ..., 0.9639, 0.0058, 0.0512],
         [0.0686, 0.0055, 0.0265,  ..., 0.0124, 0.0058, 0.0521],
         [0.7941, 0.0055, 0.0205,  ..., 0.0118, 0.0058, 0.8455],
         [0.0686, 0.9834, 0.0205,  ..., 0.0118, 0.9826, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9572, 0.0222, 0.0255,  ..., 0.9827, 0.9767, 0.0655],
         [0.0170, 0.0222, 0.0255,  ..., 0.0058, 0.0078, 0.0844],
         [0.0129, 0.0222, 0.0255,  ..., 0.0058, 0.0078, 0.0655],
         [0.0129, 0.9334, 0.9236,  ..., 0.0058, 0.0078, 0.7846]],
        [[0.7167, 0.0726, 0.0430,  ..., 0.0496, 0.0066, 0.0288],
         [0.1464, 0.0662, 0.0430,  ..., 0.0496, 0.0066, 0.0288],
         [0.0684, 0.0662, 0.0430,  ..., 0.0496, 0.9803, 0.9135],
         [0.0684, 0.7949, 0.8710,  ..., 0.8511, 0.0066, 0.0288]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0323, 0.0400, 0.9964,  ..., 0.9884, 0.0356, 0.0684],
         [0.0323, 0.0257, 0.0012,  ..., 0.0039, 0.0356, 0.0684],
         [0.9032, 0.0257, 0.0012,  ..., 0.0039, 0.8931, 0.7949],
         [0.0323, 0.9086, 0.0012,  ..., 0.0039, 0.0356, 0.0684]],
        [[0.0748, 0.0153, 0.9922,  ..., 0.9497, 0.0068, 0.0245],
         [0.0748, 0.0153, 0.0026,  ..., 0.0168, 0.0068, 0.0245],
         [0.7671, 0.0153, 0.0026,  ..., 0.0168, 0.0068, 0.9266],
         [0.0833, 0.9541, 0.0026,  ..., 0.0168, 0.9795, 0.0245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:04:58,537 [Process: 0] Synchronize training processes
2024-08-19 13:04:58,538 [Process: 0] Evaluating...
2024-08-19 13:04:58,812 [Process: 0] EPOCH 72:
2024-08-19 13:04:58,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:04:59,790 [Process: 0] Synchronize training processes
2024-08-19 13:04:59,791 [Process: 0] Evaluating...
2024-08-19 13:04:59,792 [Process: 0] EPOCH 73:
2024-08-19 13:04:59,794 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9235, 0.0373, 0.0741,  ..., 0.9797, 0.9893, 0.0968],
         [0.0301, 0.0373, 0.0942,  ..., 0.0068, 0.0036, 0.1197],
         [0.0232, 0.0373, 0.0741,  ..., 0.0068, 0.0036, 0.0968],
         [0.0232, 0.8880, 0.7575,  ..., 0.0068, 0.0036, 0.6867]],
        [[0.9771, 0.0176, 0.0546,  ..., 0.0450, 0.0214, 0.0219],
         [0.0076, 0.0176, 0.0499,  ..., 0.0450, 0.0214, 0.0219],
         [0.0076, 0.0176, 0.0499,  ..., 0.0450, 0.9358, 0.9342],
         [0.0076, 0.9472, 0.8455,  ..., 0.8650, 0.0214, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0460, 0.0216, 0.9928,  ..., 0.9843, 0.0291, 0.0406],
         [0.0460, 0.0208, 0.0024,  ..., 0.0052, 0.0291, 0.0406],
         [0.8619, 0.0208, 0.0024,  ..., 0.0052, 0.9127, 0.8781],
         [0.0460, 0.9368, 0.0024,  ..., 0.0052, 0.0291, 0.0406]],
        [[0.0394, 0.0434, 0.9803,  ..., 0.9577, 0.0412, 0.0507],
         [0.0394, 0.0670, 0.0066,  ..., 0.0141, 0.0257, 0.0533],
         [0.8817, 0.0434, 0.0066,  ..., 0.0141, 0.0257, 0.8453],
         [0.0394, 0.8463, 0.0066,  ..., 0.0141, 0.9074, 0.0507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9573, 0.0516, 0.0383,  ..., 0.9576, 0.9369, 0.0913],
         [0.0160, 0.0516, 0.0383,  ..., 0.0143, 0.0234, 0.1491],
         [0.0133, 0.0572, 0.0383,  ..., 0.0141, 0.0199, 0.0913],
         [0.0133, 0.8396, 0.8851,  ..., 0.0141, 0.0199, 0.6683]],
        [[0.9151, 0.0443, 0.0423,  ..., 0.0296, 0.1136, 0.0533],
         [0.0346, 0.0443, 0.0423,  ..., 0.0296, 0.1480, 0.0533],
         [0.0251, 0.0443, 0.0423,  ..., 0.0296, 0.6247, 0.8400],
         [0.0251, 0.8671, 0.8730,  ..., 0.9112, 0.1136, 0.0533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:05:00,768 [Process: 0] Synchronize training processes
2024-08-19 13:05:00,768 [Process: 0] Evaluating...
2024-08-19 13:05:00,770 [Process: 0] EPOCH 74:
2024-08-19 13:05:00,771 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:01,750 [Process: 0] Synchronize training processes
2024-08-19 13:05:01,750 [Process: 0] Evaluating...
2024-08-19 13:05:01,752 [Process: 0] EPOCH 75:
2024-08-19 13:05:01,754 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0774, 0.0061, 0.9925,  ..., 0.9442, 0.0393, 0.0395],
         [0.0774, 0.0061, 0.0025,  ..., 0.0186, 0.0393, 0.0395],
         [0.7236, 0.0061, 0.0025,  ..., 0.0186, 0.8822, 0.8815],
         [0.1215, 0.9817, 0.0025,  ..., 0.0186, 0.0393, 0.0395]],
        [[0.0423, 0.0423, 0.9883,  ..., 0.8964, 0.3190, 0.0232],
         [0.0423, 0.0515, 0.0039,  ..., 0.0345, 0.0790, 0.0232],
         [0.8731, 0.0423, 0.0039,  ..., 0.0345, 0.0731, 0.9303],
         [0.0423, 0.8639, 0.0039,  ..., 0.0345, 0.5289, 0.0232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9784, 0.0170, 0.0441,  ..., 0.9878, 0.9289, 0.0810],
         [0.0072, 0.0170, 0.0441,  ..., 0.0041, 0.0237, 0.0977],
         [0.0072, 0.0170, 0.0473,  ..., 0.0041, 0.0237, 0.0810],
         [0.0072, 0.9491, 0.8644,  ..., 0.0041, 0.0237, 0.7403]],
        [[0.8862, 0.0502, 0.0201,  ..., 0.0428, 0.0313, 0.0411],
         [0.0373, 0.0502, 0.0201,  ..., 0.0428, 0.0313, 0.0411],
         [0.0393, 0.0542, 0.0201,  ..., 0.0428, 0.9062, 0.8767],
         [0.0373, 0.8454, 0.9397,  ..., 0.8717, 0.0313, 0.0411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0747, 0.0542, 0.9636,  ..., 0.9953, 0.0586, 0.0177],
         [0.0747, 0.0304, 0.0121,  ..., 0.0016, 0.0586, 0.0177],
         [0.7592, 0.0304, 0.0121,  ..., 0.0016, 0.8241, 0.9469],
         [0.0914, 0.8849, 0.0121,  ..., 0.0016, 0.0586, 0.0177]],
        [[0.0656, 0.0327, 0.8963,  ..., 0.0057, 0.0033, 0.0558],
         [0.0656, 0.0464, 0.0370,  ..., 0.0057, 0.0033, 0.0558],
         [0.8018, 0.0327, 0.0333,  ..., 0.0057, 0.0033, 0.8319],
         [0.0670, 0.8883, 0.0333,  ..., 0.9830, 0.9900, 0.0565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9180, 0.0276, 0.0110,  ..., 0.9611, 0.8523, 0.1065],
         [0.0414, 0.0276, 0.0110,  ..., 0.0130, 0.0553, 0.1527],
         [0.0203, 0.0276, 0.0110,  ..., 0.0130, 0.0462, 0.1065],
         [0.0203, 0.9172, 0.9670,  ..., 0.0130, 0.0462, 0.6344]],
        [[0.9345, 0.0264, 0.0263,  ..., 0.0435, 0.0633, 0.0381],
         [0.0219, 0.0264, 0.0263,  ..., 0.0435, 0.0633, 0.0381],
         [0.0218, 0.0264, 0.0263,  ..., 0.0452, 0.8102, 0.8856],
         [0.0218, 0.9208, 0.9212,  ..., 0.8677, 0.0633, 0.0381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1323, 0.0098, 0.9969,  ..., 0.9955, 0.0171, 0.0205],
         [0.2198, 0.0098, 0.0010,  ..., 0.0015, 0.0171, 0.0205],
         [0.4014, 0.0098, 0.0010,  ..., 0.0015, 0.9487, 0.9385],
         [0.2464, 0.9705, 0.0010,  ..., 0.0015, 0.0171, 0.0205]],
        [[0.0970, 0.0103, 0.9962,  ..., 0.0075, 0.0108, 0.0544],
         [0.0970, 0.0103, 0.0013,  ..., 0.0075, 0.0108, 0.0541],
         [0.6310, 0.0103, 0.0013,  ..., 0.0075, 0.0108, 0.8375],
         [0.1750, 0.9690, 0.0013,  ..., 0.9776, 0.9675, 0.0541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:02,730 [Process: 0] Synchronize training processes
2024-08-19 13:05:02,730 [Process: 0] Evaluating...
2024-08-19 13:05:02,732 [Process: 0] EPOCH 76:
2024-08-19 13:05:02,734 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:03,708 [Process: 0] Synchronize training processes
2024-08-19 13:05:03,708 [Process: 0] Evaluating...
2024-08-19 13:05:03,710 [Process: 0] EPOCH 77:
2024-08-19 13:05:03,712 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9508, 0.0189, 0.0227,  ..., 0.9827, 0.7987, 0.0973],
         [0.0196, 0.0189, 0.0227,  ..., 0.0078, 0.0826, 0.1398],
         [0.0148, 0.0189, 0.0227,  ..., 0.0048, 0.0593, 0.0973],
         [0.0148, 0.9434, 0.9318,  ..., 0.0048, 0.0593, 0.6656]],
        [[0.9732, 0.0266, 0.0628,  ..., 0.0473, 0.0271, 0.0255],
         [0.0111, 0.0266, 0.0628,  ..., 0.0473, 0.0271, 0.0255],
         [0.0079, 0.0266, 0.1024,  ..., 0.8581, 0.9188, 0.9234],
         [0.0079, 0.9201, 0.7719,  ..., 0.0473, 0.0271, 0.0255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0569, 0.0252, 0.9720,  ..., 0.9819, 0.0378, 0.0374],
         [0.0569, 0.0269, 0.0110,  ..., 0.0060, 0.0378, 0.0374],
         [0.8254, 0.0252, 0.0085,  ..., 0.0060, 0.8867, 0.8878],
         [0.0607, 0.9226, 0.0085,  ..., 0.0060, 0.0378, 0.0374]],
        [[0.0377, 0.0164, 0.9887,  ..., 0.0047, 0.0069, 0.0372],
         [0.0377, 0.0164, 0.0038,  ..., 0.0047, 0.0069, 0.0372],
         [0.8869, 0.0164, 0.0038,  ..., 0.0047, 0.0069, 0.8883],
         [0.0377, 0.9507, 0.0038,  ..., 0.9858, 0.9793, 0.0372]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9602, 0.0324, 0.0918,  ..., 0.9652, 0.7153, 0.0830],
         [0.0195, 0.0324, 0.1236,  ..., 0.0148, 0.1195, 0.0963],
         [0.0102, 0.0324, 0.0918,  ..., 0.0100, 0.0773, 0.0830],
         [0.0102, 0.9027, 0.6928,  ..., 0.0100, 0.0879, 0.7377]],
        [[0.8320, 0.0619, 0.0187,  ..., 0.0452, 0.0155, 0.0316],
         [0.0948, 0.0619, 0.0187,  ..., 0.0452, 0.0155, 0.0316],
         [0.0366, 0.0714, 0.0187,  ..., 0.0452, 0.9534, 0.9053],
         [0.0366, 0.8049, 0.9440,  ..., 0.8644, 0.0155, 0.0316]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0355, 0.0042, 0.9929,  ..., 0.9835, 0.0413, 0.0535],
         [0.0355, 0.0042, 0.0024,  ..., 0.0055, 0.0413, 0.0535],
         [0.8936, 0.0042, 0.0024,  ..., 0.0055, 0.8760, 0.8395],
         [0.0355, 0.9875, 0.0024,  ..., 0.0055, 0.0413, 0.0535]],
        [[0.0511, 0.0446, 0.9932,  ..., 0.0153, 0.0060, 0.0265],
         [0.0511, 0.0446, 0.0023,  ..., 0.0133, 0.0060, 0.0265],
         [0.8467, 0.0446, 0.0023,  ..., 0.0133, 0.0060, 0.9206],
         [0.0511, 0.8661, 0.0023,  ..., 0.9580, 0.9820, 0.0265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:04,685 [Process: 0] Synchronize training processes
2024-08-19 13:05:04,685 [Process: 0] Evaluating...
2024-08-19 13:05:04,687 [Process: 0] EPOCH 78:
2024-08-19 13:05:04,689 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:05,662 [Process: 0] Synchronize training processes
2024-08-19 13:05:05,662 [Process: 0] Evaluating...
2024-08-19 13:05:05,664 [Process: 0] EPOCH 79:
2024-08-19 13:05:05,666 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9345, 0.0305, 0.0091,  ..., 0.9660, 0.9529, 0.1466],
         [0.0325, 0.0305, 0.0091,  ..., 0.0120, 0.0193, 0.1336],
         [0.0165, 0.0322, 0.0091,  ..., 0.0110, 0.0139, 0.1042],
         [0.0165, 0.9069, 0.9727,  ..., 0.0110, 0.0139, 0.6156]],
        [[0.9763, 0.0162, 0.0317,  ..., 0.0158, 0.0987, 0.0745],
         [0.0079, 0.0162, 0.0317,  ..., 0.0158, 0.0987, 0.0745],
         [0.0079, 0.0162, 0.0317,  ..., 0.0158, 0.7039, 0.0945],
         [0.0079, 0.9513, 0.9048,  ..., 0.9525, 0.0987, 0.7565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0490, 0.0122, 0.9926,  ..., 0.9831, 0.0369, 0.0263],
         [0.0490, 0.0122, 0.0025,  ..., 0.0056, 0.0369, 0.0263],
         [0.8531, 0.0122, 0.0025,  ..., 0.0056, 0.8894, 0.9211],
         [0.0490, 0.9635, 0.0025,  ..., 0.0056, 0.0369, 0.0263]],
        [[0.0208, 0.0038, 0.9849,  ..., 0.0437, 0.0061, 0.0217],
         [0.0208, 0.0038, 0.0049,  ..., 0.0248, 0.0061, 0.0217],
         [0.9376, 0.0038, 0.0049,  ..., 0.0248, 0.0061, 0.9350],
         [0.0208, 0.9887, 0.0054,  ..., 0.9068, 0.9816, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9913, 0.0590, 0.0149,  ..., 0.9062, 0.9897, 0.2951],
         [0.0030, 0.0590, 0.0149,  ..., 0.0431, 0.0034, 0.1685],
         [0.0028, 0.0590, 0.0149,  ..., 0.0254, 0.0034, 0.1224],
         [0.0028, 0.8229, 0.9553,  ..., 0.0254, 0.0034, 0.4139]],
        [[0.9740, 0.0501, 0.0174,  ..., 0.0135, 0.1337, 0.0176],
         [0.0094, 0.0501, 0.0174,  ..., 0.0135, 0.5055, 0.0176],
         [0.0083, 0.0620, 0.0174,  ..., 0.9594, 0.1877, 0.9472],
         [0.0083, 0.8377, 0.9477,  ..., 0.0135, 0.1730, 0.0176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0542, 0.0015, 0.9868,  ..., 0.9569, 0.0170, 0.0629],
         [0.0542, 0.0015, 0.0044,  ..., 0.0142, 0.0170, 0.0629],
         [0.8373, 0.0015, 0.0044,  ..., 0.0142, 0.9490, 0.8112],
         [0.0542, 0.9956, 0.0044,  ..., 0.0147, 0.0170, 0.0629]],
        [[0.0556, 0.0040, 0.9024,  ..., 0.9300, 0.0042, 0.0477],
         [0.0556, 0.0040, 0.0465,  ..., 0.0297, 0.0039, 0.0515],
         [0.8332, 0.0040, 0.0256,  ..., 0.0201, 0.0039, 0.8531],
         [0.0556, 0.9881, 0.0256,  ..., 0.0201, 0.9879, 0.0477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:06,641 [Process: 0] Synchronize training processes
2024-08-19 13:05:06,641 [Process: 0] Evaluating...
2024-08-19 13:05:06,643 [Process: 0] EPOCH 80:
2024-08-19 13:05:06,645 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:07,619 [Process: 0] Synchronize training processes
2024-08-19 13:05:07,619 [Process: 0] Evaluating...
2024-08-19 13:05:07,621 [Process: 0] EPOCH 81:
2024-08-19 13:05:07,623 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9330, 0.0397, 0.0147,  ..., 0.2428, 0.9183, 0.2494],
         [0.0244, 0.0397, 0.0147,  ..., 0.1251, 0.0338, 0.1886],
         [0.0213, 0.0397, 0.0147,  ..., 0.0955, 0.0239, 0.1136],
         [0.0213, 0.8810, 0.9559,  ..., 0.5366, 0.0239, 0.4484]],
        [[0.7986, 0.0264, 0.0515,  ..., 0.0534, 0.0421, 0.0205],
         [0.1194, 0.0264, 0.0515,  ..., 0.0534, 0.0421, 0.0205],
         [0.0410, 0.0264, 0.0515,  ..., 0.8397, 0.8737, 0.9386],
         [0.0410, 0.9209, 0.8456,  ..., 0.0534, 0.0421, 0.0205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0483, 0.0034, 0.9799,  ..., 0.9831, 0.0435, 0.0477],
         [0.0483, 0.0034, 0.0067,  ..., 0.0056, 0.0435, 0.0477],
         [0.8550, 0.0034, 0.0067,  ..., 0.0056, 0.8694, 0.8570],
         [0.0483, 0.9899, 0.0067,  ..., 0.0056, 0.0435, 0.0477]],
        [[0.0424, 0.0023, 0.9812,  ..., 0.9950, 0.0122, 0.0309],
         [0.0424, 0.0023, 0.0063,  ..., 0.0017, 0.0122, 0.0309],
         [0.8727, 0.0023, 0.0063,  ..., 0.0017, 0.0122, 0.9073],
         [0.0424, 0.9930, 0.0063,  ..., 0.0017, 0.9635, 0.0309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9906, 0.0458, 0.0338,  ..., 0.9899, 0.8915, 0.2600],
         [0.0031, 0.0458, 0.0278,  ..., 0.0034, 0.0344, 0.1438],
         [0.0031, 0.0458, 0.0278,  ..., 0.0034, 0.0320, 0.1115],
         [0.0031, 0.8625, 0.9107,  ..., 0.0034, 0.0422, 0.4848]],
        [[0.7430, 0.0924, 0.0265,  ..., 0.0480, 0.0059, 0.0186],
         [0.1498, 0.1115, 0.0265,  ..., 0.0480, 0.0059, 0.0186],
         [0.0536, 0.0924, 0.0265,  ..., 0.0564, 0.9823, 0.9442],
         [0.0536, 0.7038, 0.9205,  ..., 0.8476, 0.0059, 0.0186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0599, 0.0251, 0.9944,  ..., 0.9759, 0.0516, 0.0413],
         [0.0599, 0.0251, 0.0019,  ..., 0.0073, 0.0516, 0.0413],
         [0.8204, 0.0251, 0.0019,  ..., 0.0073, 0.8451, 0.8762],
         [0.0599, 0.9246, 0.0019,  ..., 0.0096, 0.0516, 0.0413]],
        [[0.0665, 0.0135, 0.9557,  ..., 0.9954, 0.0071, 0.0117],
         [0.0743, 0.0135, 0.0187,  ..., 0.0015, 0.0055, 0.0117],
         [0.7926, 0.0135, 0.0128,  ..., 0.0015, 0.0055, 0.9648],
         [0.0665, 0.9595, 0.0128,  ..., 0.0015, 0.9819, 0.0117]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:05:08,594 [Process: 0] Synchronize training processes
2024-08-19 13:05:08,595 [Process: 0] Evaluating...
2024-08-19 13:05:08,868 [Process: 0] EPOCH 82:
2024-08-19 13:05:08,870 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:09,843 [Process: 0] Synchronize training processes
2024-08-19 13:05:09,843 [Process: 0] Evaluating...
2024-08-19 13:05:09,845 [Process: 0] EPOCH 83:
2024-08-19 13:05:09,847 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9966, 0.0180, 0.0554,  ..., 0.9693, 0.9808, 0.1675],
         [0.0011, 0.0180, 0.0554,  ..., 0.0134, 0.0063, 0.1233],
         [0.0011, 0.0180, 0.0554,  ..., 0.0086, 0.0063, 0.0943],
         [0.0011, 0.9461, 0.8338,  ..., 0.0086, 0.0066, 0.6148]],
        [[0.8657, 0.0431, 0.0486,  ..., 0.0310, 0.0076, 0.0130],
         [0.0541, 0.0431, 0.0486,  ..., 0.0310, 0.0076, 0.0130],
         [0.0414, 0.0431, 0.0486,  ..., 0.0353, 0.9772, 0.9610],
         [0.0388, 0.8706, 0.8541,  ..., 0.9028, 0.0076, 0.0130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0612, 0.0030, 0.9426,  ..., 0.9742, 0.0196, 0.0316],
         [0.0612, 0.0030, 0.0209,  ..., 0.0086, 0.0196, 0.0316],
         [0.8083, 0.0030, 0.0182,  ..., 0.0086, 0.9411, 0.9052],
         [0.0693, 0.9909, 0.0182,  ..., 0.0086, 0.0196, 0.0316]],
        [[0.0535, 0.0023, 0.9939,  ..., 0.9594, 0.0019, 0.0398],
         [0.0535, 0.0023, 0.0020,  ..., 0.0153, 0.0019, 0.0398],
         [0.8394, 0.0023, 0.0020,  ..., 0.0117, 0.0019, 0.8807],
         [0.0535, 0.9931, 0.0020,  ..., 0.0135, 0.9942, 0.0398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9908, 0.0064, 0.0378,  ..., 0.9854, 0.9210, 0.1528],
         [0.0031, 0.0064, 0.0378,  ..., 0.0049, 0.0271, 0.1010],
         [0.0031, 0.0064, 0.0378,  ..., 0.0049, 0.0259, 0.0934],
         [0.0031, 0.9809, 0.8866,  ..., 0.0049, 0.0259, 0.6529]],
        [[0.9380, 0.0385, 0.0385,  ..., 0.0388, 0.0059, 0.0247],
         [0.0251, 0.0385, 0.0385,  ..., 0.0388, 0.0059, 0.0247],
         [0.0184, 0.0410, 0.0385,  ..., 0.0388, 0.9823, 0.9259],
         [0.0184, 0.8821, 0.8844,  ..., 0.8835, 0.0059, 0.0247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:05:10,821 [Process: 0] Synchronize training processes
2024-08-19 13:05:10,821 [Process: 0] Evaluating...
2024-08-19 13:05:10,823 [Process: 0] EPOCH 84:
2024-08-19 13:05:10,825 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:11,804 [Process: 0] Synchronize training processes
2024-08-19 13:05:11,804 [Process: 0] Evaluating...
2024-08-19 13:05:11,806 [Process: 0] EPOCH 85:
2024-08-19 13:05:11,808 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0532, 0.0407, 0.9774,  ..., 0.9959, 0.0416, 0.0209],
         [0.0532, 0.0534, 0.0068,  ..., 0.0014, 0.0416, 0.0209],
         [0.8394, 0.0407, 0.0068,  ..., 0.0014, 0.8752, 0.9372],
         [0.0541, 0.8653, 0.0090,  ..., 0.0014, 0.0416, 0.0209]],
        [[0.0803, 0.0947, 0.9567,  ..., 0.9948, 0.0019, 0.0214],
         [0.0803, 0.7030, 0.0144,  ..., 0.0016, 0.0019, 0.0214],
         [0.6901, 0.0947, 0.0144,  ..., 0.0016, 0.0019, 0.9359],
         [0.1492, 0.1076, 0.0144,  ..., 0.0020, 0.9943, 0.0214]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9578, 0.0296, 0.0194,  ..., 0.9742, 0.9795, 0.0920],
         [0.0151, 0.0296, 0.0194,  ..., 0.0088, 0.0067, 0.0516],
         [0.0135, 0.0296, 0.0194,  ..., 0.0085, 0.0067, 0.0516],
         [0.0135, 0.9112, 0.9417,  ..., 0.0085, 0.0071, 0.8048]],
        [[0.8999, 0.0520, 0.0459,  ..., 0.0348, 0.0056, 0.0193],
         [0.0459, 0.0498, 0.0459,  ..., 0.0334, 0.0056, 0.0193],
         [0.0271, 0.0498, 0.0459,  ..., 0.0334, 0.9831, 0.9421],
         [0.0271, 0.8483, 0.8624,  ..., 0.8984, 0.0056, 0.0193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9463e-02, 2.0295e-02, 9.8501e-01,  ..., 9.8608e-01,
          4.2770e-02, 7.1298e-02],
         [4.9463e-02, 2.0295e-02, 4.9980e-03,  ..., 3.8933e-03,
          4.2770e-02, 7.1298e-02],
         [8.5161e-01, 2.0295e-02, 4.9980e-03,  ..., 3.8933e-03,
          8.7169e-01, 7.7828e-01],
         [4.9463e-02, 9.3912e-01, 4.9980e-03,  ..., 6.1384e-03,
          4.2770e-02, 7.9126e-02]],
        [[8.5176e-02, 9.1766e-02, 9.5629e-01,  ..., 9.7536e-01,
          9.5402e-04, 2.4145e-02],
         [8.5176e-02, 4.7824e-01, 1.5827e-02,  ..., 6.8646e-03,
          9.5402e-04, 2.4145e-02],
         [7.3251e-01, 9.1766e-02, 1.3943e-02,  ..., 6.8646e-03,
          9.5402e-04, 9.2757e-01],
         [9.7136e-02, 3.3823e-01, 1.3943e-02,  ..., 1.0909e-02,
          9.9714e-01, 2.4145e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9510, 0.0253, 0.0547,  ..., 0.9814, 0.9837, 0.0754],
         [0.0161, 0.0253, 0.0574,  ..., 0.0062, 0.0054, 0.0623],
         [0.0168, 0.0253, 0.0547,  ..., 0.0062, 0.0054, 0.0564],
         [0.0161, 0.9241, 0.8332,  ..., 0.0062, 0.0054, 0.8060]],
        [[0.7059, 0.0856, 0.0378,  ..., 0.0169, 0.0040, 0.0194],
         [0.1560, 0.1149, 0.0361,  ..., 0.0169, 0.0040, 0.0194],
         [0.0691, 0.0856, 0.0361,  ..., 0.0169, 0.9879, 0.9419],
         [0.0691, 0.7139, 0.8899,  ..., 0.9493, 0.0040, 0.0194]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0234, 0.0074, 0.9734,  ..., 0.9887, 0.0143, 0.0125],
         [0.0234, 0.0074, 0.0089,  ..., 0.0038, 0.0143, 0.0125],
         [0.9297, 0.0074, 0.0089,  ..., 0.0038, 0.9572, 0.9624],
         [0.0234, 0.9778, 0.0089,  ..., 0.0038, 0.0143, 0.0125]],
        [[0.0441, 0.0142, 0.9836,  ..., 0.9384, 0.0040, 0.0392],
         [0.0441, 0.0142, 0.0055,  ..., 0.0205, 0.0040, 0.0392],
         [0.8677, 0.0142, 0.0055,  ..., 0.0205, 0.0040, 0.8825],
         [0.0441, 0.9573, 0.0055,  ..., 0.0205, 0.9879, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:12,782 [Process: 0] Synchronize training processes
2024-08-19 13:05:12,783 [Process: 0] Evaluating...
2024-08-19 13:05:12,784 [Process: 0] EPOCH 86:
2024-08-19 13:05:12,786 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:13,760 [Process: 0] Synchronize training processes
2024-08-19 13:05:13,760 [Process: 0] Evaluating...
2024-08-19 13:05:13,762 [Process: 0] EPOCH 87:
2024-08-19 13:05:13,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.3100e-01, 1.6191e-02, 1.6346e-02,  ..., 9.8935e-01,
          9.9874e-01, 2.6068e-02],
         [3.1818e-02, 1.6191e-02, 1.6346e-02,  ..., 3.5495e-03,
          4.2164e-04, 2.6068e-02],
         [1.8589e-02, 1.6191e-02, 1.6346e-02,  ..., 3.5495e-03,
          4.2164e-04, 2.6068e-02],
         [1.8589e-02, 9.5143e-01, 9.5096e-01,  ..., 3.5495e-03,
          4.2164e-04, 9.2180e-01]],
        [[9.2295e-01, 1.0927e-01, 3.1414e-02,  ..., 4.5338e-02,
          3.8292e-03, 9.1506e-03],
         [3.0732e-02, 1.8065e-01, 3.1414e-02,  ..., 4.5338e-02,
          3.8292e-03, 9.1506e-03],
         [2.3158e-02, 1.1481e-01, 3.1414e-02,  ..., 4.5338e-02,
          9.8851e-01, 9.7255e-01],
         [2.3158e-02, 5.9528e-01, 9.0576e-01,  ..., 8.6399e-01,
          3.8292e-03, 9.1506e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7689e-02, 8.1817e-04, 7.3950e-01,  ..., 9.9010e-01,
          2.8248e-02, 3.4493e-02],
         [3.7689e-02, 8.1817e-04, 1.4681e-01,  ..., 3.2334e-03,
          2.8248e-02, 3.4493e-02],
         [8.8693e-01, 8.1817e-04, 5.2470e-02,  ..., 3.2334e-03,
          9.1525e-01, 8.9652e-01],
         [3.7689e-02, 9.9755e-01, 6.1214e-02,  ..., 3.4313e-03,
          2.8248e-02, 3.4493e-02]],
        [[5.7692e-02, 9.0798e-03, 9.5826e-01,  ..., 9.6557e-01,
          6.2616e-03, 2.3653e-02],
         [5.7692e-02, 9.0798e-03, 1.6578e-02,  ..., 9.2751e-03,
          6.2616e-03, 2.3653e-02],
         [8.2693e-01, 9.0798e-03, 1.2579e-02,  ..., 9.2751e-03,
          6.2616e-03, 9.2904e-01],
         [5.7692e-02, 9.7276e-01, 1.2579e-02,  ..., 1.5882e-02,
          9.8122e-01, 2.3653e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9748e-01, 2.3545e-02, 4.6016e-02,  ..., 9.4723e-01,
          9.5504e-01, 7.3594e-02],
         [8.4021e-04, 2.3545e-02, 4.0825e-02,  ..., 2.5080e-02,
          1.1332e-02, 8.5990e-02],
         [8.4021e-04, 2.3545e-02, 4.0825e-02,  ..., 1.3843e-02,
          1.1332e-02, 7.3594e-02],
         [8.4021e-04, 9.2937e-01, 8.7233e-01,  ..., 1.3843e-02,
          2.2293e-02, 7.6682e-01]],
        [[9.6271e-01, 8.9044e-02, 1.5947e-02,  ..., 5.4410e-02,
          4.1284e-03, 1.1980e-02],
         [1.4567e-02, 1.3614e-01, 1.5947e-02,  ..., 6.8211e-02,
          4.1284e-03, 1.1980e-02],
         [1.1361e-02, 8.9044e-02, 1.5947e-02,  ..., 5.4410e-02,
          9.8761e-01, 9.6406e-01],
         [1.1361e-02, 6.8577e-01, 9.5216e-01,  ..., 8.2297e-01,
          4.1284e-03, 1.1980e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0315, 0.0127, 0.9383,  ..., 0.9848, 0.0399, 0.0278],
         [0.0315, 0.0127, 0.0156,  ..., 0.0049, 0.0399, 0.0278],
         [0.9054, 0.0127, 0.0156,  ..., 0.0048, 0.8804, 0.9167],
         [0.0315, 0.9618, 0.0305,  ..., 0.0055, 0.0399, 0.0278]],
        [[0.0430, 0.0014, 0.9588,  ..., 0.9931, 0.0037, 0.0466],
         [0.0430, 0.0014, 0.0137,  ..., 0.0023, 0.0037, 0.0466],
         [0.8709, 0.0014, 0.0137,  ..., 0.0023, 0.0037, 0.8603],
         [0.0430, 0.9957, 0.0137,  ..., 0.0023, 0.9888, 0.0466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:14,736 [Process: 0] Synchronize training processes
2024-08-19 13:05:14,736 [Process: 0] Evaluating...
2024-08-19 13:05:14,738 [Process: 0] EPOCH 88:
2024-08-19 13:05:14,740 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:15,712 [Process: 0] Synchronize training processes
2024-08-19 13:05:15,712 [Process: 0] Evaluating...
2024-08-19 13:05:15,714 [Process: 0] EPOCH 89:
2024-08-19 13:05:15,715 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9711, 0.0206, 0.0609,  ..., 0.9365, 0.7805, 0.0971],
         [0.0132, 0.0206, 0.0600,  ..., 0.0205, 0.0350, 0.1150],
         [0.0078, 0.0206, 0.0600,  ..., 0.0225, 0.0350, 0.1086],
         [0.0078, 0.9381, 0.8190,  ..., 0.0205, 0.1495, 0.6793]],
        [[0.9818, 0.0492, 0.0279,  ..., 0.0307, 0.0090, 0.0158],
         [0.0061, 0.0510, 0.0279,  ..., 0.0307, 0.0090, 0.0158],
         [0.0061, 0.0492, 0.0279,  ..., 0.0307, 0.9730, 0.9525],
         [0.0061, 0.8505, 0.9163,  ..., 0.9079, 0.0090, 0.0158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0934e-02, 5.5902e-02, 9.9401e-01,  ..., 9.8456e-01,
          3.1060e-02, 1.4343e-02],
         [4.0934e-02, 7.5592e-02, 1.9968e-03,  ..., 4.9959e-03,
          3.1060e-02, 1.4343e-02],
         [8.7578e-01, 5.5902e-02, 1.9968e-03,  ..., 4.9959e-03,
          9.0682e-01, 9.5697e-01],
         [4.2352e-02, 8.1260e-01, 1.9968e-03,  ..., 5.4480e-03,
          3.1060e-02, 1.4343e-02]],
        [[9.6444e-02, 4.2128e-02, 9.2211e-01,  ..., 9.7218e-01,
          7.8652e-04, 2.1919e-02],
         [1.0885e-01, 4.1734e-02, 2.5962e-02,  ..., 1.0813e-02,
          7.8652e-04, 2.1919e-02],
         [6.5972e-01, 3.8780e-02, 2.5962e-02,  ..., 8.5011e-03,
          7.8652e-04, 9.3424e-01],
         [1.3499e-01, 8.7736e-01, 2.5962e-02,  ..., 8.5011e-03,
          9.9764e-01, 2.1919e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9902, 0.0161, 0.0269,  ..., 0.8744, 0.9906, 0.1158],
         [0.0033, 0.0147, 0.0269,  ..., 0.0584, 0.0031, 0.1411],
         [0.0033, 0.0147, 0.0269,  ..., 0.0336, 0.0031, 0.1031],
         [0.0033, 0.9544, 0.9192,  ..., 0.0336, 0.0031, 0.6400]],
        [[0.9490, 0.0300, 0.0492,  ..., 0.0159, 0.0025, 0.0173],
         [0.0215, 0.0300, 0.0479,  ..., 0.0139, 0.0025, 0.0173],
         [0.0148, 0.0300, 0.0479,  ..., 0.0139, 0.9925, 0.9480],
         [0.0148, 0.9100, 0.8550,  ..., 0.9563, 0.0025, 0.0173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0461, 0.0277, 0.9782,  ..., 0.9894, 0.0277, 0.0394],
         [0.0461, 0.0162, 0.0072,  ..., 0.0032, 0.0277, 0.0394],
         [0.8617, 0.0162, 0.0072,  ..., 0.0032, 0.9169, 0.8818],
         [0.0461, 0.9400, 0.0073,  ..., 0.0042, 0.0277, 0.0394]],
        [[0.1017, 0.0056, 0.9499,  ..., 0.9731, 0.1971, 0.0422],
         [0.1642, 0.0056, 0.0178,  ..., 0.0090, 0.1531, 0.0422],
         [0.6323, 0.0056, 0.0161,  ..., 0.0090, 0.0925, 0.8702],
         [0.1017, 0.9831, 0.0161,  ..., 0.0090, 0.5574, 0.0454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:16,692 [Process: 0] Synchronize training processes
2024-08-19 13:05:16,692 [Process: 0] Evaluating...
2024-08-19 13:05:16,694 [Process: 0] EPOCH 90:
2024-08-19 13:05:16,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:17,671 [Process: 0] Synchronize training processes
2024-08-19 13:05:17,671 [Process: 0] Evaluating...
2024-08-19 13:05:17,673 [Process: 0] EPOCH 91:
2024-08-19 13:05:17,675 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6997e-01, 4.4538e-02, 3.5725e-02,  ..., 9.2483e-01,
          9.9743e-01, 6.8017e-02],
         [1.4645e-02, 4.4538e-02, 3.5725e-02,  ..., 2.8599e-02,
          8.5630e-04, 6.8017e-02],
         [7.6911e-03, 4.4538e-02, 3.5725e-02,  ..., 2.3372e-02,
          8.5630e-04, 6.8017e-02],
         [7.6911e-03, 8.6639e-01, 8.9282e-01,  ..., 2.3199e-02,
          8.5630e-04, 7.9595e-01]],
        [[9.3354e-01, 4.9987e-02, 3.6815e-02,  ..., 8.9433e-03,
          6.7833e-03, 2.4512e-02],
         [3.2077e-02, 4.9987e-02, 3.6815e-02,  ..., 8.9433e-03,
          6.7833e-03, 2.4512e-02],
         [1.7193e-02, 4.9987e-02, 3.6815e-02,  ..., 8.9433e-03,
          9.7965e-01, 9.2646e-01],
         [1.7193e-02, 8.5004e-01, 8.8956e-01,  ..., 9.7317e-01,
          6.7833e-03, 2.4512e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.2677e-02, 1.9770e-02, 9.8821e-01,  ..., 9.9768e-01,
          2.0799e-02, 4.1727e-02],
         [5.2677e-02, 1.9770e-02, 3.9311e-03,  ..., 7.7414e-04,
          2.0799e-02, 4.1727e-02],
         [8.4197e-01, 1.9770e-02, 3.9311e-03,  ..., 7.7414e-04,
          9.3760e-01, 8.7482e-01],
         [5.2677e-02, 9.4069e-01, 3.9311e-03,  ..., 7.7414e-04,
          2.0799e-02, 4.1727e-02]],
        [[1.2925e-01, 2.6533e-03, 9.6950e-01,  ..., 9.8866e-01,
          1.2731e-01, 2.3101e-02],
         [4.7485e-01, 2.6533e-03, 1.0166e-02,  ..., 3.7812e-03,
          2.4920e-01, 2.3101e-02],
         [2.4995e-01, 2.6533e-03, 1.0166e-02,  ..., 3.7812e-03,
          9.2992e-02, 9.3070e-01],
         [1.4595e-01, 9.9204e-01, 1.0166e-02,  ..., 3.7812e-03,
          5.3049e-01, 2.3101e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9842e-01, 5.2564e-02, 5.7023e-02,  ..., 9.9777e-01,
          8.4673e-01, 2.8380e-02],
         [5.2539e-04, 5.2564e-02, 6.7024e-02,  ..., 7.9097e-04,
          3.2360e-02, 2.8380e-02],
         [5.2539e-04, 5.4347e-02, 5.7023e-02,  ..., 7.1918e-04,
          3.2360e-02, 2.8380e-02],
         [5.2539e-04, 8.4053e-01, 8.1893e-01,  ..., 7.1918e-04,
          8.8548e-02, 9.1486e-01]],
        [[8.9765e-01, 4.9737e-02, 5.7400e-02,  ..., 1.5627e-02,
          7.5461e-03, 1.0212e-02],
         [4.1211e-02, 4.9737e-02, 5.6545e-02,  ..., 1.5627e-02,
          7.5107e-03, 1.0173e-02],
         [3.0947e-02, 4.9737e-02, 5.6545e-02,  ..., 1.5627e-02,
          9.7743e-01, 9.6944e-01],
         [3.0192e-02, 8.5079e-01, 8.2951e-01,  ..., 9.5312e-01,
          7.5107e-03, 1.0173e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0517, 0.0110, 0.9884,  ..., 0.9662, 0.0281, 0.0384],
         [0.0517, 0.0110, 0.0039,  ..., 0.0085, 0.0281, 0.0384],
         [0.8449, 0.0110, 0.0039,  ..., 0.0085, 0.9157, 0.8847],
         [0.0517, 0.9669, 0.0039,  ..., 0.0167, 0.0281, 0.0384]],
        [[0.0923, 0.0161, 0.9954,  ..., 0.9807, 0.0696, 0.0235],
         [0.1801, 0.0161, 0.0015,  ..., 0.0062, 0.1005, 0.0235],
         [0.6353, 0.0161, 0.0015,  ..., 0.0062, 0.0606, 0.9294],
         [0.0923, 0.9516, 0.0015,  ..., 0.0070, 0.7693, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:05:18,653 [Process: 0] Synchronize training processes
2024-08-19 13:05:18,654 [Process: 0] Evaluating...
2024-08-19 13:05:18,931 [Process: 0] EPOCH 92:
2024-08-19 13:05:18,934 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:19,909 [Process: 0] Synchronize training processes
2024-08-19 13:05:19,910 [Process: 0] Evaluating...
2024-08-19 13:05:19,911 [Process: 0] EPOCH 93:
2024-08-19 13:05:19,913 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9732, 0.0275, 0.0248,  ..., 0.9693, 0.9337, 0.0856],
         [0.0092, 0.0275, 0.0248,  ..., 0.0107, 0.0205, 0.1173],
         [0.0088, 0.0275, 0.0248,  ..., 0.0100, 0.0205, 0.0905],
         [0.0088, 0.9174, 0.9255,  ..., 0.0100, 0.0252, 0.7065]],
        [[0.9693, 0.0257, 0.0452,  ..., 0.0335, 0.0154, 0.0235],
         [0.0098, 0.0257, 0.0452,  ..., 0.0335, 0.0154, 0.0235],
         [0.0110, 0.0257, 0.0452,  ..., 0.0335, 0.9537, 0.9294],
         [0.0098, 0.9228, 0.8645,  ..., 0.8996, 0.0154, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0356, 0.0098, 0.9562,  ..., 0.9560, 0.0262, 0.0373],
         [0.0356, 0.0098, 0.0094,  ..., 0.0128, 0.0262, 0.0373],
         [0.8931, 0.0098, 0.0094,  ..., 0.0128, 0.9213, 0.8881],
         [0.0356, 0.9707, 0.0251,  ..., 0.0184, 0.0262, 0.0373]],
        [[0.0605, 0.0041, 0.9921,  ..., 0.9498, 0.0848, 0.0358],
         [0.0605, 0.0041, 0.0026,  ..., 0.0126, 0.0333, 0.0358],
         [0.8162, 0.0041, 0.0026,  ..., 0.0126, 0.0329, 0.8927],
         [0.0629, 0.9878, 0.0026,  ..., 0.0250, 0.8490, 0.0358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9915, 0.0288, 0.0549,  ..., 0.9328, 0.9817, 0.0584],
         [0.0037, 0.0288, 0.0549,  ..., 0.0326, 0.0061, 0.0691],
         [0.0024, 0.0355, 0.0771,  ..., 0.0173, 0.0061, 0.0590],
         [0.0024, 0.9069, 0.8132,  ..., 0.0173, 0.0061, 0.8134]],
        [[0.9636, 0.0561, 0.0226,  ..., 0.0447, 0.0040, 0.0113],
         [0.0118, 0.0656, 0.0226,  ..., 0.0447, 0.0039, 0.0113],
         [0.0127, 0.0561, 0.0226,  ..., 0.0447, 0.9882, 0.9662],
         [0.0118, 0.8222, 0.9321,  ..., 0.8659, 0.0039, 0.0113]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:05:20,886 [Process: 0] Synchronize training processes
2024-08-19 13:05:20,886 [Process: 0] Evaluating...
2024-08-19 13:05:20,888 [Process: 0] EPOCH 94:
2024-08-19 13:05:20,890 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:21,875 [Process: 0] Synchronize training processes
2024-08-19 13:05:21,876 [Process: 0] Evaluating...
2024-08-19 13:05:21,877 [Process: 0] EPOCH 95:
2024-08-19 13:05:21,879 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.9712e-02, 4.3711e-02, 9.7530e-01,  ..., 9.3539e-01,
          2.8402e-02, 4.0374e-02],
         [4.9712e-02, 1.8142e-02, 8.2334e-03,  ..., 1.5201e-02,
          2.8402e-02, 4.0374e-02],
         [8.5086e-01, 1.8142e-02, 8.2334e-03,  ..., 1.5201e-02,
          9.1479e-01, 8.7888e-01],
         [4.9712e-02, 9.2001e-01, 8.2334e-03,  ..., 3.4204e-02,
          2.8402e-02, 4.0374e-02]],
        [[2.8086e-02, 9.9315e-04, 9.8973e-01,  ..., 9.6769e-01,
          1.1295e-01, 4.4520e-02],
         [2.8086e-02, 9.9315e-04, 3.4235e-03,  ..., 1.0771e-02,
          1.0501e-01, 4.1106e-02],
         [9.1574e-01, 9.9315e-04, 3.4235e-03,  ..., 1.0771e-02,
          6.1859e-02, 8.7327e-01],
         [2.8086e-02, 9.9702e-01, 3.4235e-03,  ..., 1.0771e-02,
          7.2018e-01, 4.1106e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9250, 0.0330, 0.0451,  ..., 0.9898, 0.9628, 0.0693],
         [0.0440, 0.0330, 0.0466,  ..., 0.0034, 0.0126, 0.0996],
         [0.0155, 0.0330, 0.0594,  ..., 0.0034, 0.0123, 0.0721],
         [0.0155, 0.9010, 0.8488,  ..., 0.0034, 0.0123, 0.7590]],
        [[0.9682, 0.0497, 0.0290,  ..., 0.0452, 0.0103, 0.0119],
         [0.0105, 0.0497, 0.0290,  ..., 0.0452, 0.0103, 0.0119],
         [0.0107, 0.0533, 0.0290,  ..., 0.0501, 0.9692, 0.9644],
         [0.0105, 0.8473, 0.9129,  ..., 0.8595, 0.0103, 0.0119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0293, 0.0258, 0.9615,  ..., 0.9928, 0.0260, 0.0462],
         [0.0293, 0.0211, 0.0124,  ..., 0.0024, 0.0257, 0.0462],
         [0.9122, 0.0211, 0.0120,  ..., 0.0024, 0.9226, 0.8614],
         [0.0293, 0.9319, 0.0141,  ..., 0.0024, 0.0257, 0.0462]],
        [[0.0358, 0.0261, 0.9887,  ..., 0.9902, 0.0171, 0.0304],
         [0.0358, 0.0290, 0.0038,  ..., 0.0036, 0.0153, 0.0307],
         [0.8926, 0.0261, 0.0038,  ..., 0.0031, 0.0153, 0.9085],
         [0.0358, 0.9189, 0.0038,  ..., 0.0031, 0.9524, 0.0304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9793, 0.0205, 0.0594,  ..., 0.9218, 0.9804, 0.0346],
         [0.0114, 0.0205, 0.0594,  ..., 0.0385, 0.0073, 0.0346],
         [0.0047, 0.0205, 0.0613,  ..., 0.0198, 0.0061, 0.0346],
         [0.0047, 0.9384, 0.8198,  ..., 0.0198, 0.0061, 0.8963]],
        [[0.9753, 0.0189, 0.0429,  ..., 0.0512, 0.0307, 0.0051],
         [0.0082, 0.0189, 0.0444,  ..., 0.0512, 0.0307, 0.0051],
         [0.0082, 0.0189, 0.0429,  ..., 0.0512, 0.9080, 0.9847],
         [0.0082, 0.9433, 0.8698,  ..., 0.8463, 0.0307, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:05:22,879 [Process: 0] Synchronize training processes
2024-08-19 13:05:22,879 [Process: 0] Evaluating...
2024-08-19 13:05:22,881 [Process: 0] EPOCH 96:
2024-08-19 13:05:22,883 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:23,855 [Process: 0] Synchronize training processes
2024-08-19 13:05:23,856 [Process: 0] Evaluating...
2024-08-19 13:05:23,857 [Process: 0] EPOCH 97:
2024-08-19 13:05:23,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0545, 0.0022, 0.9673,  ..., 0.9925, 0.0285, 0.0218],
         [0.0545, 0.0022, 0.0086,  ..., 0.0025, 0.0285, 0.0218],
         [0.8225, 0.0022, 0.0086,  ..., 0.0025, 0.9146, 0.9347],
         [0.0686, 0.9935, 0.0154,  ..., 0.0025, 0.0285, 0.0218]],
        [[0.0486, 0.0023, 0.9708,  ..., 0.9965, 0.0310, 0.0463],
         [0.0486, 0.0023, 0.0097,  ..., 0.0012, 0.0326, 0.0463],
         [0.8542, 0.0023, 0.0097,  ..., 0.0012, 0.0310, 0.8610],
         [0.0486, 0.9930, 0.0097,  ..., 0.0012, 0.9054, 0.0463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9746e-01, 5.2671e-02, 2.7745e-02,  ..., 9.6673e-01,
          9.7711e-01, 6.2321e-02],
         [8.4831e-04, 4.9756e-02, 2.7745e-02,  ..., 1.4939e-02,
          7.6309e-03, 7.2198e-02],
         [8.4831e-04, 4.9756e-02, 2.7745e-02,  ..., 9.1645e-03,
          7.6309e-03, 6.3612e-02],
         [8.4831e-04, 8.4782e-01, 9.1677e-01,  ..., 9.1645e-03,
          7.6309e-03, 8.0187e-01]],
        [[9.8145e-01, 1.9267e-02, 2.5956e-02,  ..., 1.8245e-02,
          2.6461e-03, 1.1228e-02],
         [6.1847e-03, 1.9267e-02, 2.5956e-02,  ..., 1.8245e-02,
          2.6461e-03, 1.1228e-02],
         [6.1847e-03, 1.9267e-02, 2.5956e-02,  ..., 1.8245e-02,
          9.9206e-01, 9.6631e-01],
         [6.1847e-03, 9.4220e-01, 9.2213e-01,  ..., 9.4526e-01,
          2.6461e-03, 1.1228e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1098, 0.0020, 0.9418,  ..., 0.9929, 0.0262, 0.0292],
         [0.1213, 0.0020, 0.0194,  ..., 0.0024, 0.0269, 0.0292],
         [0.4106, 0.0020, 0.0194,  ..., 0.0024, 0.9207, 0.9124],
         [0.3583, 0.9941, 0.0194,  ..., 0.0024, 0.0262, 0.0292]],
        [[0.0297, 0.0098, 0.9922,  ..., 0.9727, 0.1131, 0.0086],
         [0.0297, 0.0098, 0.0026,  ..., 0.0073, 0.0529, 0.0086],
         [0.9110, 0.0098, 0.0026,  ..., 0.0073, 0.0529, 0.9742],
         [0.0297, 0.9705, 0.0026,  ..., 0.0127, 0.7812, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9858e-01, 4.1639e-02, 2.9426e-02,  ..., 9.2027e-01,
          9.6819e-01, 3.8151e-02],
         [4.7406e-04, 4.1639e-02, 2.9426e-02,  ..., 2.3068e-02,
          1.0602e-02, 3.8151e-02],
         [4.7406e-04, 4.1639e-02, 2.9426e-02,  ..., 2.3068e-02,
          1.0602e-02, 3.8151e-02],
         [4.7406e-04, 8.7508e-01, 9.1172e-01,  ..., 3.3590e-02,
          1.0602e-02, 8.8555e-01]],
        [[9.2270e-01, 1.3090e-02, 1.7822e-02,  ..., 3.7779e-02,
          3.1764e-03, 2.0346e-02],
         [3.4917e-02, 1.3090e-02, 1.7822e-02,  ..., 3.7779e-02,
          3.1764e-03, 2.0346e-02],
         [2.1191e-02, 1.3090e-02, 1.7822e-02,  ..., 3.7779e-02,
          9.9047e-01, 9.3896e-01],
         [2.1191e-02, 9.6073e-01, 9.4653e-01,  ..., 8.8666e-01,
          3.1764e-03, 2.0346e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0394, 0.0016, 0.9746,  ..., 0.9804, 0.0250, 0.0149],
         [0.0394, 0.0016, 0.0085,  ..., 0.0065, 0.0250, 0.0149],
         [0.8818, 0.0016, 0.0085,  ..., 0.0065, 0.9250, 0.9554],
         [0.0394, 0.9953, 0.0085,  ..., 0.0065, 0.0250, 0.0149]],
        [[0.0187, 0.0108, 0.9773,  ..., 0.9953, 0.0653, 0.0448],
         [0.0187, 0.0108, 0.0058,  ..., 0.0016, 0.0392, 0.0448],
         [0.9440, 0.0108, 0.0058,  ..., 0.0016, 0.0392, 0.8655],
         [0.0187, 0.9675, 0.0111,  ..., 0.0016, 0.8563, 0.0448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:24,832 [Process: 0] Synchronize training processes
2024-08-19 13:05:24,832 [Process: 0] Evaluating...
2024-08-19 13:05:24,834 [Process: 0] EPOCH 98:
2024-08-19 13:05:24,836 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:25,809 [Process: 0] Synchronize training processes
2024-08-19 13:05:25,809 [Process: 0] Evaluating...
2024-08-19 13:05:25,811 [Process: 0] EPOCH 99:
2024-08-19 13:05:25,813 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9866, 0.0139, 0.0324,  ..., 0.8887, 0.9809, 0.0217],
         [0.0045, 0.0132, 0.0324,  ..., 0.0346, 0.0064, 0.0217],
         [0.0045, 0.0132, 0.0324,  ..., 0.0426, 0.0064, 0.0217],
         [0.0045, 0.9596, 0.9029,  ..., 0.0340, 0.0064, 0.9349]],
        [[0.7457, 0.0237, 0.0191,  ..., 0.0203, 0.0040, 0.0170],
         [0.1497, 0.0237, 0.0191,  ..., 0.0203, 0.0040, 0.0170],
         [0.0523, 0.0237, 0.0191,  ..., 0.0203, 0.9881, 0.9490],
         [0.0523, 0.9288, 0.9428,  ..., 0.9392, 0.0040, 0.0170]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0150, 0.0158, 0.9773,  ..., 0.9855, 0.0141, 0.0346],
         [0.0150, 0.0158, 0.0076,  ..., 0.0048, 0.0141, 0.0346],
         [0.9549, 0.0158, 0.0076,  ..., 0.0048, 0.9576, 0.8962],
         [0.0150, 0.9526, 0.0076,  ..., 0.0048, 0.0141, 0.0346]],
        [[0.0408, 0.0067, 0.9757,  ..., 0.9904, 0.0026, 0.0097],
         [0.0548, 0.0067, 0.0081,  ..., 0.0032, 0.0024, 0.0097],
         [0.8635, 0.0067, 0.0081,  ..., 0.0032, 0.0024, 0.9709],
         [0.0408, 0.9800, 0.0081,  ..., 0.0032, 0.9927, 0.0097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9900, 0.0208, 0.0078,  ..., 0.9572, 0.4356, 0.0287],
         [0.0033, 0.0208, 0.0078,  ..., 0.0136, 0.0763, 0.0287],
         [0.0033, 0.0208, 0.0078,  ..., 0.0157, 0.0763, 0.0287],
         [0.0033, 0.9375, 0.9765,  ..., 0.0136, 0.4118, 0.9140]],
        [[0.8426, 0.0391, 0.0211,  ..., 0.0675, 0.0220, 0.0017],
         [0.0637, 0.0382, 0.0211,  ..., 0.0506, 0.0370, 0.0017],
         [0.0493, 0.0382, 0.0211,  ..., 0.0506, 0.9190, 0.9949],
         [0.0444, 0.8844, 0.9367,  ..., 0.8314, 0.0220, 0.0017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0404, 0.0059, 0.9952,  ..., 0.9754, 0.0356, 0.0634],
         [0.0404, 0.0059, 0.0016,  ..., 0.0059, 0.0356, 0.0617],
         [0.8789, 0.0059, 0.0016,  ..., 0.0059, 0.8932, 0.8141],
         [0.0404, 0.9824, 0.0016,  ..., 0.0129, 0.0356, 0.0608]],
        [[0.0371, 0.0258, 0.9866,  ..., 0.9616, 0.0343, 0.0332],
         [0.0371, 0.0251, 0.0041,  ..., 0.0122, 0.0343, 0.0332],
         [0.8887, 0.0251, 0.0041,  ..., 0.0122, 0.0343, 0.9004],
         [0.0371, 0.9240, 0.0052,  ..., 0.0141, 0.8970, 0.0332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:26,788 [Process: 0] Synchronize training processes
2024-08-19 13:05:26,789 [Process: 0] Evaluating...
2024-08-19 13:05:26,790 [Process: 0] EPOCH 100:
2024-08-19 13:05:26,792 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:27,763 [Process: 0] Synchronize training processes
2024-08-19 13:05:27,763 [Process: 0] Evaluating...
2024-08-19 13:05:27,765 [Process: 0] EPOCH 101:
2024-08-19 13:05:27,767 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9943, 0.0123, 0.0487,  ..., 0.9355, 0.9922, 0.0341],
         [0.0019, 0.0123, 0.0558,  ..., 0.0265, 0.0026, 0.0318],
         [0.0019, 0.0123, 0.0510,  ..., 0.0190, 0.0026, 0.0318],
         [0.0019, 0.9632, 0.8446,  ..., 0.0190, 0.0026, 0.9024]],
        [[0.2103, 0.0644, 0.0442,  ..., 0.0392, 0.0134, 0.0181],
         [0.5440, 0.0803, 0.0442,  ..., 0.0392, 0.0134, 0.0181],
         [0.1045, 0.0863, 0.0442,  ..., 0.0399, 0.9597, 0.9457],
         [0.1413, 0.7691, 0.8675,  ..., 0.8817, 0.0134, 0.0181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0246, 0.0023, 0.9926,  ..., 0.9906, 0.0175, 0.0132],
         [0.0246, 0.0023, 0.0025,  ..., 0.0031, 0.0175, 0.0132],
         [0.9261, 0.0023, 0.0025,  ..., 0.0031, 0.9474, 0.9603],
         [0.0246, 0.9930, 0.0025,  ..., 0.0032, 0.0175, 0.0132]],
        [[0.0387, 0.0104, 0.9580,  ..., 0.9182, 0.9712, 0.0236],
         [0.0561, 0.0104, 0.0132,  ..., 0.0228, 0.0071, 0.0236],
         [0.8665, 0.0104, 0.0132,  ..., 0.0228, 0.0071, 0.9292],
         [0.0387, 0.9687, 0.0155,  ..., 0.0362, 0.0146, 0.0236]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9833e-01, 2.4923e-02, 2.8587e-02,  ..., 9.7480e-01,
          9.9365e-01, 3.7941e-02],
         [5.5740e-04, 2.6330e-02, 2.8587e-02,  ..., 8.4013e-03,
          2.1160e-03, 3.7941e-02],
         [5.5740e-04, 2.4923e-02, 4.0480e-02,  ..., 8.4013e-03,
          2.1160e-03, 3.7941e-02],
         [5.5740e-04, 9.2382e-01, 9.0235e-01,  ..., 8.4013e-03,
          2.1160e-03, 8.8618e-01]],
        [[4.8228e-01, 3.5796e-02, 2.0287e-02,  ..., 6.2322e-02,
          3.2729e-03, 8.7879e-03],
         [1.9418e-01, 3.5796e-02, 2.0287e-02,  ..., 6.2322e-02,
          3.2729e-03, 8.7879e-03],
         [1.0067e-01, 6.2257e-02, 2.0287e-02,  ..., 9.2279e-02,
          9.9018e-01, 9.7364e-01],
         [2.2287e-01, 8.6615e-01, 9.3914e-01,  ..., 7.8308e-01,
          3.2729e-03, 8.7879e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0181, 0.0041, 0.9898,  ..., 0.9910, 0.0341, 0.0220],
         [0.0181, 0.0041, 0.0034,  ..., 0.0030, 0.0341, 0.0220],
         [0.9456, 0.0041, 0.0034,  ..., 0.0030, 0.8978, 0.9341],
         [0.0181, 0.9876, 0.0034,  ..., 0.0030, 0.0341, 0.0220]],
        [[0.0224, 0.0048, 0.9830,  ..., 0.9828, 0.9791, 0.0197],
         [0.0224, 0.0048, 0.0057,  ..., 0.0050, 0.0062, 0.0197],
         [0.9327, 0.0048, 0.0057,  ..., 0.0050, 0.0062, 0.9409],
         [0.0224, 0.9857, 0.0057,  ..., 0.0072, 0.0085, 0.0197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:05:28,738 [Process: 0] Synchronize training processes
2024-08-19 13:05:28,738 [Process: 0] Evaluating...
2024-08-19 13:05:29,018 [Process: 0] EPOCH 102:
2024-08-19 13:05:29,021 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:30,013 [Process: 0] Synchronize training processes
2024-08-19 13:05:30,013 [Process: 0] Evaluating...
2024-08-19 13:05:30,015 [Process: 0] EPOCH 103:
2024-08-19 13:05:30,017 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9884, 0.0210, 0.0202,  ..., 0.9482, 0.9925, 0.0220],
         [0.0039, 0.0210, 0.0202,  ..., 0.0247, 0.0025, 0.0220],
         [0.0039, 0.0210, 0.0202,  ..., 0.0135, 0.0025, 0.0220],
         [0.0039, 0.9369, 0.9395,  ..., 0.0135, 0.0025, 0.9341]],
        [[0.8721, 0.0287, 0.0153,  ..., 0.0441, 0.0105, 0.0084],
         [0.0399, 0.0287, 0.0153,  ..., 0.0519, 0.0105, 0.0084],
         [0.0364, 0.0287, 0.0153,  ..., 0.0461, 0.9684, 0.9747],
         [0.0516, 0.9140, 0.9540,  ..., 0.8580, 0.0105, 0.0084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0140, 0.0056, 0.9935,  ..., 0.9850, 0.0263, 0.0307],
         [0.0140, 0.0056, 0.0022,  ..., 0.0050, 0.0263, 0.0291],
         [0.9580, 0.0056, 0.0022,  ..., 0.0050, 0.9212, 0.9111],
         [0.0140, 0.9831, 0.0022,  ..., 0.0050, 0.0263, 0.0291]],
        [[0.0277, 0.0146, 0.9950,  ..., 0.9574, 0.9938, 0.0189],
         [0.0277, 0.0146, 0.0017,  ..., 0.0116, 0.0021, 0.0189],
         [0.9170, 0.0146, 0.0017,  ..., 0.0116, 0.0021, 0.9432],
         [0.0277, 0.9561, 0.0017,  ..., 0.0194, 0.0021, 0.0189]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9874, 0.0468, 0.0290,  ..., 0.9540, 0.9593, 0.0338],
         [0.0042, 0.0514, 0.0290,  ..., 0.0203, 0.0136, 0.0338],
         [0.0042, 0.0468, 0.0380,  ..., 0.0129, 0.0136, 0.0383],
         [0.0042, 0.8550, 0.9040,  ..., 0.0129, 0.0136, 0.8941]],
        [[0.9028, 0.0328, 0.0296,  ..., 0.0232, 0.0101, 0.0283],
         [0.0404, 0.0328, 0.0336,  ..., 0.0232, 0.0101, 0.0283],
         [0.0284, 0.0328, 0.0296,  ..., 0.0232, 0.9697, 0.9152],
         [0.0284, 0.9017, 0.9073,  ..., 0.9303, 0.0101, 0.0283]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:30,990 [Process: 0] Synchronize training processes
2024-08-19 13:05:30,990 [Process: 0] Evaluating...
2024-08-19 13:05:30,992 [Process: 0] EPOCH 104:
2024-08-19 13:05:30,993 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:31,966 [Process: 0] Synchronize training processes
2024-08-19 13:05:31,967 [Process: 0] Evaluating...
2024-08-19 13:05:31,968 [Process: 0] EPOCH 105:
2024-08-19 13:05:31,970 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0108, 0.0048, 0.9906,  ..., 0.9897, 0.0345, 0.0222],
         [0.0108, 0.0048, 0.0031,  ..., 0.0034, 0.0335, 0.0218],
         [0.9675, 0.0048, 0.0031,  ..., 0.0034, 0.8984, 0.9343],
         [0.0108, 0.9855, 0.0031,  ..., 0.0034, 0.0335, 0.0218]],
        [[0.0223, 0.0078, 0.9307,  ..., 0.9732, 0.8322, 0.0215],
         [0.0223, 0.0078, 0.0303,  ..., 0.0103, 0.0434, 0.0215],
         [0.9330, 0.0078, 0.0195,  ..., 0.0082, 0.0434, 0.9356],
         [0.0223, 0.9765, 0.0195,  ..., 0.0082, 0.0810, 0.0215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9866, 0.0373, 0.0203,  ..., 0.9178, 0.9712, 0.0237],
         [0.0050, 0.0373, 0.0203,  ..., 0.0247, 0.0096, 0.0237],
         [0.0042, 0.0373, 0.0203,  ..., 0.0328, 0.0096, 0.0237],
         [0.0042, 0.8880, 0.9392,  ..., 0.0247, 0.0096, 0.9290]],
        [[0.6865, 0.0189, 0.0267,  ..., 0.0346, 0.0243, 0.0550],
         [0.1255, 0.0189, 0.0241,  ..., 0.0346, 0.0243, 0.0550],
         [0.0778, 0.0189, 0.0241,  ..., 0.0346, 0.9272, 0.8350],
         [0.1102, 0.9434, 0.9251,  ..., 0.8963, 0.0243, 0.0550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.0359e-02, 9.9176e-04, 9.6370e-01,  ..., 9.9678e-01,
          5.9496e-02, 2.9090e-02],
         [2.0157e-02, 9.9176e-04, 1.1288e-02,  ..., 1.0742e-03,
          5.6358e-02, 2.8938e-02],
         [9.3933e-01, 9.9176e-04, 1.1288e-02,  ..., 1.0742e-03,
          8.2083e-01, 9.1303e-01],
         [2.0157e-02, 9.9702e-01, 1.3728e-02,  ..., 1.0742e-03,
          6.3313e-02, 2.8938e-02]],
        [[2.4729e-02, 1.6215e-02, 9.8932e-01,  ..., 9.8108e-01,
          9.6362e-01, 2.7406e-02],
         [2.4729e-02, 1.6215e-02, 3.5601e-03,  ..., 6.3069e-03,
          1.1174e-02, 2.7406e-02],
         [9.2581e-01, 1.6215e-02, 3.5601e-03,  ..., 6.3069e-03,
          1.1129e-02, 9.1778e-01],
         [2.4729e-02, 9.5136e-01, 3.5601e-03,  ..., 6.3069e-03,
          1.4077e-02, 2.7406e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9569, 0.0342, 0.0299,  ..., 0.9745, 0.0238, 0.0192],
         [0.0143, 0.0342, 0.0299,  ..., 0.0085, 0.0183, 0.0192],
         [0.0146, 0.0357, 0.0300,  ..., 0.0085, 0.0183, 0.0192],
         [0.0143, 0.8958, 0.9102,  ..., 0.0085, 0.9396, 0.9423]],
        [[0.6444, 0.0102, 0.0078,  ..., 0.0216, 0.0033, 0.0342],
         [0.1442, 0.0102, 0.0078,  ..., 0.0216, 0.0033, 0.0342],
         [0.1261, 0.0102, 0.0078,  ..., 0.0216, 0.9901, 0.8975],
         [0.0853, 0.9695, 0.9766,  ..., 0.9352, 0.0033, 0.0342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:05:32,946 [Process: 0] Synchronize training processes
2024-08-19 13:05:32,946 [Process: 0] Evaluating...
2024-08-19 13:05:32,948 [Process: 0] EPOCH 106:
2024-08-19 13:05:32,950 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:33,919 [Process: 0] Synchronize training processes
2024-08-19 13:05:33,919 [Process: 0] Evaluating...
2024-08-19 13:05:33,921 [Process: 0] EPOCH 107:
2024-08-19 13:05:33,922 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.1615e-02, 9.7615e-02, 9.8769e-01,  ..., 9.9773e-01,
          6.0712e-02, 2.7961e-02],
         [3.1615e-02, 4.0147e-02, 4.1043e-03,  ..., 7.5602e-04,
          5.7276e-02, 2.7961e-02],
         [9.0515e-01, 4.0147e-02, 4.1043e-03,  ..., 7.5602e-04,
          8.1194e-01, 9.1449e-01],
         [3.1615e-02, 8.2209e-01, 4.1043e-03,  ..., 7.5602e-04,
          7.0068e-02, 2.9592e-02]],
        [[6.2381e-02, 3.1453e-02, 9.8228e-01,  ..., 9.7768e-01,
          9.6682e-01, 1.8387e-02],
         [6.7427e-02, 2.5523e-02, 5.9062e-03,  ..., 7.4406e-03,
          9.3974e-03, 1.8387e-02],
         [8.0781e-01, 2.5523e-02, 5.9062e-03,  ..., 7.4406e-03,
          9.3974e-03, 9.4484e-01],
         [6.2381e-02, 9.1750e-01, 5.9062e-03,  ..., 7.4406e-03,
          1.4388e-02, 1.8387e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9954, 0.0325, 0.0353,  ..., 0.9574, 0.0487, 0.0416],
         [0.0015, 0.0325, 0.0359,  ..., 0.0178, 0.0320, 0.0363],
         [0.0015, 0.0325, 0.0353,  ..., 0.0132, 0.0320, 0.0363],
         [0.0015, 0.9025, 0.8936,  ..., 0.0116, 0.8873, 0.8859]],
        [[0.9670, 0.1570, 0.0177,  ..., 0.0255, 0.0066, 0.0248],
         [0.0110, 0.2291, 0.0177,  ..., 0.0224, 0.0066, 0.0248],
         [0.0110, 0.1837, 0.0177,  ..., 0.0224, 0.9801, 0.9256],
         [0.0110, 0.4302, 0.9468,  ..., 0.9298, 0.0066, 0.0248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0226, 0.0056, 0.9874,  ..., 0.9959, 0.0130, 0.0243],
         [0.0226, 0.0056, 0.0039,  ..., 0.0014, 0.0130, 0.0243],
         [0.9323, 0.0056, 0.0039,  ..., 0.0014, 0.9611, 0.9271],
         [0.0226, 0.9831, 0.0048,  ..., 0.0014, 0.0130, 0.0243]],
        [[0.0880, 0.0016, 0.9847,  ..., 0.9815, 0.7698, 0.0152],
         [0.1578, 0.0016, 0.0051,  ..., 0.0063, 0.0721, 0.0152],
         [0.6636, 0.0016, 0.0051,  ..., 0.0061, 0.0538, 0.9543],
         [0.0906, 0.9953, 0.0051,  ..., 0.0061, 0.1043, 0.0152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9858, 0.0163, 0.0422,  ..., 0.9853, 0.9794, 0.0291],
         [0.0045, 0.0163, 0.0312,  ..., 0.0048, 0.0069, 0.0291],
         [0.0052, 0.0163, 0.0312,  ..., 0.0051, 0.0069, 0.0291],
         [0.0045, 0.9510, 0.8954,  ..., 0.0048, 0.0069, 0.9128]],
        [[0.7604, 0.0373, 0.0298,  ..., 0.0632, 0.0038, 0.0154],
         [0.0870, 0.0344, 0.0233,  ..., 0.0664, 0.0038, 0.0154],
         [0.0777, 0.0344, 0.0233,  ..., 0.0751, 0.9886, 0.9539],
         [0.0749, 0.8938, 0.9236,  ..., 0.7953, 0.0038, 0.0154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0356, 0.0025, 0.9504,  ..., 0.9543, 0.0317, 0.0432],
         [0.0356, 0.0025, 0.0103,  ..., 0.0150, 0.0317, 0.0432],
         [0.8932, 0.0025, 0.0103,  ..., 0.0150, 0.9045, 0.8703],
         [0.0356, 0.9926, 0.0291,  ..., 0.0156, 0.0321, 0.0432]],
        [[0.0587, 0.0062, 0.9502,  ..., 0.9932, 0.9114, 0.0245],
         [0.0587, 0.0056, 0.0166,  ..., 0.0023, 0.0254, 0.0245],
         [0.8238, 0.0056, 0.0166,  ..., 0.0023, 0.0239, 0.9265],
         [0.0587, 0.9826, 0.0166,  ..., 0.0023, 0.0393, 0.0245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:34,869 [Process: 0] Synchronize training processes
2024-08-19 13:05:34,869 [Process: 0] Evaluating...
2024-08-19 13:05:34,871 [Process: 0] EPOCH 108:
2024-08-19 13:05:34,873 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:35,851 [Process: 0] Synchronize training processes
2024-08-19 13:05:35,851 [Process: 0] Evaluating...
2024-08-19 13:05:35,853 [Process: 0] EPOCH 109:
2024-08-19 13:05:35,855 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9955, 0.0146, 0.0134,  ..., 0.9705, 0.9814, 0.0218],
         [0.0015, 0.0146, 0.0134,  ..., 0.0097, 0.0062, 0.0216],
         [0.0015, 0.0146, 0.0134,  ..., 0.0102, 0.0062, 0.0216],
         [0.0015, 0.9563, 0.9598,  ..., 0.0097, 0.0062, 0.9350]],
        [[0.7593, 0.0136, 0.0103,  ..., 0.0509, 0.0036, 0.0135],
         [0.1158, 0.0136, 0.0103,  ..., 0.0527, 0.0036, 0.0135],
         [0.0684, 0.0136, 0.0103,  ..., 0.0509, 0.9891, 0.9594],
         [0.0565, 0.9591, 0.9690,  ..., 0.8454, 0.0036, 0.0135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0281, 0.0120, 0.9705,  ..., 0.9754, 0.0141, 0.0231],
         [0.0281, 0.0062, 0.0086,  ..., 0.0082, 0.0141, 0.0231],
         [0.9156, 0.0062, 0.0086,  ..., 0.0082, 0.9576, 0.9307],
         [0.0281, 0.9756, 0.0122,  ..., 0.0082, 0.0141, 0.0231]],
        [[0.0606, 0.0121, 0.9563,  ..., 0.0070, 0.6700, 0.0265],
         [0.0611, 0.0129, 0.0115,  ..., 0.0070, 0.0571, 0.0265],
         [0.8178, 0.0121, 0.0115,  ..., 0.0070, 0.0571, 0.9204],
         [0.0606, 0.9628, 0.0207,  ..., 0.9791, 0.2158, 0.0265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9910, 0.0191, 0.0424,  ..., 0.9458, 0.9308, 0.0168],
         [0.0032, 0.0191, 0.0529,  ..., 0.0181, 0.0202, 0.0168],
         [0.0029, 0.0191, 0.0424,  ..., 0.0181, 0.0288, 0.0168],
         [0.0029, 0.9428, 0.8622,  ..., 0.0181, 0.0202, 0.9497]],
        [[0.8885, 0.0764, 0.0319,  ..., 0.0689, 0.0030, 0.0184],
         [0.0390, 0.0648, 0.0319,  ..., 0.0890, 0.0030, 0.0184],
         [0.0426, 0.0736, 0.0319,  ..., 0.1143, 0.9910, 0.9449],
         [0.0298, 0.7852, 0.9043,  ..., 0.7278, 0.0030, 0.0184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0358, 0.1980, 0.9774,  ..., 0.9933, 0.0271, 0.0163],
         [0.0344, 0.0367, 0.0060,  ..., 0.0022, 0.0271, 0.0163],
         [0.8954, 0.0367, 0.0060,  ..., 0.0022, 0.9188, 0.9511],
         [0.0344, 0.7285, 0.0106,  ..., 0.0022, 0.0271, 0.0163]],
        [[0.0243, 0.0045, 0.9823,  ..., 0.0027, 0.3527, 0.0062],
         [0.0243, 0.0045, 0.0052,  ..., 0.0027, 0.1480, 0.0062],
         [0.9272, 0.0045, 0.0052,  ..., 0.0027, 0.0825, 0.9814],
         [0.0243, 0.9864, 0.0072,  ..., 0.9919, 0.4168, 0.0062]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:36,837 [Process: 0] Synchronize training processes
2024-08-19 13:05:36,838 [Process: 0] Evaluating...
2024-08-19 13:05:36,839 [Process: 0] EPOCH 110:
2024-08-19 13:05:36,841 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:37,826 [Process: 0] Synchronize training processes
2024-08-19 13:05:37,826 [Process: 0] Evaluating...
2024-08-19 13:05:37,828 [Process: 0] EPOCH 111:
2024-08-19 13:05:37,829 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9876, 0.0158, 0.0194,  ..., 0.9799, 0.9950, 0.0416],
         [0.0041, 0.0158, 0.0194,  ..., 0.0065, 0.0017, 0.0527],
         [0.0041, 0.0158, 0.0194,  ..., 0.0070, 0.0017, 0.0416],
         [0.0041, 0.9527, 0.9418,  ..., 0.0065, 0.0017, 0.8641]],
        [[0.9904, 0.0369, 0.0292,  ..., 0.0259, 0.0122, 0.0161],
         [0.0032, 0.0403, 0.0305,  ..., 0.0259, 0.0122, 0.0161],
         [0.0032, 0.0369, 0.0292,  ..., 0.0259, 0.9633, 0.9517],
         [0.0032, 0.8860, 0.9112,  ..., 0.9224, 0.0122, 0.0161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0311, 0.0381, 0.9966,  ..., 0.9962, 0.0350, 0.0390],
         [0.0311, 0.0185, 0.0011,  ..., 0.0013, 0.0350, 0.0390],
         [0.9067, 0.0185, 0.0011,  ..., 0.0013, 0.8950, 0.8817],
         [0.0311, 0.9249, 0.0011,  ..., 0.0013, 0.0350, 0.0402]],
        [[0.0176, 0.0027, 0.9904,  ..., 0.9762, 0.1232, 0.0102],
         [0.0176, 0.0027, 0.0032,  ..., 0.0067, 0.0596, 0.0102],
         [0.9473, 0.0027, 0.0032,  ..., 0.0067, 0.0539, 0.9693],
         [0.0176, 0.9919, 0.0032,  ..., 0.0105, 0.7634, 0.0102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9795, 0.0293, 0.0434,  ..., 0.9521, 0.9609, 0.0497],
         [0.0072, 0.0293, 0.0451,  ..., 0.0167, 0.0167, 0.0497],
         [0.0067, 0.0293, 0.0434,  ..., 0.0156, 0.0112, 0.0548],
         [0.0067, 0.9122, 0.8681,  ..., 0.0156, 0.0112, 0.8458]],
        [[0.9570, 0.0197, 0.0137,  ..., 0.0197, 0.0072, 0.0106],
         [0.0129, 0.0197, 0.0137,  ..., 0.0197, 0.0072, 0.0106],
         [0.0172, 0.0197, 0.0137,  ..., 0.0197, 0.9784, 0.9682],
         [0.0129, 0.9410, 0.9589,  ..., 0.9409, 0.0072, 0.0106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8904e-02, 5.8709e-03, 9.5878e-01,  ..., 9.8872e-01,
          4.3784e-02, 2.7493e-02],
         [3.5721e-02, 5.8709e-03, 9.6102e-03,  ..., 3.0229e-03,
          4.3784e-02, 2.7493e-02],
         [8.8966e-01, 5.8709e-03, 9.6102e-03,  ..., 3.0229e-03,
          8.6865e-01, 9.1752e-01],
         [3.5721e-02, 9.8239e-01, 2.1996e-02,  ..., 5.2336e-03,
          4.3784e-02, 2.7493e-02]],
        [[2.6830e-02, 7.9828e-04, 9.9383e-01,  ..., 9.6913e-01,
          2.5828e-02, 1.8307e-02],
         [2.6830e-02, 7.9828e-04, 2.0578e-03,  ..., 1.1333e-02,
          2.5472e-02, 1.8307e-02],
         [9.1951e-01, 7.9828e-04, 2.0578e-03,  ..., 9.7700e-03,
          2.5472e-02, 9.4508e-01],
         [2.6830e-02, 9.9761e-01, 2.0578e-03,  ..., 9.7700e-03,
          9.2323e-01, 1.8307e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:05:38,808 [Process: 0] Synchronize training processes
2024-08-19 13:05:38,808 [Process: 0] Evaluating...
2024-08-19 13:05:39,081 [Process: 0] EPOCH 112:
2024-08-19 13:05:39,084 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:40,070 [Process: 0] Synchronize training processes
2024-08-19 13:05:40,071 [Process: 0] Evaluating...
2024-08-19 13:05:40,072 [Process: 0] EPOCH 113:
2024-08-19 13:05:40,074 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9898, 0.0401, 0.0075,  ..., 0.9674, 0.9612, 0.0373],
         [0.0034, 0.0401, 0.0075,  ..., 0.0106, 0.0136, 0.0309],
         [0.0034, 0.0460, 0.0075,  ..., 0.0114, 0.0126, 0.0309],
         [0.0034, 0.8737, 0.9776,  ..., 0.0106, 0.0126, 0.9009]],
        [[0.9648, 0.0234, 0.0166,  ..., 0.0423, 0.0075, 0.0205],
         [0.0125, 0.0234, 0.0166,  ..., 0.0423, 0.0075, 0.0205],
         [0.0114, 0.0289, 0.0166,  ..., 0.0423, 0.9774, 0.9385],
         [0.0114, 0.9244, 0.9502,  ..., 0.8732, 0.0075, 0.0205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0171, 0.0036, 0.9315,  ..., 0.9968, 0.0277, 0.0346],
         [0.0171, 0.0036, 0.0249,  ..., 0.0010, 0.0277, 0.0318],
         [0.9486, 0.0036, 0.0218,  ..., 0.0010, 0.9168, 0.9018],
         [0.0171, 0.9892, 0.0218,  ..., 0.0012, 0.0277, 0.0318]],
        [[0.0368, 0.0013, 0.9876,  ..., 0.9764, 0.0428, 0.0274],
         [0.0368, 0.0013, 0.0041,  ..., 0.0073, 0.0364, 0.0274],
         [0.8895, 0.0013, 0.0041,  ..., 0.0073, 0.0364, 0.9177],
         [0.0368, 0.9960, 0.0041,  ..., 0.0090, 0.8844, 0.0274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9765, 0.0150, 0.0239,  ..., 0.9658, 0.9817, 0.0147],
         [0.0078, 0.0150, 0.0239,  ..., 0.0154, 0.0061, 0.0147],
         [0.0078, 0.0150, 0.0239,  ..., 0.0094, 0.0061, 0.0147],
         [0.0078, 0.9551, 0.9284,  ..., 0.0094, 0.0062, 0.9559]],
        [[0.9368, 0.0247, 0.0215,  ..., 0.0362, 0.0094, 0.0095],
         [0.0335, 0.0247, 0.0215,  ..., 0.0362, 0.0094, 0.0095],
         [0.0149, 0.0247, 0.0215,  ..., 0.0430, 0.9718, 0.9716],
         [0.0149, 0.9259, 0.9354,  ..., 0.8845, 0.0094, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:41,114 [Process: 0] Synchronize training processes
2024-08-19 13:05:41,114 [Process: 0] Evaluating...
2024-08-19 13:05:41,116 [Process: 0] EPOCH 114:
2024-08-19 13:05:41,119 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:42,158 [Process: 0] Synchronize training processes
2024-08-19 13:05:42,159 [Process: 0] Evaluating...
2024-08-19 13:05:42,161 [Process: 0] EPOCH 115:
2024-08-19 13:05:42,162 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0278, 0.0062, 0.9744,  ..., 0.9631, 0.0267, 0.0376],
         [0.0274, 0.0062, 0.0063,  ..., 0.0179, 0.0267, 0.0375],
         [0.9174, 0.0062, 0.0063,  ..., 0.0095, 0.9198, 0.8844],
         [0.0274, 0.9813, 0.0131,  ..., 0.0095, 0.0267, 0.0405]],
        [[0.0435, 0.0027, 0.9715,  ..., 0.9804, 0.0130, 0.0216],
         [0.0431, 0.0027, 0.0093,  ..., 0.0064, 0.0130, 0.0216],
         [0.8651, 0.0027, 0.0093,  ..., 0.0064, 0.0130, 0.9351],
         [0.0482, 0.9920, 0.0100,  ..., 0.0067, 0.9609, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9939, 0.0138, 0.0205,  ..., 0.9816, 0.9567, 0.0333],
         [0.0020, 0.0138, 0.0205,  ..., 0.0061, 0.0144, 0.0333],
         [0.0020, 0.0138, 0.0205,  ..., 0.0061, 0.0144, 0.0333],
         [0.0020, 0.9585, 0.9384,  ..., 0.0061, 0.0144, 0.9002]],
        [[0.9667, 0.0494, 0.0266,  ..., 0.0508, 0.0060, 0.0158],
         [0.0119, 0.0633, 0.0268,  ..., 0.0551, 0.0060, 0.0155],
         [0.0107, 0.0520, 0.0266,  ..., 0.0524, 0.9821, 0.9531],
         [0.0107, 0.8353, 0.9199,  ..., 0.8417, 0.0060, 0.0155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0134, 0.0018, 0.9657,  ..., 0.9884, 0.0099, 0.0332],
         [0.0134, 0.0018, 0.0114,  ..., 0.0039, 0.0099, 0.0332],
         [0.9599, 0.0018, 0.0114,  ..., 0.0039, 0.9703, 0.8957],
         [0.0134, 0.9947, 0.0114,  ..., 0.0039, 0.0099, 0.0379]],
        [[0.0168, 0.0050, 0.9816,  ..., 0.9899, 0.0267, 0.0202],
         [0.0168, 0.0050, 0.0066,  ..., 0.0034, 0.0211, 0.0202],
         [0.9497, 0.0050, 0.0059,  ..., 0.0034, 0.0211, 0.9394],
         [0.0168, 0.9851, 0.0059,  ..., 0.0034, 0.9310, 0.0202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9855e-01, 1.7408e-02, 6.1459e-02,  ..., 9.9303e-01,
          8.7809e-01, 3.8551e-02],
         [4.8243e-04, 1.7408e-02, 7.6228e-02,  ..., 2.4183e-03,
          4.2610e-02, 3.8551e-02],
         [4.8243e-04, 1.7408e-02, 7.2051e-02,  ..., 2.2778e-03,
          3.8453e-02, 4.7066e-02],
         [4.8243e-04, 9.4778e-01, 7.9026e-01,  ..., 2.2778e-03,
          4.0851e-02, 8.7583e-01]],
        [[9.7466e-01, 1.7643e-02, 2.8954e-02,  ..., 2.1372e-02,
          1.1796e-02, 1.0977e-02],
         [8.0896e-03, 1.7643e-02, 2.8954e-02,  ..., 2.1372e-02,
          1.1796e-02, 1.0977e-02],
         [9.1581e-03, 1.7643e-02, 4.0884e-02,  ..., 2.1372e-02,
          9.6461e-01, 9.6707e-01],
         [8.0896e-03, 9.4707e-01, 9.0121e-01,  ..., 9.3588e-01,
          1.1796e-02, 1.0977e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:43,203 [Process: 0] Synchronize training processes
2024-08-19 13:05:43,204 [Process: 0] Evaluating...
2024-08-19 13:05:43,205 [Process: 0] EPOCH 116:
2024-08-19 13:05:43,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:44,244 [Process: 0] Synchronize training processes
2024-08-19 13:05:44,245 [Process: 0] Evaluating...
2024-08-19 13:05:44,246 [Process: 0] EPOCH 117:
2024-08-19 13:05:44,248 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0226, 0.0022, 0.9860,  ..., 0.9966, 0.0098, 0.0368],
         [0.0226, 0.0022, 0.0047,  ..., 0.0011, 0.0098, 0.0368],
         [0.9311, 0.0022, 0.0047,  ..., 0.0011, 0.9707, 0.8894],
         [0.0237, 0.9935, 0.0047,  ..., 0.0011, 0.0098, 0.0369]],
        [[0.0278, 0.0014, 0.9912,  ..., 0.9819, 0.0468, 0.0198],
         [0.0278, 0.0014, 0.0029,  ..., 0.0053, 0.0810, 0.0198],
         [0.9167, 0.0014, 0.0029,  ..., 0.0053, 0.0468, 0.9405],
         [0.0278, 0.9957, 0.0029,  ..., 0.0074, 0.8255, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9823e-01, 2.7728e-02, 2.0019e-02,  ..., 9.4121e-01,
          7.5815e-01, 3.8501e-02],
         [5.8945e-04, 2.5650e-02, 2.0019e-02,  ..., 1.7016e-02,
          6.7830e-02, 3.8501e-02],
         [5.8945e-04, 2.5650e-02, 2.0019e-02,  ..., 2.4754e-02,
          8.5700e-02, 4.0816e-02],
         [5.8945e-04, 9.2097e-01, 9.3994e-01,  ..., 1.7016e-02,
          8.8318e-02, 8.8218e-01]],
        [[9.5687e-01, 6.3052e-02, 1.7270e-02,  ..., 3.5923e-02,
          5.4580e-03, 2.3981e-02],
         [1.9237e-02, 6.4259e-02, 1.7270e-02,  ..., 3.5923e-02,
          5.4580e-03, 2.3981e-02],
         [1.1949e-02, 7.9569e-02, 1.7270e-02,  ..., 3.9538e-02,
          9.8363e-01, 9.2806e-01],
         [1.1949e-02, 7.9312e-01, 9.4819e-01,  ..., 8.8862e-01,
          5.4580e-03, 2.3981e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0324, 0.0014, 0.9840,  ..., 0.9831, 0.0133, 0.0190],
         [0.0324, 0.0014, 0.0050,  ..., 0.0056, 0.0133, 0.0190],
         [0.9028, 0.0014, 0.0050,  ..., 0.0056, 0.9601, 0.9431],
         [0.0324, 0.9959, 0.0059,  ..., 0.0058, 0.0133, 0.0190]],
        [[0.0181, 0.0011, 0.9916,  ..., 0.9636, 0.0026, 0.0074],
         [0.0181, 0.0011, 0.0028,  ..., 0.0095, 0.0018, 0.0074],
         [0.9457, 0.0011, 0.0028,  ..., 0.0095, 0.0018, 0.9777],
         [0.0181, 0.9966, 0.0028,  ..., 0.0173, 0.9938, 0.0074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9845, 0.0165, 0.0270,  ..., 0.9955, 0.3185, 0.0447],
         [0.0049, 0.0165, 0.0270,  ..., 0.0015, 0.0805, 0.0471],
         [0.0056, 0.0166, 0.0270,  ..., 0.0015, 0.0845, 0.0482],
         [0.0049, 0.9504, 0.9191,  ..., 0.0015, 0.5164, 0.8601]],
        [[0.9957, 0.0115, 0.0188,  ..., 0.0421, 0.0068, 0.0042],
         [0.0014, 0.0115, 0.0188,  ..., 0.0421, 0.0068, 0.0042],
         [0.0014, 0.0115, 0.0188,  ..., 0.0547, 0.9795, 0.9873],
         [0.0014, 0.9655, 0.9437,  ..., 0.8611, 0.0068, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:45,287 [Process: 0] Synchronize training processes
2024-08-19 13:05:45,287 [Process: 0] Evaluating...
2024-08-19 13:05:45,289 [Process: 0] EPOCH 118:
2024-08-19 13:05:45,291 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:46,334 [Process: 0] Synchronize training processes
2024-08-19 13:05:46,334 [Process: 0] Evaluating...
2024-08-19 13:05:46,336 [Process: 0] EPOCH 119:
2024-08-19 13:05:46,338 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2076e-02, 5.3899e-04, 9.9268e-01,  ..., 9.5927e-01,
          1.6304e-02, 1.6759e-02],
         [2.2076e-02, 4.7978e-04, 2.4407e-03,  ..., 1.0369e-02,
          1.6304e-02, 1.6759e-02],
         [9.3377e-01, 4.7978e-04, 2.4407e-03,  ..., 1.0369e-02,
          9.5109e-01, 9.4972e-01],
         [2.2076e-02, 9.9850e-01, 2.4407e-03,  ..., 1.9995e-02,
          1.6304e-02, 1.6759e-02]],
        [[1.9279e-02, 2.1171e-03, 9.9252e-01,  ..., 9.5328e-01,
          1.6609e-02, 2.0768e-02],
         [1.9279e-02, 2.1171e-03, 2.4492e-03,  ..., 1.5575e-02,
          1.6609e-02, 2.0768e-02],
         [9.4216e-01, 2.1171e-03, 2.4492e-03,  ..., 1.5575e-02,
          1.6609e-02, 9.3770e-01],
         [1.9279e-02, 9.9365e-01, 2.5832e-03,  ..., 1.5575e-02,
          9.5017e-01, 2.0768e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9160, 0.0204, 0.0248,  ..., 0.9785, 0.9640, 0.0357],
         [0.0258, 0.0183, 0.0248,  ..., 0.0072, 0.0118, 0.0357],
         [0.0258, 0.0183, 0.0248,  ..., 0.0072, 0.0124, 0.0357],
         [0.0325, 0.9429, 0.9257,  ..., 0.0072, 0.0118, 0.8929]],
        [[0.9873, 0.0688, 0.0205,  ..., 0.0245, 0.0080, 0.0074],
         [0.0042, 0.0489, 0.0205,  ..., 0.0245, 0.0080, 0.0074],
         [0.0042, 0.0489, 0.0205,  ..., 0.0266, 0.9760, 0.9778],
         [0.0042, 0.8334, 0.9385,  ..., 0.9244, 0.0080, 0.0074]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.0208e-02, 3.7770e-04, 9.9656e-01,  ..., 9.7173e-01,
          2.3743e-02, 2.9439e-02],
         [4.0208e-02, 3.2372e-04, 1.1474e-03,  ..., 7.9284e-03,
          2.3743e-02, 2.9439e-02],
         [8.6968e-01, 3.2372e-04, 1.1474e-03,  ..., 7.9284e-03,
          9.2877e-01, 9.1168e-01],
         [4.9904e-02, 9.9897e-01, 1.1474e-03,  ..., 1.2415e-02,
          2.3743e-02, 2.9439e-02]],
        [[1.2611e-02, 1.2997e-03, 9.8617e-01,  ..., 9.9134e-01,
          7.2410e-02, 1.9644e-02],
         [1.2611e-02, 1.2997e-03, 4.6117e-03,  ..., 2.7568e-03,
          2.1543e-02, 1.9644e-02],
         [9.6217e-01, 1.2997e-03, 4.6117e-03,  ..., 2.7568e-03,
          2.1543e-02, 9.4107e-01],
         [1.2611e-02, 9.9610e-01, 4.6117e-03,  ..., 3.1417e-03,
          8.8450e-01, 1.9644e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8947e-01, 1.9126e-02, 1.6894e-02,  ..., 9.5827e-01,
          9.4937e-01, 4.5560e-02],
         [3.5110e-03, 1.9126e-02, 1.6894e-02,  ..., 1.3290e-02,
          1.3364e-02, 4.5560e-02],
         [3.5110e-03, 1.9126e-02, 1.6894e-02,  ..., 1.5152e-02,
          1.3364e-02, 6.8571e-02],
         [3.5110e-03, 9.4262e-01, 9.4932e-01,  ..., 1.3290e-02,
          2.3899e-02, 8.4031e-01]],
        [[9.9890e-01, 2.2864e-02, 1.9831e-02,  ..., 1.5446e-02,
          8.4592e-03, 2.0418e-02],
         [3.6758e-04, 2.2255e-02, 1.9831e-02,  ..., 1.5446e-02,
          8.4592e-03, 2.0418e-02],
         [3.6758e-04, 2.2255e-02, 1.9831e-02,  ..., 1.5446e-02,
          9.7462e-01, 9.3875e-01],
         [3.6758e-04, 9.3263e-01, 9.4051e-01,  ..., 9.5366e-01,
          8.4592e-03, 2.0418e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:47,386 [Process: 0] Synchronize training processes
2024-08-19 13:05:47,386 [Process: 0] Evaluating...
2024-08-19 13:05:47,388 [Process: 0] EPOCH 120:
2024-08-19 13:05:47,390 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.8017e-02, 4.7039e-03, 9.9241e-01,  ..., 9.9040e-01,
          3.0942e-02, 2.9084e-02],
         [3.8017e-02, 4.7039e-03, 2.5298e-03,  ..., 3.2017e-03,
          3.0942e-02, 2.9084e-02],
         [8.8191e-01, 4.7039e-03, 2.5298e-03,  ..., 3.2017e-03,
          9.0718e-01, 9.1275e-01],
         [4.2060e-02, 9.8589e-01, 2.5298e-03,  ..., 3.2017e-03,
          3.0942e-02, 2.9084e-02]],
        [[1.3806e-02, 6.4994e-04, 9.9345e-01,  ..., 9.9837e-01,
          3.9598e-03, 1.2488e-02],
         [1.3806e-02, 6.4994e-04, 2.1837e-03,  ..., 5.4295e-04,
          3.5646e-03, 1.2488e-02],
         [9.5858e-01, 6.4994e-04, 2.1837e-03,  ..., 5.4295e-04,
          3.5646e-03, 9.6254e-01],
         [1.3806e-02, 9.9805e-01, 2.1837e-03,  ..., 5.4295e-04,
          9.8891e-01, 1.2488e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9779, 0.0330, 0.0177,  ..., 0.9951, 0.9852, 0.0315],
         [0.0071, 0.0273, 0.0177,  ..., 0.0016, 0.0048, 0.0315],
         [0.0079, 0.0273, 0.0177,  ..., 0.0016, 0.0051, 0.0349],
         [0.0071, 0.9124, 0.9469,  ..., 0.0016, 0.0048, 0.9020]],
        [[0.9949, 0.0230, 0.0109,  ..., 0.0143, 0.0083, 0.0240],
         [0.0017, 0.0230, 0.0109,  ..., 0.0143, 0.0083, 0.0240],
         [0.0018, 0.0230, 0.0109,  ..., 0.0143, 0.9752, 0.9281],
         [0.0017, 0.9310, 0.9674,  ..., 0.9570, 0.0083, 0.0240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4214e-02, 5.2580e-03, 9.9741e-01,  ..., 9.8948e-01,
          1.9722e-02, 2.9503e-02],
         [3.4214e-02, 5.2580e-03, 8.6249e-04,  ..., 3.2088e-03,
          1.9722e-02, 2.9503e-02],
         [8.9736e-01, 5.2580e-03, 8.6249e-04,  ..., 3.2088e-03,
          9.4083e-01, 9.1149e-01],
         [3.4214e-02, 9.8423e-01, 8.6249e-04,  ..., 4.0992e-03,
          1.9722e-02, 2.9503e-02]],
        [[2.9248e-02, 3.5178e-03, 9.9275e-01,  ..., 9.6981e-01,
          4.2232e-03, 5.0050e-02],
         [2.9248e-02, 3.5178e-03, 2.4159e-03,  ..., 1.0065e-02,
          4.2232e-03, 5.1235e-02],
         [9.0973e-01, 3.5178e-03, 2.4159e-03,  ..., 1.0065e-02,
          4.2232e-03, 8.4732e-01],
         [3.1774e-02, 9.8945e-01, 2.4159e-03,  ..., 1.0065e-02,
          9.8733e-01, 5.1396e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9953, 0.0601, 0.0256,  ..., 0.9494, 0.9880, 0.0247],
         [0.0016, 0.0267, 0.0256,  ..., 0.0188, 0.0040, 0.0247],
         [0.0016, 0.0267, 0.0256,  ..., 0.0159, 0.0040, 0.0247],
         [0.0016, 0.8865, 0.9232,  ..., 0.0159, 0.0040, 0.9259]],
        [[0.9969, 0.0223, 0.0211,  ..., 0.0181, 0.0047, 0.0107],
         [0.0010, 0.0223, 0.0211,  ..., 0.0181, 0.0047, 0.0107],
         [0.0010, 0.0223, 0.0211,  ..., 0.0181, 0.9860, 0.9679],
         [0.0010, 0.9332, 0.9368,  ..., 0.9457, 0.0047, 0.0107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:48,428 [Process: 0] Synchronize training processes
2024-08-19 13:05:48,428 [Process: 0] Evaluating...
2024-08-19 13:05:48,430 [Process: 0] EPOCH 121:
2024-08-19 13:05:48,432 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:49,475 [Process: 0] Synchronize training processes
2024-08-19 13:05:49,475 [Process: 0] Evaluating...
2024-08-19 13:05:49,751 [Process: 0] EPOCH 122:
2024-08-19 13:05:49,755 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.1068e-02, 3.4487e-03, 9.6918e-01,  ..., 9.9713e-01,
          1.8670e-02, 2.8500e-02],
         [3.3418e-02, 3.4487e-03, 1.0274e-02,  ..., 9.5530e-04,
          1.8670e-02, 2.7069e-02],
         [8.9209e-01, 3.4487e-03, 1.0274e-02,  ..., 9.5530e-04,
          9.4399e-01, 9.1736e-01],
         [3.3418e-02, 9.8965e-01, 1.0274e-02,  ..., 9.5530e-04,
          1.8670e-02, 2.7069e-02]],
        [[1.4185e-02, 4.8697e-04, 9.9711e-01,  ..., 9.9088e-01,
          3.4366e-02, 1.6447e-02],
         [1.4185e-02, 4.8697e-04, 9.6175e-04,  ..., 3.0414e-03,
          1.8862e-02, 1.5663e-02],
         [9.5745e-01, 4.8697e-04, 9.6175e-04,  ..., 3.0414e-03,
          1.8862e-02, 9.5223e-01],
         [1.4185e-02, 9.9854e-01, 9.6175e-04,  ..., 3.0414e-03,
          9.2791e-01, 1.5663e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9501, 0.0214, 0.0115,  ..., 0.9144, 0.9840, 0.0088],
         [0.0161, 0.0214, 0.0115,  ..., 0.0345, 0.0053, 0.0088],
         [0.0176, 0.0214, 0.0115,  ..., 0.0264, 0.0053, 0.0088],
         [0.0161, 0.9358, 0.9654,  ..., 0.0247, 0.0054, 0.9737]],
        [[0.9765, 0.0252, 0.0234,  ..., 0.0129, 0.0039, 0.0383],
         [0.0078, 0.0252, 0.0240,  ..., 0.0129, 0.0039, 0.0383],
         [0.0078, 0.0252, 0.0234,  ..., 0.0129, 0.9883, 0.8851],
         [0.0078, 0.9244, 0.9292,  ..., 0.9614, 0.0039, 0.0383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.9838e-02, 3.5943e-03, 9.3927e-01,  ..., 9.9757e-01,
          1.5719e-02, 2.3822e-02],
         [2.9838e-02, 3.5943e-03, 1.6132e-02,  ..., 8.1080e-04,
          1.4855e-02, 2.2935e-02],
         [9.0583e-01, 3.5943e-03, 1.6132e-02,  ..., 8.1080e-04,
          9.5457e-01, 9.3031e-01],
         [3.4492e-02, 9.8922e-01, 2.8466e-02,  ..., 8.1080e-04,
          1.4855e-02, 2.2935e-02]],
        [[1.4021e-02, 1.5199e-03, 9.9105e-01,  ..., 9.6778e-01,
          8.1934e-02, 2.1774e-02],
         [1.3618e-02, 1.5199e-03, 2.9836e-03,  ..., 9.8177e-03,
          4.0029e-02, 2.0367e-02],
         [9.5874e-01, 1.5199e-03, 2.9836e-03,  ..., 9.8177e-03,
          4.0029e-02, 9.3749e-01],
         [1.3618e-02, 9.9544e-01, 2.9836e-03,  ..., 1.2589e-02,
          8.3801e-01, 2.0367e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:50,774 [Process: 0] Synchronize training processes
2024-08-19 13:05:50,774 [Process: 0] Evaluating...
2024-08-19 13:05:50,776 [Process: 0] EPOCH 123:
2024-08-19 13:05:50,778 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:51,816 [Process: 0] Synchronize training processes
2024-08-19 13:05:51,816 [Process: 0] Evaluating...
2024-08-19 13:05:51,818 [Process: 0] EPOCH 124:
2024-08-19 13:05:51,820 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9571, 0.0255, 0.0154,  ..., 0.9952, 0.8752, 0.0334],
         [0.0143, 0.0255, 0.0154,  ..., 0.0016, 0.0369, 0.0334],
         [0.0143, 0.0255, 0.0154,  ..., 0.0016, 0.0373, 0.0365],
         [0.0143, 0.9235, 0.9538,  ..., 0.0016, 0.0506, 0.8966]],
        [[0.9944, 0.0230, 0.0199,  ..., 0.0105, 0.0056, 0.0215],
         [0.0019, 0.0230, 0.0199,  ..., 0.0105, 0.0056, 0.0215],
         [0.0019, 0.0264, 0.0199,  ..., 0.0105, 0.9833, 0.9355],
         [0.0019, 0.9275, 0.9403,  ..., 0.9684, 0.0056, 0.0215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2736e-02, 1.3247e-03, 9.8045e-01,  ..., 9.9781e-01,
          1.9970e-02, 1.5029e-02],
         [2.2736e-02, 1.3247e-03, 5.3110e-03,  ..., 7.2844e-04,
          1.9970e-02, 1.5029e-02],
         [9.3179e-01, 1.3247e-03, 5.3110e-03,  ..., 7.2844e-04,
          9.4009e-01, 9.5491e-01],
         [2.2736e-02, 9.9603e-01, 8.9249e-03,  ..., 7.2844e-04,
          1.9970e-02, 1.5029e-02]],
        [[3.1156e-02, 3.0720e-03, 9.9714e-01,  ..., 9.9192e-01,
          3.9914e-01, 4.2806e-02],
         [3.1156e-02, 3.0720e-03, 9.5372e-04,  ..., 2.6934e-03,
          5.2612e-02, 4.0642e-02],
         [9.0455e-01, 3.0720e-03, 9.5372e-04,  ..., 2.6934e-03,
          5.2612e-02, 8.7407e-01],
         [3.3143e-02, 9.9078e-01, 9.5372e-04,  ..., 2.6934e-03,
          4.9563e-01, 4.2486e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8740e-01, 1.8350e-02, 3.0935e-02,  ..., 9.7891e-01,
          9.3950e-01, 5.0466e-02],
         [4.1148e-03, 1.8350e-02, 3.0935e-02,  ..., 7.0290e-03,
          2.1260e-02, 3.1931e-02],
         [4.3681e-03, 1.8350e-02, 3.0935e-02,  ..., 7.0290e-03,
          1.9618e-02, 3.1931e-02],
         [4.1148e-03, 9.4495e-01, 9.0719e-01,  ..., 7.0290e-03,
          1.9618e-02, 8.8567e-01]],
        [[9.9746e-01, 1.3604e-02, 8.9249e-03,  ..., 9.6157e-03,
          3.3616e-03, 1.4224e-02],
         [8.4523e-04, 1.3604e-02, 8.9249e-03,  ..., 9.6157e-03,
          3.3616e-03, 1.4224e-02],
         [8.4523e-04, 1.3604e-02, 8.9249e-03,  ..., 9.6157e-03,
          9.8992e-01, 9.5733e-01],
         [8.4523e-04, 9.5919e-01, 9.7323e-01,  ..., 9.7115e-01,
          3.3616e-03, 1.4224e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0781e-02, 1.5927e-03, 9.8576e-01,  ..., 9.9876e-01,
          1.8667e-02, 1.3667e-02],
         [1.0781e-02, 1.5927e-03, 4.7456e-03,  ..., 4.1293e-04,
          1.8667e-02, 1.3667e-02],
         [9.6766e-01, 1.5927e-03, 4.7456e-03,  ..., 4.1293e-04,
          9.4400e-01, 9.5900e-01],
         [1.0781e-02, 9.9522e-01, 4.7456e-03,  ..., 4.1293e-04,
          1.8667e-02, 1.3667e-02]],
        [[3.6055e-02, 3.3219e-03, 9.9250e-01,  ..., 9.9766e-01,
          5.9418e-03, 2.5795e-02],
         [3.6055e-02, 3.3219e-03, 2.4999e-03,  ..., 7.7978e-04,
          5.9418e-03, 2.5795e-02],
         [8.8803e-01, 3.3219e-03, 2.4999e-03,  ..., 7.7978e-04,
          5.9418e-03, 9.2261e-01],
         [3.9855e-02, 9.9003e-01, 2.4999e-03,  ..., 7.7978e-04,
          9.8217e-01, 2.5795e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:52,855 [Process: 0] Synchronize training processes
2024-08-19 13:05:52,855 [Process: 0] Evaluating...
2024-08-19 13:05:52,857 [Process: 0] EPOCH 125:
2024-08-19 13:05:52,859 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:53,894 [Process: 0] Synchronize training processes
2024-08-19 13:05:53,895 [Process: 0] Evaluating...
2024-08-19 13:05:53,896 [Process: 0] EPOCH 126:
2024-08-19 13:05:53,898 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8973, 0.0308, 0.0130,  ..., 0.9950, 0.8973, 0.0086],
         [0.0519, 0.0255, 0.0130,  ..., 0.0017, 0.0267, 0.0086],
         [0.0274, 0.0255, 0.0130,  ..., 0.0017, 0.0365, 0.0086],
         [0.0234, 0.9182, 0.9610,  ..., 0.0017, 0.0395, 0.9741]],
        [[0.9800, 0.0508, 0.0189,  ..., 0.0050, 0.0045, 0.0086],
         [0.0076, 0.0376, 0.0189,  ..., 0.0050, 0.0045, 0.0086],
         [0.0062, 0.0376, 0.0189,  ..., 0.9849, 0.9866, 0.9743],
         [0.0062, 0.8741, 0.9432,  ..., 0.0050, 0.0045, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2299e-02, 1.0303e-03, 9.9893e-01,  ..., 9.9044e-01,
          1.1686e-02, 1.4666e-02],
         [2.2299e-02, 1.0303e-03, 3.5735e-04,  ..., 3.1874e-03,
          1.1686e-02, 1.4666e-02],
         [9.3310e-01, 1.0303e-03, 3.5735e-04,  ..., 3.1874e-03,
          9.6494e-01, 9.5600e-01],
         [2.2299e-02, 9.9691e-01, 3.5735e-04,  ..., 3.1874e-03,
          1.1686e-02, 1.4666e-02]],
        [[2.5850e-02, 6.8446e-03, 9.9496e-01,  ..., 9.9461e-01,
          9.6664e-03, 2.1251e-02],
         [2.5850e-02, 6.8446e-03, 1.6788e-03,  ..., 1.7966e-03,
          8.8587e-03, 2.1251e-02],
         [9.2245e-01, 6.8446e-03, 1.6788e-03,  ..., 1.7966e-03,
          8.8587e-03, 9.3625e-01],
         [2.5850e-02, 9.7947e-01, 1.6788e-03,  ..., 1.7966e-03,
          9.7262e-01, 2.1251e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9956, 0.0683, 0.0144,  ..., 0.9935, 0.1198, 0.0517],
         [0.0015, 0.0294, 0.0144,  ..., 0.0022, 0.0445, 0.0419],
         [0.0015, 0.0294, 0.0144,  ..., 0.0022, 0.0445, 0.0419],
         [0.0015, 0.8730, 0.9569,  ..., 0.0022, 0.7911, 0.8645]],
        [[0.9929, 0.0442, 0.0081,  ..., 0.0119, 0.0095, 0.0079],
         [0.0024, 0.0442, 0.0081,  ..., 0.0119, 0.0095, 0.0079],
         [0.0024, 0.0481, 0.0081,  ..., 0.9643, 0.9716, 0.9763],
         [0.0024, 0.8635, 0.9756,  ..., 0.0119, 0.0095, 0.0079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0275, 0.0036, 0.9960,  ..., 0.9931, 0.0110, 0.0203],
         [0.0275, 0.0036, 0.0013,  ..., 0.0023, 0.0110, 0.0203],
         [0.9109, 0.0036, 0.0013,  ..., 0.0023, 0.9670, 0.9390],
         [0.0340, 0.9891, 0.0013,  ..., 0.0023, 0.0110, 0.0203]],
        [[0.0214, 0.0020, 0.9530,  ..., 0.9702, 0.9692, 0.0296],
         [0.0214, 0.0020, 0.0173,  ..., 0.0076, 0.0092, 0.0296],
         [0.9358, 0.0020, 0.0149,  ..., 0.0076, 0.0092, 0.9112],
         [0.0214, 0.9940, 0.0149,  ..., 0.0146, 0.0123, 0.0296]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:54,934 [Process: 0] Synchronize training processes
2024-08-19 13:05:54,934 [Process: 0] Evaluating...
2024-08-19 13:05:54,936 [Process: 0] EPOCH 127:
2024-08-19 13:05:54,937 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:55,975 [Process: 0] Synchronize training processes
2024-08-19 13:05:55,975 [Process: 0] Evaluating...
2024-08-19 13:05:55,977 [Process: 0] EPOCH 128:
2024-08-19 13:05:55,979 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9761e-01, 2.3368e-02, 2.9362e-02,  ..., 9.9736e-01,
          9.5369e-01, 9.7323e-03],
         [7.9695e-04, 2.3354e-02, 2.9362e-02,  ..., 8.8056e-04,
          1.4703e-02, 9.7323e-03],
         [7.9695e-04, 2.3354e-02, 2.9362e-02,  ..., 8.8056e-04,
          1.4703e-02, 9.7323e-03],
         [7.9695e-04, 9.2992e-01, 9.1191e-01,  ..., 8.8056e-04,
          1.6907e-02, 9.7080e-01]],
        [[9.7086e-01, 1.7640e-02, 1.8838e-02,  ..., 1.2380e-02,
          1.7231e-02, 7.2352e-03],
         [9.7119e-03, 1.7640e-02, 1.6814e-02,  ..., 1.2380e-02,
          1.7231e-02, 7.2352e-03],
         [9.7119e-03, 1.7640e-02, 1.6814e-02,  ..., 1.2380e-02,
          9.4831e-01, 9.7829e-01],
         [9.7119e-03, 9.4708e-01, 9.4753e-01,  ..., 9.6286e-01,
          1.7231e-02, 7.2352e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7364e-02, 4.5923e-03, 9.9805e-01,  ..., 9.9864e-01,
          1.9954e-02, 9.6986e-03],
         [1.7364e-02, 3.6677e-03, 6.5133e-04,  ..., 4.5205e-04,
          1.9954e-02, 9.6986e-03],
         [9.4791e-01, 3.6677e-03, 6.5133e-04,  ..., 4.5205e-04,
          9.4014e-01, 9.7090e-01],
         [1.7364e-02, 9.8807e-01, 6.5133e-04,  ..., 4.5205e-04,
          1.9954e-02, 9.6986e-03]],
        [[4.3128e-02, 3.3332e-03, 9.7867e-01,  ..., 9.8905e-01,
          3.0924e-01, 1.1923e-02],
         [4.3128e-02, 3.3332e-03, 7.1090e-03,  ..., 3.6013e-03,
          6.1214e-02, 1.1923e-02],
         [8.5751e-01, 3.3332e-03, 7.1090e-03,  ..., 3.6013e-03,
          6.1214e-02, 9.6423e-01],
         [5.6231e-02, 9.9000e-01, 7.1090e-03,  ..., 3.7521e-03,
          5.6833e-01, 1.1923e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9924, 0.0329, 0.0080,  ..., 0.8439, 0.9773, 0.0119],
         [0.0025, 0.0466, 0.0080,  ..., 0.0778, 0.0107, 0.0119],
         [0.0025, 0.0329, 0.0080,  ..., 0.0433, 0.0060, 0.0119],
         [0.0025, 0.8876, 0.9761,  ..., 0.0350, 0.0060, 0.9643]],
        [[0.9928, 0.0072, 0.0290,  ..., 0.0124, 0.0062, 0.0177],
         [0.0038, 0.0072, 0.0290,  ..., 0.0124, 0.0062, 0.0177],
         [0.0017, 0.0072, 0.0317,  ..., 0.0124, 0.9815, 0.9469],
         [0.0017, 0.9785, 0.9103,  ..., 0.9627, 0.0062, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0224, 0.0024, 0.9077,  ..., 0.9673, 0.0165, 0.0372],
         [0.0224, 0.0024, 0.0240,  ..., 0.0086, 0.0165, 0.0372],
         [0.9285, 0.0024, 0.0240,  ..., 0.0086, 0.9505, 0.8812],
         [0.0268, 0.9928, 0.0443,  ..., 0.0155, 0.0165, 0.0443]],
        [[0.0536, 0.0053, 0.9659,  ..., 0.9939, 0.0011, 0.0136],
         [0.0536, 0.0053, 0.0099,  ..., 0.0020, 0.0011, 0.0136],
         [0.8148, 0.0053, 0.0099,  ..., 0.0020, 0.0011, 0.9591],
         [0.0779, 0.9840, 0.0142,  ..., 0.0020, 0.9967, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:05:57,016 [Process: 0] Synchronize training processes
2024-08-19 13:05:57,017 [Process: 0] Evaluating...
2024-08-19 13:05:57,018 [Process: 0] EPOCH 129:
2024-08-19 13:05:57,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:05:58,059 [Process: 0] Synchronize training processes
2024-08-19 13:05:58,059 [Process: 0] Evaluating...
2024-08-19 13:05:58,061 [Process: 0] EPOCH 130:
2024-08-19 13:05:58,063 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9192e-01, 1.7702e-02, 1.8007e-02,  ..., 9.9766e-01,
          9.9290e-01, 3.9007e-02],
         [3.5613e-03, 1.7333e-02, 1.8007e-02,  ..., 7.8156e-04,
          2.3657e-03, 4.6095e-02],
         [2.2580e-03, 1.7333e-02, 2.0495e-02,  ..., 7.8156e-04,
          2.3657e-03, 3.9147e-02],
         [2.2580e-03, 9.4763e-01, 9.4349e-01,  ..., 7.8156e-04,
          2.3657e-03, 8.7575e-01]],
        [[9.8701e-01, 2.3451e-02, 1.2804e-02,  ..., 6.3208e-03,
          3.4170e-03, 1.8387e-02],
         [4.3310e-03, 2.3451e-02, 1.2081e-02,  ..., 6.3208e-03,
          3.4170e-03, 1.8387e-02],
         [4.3310e-03, 2.3451e-02, 1.2081e-02,  ..., 6.3208e-03,
          9.8975e-01, 9.4484e-01],
         [4.3310e-03, 9.2965e-01, 9.6303e-01,  ..., 9.8104e-01,
          3.4170e-03, 1.8387e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0277, 0.0026, 0.9900,  ..., 0.9773, 0.0353, 0.0125],
         [0.0277, 0.0025, 0.0033,  ..., 0.0083, 0.0353, 0.0125],
         [0.9170, 0.0025, 0.0033,  ..., 0.0072, 0.8865, 0.9624],
         [0.0277, 0.9924, 0.0035,  ..., 0.0072, 0.0428, 0.0125]],
        [[0.0501, 0.0016, 0.9849,  ..., 0.9710, 0.0042, 0.0395],
         [0.0501, 0.0016, 0.0058,  ..., 0.0097, 0.0042, 0.0389],
         [0.8172, 0.0016, 0.0047,  ..., 0.0097, 0.0042, 0.8793],
         [0.0826, 0.9953, 0.0047,  ..., 0.0097, 0.9875, 0.0422]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9742, 0.0158, 0.0217,  ..., 0.9813, 0.9784, 0.0306],
         [0.0086, 0.0158, 0.0202,  ..., 0.0062, 0.0073, 0.0306],
         [0.0086, 0.0158, 0.0202,  ..., 0.0062, 0.0071, 0.0404],
         [0.0086, 0.9526, 0.9379,  ..., 0.0062, 0.0071, 0.8983]],
        [[0.9533, 0.0046, 0.0101,  ..., 0.0193, 0.0019, 0.0439],
         [0.0141, 0.0046, 0.0101,  ..., 0.0193, 0.0019, 0.0439],
         [0.0186, 0.0046, 0.0101,  ..., 0.0193, 0.9942, 0.0611],
         [0.0141, 0.9862, 0.9696,  ..., 0.9421, 0.0019, 0.8510]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
2024-08-19 13:05:59,104 [Process: 0] Synchronize training processes
2024-08-19 13:05:59,104 [Process: 0] Evaluating...
2024-08-19 13:05:59,106 [Process: 0] EPOCH 131:
2024-08-19 13:05:59,108 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:00,147 [Process: 0] Synchronize training processes
2024-08-19 13:06:00,147 [Process: 0] Evaluating...
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7024e-02, 7.1009e-03, 9.9830e-01,  ..., 9.8851e-01,
          3.1358e-02, 3.0171e-02],
         [1.7024e-02, 7.0960e-03, 5.6805e-04,  ..., 3.6611e-03,
          3.1358e-02, 3.0171e-02],
         [9.4893e-01, 7.0960e-03, 5.6805e-04,  ..., 3.6611e-03,
          9.0416e-01, 9.0949e-01],
         [1.7024e-02, 9.7871e-01, 5.6805e-04,  ..., 4.1638e-03,
          3.3125e-02, 3.0171e-02]],
        [[1.5476e-02, 2.5406e-03, 9.9098e-01,  ..., 9.9779e-01,
          8.3322e-03, 4.6542e-02],
         [1.5476e-02, 2.5406e-03, 3.0076e-03,  ..., 7.3748e-04,
          8.3322e-03, 4.6542e-02],
         [9.5357e-01, 2.5406e-03, 3.0076e-03,  ..., 7.3748e-04,
          8.3322e-03, 8.5307e-01],
         [1.5476e-02, 9.9238e-01, 3.0076e-03,  ..., 7.3748e-04,
          9.7500e-01, 5.3845e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9599e-01, 1.8166e-02, 1.8456e-02,  ..., 9.9708e-01,
          9.6974e-01, 3.6724e-02],
         [1.3378e-03, 1.8166e-02, 1.8456e-02,  ..., 9.7422e-04,
          9.3802e-03, 2.9160e-02],
         [1.3378e-03, 1.8166e-02, 1.8456e-02,  ..., 9.7422e-04,
          9.3802e-03, 2.9160e-02],
         [1.3378e-03, 9.4550e-01, 9.4463e-01,  ..., 9.7422e-04,
          1.1501e-02, 9.0496e-01]],
        [[9.9392e-01, 7.4163e-03, 1.0253e-02,  ..., 4.0640e-02,
          1.0189e-02, 7.6228e-03],
         [2.0260e-03, 7.4163e-03, 1.0253e-02,  ..., 4.3342e-02,
          1.0189e-02, 7.6228e-03],
         [2.0260e-03, 7.4163e-03, 1.0253e-02,  ..., 4.7785e-02,
          9.6943e-01, 7.6228e-03],
         [2.0260e-03, 9.7775e-01, 9.6924e-01,  ..., 8.6823e-01,
          1.0189e-02, 9.7713e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.6827e-02, 3.1191e-03, 9.8464e-01,  ..., 9.9893e-01,
          2.0676e-02, 1.8760e-02],
         [1.6827e-02, 3.1191e-03, 4.9779e-03,  ..., 3.5792e-04,
          2.0676e-02, 1.8760e-02],
         [9.4952e-01, 3.1191e-03, 4.9779e-03,  ..., 3.5792e-04,
          9.3797e-01, 9.4372e-01],
         [1.6827e-02, 9.9064e-01, 5.4050e-03,  ..., 3.5792e-04,
          2.0676e-02, 1.8760e-02]],
        [[1.7010e-02, 6.2362e-03, 9.7378e-01,  ..., 9.9313e-01,
          1.5435e-01, 1.4021e-02],
         [1.7010e-02, 6.2362e-03, 7.5858e-03,  ..., 2.2915e-03,
          3.9568e-02, 1.4021e-02],
         [9.4897e-01, 6.2362e-03, 7.5858e-03,  ..., 2.2915e-03,
          3.9568e-02, 9.5794e-01],
         [1.7010e-02, 9.8129e-01, 1.1047e-02,  ..., 2.2915e-03,
          7.6652e-01, 1.4021e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9349e-01, 6.0388e-03, 1.9518e-02,  ..., 9.8984e-01,
          9.6674e-01, 5.7068e-02],
         [2.1704e-03, 6.0388e-03, 1.9518e-02,  ..., 3.3867e-03,
          1.1769e-02, 3.0139e-02],
         [2.1704e-03, 6.0388e-03, 1.9518e-02,  ..., 3.3867e-03,
          1.0746e-02, 3.0139e-02],
         [2.1704e-03, 9.8188e-01, 9.4145e-01,  ..., 3.3867e-03,
          1.0746e-02, 8.8266e-01]],
        [[9.8901e-01, 1.9994e-02, 1.2734e-02,  ..., 3.3933e-02,
          4.3667e-05, 4.2814e-03],
         [3.6630e-03, 1.9994e-02, 9.6258e-03,  ..., 3.3933e-02,
          9.9987e-01, 4.2814e-03],
         [3.6630e-03, 1.9994e-02, 9.6258e-03,  ..., 3.8054e-02,
          4.1069e-05, 9.8716e-01],
         [3.6630e-03, 9.4002e-01, 9.6801e-01,  ..., 8.9408e-01,
          4.1069e-05, 4.2814e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:06:00,422 [Process: 0] EPOCH 132:
2024-08-19 13:06:00,426 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:01,447 [Process: 0] Synchronize training processes
2024-08-19 13:06:01,448 [Process: 0] Evaluating...
2024-08-19 13:06:01,450 [Process: 0] EPOCH 133:
2024-08-19 13:06:01,452 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7303e-02, 1.2989e-03, 9.9701e-01,  ..., 9.9507e-01,
          1.9234e-02, 1.0040e-02],
         [1.7303e-02, 1.2989e-03, 9.3442e-04,  ..., 1.5575e-03,
          1.9234e-02, 1.0040e-02],
         [9.4809e-01, 1.2989e-03, 9.3442e-04,  ..., 1.5575e-03,
          9.4230e-01, 9.6988e-01],
         [1.7303e-02, 9.9610e-01, 1.1196e-03,  ..., 1.8184e-03,
          1.9234e-02, 1.0040e-02]],
        [[4.5122e-02, 1.5065e-03, 9.9540e-01,  ..., 9.9405e-01,
          4.1540e-01, 1.0074e-02],
         [4.5122e-02, 1.5065e-03, 1.5328e-03,  ..., 1.8067e-03,
          4.6812e-02, 1.0074e-02],
         [8.4898e-01, 1.5065e-03, 1.5328e-03,  ..., 1.8067e-03,
          4.6812e-02, 9.6978e-01],
         [6.0775e-02, 9.9548e-01, 1.5328e-03,  ..., 2.3400e-03,
          4.9098e-01, 1.0074e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.8498e-01, 1.3261e-02, 1.8774e-02,  ..., 9.9722e-01,
          9.1448e-01, 4.2042e-02],
         [5.0074e-03, 1.3261e-02, 1.8774e-02,  ..., 9.2718e-04,
          3.1662e-02, 3.4111e-02],
         [5.0074e-03, 1.3261e-02, 1.8774e-02,  ..., 9.2718e-04,
          2.5197e-02, 3.4321e-02],
         [5.0074e-03, 9.6022e-01, 9.4368e-01,  ..., 9.2718e-04,
          2.8663e-02, 8.8953e-01]],
        [[8.2137e-01, 2.9532e-02, 1.1072e-02,  ..., 2.2564e-02,
          2.9393e-03, 1.6144e-03],
         [7.5462e-02, 2.9532e-02, 1.1072e-02,  ..., 2.2564e-02,
          9.9118e-01, 1.6144e-03],
         [5.8302e-02, 4.5370e-02, 1.1072e-02,  ..., 2.2564e-02,
          2.9393e-03, 9.9516e-01],
         [4.4870e-02, 8.9556e-01, 9.6678e-01,  ..., 9.3231e-01,
          2.9393e-03, 1.6144e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0970e-02, 1.4291e-02, 9.9190e-01,  ..., 9.9668e-01,
          2.6979e-02, 1.3546e-02],
         [3.0970e-02, 1.3359e-02, 2.6999e-03,  ..., 1.1051e-03,
          2.6597e-02, 1.3546e-02],
         [9.0709e-01, 1.3359e-02, 2.6999e-03,  ..., 1.1051e-03,
          9.1983e-01, 9.5936e-01],
         [3.0970e-02, 9.5899e-01, 2.6999e-03,  ..., 1.1051e-03,
          2.6597e-02, 1.3546e-02]],
        [[2.8261e-02, 4.6127e-03, 9.5648e-01,  ..., 9.9627e-01,
          5.0781e-04, 6.6542e-03],
         [2.8261e-02, 4.6127e-03, 1.1523e-02,  ..., 1.2448e-03,
          5.0781e-04, 6.6542e-03],
         [9.0989e-01, 4.6127e-03, 1.1523e-02,  ..., 1.2448e-03,
          5.0781e-04, 9.8004e-01],
         [3.3590e-02, 9.8616e-01, 2.0476e-02,  ..., 1.2448e-03,
          9.9848e-01, 6.6542e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9804, 0.0079, 0.0447,  ..., 0.9922, 0.0201, 0.0205],
         [0.0065, 0.0079, 0.0447,  ..., 0.0026, 0.0201, 0.0199],
         [0.0065, 0.0079, 0.0618,  ..., 0.0026, 0.0234, 0.0199],
         [0.0065, 0.9763, 0.8488,  ..., 0.0026, 0.9363, 0.9397]],
        [[0.6922, 0.0252, 0.0089,  ..., 0.0292, 0.0585, 0.0061],
         [0.1349, 0.0252, 0.0089,  ..., 0.0292, 0.7943, 0.0061],
         [0.0902, 0.0313, 0.0089,  ..., 0.0329, 0.0887, 0.9816],
         [0.0827, 0.9184, 0.9733,  ..., 0.9087, 0.0585, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:06:02,491 [Process: 0] Synchronize training processes
2024-08-19 13:06:02,492 [Process: 0] Evaluating...
2024-08-19 13:06:02,493 [Process: 0] EPOCH 134:
2024-08-19 13:06:02,495 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:03,531 [Process: 0] Synchronize training processes
2024-08-19 13:06:03,532 [Process: 0] Evaluating...
2024-08-19 13:06:03,534 [Process: 0] EPOCH 135:
2024-08-19 13:06:03,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0175, 0.0052, 0.9912,  ..., 0.9820, 0.0177, 0.0353],
         [0.0175, 0.0052, 0.0029,  ..., 0.0054, 0.0163, 0.0353],
         [0.9476, 0.0052, 0.0029,  ..., 0.0054, 0.9497, 0.8907],
         [0.0175, 0.9845, 0.0029,  ..., 0.0073, 0.0163, 0.0388]],
        [[0.0903, 0.0077, 0.9879,  ..., 0.9947, 0.0051, 0.0144],
         [0.1106, 0.0072, 0.0040,  ..., 0.0015, 0.0051, 0.0136],
         [0.5037, 0.0072, 0.0040,  ..., 0.0015, 0.0051, 0.9583],
         [0.2954, 0.9780, 0.0041,  ..., 0.0023, 0.9847, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9825, 0.0375, 0.0086,  ..., 0.9691, 0.0337, 0.0615],
         [0.0057, 0.0346, 0.0086,  ..., 0.0100, 0.0337, 0.0800],
         [0.0062, 0.0336, 0.0086,  ..., 0.0109, 0.0392, 0.1063],
         [0.0057, 0.8943, 0.9742,  ..., 0.0100, 0.8934, 0.7522]],
        [[0.8328, 0.0190, 0.0219,  ..., 0.0456, 0.0633, 0.0077],
         [0.0698, 0.0195, 0.0215,  ..., 0.0594, 0.8484, 0.0077],
         [0.0551, 0.0190, 0.0215,  ..., 0.0712, 0.0442, 0.9768],
         [0.0423, 0.9425, 0.9351,  ..., 0.8238, 0.0442, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4763e-02, 2.1938e-02, 8.4199e-01,  ..., 9.9929e-01,
          3.1772e-02, 2.2893e-02],
         [1.4763e-02, 2.1938e-02, 7.5150e-02,  ..., 2.3642e-04,
          3.1772e-02, 2.2844e-02],
         [9.5571e-01, 2.7021e-02, 3.7850e-02,  ..., 2.3642e-04,
          9.0468e-01, 9.3142e-01],
         [1.4763e-02, 9.2910e-01, 4.5010e-02,  ..., 2.3642e-04,
          3.1772e-02, 2.2844e-02]],
        [[7.7798e-02, 1.4699e-03, 8.8156e-01,  ..., 9.9512e-01,
          1.6718e-03, 8.7914e-03],
         [7.7798e-02, 1.4699e-03, 6.0545e-02,  ..., 1.6270e-03,
          1.6718e-03, 8.7914e-03],
         [6.3631e-01, 1.4699e-03, 2.8945e-02,  ..., 1.6270e-03,
          1.6718e-03, 9.7363e-01],
         [2.0810e-01, 9.9559e-01, 2.8945e-02,  ..., 1.6270e-03,
          9.9498e-01, 8.7914e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:06:04,572 [Process: 0] Synchronize training processes
2024-08-19 13:06:04,573 [Process: 0] Evaluating...
2024-08-19 13:06:04,575 [Process: 0] EPOCH 136:
2024-08-19 13:06:04,576 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:05,613 [Process: 0] Synchronize training processes
2024-08-19 13:06:05,614 [Process: 0] Evaluating...
2024-08-19 13:06:05,615 [Process: 0] EPOCH 137:
2024-08-19 13:06:05,617 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9768, 0.0343, 0.0184,  ..., 0.9634, 0.0236, 0.0394],
         [0.0077, 0.0344, 0.0201,  ..., 0.0122, 0.0227, 0.0394],
         [0.0077, 0.0466, 0.0184,  ..., 0.0122, 0.0210, 0.0536],
         [0.0077, 0.8846, 0.9431,  ..., 0.0122, 0.9326, 0.8676]],
        [[0.9732, 0.0359, 0.0518,  ..., 0.0171, 0.0944, 0.0133],
         [0.0109, 0.0641, 0.0507,  ..., 0.0179, 0.7784, 0.0133],
         [0.0080, 0.0352, 0.0438,  ..., 0.0171, 0.0820, 0.9600],
         [0.0080, 0.8648, 0.8537,  ..., 0.9478, 0.0452, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5648e-02, 6.0346e-03, 9.9181e-01,  ..., 9.9756e-01,
          2.5183e-02, 2.4706e-02],
         [3.5442e-02, 1.0735e-02, 2.5448e-03,  ..., 8.1288e-04,
          2.4848e-02, 2.4706e-02],
         [8.8752e-01, 6.0346e-03, 2.5448e-03,  ..., 8.1288e-04,
          9.2512e-01, 9.2588e-01],
         [4.1395e-02, 9.7720e-01, 3.1012e-03,  ..., 8.1288e-04,
          2.4848e-02, 2.4706e-02]],
        [[4.3529e-02, 3.6490e-03, 9.6289e-01,  ..., 9.6263e-01,
          1.2056e-03, 8.3952e-03],
         [4.3529e-02, 5.2124e-03, 1.2370e-02,  ..., 1.2840e-02,
          1.4837e-03, 8.3952e-03],
         [8.5608e-01, 3.6490e-03, 1.2370e-02,  ..., 9.6376e-03,
          1.2056e-03, 9.7481e-01],
         [5.6862e-02, 9.8749e-01, 1.2370e-02,  ..., 1.4888e-02,
          9.9611e-01, 8.3952e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9522, 0.0196, 0.0034,  ..., 0.9823, 0.0068, 0.0378],
         [0.0200, 0.0232, 0.0034,  ..., 0.0059, 0.0068, 0.0378],
         [0.0139, 0.0196, 0.0034,  ..., 0.0059, 0.0068, 0.0662],
         [0.0139, 0.9375, 0.9897,  ..., 0.0059, 0.9797, 0.8582]],
        [[0.9314, 0.0579, 0.0124,  ..., 0.0158, 0.0715, 0.0249],
         [0.0319, 0.0900, 0.0160,  ..., 0.0338, 0.5951, 0.0249],
         [0.0183, 0.0854, 0.0124,  ..., 0.0158, 0.2727, 0.9252],
         [0.0183, 0.7667, 0.9591,  ..., 0.9346, 0.0608, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0219, 0.0066, 0.9962,  ..., 0.9347, 0.0215, 0.0116],
         [0.0219, 0.0108, 0.0013,  ..., 0.0151, 0.0215, 0.0116],
         [0.9344, 0.0066, 0.0013,  ..., 0.0151, 0.9354, 0.9651],
         [0.0219, 0.9760, 0.0013,  ..., 0.0351, 0.0215, 0.0116]],
        [[0.0734, 0.0014, 0.9657,  ..., 0.9547, 0.0032, 0.0065],
         [0.0714, 0.0015, 0.0099,  ..., 0.0117, 0.0049, 0.0065],
         [0.7370, 0.0014, 0.0095,  ..., 0.0102, 0.0032, 0.9805],
         [0.1181, 0.9958, 0.0148,  ..., 0.0235, 0.9887, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:06,653 [Process: 0] Synchronize training processes
2024-08-19 13:06:06,653 [Process: 0] Evaluating...
2024-08-19 13:06:06,655 [Process: 0] EPOCH 138:
2024-08-19 13:06:06,657 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:07,694 [Process: 0] Synchronize training processes
2024-08-19 13:06:07,695 [Process: 0] Evaluating...
2024-08-19 13:06:07,696 [Process: 0] EPOCH 139:
2024-08-19 13:06:07,698 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9938, 0.0236, 0.0069,  ..., 0.9957, 0.2578, 0.1187],
         [0.0021, 0.0295, 0.0069,  ..., 0.0014, 0.1002, 0.0792],
         [0.0021, 0.0236, 0.0069,  ..., 0.0014, 0.1183, 0.0619],
         [0.0021, 0.9234, 0.9794,  ..., 0.0014, 0.5237, 0.7403]],
        [[0.9850, 0.0303, 0.0119,  ..., 0.0196, 0.2125, 0.0070],
         [0.0061, 0.0377, 0.0198,  ..., 0.0199, 0.2596, 0.0070],
         [0.0045, 0.0357, 0.0119,  ..., 0.0196, 0.4552, 0.9790],
         [0.0045, 0.8963, 0.9564,  ..., 0.9410, 0.0727, 0.0070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7697e-02, 7.8934e-03, 9.9905e-01,  ..., 9.9711e-01,
          2.5548e-02, 1.6453e-02],
         [1.7697e-02, 6.3316e-03, 3.1568e-04,  ..., 9.6264e-04,
          2.5548e-02, 1.6240e-02],
         [9.4691e-01, 6.3316e-03, 3.1568e-04,  ..., 9.6264e-04,
          9.2336e-01, 9.5107e-01],
         [1.7697e-02, 9.7944e-01, 3.1568e-04,  ..., 9.6264e-04,
          2.5548e-02, 1.6240e-02]],
        [[3.8574e-02, 2.9507e-03, 9.6617e-01,  ..., 9.9895e-01,
          3.5037e-03, 6.2377e-03],
         [3.8574e-02, 4.1338e-03, 1.4736e-02,  ..., 3.5030e-04,
          3.5037e-03, 6.1976e-03],
         [8.7816e-01, 2.9507e-03, 8.6769e-03,  ..., 3.5030e-04,
          3.5037e-03, 9.8137e-01],
         [4.4694e-02, 9.8996e-01, 1.0420e-02,  ..., 3.5030e-04,
          9.8949e-01, 6.1976e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9664e-01, 2.2651e-02, 5.0635e-03,  ..., 9.8665e-01,
          9.6523e-01, 7.9974e-02],
         [1.4266e-03, 2.7988e-02, 5.0635e-03,  ..., 5.0828e-03,
          1.3225e-02, 8.7759e-02],
         [9.6738e-04, 2.2651e-02, 5.0635e-03,  ..., 4.1347e-03,
          1.0352e-02, 9.0132e-02],
         [9.6738e-04, 9.2671e-01, 9.8481e-01,  ..., 4.1347e-03,
          1.1193e-02, 7.4213e-01]],
        [[9.8753e-01, 3.2684e-02, 6.5417e-03,  ..., 4.0240e-02,
          1.4301e-02, 6.6256e-03],
         [5.3329e-03, 5.8035e-02, 6.5417e-03,  ..., 6.2311e-02,
          1.4003e-02, 6.6256e-03],
         [3.5673e-03, 3.2684e-02, 6.5417e-03,  ..., 4.2779e-02,
          9.5769e-01, 9.8012e-01],
         [3.5673e-03, 8.7660e-01, 9.8037e-01,  ..., 8.5467e-01,
          1.4003e-02, 6.6256e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0286, 0.0015, 0.9935,  ..., 0.9733, 0.0231, 0.0058],
         [0.0286, 0.0015, 0.0019,  ..., 0.0069, 0.0231, 0.0058],
         [0.9142, 0.0015, 0.0019,  ..., 0.0069, 0.9308, 0.9825],
         [0.0286, 0.9955, 0.0027,  ..., 0.0128, 0.0231, 0.0058]],
        [[0.0144, 0.0050, 0.9721,  ..., 0.9911, 0.0042, 0.0134],
         [0.0144, 0.0050, 0.0087,  ..., 0.0028, 0.0043, 0.0134],
         [0.9568, 0.0050, 0.0080,  ..., 0.0028, 0.0042, 0.9598],
         [0.0144, 0.9850, 0.0111,  ..., 0.0032, 0.9872, 0.0134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:08,735 [Process: 0] Synchronize training processes
2024-08-19 13:06:08,735 [Process: 0] Evaluating...
2024-08-19 13:06:08,737 [Process: 0] EPOCH 140:
2024-08-19 13:06:08,738 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:06:09,774 [Process: 0] Synchronize training processes
2024-08-19 13:06:09,775 [Process: 0] Evaluating...
2024-08-19 13:06:09,776 [Process: 0] EPOCH 141:
2024-08-19 13:06:09,778 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9052, 0.0155, 0.0132,  ..., 0.9954, 0.9621, 0.0609],
         [0.0382, 0.0149, 0.0132,  ..., 0.0018, 0.0155, 0.0299],
         [0.0323, 0.0149, 0.0132,  ..., 0.0014, 0.0122, 0.0299],
         [0.0243, 0.9547, 0.9604,  ..., 0.0014, 0.0102, 0.8793]],
        [[0.9556, 0.0032, 0.0161,  ..., 0.0591, 0.0126, 0.0189],
         [0.0223, 0.0032, 0.0161,  ..., 0.0868, 0.0126, 0.0189],
         [0.0110, 0.0032, 0.0161,  ..., 0.0803, 0.9621, 0.9434],
         [0.0110, 0.9904, 0.9517,  ..., 0.7738, 0.0126, 0.0189]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0202, 0.0081, 0.9785,  ..., 0.9590, 0.0119, 0.0050],
         [0.0202, 0.0081, 0.0059,  ..., 0.0114, 0.0119, 0.0050],
         [0.9393, 0.0081, 0.0059,  ..., 0.0104, 0.9644, 0.9851],
         [0.0202, 0.9756, 0.0098,  ..., 0.0192, 0.0119, 0.0050]],
        [[0.0188, 0.0037, 0.9552,  ..., 0.9893, 0.0026, 0.0111],
         [0.0188, 0.0037, 0.0113,  ..., 0.0037, 0.0026, 0.0111],
         [0.9437, 0.0037, 0.0100,  ..., 0.0035, 0.0026, 0.9667],
         [0.0188, 0.9890, 0.0235,  ..., 0.0035, 0.9922, 0.0111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9920, 0.0102, 0.0097,  ..., 0.9949, 0.9851, 0.0499],
         [0.0027, 0.0102, 0.0097,  ..., 0.0017, 0.0053, 0.0378],
         [0.0027, 0.0102, 0.0097,  ..., 0.0017, 0.0048, 0.0385],
         [0.0027, 0.9695, 0.9710,  ..., 0.0017, 0.0048, 0.8738]],
        [[0.9318, 0.0049, 0.0176,  ..., 0.0074, 0.0122, 0.0177],
         [0.0220, 0.0049, 0.0139,  ..., 0.0074, 0.0122, 0.0177],
         [0.0197, 0.0049, 0.0139,  ..., 0.0074, 0.9635, 0.9469],
         [0.0264, 0.9854, 0.9546,  ..., 0.9779, 0.0122, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0078, 0.0250, 0.9958,  ..., 0.9968, 0.0147, 0.0119],
         [0.0078, 0.0166, 0.0014,  ..., 0.0010, 0.0147, 0.0119],
         [0.9767, 0.0166, 0.0014,  ..., 0.0010, 0.9558, 0.9642],
         [0.0078, 0.9418, 0.0014,  ..., 0.0012, 0.0147, 0.0119]],
        [[0.0374, 0.0018, 0.9798,  ..., 0.8629, 0.0026, 0.0131],
         [0.0374, 0.0018, 0.0054,  ..., 0.0329, 0.0022, 0.0131],
         [0.8878, 0.0018, 0.0054,  ..., 0.0283, 0.0022, 0.9608],
         [0.0374, 0.9945, 0.0094,  ..., 0.0760, 0.9929, 0.0131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:06:10,817 [Process: 0] Synchronize training processes
2024-08-19 13:06:10,817 [Process: 0] Evaluating...
2024-08-19 13:06:11,090 [Process: 0] EPOCH 142:
2024-08-19 13:06:11,093 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 207, in train_one_epoch
    if torch.isnan(loss):
KeyboardInterrupt
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9735, 0.0204, 0.0154,  ..., 0.9848, 0.8304, 0.0171],
         [0.0080, 0.0133, 0.0130,  ..., 0.0051, 0.0629, 0.0171],
         [0.0104, 0.0133, 0.0130,  ..., 0.0051, 0.0457, 0.0191],
         [0.0080, 0.9529, 0.9586,  ..., 0.0051, 0.0610, 0.9467]],
        [[0.1254, 0.0380, 0.0485,  ..., 0.0084, 0.0185, 0.0333],
         [0.4139, 0.0266, 0.0294,  ..., 0.0084, 0.0185, 0.0333],
         [0.2672, 0.0271, 0.0327,  ..., 0.0084, 0.9445, 0.9002],
         [0.1934, 0.9083, 0.8894,  ..., 0.9748, 0.0185, 0.0333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0253, 0.0025, 0.9943,  ..., 0.9832, 0.0170, 0.0101],
         [0.0253, 0.0025, 0.0016,  ..., 0.0049, 0.0170, 0.0101],
         [0.9230, 0.0025, 0.0016,  ..., 0.0049, 0.9490, 0.9698],
         [0.0264, 0.9924, 0.0026,  ..., 0.0069, 0.0170, 0.0101]],
        [[0.0465, 0.0122, 0.9095,  ..., 0.9777, 0.0039, 0.0067],
         [0.0458, 0.0122, 0.0317,  ..., 0.0067, 0.0039, 0.0067],
         [0.8575, 0.0122, 0.0195,  ..., 0.0067, 0.0039, 0.9798],
         [0.0502, 0.9634, 0.0393,  ..., 0.0089, 0.9882, 0.0067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])