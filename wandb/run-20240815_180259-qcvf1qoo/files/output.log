[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-15 18:03:05,172 [Worker 0] Is distributed: False
2024-08-15 18:03:05,173 [Process: 0] Starting training
2024-08-15 18:03:05,173 [Process: 0] EPOCH 1:
2024-08-15 18:03:05,177 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 4, 4096])
shape of recept: torch.Size([2, 3, 480, 640])
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
----x_rgb shape: torch.Size([2, 1, 480, 640])
shape of inputs: torch.Size([2, 480, 640])
shape of targets: torch.Size([2, 480, 640])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 4, 4096])
shape of recept: torch.Size([2, 3, 480, 640])
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
----x_rgb shape: torch.Size([2, 1, 480, 640])
shape of inputs: torch.Size([2, 480, 640])
shape of targets: torch.Size([2, 480, 640])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-15 18:03:08,237 [Process: 0] Synchronize training processes
2024-08-15 18:03:08,237 [Process: 0] Evaluating...
2024-08-15 18:03:08,240 [Process: 0] EPOCH 2:
2024-08-15 18:03:08,242 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 4, 4096])
shape of recept: torch.Size([2, 3, 480, 640])
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
----x_rgb shape: torch.Size([2, 1, 480, 640])
shape of inputs: torch.Size([2, 480, 640])
shape of targets: torch.Size([2, 480, 640])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 4, 4096])
shape of recept: torch.Size([2, 3, 480, 640])
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
----x_rgb shape: torch.Size([2, 1, 480, 640])
shape of inputs: torch.Size([2, 480, 640])
shape of targets: torch.Size([2, 480, 640])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-15 18:03:10,491 [Process: 0] Synchronize training processes
2024-08-15 18:03:10,491 [Process: 0] Evaluating...
2024-08-15 18:03:10,494 [Process: 0] EPOCH 3:
2024-08-15 18:03:10,497 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-15 18:03:12,733 [Process: 0] Synchronize training processes
2024-08-15 18:03:12,733 [Process: 0] Evaluating...
2024-08-15 18:03:12,736 [Process: 0] EPOCH 4:
2024-08-15 18:03:12,739 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 4, 4096])
shape of recept: torch.Size([2, 3, 480, 640])
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
----x_rgb shape: torch.Size([2, 1, 480, 640])
shape of inputs: torch.Size([2, 480, 640])
shape of targets: torch.Size([2, 480, 640])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 4, 4096])
shape of recept: torch.Size([2, 3, 480, 640])
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
----x_rgb shape: torch.Size([2, 1, 480, 640])
shape of inputs: torch.Size([2, 480, 640])
shape of targets: torch.Size([2, 480, 640])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 4, 4096])
shape of recept: torch.Size([2, 3, 480, 640])
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
torch.float32
----x_rgb shape: torch.Size([2, 1, 480, 640])
shape of inputs: torch.Size([2, 480, 640])
shape of targets: torch.Size([2, 480, 640])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 339, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 164, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 164, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
KeyboardInterrupt