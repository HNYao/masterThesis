2024-08-19 15:43:57,374 [Worker 0] Is distributed: False
2024-08-19 15:43:57,374 [Process: 0] Starting training
2024-08-19 15:43:57,374 [Process: 0] EPOCH 1:
2024-08-19 15:43:57,378 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:43:58,932 [Process: 0] Synchronize training processes
2024-08-19 15:43:58,932 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2028, 0.3592, 0.1945,  ..., 0.1251, 0.4740, 0.1963],
         [0.3724, 0.2667, 0.1582,  ..., 0.1394, 0.1753, 0.4111],
         [0.2220, 0.1966, 0.4491,  ..., 0.5495, 0.1753, 0.1963],
         [0.2028, 0.1774, 0.1982,  ..., 0.1860, 0.1753, 0.1963]],
        [[0.3022, 0.1658, 0.5318,  ..., 0.2739, 0.2172, 0.1463],
         [0.1963, 0.4420, 0.0963,  ..., 0.3728, 0.2172, 0.2151],
         [0.1502, 0.2115, 0.0963,  ..., 0.1767, 0.3485, 0.1463],
         [0.3513, 0.1806, 0.2755,  ..., 0.1767, 0.2172, 0.4923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2712, 0.2670, 0.1957,  ..., 0.2622, 0.2629, 0.2123],
         [0.2855, 0.2412, 0.2844,  ..., 0.2837, 0.1870, 0.2496],
         [0.2053, 0.2195, 0.1988,  ..., 0.2055, 0.2087, 0.2123],
         [0.2380, 0.2723, 0.3210,  ..., 0.2487, 0.3414, 0.3258]],
        [[0.2558, 0.2466, 0.2675,  ..., 0.3079, 0.3156, 0.3093],
         [0.2743, 0.3289, 0.2496,  ..., 0.2573, 0.2210, 0.2313],
         [0.1899, 0.1792, 0.2046,  ..., 0.2090, 0.2210, 0.2085],
         [0.2799, 0.2454, 0.2784,  ..., 0.2258, 0.2424, 0.2509]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 15:43:59,853 [Process: 0] EPOCH 2:
2024-08-19 15:43:59,855 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:00,725 [Process: 0] Synchronize training processes
2024-08-19 15:44:00,725 [Process: 0] Evaluating...
2024-08-19 15:44:00,727 [Process: 0] EPOCH 3:
2024-08-19 15:44:00,728 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2922, 0.2005, 0.2718,  ..., 0.1733, 0.2874, 0.2840],
         [0.2470, 0.2005, 0.2521,  ..., 0.1733, 0.2636, 0.2559],
         [0.1930, 0.3985, 0.1927,  ..., 0.4800, 0.1718, 0.1892],
         [0.2677, 0.2005, 0.2834,  ..., 0.1733, 0.2772, 0.2709]],
        [[0.0997, 0.2786, 0.2893,  ..., 0.2738, 0.2500, 0.2758],
         [0.0997, 0.2479, 0.2744,  ..., 0.2552, 0.2500, 0.2553],
         [0.7008, 0.2004, 0.1701,  ..., 0.1934, 0.2500, 0.1844],
         [0.0997, 0.2731, 0.2662,  ..., 0.2776, 0.2500, 0.2844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2857, 0.2650, 0.2723,  ..., 0.2744, 0.1953, 0.2466],
         [0.2432, 0.2504, 0.2566,  ..., 0.2548, 0.1953, 0.2494],
         [0.2077, 0.2008, 0.2043,  ..., 0.2076, 0.4141, 0.2574],
         [0.2633, 0.2838, 0.2668,  ..., 0.2632, 0.1953, 0.2466]],
        [[0.2595, 0.2622, 0.2654,  ..., 0.2723, 0.2366, 0.2139],
         [0.2448, 0.2513, 0.2381,  ..., 0.2535, 0.2740, 0.2808],
         [0.2448, 0.1908, 0.2129,  ..., 0.1925, 0.2499, 0.2913],
         [0.2509, 0.2957, 0.2837,  ..., 0.2817, 0.2394, 0.2139]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2755, 0.2697, 0.2762,  ..., 0.2660, 0.2707, 0.2659],
         [0.2468, 0.2412, 0.2290,  ..., 0.2412, 0.2379, 0.2498],
         [0.1972, 0.2113, 0.2083,  ..., 0.1964, 0.2078, 0.2047],
         [0.2804, 0.2778, 0.2865,  ..., 0.2965, 0.2836, 0.2795]],
        [[0.2209, 0.2763, 0.2689,  ..., 0.2219, 0.1652, 0.2387],
         [0.2209, 0.2371, 0.2348,  ..., 0.2219, 0.1652, 0.2387],
         [0.3372, 0.2057, 0.2168,  ..., 0.3342, 0.5044, 0.2838],
         [0.2209, 0.2809, 0.2796,  ..., 0.2219, 0.1652, 0.2387]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:01,606 [Process: 0] Synchronize training processes
2024-08-19 15:44:01,606 [Process: 0] Evaluating...
2024-08-19 15:44:01,608 [Process: 0] EPOCH 4:
2024-08-19 15:44:01,610 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:02,500 [Process: 0] Synchronize training processes
2024-08-19 15:44:02,501 [Process: 0] Evaluating...
2024-08-19 15:44:02,502 [Process: 0] EPOCH 5:
2024-08-19 15:44:02,504 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1735, 0.2810, 0.2773,  ..., 0.2389, 0.2202, 0.2530],
         [0.1735, 0.2451, 0.2336,  ..., 0.2717, 0.2234, 0.2613],
         [0.4795, 0.1961, 0.2069,  ..., 0.2255, 0.3363, 0.2375],
         [0.1735, 0.2779, 0.2823,  ..., 0.2639, 0.2202, 0.2482]],
        [[0.2784, 0.2800, 0.2709,  ..., 0.2591, 0.2633, 0.1587],
         [0.2221, 0.2426, 0.2252,  ..., 0.2355, 0.2353, 0.1587],
         [0.2221, 0.2078, 0.2142,  ..., 0.2106, 0.2100, 0.5238],
         [0.2774, 0.2696, 0.2897,  ..., 0.2949, 0.2914, 0.1587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2761, 0.2770, 0.2662,  ..., 0.2717, 0.2839, 0.2605],
         [0.2341, 0.2448, 0.2445,  ..., 0.2290, 0.2362, 0.2347],
         [0.2015, 0.1899, 0.2092,  ..., 0.1949, 0.1990, 0.2054],
         [0.2883, 0.2883, 0.2801,  ..., 0.3044, 0.2809, 0.2994]],
        [[0.0563, 0.2837, 0.2966,  ..., 0.2656, 0.0887, 0.1654],
         [0.0563, 0.2425, 0.2298,  ..., 0.2611, 0.0887, 0.1654],
         [0.8311, 0.1904, 0.2017,  ..., 0.2154, 0.7339, 0.5038],
         [0.0563, 0.2834, 0.2719,  ..., 0.2579, 0.0887, 0.1654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0981, 0.2755, 0.2650,  ..., 0.2765, 0.0788, 0.1645],
         [0.1008, 0.2316, 0.2372,  ..., 0.2264, 0.0788, 0.1645],
         [0.7030, 0.2011, 0.2091,  ..., 0.2076, 0.7636, 0.5064],
         [0.0981, 0.2918, 0.2887,  ..., 0.2895, 0.0788, 0.1645]],
        [[0.2688, 0.2888, 0.2811,  ..., 0.2792, 0.2807, 0.2172],
         [0.2198, 0.2295, 0.2229,  ..., 0.2321, 0.2253, 0.2241],
         [0.2177, 0.2084, 0.2089,  ..., 0.2044, 0.2010, 0.3414],
         [0.2937, 0.2733, 0.2871,  ..., 0.2843, 0.2930, 0.2172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2857, 0.2904, 0.2727,  ..., 0.2781, 0.2935, 0.2854],
         [0.2232, 0.2240, 0.2192,  ..., 0.2274, 0.2272, 0.2286],
         [0.1977, 0.2013, 0.2098,  ..., 0.1992, 0.2008, 0.1989],
         [0.2934, 0.2843, 0.2983,  ..., 0.2953, 0.2786, 0.2870]],
        [[0.0511, 0.2852, 0.2847,  ..., 0.2775, 0.0945, 0.0287],
         [0.0511, 0.2291, 0.2308,  ..., 0.2595, 0.0945, 0.0287],
         [0.8466, 0.1857, 0.1930,  ..., 0.2054, 0.7164, 0.9138],
         [0.0511, 0.3000, 0.2915,  ..., 0.2576, 0.0945, 0.0287]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:03,409 [Process: 0] Synchronize training processes
2024-08-19 15:44:03,410 [Process: 0] Evaluating...
2024-08-19 15:44:03,411 [Process: 0] EPOCH 6:
2024-08-19 15:44:03,413 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:04,350 [Process: 0] Synchronize training processes
2024-08-19 15:44:04,351 [Process: 0] Evaluating...
2024-08-19 15:44:04,352 [Process: 0] EPOCH 7:
2024-08-19 15:44:04,354 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0254, 0.2847, 0.2884,  ..., 0.3005, 0.0696, 0.1883],
         [0.0306, 0.2092, 0.2194,  ..., 0.2131, 0.0696, 0.1883],
         [0.9187, 0.1958, 0.2053,  ..., 0.1860, 0.7913, 0.4350],
         [0.0254, 0.3103, 0.2869,  ..., 0.3004, 0.0696, 0.1883]],
        [[0.3076, 0.2932, 0.2779,  ..., 0.2940, 0.2823, 0.1492],
         [0.2228, 0.2170, 0.2130,  ..., 0.2064, 0.2220, 0.1594],
         [0.1863, 0.2124, 0.1951,  ..., 0.1987, 0.2017, 0.5421],
         [0.2833, 0.2774, 0.3140,  ..., 0.3009, 0.2939, 0.1492]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2933, 0.2015, 0.3150,  ..., 0.2841, 0.3120, 0.2953],
         [0.2097, 0.2246, 0.2247,  ..., 0.2123, 0.2031, 0.2132],
         [0.2021, 0.3725, 0.1784,  ..., 0.2023, 0.1964, 0.1974],
         [0.2949, 0.2015, 0.2819,  ..., 0.3014, 0.2886, 0.2942]],
        [[0.1206, 0.3066, 0.2866,  ..., 0.2165, 0.0643, 0.0844],
         [0.1359, 0.2068, 0.2314,  ..., 0.2632, 0.0643, 0.1078],
         [0.6228, 0.1869, 0.1913,  ..., 0.3121, 0.8072, 0.7233],
         [0.1206, 0.2997, 0.2907,  ..., 0.2083, 0.0643, 0.0844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0051, 0.3081, 0.3304,  ..., 0.3034, 0.0193, 0.1002],
         [0.0131, 0.1943, 0.1956,  ..., 0.2069, 0.0193, 0.1002],
         [0.9768, 0.1943, 0.1817,  ..., 0.2069, 0.9421, 0.6995],
         [0.0051, 0.3033, 0.2923,  ..., 0.2829, 0.0193, 0.1002]],
        [[0.3363, 0.3031, 0.2827,  ..., 0.2928, 0.2744, 0.0808],
         [0.1856, 0.1980, 0.2057,  ..., 0.2020, 0.2189, 0.0854],
         [0.1838, 0.1921, 0.2057,  ..., 0.2014, 0.2102, 0.7529],
         [0.2943, 0.3069, 0.3060,  ..., 0.3039, 0.2964, 0.0808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2413, 0.2977, 0.3150,  ..., 0.2705, 0.3263, 0.3034],
         [0.2370, 0.2090, 0.1976,  ..., 0.2225, 0.2073, 0.2033],
         [0.2669, 0.2090, 0.1933,  ..., 0.2225, 0.1857, 0.2033],
         [0.2548, 0.2842, 0.2941,  ..., 0.2844, 0.2808, 0.2900]],
        [[0.1399, 0.2967, 0.2885,  ..., 0.2773, 0.1794, 0.0607],
         [0.1885, 0.2091, 0.2107,  ..., 0.2235, 0.1794, 0.0884],
         [0.5317, 0.2091, 0.2107,  ..., 0.2156, 0.4618, 0.7902],
         [0.1399, 0.2850, 0.2901,  ..., 0.2836, 0.1794, 0.0607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-19 15:44:05,313 [Process: 0] Synchronize training processes
2024-08-19 15:44:05,314 [Process: 0] Evaluating...
2024-08-19 15:44:05,315 [Process: 0] EPOCH 8:
2024-08-19 15:44:05,317 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:06,333 [Process: 0] Synchronize training processes
2024-08-19 15:44:06,333 [Process: 0] Evaluating...
2024-08-19 15:44:06,335 [Process: 0] EPOCH 9:
2024-08-19 15:44:06,336 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0646, 0.3149, 0.3394,  ..., 0.3302, 0.0393, 0.1036],
         [0.0805, 0.1903, 0.1875,  ..., 0.1877, 0.0393, 0.1552],
         [0.7903, 0.1903, 0.1795,  ..., 0.1873, 0.8820, 0.6376],
         [0.0646, 0.3044, 0.2936,  ..., 0.2948, 0.0393, 0.1036]],
        [[0.3419, 0.3007, 0.3194,  ..., 0.3223, 0.3139, 0.0361],
         [0.1912, 0.2144, 0.1860,  ..., 0.1956, 0.2010, 0.0615],
         [0.1825, 0.1996, 0.1860,  ..., 0.1956, 0.2010, 0.8663],
         [0.2844, 0.2853, 0.3087,  ..., 0.2864, 0.2841, 0.0361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2834, 0.3016, 0.2847,  ..., 0.3128, 0.3001, 0.3211],
         [0.2187, 0.2117, 0.2183,  ..., 0.2055, 0.2060, 0.1982],
         [0.2187, 0.2117, 0.2183,  ..., 0.1951, 0.2018, 0.1982],
         [0.2791, 0.2749, 0.2786,  ..., 0.2865, 0.2922, 0.2826]],
        [[0.1124, 0.2924, 0.2881,  ..., 0.2930, 0.1224, 0.0424],
         [0.1276, 0.2055, 0.2132,  ..., 0.2231, 0.1224, 0.0702],
         [0.6477, 0.2055, 0.2132,  ..., 0.2077, 0.6329, 0.8450],
         [0.1124, 0.2966, 0.2855,  ..., 0.2761, 0.1224, 0.0424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0759, 0.3334, 0.3116,  ..., 0.3558, 0.1023, 0.3109],
         [0.1470, 0.1950, 0.2026,  ..., 0.1798, 0.1023, 0.2025],
         [0.7011, 0.1790, 0.2026,  ..., 0.1729, 0.6932, 0.1924],
         [0.0759, 0.2926, 0.2831,  ..., 0.2915, 0.1023, 0.2941]],
        [[0.3196, 0.2996, 0.2874,  ..., 0.2858, 0.3212, 0.0892],
         [0.1930, 0.2118, 0.2024,  ..., 0.2071, 0.1924, 0.1474],
         [0.1921, 0.2118, 0.2024,  ..., 0.2071, 0.1897, 0.6742],
         [0.2953, 0.2769, 0.3078,  ..., 0.3000, 0.2967, 0.0892]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2717, 0.3355, 0.3058,  ..., 0.3118, 0.3154, 0.3222],
         [0.2274, 0.1982, 0.2044,  ..., 0.2042, 0.2071, 0.1931],
         [0.2400, 0.1779, 0.2009,  ..., 0.2042, 0.1991, 0.1931],
         [0.2610, 0.2885, 0.2889,  ..., 0.2798, 0.2784, 0.2916]],
        [[0.1085, 0.3021, 0.2911,  ..., 0.2738, 0.1209, 0.0435],
         [0.1305, 0.2062, 0.2073,  ..., 0.2321, 0.1209, 0.0532],
         [0.6525, 0.2062, 0.2073,  ..., 0.2160, 0.6373, 0.8598],
         [0.1085, 0.2854, 0.2942,  ..., 0.2781, 0.1209, 0.0435]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:07,389 [Process: 0] Synchronize training processes
2024-08-19 15:44:07,389 [Process: 0] Evaluating...
2024-08-19 15:44:07,391 [Process: 0] EPOCH 10:
2024-08-19 15:44:07,392 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:08,405 [Process: 0] Synchronize training processes
2024-08-19 15:44:08,406 [Process: 0] Evaluating...
2024-08-19 15:44:08,407 [Process: 0] EPOCH 11:
2024-08-19 15:44:08,409 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0943, 0.3571, 0.3148,  ..., 0.3507, 0.1059, 0.2672],
         [0.1311, 0.1883, 0.2226,  ..., 0.1944, 0.1092, 0.2202],
         [0.6803, 0.1749, 0.1928,  ..., 0.1723, 0.6790, 0.2471],
         [0.0943, 0.2797, 0.2697,  ..., 0.2825, 0.1059, 0.2654]],
        [[0.3051, 0.3059, 0.3105,  ..., 0.3004, 0.3213, 0.0507],
         [0.1982, 0.1982, 0.1978,  ..., 0.2035, 0.1935, 0.0752],
         [0.1917, 0.1982, 0.1905,  ..., 0.2035, 0.1920, 0.8233],
         [0.3049, 0.2977, 0.3011,  ..., 0.2926, 0.2932, 0.0507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3196, 0.3031, 0.2841,  ..., 0.3307, 0.3099, 0.3015],
         [0.1996, 0.2069, 0.2172,  ..., 0.2062, 0.2157, 0.2045],
         [0.1958, 0.2069, 0.2172,  ..., 0.1913, 0.2054, 0.2045],
         [0.2850, 0.2831, 0.2815,  ..., 0.2719, 0.2691, 0.2895]],
        [[0.1780, 0.2976, 0.2716,  ..., 0.3015, 0.1962, 0.0656],
         [0.1780, 0.2079, 0.2150,  ..., 0.2052, 0.1962, 0.0656],
         [0.4659, 0.2079, 0.2150,  ..., 0.2019, 0.4115, 0.8031],
         [0.1780, 0.2865, 0.2984,  ..., 0.2914, 0.1962, 0.0656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1592, 0.3023, 0.2937,  ..., 0.3403, 0.1140, 0.1902],
         [0.1592, 0.2053, 0.2132,  ..., 0.1976, 0.1140, 0.1902],
         [0.5223, 0.1970, 0.2051,  ..., 0.1856, 0.6581, 0.4294],
         [0.1592, 0.2953, 0.2881,  ..., 0.2766, 0.1140, 0.1902]],
        [[0.3146, 0.2937, 0.3224,  ..., 0.3004, 0.3148, 0.0686],
         [0.1897, 0.2027, 0.1955,  ..., 0.1992, 0.1950, 0.0686],
         [0.1838, 0.1962, 0.1797,  ..., 0.1992, 0.1884, 0.7943],
         [0.3120, 0.3075, 0.3023,  ..., 0.3012, 0.3017, 0.0686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3151, 0.2952, 0.2860,  ..., 0.3312, 0.2993, 0.2961],
         [0.2078, 0.2099, 0.2131,  ..., 0.2085, 0.2118, 0.2060],
         [0.1902, 0.2047, 0.2131,  ..., 0.1898, 0.2074, 0.2060],
         [0.2869, 0.2902, 0.2879,  ..., 0.2704, 0.2816, 0.2919]],
        [[0.2423, 0.3038, 0.2649,  ..., 0.3319, 0.1721, 0.0679],
         [0.2199, 0.2072, 0.2211,  ..., 0.2083, 0.1721, 0.0679],
         [0.2940, 0.2025, 0.2211,  ..., 0.1891, 0.4836, 0.7964],
         [0.2438, 0.2865, 0.2928,  ..., 0.2707, 0.1721, 0.0679]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:09,462 [Process: 0] Synchronize training processes
2024-08-19 15:44:09,463 [Process: 0] Evaluating...
2024-08-19 15:44:10,424 [Process: 0] EPOCH 12:
2024-08-19 15:44:10,426 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1555, 0.3098, 0.3326,  ..., 0.4094, 0.1921, 0.1360],
         [0.1555, 0.2017, 0.1988,  ..., 0.1822, 0.1921, 0.1360],
         [0.5334, 0.1933, 0.1885,  ..., 0.1564, 0.4238, 0.5919],
         [0.1555, 0.2952, 0.2801,  ..., 0.2521, 0.1921, 0.1360]],
        [[0.3254, 0.2879, 0.3543,  ..., 0.3361, 0.3545, 0.1168],
         [0.1935, 0.2052, 0.1906,  ..., 0.1989, 0.1799, 0.1168],
         [0.1717, 0.2052, 0.1867,  ..., 0.1925, 0.1710, 0.6495],
         [0.3095, 0.3018, 0.2684,  ..., 0.2726, 0.2945, 0.1168]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3625, 0.2795, 0.2686,  ..., 0.3164, 0.3821, 0.2731],
         [0.1922, 0.2131, 0.2113,  ..., 0.2077, 0.1939, 0.2207],
         [0.1742, 0.2131, 0.2113,  ..., 0.1952, 0.1669, 0.2207],
         [0.2711, 0.2942, 0.3089,  ..., 0.2807, 0.2571, 0.2855]],
        [[0.2310, 0.3221, 0.2644,  ..., 0.3227, 0.1361, 0.0738],
         [0.2145, 0.2035, 0.2200,  ..., 0.2052, 0.1361, 0.0738],
         [0.3276, 0.1931, 0.2200,  ..., 0.1937, 0.5916, 0.7785],
         [0.2270, 0.2813, 0.2957,  ..., 0.2784, 0.1361, 0.0738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:11,457 [Process: 0] Synchronize training processes
2024-08-19 15:44:11,457 [Process: 0] Evaluating...
2024-08-19 15:44:11,459 [Process: 0] EPOCH 13:
2024-08-19 15:44:11,461 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:12,494 [Process: 0] Synchronize training processes
2024-08-19 15:44:12,495 [Process: 0] Evaluating...
2024-08-19 15:44:12,496 [Process: 0] EPOCH 14:
2024-08-19 15:44:12,498 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:13,523 [Process: 0] Synchronize training processes
2024-08-19 15:44:13,524 [Process: 0] Evaluating...
2024-08-19 15:44:13,526 [Process: 0] EPOCH 15:
2024-08-19 15:44:13,527 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0720, 0.2843, 0.3545,  ..., 0.3611, 0.1135, 0.1105],
         [0.0720, 0.2083, 0.1926,  ..., 0.1948, 0.1135, 0.1105],
         [0.7841, 0.2075, 0.1782,  ..., 0.1814, 0.6595, 0.6685],
         [0.0720, 0.2998, 0.2746,  ..., 0.2627, 0.1135, 0.1105]],
        [[0.3427, 0.3246, 0.3527,  ..., 0.4032, 0.3776, 0.1190],
         [0.1958, 0.1957, 0.1947,  ..., 0.1809, 0.1810, 0.1229],
         [0.1811, 0.1957, 0.1819,  ..., 0.1542, 0.1584, 0.6392],
         [0.2805, 0.2839, 0.2706,  ..., 0.2617, 0.2830, 0.1190]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4014, 0.2377, 0.2745,  ..., 0.3602, 0.3342, 0.2374],
         [0.1758, 0.2268, 0.2207,  ..., 0.1960, 0.1974, 0.2285],
         [0.1637, 0.2268, 0.2207,  ..., 0.1957, 0.1897, 0.2285],
         [0.2591, 0.3087, 0.2840,  ..., 0.2480, 0.2787, 0.3056]],
        [[0.3540, 0.3752, 0.2768,  ..., 0.3169, 0.0751, 0.1452],
         [0.2007, 0.1883, 0.2099,  ..., 0.2038, 0.0751, 0.1452],
         [0.1823, 0.1689, 0.2099,  ..., 0.2038, 0.7748, 0.5643],
         [0.2629, 0.2676, 0.3034,  ..., 0.2755, 0.0751, 0.1452]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1202, 0.2798, 0.3889,  ..., 0.3022, 0.1110, 0.0801],
         [0.1202, 0.2134, 0.1752,  ..., 0.2006, 0.1110, 0.0801],
         [0.6394, 0.2134, 0.1598,  ..., 0.2006, 0.6670, 0.7598],
         [0.1202, 0.2935, 0.2760,  ..., 0.2966, 0.1110, 0.0801]],
        [[0.3715, 0.3907, 0.4973,  ..., 0.4446, 0.4302, 0.1652],
         [0.1806, 0.1725, 0.1504,  ..., 0.1602, 0.1758, 0.1652],
         [0.1588, 0.1580, 0.1290,  ..., 0.1408, 0.1555, 0.5045],
         [0.2891, 0.2789, 0.2233,  ..., 0.2544, 0.2385, 0.1652]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5435, 0.2613, 0.2546,  ..., 0.5323, 0.3844, 0.2264],
         [0.1428, 0.2199, 0.2161,  ..., 0.1488, 0.1775, 0.2264],
         [0.1103, 0.2199, 0.2147,  ..., 0.1203, 0.1532, 0.2502],
         [0.2034, 0.2989, 0.3146,  ..., 0.1986, 0.2849, 0.2970]],
        [[0.4009, 0.4364, 0.2145,  ..., 0.2378, 0.1526, 0.1738],
         [0.1784, 0.1604, 0.2145,  ..., 0.2184, 0.1526, 0.1738],
         [0.1657, 0.1530, 0.2145,  ..., 0.2833, 0.5422, 0.4719],
         [0.2550, 0.2502, 0.3565,  ..., 0.2605, 0.1526, 0.1805]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:14,540 [Process: 0] Synchronize training processes
2024-08-19 15:44:14,540 [Process: 0] Evaluating...
2024-08-19 15:44:14,542 [Process: 0] EPOCH 16:
2024-08-19 15:44:14,544 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:15,558 [Process: 0] Synchronize training processes
2024-08-19 15:44:15,559 [Process: 0] Evaluating...
2024-08-19 15:44:15,560 [Process: 0] EPOCH 17:
2024-08-19 15:44:15,562 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0963, 0.3133, 0.4700,  ..., 0.2217, 0.1630, 0.1318],
         [0.0963, 0.2018, 0.1511,  ..., 0.2217, 0.1630, 0.1318],
         [0.7110, 0.2018, 0.1354,  ..., 0.2748, 0.5111, 0.6047],
         [0.0963, 0.2832, 0.2435,  ..., 0.2817, 0.1630, 0.1318]],
        [[0.4703, 0.4893, 0.4340,  ..., 0.5753, 0.2456, 0.1301],
         [0.1460, 0.1441, 0.1608,  ..., 0.1168, 0.2057, 0.1301],
         [0.1429, 0.1402, 0.1608,  ..., 0.1112, 0.2057, 0.6096],
         [0.2408, 0.2265, 0.2443,  ..., 0.1967, 0.3430, 0.1301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3837, 0.1878, 0.2294,  ..., 0.7153, 0.2976, 0.2271],
         [0.1754, 0.1878, 0.2294,  ..., 0.0894, 0.2046, 0.2271],
         [0.1590, 0.4050, 0.2294,  ..., 0.0787, 0.2037, 0.2582],
         [0.2819, 0.2194, 0.3119,  ..., 0.1167, 0.2942, 0.2877]],
        [[0.3709, 0.4504, 0.4365,  ..., 0.2165, 0.0894, 0.1562],
         [0.1893, 0.1658, 0.1643,  ..., 0.2222, 0.0990, 0.1562],
         [0.1836, 0.1658, 0.1643,  ..., 0.2165, 0.7222, 0.5313],
         [0.2562, 0.2180, 0.2349,  ..., 0.3449, 0.0894, 0.1562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1193, 0.3637, 0.5750,  ..., 0.3957, 0.0531, 0.0448],
         [0.1193, 0.1869, 0.1290,  ..., 0.1745, 0.0531, 0.0448],
         [0.6422, 0.1795, 0.1166,  ..., 0.1663, 0.8407, 0.8655],
         [0.1193, 0.2700, 0.1793,  ..., 0.2636, 0.0531, 0.0448]],
        [[0.4869, 0.4865, 0.7180,  ..., 0.5747, 0.3080, 0.0836],
         [0.1492, 0.1441, 0.0834,  ..., 0.1267, 0.1967, 0.0836],
         [0.1277, 0.1404, 0.0785,  ..., 0.1267, 0.1967, 0.7493],
         [0.2362, 0.2289, 0.1202,  ..., 0.1718, 0.2985, 0.0836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6690, 0.1857, 0.2341,  ..., 0.5230, 0.3343, 0.4267],
         [0.0958, 0.1857, 0.2175,  ..., 0.1434, 0.1916, 0.1683],
         [0.0941, 0.4039, 0.2175,  ..., 0.1395, 0.1916, 0.1531],
         [0.1412, 0.2247, 0.3309,  ..., 0.1942, 0.2825, 0.2519]],
        [[0.3968, 0.4961, 0.2889,  ..., 0.2278, 0.1283, 0.1009],
         [0.1750, 0.1419, 0.1942,  ..., 0.2278, 0.1283, 0.1009],
         [0.1643, 0.1316, 0.1942,  ..., 0.2278, 0.6151, 0.6974],
         [0.2639, 0.2304, 0.3227,  ..., 0.3165, 0.1283, 0.1009]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:16,585 [Process: 0] Synchronize training processes
2024-08-19 15:44:16,586 [Process: 0] Evaluating...
2024-08-19 15:44:16,587 [Process: 0] EPOCH 18:
2024-08-19 15:44:16,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 15:44:17,603 [Process: 0] Synchronize training processes
2024-08-19 15:44:17,603 [Process: 0] Evaluating...
2024-08-19 15:44:17,605 [Process: 0] EPOCH 19:
2024-08-19 15:44:17,607 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0573, 0.3090, 0.6348,  ..., 0.5314, 0.0985, 0.1416],
         [0.0573, 0.2009, 0.1108,  ..., 0.1415, 0.0985, 0.1416],
         [0.8280, 0.2009, 0.0935,  ..., 0.1415, 0.7044, 0.5753],
         [0.0573, 0.2891, 0.1610,  ..., 0.1857, 0.0985, 0.1416]],
        [[0.6097, 0.4386, 0.4361,  ..., 0.5651, 0.3062, 0.1152],
         [0.1108, 0.1565, 0.1630,  ..., 0.1193, 0.1796, 0.1152],
         [0.0999, 0.1517, 0.1580,  ..., 0.1171, 0.1796, 0.6544],
         [0.1796, 0.2531, 0.2429,  ..., 0.1985, 0.3347, 0.1152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4325, 0.2301, 0.2149,  ..., 0.3188, 0.3747, 0.2958],
         [0.1606, 0.2129, 0.2149,  ..., 0.1966, 0.1738, 0.1959],
         [0.1540, 0.2093, 0.2149,  ..., 0.1966, 0.1719, 0.1869],
         [0.2529, 0.3478, 0.3552,  ..., 0.2879, 0.2796, 0.3214]],
        [[0.5206, 0.5567, 0.5636,  ..., 0.3494, 0.1677, 0.1966],
         [0.1505, 0.1303, 0.1275,  ..., 0.1835, 0.1677, 0.1966],
         [0.1239, 0.1234, 0.1158,  ..., 0.1835, 0.4968, 0.3842],
         [0.2050, 0.1896, 0.1931,  ..., 0.2835, 0.1677, 0.2226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0813, 0.4451, 0.5446,  ..., 0.5540, 0.0956, 0.1005],
         [0.0813, 0.1619, 0.1404,  ..., 0.1354, 0.0956, 0.1005],
         [0.7560, 0.1619, 0.1342,  ..., 0.1256, 0.7132, 0.6984],
         [0.0813, 0.2311, 0.1808,  ..., 0.1849, 0.0956, 0.1005]],
        [[0.2459, 0.5969, 0.4968,  ..., 0.5236, 0.2768, 0.1082],
         [0.1950, 0.1186, 0.1510,  ..., 0.1401, 0.1922, 0.1082],
         [0.1950, 0.1085, 0.1407,  ..., 0.1202, 0.1915, 0.6754],
         [0.3640, 0.1760, 0.2115,  ..., 0.2160, 0.3395, 0.1082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4906, 0.2072, 0.2871,  ..., 0.4645, 0.3754, 0.2926],
         [0.1596, 0.2019, 0.1998,  ..., 0.1571, 0.1851, 0.1987],
         [0.1545, 0.1897, 0.1992,  ..., 0.1516, 0.1851, 0.1987],
         [0.1953, 0.4012, 0.3139,  ..., 0.2268, 0.2545, 0.3099]],
        [[0.4957, 0.4823, 0.2089,  ..., 0.2318, 0.0426, 0.0993],
         [0.1504, 0.1602, 0.2034,  ..., 0.2117, 0.0426, 0.0993],
         [0.1480, 0.1470, 0.2034,  ..., 0.2117, 0.8722, 0.7022],
         [0.2059, 0.2104, 0.3843,  ..., 0.3448, 0.0426, 0.0993]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:18,628 [Process: 0] Synchronize training processes
2024-08-19 15:44:18,628 [Process: 0] Evaluating...
2024-08-19 15:44:18,630 [Process: 0] EPOCH 20:
2024-08-19 15:44:18,632 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2365, 0.5295, 0.2526,  ..., 0.2851, 0.1354, 0.0874],
         [0.1702, 0.1416, 0.2050,  ..., 0.2014, 0.1354, 0.0874],
         [0.4230, 0.1318, 0.2050,  ..., 0.1959, 0.5937, 0.7379],
         [0.1702, 0.1971, 0.3375,  ..., 0.3176, 0.1354, 0.0874]],
        [[0.6210, 0.7428, 0.5271,  ..., 0.5154, 0.2079, 0.1206],
         [0.1160, 0.0901, 0.1343,  ..., 0.1456, 0.2079, 0.1206],
         [0.1023, 0.0634, 0.1343,  ..., 0.1456, 0.2079, 0.6383],
         [0.1608, 0.1037, 0.2042,  ..., 0.1934, 0.3763, 0.1206]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6422, 0.2003, 0.1940,  ..., 0.5875, 0.5352, 0.2649],
         [0.1175, 0.2003, 0.1940,  ..., 0.1270, 0.1386, 0.1990],
         [0.0966, 0.2003, 0.1940,  ..., 0.1157, 0.1310, 0.1924],
         [0.1437, 0.3990, 0.4180,  ..., 0.1697, 0.1952, 0.3436]],
        [[0.6257, 0.4602, 0.2404,  ..., 0.2439, 0.1074, 0.1188],
         [0.1223, 0.1495, 0.1988,  ..., 0.1947, 0.1074, 0.1188],
         [0.1147, 0.1495, 0.1988,  ..., 0.1947, 0.6779, 0.6436],
         [0.1373, 0.2408, 0.3621,  ..., 0.3668, 0.1074, 0.1188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1228, 0.2858, 0.2105,  ..., 0.3104, 0.0816, 0.0472],
         [0.1228, 0.1959, 0.2105,  ..., 0.1801, 0.0816, 0.0472],
         [0.6315, 0.1959, 0.2664,  ..., 0.1726, 0.7551, 0.8584],
         [0.1228, 0.3224, 0.3126,  ..., 0.3368, 0.0816, 0.0472]],
        [[0.2108, 0.5524, 0.5236,  ..., 0.7005, 0.1723, 0.1021],
         [0.1925, 0.1333, 0.1457,  ..., 0.1002, 0.1723, 0.1021],
         [0.1925, 0.1298, 0.1361,  ..., 0.0792, 0.1723, 0.6938],
         [0.4042, 0.1845, 0.1946,  ..., 0.1201, 0.4831, 0.1021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6286, 0.1560, 0.1686,  ..., 0.5484, 0.4788, 0.1773],
         [0.1212, 0.1560, 0.1686,  ..., 0.1431, 0.1563, 0.1773],
         [0.1144, 0.1560, 0.1686,  ..., 0.1261, 0.1563, 0.1773],
         [0.1358, 0.5321, 0.4941,  ..., 0.1824, 0.2086, 0.4681]],
        [[0.5656, 0.2538, 0.1841,  ..., 0.2759, 0.1833, 0.0894],
         [0.1478, 0.1878, 0.1841,  ..., 0.1824, 0.1833, 0.0894],
         [0.1306, 0.1822, 0.1841,  ..., 0.1774, 0.4502, 0.7319],
         [0.1560, 0.3762, 0.4476,  ..., 0.3643, 0.1833, 0.0894]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 15:44:19,649 [Process: 0] Synchronize training processes
2024-08-19 15:44:19,649 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1002, 0.2114, 0.1887,  ..., 0.5168, 0.0874, 0.1258],
         [0.1002, 0.2114, 0.1887,  ..., 0.1398, 0.0874, 0.1102],
         [0.6993, 0.3119, 0.1887,  ..., 0.1346, 0.7379, 0.6538],
         [0.1002, 0.2653, 0.4338,  ..., 0.2088, 0.0874, 0.1102]],
        [[0.6913, 0.5843, 0.3257,  ..., 0.6736, 0.0963, 0.0642],
         [0.1018, 0.1390, 0.1697,  ..., 0.1020, 0.0963, 0.0642],
         [0.0885, 0.1230, 0.1697,  ..., 0.0963, 0.0963, 0.8073],
         [0.1184, 0.1536, 0.3349,  ..., 0.1281, 0.7111, 0.0642]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...