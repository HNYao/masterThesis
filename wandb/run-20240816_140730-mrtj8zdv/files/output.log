2024-08-16 14:07:34,905 [Worker 0] Is distributed: False
2024-08-16 14:07:34,905 [Process: 0] Starting training
2024-08-16 14:07:34,906 [Process: 0] EPOCH 1:
2024-08-16 14:07:34,908 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2288, 0.2102, 0.2691,  ..., 0.3613, 0.3844, 0.3568],
         [0.2360, 0.3695, 0.2254,  ..., 0.2129, 0.2029, 0.2303],
         [0.3065, 0.2102, 0.2067,  ..., 0.2129, 0.2029, 0.2065],
         [0.2288, 0.2102, 0.2988,  ..., 0.2129, 0.2099, 0.2065]],
        [[0.2659, 0.2759, 0.2439,  ..., 0.2364, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2683,  ..., 0.2658, 0.2260, 0.2454],
         [0.2447, 0.2414, 0.2439,  ..., 0.2615, 0.3221, 0.2638],
         [0.2447, 0.2414, 0.2439,  ..., 0.2364, 0.2260, 0.2454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:37,462 [Process: 0] Synchronize training processes
2024-08-16 14:07:37,463 [Process: 0] Evaluating...
2024-08-16 14:07:37,471 [Process: 0] EPOCH 2:
2024-08-16 14:07:37,473 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2131, 0.2500, 0.2059,  ..., 0.2359, 0.1946, 0.2116],
         [0.2131, 0.2500, 0.1444,  ..., 0.2924, 0.2870, 0.2195],
         [0.2131, 0.2500, 0.3796,  ..., 0.2359, 0.2110, 0.2038],
         [0.3608, 0.2500, 0.2701,  ..., 0.2359, 0.3075, 0.3652]],
        [[0.1687, 0.2168, 0.1773,  ..., 0.2549, 0.1792, 0.2585],
         [0.3016, 0.2257, 0.1183,  ..., 0.1939, 0.3683, 0.2940],
         [0.3610, 0.3406, 0.5860,  ..., 0.3854, 0.2732, 0.2237],
         [0.1687, 0.2168, 0.1183,  ..., 0.1659, 0.1792, 0.2237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3008, 0.2895, 0.2740,  ..., 0.2960, 0.2389, 0.3022],
         [0.2547, 0.1929, 0.2626,  ..., 0.1943, 0.2389, 0.2042],
         [0.2091, 0.1971, 0.2194,  ..., 0.1941, 0.2834, 0.2105],
         [0.2354, 0.3205, 0.2440,  ..., 0.3156, 0.2389, 0.2831]],
        [[0.2224, 0.2303, 0.2216,  ..., 0.2267, 0.2419, 0.2929],
         [0.3327, 0.3092, 0.2758,  ..., 0.2534, 0.2744, 0.2677],
         [0.2224, 0.2303, 0.2216,  ..., 0.2267, 0.2419, 0.2197],
         [0.2224, 0.2303, 0.2810,  ..., 0.2932, 0.2419, 0.2197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:39,393 [Process: 0] Synchronize training processes
2024-08-16 14:07:39,394 [Process: 0] Evaluating...
2024-08-16 14:07:39,396 [Process: 0] EPOCH 3:
2024-08-16 14:07:39,397 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5066, 0.1116, 0.1286,  ..., 0.1786, 0.0538, 0.2101],
         [0.0982, 0.1116, 0.1286,  ..., 0.1786, 0.0662, 0.1760],
         [0.0967, 0.4107, 0.6143,  ..., 0.4643, 0.2024, 0.3487],
         [0.2984, 0.3661, 0.1286,  ..., 0.1786, 0.6776, 0.2652]],
        [[0.2184, 0.4584, 0.1453,  ..., 0.1375, 0.2229, 0.3790],
         [0.3806, 0.0730, 0.1453,  ..., 0.4771, 0.2229, 0.2070],
         [0.1485, 0.0841, 0.1453,  ..., 0.1280, 0.2229, 0.2070],
         [0.2525, 0.3845, 0.5640,  ..., 0.2573, 0.3314, 0.2070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2373, 0.2763, 0.1911,  ..., 0.2257, 0.2397, 0.2648],
         [0.3004, 0.2237, 0.3121,  ..., 0.2257, 0.2454, 0.2629],
         [0.2312, 0.2324, 0.2325,  ..., 0.2759, 0.2991, 0.2362],
         [0.2312, 0.2677, 0.2642,  ..., 0.2728, 0.2158, 0.2362]],
        [[0.2308, 0.2497, 0.2388,  ..., 0.3334, 0.2567, 0.2397],
         [0.2656, 0.2497, 0.2835,  ..., 0.2298, 0.2478, 0.2397],
         [0.2308, 0.2497, 0.2388,  ..., 0.2184, 0.2478, 0.2397],
         [0.2728, 0.2508, 0.2388,  ..., 0.2184, 0.2478, 0.2810]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:41,298 [Process: 0] Synchronize training processes
2024-08-16 14:07:41,298 [Process: 0] Evaluating...
2024-08-16 14:07:41,300 [Process: 0] EPOCH 4:
2024-08-16 14:07:41,302 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.6601, 0.2024, 0.1233,  ..., 0.3552, 0.2451, 0.1014],
         [0.1671, 0.2024, 0.1865,  ..., 0.2149, 0.2451, 0.4831],
         [0.0864, 0.3929, 0.5492,  ..., 0.2149, 0.2648, 0.1402],
         [0.0864, 0.2024, 0.1410,  ..., 0.2149, 0.2451, 0.2753]],
        [[0.2675, 0.1739, 0.2147,  ..., 0.2114, 0.0607, 0.1773],
         [0.1081, 0.1739, 0.3560,  ..., 0.2114, 0.0607, 0.1773],
         [0.1081, 0.4723, 0.2147,  ..., 0.3659, 0.8179, 0.4681],
         [0.5163, 0.1799, 0.2147,  ..., 0.2114, 0.0607, 0.1773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2354, 0.2686, 0.2621,  ..., 0.2710, 0.2527, 0.2406],
         [0.3347, 0.2633, 0.2419,  ..., 0.3172, 0.2853, 0.3766],
         [0.1887, 0.1524, 0.2114,  ..., 0.1505, 0.2136, 0.1744],
         [0.2411, 0.3157, 0.2846,  ..., 0.2613, 0.2485, 0.2084]],
        [[0.2412, 0.2150, 0.2597,  ..., 0.2500, 0.2500, 0.3021],
         [0.2562, 0.3551, 0.2468,  ..., 0.2500, 0.2500, 0.2326],
         [0.2615, 0.2150, 0.2468,  ..., 0.2500, 0.2500, 0.2326],
         [0.2412, 0.2150, 0.2468,  ..., 0.2500, 0.2500, 0.2326]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:43,196 [Process: 0] Synchronize training processes
2024-08-16 14:07:43,197 [Process: 0] Evaluating...
2024-08-16 14:07:43,198 [Process: 0] EPOCH 5:
2024-08-16 14:07:43,200 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1918, 0.1724, 0.7042,  ..., 0.6546, 0.3013, 0.3789],
         [0.1918, 0.1852, 0.0830,  ..., 0.1151, 0.1286, 0.2201],
         [0.4247, 0.4342, 0.0831,  ..., 0.1151, 0.1631, 0.2005],
         [0.1918, 0.2082, 0.1297,  ..., 0.1151, 0.4070, 0.2005]],
        [[0.2500, 0.0675, 0.1801,  ..., 0.1403, 0.2500, 0.2500],
         [0.2500, 0.4642, 0.4558,  ..., 0.3378, 0.2500, 0.2500],
         [0.2500, 0.4009, 0.1841,  ..., 0.3285, 0.2500, 0.2500],
         [0.2500, 0.0675, 0.1801,  ..., 0.1933, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2272, 0.2354, 0.2438,  ..., 0.2129, 0.2876, 0.2109],
         [0.2272, 0.3193, 0.2402,  ..., 0.3023, 0.2314, 0.2145],
         [0.2272, 0.1900, 0.2374,  ..., 0.2069, 0.2281, 0.2109],
         [0.3183, 0.2552, 0.2786,  ..., 0.2779, 0.2529, 0.3636]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2472, 0.2612, 0.2552],
         [0.2500, 0.2500, 0.2500,  ..., 0.2264, 0.2463, 0.2272],
         [0.2500, 0.2500, 0.2500,  ..., 0.3001, 0.2463, 0.2272],
         [0.2500, 0.2500, 0.2500,  ..., 0.2264, 0.2463, 0.2904]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:45,128 [Process: 0] Synchronize training processes
2024-08-16 14:07:45,129 [Process: 0] Evaluating...
2024-08-16 14:07:45,131 [Process: 0] EPOCH 6:
2024-08-16 14:07:45,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1425, 0.2104, 0.1845,  ..., 0.1692, 0.2873, 0.5711],
         [0.1425, 0.1747, 0.1744,  ..., 0.1890, 0.2839, 0.1755],
         [0.5725, 0.4401, 0.4667,  ..., 0.4726, 0.2144, 0.0536],
         [0.1425, 0.1747, 0.1744,  ..., 0.1692, 0.2144, 0.1997]],
        [[0.2370, 0.2153, 0.2844,  ..., 0.2864, 0.2449, 0.1789],
         [0.3947, 0.3050, 0.3694,  ..., 0.2175, 0.3134, 0.4831],
         [0.1405, 0.2645, 0.1740,  ..., 0.1437, 0.1599, 0.1059],
         [0.2278, 0.2153, 0.1722,  ..., 0.3524, 0.2818, 0.2321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2888, 0.2531, 0.2531,  ..., 0.2430, 0.2182, 0.2706],
         [0.2371, 0.2326, 0.2195,  ..., 0.1926, 0.2506, 0.2499],
         [0.2371, 0.2326, 0.2512,  ..., 0.1887, 0.2166, 0.2369],
         [0.2371, 0.2817, 0.2762,  ..., 0.3756, 0.3147, 0.2426]],
        [[0.2390, 0.2500, 0.3144,  ..., 0.2856, 0.2328, 0.2358],
         [0.2477, 0.2500, 0.2263,  ..., 0.2415, 0.2763, 0.2358],
         [0.2390, 0.2500, 0.2185,  ..., 0.2189, 0.2328, 0.2358],
         [0.2743, 0.2500, 0.2407,  ..., 0.2541, 0.2582, 0.2925]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:47,043 [Process: 0] Synchronize training processes
2024-08-16 14:07:47,044 [Process: 0] Evaluating...
2024-08-16 14:07:47,046 [Process: 0] EPOCH 7:
2024-08-16 14:07:47,047 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.0984, 0.0998,  ..., 0.0950, 0.2500, 0.0632],
         [0.2500, 0.0984, 0.2933,  ..., 0.2804, 0.2500, 0.1759],
         [0.2500, 0.3546, 0.3889,  ..., 0.1754, 0.2500, 0.1909],
         [0.2500, 0.4487, 0.2180,  ..., 0.4492, 0.2500, 0.5700]],
        [[0.1914, 0.2674, 0.1883,  ..., 0.1970, 0.2650, 0.2559],
         [0.4591, 0.2442, 0.3074,  ..., 0.4091, 0.2138, 0.2050],
         [0.1764, 0.2442, 0.3160,  ..., 0.1970, 0.3324, 0.2887],
         [0.1731, 0.2442, 0.1883,  ..., 0.1970, 0.1888, 0.2503]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2151, 0.2218, 0.2062,  ..., 0.2418, 0.2430, 0.2333],
         [0.2967, 0.3187, 0.3800,  ..., 0.2649, 0.2430, 0.2333],
         [0.2094, 0.2369, 0.2062,  ..., 0.2515, 0.2603, 0.3000],
         [0.2788, 0.2226, 0.2077,  ..., 0.2418, 0.2537, 0.2333]],
        [[0.3030, 0.2085, 0.2616,  ..., 0.2463, 0.2721, 0.2445],
         [0.2696, 0.2085, 0.2106,  ..., 0.2224, 0.2413, 0.2995],
         [0.2137, 0.2097, 0.2106,  ..., 0.2224, 0.2159, 0.1996],
         [0.2137, 0.3733, 0.3173,  ..., 0.3089, 0.2707, 0.2563]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:49,051 [Process: 0] Synchronize training processes
2024-08-16 14:07:49,051 [Process: 0] Evaluating...
2024-08-16 14:07:49,053 [Process: 0] EPOCH 8:
2024-08-16 14:07:49,055 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1517, 0.2462, 0.1954,  ..., 0.1791, 0.2025, 0.1218],
         [0.5010, 0.2820, 0.3756,  ..., 0.4076, 0.2025, 0.4700],
         [0.1517, 0.2359, 0.2336,  ..., 0.2184, 0.3925, 0.3263],
         [0.1956, 0.2359, 0.1954,  ..., 0.1948, 0.2025, 0.0819]],
        [[0.2476, 0.2484, 0.2550,  ..., 0.3076, 0.2150, 0.2344],
         [0.2194, 0.2067, 0.3023,  ..., 0.1662, 0.2416, 0.2372],
         [0.1717, 0.2752, 0.1912,  ..., 0.1662, 0.1746, 0.1862],
         [0.3613, 0.2697, 0.2515,  ..., 0.3599, 0.3688, 0.3421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2264, 0.2368, 0.2834,  ..., 0.2453, 0.2408, 0.2909],
         [0.2264, 0.2457, 0.2351,  ..., 0.2453, 0.2408, 0.1944],
         [0.3208, 0.2511, 0.2150,  ..., 0.2541, 0.2777, 0.2267],
         [0.2264, 0.2664, 0.2665,  ..., 0.2552, 0.2408, 0.2879]],
        [[0.3187, 0.2606, 0.2297,  ..., 0.3195, 0.3033, 0.2558],
         [0.2762, 0.2864, 0.2444,  ..., 0.2108, 0.2000, 0.2453],
         [0.1746, 0.1833, 0.2234,  ..., 0.1807, 0.2000, 0.2453],
         [0.2304, 0.2697, 0.3025,  ..., 0.2890, 0.2966, 0.2537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:51,017 [Process: 0] Synchronize training processes
2024-08-16 14:07:51,017 [Process: 0] Evaluating...
2024-08-16 14:07:51,019 [Process: 0] EPOCH 9:
2024-08-16 14:07:51,021 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2010, 0.2417, 0.1114,  ..., 0.2500, 0.0975, 0.2073],
         [0.2010, 0.3188, 0.1114,  ..., 0.2500, 0.0975, 0.2552],
         [0.2010, 0.2054, 0.6659,  ..., 0.2500, 0.7075, 0.2073],
         [0.3969, 0.2341, 0.1114,  ..., 0.2500, 0.0975, 0.3301]],
        [[0.3007, 0.1604, 0.3690,  ..., 0.2556, 0.4071, 0.2002],
         [0.2996, 0.5797, 0.3051,  ..., 0.3049, 0.2311, 0.0852],
         [0.2277, 0.1106, 0.1340,  ..., 0.2389, 0.2083, 0.0446],
         [0.1720, 0.1493, 0.1918,  ..., 0.2006, 0.1534, 0.6700]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2405, 0.2183, 0.2258,  ..., 0.2164, 0.2617, 0.2311],
         [0.2187, 0.2395, 0.2603,  ..., 0.2625, 0.2227, 0.2549],
         [0.2187, 0.2183, 0.2258,  ..., 0.2164, 0.2227, 0.2311],
         [0.3221, 0.3239, 0.2881,  ..., 0.3048, 0.2929, 0.2828]],
        [[0.2307, 0.2453, 0.2406,  ..., 0.2445, 0.2915, 0.2752],
         [0.2192, 0.2453, 0.1995,  ..., 0.2042, 0.2343, 0.2270],
         [0.2192, 0.2453, 0.1995,  ..., 0.2042, 0.2343, 0.2202],
         [0.3309, 0.2642, 0.3604,  ..., 0.3472, 0.2398, 0.2776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:53,012 [Process: 0] Synchronize training processes
2024-08-16 14:07:53,013 [Process: 0] Evaluating...
2024-08-16 14:07:53,015 [Process: 0] EPOCH 10:
2024-08-16 14:07:53,017 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1681, 0.2595, 0.1537,  ..., 0.6792, 0.2174, 0.2832],
         [0.4956, 0.4014, 0.0728,  ..., 0.1028, 0.2063, 0.1070],
         [0.1681, 0.2157, 0.7007,  ..., 0.1028, 0.2284, 0.5028],
         [0.1681, 0.1234, 0.0728,  ..., 0.1152, 0.3480, 0.1070]],
        [[0.2466, 0.2500, 0.1724,  ..., 0.0954, 0.3192, 0.1323],
         [0.2466, 0.2500, 0.2997,  ..., 0.2945, 0.2033, 0.1323],
         [0.2466, 0.2500, 0.1720,  ..., 0.0954, 0.1600, 0.1323],
         [0.2603, 0.2500, 0.3559,  ..., 0.5148, 0.3175, 0.6030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2464, 0.1954, 0.2421,  ..., 0.2320, 0.2226, 0.2262],
         [0.1652, 0.2314, 0.2179,  ..., 0.2206, 0.2008, 0.2575],
         [0.1916, 0.2271, 0.1969,  ..., 0.2077, 0.2786, 0.2008],
         [0.3968, 0.3461, 0.3431,  ..., 0.3397, 0.2979, 0.3156]],
        [[0.2500, 0.2500, 0.2687,  ..., 0.2500, 0.2500, 0.2154],
         [0.2500, 0.2500, 0.2308,  ..., 0.2500, 0.2500, 0.2773],
         [0.2500, 0.2500, 0.2308,  ..., 0.2500, 0.2500, 0.2154],
         [0.2500, 0.2500, 0.2697,  ..., 0.2500, 0.2500, 0.2918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:55,091 [Process: 0] Synchronize training processes
2024-08-16 14:07:55,092 [Process: 0] Evaluating...
2024-08-16 14:07:55,094 [Process: 0] EPOCH 11:
2024-08-16 14:07:55,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2097, 0.2698, 0.2480,  ..., 0.2277, 0.3229, 0.4095],
         [0.3149, 0.2452, 0.2480,  ..., 0.3169, 0.2211, 0.1798],
         [0.2657, 0.1690, 0.2559,  ..., 0.2277, 0.2211, 0.1886],
         [0.2097, 0.3161, 0.2480,  ..., 0.2277, 0.2349, 0.2221]],
        [[0.2323, 0.2343, 0.2153,  ..., 0.1642, 0.1334, 0.2175],
         [0.3030, 0.2972, 0.3967,  ..., 0.1673, 0.1644, 0.1897],
         [0.2323, 0.2343, 0.1500,  ..., 0.2258, 0.5688, 0.1772],
         [0.2323, 0.2343, 0.2381,  ..., 0.4426, 0.1334, 0.4156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2460, 0.2736, 0.2492,  ..., 0.2342, 0.2326, 0.2499],
         [0.2488, 0.2273, 0.2492,  ..., 0.2946, 0.2437, 0.2502],
         [0.2193, 0.2192, 0.2492,  ..., 0.2342, 0.2326, 0.2499],
         [0.2859, 0.2800, 0.2524,  ..., 0.2370, 0.2912, 0.2499]],
        [[0.2492, 0.2506, 0.2496,  ..., 0.2908, 0.2397, 0.2277],
         [0.2492, 0.2246, 0.2478,  ..., 0.2214, 0.2429, 0.2877],
         [0.2525, 0.2246, 0.2264,  ..., 0.1955, 0.2636, 0.2185],
         [0.2492, 0.3001, 0.2762,  ..., 0.2922, 0.2538, 0.2661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:57,120 [Process: 0] Synchronize training processes
2024-08-16 14:07:57,120 [Process: 0] Evaluating...
2024-08-16 14:07:57,132 [Process: 0] EPOCH 12:
2024-08-16 14:07:57,134 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1977, 0.3044, 0.1076,  ..., 0.2824, 0.1949, 0.1795],
         [0.4069, 0.3600, 0.1076,  ..., 0.2525, 0.3877, 0.1213],
         [0.1977, 0.1629, 0.5314,  ..., 0.2543, 0.1418, 0.5163],
         [0.1977, 0.1727, 0.2534,  ..., 0.2107, 0.2757, 0.1828]],
        [[0.1613, 0.2500, 0.2500,  ..., 0.2368, 0.2500, 0.2500],
         [0.4648, 0.2500, 0.2500,  ..., 0.2158, 0.2500, 0.2500],
         [0.2127, 0.2500, 0.2500,  ..., 0.2158, 0.2500, 0.2500],
         [0.1613, 0.2500, 0.2500,  ..., 0.3316, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2385, 0.1929, 0.1999,  ..., 0.2064, 0.1946, 0.2401],
         [0.2544, 0.3031, 0.2861,  ..., 0.2927, 0.2834, 0.2796],
         [0.2385, 0.1929, 0.2058,  ..., 0.2064, 0.1946, 0.2401],
         [0.2686, 0.3111, 0.3082,  ..., 0.2945, 0.3275, 0.2401]],
        [[0.2476, 0.2343, 0.2330,  ..., 0.2271, 0.2468, 0.2633],
         [0.2370, 0.2343, 0.2725,  ..., 0.2271, 0.2468, 0.2562],
         [0.2208, 0.2475, 0.2232,  ..., 0.2271, 0.2535, 0.2330],
         [0.2946, 0.2839, 0.2714,  ..., 0.3188, 0.2528, 0.2475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:07:59,147 [Process: 0] Synchronize training processes
2024-08-16 14:07:59,148 [Process: 0] Evaluating...
2024-08-16 14:07:59,150 [Process: 0] EPOCH 13:
2024-08-16 14:07:59,152 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3738, 0.2475, 0.1261,  ..., 0.2191, 0.2500, 0.1818],
         [0.1438, 0.2475, 0.1261,  ..., 0.2191, 0.2500, 0.1818],
         [0.1269, 0.2475, 0.1915,  ..., 0.3428, 0.2500, 0.1818],
         [0.3555, 0.2574, 0.5564,  ..., 0.2191, 0.2500, 0.4546]],
        [[0.3585, 0.1422, 0.1497,  ..., 0.1279, 0.3727, 0.3045],
         [0.3563, 0.2233, 0.4713,  ..., 0.3273, 0.3046, 0.3454],
         [0.1426, 0.4923, 0.2293,  ..., 0.4170, 0.1638, 0.1940],
         [0.1426, 0.1422, 0.1497,  ..., 0.1279, 0.1589, 0.1561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2268, 0.2167, 0.2289,  ..., 0.2146, 0.2268, 0.2215],
         [0.3195, 0.3198, 0.2363,  ..., 0.3046, 0.2268, 0.2568],
         [0.2268, 0.2105, 0.2289,  ..., 0.2146, 0.2268, 0.2215],
         [0.2268, 0.2530, 0.3060,  ..., 0.2661, 0.3196, 0.3003]],
        [[0.3265, 0.2427, 0.2522,  ..., 0.2520, 0.2860, 0.2211],
         [0.1999, 0.2554, 0.2602,  ..., 0.2573, 0.2456, 0.2414],
         [0.1726, 0.2427, 0.2139,  ..., 0.1970, 0.2009, 0.2117],
         [0.3010, 0.2592, 0.2737,  ..., 0.2937, 0.2675, 0.3258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:01,260 [Process: 0] Synchronize training processes
2024-08-16 14:08:01,260 [Process: 0] Evaluating...
2024-08-16 14:08:01,262 [Process: 0] EPOCH 14:
2024-08-16 14:08:01,264 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2063, 0.3311, 0.4440,  ..., 0.3428, 0.3837, 0.3219],
         [0.3099, 0.2572, 0.1836,  ..., 0.2629, 0.2054, 0.2260],
         [0.2775, 0.2058, 0.1888,  ..., 0.2594, 0.2054, 0.2260],
         [0.2063, 0.2058, 0.1836,  ..., 0.1349, 0.2054, 0.2260]],
        [[0.6332, 0.1390, 0.2321,  ..., 0.2746, 0.2225, 0.2476],
         [0.1044, 0.3034, 0.3038,  ..., 0.2241, 0.3324, 0.2476],
         [0.1044, 0.2312, 0.2321,  ..., 0.1702, 0.2225, 0.2573],
         [0.1581, 0.3264, 0.2321,  ..., 0.3311, 0.2225, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2975, 0.2500, 0.2372,  ..., 0.2577, 0.2648, 0.2433],
         [0.2182, 0.2500, 0.2347,  ..., 0.2401, 0.2458, 0.2433],
         [0.2182, 0.2500, 0.1975,  ..., 0.2401, 0.2447, 0.2433],
         [0.2661, 0.2500, 0.3306,  ..., 0.2622, 0.2447, 0.2702]],
        [[0.2038, 0.2219, 0.2050,  ..., 0.2248, 0.2202, 0.2096],
         [0.2668, 0.2964, 0.2778,  ..., 0.2468, 0.2777, 0.3063],
         [0.2038, 0.2219, 0.2150,  ..., 0.1882, 0.2038, 0.2096],
         [0.3256, 0.2598, 0.3022,  ..., 0.3402, 0.2983, 0.2744]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:03,370 [Process: 0] Synchronize training processes
2024-08-16 14:08:03,371 [Process: 0] Evaluating...
2024-08-16 14:08:03,373 [Process: 0] EPOCH 15:
2024-08-16 14:08:03,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4514, 0.3209, 0.3049,  ..., 0.3674, 0.4319, 0.3278],
         [0.1829, 0.2264, 0.1110,  ..., 0.1191, 0.0699, 0.2241],
         [0.1829, 0.2264, 0.1110,  ..., 0.1015, 0.0699, 0.2241],
         [0.1829, 0.2264, 0.4731,  ..., 0.4120, 0.4283, 0.2241]],
        [[0.2400, 0.2475, 0.1906,  ..., 0.1758, 0.1403, 0.1508],
         [0.2400, 0.2475, 0.1906,  ..., 0.1758, 0.4111, 0.2986],
         [0.2800, 0.2475, 0.4281,  ..., 0.4726, 0.3082, 0.3969],
         [0.2400, 0.2575, 0.1906,  ..., 0.1758, 0.1403, 0.1537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2209, 0.2499,  ..., 0.2453, 0.2748, 0.2491],
         [0.2500, 0.2157, 0.2499,  ..., 0.2453, 0.2122, 0.2633],
         [0.2500, 0.2030, 0.2499,  ..., 0.2453, 0.2122, 0.2279],
         [0.2500, 0.3604, 0.2502,  ..., 0.2640, 0.3008, 0.2597]],
        [[0.2217, 0.2435, 0.2067,  ..., 0.2293, 0.2046, 0.2138],
         [0.2469, 0.2435, 0.2930,  ..., 0.2759, 0.2907, 0.2853],
         [0.2116, 0.2435, 0.2067,  ..., 0.2293, 0.1995, 0.1798],
         [0.3197, 0.2696, 0.2937,  ..., 0.2654, 0.3051, 0.3212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:05,483 [Process: 0] Synchronize training processes
2024-08-16 14:08:05,484 [Process: 0] Evaluating...
2024-08-16 14:08:05,486 [Process: 0] EPOCH 16:
2024-08-16 14:08:05,488 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3670, 0.1870, 0.1864,  ..., 0.1847, 0.1385, 0.4819],
         [0.1689, 0.2758, 0.3382,  ..., 0.4149, 0.1624, 0.1336],
         [0.1689, 0.1870, 0.1974,  ..., 0.2156, 0.2316, 0.0963],
         [0.2952, 0.3502, 0.2780,  ..., 0.1847, 0.4675, 0.2882]],
        [[0.2987, 0.4369, 0.6247,  ..., 0.4144, 0.2296, 0.0966],
         [0.2081, 0.1877, 0.1469,  ..., 0.2234, 0.3329, 0.3181],
         [0.2851, 0.1877, 0.0852,  ..., 0.1811, 0.2188, 0.4886],
         [0.2081, 0.1877, 0.1432,  ..., 0.1811, 0.2188, 0.0966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2180, 0.2500, 0.2781,  ..., 0.2814, 0.2720, 0.2307],
         [0.2027, 0.2500, 0.1855,  ..., 0.2305, 0.2399, 0.2307],
         [0.1952, 0.2500, 0.1855,  ..., 0.2305, 0.2399, 0.2307],
         [0.3840, 0.2500, 0.3509,  ..., 0.2577, 0.2482, 0.3079]],
        [[0.2017, 0.2179, 0.1975,  ..., 0.2356, 0.2058, 0.2017],
         [0.2597, 0.2739, 0.3345,  ..., 0.2572, 0.2111, 0.3038],
         [0.2017, 0.2322, 0.1975,  ..., 0.2356, 0.2107, 0.2017],
         [0.3370, 0.2760, 0.2705,  ..., 0.2717, 0.3724, 0.2928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:07,584 [Process: 0] Synchronize training processes
2024-08-16 14:08:07,584 [Process: 0] Evaluating...
2024-08-16 14:08:07,586 [Process: 0] EPOCH 17:
2024-08-16 14:08:07,588 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1967, 0.2377, 0.3307,  ..., 0.7990, 0.4525, 0.2529],
         [0.3865, 0.2816, 0.3107,  ..., 0.0670, 0.1825, 0.1754],
         [0.2054, 0.2429, 0.1793,  ..., 0.0670, 0.1825, 0.3963],
         [0.2114, 0.2377, 0.1793,  ..., 0.0670, 0.1825, 0.1754]],
        [[0.2572, 0.1682, 0.1851,  ..., 0.1052, 0.2051, 0.1846],
         [0.2476, 0.1682, 0.2623,  ..., 0.1052, 0.1672, 0.1846],
         [0.2476, 0.4953, 0.3609,  ..., 0.1607, 0.1025, 0.1846],
         [0.2476, 0.1682, 0.1916,  ..., 0.6290, 0.5252, 0.4462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2357, 0.2330,  ..., 0.2451, 0.2402, 0.2400],
         [0.2500, 0.2357, 0.2330,  ..., 0.2177, 0.2402, 0.2400],
         [0.2500, 0.2357, 0.2330,  ..., 0.2177, 0.2402, 0.2400],
         [0.2500, 0.2928, 0.3009,  ..., 0.3195, 0.2795, 0.2800]],
        [[0.2460, 0.2241, 0.2050,  ..., 0.2174, 0.2182, 0.1927],
         [0.2589, 0.2828, 0.2466,  ..., 0.2662, 0.2393, 0.3167],
         [0.1908, 0.2241, 0.2050,  ..., 0.2174, 0.2177, 0.1642],
         [0.3043, 0.2690, 0.3434,  ..., 0.2989, 0.3247, 0.3263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:09,672 [Process: 0] Synchronize training processes
2024-08-16 14:08:09,673 [Process: 0] Evaluating...
2024-08-16 14:08:09,675 [Process: 0] EPOCH 18:
2024-08-16 14:08:09,676 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2358, 0.1484, 0.1553,  ..., 0.1569, 0.1744, 0.2261],
         [0.2358, 0.4543, 0.3460,  ..., 0.1569, 0.3790, 0.2261],
         [0.2358, 0.1484, 0.2563,  ..., 0.3146, 0.1744, 0.2261],
         [0.2927, 0.2489, 0.2424,  ..., 0.3715, 0.2722, 0.3218]],
        [[0.1897, 0.1779, 0.2616,  ..., 0.2332, 0.2469, 0.3948],
         [0.1897, 0.1779, 0.2256,  ..., 0.3005, 0.2469, 0.2001],
         [0.4309, 0.4663, 0.2873,  ..., 0.2332, 0.2592, 0.2001],
         [0.1897, 0.1779, 0.2256,  ..., 0.2332, 0.2469, 0.2050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2087, 0.2455, 0.2388,  ..., 0.2829, 0.2483, 0.2273],
         [0.2245, 0.2455, 0.2080,  ..., 0.2333, 0.1921, 0.2273],
         [0.2087, 0.2455, 0.2080,  ..., 0.2333, 0.1921, 0.2273],
         [0.3580, 0.2636, 0.3452,  ..., 0.2504, 0.3675, 0.3182]],
        [[0.2144, 0.2482, 0.2482,  ..., 0.2099, 0.2371, 0.2117],
         [0.2637, 0.2652, 0.2482,  ..., 0.2829, 0.2180, 0.2955],
         [0.2144, 0.1716, 0.2482,  ..., 0.2105, 0.2165, 0.2117],
         [0.3075, 0.3149, 0.2554,  ..., 0.2968, 0.3284, 0.2812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:11,767 [Process: 0] Synchronize training processes
2024-08-16 14:08:11,767 [Process: 0] Evaluating...
2024-08-16 14:08:11,769 [Process: 0] EPOCH 19:
2024-08-16 14:08:11,771 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2339, 0.2500, 0.2500,  ..., 0.6719, 0.2319, 0.2631],
         [0.2339, 0.2500, 0.2500,  ..., 0.1983, 0.2333, 0.1464],
         [0.2982, 0.2500, 0.2500,  ..., 0.0625, 0.2316, 0.4442],
         [0.2339, 0.2500, 0.2500,  ..., 0.0673, 0.3031, 0.1464]],
        [[0.2690, 0.1709, 0.1891,  ..., 0.2083, 0.1011, 0.3396],
         [0.3849, 0.3638, 0.3508,  ..., 0.2083, 0.3624, 0.1583],
         [0.1814, 0.1709, 0.1636,  ..., 0.2083, 0.1131, 0.1962],
         [0.1647, 0.2944, 0.2964,  ..., 0.3750, 0.4234, 0.3059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2217, 0.2261, 0.2500,  ..., 0.2465, 0.2573, 0.2324],
         [0.2414, 0.2700, 0.2500,  ..., 0.2465, 0.2476, 0.2813],
         [0.2217, 0.2261, 0.2500,  ..., 0.2465, 0.2476, 0.2324],
         [0.3153, 0.2777, 0.2500,  ..., 0.2605, 0.2476, 0.2538]],
        [[0.2005, 0.1996, 0.2039,  ..., 0.2313, 0.2537, 0.2418],
         [0.2387, 0.2683, 0.2945,  ..., 0.2313, 0.2389, 0.2504],
         [0.2005, 0.2397, 0.2039,  ..., 0.2313, 0.2022, 0.2209],
         [0.3602, 0.2924, 0.2977,  ..., 0.3062, 0.3052, 0.2870]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:13,874 [Process: 0] Synchronize training processes
2024-08-16 14:08:13,874 [Process: 0] Evaluating...
2024-08-16 14:08:13,876 [Process: 0] EPOCH 20:
2024-08-16 14:08:13,878 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3565, 0.2104, 0.3611,  ..., 0.2316, 0.5888, 0.2817],
         [0.4059, 0.3114, 0.3340,  ..., 0.2740, 0.1834, 0.3283],
         [0.0949, 0.2620, 0.1779,  ..., 0.1040, 0.0693, 0.0688],
         [0.1428, 0.2163, 0.1270,  ..., 0.3904, 0.1585, 0.3212]],
        [[0.2420, 0.2924, 0.2500,  ..., 0.4361, 0.2356, 0.2706],
         [0.1183, 0.2233, 0.2500,  ..., 0.1880, 0.2932, 0.3130],
         [0.5214, 0.2609, 0.2500,  ..., 0.1880, 0.2356, 0.2082],
         [0.1183, 0.2233, 0.2500,  ..., 0.1880, 0.2356, 0.2082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:08:15,978 [Process: 0] Synchronize training processes
2024-08-16 14:08:15,978 [Process: 0] Evaluating...
2024-08-16 14:08:15,980 [Process: 0] EPOCH 21:
2024-08-16 14:08:15,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.2500, 0.1741, 0.2445,  ..., 0.2245, 0.1990, 0.2268],
         [0.2500, 0.2319, 0.2164,  ..., 0.2245, 0.2283, 0.2239],
         [0.2500, 0.1751, 0.2024,  ..., 0.2245, 0.1902, 0.2239],
         [0.2500, 0.4189, 0.3367,  ..., 0.3265, 0.3825, 0.3255]],
        [[0.2733, 0.2427, 0.2244,  ..., 0.2360, 0.2185, 0.2084],
         [0.2043, 0.2973, 0.2446,  ..., 0.2954, 0.2218, 0.2673],
         [0.2043, 0.2119, 0.2244,  ..., 0.2138, 0.2185, 0.2084],
         [0.3181, 0.2480, 0.3065,  ..., 0.2549, 0.3411, 0.3159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2218, 0.1670,  ..., 0.0758, 0.0892, 0.0728],
         [0.2500, 0.2764, 0.1670,  ..., 0.0931, 0.0892, 0.0728],
         [0.2500, 0.2218, 0.4991,  ..., 0.7553, 0.7325, 0.6276],
         [0.2500, 0.2801, 0.1670,  ..., 0.0758, 0.0892, 0.2268]],
        [[0.4118, 0.6310, 0.3014,  ..., 0.2941, 0.1928, 0.5103],
         [0.1961, 0.0986, 0.3548,  ..., 0.2353, 0.3713, 0.1519],
         [0.1961, 0.0950, 0.1719,  ..., 0.2353, 0.2431, 0.2046],
         [0.1961, 0.1754, 0.1719,  ..., 0.2353, 0.1928, 0.1331]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:08:18,055 [Process: 0] Synchronize training processes
2024-08-16 14:08:18,056 [Process: 0] Evaluating...
2024-08-16 14:08:18,064 [Process: 0] EPOCH 22:
2024-08-16 14:08:18,066 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2450, 0.2422, 0.2388,  ..., 0.2587, 0.2468, 0.1971],
         [0.2598, 0.2422, 0.2388,  ..., 0.2363, 0.2468, 0.2483],
         [0.1962, 0.2422, 0.2388,  ..., 0.2097, 0.2468, 0.1971],
         [0.2990, 0.2733, 0.2836,  ..., 0.2953, 0.2595, 0.3575]],
        [[0.2500, 0.2086, 0.2303,  ..., 0.2187, 0.2177, 0.2233],
         [0.2500, 0.2757, 0.2303,  ..., 0.2364, 0.2472, 0.2568],
         [0.2500, 0.2086, 0.2303,  ..., 0.2187, 0.2177, 0.2233],
         [0.2500, 0.3072, 0.3092,  ..., 0.3261, 0.3173, 0.2966]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2923, 0.2021, 0.2468,  ..., 0.2127, 0.4324, 0.2248],
         [0.1915, 0.3865, 0.2296,  ..., 0.0814, 0.1857, 0.2248],
         [0.3247, 0.2093, 0.2026,  ..., 0.0814, 0.2051, 0.3255],
         [0.1915, 0.2021, 0.3210,  ..., 0.6245, 0.1767, 0.2248]],
        [[0.2339, 0.2669, 0.3891,  ..., 0.2500, 0.2500, 0.2186],
         [0.2984, 0.2444, 0.2036,  ..., 0.2500, 0.2500, 0.2186],
         [0.2339, 0.2444, 0.2036,  ..., 0.2500, 0.2500, 0.2186],
         [0.2339, 0.2444, 0.2036,  ..., 0.2500, 0.2500, 0.3442]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:20,160 [Process: 0] Synchronize training processes
2024-08-16 14:08:20,160 [Process: 0] Evaluating...
2024-08-16 14:08:20,162 [Process: 0] EPOCH 23:
2024-08-16 14:08:20,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2547, 0.2599, 0.2704,  ..., 0.2204, 0.2477, 0.2294],
         [0.1870, 0.2259, 0.2357,  ..., 0.2469, 0.2477, 0.2150],
         [0.1753, 0.2259, 0.1648,  ..., 0.2204, 0.2477, 0.2022],
         [0.3830, 0.2883, 0.3291,  ..., 0.3122, 0.2569, 0.3533]],
        [[0.2278, 0.2418, 0.2363,  ..., 0.2223, 0.2128, 0.2413],
         [0.2624, 0.2642, 0.2538,  ..., 0.2536, 0.2697, 0.2413],
         [0.2278, 0.2418, 0.2363,  ..., 0.2174, 0.2128, 0.2413],
         [0.2820, 0.2522, 0.2735,  ..., 0.3068, 0.3048, 0.2762]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2186, 0.1761, 0.1820,  ..., 0.1462, 0.4760, 0.1197],
         [0.3443, 0.3248, 0.2887,  ..., 0.4300, 0.2132, 0.0068],
         [0.2186, 0.1761, 0.1788,  ..., 0.1462, 0.1359, 0.8667],
         [0.2186, 0.3230, 0.3505,  ..., 0.2775, 0.1749, 0.0068]],
        [[0.1935, 0.2129, 0.2435,  ..., 0.2100, 0.2458, 0.2759],
         [0.2254, 0.3007, 0.2530,  ..., 0.1920, 0.2458, 0.2414],
         [0.2909, 0.2735, 0.2479,  ..., 0.2367, 0.2625, 0.2414],
         [0.2902, 0.2129, 0.2556,  ..., 0.3613, 0.2458, 0.2414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:22,251 [Process: 0] Synchronize training processes
2024-08-16 14:08:22,252 [Process: 0] Evaluating...
2024-08-16 14:08:22,253 [Process: 0] EPOCH 24:
2024-08-16 14:08:22,255 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2409, 0.1927, 0.2005,  ..., 0.2277, 0.1998, 0.2170],
         [0.2409, 0.1927, 0.2686,  ..., 0.2416, 0.2033, 0.2170],
         [0.2409, 0.1927, 0.2005,  ..., 0.2245, 0.1998, 0.2170],
         [0.2772, 0.4219, 0.3304,  ..., 0.3063, 0.3972, 0.3490]],
        [[0.2500, 0.2298, 0.2071,  ..., 0.2270, 0.2268, 0.2455],
         [0.2500, 0.2440, 0.2746,  ..., 0.2447, 0.2268, 0.2455],
         [0.2500, 0.2298, 0.2071,  ..., 0.2470, 0.2268, 0.2455],
         [0.2500, 0.2965, 0.3112,  ..., 0.2813, 0.3195, 0.2634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3365, 0.2500, 0.2500,  ..., 0.1980, 0.1856, 0.2285],
         [0.2212, 0.2500, 0.2500,  ..., 0.1723, 0.1856, 0.2285],
         [0.2212, 0.2500, 0.2500,  ..., 0.1723, 0.1907, 0.2285],
         [0.2212, 0.2500, 0.2500,  ..., 0.4574, 0.4380, 0.3145]],
        [[0.2282, 0.3300, 0.2117,  ..., 0.1658, 0.3023, 0.3881],
         [0.3121, 0.4090, 0.2117,  ..., 0.3976, 0.1466, 0.1614],
         [0.2651, 0.1305, 0.3649,  ..., 0.1415, 0.4045, 0.1969],
         [0.1945, 0.1305, 0.2117,  ..., 0.2952, 0.1466, 0.2536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:24,336 [Process: 0] Synchronize training processes
2024-08-16 14:08:24,337 [Process: 0] Evaluating...
2024-08-16 14:08:24,338 [Process: 0] EPOCH 25:
2024-08-16 14:08:24,341 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2359, 0.2493, 0.2491,  ..., 0.2267, 0.2506, 0.2432],
         [0.2558, 0.2596, 0.2527,  ..., 0.2289, 0.2004, 0.2432],
         [0.2359, 0.1913, 0.2491,  ..., 0.2267, 0.2004, 0.2432],
         [0.2724, 0.2998, 0.2491,  ..., 0.3177, 0.3487, 0.2705]],
        [[0.2252, 0.2152, 0.2125,  ..., 0.2373, 0.2412, 0.2208],
         [0.2658, 0.2701, 0.2739,  ..., 0.2373, 0.2537, 0.2208],
         [0.2252, 0.2152, 0.2125,  ..., 0.2373, 0.2412, 0.2208],
         [0.2838, 0.2995, 0.3011,  ..., 0.2880, 0.2640, 0.3375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2340, 0.2469, 0.1365,  ..., 0.2500, 0.2182, 0.1333],
         [0.2340, 0.2594, 0.1276,  ..., 0.2500, 0.1399, 0.1469],
         [0.2340, 0.2469, 0.2557,  ..., 0.2500, 0.4272, 0.1333],
         [0.2980, 0.2469, 0.4803,  ..., 0.2500, 0.2147, 0.5864]],
        [[0.1844, 0.1073, 0.2156,  ..., 0.1722, 0.4475, 0.2303],
         [0.2658, 0.5166, 0.3513,  ..., 0.4942, 0.1690, 0.1183],
         [0.4483, 0.2689, 0.2917,  ..., 0.2020, 0.2144, 0.6051],
         [0.1015, 0.1073, 0.1413,  ..., 0.1317, 0.1690, 0.0463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:26,432 [Process: 0] Synchronize training processes
2024-08-16 14:08:26,432 [Process: 0] Evaluating...
2024-08-16 14:08:26,434 [Process: 0] EPOCH 26:
2024-08-16 14:08:26,436 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2397, 0.2271, 0.2466,  ..., 0.2265, 0.2487, 0.2278],
         [0.2397, 0.2271, 0.2316,  ..., 0.2167, 0.2538, 0.2616],
         [0.2397, 0.2271, 0.2316,  ..., 0.2167, 0.2487, 0.2168],
         [0.2810, 0.3186, 0.2903,  ..., 0.3401, 0.2487, 0.2938]],
        [[0.2008, 0.2385, 0.2018,  ..., 0.2091, 0.2386, 0.2204],
         [0.3285, 0.2421, 0.2714,  ..., 0.2837, 0.2829, 0.2581],
         [0.2008, 0.2385, 0.2018,  ..., 0.2091, 0.2028, 0.2204],
         [0.2700, 0.2809, 0.3250,  ..., 0.2982, 0.2757, 0.3010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1556, 0.2030, 0.2194,  ..., 0.1846, 0.1419, 0.1704],
         [0.3820, 0.2030, 0.2950,  ..., 0.1846, 0.1419, 0.1704],
         [0.1882, 0.2297, 0.1988,  ..., 0.4132, 0.5582, 0.3815],
         [0.2742, 0.3642, 0.2868,  ..., 0.2176, 0.1580, 0.2777]],
        [[0.4724, 0.6744, 0.2697,  ..., 0.4521, 0.3465, 0.2317],
         [0.3400, 0.1363, 0.4259,  ..., 0.1826, 0.5607, 0.2317],
         [0.0581, 0.0795, 0.1861,  ..., 0.1826, 0.0424, 0.3049],
         [0.1295, 0.1098, 0.1182,  ..., 0.1826, 0.0505, 0.2317]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:28,499 [Process: 0] Synchronize training processes
2024-08-16 14:08:28,499 [Process: 0] Evaluating...
2024-08-16 14:08:28,501 [Process: 0] EPOCH 27:
2024-08-16 14:08:28,503 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2343, 0.2053, 0.2385,  ..., 0.2368, 0.2500, 0.2186],
         [0.2478, 0.2575, 0.2385,  ..., 0.2430, 0.2500, 0.2186],
         [0.2343, 0.2053, 0.2385,  ..., 0.2368, 0.2500, 0.2282],
         [0.2836, 0.3319, 0.2844,  ..., 0.2835, 0.2500, 0.3346]],
        [[0.2131, 0.2189, 0.2258,  ..., 0.2324, 0.2664, 0.2488],
         [0.3228, 0.2189, 0.2457,  ..., 0.2402, 0.2315, 0.2488],
         [0.2125, 0.2189, 0.2258,  ..., 0.2324, 0.2080, 0.2488],
         [0.2516, 0.3432, 0.3028,  ..., 0.2951, 0.2941, 0.2536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0381, 0.2045, 0.2190,  ..., 0.0498, 0.1408, 0.1889],
         [0.0381, 0.2045, 0.4474,  ..., 0.0701, 0.4932, 0.1889],
         [0.8857, 0.3493, 0.1666,  ..., 0.8303, 0.1408, 0.1889],
         [0.0381, 0.2417, 0.1670,  ..., 0.0498, 0.2252, 0.4332]],
        [[0.3885, 0.6261, 0.5230,  ..., 0.1721, 0.3108, 0.4480],
         [0.2038, 0.1246, 0.1574,  ..., 0.2173, 0.2297, 0.1647],
         [0.2038, 0.1246, 0.1574,  ..., 0.0945, 0.2297, 0.1647],
         [0.2038, 0.1246, 0.1623,  ..., 0.5161, 0.2297, 0.2226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:30,544 [Process: 0] Synchronize training processes
2024-08-16 14:08:30,544 [Process: 0] Evaluating...
2024-08-16 14:08:30,546 [Process: 0] EPOCH 28:
2024-08-16 14:08:30,548 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2711, 0.2071, 0.2264,  ..., 0.2200, 0.1819, 0.2267],
         [0.1976, 0.2071, 0.2264,  ..., 0.2924, 0.2766, 0.2429],
         [0.1976, 0.2071, 0.2264,  ..., 0.2200, 0.1711, 0.2267],
         [0.3336, 0.3786, 0.3208,  ..., 0.2676, 0.3705, 0.3038]],
        [[0.2136, 0.2293, 0.2070,  ..., 0.2402, 0.2433, 0.2338],
         [0.2745, 0.2293, 0.3373,  ..., 0.2402, 0.2433, 0.2705],
         [0.2090, 0.2322, 0.2070,  ..., 0.2402, 0.2433, 0.2338],
         [0.3029, 0.3092, 0.2487,  ..., 0.2793, 0.2700, 0.2620]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2220, 0.4275, 0.1756,  ..., 0.2366, 0.2500, 0.1980],
         [0.2220, 0.1743, 0.1833,  ..., 0.2395, 0.2500, 0.0717],
         [0.2786, 0.1743, 0.1259,  ..., 0.2874, 0.2500, 0.0717],
         [0.2774, 0.2238, 0.5151,  ..., 0.2366, 0.2500, 0.6585]],
        [[0.3688, 0.1503, 0.4808,  ..., 0.2170, 0.2399, 0.0789],
         [0.3640, 0.2226, 0.1353,  ..., 0.2149, 0.0880, 0.4368],
         [0.1300, 0.4768, 0.1582,  ..., 0.3532, 0.1440, 0.1353],
         [0.1372, 0.1503, 0.2257,  ..., 0.2149, 0.5282, 0.3491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:32,549 [Process: 0] Synchronize training processes
2024-08-16 14:08:32,550 [Process: 0] Evaluating...
2024-08-16 14:08:32,552 [Process: 0] EPOCH 29:
2024-08-16 14:08:32,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2432, 0.2283, 0.2488,  ..., 0.2351, 0.2512, 0.2458],
         [0.2432, 0.2283, 0.2455,  ..., 0.2403, 0.2285, 0.2458],
         [0.2432, 0.2283, 0.2455,  ..., 0.2351, 0.2230, 0.2458],
         [0.2704, 0.3151, 0.2603,  ..., 0.2895, 0.2973, 0.2626]],
        [[0.2113, 0.2117, 0.2243,  ..., 0.2147, 0.2114, 0.2297],
         [0.2327, 0.2117, 0.2511,  ..., 0.2147, 0.2158, 0.2297],
         [0.2113, 0.2117, 0.2243,  ..., 0.2147, 0.2191, 0.2297],
         [0.3447, 0.3648, 0.3003,  ..., 0.3558, 0.3536, 0.3109]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2168, 0.2505, 0.2018,  ..., 0.1491, 0.3689, 0.1481],
         [0.2220, 0.2701, 0.3645,  ..., 0.3665, 0.2049, 0.5558],
         [0.1381, 0.1659, 0.1297,  ..., 0.2352, 0.1646, 0.1481],
         [0.4232, 0.3136, 0.3040,  ..., 0.2493, 0.2617, 0.1481]],
        [[0.2500, 0.3753, 0.1014,  ..., 0.2415, 0.2641, 0.2915],
         [0.2500, 0.1850, 0.1014,  ..., 0.2415, 0.1375, 0.2133],
         [0.2500, 0.2547, 0.6957,  ..., 0.2755, 0.4209, 0.2818],
         [0.2500, 0.1850, 0.1014,  ..., 0.2415, 0.1775, 0.2133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:34,581 [Process: 0] Synchronize training processes
2024-08-16 14:08:34,581 [Process: 0] Evaluating...
2024-08-16 14:08:34,583 [Process: 0] EPOCH 30:
2024-08-16 14:08:34,585 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2250, 0.2275,  ..., 0.2424, 0.2155, 0.2357],
         [0.2500, 0.2866, 0.2399,  ..., 0.2424, 0.2769, 0.2507],
         [0.2500, 0.2250, 0.2275,  ..., 0.2424, 0.2155, 0.2357],
         [0.2500, 0.2634, 0.3050,  ..., 0.2728, 0.2921, 0.2780]],
        [[0.2272, 0.1882, 0.2360,  ..., 0.2498, 0.1995, 0.2297],
         [0.2197, 0.3072, 0.2546,  ..., 0.2498, 0.2651, 0.2297],
         [0.1889, 0.1882, 0.1896,  ..., 0.2506, 0.1995, 0.2297],
         [0.3641, 0.3164, 0.3198,  ..., 0.2498, 0.3359, 0.3110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2488, 0.1097, 0.2500,  ..., 0.2216, 0.2284, 0.3305],
         [0.2488, 0.0540, 0.2500,  ..., 0.1383, 0.2284, 0.1429],
         [0.2488, 0.1803, 0.2500,  ..., 0.1383, 0.3148, 0.1429],
         [0.2537, 0.6560, 0.2500,  ..., 0.5017, 0.2284, 0.3838]],
        [[0.1685, 0.0832, 0.2935,  ..., 0.1569, 0.2173, 0.2255],
         [0.2672, 0.1460, 0.3273,  ..., 0.5293, 0.2798, 0.3235],
         [0.2417, 0.6877, 0.2828,  ..., 0.1569, 0.2855, 0.2255],
         [0.3226, 0.0832, 0.0965,  ..., 0.1569, 0.2173, 0.2255]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:36,657 [Process: 0] Synchronize training processes
2024-08-16 14:08:36,658 [Process: 0] Evaluating...
2024-08-16 14:08:36,660 [Process: 0] EPOCH 31:
2024-08-16 14:08:36,662 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2446, 0.2295, 0.2320,  ..., 0.2500, 0.2471, 0.3006],
         [0.2446, 0.2916, 0.2320,  ..., 0.2500, 0.2349, 0.2323],
         [0.2446, 0.2295, 0.2320,  ..., 0.2500, 0.2349, 0.2323],
         [0.2663, 0.2493, 0.3039,  ..., 0.2500, 0.2831, 0.2348]],
        [[0.2048, 0.2307, 0.1745,  ..., 0.2136, 0.1995, 0.1975],
         [0.2263, 0.2307, 0.3447,  ..., 0.2865, 0.2389, 0.2573],
         [0.2048, 0.2307, 0.1750,  ..., 0.1993, 0.1995, 0.1975],
         [0.3642, 0.3080, 0.3058,  ..., 0.3007, 0.3622, 0.3477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2096, 0.1880, 0.3429,  ..., 0.2056, 0.1881, 0.1780],
         [0.2219, 0.2861, 0.1458,  ..., 0.2458, 0.2298, 0.3567],
         [0.2096, 0.1880, 0.1458,  ..., 0.2056, 0.1881, 0.1780],
         [0.3589, 0.3379, 0.3655,  ..., 0.3429, 0.3940, 0.2873]],
        [[0.0716, 0.4855, 0.1889,  ..., 0.0577, 0.3393, 0.3647],
         [0.1537, 0.1759, 0.1889,  ..., 0.0577, 0.4817, 0.2325],
         [0.7032, 0.1615, 0.4332,  ..., 0.8269, 0.0895, 0.2014],
         [0.0716, 0.1771, 0.1889,  ..., 0.0577, 0.0895, 0.2014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1825, 0.2123, 0.2089,  ..., 0.2070, 0.2307, 0.2143],
         [0.2746, 0.2527, 0.2332,  ..., 0.2070, 0.2178, 0.2299],
         [0.1787, 0.2111, 0.2089,  ..., 0.2070, 0.2178, 0.2143],
         [0.3642, 0.3239, 0.3490,  ..., 0.3790, 0.3336, 0.3415]],
        [[0.2131, 0.2173, 0.2042,  ..., 0.2098, 0.2384, 0.2240],
         [0.2738, 0.2173, 0.2580,  ..., 0.3083, 0.2589, 0.2550],
         [0.2061, 0.2173, 0.2042,  ..., 0.2060, 0.2384, 0.2240],
         [0.3071, 0.3480, 0.3336,  ..., 0.2758, 0.2643, 0.2970]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2454, 0.2768, 0.1731,  ..., 0.4820, 0.3397, 0.2338],
         [0.2863, 0.3728, 0.4807,  ..., 0.2138, 0.2479, 0.2986],
         [0.1928, 0.2424, 0.1731,  ..., 0.1711, 0.0762, 0.2338],
         [0.2754, 0.1080, 0.1731,  ..., 0.1331, 0.3361, 0.2338]],
        [[0.1143, 0.1157, 0.2098,  ..., 0.2158, 0.2356, 0.0529],
         [0.1143, 0.1374, 0.2098,  ..., 0.2158, 0.2356, 0.0529],
         [0.6571, 0.6311, 0.3705,  ..., 0.3525, 0.2932, 0.8414],
         [0.1143, 0.1157, 0.2098,  ..., 0.2158, 0.2356, 0.0529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:08:38,757 [Process: 0] Synchronize training processes
2024-08-16 14:08:38,758 [Process: 0] Evaluating...
2024-08-16 14:08:38,766 [Process: 0] EPOCH 32:
2024-08-16 14:08:38,768 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2135, 0.2314, 0.2423,  ..., 0.1923, 0.2477, 0.2190],
         [0.3088, 0.2332, 0.2600,  ..., 0.3632, 0.2547, 0.2429],
         [0.2135, 0.2314, 0.2423,  ..., 0.1923, 0.2477, 0.2190],
         [0.2643, 0.3041, 0.2554,  ..., 0.2522, 0.2499, 0.3192]],
        [[0.2246, 0.2274, 0.2374,  ..., 0.2466, 0.2182, 0.2303],
         [0.2500, 0.2274, 0.2374,  ..., 0.2193, 0.2018, 0.2303],
         [0.2585, 0.2274, 0.2443,  ..., 0.2193, 0.2018, 0.2303],
         [0.2669, 0.3179, 0.2809,  ..., 0.3149, 0.3781, 0.3090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2248, 0.1762, 0.2228,  ..., 0.2413, 0.2860, 0.1910],
         [0.2361, 0.2927, 0.3456,  ..., 0.2596, 0.2715, 0.3058],
         [0.2248, 0.1554, 0.1998,  ..., 0.2578, 0.2014, 0.1413],
         [0.3143, 0.3757, 0.2318,  ..., 0.2413, 0.2411, 0.3619]],
        [[0.2500, 0.2250, 0.2453,  ..., 0.2197, 0.2360, 0.3023],
         [0.2500, 0.2250, 0.2640,  ..., 0.2197, 0.2360, 0.2604],
         [0.2500, 0.3249, 0.2453,  ..., 0.3409, 0.2919, 0.2186],
         [0.2500, 0.2250, 0.2453,  ..., 0.2197, 0.2360, 0.2186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:40,843 [Process: 0] Synchronize training processes
2024-08-16 14:08:40,844 [Process: 0] Evaluating...
2024-08-16 14:08:40,846 [Process: 0] EPOCH 33:
2024-08-16 14:08:40,848 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1841, 0.2302, 0.2271,  ..., 0.2075, 0.2292, 0.2391],
         [0.2382, 0.2333, 0.2489,  ..., 0.2113, 0.3123, 0.2391],
         [0.1841, 0.2302, 0.2271,  ..., 0.2075, 0.2292, 0.2391],
         [0.3936, 0.3064, 0.2968,  ..., 0.3737, 0.2292, 0.2826]],
        [[0.2180, 0.2126, 0.2312,  ..., 0.2367, 0.2054, 0.2397],
         [0.2759, 0.2126, 0.2312,  ..., 0.2367, 0.2340, 0.2397],
         [0.2180, 0.2126, 0.2312,  ..., 0.2367, 0.2054, 0.2443],
         [0.2882, 0.3621, 0.3064,  ..., 0.2899, 0.3552, 0.2762]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2207, 0.1046, 0.1507,  ..., 0.2440, 0.0725, 0.2774],
         [0.2207, 0.3996, 0.2306,  ..., 0.2679, 0.7388, 0.1805],
         [0.2207, 0.1046, 0.1507,  ..., 0.2440, 0.0725, 0.0626],
         [0.3380, 0.3912, 0.4681,  ..., 0.2440, 0.1162, 0.4795]],
        [[0.8702, 0.4186, 0.4621,  ..., 0.1300, 0.4192, 0.1371],
         [0.0370, 0.1683, 0.1335,  ..., 0.1300, 0.1460, 0.1154],
         [0.0435, 0.2811, 0.2710,  ..., 0.6099, 0.2888, 0.6322],
         [0.0494, 0.1321, 0.1335,  ..., 0.1300, 0.1460, 0.1154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:42,933 [Process: 0] Synchronize training processes
2024-08-16 14:08:42,934 [Process: 0] Evaluating...
2024-08-16 14:08:42,936 [Process: 0] EPOCH 34:
2024-08-16 14:08:42,938 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2429, 0.2473, 0.2150,  ..., 0.2478, 0.2293, 0.2536],
         [0.2712, 0.2580, 0.2150,  ..., 0.2478, 0.2305, 0.2483],
         [0.2429, 0.2473, 0.2150,  ..., 0.2478, 0.2293, 0.2483],
         [0.2429, 0.2473, 0.3549,  ..., 0.2566, 0.3109, 0.2497]],
        [[0.2194, 0.2137, 0.1977,  ..., 0.2216, 0.2076, 0.2126],
         [0.2361, 0.2137, 0.1977,  ..., 0.2479, 0.2192, 0.2126],
         [0.2194, 0.2137, 0.1977,  ..., 0.1989, 0.2076, 0.2126],
         [0.3251, 0.3589, 0.4068,  ..., 0.3317, 0.3656, 0.3622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:08:45,022 [Process: 0] Synchronize training processes
2024-08-16 14:08:45,022 [Process: 0] Evaluating...
2024-08-16 14:08:45,024 [Process: 0] EPOCH 35:
2024-08-16 14:08:45,026 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1578, 0.1913, 0.2312,  ..., 0.1408, 0.2500, 0.2175],
         [0.4989, 0.1113, 0.2312,  ..., 0.1408, 0.2500, 0.2222],
         [0.1533, 0.0744, 0.2312,  ..., 0.2709, 0.2500, 0.2330],
         [0.1899, 0.6229, 0.3064,  ..., 0.4475, 0.2500, 0.3273]],
        [[0.2401, 0.5254, 0.3077,  ..., 0.4799, 0.3858, 0.2391],
         [0.2401, 0.1366, 0.4393,  ..., 0.1451, 0.2782, 0.3893],
         [0.2797, 0.1453, 0.1265,  ..., 0.2298, 0.1680, 0.0951],
         [0.2401, 0.1927, 0.1265,  ..., 0.1451, 0.1680, 0.2765]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2277, 0.2245, 0.2266,  ..., 0.2311, 0.2484, 0.2355],
         [0.2277, 0.2285, 0.2765,  ..., 0.2714, 0.2484, 0.2819],
         [0.2277, 0.2245, 0.2266,  ..., 0.2311, 0.2484, 0.2355],
         [0.3169, 0.3226, 0.2702,  ..., 0.2664, 0.2547, 0.2472]],
        [[0.2026, 0.2252, 0.2131,  ..., 0.2309, 0.2278, 0.2224],
         [0.2595, 0.2252, 0.2474,  ..., 0.2309, 0.2278, 0.2272],
         [0.2026, 0.2252, 0.2131,  ..., 0.2309, 0.2278, 0.2224],
         [0.3353, 0.3245, 0.3265,  ..., 0.3074, 0.3166, 0.3280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:08:47,086 [Process: 0] Synchronize training processes
2024-08-16 14:08:47,087 [Process: 0] Evaluating...
2024-08-16 14:08:47,088 [Process: 0] EPOCH 36:
2024-08-16 14:08:47,090 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2250, 0.1766, 0.2242,  ..., 0.2099, 0.1975, 0.2229],
         [0.3249, 0.2805, 0.2242,  ..., 0.2859, 0.3520, 0.2077],
         [0.2250, 0.1766, 0.2242,  ..., 0.2613, 0.1975, 0.1580],
         [0.2250, 0.3663, 0.3275,  ..., 0.2429, 0.2531, 0.4115]],
        [[0.2500, 0.2500, 0.2377,  ..., 0.4555, 0.2428, 0.2505],
         [0.2500, 0.2500, 0.2870,  ..., 0.1553, 0.2428, 0.1954],
         [0.2500, 0.2500, 0.2377,  ..., 0.2339, 0.2428, 0.1954],
         [0.2500, 0.2500, 0.2377,  ..., 0.1553, 0.2715, 0.3587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2330, 0.2544,  ..., 0.2497, 0.2496, 0.2146],
         [0.2500, 0.2857, 0.2119,  ..., 0.2497, 0.2496, 0.2151],
         [0.2500, 0.2330, 0.1966,  ..., 0.2497, 0.2496, 0.2146],
         [0.2500, 0.2483, 0.3372,  ..., 0.2509, 0.2512, 0.3557]],
        [[0.1943, 0.2221, 0.2115,  ..., 0.2053, 0.2222, 0.2141],
         [0.1943, 0.2221, 0.2115,  ..., 0.2118, 0.2957, 0.2141],
         [0.1943, 0.2221, 0.2115,  ..., 0.2053, 0.2222, 0.2141],
         [0.4172, 0.3336, 0.3656,  ..., 0.3776, 0.2598, 0.3578]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:49,165 [Process: 0] Synchronize training processes
2024-08-16 14:08:49,165 [Process: 0] Evaluating...
2024-08-16 14:08:49,167 [Process: 0] EPOCH 37:
2024-08-16 14:08:49,169 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2264, 0.1874, 0.1379,  ..., 0.3163, 0.2274, 0.1735],
         [0.2264, 0.1874, 0.1379,  ..., 0.2751, 0.2274, 0.3702],
         [0.3208, 0.4377, 0.5863,  ..., 0.2113, 0.3179, 0.2828],
         [0.2264, 0.1874, 0.1379,  ..., 0.1973, 0.2274, 0.1735]],
        [[0.2237, 0.4371, 0.2899,  ..., 0.3284, 0.1913, 0.2577],
         [0.3817, 0.1900, 0.3078,  ..., 0.2069, 0.4888, 0.2778],
         [0.0795, 0.1566, 0.1147,  ..., 0.1028, 0.0933, 0.1543],
         [0.3152, 0.2163, 0.2876,  ..., 0.3619, 0.2266, 0.3102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2004, 0.2328, 0.2355,  ..., 0.2253, 0.1987, 0.1948],
         [0.2740, 0.2328, 0.2448,  ..., 0.2253, 0.3258, 0.3162],
         [0.2004, 0.2328, 0.2355,  ..., 0.2253, 0.1987, 0.1948],
         [0.3251, 0.3017, 0.2841,  ..., 0.3241, 0.2769, 0.2941]],
        [[0.2058, 0.2253, 0.2303,  ..., 0.2116, 0.2153, 0.2244],
         [0.2058, 0.2253, 0.2303,  ..., 0.2201, 0.2153, 0.2244],
         [0.2058, 0.2253, 0.2303,  ..., 0.2116, 0.2153, 0.2244],
         [0.3826, 0.3241, 0.3091,  ..., 0.3566, 0.3541, 0.3269]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:51,241 [Process: 0] Synchronize training processes
2024-08-16 14:08:51,242 [Process: 0] Evaluating...
2024-08-16 14:08:51,244 [Process: 0] EPOCH 38:
2024-08-16 14:08:51,246 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1367, 0.0783, 0.1053,  ..., 0.2190, 0.1610, 0.3884],
         [0.2409, 0.0783, 0.1198,  ..., 0.3582, 0.2539, 0.3517],
         [0.5084, 0.4743, 0.6697,  ..., 0.2114, 0.5078, 0.0710],
         [0.1140, 0.3690, 0.1053,  ..., 0.2114, 0.0772, 0.1888]],
        [[0.2500, 0.2927, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.1995, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.1679, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.3399, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2310, 0.2404, 0.2769,  ..., 0.2207, 0.2757, 0.2441],
         [0.2361, 0.2404, 0.2141,  ..., 0.2207, 0.2155, 0.2110],
         [0.2310, 0.2404, 0.2048,  ..., 0.2207, 0.2153, 0.2023],
         [0.3020, 0.2788, 0.3042,  ..., 0.3380, 0.2934, 0.3426]],
        [[0.1970, 0.1857, 0.2128,  ..., 0.2250, 0.2256, 0.2060],
         [0.2766, 0.1857, 0.2128,  ..., 0.2250, 0.2256, 0.2060],
         [0.1970, 0.1857, 0.2128,  ..., 0.2250, 0.2256, 0.2060],
         [0.3294, 0.4430, 0.3615,  ..., 0.3249, 0.3231, 0.3820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:53,304 [Process: 0] Synchronize training processes
2024-08-16 14:08:53,304 [Process: 0] Evaluating...
2024-08-16 14:08:53,306 [Process: 0] EPOCH 39:
2024-08-16 14:08:53,308 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2198, 0.3236, 0.1856,  ..., 0.4892, 0.2584, 0.3619],
         [0.3329, 0.3768, 0.4977,  ..., 0.3135, 0.3028, 0.2723],
         [0.2198, 0.1498, 0.0908,  ..., 0.0740, 0.2779, 0.1692],
         [0.2276, 0.1498, 0.2260,  ..., 0.1233, 0.1609, 0.1966]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.1070, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.1645, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.6215, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.1070, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2440,  ..., 0.2500, 0.2460, 0.2500],
         [0.2500, 0.2500, 0.2557,  ..., 0.2500, 0.2619, 0.2500],
         [0.2500, 0.2500, 0.2440,  ..., 0.2500, 0.2460, 0.2500],
         [0.2500, 0.2500, 0.2562,  ..., 0.2500, 0.2460, 0.2500]],
        [[0.2161, 0.2056, 0.2252,  ..., 0.1945, 0.2338, 0.2022],
         [0.2344, 0.2424, 0.2252,  ..., 0.2351, 0.2338, 0.2181],
         [0.2161, 0.1953, 0.2252,  ..., 0.1945, 0.2338, 0.1848],
         [0.3334, 0.3566, 0.3245,  ..., 0.3760, 0.2987, 0.3949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:55,401 [Process: 0] Synchronize training processes
2024-08-16 14:08:55,401 [Process: 0] Evaluating...
2024-08-16 14:08:55,403 [Process: 0] EPOCH 40:
2024-08-16 14:08:55,405 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2311, 0.3558, 0.1676,  ..., 0.2199, 0.3394, 0.2249],
         [0.3975, 0.2934, 0.3790,  ..., 0.3245, 0.3186, 0.3252],
         [0.1857, 0.1696, 0.1661,  ..., 0.1295, 0.1710, 0.2249],
         [0.1857, 0.1812, 0.2873,  ..., 0.3260, 0.1710, 0.2249]],
        [[0.1809, 0.2492, 0.2238,  ..., 0.2360, 0.2438, 0.2363],
         [0.1809, 0.2492, 0.2238,  ..., 0.2360, 0.2438, 0.2363],
         [0.1809, 0.2492, 0.2238,  ..., 0.2920, 0.2685, 0.2363],
         [0.4573, 0.2525, 0.3286,  ..., 0.2360, 0.2438, 0.2912]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2347, 0.2153, 0.2580,  ..., 0.2500, 0.2500, 0.2435],
         [0.2347, 0.2487, 0.2276,  ..., 0.2500, 0.2500, 0.2435],
         [0.2347, 0.2153, 0.2276,  ..., 0.2500, 0.2500, 0.2435],
         [0.2960, 0.3207, 0.2869,  ..., 0.2500, 0.2500, 0.2696]],
        [[0.2125, 0.2252, 0.2261,  ..., 0.2187, 0.1976, 0.2181],
         [0.2178, 0.2349, 0.2261,  ..., 0.2187, 0.2828, 0.2181],
         [0.2125, 0.2252, 0.2261,  ..., 0.2187, 0.1976, 0.2181],
         [0.3572, 0.3148, 0.3216,  ..., 0.3438, 0.3220, 0.3456]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:57,477 [Process: 0] Synchronize training processes
2024-08-16 14:08:57,477 [Process: 0] Evaluating...
2024-08-16 14:08:57,479 [Process: 0] EPOCH 41:
2024-08-16 14:08:57,481 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2877, 0.2961, 0.1926,  ..., 0.2500, 0.1583, 0.1972],
         [0.2266, 0.2346, 0.1501,  ..., 0.2500, 0.1583, 0.1972],
         [0.2590, 0.2346, 0.1376,  ..., 0.2500, 0.1696, 0.2251],
         [0.2266, 0.2346, 0.5197,  ..., 0.2500, 0.5137, 0.3805]],
        [[0.2338, 0.1679, 0.2451,  ..., 0.1951, 0.1678, 0.2466],
         [0.2796, 0.3103, 0.2444,  ..., 0.3682, 0.3875, 0.2993],
         [0.2338, 0.1679, 0.1622,  ..., 0.1760, 0.1678, 0.1906],
         [0.2529, 0.3539, 0.3484,  ..., 0.2607, 0.2770, 0.2634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2408, 0.2474, 0.2242,  ..., 0.2360, 0.2500, 0.2426],
         [0.2408, 0.2474, 0.2285,  ..., 0.2360, 0.2500, 0.2539],
         [0.2408, 0.2474, 0.2174,  ..., 0.2360, 0.2500, 0.2426],
         [0.2775, 0.2579, 0.3300,  ..., 0.2919, 0.2500, 0.2609]],
        [[0.2054, 0.2121, 0.2194,  ..., 0.2199, 0.2197, 0.2101],
         [0.2054, 0.2268, 0.2011,  ..., 0.2199, 0.2197, 0.2231],
         [0.2054, 0.2121, 0.2011,  ..., 0.2199, 0.2197, 0.2101],
         [0.3839, 0.3490, 0.3784,  ..., 0.3402, 0.3408, 0.3568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:08:59,572 [Process: 0] Synchronize training processes
2024-08-16 14:08:59,573 [Process: 0] Evaluating...
2024-08-16 14:08:59,581 [Process: 0] EPOCH 42:
2024-08-16 14:08:59,583 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1105, 0.1221, 0.1195,  ..., 0.2247, 0.1508, 0.1947],
         [0.6320, 0.2172, 0.4635,  ..., 0.5595, 0.3610, 0.1412],
         [0.0849, 0.1891, 0.2184,  ..., 0.0953, 0.3187, 0.2033],
         [0.1725, 0.4716, 0.1986,  ..., 0.1204, 0.1694, 0.4607]],
        [[0.3352, 0.2500, 0.4053,  ..., 0.2500, 0.3765, 0.2534],
         [0.2216, 0.2500, 0.2126,  ..., 0.2500, 0.4111, 0.2724],
         [0.2216, 0.2500, 0.1911,  ..., 0.2500, 0.1062, 0.2371],
         [0.2216, 0.2500, 0.1911,  ..., 0.2500, 0.1062, 0.2371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2296, 0.1980, 0.2213,  ..., 0.2186, 0.2390, 0.2446],
         [0.2975, 0.1980, 0.2394,  ..., 0.2781, 0.2627, 0.2446],
         [0.2296, 0.1980, 0.2213,  ..., 0.2062, 0.2390, 0.2446],
         [0.2434, 0.4061, 0.3181,  ..., 0.2971, 0.2593, 0.2663]],
        [[0.2309, 0.2201, 0.2179,  ..., 0.1953, 0.1966, 0.2209],
         [0.2626, 0.2207, 0.2179,  ..., 0.1953, 0.2429, 0.2209],
         [0.2112, 0.2201, 0.2179,  ..., 0.1953, 0.1966, 0.2209],
         [0.2953, 0.3390, 0.3462,  ..., 0.4140, 0.3639, 0.3374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:01,677 [Process: 0] Synchronize training processes
2024-08-16 14:09:01,677 [Process: 0] Evaluating...
2024-08-16 14:09:01,679 [Process: 0] EPOCH 43:
2024-08-16 14:09:01,681 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1676, 0.2290, 0.1943,  ..., 0.2420, 0.2274, 0.1838],
         [0.1362, 0.2290, 0.1347,  ..., 0.2598, 0.2274, 0.4247],
         [0.1134, 0.3129, 0.1347,  ..., 0.2420, 0.2274, 0.2077],
         [0.5829, 0.2290, 0.5363,  ..., 0.2563, 0.3179, 0.1838]],
        [[0.1725, 0.1324, 0.2255,  ..., 0.2014, 0.1381, 0.2406],
         [0.4825, 0.1324, 0.4168,  ..., 0.2014, 0.4651, 0.3563],
         [0.1725, 0.6028, 0.1789,  ..., 0.2014, 0.1381, 0.2015],
         [0.1725, 0.1324, 0.1789,  ..., 0.3958, 0.2587, 0.2015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2405, 0.2293, 0.2375,  ..., 0.2383, 0.1955, 0.2119],
         [0.2405, 0.2293, 0.2375,  ..., 0.2383, 0.1955, 0.3019],
         [0.2405, 0.2293, 0.2375,  ..., 0.2383, 0.1955, 0.2119],
         [0.2785, 0.3121, 0.2876,  ..., 0.2850, 0.4136, 0.2743]],
        [[0.2170, 0.2038, 0.1935,  ..., 0.1966, 0.2036, 0.2097],
         [0.2334, 0.2539, 0.2436,  ..., 0.2664, 0.2133, 0.2169],
         [0.2170, 0.2038, 0.1935,  ..., 0.1966, 0.2030, 0.2097],
         [0.3326, 0.3385, 0.3695,  ..., 0.3403, 0.3802, 0.3637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:03,749 [Process: 0] Synchronize training processes
2024-08-16 14:09:03,749 [Process: 0] Evaluating...
2024-08-16 14:09:03,751 [Process: 0] EPOCH 44:
2024-08-16 14:09:03,753 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.1792, 0.2485,  ..., 0.2162, 0.1811, 0.0495],
         [0.2500, 0.1792, 0.2485,  ..., 0.2162, 0.1811, 0.0495],
         [0.2500, 0.1792, 0.2485,  ..., 0.2162, 0.1811, 0.8515],
         [0.2500, 0.4623, 0.2544,  ..., 0.3515, 0.4568, 0.0495]],
        [[0.3297, 0.3591, 0.1881,  ..., 0.1907, 0.2851, 0.2962],
         [0.2537, 0.2062, 0.3252,  ..., 0.1633, 0.1802, 0.2188],
         [0.1597, 0.2062, 0.1956,  ..., 0.2046, 0.1946, 0.2662],
         [0.2570, 0.2286, 0.2911,  ..., 0.4414, 0.3401, 0.2188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2435, 0.2149, 0.2363,  ..., 0.2336, 0.2192, 0.2219],
         [0.2435, 0.2552, 0.2274,  ..., 0.2336, 0.2224, 0.2219],
         [0.2435, 0.2102, 0.2274,  ..., 0.2336, 0.2192, 0.2219],
         [0.2695, 0.3197, 0.3089,  ..., 0.2993, 0.3393, 0.3342]],
        [[0.2199, 0.2150, 0.2110,  ..., 0.2254, 0.2117, 0.2576],
         [0.2615, 0.2620, 0.2317,  ..., 0.2254, 0.2254, 0.2338],
         [0.2199, 0.2150, 0.2110,  ..., 0.2254, 0.2117, 0.1861],
         [0.2986, 0.3080, 0.3463,  ..., 0.3238, 0.3512, 0.3226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:05,826 [Process: 0] Synchronize training processes
2024-08-16 14:09:05,826 [Process: 0] Evaluating...
2024-08-16 14:09:05,828 [Process: 0] EPOCH 45:
2024-08-16 14:09:05,830 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.4150, 0.3128, 0.4825,  ..., 0.2231, 0.3195, 0.5876],
         [0.4048, 0.5371, 0.3216,  ..., 0.4294, 0.3220, 0.2266],
         [0.0901, 0.0750, 0.0979,  ..., 0.1738, 0.1793, 0.0929],
         [0.0901, 0.0750, 0.0979,  ..., 0.1738, 0.1793, 0.0929]],
        [[0.1367, 0.1509, 0.0656,  ..., 0.1378, 0.1719, 0.0643],
         [0.1316, 0.1509, 0.0656,  ..., 0.1378, 0.1719, 0.0643],
         [0.2264, 0.4705, 0.6513,  ..., 0.3876, 0.3800, 0.6515],
         [0.5053, 0.2276, 0.2175,  ..., 0.3368, 0.2762, 0.2199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2478, 0.2369, 0.2292,  ..., 0.2500, 0.2446, 0.2195],
         [0.2478, 0.2369, 0.2339,  ..., 0.2500, 0.2572, 0.2195],
         [0.2478, 0.2369, 0.2168,  ..., 0.2500, 0.2446, 0.2195],
         [0.2567, 0.2893, 0.3201,  ..., 0.2500, 0.2536, 0.3414]],
        [[0.2228, 0.2373, 0.1918,  ..., 0.1888, 0.2169, 0.1910],
         [0.2228, 0.1969, 0.2275,  ..., 0.2004, 0.2638, 0.2129],
         [0.2228, 0.1969, 0.1918,  ..., 0.1888, 0.2107, 0.1803],
         [0.3315, 0.3689, 0.3889,  ..., 0.4221, 0.3086, 0.4158]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:07,888 [Process: 0] Synchronize training processes
2024-08-16 14:09:07,888 [Process: 0] Evaluating...
2024-08-16 14:09:07,890 [Process: 0] EPOCH 46:
2024-08-16 14:09:07,892 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2471, 0.4706, 0.2547,  ..., 0.2423, 0.3720, 0.1834],
         [0.2587, 0.2658, 0.2720,  ..., 0.2373, 0.2093, 0.3672],
         [0.2471, 0.1318, 0.2366,  ..., 0.2831, 0.2093, 0.2660],
         [0.2471, 0.1318, 0.2366,  ..., 0.2373, 0.2093, 0.1834]],
        [[0.3534, 0.2137, 0.2095,  ..., 0.2392, 0.2111, 0.2435],
         [0.2404, 0.2137, 0.2095,  ..., 0.2392, 0.2111, 0.2435],
         [0.2031, 0.2137, 0.2699,  ..., 0.2392, 0.2272, 0.2435],
         [0.2031, 0.3589, 0.3111,  ..., 0.2823, 0.3507, 0.2695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2314, 0.2500, 0.2500,  ..., 0.2500, 0.2428, 0.2336],
         [0.2314, 0.2500, 0.2500,  ..., 0.2500, 0.2428, 0.2336],
         [0.2314, 0.2500, 0.2500,  ..., 0.2500, 0.2428, 0.2336],
         [0.3058, 0.2500, 0.2500,  ..., 0.2500, 0.2716, 0.2993]],
        [[0.1969, 0.2123, 0.2027,  ..., 0.2086, 0.2067, 0.2464],
         [0.2139, 0.2143, 0.2460,  ..., 0.2508, 0.2621, 0.2148],
         [0.1969, 0.2123, 0.2027,  ..., 0.2086, 0.2067, 0.1999],
         [0.3922, 0.3612, 0.3487,  ..., 0.3321, 0.3244, 0.3389]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:09,956 [Process: 0] Synchronize training processes
2024-08-16 14:09:09,956 [Process: 0] Evaluating...
2024-08-16 14:09:09,958 [Process: 0] EPOCH 47:
2024-08-16 14:09:09,960 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1804, 0.1475, 0.1157,  ..., 0.0904, 0.1079, 0.1993],
         [0.1766, 0.1475, 0.1157,  ..., 0.0904, 0.7141, 0.4086],
         [0.4659, 0.4856, 0.6530,  ..., 0.4791, 0.0519, 0.0541],
         [0.1771, 0.2193, 0.1157,  ..., 0.3400, 0.1260, 0.3379]],
        [[0.3573, 0.2919, 0.3041,  ..., 0.3531, 0.3394, 0.3203],
         [0.2142, 0.2360, 0.2313,  ..., 0.2101, 0.2202, 0.2266],
         [0.2142, 0.2360, 0.2313,  ..., 0.2101, 0.2202, 0.2266],
         [0.2142, 0.2360, 0.2333,  ..., 0.2266, 0.2202, 0.2266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2448, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2448, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2448, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2655, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.2031, 0.2102, 0.2215,  ..., 0.2235, 0.2117, 0.1966],
         [0.2031, 0.2102, 0.2175,  ..., 0.2235, 0.2033, 0.2145],
         [0.2031, 0.2102, 0.2175,  ..., 0.2235, 0.1999, 0.1966],
         [0.3907, 0.3695, 0.3436,  ..., 0.3296, 0.3851, 0.3923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:12,039 [Process: 0] Synchronize training processes
2024-08-16 14:09:12,040 [Process: 0] Evaluating...
2024-08-16 14:09:12,042 [Process: 0] EPOCH 48:
2024-08-16 14:09:12,044 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2370, 0.2258, 0.3475,  ..., 0.1335, 0.2785, 0.2500],
         [0.3825, 0.3226, 0.2175,  ..., 0.3401, 0.4148, 0.2500],
         [0.1630, 0.2258, 0.2175,  ..., 0.1335, 0.1707, 0.2500],
         [0.2176, 0.2258, 0.2175,  ..., 0.3928, 0.1361, 0.2500]],
        [[0.1739, 0.2050, 0.2041,  ..., 0.1709, 0.3043, 0.2031],
         [0.0989, 0.2050, 0.2041,  ..., 0.2231, 0.2721, 0.2031],
         [0.3461, 0.3849, 0.3878,  ..., 0.3989, 0.2118, 0.3906],
         [0.3811, 0.2050, 0.2041,  ..., 0.2071, 0.2118, 0.2031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2368, 0.2495,  ..., 0.2373, 0.2378, 0.2357],
         [0.2500, 0.2720, 0.2514,  ..., 0.2880, 0.2866, 0.2472],
         [0.2500, 0.2368, 0.2495,  ..., 0.2373, 0.2378, 0.2357],
         [0.2500, 0.2545, 0.2495,  ..., 0.2373, 0.2378, 0.2814]],
        [[0.2064, 0.2157, 0.1876,  ..., 0.2127, 0.2126, 0.2160],
         [0.2064, 0.2157, 0.1876,  ..., 0.2127, 0.2337, 0.2160],
         [0.2064, 0.2157, 0.1876,  ..., 0.2127, 0.2126, 0.2160],
         [0.3808, 0.3529, 0.4371,  ..., 0.3618, 0.3412, 0.3520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:14,125 [Process: 0] Synchronize training processes
2024-08-16 14:09:14,125 [Process: 0] Evaluating...
2024-08-16 14:09:14,127 [Process: 0] EPOCH 49:
2024-08-16 14:09:14,129 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2001, 0.1662, 0.1086,  ..., 0.1831, 0.1093, 0.1498],
         [0.3307, 0.3075, 0.3443,  ..., 0.1995, 0.1093, 0.3504],
         [0.3113, 0.4050, 0.4385,  ..., 0.3987, 0.4418, 0.3611],
         [0.1580, 0.1214, 0.1086,  ..., 0.2187, 0.3397, 0.1387]],
        [[0.3533, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2645],
         [0.2156, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2135],
         [0.2156, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2135],
         [0.2156, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.3084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:09:16,208 [Process: 0] Synchronize training processes
2024-08-16 14:09:16,209 [Process: 0] Evaluating...
2024-08-16 14:09:16,211 [Process: 0] EPOCH 50:
2024-08-16 14:09:16,213 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2031, 0.2300,  ..., 0.2317, 0.2449, 0.2500],
         [0.2500, 0.2683, 0.3099,  ..., 0.2317, 0.2449, 0.2500],
         [0.2500, 0.2031, 0.2300,  ..., 0.2317, 0.2449, 0.2500],
         [0.2500, 0.3255, 0.2300,  ..., 0.3048, 0.2654, 0.2500]],
        [[0.1970, 0.2287, 0.2300,  ..., 0.1961, 0.2253, 0.2005],
         [0.1970, 0.2652, 0.2430,  ..., 0.2151, 0.2253, 0.1794],
         [0.1970, 0.2128, 0.2300,  ..., 0.1961, 0.2253, 0.1794],
         [0.4089, 0.2933, 0.2971,  ..., 0.3928, 0.3241, 0.4406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1694, 0.3431, 0.1829,  ..., 0.4132, 0.2500, 0.2479],
         [0.1694, 0.2193, 0.1829,  ..., 0.1927, 0.2500, 0.2479],
         [0.3285, 0.2339, 0.4512,  ..., 0.2015, 0.2500, 0.2479],
         [0.3327, 0.2037, 0.1829,  ..., 0.1927, 0.2500, 0.2564]],
        [[0.1858, 0.2747, 0.2757,  ..., 0.3223, 0.1101, 0.2252],
         [0.2982, 0.1255, 0.2603,  ..., 0.1059, 0.3133, 0.1497],
         [0.1982, 0.4742, 0.2853,  ..., 0.3015, 0.2186, 0.2733],
         [0.3178, 0.1255, 0.1787,  ..., 0.2703, 0.3579, 0.3517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:18,305 [Process: 0] Synchronize training processes
2024-08-16 14:09:18,306 [Process: 0] Evaluating...
2024-08-16 14:09:18,308 [Process: 0] EPOCH 51:
2024-08-16 14:09:18,310 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2310, 0.2309, 0.2172,  ..., 0.2397, 0.2500, 0.2276],
         [0.2310, 0.2309, 0.2172,  ..., 0.2397, 0.2500, 0.2276],
         [0.2310, 0.2565, 0.2172,  ..., 0.2397, 0.2500, 0.2276],
         [0.3069, 0.2818, 0.3483,  ..., 0.2808, 0.2500, 0.3173]],
        [[0.2242, 0.1892, 0.1955,  ..., 0.2137, 0.1961, 0.2152],
         [0.2242, 0.1905, 0.1955,  ..., 0.2137, 0.2016, 0.2152],
         [0.2242, 0.1771, 0.1955,  ..., 0.2137, 0.1956, 0.2152],
         [0.3273, 0.4432, 0.4135,  ..., 0.3588, 0.4066, 0.3543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3321, 0.1851, 0.2047,  ..., 0.1725, 0.2226, 0.5645],
         [0.2226, 0.1211, 0.1499,  ..., 0.1871, 0.3323, 0.2040],
         [0.2226, 0.5727, 0.5041,  ..., 0.4678, 0.2226, 0.1316],
         [0.2226, 0.1211, 0.1412,  ..., 0.1725, 0.2226, 0.1000]],
        [[0.1428, 0.1729, 0.0729,  ..., 0.3736, 0.1809, 0.0894],
         [0.2695, 0.2055, 0.0729,  ..., 0.1567, 0.5385, 0.6705],
         [0.1428, 0.1729, 0.0729,  ..., 0.0910, 0.1291, 0.0894],
         [0.4449, 0.4488, 0.7814,  ..., 0.3787, 0.1515, 0.1508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:20,395 [Process: 0] Synchronize training processes
2024-08-16 14:09:20,395 [Process: 0] Evaluating...
2024-08-16 14:09:20,403 [Process: 0] EPOCH 52:
2024-08-16 14:09:20,405 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.2500, 0.2498,  ..., 0.2445, 0.2295, 0.2271],
         [0.2500, 0.2500, 0.2498,  ..., 0.2445, 0.2295, 0.2271],
         [0.2500, 0.2500, 0.2498,  ..., 0.2445, 0.2295, 0.2271],
         [0.2500, 0.2500, 0.2505,  ..., 0.2666, 0.3114, 0.3187]],
        [[0.2272, 0.2201, 0.2221,  ..., 0.2450, 0.1964, 0.2319],
         [0.2272, 0.2201, 0.2221,  ..., 0.2450, 0.1964, 0.2319],
         [0.2272, 0.2201, 0.2221,  ..., 0.2450, 0.1964, 0.2319],
         [0.3184, 0.3396, 0.3337,  ..., 0.2649, 0.4109, 0.3043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3826, 0.3203, 0.2911,  ..., 0.5407, 0.3520, 0.5428],
         [0.1559, 0.1060, 0.1101,  ..., 0.1196, 0.2776, 0.1396],
         [0.1551, 0.0656, 0.0796,  ..., 0.0826, 0.0906, 0.1290],
         [0.3065, 0.5080, 0.5191,  ..., 0.2571, 0.2798, 0.1886]],
        [[0.0791, 0.2500, 0.4205,  ..., 0.2121, 0.1733, 0.1549],
         [0.7628, 0.2500, 0.1961,  ..., 0.3636, 0.2033, 0.5353],
         [0.0791, 0.2500, 0.1917,  ..., 0.2121, 0.4501, 0.1549],
         [0.0791, 0.2500, 0.1917,  ..., 0.2121, 0.1733, 0.1549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:22,487 [Process: 0] Synchronize training processes
2024-08-16 14:09:22,488 [Process: 0] Evaluating...
2024-08-16 14:09:22,490 [Process: 0] EPOCH 53:
2024-08-16 14:09:22,491 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2354, 0.2500, 0.2285,  ..., 0.2291, 0.2477, 0.2439],
         [0.2853, 0.2500, 0.2556,  ..., 0.2291, 0.2568, 0.2684],
         [0.2354, 0.2500, 0.2285,  ..., 0.2291, 0.2477, 0.2439],
         [0.2439, 0.2500, 0.2874,  ..., 0.3128, 0.2477, 0.2439]],
        [[0.1963, 0.2044, 0.1717,  ..., 0.2031, 0.2128, 0.1814],
         [0.1963, 0.2137, 0.1717,  ..., 0.2031, 0.2173, 0.2068],
         [0.1963, 0.2044, 0.1717,  ..., 0.2031, 0.2128, 0.1814],
         [0.4111, 0.3775, 0.4848,  ..., 0.3908, 0.3571, 0.4303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3525, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.3499, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.1488, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.1488, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.1002, 0.5546, 0.1959,  ..., 0.1850, 0.2754, 0.2468],
         [0.1002, 0.0974, 0.3688,  ..., 0.2523, 0.1601, 0.3702],
         [0.2929, 0.0974, 0.2004,  ..., 0.2025, 0.1601, 0.1488],
         [0.5067, 0.2506, 0.2349,  ..., 0.3602, 0.4044, 0.2342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:24,576 [Process: 0] Synchronize training processes
2024-08-16 14:09:24,576 [Process: 0] Evaluating...
2024-08-16 14:09:24,578 [Process: 0] EPOCH 54:
2024-08-16 14:09:24,580 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2367, 0.2289, 0.2370,  ..., 0.2414, 0.2372, 0.2236],
         [0.2839, 0.2408, 0.2370,  ..., 0.2757, 0.2372, 0.2373],
         [0.2367, 0.2289, 0.2370,  ..., 0.2414, 0.2372, 0.2236],
         [0.2427, 0.3015, 0.2889,  ..., 0.2414, 0.2883, 0.3154]],
        [[0.2259, 0.2215, 0.2209,  ..., 0.2095, 0.2385, 0.1752],
         [0.2259, 0.2215, 0.2209,  ..., 0.2114, 0.2385, 0.1979],
         [0.2259, 0.2215, 0.2209,  ..., 0.2032, 0.2385, 0.1752],
         [0.3224, 0.3354, 0.3372,  ..., 0.3758, 0.2844, 0.4518]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.8817, 0.2219, 0.4567,  ..., 0.3696, 0.2500, 0.2100],
         [0.0283, 0.2219, 0.1311,  ..., 0.1954, 0.2500, 0.2100],
         [0.0283, 0.2219, 0.1311,  ..., 0.1954, 0.2500, 0.2100],
         [0.0617, 0.3344, 0.2811,  ..., 0.2397, 0.2500, 0.3699]],
        [[0.1489, 0.1464, 0.0774,  ..., 0.2018, 0.2256, 0.1505],
         [0.1489, 0.4483, 0.5330,  ..., 0.5142, 0.3589, 0.3114],
         [0.5532, 0.2588, 0.3121,  ..., 0.1463, 0.1684, 0.1989],
         [0.1489, 0.1464, 0.0774,  ..., 0.1377, 0.2471, 0.3392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:26,678 [Process: 0] Synchronize training processes
2024-08-16 14:09:26,678 [Process: 0] Evaluating...
2024-08-16 14:09:26,680 [Process: 0] EPOCH 55:
2024-08-16 14:09:26,682 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2224, 0.2489, 0.2500,  ..., 0.2467, 0.2283, 0.2500],
         [0.2224, 0.2533, 0.2500,  ..., 0.2598, 0.2705, 0.2500],
         [0.2224, 0.2489, 0.2500,  ..., 0.2467, 0.2312, 0.2500],
         [0.3329, 0.2489, 0.2500,  ..., 0.2467, 0.2700, 0.2500]],
        [[0.1876, 0.2033, 0.2500,  ..., 0.2021, 0.2244, 0.1962],
         [0.1903, 0.1874, 0.2500,  ..., 0.2021, 0.2258, 0.1969],
         [0.1876, 0.1874, 0.2500,  ..., 0.2021, 0.2244, 0.1962],
         [0.4344, 0.4220, 0.2500,  ..., 0.3938, 0.3253, 0.4108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2195, 0.2470, 0.1772,  ..., 0.2151, 0.1403, 0.3763],
         [0.3164, 0.2589, 0.1772,  ..., 0.2151, 0.1403, 0.2079],
         [0.2195, 0.2470, 0.1772,  ..., 0.2151, 0.2052, 0.2079],
         [0.2447, 0.2470, 0.4683,  ..., 0.3548, 0.5143, 0.2079]],
        [[0.2112, 0.2082, 0.3356,  ..., 0.2319, 0.3392, 0.3065],
         [0.3665, 0.2082, 0.2215,  ..., 0.2319, 0.2960, 0.1869],
         [0.2112, 0.3755, 0.2215,  ..., 0.3042, 0.1949, 0.3197],
         [0.2112, 0.2082, 0.2215,  ..., 0.2319, 0.1699, 0.1869]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:28,761 [Process: 0] Synchronize training processes
2024-08-16 14:09:28,761 [Process: 0] Evaluating...
2024-08-16 14:09:28,763 [Process: 0] EPOCH 56:
2024-08-16 14:09:28,765 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2331, 0.2470, 0.1981,  ..., 0.2332, 0.2500, 0.1938],
         [0.2356, 0.2470, 0.2066,  ..., 0.2332, 0.2500, 0.1938],
         [0.2331, 0.2470, 0.1981,  ..., 0.2332, 0.2500, 0.1938],
         [0.2982, 0.2591, 0.3973,  ..., 0.3003, 0.2500, 0.4185]],
        [[0.2300, 0.2209, 0.2218,  ..., 0.2390, 0.2461, 0.2114],
         [0.2671, 0.2554, 0.2218,  ..., 0.2390, 0.2461, 0.2114],
         [0.2300, 0.2209, 0.2218,  ..., 0.2390, 0.2461, 0.2114],
         [0.2730, 0.3028, 0.3347,  ..., 0.2830, 0.2616, 0.3658]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2660, 0.2735, 0.3148,  ..., 0.2579, 0.2720, 0.2500],
         [0.2761, 0.2194, 0.2443,  ..., 0.2682, 0.2533, 0.2500],
         [0.2400, 0.2194, 0.2027,  ..., 0.2567, 0.2632, 0.2500],
         [0.2179, 0.2877, 0.2382,  ..., 0.2172, 0.2115, 0.2500]],
        [[0.2500, 0.1811, 0.2232,  ..., 0.2258, 0.2500, 0.1815],
         [0.2500, 0.2205, 0.2232,  ..., 0.2128, 0.2500, 0.1815],
         [0.2500, 0.1811, 0.2232,  ..., 0.2128, 0.2500, 0.1815],
         [0.2500, 0.4173, 0.3304,  ..., 0.3486, 0.2500, 0.4556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2163, 0.2283, 0.2112,  ..., 0.2306, 0.1889, 0.2434],
         [0.2347, 0.2452, 0.2206,  ..., 0.2306, 0.1889, 0.2434],
         [0.2163, 0.2283, 0.2112,  ..., 0.2306, 0.1889, 0.2434],
         [0.3326, 0.2982, 0.3569,  ..., 0.3082, 0.4333, 0.2698]],
        [[0.2283, 0.2335, 0.2626,  ..., 0.2256, 0.2271, 0.2356],
         [0.2263, 0.2335, 0.2265,  ..., 0.2256, 0.2639, 0.2772],
         [0.2190, 0.2335, 0.2265,  ..., 0.2256, 0.2271, 0.2356],
         [0.3265, 0.2994, 0.2843,  ..., 0.3231, 0.2819, 0.2517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1569, 0.1266, 0.2500,  ..., 0.2225, 0.2500, 0.2500],
         [0.3839, 0.2099, 0.2500,  ..., 0.2225, 0.2500, 0.2500],
         [0.1408, 0.1266, 0.2500,  ..., 0.3325, 0.2500, 0.2500],
         [0.3184, 0.5369, 0.2500,  ..., 0.2225, 0.2500, 0.2500]],
        [[0.2484, 0.1313, 0.6964,  ..., 0.1461, 0.1037, 0.2430],
         [0.1506, 0.4666, 0.0815,  ..., 0.6476, 0.1037, 0.4634],
         [0.4505, 0.2708, 0.0815,  ..., 0.1413, 0.1982, 0.1362],
         [0.1506, 0.1313, 0.1406,  ..., 0.0650, 0.5945, 0.1575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:30,851 [Process: 0] Synchronize training processes
2024-08-16 14:09:30,851 [Process: 0] Evaluating...
2024-08-16 14:09:30,853 [Process: 0] EPOCH 57:
2024-08-16 14:09:30,855 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2302, 0.2330, 0.1966,  ..., 0.1843, 0.1999, 0.2114],
         [0.2302, 0.2548, 0.1966,  ..., 0.2009, 0.2751, 0.2228],
         [0.2404, 0.2330, 0.1966,  ..., 0.1499, 0.1999, 0.1654],
         [0.2992, 0.2792, 0.4103,  ..., 0.4649, 0.3251, 0.4003]],
        [[0.2500, 0.2355, 0.2500,  ..., 0.2218, 0.2107, 0.2255],
         [0.2500, 0.2934, 0.2500,  ..., 0.2218, 0.2331, 0.2255],
         [0.2500, 0.2355, 0.2500,  ..., 0.2218, 0.2107, 0.2255],
         [0.2500, 0.2355, 0.2500,  ..., 0.3345, 0.3454, 0.3235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2826, 0.3161, 0.3450,  ..., 0.3460, 0.2500, 0.2886],
         [0.2820, 0.2280, 0.2599,  ..., 0.1589, 0.2500, 0.2371],
         [0.2177, 0.2280, 0.1939,  ..., 0.1589, 0.2500, 0.2371],
         [0.2177, 0.2280, 0.2013,  ..., 0.3362, 0.2500, 0.2371]],
        [[0.1319, 0.1348, 0.2222,  ..., 0.1640, 0.2407, 0.4474],
         [0.5589, 0.5955, 0.3333,  ..., 0.1720, 0.2407, 0.1995],
         [0.1773, 0.1348, 0.2222,  ..., 0.5000, 0.2761, 0.1008],
         [0.1319, 0.1348, 0.2222,  ..., 0.1640, 0.2425, 0.2523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 14:09:32,956 [Process: 0] Synchronize training processes
2024-08-16 14:09:32,956 [Process: 0] Evaluating...
2024-08-16 14:09:32,958 [Process: 0] EPOCH 58:
2024-08-16 14:09:32,960 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1734, 0.1973, 0.2364,  ..., 0.1988, 0.2187, 0.2500],
         [0.1689, 0.2422, 0.2712,  ..., 0.2055, 0.2187, 0.2500],
         [0.1650, 0.1973, 0.2364,  ..., 0.1988, 0.2187, 0.2500],
         [0.4928, 0.3632, 0.2560,  ..., 0.3970, 0.3439, 0.2500]],
        [[0.2093, 0.2336, 0.2306,  ..., 0.2251, 0.2464, 0.2027],
         [0.2519, 0.2336, 0.2306,  ..., 0.2251, 0.2464, 0.2027],
         [0.2093, 0.2336, 0.2306,  ..., 0.2251, 0.2464, 0.2027],
         [0.3295, 0.2991, 0.3083,  ..., 0.3246, 0.2608, 0.3918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2930, 0.2017, 0.1739,  ..., 0.2280, 0.1984, 0.3177],
         [0.1066, 0.2489, 0.6097,  ..., 0.1830, 0.1984, 0.1210],
         [0.4948, 0.2017, 0.1150,  ..., 0.1607, 0.3297, 0.1210],
         [0.1056, 0.3476, 0.1015,  ..., 0.4283, 0.2734, 0.4404]],
        [[0.1977, 0.0819, 0.3011,  ..., 0.0669, 0.2159, 0.2098],
         [0.3933, 0.1426, 0.2330,  ..., 0.0669, 0.1872, 0.2575],
         [0.1364, 0.4170, 0.2330,  ..., 0.4730, 0.4096, 0.4289],
         [0.2726, 0.3585, 0.2330,  ..., 0.3933, 0.1872, 0.1038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:35,027 [Process: 0] Synchronize training processes
2024-08-16 14:09:35,027 [Process: 0] Evaluating...
2024-08-16 14:09:35,029 [Process: 0] EPOCH 59:
2024-08-16 14:09:35,031 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1941, 0.1928, 0.1864,  ..., 0.2319, 0.2290, 0.2024],
         [0.1941, 0.2161, 0.1815,  ..., 0.3027, 0.2290, 0.2024],
         [0.1941, 0.1928, 0.1815,  ..., 0.2319, 0.2290, 0.2024],
         [0.4177, 0.3982, 0.4506,  ..., 0.2336, 0.3129, 0.3929]],
        [[0.2478, 0.2064, 0.2268,  ..., 0.2337, 0.2230, 0.2500],
         [0.2478, 0.2795, 0.2268,  ..., 0.2337, 0.2545, 0.2500],
         [0.2478, 0.2064, 0.2268,  ..., 0.2337, 0.2230, 0.2500],
         [0.2566, 0.3078, 0.3197,  ..., 0.2990, 0.2995, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2159, 0.1784, 0.1536,  ..., 0.2459, 0.1426, 0.0504],
         [0.2389, 0.2937, 0.2713,  ..., 0.2623, 0.5721, 0.1232],
         [0.3294, 0.3495, 0.3937,  ..., 0.2459, 0.1426, 0.7945],
         [0.2159, 0.1784, 0.1814,  ..., 0.2459, 0.1426, 0.0320]],
        [[0.1993, 0.2500, 0.2516,  ..., 0.2410, 0.1291, 0.2205],
         [0.1888, 0.2500, 0.2094,  ..., 0.2769, 0.1291, 0.2333],
         [0.1888, 0.2500, 0.2094,  ..., 0.2410, 0.3532, 0.3258],
         [0.4232, 0.2500, 0.3297,  ..., 0.2410, 0.3886, 0.2205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:37,079 [Process: 0] Synchronize training processes
2024-08-16 14:09:37,079 [Process: 0] Evaluating...
2024-08-16 14:09:37,081 [Process: 0] EPOCH 60:
2024-08-16 14:09:37,083 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2255, 0.1879, 0.2203,  ..., 0.2500, 0.1972, 0.2103],
         [0.2255, 0.2676, 0.2203,  ..., 0.2500, 0.1972, 0.2103],
         [0.2365, 0.1879, 0.2203,  ..., 0.2500, 0.1972, 0.2103],
         [0.3125, 0.3565, 0.3392,  ..., 0.2500, 0.4084, 0.3692]],
        [[0.2365, 0.2484, 0.2433,  ..., 0.2500, 0.2500, 0.2547],
         [0.2903, 0.2548, 0.2700,  ..., 0.2500, 0.2500, 0.2438],
         [0.2365, 0.2484, 0.2433,  ..., 0.2500, 0.2500, 0.2438],
         [0.2367, 0.2484, 0.2433,  ..., 0.2500, 0.2500, 0.2576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2399, 0.2512, 0.2399,  ..., 0.1780, 0.2419, 0.2351],
         [0.2804, 0.2136, 0.2530,  ..., 0.2239, 0.2124, 0.2947],
         [0.2399, 0.2105, 0.2399,  ..., 0.1780, 0.2261, 0.2351],
         [0.2399, 0.3247, 0.2671,  ..., 0.4201, 0.3195, 0.2351]],
        [[0.2381, 0.2292, 0.4470,  ..., 0.2500, 0.1828, 0.2682],
         [0.2823, 0.2794, 0.2353,  ..., 0.2500, 0.1828, 0.2439],
         [0.2310, 0.2292, 0.1588,  ..., 0.2500, 0.1828, 0.2439],
         [0.2486, 0.2622, 0.1588,  ..., 0.2500, 0.4516, 0.2439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:39,092 [Process: 0] Synchronize training processes
2024-08-16 14:09:39,092 [Process: 0] Evaluating...
2024-08-16 14:09:39,094 [Process: 0] EPOCH 61:
2024-08-16 14:09:39,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1938, 0.2030, 0.2176,  ..., 0.1894, 0.1791, 0.2177],
         [0.1938, 0.2030, 0.2176,  ..., 0.1894, 0.1669, 0.2209],
         [0.1938, 0.2030, 0.2176,  ..., 0.1894, 0.1669, 0.2177],
         [0.4187, 0.3910, 0.3471,  ..., 0.4318, 0.4871, 0.3438]],
        [[0.2500, 0.2456, 0.2469,  ..., 0.2341, 0.2759, 0.2166],
         [0.2500, 0.2572, 0.2536,  ..., 0.2353, 0.2413, 0.2166],
         [0.2500, 0.2456, 0.2469,  ..., 0.2341, 0.2413, 0.2166],
         [0.2500, 0.2517, 0.2527,  ..., 0.2965, 0.2416, 0.3501]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1558, 0.1811, 0.2188,  ..., 0.1179, 0.1462, 0.2171],
         [0.4548, 0.1173, 0.2188,  ..., 0.1695, 0.3731, 0.1835],
         [0.2025, 0.4463, 0.3436,  ..., 0.3232, 0.3340, 0.1711],
         [0.1868, 0.2553, 0.2188,  ..., 0.3894, 0.1467, 0.4283]],
        [[0.2500, 0.2444, 0.1435,  ..., 0.2279, 0.3746, 0.2861],
         [0.2500, 0.1646, 0.1435,  ..., 0.2279, 0.1895, 0.3482],
         [0.2500, 0.1574, 0.1975,  ..., 0.2279, 0.1895, 0.1829],
         [0.2500, 0.4336, 0.5155,  ..., 0.3162, 0.2465, 0.1829]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:41,064 [Process: 0] Synchronize training processes
2024-08-16 14:09:41,065 [Process: 0] Evaluating...
2024-08-16 14:09:41,073 [Process: 0] EPOCH 62:
2024-08-16 14:09:41,075 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2112, 0.2273, 0.2140,  ..., 0.1740, 0.2098, 0.2167],
         [0.2723, 0.2321, 0.2359,  ..., 0.1759, 0.3064, 0.1979],
         [0.2112, 0.2273, 0.2140,  ..., 0.1740, 0.2098, 0.1979],
         [0.3054, 0.3133, 0.3362,  ..., 0.4760, 0.2739, 0.3874]],
        [[0.2481, 0.2358, 0.2652,  ..., 0.2130, 0.2404, 0.2294],
         [0.2481, 0.2358, 0.2449,  ..., 0.2130, 0.2787, 0.2303],
         [0.2481, 0.2358, 0.2449,  ..., 0.2130, 0.2404, 0.2294],
         [0.2556, 0.2925, 0.2449,  ..., 0.3610, 0.2404, 0.3110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1328, 0.3217, 0.1797,  ..., 0.2879, 0.1186, 0.2346],
         [0.1138, 0.4194, 0.1952,  ..., 0.2934, 0.2310, 0.3316],
         [0.6396, 0.1294, 0.2057,  ..., 0.2072, 0.2145, 0.2279],
         [0.1138, 0.1294, 0.4194,  ..., 0.2114, 0.4359, 0.2059]],
        [[0.2564, 0.2314, 0.2322,  ..., 0.2452, 0.3408, 0.1769],
         [0.2560, 0.3058, 0.3034,  ..., 0.2452, 0.2197, 0.2443],
         [0.2438, 0.2314, 0.2322,  ..., 0.2643, 0.2197, 0.3208],
         [0.2438, 0.2314, 0.2322,  ..., 0.2452, 0.2197, 0.2580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:43,165 [Process: 0] Synchronize training processes
2024-08-16 14:09:43,165 [Process: 0] Evaluating...
2024-08-16 14:09:43,167 [Process: 0] EPOCH 63:
2024-08-16 14:09:43,169 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2439, 0.2093, 0.1859,  ..., 0.2151, 0.1934, 0.2381],
         [0.2439, 0.2964, 0.2165,  ..., 0.2922, 0.2097, 0.2381],
         [0.2439, 0.2093, 0.1859,  ..., 0.2151, 0.1934, 0.2381],
         [0.2682, 0.2851, 0.4117,  ..., 0.2776, 0.4036, 0.2857]],
        [[0.2201, 0.2228, 0.2197,  ..., 0.2310, 0.1997, 0.2500],
         [0.2201, 0.2228, 0.2197,  ..., 0.2310, 0.2130, 0.2500],
         [0.2201, 0.2228, 0.2197,  ..., 0.2310, 0.1997, 0.2500],
         [0.3398, 0.3316, 0.3409,  ..., 0.3069, 0.3876, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:09:45,238 [Process: 0] Synchronize training processes
2024-08-16 14:09:45,239 [Process: 0] Evaluating...
2024-08-16 14:09:45,241 [Process: 0] EPOCH 64:
2024-08-16 14:09:45,243 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2068, 0.2425, 0.1125,  ..., 0.1863, 0.1196, 0.3215],
         [0.2068, 0.2425, 0.1125,  ..., 0.1863, 0.4584, 0.1886],
         [0.3797, 0.2425, 0.1375,  ..., 0.4411, 0.2293, 0.3191],
         [0.2068, 0.2725, 0.6374,  ..., 0.1863, 0.1927, 0.1708]],
        [[0.2653, 0.2500, 0.3129,  ..., 0.1496, 0.5766, 0.3620],
         [0.4063, 0.2500, 0.5039,  ..., 0.6003, 0.1924, 0.2630],
         [0.1955, 0.2500, 0.0916,  ..., 0.1448, 0.1155, 0.0944],
         [0.1329, 0.2500, 0.0916,  ..., 0.1053, 0.1155, 0.2806]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1884, 0.1891, 0.2026,  ..., 0.1733, 0.1891, 0.2240],
         [0.2055, 0.1891, 0.2397,  ..., 0.1733, 0.1891, 0.3052],
         [0.1884, 0.1891, 0.2026,  ..., 0.1733, 0.1891, 0.2240],
         [0.4177, 0.4328, 0.3550,  ..., 0.4800, 0.4327, 0.2469]],
        [[0.2335, 0.2495, 0.2314,  ..., 0.2471, 0.2165, 0.2227],
         [0.2444, 0.2495, 0.2314,  ..., 0.2471, 0.2165, 0.2241],
         [0.2335, 0.2495, 0.2314,  ..., 0.2471, 0.2165, 0.2227],
         [0.2885, 0.2515, 0.3057,  ..., 0.2586, 0.3506, 0.3305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:47,336 [Process: 0] Synchronize training processes
2024-08-16 14:09:47,336 [Process: 0] Evaluating...
2024-08-16 14:09:47,338 [Process: 0] EPOCH 65:
2024-08-16 14:09:47,340 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1989, 0.1497, 0.2006,  ..., 0.2340, 0.1933, 0.1702],
         [0.3530, 0.2743, 0.3981,  ..., 0.2979, 0.2994, 0.4163],
         [0.1989, 0.1497, 0.2006,  ..., 0.2340, 0.1933, 0.1702],
         [0.2491, 0.4262, 0.2006,  ..., 0.2340, 0.3140, 0.2433]],
        [[0.3755, 0.1702, 0.1993,  ..., 0.1344, 0.1821, 0.2381],
         [0.1341, 0.1594, 0.1993,  ..., 0.1344, 0.1654, 0.2305],
         [0.3986, 0.5510, 0.4020,  ..., 0.3928, 0.4607, 0.3008],
         [0.0918, 0.1194, 0.1993,  ..., 0.3384, 0.1917, 0.2305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2375, 0.1768, 0.2075,  ..., 0.2177, 0.2324, 0.2328],
         [0.2375, 0.1768, 0.2156,  ..., 0.2177, 0.2324, 0.2622],
         [0.2375, 0.1768, 0.2075,  ..., 0.2177, 0.2324, 0.2328],
         [0.2875, 0.4697, 0.3694,  ..., 0.3469, 0.3027, 0.2723]],
        [[0.2317, 0.2500, 0.2500,  ..., 0.2568, 0.2364, 0.2291],
         [0.2317, 0.2500, 0.2500,  ..., 0.2485, 0.2364, 0.2187],
         [0.2317, 0.2500, 0.2500,  ..., 0.2286, 0.2364, 0.2187],
         [0.3049, 0.2500, 0.2500,  ..., 0.2661, 0.2909, 0.3336]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:49,422 [Process: 0] Synchronize training processes
2024-08-16 14:09:49,422 [Process: 0] Evaluating...
2024-08-16 14:09:49,424 [Process: 0] EPOCH 66:
2024-08-16 14:09:49,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1900, 0.1687, 0.2845,  ..., 0.2171, 0.2726, 0.5602],
         [0.4299, 0.4359, 0.2385,  ..., 0.2018, 0.1742, 0.0663],
         [0.1900, 0.1687, 0.2385,  ..., 0.1595, 0.1605, 0.3072],
         [0.1900, 0.2267, 0.2385,  ..., 0.4217, 0.3927, 0.0663]],
        [[0.2423, 0.2500, 0.2523,  ..., 0.2106, 0.2098, 0.2500],
         [0.2423, 0.2500, 0.2361,  ..., 0.2106, 0.2015, 0.2500],
         [0.2732, 0.2500, 0.2371,  ..., 0.3178, 0.2015, 0.2500],
         [0.2423, 0.2500, 0.2745,  ..., 0.2611, 0.3871, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2145, 0.2362, 0.2123,  ..., 0.2027, 0.1892, 0.2018],
         [0.2513, 0.2720, 0.2123,  ..., 0.2027, 0.1892, 0.2018],
         [0.2145, 0.2362, 0.2123,  ..., 0.2027, 0.1892, 0.2043],
         [0.3198, 0.2557, 0.3630,  ..., 0.3919, 0.4324, 0.3920]],
        [[0.1983, 0.2294, 0.2265,  ..., 0.2131, 0.2119, 0.2320],
         [0.2067, 0.2694, 0.2385,  ..., 0.2131, 0.2119, 0.2320],
         [0.1983, 0.2294, 0.2265,  ..., 0.2131, 0.2119, 0.2320],
         [0.3967, 0.2717, 0.3085,  ..., 0.3606, 0.3643, 0.3039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:51,521 [Process: 0] Synchronize training processes
2024-08-16 14:09:51,522 [Process: 0] Evaluating...
2024-08-16 14:09:51,524 [Process: 0] EPOCH 67:
2024-08-16 14:09:51,526 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2111, 0.2500, 0.2500,  ..., 0.3248, 0.5887, 0.2500],
         [0.2111, 0.2500, 0.2500,  ..., 0.1242, 0.1224, 0.2500],
         [0.2111, 0.2500, 0.2500,  ..., 0.1242, 0.0374, 0.2500],
         [0.3668, 0.2500, 0.2500,  ..., 0.4269, 0.2515, 0.2500]],
        [[0.2170, 0.2368, 0.2324,  ..., 0.2303, 0.1931, 0.2128],
         [0.2418, 0.2501, 0.3027,  ..., 0.2576, 0.4206, 0.3617],
         [0.3243, 0.2458, 0.2324,  ..., 0.2303, 0.1931, 0.2128],
         [0.2170, 0.2673, 0.2324,  ..., 0.2819, 0.1931, 0.2128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2091, 0.2132, 0.2363,  ..., 0.1767, 0.2255, 0.2299],
         [0.2091, 0.2132, 0.2363,  ..., 0.1767, 0.2424, 0.2299],
         [0.2091, 0.2132, 0.2363,  ..., 0.1767, 0.2255, 0.2299],
         [0.3726, 0.3604, 0.2911,  ..., 0.4698, 0.3065, 0.3104]],
        [[0.2101, 0.2470, 0.2168,  ..., 0.2184, 0.2198, 0.2155],
         [0.2811, 0.2473, 0.2191,  ..., 0.2746, 0.2198, 0.2541],
         [0.2101, 0.2377, 0.2168,  ..., 0.2184, 0.2198, 0.2155],
         [0.2987, 0.2680, 0.3472,  ..., 0.2886, 0.3407, 0.3148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:53,569 [Process: 0] Synchronize training processes
2024-08-16 14:09:53,569 [Process: 0] Evaluating...
2024-08-16 14:09:53,571 [Process: 0] EPOCH 68:
2024-08-16 14:09:53,573 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2206, 0.1875, 0.2258,  ..., 0.1763, 0.1566, 0.1812],
         [0.2898, 0.2182, 0.2258,  ..., 0.1937, 0.4033, 0.2759],
         [0.2206, 0.1760, 0.2258,  ..., 0.1371, 0.1566, 0.1812],
         [0.2689, 0.4182, 0.3226,  ..., 0.4929, 0.2834, 0.3618]],
        [[0.2727, 0.2220, 0.2497,  ..., 0.2496, 0.2746, 0.2662],
         [0.2068, 0.2814, 0.2497,  ..., 0.2513, 0.2418, 0.2799],
         [0.2068, 0.2746, 0.2508,  ..., 0.2496, 0.2418, 0.2269],
         [0.3138, 0.2220, 0.2497,  ..., 0.2496, 0.2418, 0.2269]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2135, 0.2137, 0.1686,  ..., 0.2038, 0.2227, 0.2454],
         [0.2135, 0.2169, 0.1860,  ..., 0.2734, 0.2232, 0.2454],
         [0.2135, 0.2137, 0.1686,  ..., 0.2038, 0.2227, 0.2454],
         [0.3594, 0.3557, 0.4768,  ..., 0.3190, 0.3314, 0.2639]],
        [[0.2500, 0.2476, 0.2500,  ..., 0.2499, 0.2500, 0.2379],
         [0.2500, 0.2572, 0.2500,  ..., 0.2504, 0.2500, 0.2379],
         [0.2500, 0.2476, 0.2500,  ..., 0.2499, 0.2500, 0.2379],
         [0.2500, 0.2476, 0.2500,  ..., 0.2499, 0.2500, 0.2862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:55,498 [Process: 0] Synchronize training processes
2024-08-16 14:09:55,499 [Process: 0] Evaluating...
2024-08-16 14:09:55,500 [Process: 0] EPOCH 69:
2024-08-16 14:09:55,502 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1919, 0.1964, 0.1777,  ..., 0.1949, 0.2500, 0.2457],
         [0.3909, 0.2122, 0.4670,  ..., 0.1949, 0.2500, 0.2457],
         [0.1668, 0.3950, 0.1777,  ..., 0.1949, 0.2500, 0.2457],
         [0.2505, 0.1964, 0.1777,  ..., 0.4154, 0.2500, 0.2628]],
        [[0.1557, 0.1298, 0.2853,  ..., 0.4017, 0.6467, 0.2315],
         [0.1557, 0.1298, 0.2336,  ..., 0.1424, 0.0824, 0.2315],
         [0.5197, 0.6106, 0.1032,  ..., 0.2777, 0.1407, 0.3055],
         [0.1690, 0.1298, 0.3779,  ..., 0.1782, 0.1302, 0.2315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2086, 0.2299, 0.2299,  ..., 0.1941, 0.1863, 0.2193],
         [0.2003, 0.2648, 0.2299,  ..., 0.1956, 0.1945, 0.2193],
         [0.1662, 0.2299, 0.2299,  ..., 0.1973, 0.1863, 0.2193],
         [0.4249, 0.2754, 0.3103,  ..., 0.4130, 0.4330, 0.3422]],
        [[0.2445, 0.2359, 0.2028,  ..., 0.2451, 0.2500, 0.2429],
         [0.2445, 0.2643, 0.2695,  ..., 0.2455, 0.2500, 0.2429],
         [0.2445, 0.2359, 0.2028,  ..., 0.2451, 0.2500, 0.2429],
         [0.2664, 0.2638, 0.3250,  ..., 0.2643, 0.2500, 0.2714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:57,433 [Process: 0] Synchronize training processes
2024-08-16 14:09:57,433 [Process: 0] Evaluating...
2024-08-16 14:09:57,435 [Process: 0] EPOCH 70:
2024-08-16 14:09:57,437 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3824, 0.2239, 0.1733,  ..., 0.1906, 0.1664, 0.2203],
         [0.1790, 0.3282, 0.4434,  ..., 0.4219, 0.5007, 0.2630],
         [0.1748, 0.2239, 0.1733,  ..., 0.1968, 0.1664, 0.2203],
         [0.2637, 0.2239, 0.2100,  ..., 0.1906, 0.1664, 0.2964]],
        [[0.1752, 0.2779, 0.1964,  ..., 0.2120, 0.4493, 0.0882],
         [0.1752, 0.1821, 0.1964,  ..., 0.2120, 0.1836, 0.0882],
         [0.4743, 0.3579, 0.1964,  ..., 0.2120, 0.1836, 0.1414],
         [0.1752, 0.1821, 0.4107,  ..., 0.3639, 0.1836, 0.6822]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1942, 0.2347, 0.1819,  ..., 0.1994, 0.1830, 0.2500],
         [0.2215, 0.2347, 0.2408,  ..., 0.1994, 0.2366, 0.2500],
         [0.1765, 0.2347, 0.1819,  ..., 0.1994, 0.1830, 0.2500],
         [0.4078, 0.2959, 0.3953,  ..., 0.4018, 0.3974, 0.2500]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2342, 0.2488, 0.2321],
         [0.2500, 0.2500, 0.2500,  ..., 0.2342, 0.2536, 0.2681],
         [0.2500, 0.2500, 0.2500,  ..., 0.2342, 0.2488, 0.2321],
         [0.2500, 0.2500, 0.2500,  ..., 0.2974, 0.2488, 0.2676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:09:59,359 [Process: 0] Synchronize training processes
2024-08-16 14:09:59,360 [Process: 0] Evaluating...
2024-08-16 14:09:59,362 [Process: 0] EPOCH 71:
2024-08-16 14:09:59,364 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2965, 0.1179, 0.0944,  ..., 0.2395, 0.2492, 0.1992],
         [0.2345, 0.3279, 0.2791,  ..., 0.2816, 0.2492, 0.3178],
         [0.2345, 0.4363, 0.5498,  ..., 0.2395, 0.2524, 0.2839],
         [0.2345, 0.1179, 0.0767,  ..., 0.2395, 0.2492, 0.1992]],
        [[0.1312, 0.4809, 0.2329,  ..., 0.5733, 0.5846, 0.1894],
         [0.1312, 0.0828, 0.2329,  ..., 0.1975, 0.1327, 0.1894],
         [0.1312, 0.0828, 0.3013,  ..., 0.0827, 0.1327, 0.1894],
         [0.6063, 0.3535, 0.2329,  ..., 0.1464, 0.1500, 0.4318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2281, 0.1980, 0.2304,  ..., 0.2073, 0.2390, 0.2338],
         [0.2281, 0.1980, 0.2369,  ..., 0.1764, 0.2390, 0.2209],
         [0.2281, 0.1980, 0.2304,  ..., 0.1762, 0.2390, 0.2209],
         [0.3157, 0.4059, 0.3023,  ..., 0.4401, 0.2831, 0.3244]],
        [[0.2404, 0.2493, 0.2500,  ..., 0.2255, 0.2750, 0.2193],
         [0.2859, 0.2493, 0.2500,  ..., 0.2640, 0.2417, 0.2221],
         [0.2360, 0.2493, 0.2500,  ..., 0.2255, 0.2417, 0.2193],
         [0.2377, 0.2522, 0.2500,  ..., 0.2850, 0.2417, 0.3392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:10:01,284 [Process: 0] Synchronize training processes
2024-08-16 14:10:01,285 [Process: 0] Evaluating...
2024-08-16 14:10:01,293 [Process: 0] EPOCH 72:
2024-08-16 14:10:01,295 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2500, 0.3063, 0.2500,  ..., 0.2500, 0.2239, 0.2438],
         [0.2500, 0.2312, 0.2500,  ..., 0.2500, 0.2239, 0.2438],
         [0.2500, 0.2312, 0.2500,  ..., 0.2500, 0.3283, 0.2438],
         [0.2500, 0.2312, 0.2500,  ..., 0.2500, 0.2239, 0.2686]],
        [[0.1838, 0.1604, 0.4197,  ..., 0.0048, 0.1051, 0.0178],
         [0.4141, 0.5421, 0.2213,  ..., 0.0048, 0.1051, 0.0178],
         [0.1703, 0.1470, 0.1795,  ..., 0.1021, 0.1051, 0.0178],
         [0.2319, 0.1504, 0.1795,  ..., 0.8883, 0.6846, 0.9466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2282, 0.1907, 0.2389,  ..., 0.1882, 0.2382, 0.2500],
         [0.2588, 0.1907, 0.2389,  ..., 0.1862, 0.2382, 0.2500],
         [0.2282, 0.1907, 0.2389,  ..., 0.1709, 0.2382, 0.2500],
         [0.2848, 0.4280, 0.2833,  ..., 0.4547, 0.2854, 0.2500]],
        [[0.2217, 0.2500, 0.2409,  ..., 0.2311, 0.2418, 0.2268],
         [0.2217, 0.2500, 0.2409,  ..., 0.2311, 0.2418, 0.2268],
         [0.2217, 0.2500, 0.2409,  ..., 0.2311, 0.2418, 0.2268],
         [0.3348, 0.2500, 0.2773,  ..., 0.3068, 0.2746, 0.3196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 14:10:03,253 [Process: 0] Synchronize training processes
2024-08-16 14:10:03,254 [Process: 0] Evaluating...
2024-08-16 14:10:03,255 [Process: 0] EPOCH 73:
2024-08-16 14:10:03,257 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.1753, 0.2097, 0.3624,  ..., 0.3189, 0.2306, 0.2381],
         [0.2979, 0.2507, 0.1782,  ..., 0.1844, 0.2306, 0.2082],
         [0.1753, 0.2179, 0.1782,  ..., 0.1795, 0.2558, 0.2082],
         [0.3515, 0.3216, 0.2812,  ..., 0.3172, 0.2830, 0.3455]],
        [[0.2852, 0.2295, 0.2500,  ..., 0.2403, 0.3930, 0.3112],
         [0.2383, 0.2519, 0.2500,  ..., 0.2585, 0.2008, 0.2500],
         [0.2383, 0.2892, 0.2500,  ..., 0.2634, 0.2055, 0.2383],
         [0.2383, 0.2295, 0.2500,  ..., 0.2378, 0.2008, 0.2005]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2123, 0.2090, 0.2500,  ..., 0.2248, 0.2396, 0.2209],
         [0.2123, 0.2090, 0.2500,  ..., 0.2248, 0.2396, 0.2400],
         [0.2123, 0.2090, 0.2500,  ..., 0.2248, 0.2396, 0.2209],
         [0.3631, 0.3729, 0.2500,  ..., 0.3255, 0.2813, 0.3182]],
        [[0.2709, 0.2489, 0.2632,  ..., 0.2500, 0.2150, 0.2509],
         [0.2430, 0.2534, 0.2456,  ..., 0.2500, 0.2150, 0.2475],
         [0.2430, 0.2489, 0.2456,  ..., 0.2500, 0.2150, 0.2475],
         [0.2430, 0.2489, 0.2456,  ..., 0.2500, 0.3550, 0.2542]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:05,266 [Process: 0] Synchronize training processes
2024-08-16 14:10:05,266 [Process: 0] Evaluating...
2024-08-16 14:10:05,268 [Process: 0] EPOCH 74:
2024-08-16 14:10:05,270 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2828, 0.4307, 0.4384,  ..., 0.3544, 0.2500, 0.4261],
         [0.2010, 0.1940, 0.1872,  ..., 0.3122, 0.2500, 0.1570],
         [0.1947, 0.1426, 0.1872,  ..., 0.1781, 0.2500, 0.1199],
         [0.3215, 0.2327, 0.1872,  ..., 0.1554, 0.2500, 0.2970]],
        [[0.2345, 0.2271, 0.2500,  ..., 0.2473, 0.2500, 0.2455],
         [0.2966, 0.2271, 0.2500,  ..., 0.2473, 0.2500, 0.2635],
         [0.2345, 0.3187, 0.2500,  ..., 0.2581, 0.2500, 0.2455],
         [0.2345, 0.2271, 0.2500,  ..., 0.2473, 0.2500, 0.2455]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1844, 0.2380, 0.1958,  ..., 0.2098, 0.2500, 0.2338],
         [0.1844, 0.2453, 0.1958,  ..., 0.2098, 0.2500, 0.2338],
         [0.1844, 0.2380, 0.1958,  ..., 0.2098, 0.2500, 0.2338],
         [0.4468, 0.2787, 0.4125,  ..., 0.3707, 0.2500, 0.2986]],
        [[0.2433, 0.2142, 0.2090,  ..., 0.2291, 0.2444, 0.2388],
         [0.2701, 0.2142, 0.2090,  ..., 0.2393, 0.2444, 0.2616],
         [0.2433, 0.2142, 0.2090,  ..., 0.2291, 0.2444, 0.2388],
         [0.2433, 0.3574, 0.3730,  ..., 0.3025, 0.2668, 0.2609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:10:07,285 [Process: 0] Synchronize training processes
2024-08-16 14:10:07,286 [Process: 0] Evaluating...
2024-08-16 14:10:07,287 [Process: 0] EPOCH 75:
2024-08-16 14:10:07,289 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1046e-01, 2.7410e-01, 1.9046e-01,  ..., 2.5000e-01,
          2.1019e-01, 5.8937e-01],
         [3.6862e-01, 2.4197e-01, 4.2862e-01,  ..., 2.5000e-01,
          3.3513e-01, 2.8698e-04],
         [2.1046e-01, 2.4197e-01, 1.9046e-01,  ..., 2.5000e-01,
          2.1019e-01, 4.1027e-01],
         [2.1046e-01, 2.4197e-01, 1.9046e-01,  ..., 2.5000e-01,
          2.4449e-01, 7.2504e-05]],
        [[3.4467e-01, 1.3372e-01, 4.0967e-01,  ..., 2.4085e-01,
          3.3556e-01, 3.9680e-01],
         [3.2933e-01, 1.6983e-01, 1.4836e-01,  ..., 1.1459e-01,
          2.6893e-01, 2.1802e-01],
         [1.6300e-01, 1.3372e-01, 1.7195e-01,  ..., 1.7931e-01,
          1.9499e-01, 1.4533e-01],
         [1.6300e-01, 5.6274e-01, 2.7002e-01,  ..., 4.6524e-01,
          2.0051e-01, 2.3986e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1439, 0.1953, 0.2043,  ..., 0.2381, 0.1852, 0.2054],
         [0.1553, 0.1953, 0.2043,  ..., 0.2381, 0.1852, 0.2054],
         [0.1347, 0.1953, 0.2043,  ..., 0.2381, 0.1852, 0.2054],
         [0.5661, 0.4141, 0.3872,  ..., 0.2856, 0.4443, 0.3838]],
        [[0.2154, 0.2270, 0.2055,  ..., 0.2238, 0.2500, 0.2134],
         [0.2154, 0.2888, 0.3165,  ..., 0.2238, 0.2500, 0.2134],
         [0.2154, 0.2256, 0.2055,  ..., 0.2238, 0.2500, 0.2134],
         [0.3537, 0.2586, 0.2724,  ..., 0.3287, 0.2500, 0.3599]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 14:10:09,320 [Process: 0] Synchronize training processes
2024-08-16 14:10:09,320 [Process: 0] Evaluating...
2024-08-16 14:10:09,322 [Process: 0] EPOCH 76:
2024-08-16 14:10:09,325 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1830, 0.2765, 0.1893,  ..., 0.1931, 0.2157, 0.2122],
         [0.2315, 0.2666, 0.1893,  ..., 0.1438, 0.2067, 0.2670],
         [0.1542, 0.2285, 0.1893,  ..., 0.1438, 0.2067, 0.2025],
         [0.4313, 0.2285, 0.4320,  ..., 0.5193, 0.3708, 0.3183]],
        [[0.1776, 0.1122, 0.1169,  ..., 0.2254, 0.2500, 0.2295],
         [0.1934, 0.3882, 0.2437,  ..., 0.2254, 0.2500, 0.2295],
         [0.4514, 0.3413, 0.3930,  ..., 0.2254, 0.2500, 0.3116],
         [0.1776, 0.1583, 0.2464,  ..., 0.3238, 0.2500, 0.2295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2161, 0.1752, 0.1683,  ..., 0.2106, 0.2116, 0.2144],
         [0.2205, 0.1752, 0.1715,  ..., 0.2106, 0.2116, 0.2262],
         [0.2161, 0.1752, 0.1683,  ..., 0.2106, 0.2116, 0.2051],
         [0.3473, 0.4743, 0.4920,  ..., 0.3682, 0.3653, 0.3542]],
        [[0.2500, 0.2351, 0.2500,  ..., 0.2396, 0.2515, 0.2500],
         [0.2500, 0.2351, 0.2500,  ..., 0.2575, 0.2495, 0.2500],
         [0.2500, 0.2351, 0.2500,  ..., 0.2396, 0.2495, 0.2500],
         [0.2500, 0.2947, 0.2500,  ..., 0.2633, 0.2495, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:11,401 [Process: 0] Synchronize training processes
2024-08-16 14:10:11,401 [Process: 0] Evaluating...
2024-08-16 14:10:11,403 [Process: 0] EPOCH 77:
2024-08-16 14:10:11,405 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1667, 0.6679, 0.2283,  ..., 0.2301, 0.2019, 0.1386],
         [0.0424, 0.1019, 0.2283,  ..., 0.2301, 0.2019, 0.1386],
         [0.2031, 0.1282, 0.2283,  ..., 0.3097, 0.3228, 0.5843],
         [0.5878, 0.1019, 0.3151,  ..., 0.2301, 0.2733, 0.1386]],
        [[0.2401, 0.2288, 0.2316,  ..., 0.2219, 0.4845, 0.0629],
         [0.2797, 0.3137, 0.4674,  ..., 0.4617, 0.1899, 0.7171],
         [0.2401, 0.2288, 0.1505,  ..., 0.1803, 0.1628, 0.1571],
         [0.2401, 0.2288, 0.1505,  ..., 0.1361, 0.1628, 0.0629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2120, 0.2194, 0.2033,  ..., 0.2234, 0.2011, 0.1851],
         [0.2120, 0.2194, 0.2251,  ..., 0.2234, 0.2011, 0.1926],
         [0.2120, 0.2194, 0.2033,  ..., 0.2234, 0.2011, 0.1851],
         [0.3641, 0.3417, 0.3684,  ..., 0.3297, 0.3968, 0.4372]],
        [[0.2399, 0.2515, 0.2383,  ..., 0.2500, 0.2359, 0.2274],
         [0.2399, 0.2460, 0.2383,  ..., 0.2500, 0.2359, 0.2274],
         [0.2399, 0.2460, 0.2383,  ..., 0.2500, 0.2359, 0.2274],
         [0.2804, 0.2565, 0.2850,  ..., 0.2500, 0.2923, 0.3178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:13,495 [Process: 0] Synchronize training processes
2024-08-16 14:10:13,495 [Process: 0] Evaluating...
2024-08-16 14:10:13,497 [Process: 0] EPOCH 78:
2024-08-16 14:10:13,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1245, 0.1515, 0.0802,  ..., 0.2493, 0.1403, 0.1132],
         [0.2746, 0.3604, 0.1874,  ..., 0.2656, 0.2483, 0.1794],
         [0.4764, 0.1365, 0.1586,  ..., 0.1858, 0.2188, 0.3140],
         [0.1245, 0.3516, 0.5738,  ..., 0.2993, 0.3926, 0.3934]],
        [[0.3445, 0.2500, 0.2500,  ..., 0.2500, 0.2455, 0.1510],
         [0.1678, 0.2500, 0.2500,  ..., 0.2500, 0.2455, 0.1808],
         [0.1678, 0.2500, 0.2500,  ..., 0.2500, 0.2455, 0.1510],
         [0.3198, 0.2500, 0.2500,  ..., 0.2500, 0.2635, 0.5172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1926, 0.2170, 0.2461,  ..., 0.1615, 0.1747, 0.1920],
         [0.2115, 0.2170, 0.2617,  ..., 0.1701, 0.1747, 0.2091],
         [0.1926, 0.2170, 0.2461,  ..., 0.1615, 0.1747, 0.1920],
         [0.4033, 0.3490, 0.2461,  ..., 0.5069, 0.4759, 0.4070]],
        [[0.2438, 0.2374, 0.2281,  ..., 0.2376, 0.2249, 0.2346],
         [0.2438, 0.2374, 0.2281,  ..., 0.2490, 0.2249, 0.2346],
         [0.2438, 0.2374, 0.2281,  ..., 0.2376, 0.2249, 0.2346],
         [0.2687, 0.2879, 0.3157,  ..., 0.2757, 0.3252, 0.2962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:15,578 [Process: 0] Synchronize training processes
2024-08-16 14:10:15,578 [Process: 0] Evaluating...
2024-08-16 14:10:15,580 [Process: 0] EPOCH 79:
2024-08-16 14:10:15,582 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1819, 0.2743, 0.2237,  ..., 0.3303, 0.1809, 0.7322],
         [0.2601, 0.5858, 0.2237,  ..., 0.1300, 0.3854, 0.0911],
         [0.4271, 0.0806, 0.2237,  ..., 0.1300, 0.1809, 0.0888],
         [0.1309, 0.0593, 0.3290,  ..., 0.4097, 0.2528, 0.0880]],
        [[0.1620, 0.1786, 0.2238,  ..., 0.1756, 0.3006, 0.1941],
         [0.2092, 0.1507, 0.2238,  ..., 0.2003, 0.2036, 0.1941],
         [0.4668, 0.3124, 0.2238,  ..., 0.1756, 0.2252, 0.1941],
         [0.1620, 0.3583, 0.3285,  ..., 0.4484, 0.2706, 0.4176]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2313, 0.2348, 0.2088,  ..., 0.2325, 0.1638, 0.1840],
         [0.2417, 0.2348, 0.2088,  ..., 0.2325, 0.1638, 0.1870],
         [0.2313, 0.2348, 0.2088,  ..., 0.2325, 0.1638, 0.1840],
         [0.2958, 0.2956, 0.3736,  ..., 0.3025, 0.5085, 0.4449]],
        [[0.2367, 0.2500, 0.2267,  ..., 0.2500, 0.2500, 0.2500],
         [0.2367, 0.2500, 0.2267,  ..., 0.2500, 0.2500, 0.2500],
         [0.2367, 0.2500, 0.2267,  ..., 0.2500, 0.2500, 0.2500],
         [0.2900, 0.2500, 0.3198,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:17,661 [Process: 0] Synchronize training processes
2024-08-16 14:10:17,662 [Process: 0] Evaluating...
2024-08-16 14:10:17,664 [Process: 0] EPOCH 80:
2024-08-16 14:10:17,666 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1782, 0.1931, 0.2500,  ..., 0.2220, 0.2500, 0.2500],
         [0.1782, 0.2874, 0.2500,  ..., 0.2220, 0.2500, 0.2500],
         [0.1782, 0.1870, 0.2500,  ..., 0.2220, 0.2500, 0.2500],
         [0.4653, 0.3325, 0.2500,  ..., 0.3340, 0.2500, 0.2500]],
        [[0.2500, 0.2975, 0.2443,  ..., 0.3585, 0.3353, 0.3065],
         [0.2500, 0.3936, 0.2951,  ..., 0.2138, 0.2952, 0.2372],
         [0.2500, 0.1544, 0.2508,  ..., 0.2138, 0.1411, 0.1458],
         [0.2500, 0.1544, 0.2098,  ..., 0.2138, 0.2284, 0.3105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1798, 0.2167, 0.2301,  ..., 0.2213, 0.2500, 0.2421],
         [0.1798, 0.2167, 0.2301,  ..., 0.2213, 0.2500, 0.2487],
         [0.1798, 0.2167, 0.2301,  ..., 0.2248, 0.2500, 0.2421],
         [0.4605, 0.3499, 0.3096,  ..., 0.3326, 0.2500, 0.2670]],
        [[0.2500, 0.2500, 0.2331,  ..., 0.2425, 0.2500, 0.2329],
         [0.2500, 0.2500, 0.2744,  ..., 0.2425, 0.2500, 0.2755],
         [0.2500, 0.2500, 0.2331,  ..., 0.2425, 0.2500, 0.2329],
         [0.2500, 0.2500, 0.2593,  ..., 0.2725, 0.2500, 0.2587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:19,728 [Process: 0] Synchronize training processes
2024-08-16 14:10:19,728 [Process: 0] Evaluating...
2024-08-16 14:10:19,730 [Process: 0] EPOCH 81:
2024-08-16 14:10:19,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1354, 0.1283, 0.1158,  ..., 0.1770, 0.1644, 0.1805],
         [0.1354, 0.1283, 0.1158,  ..., 0.1770, 0.1644, 0.1805],
         [0.5937, 0.6151, 0.2341,  ..., 0.3163, 0.5054, 0.4584],
         [0.1354, 0.1283, 0.5343,  ..., 0.3297, 0.1658, 0.1805]],
        [[0.2048, 0.2375, 0.2961,  ..., 0.2044, 0.1312, 0.2500],
         [0.2048, 0.2375, 0.4080,  ..., 0.3703, 0.1367, 0.2500],
         [0.2048, 0.2375, 0.1135,  ..., 0.2044, 0.1312, 0.2500],
         [0.3856, 0.2876, 0.1823,  ..., 0.2209, 0.6010, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2084, 0.2021, 0.2068,  ..., 0.2289, 0.2303, 0.1902],
         [0.2084, 0.2211, 0.2068,  ..., 0.2289, 0.2303, 0.1929],
         [0.2084, 0.2021, 0.2068,  ..., 0.2289, 0.2303, 0.1902],
         [0.3747, 0.3747, 0.3797,  ..., 0.3133, 0.3091, 0.4267]],
        [[0.2458, 0.2231, 0.2278,  ..., 0.2300, 0.2262, 0.2628],
         [0.2625, 0.3180, 0.3165,  ..., 0.2300, 0.2262, 0.2569],
         [0.2458, 0.2231, 0.2278,  ..., 0.2300, 0.2262, 0.2380],
         [0.2458, 0.2359, 0.2278,  ..., 0.3100, 0.3213, 0.2423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:21,786 [Process: 0] Synchronize training processes
2024-08-16 14:10:21,787 [Process: 0] Evaluating...
2024-08-16 14:10:21,795 [Process: 0] EPOCH 82:
2024-08-16 14:10:21,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0791, 0.2478, 0.3694,  ..., 0.2068, 0.1804, 0.3565],
         [0.8382, 0.2566, 0.5172,  ..., 0.1166, 0.0741, 0.3562],
         [0.0417, 0.2478, 0.0458,  ..., 0.0817, 0.6714, 0.1431],
         [0.0410, 0.2478, 0.0676,  ..., 0.5949, 0.0741, 0.1442]],
        [[0.1522, 0.2368, 0.2235,  ..., 0.3305, 0.2159, 0.2437],
         [0.2922, 0.2368, 0.3295,  ..., 0.2438, 0.2491, 0.2437],
         [0.1522, 0.2896, 0.2235,  ..., 0.2129, 0.3190, 0.2689],
         [0.4034, 0.2368, 0.2235,  ..., 0.2129, 0.2159, 0.2437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1701, 0.1685, 0.2393,  ..., 0.2034, 0.1495, 0.1916],
         [0.2132, 0.1685, 0.2393,  ..., 0.2261, 0.1796, 0.1916],
         [0.1701, 0.1685, 0.2393,  ..., 0.2034, 0.1495, 0.1916],
         [0.4467, 0.4946, 0.2822,  ..., 0.3671, 0.5213, 0.4251]],
        [[0.2497, 0.2443, 0.2475,  ..., 0.2500, 0.2500, 0.2500],
         [0.2508, 0.2443, 0.2574,  ..., 0.2500, 0.2500, 0.2500],
         [0.2497, 0.2443, 0.2475,  ..., 0.2500, 0.2500, 0.2500],
         [0.2497, 0.2671, 0.2475,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:23,850 [Process: 0] Synchronize training processes
2024-08-16 14:10:23,851 [Process: 0] Evaluating...
2024-08-16 14:10:23,853 [Process: 0] EPOCH 83:
2024-08-16 14:10:23,855 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3182, 0.2066, 0.2920,  ..., 0.2698, 0.4939, 0.3973],
         [0.3800, 0.2066, 0.2388,  ..., 0.5342, 0.1045, 0.1461],
         [0.1509, 0.2066, 0.2182,  ..., 0.0980, 0.1045, 0.0807],
         [0.1509, 0.3802, 0.2511,  ..., 0.0980, 0.2972, 0.3759]],
        [[0.2827, 0.0429, 0.1556,  ..., 0.0743, 0.1829, 0.0783],
         [0.3357, 0.0845, 0.1556,  ..., 0.2018, 0.3617, 0.0953],
         [0.1908, 0.0485, 0.5333,  ..., 0.6496, 0.2913, 0.7481],
         [0.1908, 0.8240, 0.1556,  ..., 0.0743, 0.1640, 0.0783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1892, 0.2243, 0.1871,  ..., 0.2398, 0.1698, 0.1863],
         [0.1892, 0.2301, 0.2002,  ..., 0.2492, 0.1797, 0.1863],
         [0.1892, 0.2243, 0.1871,  ..., 0.2398, 0.1698, 0.1863],
         [0.4325, 0.3212, 0.4256,  ..., 0.2712, 0.4807, 0.4411]],
        [[0.2500, 0.2216, 0.2437,  ..., 0.2549, 0.2500, 0.2500],
         [0.2500, 0.2216, 0.2688,  ..., 0.2738, 0.2500, 0.2500],
         [0.2500, 0.2216, 0.2437,  ..., 0.2357, 0.2500, 0.2500],
         [0.2500, 0.3352, 0.2437,  ..., 0.2357, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:25,849 [Process: 0] Synchronize training processes
2024-08-16 14:10:25,849 [Process: 0] Evaluating...
2024-08-16 14:10:25,851 [Process: 0] EPOCH 84:
2024-08-16 14:10:25,853 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5568, 0.3294, 0.1429,  ..., 0.5902, 0.4574, 0.1541],
         [0.1328, 0.1639, 0.2184,  ..., 0.1253, 0.1130, 0.1143],
         [0.1777, 0.3909, 0.4813,  ..., 0.2094, 0.2760, 0.6713],
         [0.1328, 0.1158, 0.1573,  ..., 0.0750, 0.1537, 0.0602]],
        [[0.2180, 0.1349, 0.2500,  ..., 0.3169, 0.2128, 0.1532],
         [0.3359, 0.1349, 0.2500,  ..., 0.2323, 0.3506, 0.1389],
         [0.2461, 0.2767, 0.2500,  ..., 0.2237, 0.2237, 0.1303],
         [0.2000, 0.4535, 0.2500,  ..., 0.2272, 0.2128, 0.5776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1491, 0.2169, 0.1480,  ..., 0.1668, 0.2328, 0.1410],
         [0.2005, 0.2169, 0.1480,  ..., 0.1668, 0.2328, 0.1348],
         [0.1491, 0.2169, 0.1480,  ..., 0.1668, 0.2328, 0.1489],
         [0.5014, 0.3493, 0.5561,  ..., 0.4997, 0.3016, 0.5753]],
        [[0.2530, 0.2705, 0.2712,  ..., 0.2500, 0.2500, 0.2500],
         [0.2733, 0.2692, 0.2429,  ..., 0.2500, 0.2500, 0.2500],
         [0.2369, 0.2302, 0.2429,  ..., 0.2500, 0.2500, 0.2500],
         [0.2369, 0.2302, 0.2429,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:27,793 [Process: 0] Synchronize training processes
2024-08-16 14:10:27,794 [Process: 0] Evaluating...
2024-08-16 14:10:27,795 [Process: 0] EPOCH 85:
2024-08-16 14:10:27,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5076, 0.3193, 0.1692,  ..., 0.4078, 0.2971, 0.2777],
         [0.2235, 0.1066, 0.1692,  ..., 0.1974, 0.1394, 0.2703],
         [0.1640, 0.4536, 0.4924,  ..., 0.1974, 0.4240, 0.2503],
         [0.1049, 0.1205, 0.1692,  ..., 0.1974, 0.1394, 0.2018]],
        [[0.2500, 0.1921, 0.3738,  ..., 0.1750, 0.2500, 0.1973],
         [0.2500, 0.1921, 0.2710,  ..., 0.1719, 0.2500, 0.1973],
         [0.2500, 0.1921, 0.1776,  ..., 0.1719, 0.2500, 0.1973],
         [0.2500, 0.4236, 0.1776,  ..., 0.4812, 0.2500, 0.4081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1645, 0.1617, 0.1678,  ..., 0.1753, 0.2417, 0.1611],
         [0.1715, 0.1617, 0.1778,  ..., 0.1753, 0.2578, 0.1611],
         [0.1645, 0.1617, 0.1678,  ..., 0.1753, 0.2417, 0.1611],
         [0.4994, 0.5149, 0.4866,  ..., 0.4740, 0.2588, 0.5166]],
        [[0.2500, 0.2500, 0.2294,  ..., 0.2899, 0.2500, 0.2539],
         [0.2500, 0.2500, 0.2294,  ..., 0.2367, 0.2500, 0.2466],
         [0.2500, 0.2500, 0.2294,  ..., 0.2367, 0.2500, 0.2047],
         [0.2500, 0.2500, 0.3119,  ..., 0.2367, 0.2500, 0.2948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:29,737 [Process: 0] Synchronize training processes
2024-08-16 14:10:29,738 [Process: 0] Evaluating...
2024-08-16 14:10:29,740 [Process: 0] EPOCH 86:
2024-08-16 14:10:29,742 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1775, 0.1558, 0.1410,  ..., 0.2039, 0.2149, 0.2030],
         [0.2770, 0.2038, 0.1410,  ..., 0.2958, 0.1931, 0.2076],
         [0.3564, 0.3404, 0.2406,  ..., 0.1610, 0.1977, 0.2030],
         [0.1891, 0.3001, 0.4775,  ..., 0.3393, 0.3943, 0.3865]],
        [[0.3270, 0.4221, 0.3286,  ..., 0.3801, 0.4590, 0.3173],
         [0.3612, 0.2197, 0.2238,  ..., 0.1894, 0.2805, 0.2917],
         [0.1924, 0.1791, 0.2238,  ..., 0.2412, 0.1302, 0.1955],
         [0.1195, 0.1791, 0.2238,  ..., 0.1894, 0.1302, 0.1955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1961, 0.1755, 0.1981,  ..., 0.1718, 0.2338, 0.1874],
         [0.1961, 0.1755, 0.1981,  ..., 0.1718, 0.2338, 0.1874],
         [0.1961, 0.1755, 0.1981,  ..., 0.1718, 0.2338, 0.1874],
         [0.4118, 0.4734, 0.4056,  ..., 0.4846, 0.2987, 0.4377]],
        [[0.2500, 0.2425, 0.2374,  ..., 0.2557, 0.2500, 0.2472],
         [0.2500, 0.2425, 0.2604,  ..., 0.2481, 0.2500, 0.2583],
         [0.2500, 0.2425, 0.2374,  ..., 0.2481, 0.2500, 0.2472],
         [0.2500, 0.2726, 0.2647,  ..., 0.2481, 0.2500, 0.2472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:31,690 [Process: 0] Synchronize training processes
2024-08-16 14:10:31,691 [Process: 0] Evaluating...
2024-08-16 14:10:31,693 [Process: 0] EPOCH 87:
2024-08-16 14:10:31,695 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1328, 0.3868, 0.1258,  ..., 0.2231, 0.4307, 0.4484],
         [0.1328, 0.1822, 0.3132,  ..., 0.2231, 0.0750, 0.2391],
         [0.1910, 0.1822, 0.1258,  ..., 0.3307, 0.4192, 0.2371],
         [0.5433, 0.2487, 0.4351,  ..., 0.2231, 0.0750, 0.0755]],
        [[0.2500, 0.2258, 0.1709,  ..., 0.2848, 0.2151, 0.2100],
         [0.2500, 0.3226, 0.4790,  ..., 0.2855, 0.3546, 0.3701],
         [0.2500, 0.2258, 0.1709,  ..., 0.2148, 0.2151, 0.2100],
         [0.2500, 0.2258, 0.1792,  ..., 0.2148, 0.2151, 0.2100]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1502, 0.2083, 0.1867,  ..., 0.2183, 0.2029, 0.2072],
         [0.1502, 0.2083, 0.2362,  ..., 0.2246, 0.2029, 0.2072],
         [0.1502, 0.2083, 0.1867,  ..., 0.2183, 0.2029, 0.2072],
         [0.5493, 0.3752, 0.3904,  ..., 0.3388, 0.3914, 0.3785]],
        [[0.2673, 0.2283, 0.2500,  ..., 0.2583, 0.2461, 0.2428],
         [0.2504, 0.2283, 0.2500,  ..., 0.2472, 0.2616, 0.2715],
         [0.2411, 0.2283, 0.2500,  ..., 0.2472, 0.2461, 0.2428],
         [0.2411, 0.3152, 0.2500,  ..., 0.2472, 0.2461, 0.2428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:33,627 [Process: 0] Synchronize training processes
2024-08-16 14:10:33,628 [Process: 0] Evaluating...
2024-08-16 14:10:33,630 [Process: 0] EPOCH 88:
2024-08-16 14:10:33,632 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2300, 0.1977, 0.2414,  ..., 0.2727, 0.0912, 0.1298],
         [0.2300, 0.1977, 0.2414,  ..., 0.1636, 0.0912, 0.1298],
         [0.3099, 0.1977, 0.2414,  ..., 0.1636, 0.6010, 0.1298],
         [0.2300, 0.4070, 0.2759,  ..., 0.4001, 0.2167, 0.6107]],
        [[0.2073, 0.4037, 0.2197,  ..., 0.2089, 0.1597, 0.2714],
         [0.3106, 0.3772, 0.2197,  ..., 0.5112, 0.1629, 0.4723],
         [0.2748, 0.1095, 0.3408,  ..., 0.1400, 0.5177, 0.1493],
         [0.2073, 0.1095, 0.2197,  ..., 0.1400, 0.1597, 0.1070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1188, 0.2156, 0.1209,  ..., 0.2251, 0.2389, 0.2447],
         [0.1344, 0.2279, 0.1557,  ..., 0.2251, 0.2389, 0.2660],
         [0.1050, 0.2156, 0.1209,  ..., 0.2251, 0.2389, 0.2447],
         [0.6417, 0.3408, 0.6025,  ..., 0.3246, 0.2833, 0.2447]],
        [[0.2160, 0.2484, 0.2500,  ..., 0.2369, 0.2500, 0.2149],
         [0.2160, 0.2484, 0.2500,  ..., 0.2506, 0.2500, 0.2149],
         [0.2160, 0.2484, 0.2500,  ..., 0.2369, 0.2500, 0.2149],
         [0.3521, 0.2547, 0.2500,  ..., 0.2755, 0.2500, 0.3553]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:35,569 [Process: 0] Synchronize training processes
2024-08-16 14:10:35,569 [Process: 0] Evaluating...
2024-08-16 14:10:35,571 [Process: 0] EPOCH 89:
2024-08-16 14:10:35,573 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2557, 0.2275, 0.1492,  ..., 0.1425, 0.2890, 0.1046],
         [0.0968, 0.2780, 0.1426,  ..., 0.2578, 0.2997, 0.1078],
         [0.1979, 0.3416, 0.1426,  ..., 0.2324, 0.2242, 0.1983],
         [0.4497, 0.1529, 0.5655,  ..., 0.3673, 0.1870, 0.5894]],
        [[0.4918, 0.3383, 0.2631,  ..., 0.1519, 0.1565, 0.4703],
         [0.1859, 0.2016, 0.3483,  ..., 0.1454, 0.1197, 0.1973],
         [0.1611, 0.2016, 0.1946,  ..., 0.5618, 0.6041, 0.1662],
         [0.1611, 0.2585, 0.1941,  ..., 0.1410, 0.1197, 0.1662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2014, 0.1948, 0.1658,  ..., 0.1774, 0.1519, 0.1678],
         [0.2014, 0.1948, 0.1768,  ..., 0.1774, 0.1686, 0.1678],
         [0.2014, 0.1948, 0.1658,  ..., 0.1774, 0.1599, 0.1678],
         [0.3958, 0.4157, 0.4916,  ..., 0.4679, 0.5196, 0.4965]],
        [[0.2480, 0.2479, 0.2228,  ..., 0.2500, 0.2500, 0.2316],
         [0.2559, 0.2479, 0.2649,  ..., 0.2500, 0.2500, 0.2486],
         [0.2480, 0.2479, 0.2228,  ..., 0.2500, 0.2500, 0.2316],
         [0.2480, 0.2563, 0.2895,  ..., 0.2500, 0.2500, 0.2882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:37,516 [Process: 0] Synchronize training processes
2024-08-16 14:10:37,517 [Process: 0] Evaluating...
2024-08-16 14:10:37,519 [Process: 0] EPOCH 90:
2024-08-16 14:10:37,521 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1316, 0.1950, 0.1201,  ..., 0.1975, 0.0953, 0.1711],
         [0.1316, 0.1120, 0.3961,  ..., 0.3571, 0.0953, 0.2587],
         [0.6053, 0.5458, 0.3637,  ..., 0.2480, 0.4730, 0.1711],
         [0.1316, 0.1473, 0.1201,  ..., 0.1975, 0.3364, 0.3992]],
        [[0.2500, 0.2274, 0.3280,  ..., 0.1907, 0.2126, 0.2877],
         [0.2500, 0.3385, 0.2240,  ..., 0.5519, 0.3621, 0.2320],
         [0.2500, 0.2171, 0.2240,  ..., 0.1287, 0.2126, 0.2320],
         [0.2500, 0.2171, 0.2240,  ..., 0.1287, 0.2126, 0.2483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2244, 0.2233, 0.1839,  ..., 0.2017, 0.1850, 0.1890],
         [0.2244, 0.2233, 0.1839,  ..., 0.2114, 0.1850, 0.1890],
         [0.2244, 0.2233, 0.1839,  ..., 0.2017, 0.1850, 0.1890],
         [0.3269, 0.3301, 0.4483,  ..., 0.3851, 0.4451, 0.4329]],
        [[0.2500, 0.2418, 0.2500,  ..., 0.2500, 0.2500, 0.2498],
         [0.2500, 0.2745, 0.2500,  ..., 0.2500, 0.2500, 0.2505],
         [0.2500, 0.2418, 0.2500,  ..., 0.2500, 0.2500, 0.2498],
         [0.2500, 0.2418, 0.2500,  ..., 0.2500, 0.2500, 0.2498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 14:10:39,461 [Process: 0] Synchronize training processes
2024-08-16 14:10:39,462 [Process: 0] Evaluating...
2024-08-16 14:10:39,464 [Process: 0] EPOCH 91:
2024-08-16 14:10:39,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2462, 0.2304, 0.2193,  ..., 0.3095, 0.2500, 0.2102],
         [0.2613, 0.2337, 0.3184,  ..., 0.2302, 0.2500, 0.0828],
         [0.2462, 0.2304, 0.1964,  ..., 0.2302, 0.2500, 0.6242],
         [0.2462, 0.3055, 0.2659,  ..., 0.2302, 0.2500, 0.0828]],
        [[0.2134, 0.1808, 0.2252,  ..., 0.1879, 0.2046, 0.1719],
         [0.2134, 0.1808, 0.2626,  ..., 0.2591, 0.2046, 0.1719],
         [0.2510, 0.1808, 0.2252,  ..., 0.1879, 0.2046, 0.1719],
         [0.3223, 0.4577, 0.2869,  ..., 0.3651, 0.3861, 0.4844]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1971, 0.1955, 0.1441,  ..., 0.1704, 0.1906, 0.2189],
         [0.2073, 0.2096, 0.1441,  ..., 0.1839, 0.1951, 0.2246],
         [0.1971, 0.1955, 0.1441,  ..., 0.1704, 0.1906, 0.2189],
         [0.3985, 0.3993, 0.5677,  ..., 0.4753, 0.4238, 0.3377]],
        [[0.2459, 0.2447, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2623, 0.2447, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2459, 0.2447, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2459, 0.2658, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 14:10:41,471 [Process: 0] Synchronize training processes
2024-08-16 14:10:41,472 [Process: 0] Evaluating...
2024-08-16 14:10:41,480 [Process: 0] EPOCH 92:
2024-08-16 14:10:41,482 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2448, 0.1908, 0.3937,  ..., 0.1113, 0.7605, 0.1682],
         [0.2840, 0.2255, 0.1677,  ..., 0.2761, 0.0492, 0.1859],
         [0.2239, 0.2243, 0.1677,  ..., 0.1081, 0.0438, 0.5582],
         [0.2474, 0.3594, 0.2709,  ..., 0.5045, 0.1465, 0.0877]],
        [[0.2660, 0.1652, 0.2500,  ..., 0.2393, 0.2500, 0.2500],
         [0.2101, 0.1652, 0.2500,  ..., 0.2393, 0.2500, 0.2500],
         [0.2101, 0.3521, 0.2500,  ..., 0.2531, 0.2500, 0.2500],
         [0.3139, 0.3176, 0.2500,  ..., 0.2683, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1300, 0.2035, 0.2060,  ..., 0.1682, 0.1809, 0.2268],
         [0.1300, 0.2005, 0.2060,  ..., 0.2182, 0.1809, 0.2268],
         [0.1300, 0.2005, 0.2060,  ..., 0.1682, 0.1809, 0.2268],
         [0.6099, 0.3956, 0.3821,  ..., 0.4454, 0.4573, 0.3195]],
        [[0.2500, 0.2425, 0.2500,  ..., 0.2497, 0.2557, 0.2500],
         [0.2500, 0.2724, 0.2500,  ..., 0.2510, 0.2481, 0.2500],
         [0.2500, 0.2425, 0.2500,  ..., 0.2497, 0.2481, 0.2500],
         [0.2500, 0.2425, 0.2500,  ..., 0.2497, 0.2481, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:43,599 [Process: 0] Synchronize training processes
2024-08-16 14:10:43,599 [Process: 0] Evaluating...
2024-08-16 14:10:43,601 [Process: 0] EPOCH 93:
2024-08-16 14:10:43,603 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2414, 0.2353, 0.2395,  ..., 0.2500, 0.2371, 0.2500],
         [0.2414, 0.2353, 0.2395,  ..., 0.2500, 0.2371, 0.2500],
         [0.2759, 0.2353, 0.2395,  ..., 0.2500, 0.2888, 0.2500],
         [0.2414, 0.2940, 0.2814,  ..., 0.2500, 0.2371, 0.2500]],
        [[0.1810, 0.2080, 0.1883,  ..., 0.2229, 0.2244, 0.2086],
         [0.2415, 0.1858, 0.2167,  ..., 0.3312, 0.2244, 0.2352],
         [0.1810, 0.1858, 0.1883,  ..., 0.2229, 0.2244, 0.2086],
         [0.3966, 0.4204, 0.4068,  ..., 0.2229, 0.3269, 0.3476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1773, 0.2261, 0.1573,  ..., 0.1638, 0.1652, 0.1547],
         [0.2018, 0.2261, 0.1573,  ..., 0.1638, 0.1652, 0.1547],
         [0.1773, 0.2261, 0.1573,  ..., 0.1638, 0.1652, 0.1547],
         [0.4435, 0.3216, 0.5280,  ..., 0.5085, 0.5045, 0.5360]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:45,661 [Process: 0] Synchronize training processes
2024-08-16 14:10:45,661 [Process: 0] Evaluating...
2024-08-16 14:10:45,663 [Process: 0] EPOCH 94:
2024-08-16 14:10:45,665 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.3959, 0.4526, 0.2497,  ..., 0.2914, 0.3209, 0.2682],
         [0.2430, 0.2977, 0.5017,  ..., 0.4075, 0.3488, 0.3325],
         [0.1806, 0.1248, 0.1243,  ..., 0.1505, 0.1801, 0.1997],
         [0.1806, 0.1248, 0.1243,  ..., 0.1505, 0.1502, 0.1997]],
        [[0.2131, 0.1285, 0.1748,  ..., 0.1270, 0.1423, 0.1735],
         [0.2131, 0.1285, 0.1748,  ..., 0.1336, 0.1423, 0.1735],
         [0.2846, 0.3054, 0.1748,  ..., 0.1270, 0.1595, 0.2278],
         [0.2893, 0.4377, 0.4757,  ..., 0.6124, 0.5559, 0.4252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1266, 0.1484, 0.1786,  ..., 0.1677, 0.1829, 0.1571],
         [0.1225, 0.1484, 0.1786,  ..., 0.1677, 0.2003, 0.1571],
         [0.1223, 0.1484, 0.1873,  ..., 0.1677, 0.1829, 0.1571],
         [0.6286, 0.5549, 0.4555,  ..., 0.4970, 0.4339, 0.5286]],
        [[0.2413, 0.2472, 0.2475,  ..., 0.2500, 0.2500, 0.2453],
         [0.2760, 0.2585, 0.2575,  ..., 0.2500, 0.2500, 0.2641],
         [0.2413, 0.2472, 0.2475,  ..., 0.2500, 0.2500, 0.2453],
         [0.2413, 0.2472, 0.2475,  ..., 0.2500, 0.2500, 0.2453]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:47,645 [Process: 0] Synchronize training processes
2024-08-16 14:10:47,646 [Process: 0] Evaluating...
2024-08-16 14:10:47,648 [Process: 0] EPOCH 95:
2024-08-16 14:10:47,650 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5910, 0.4667, 0.4842,  ..., 0.1464, 0.3349, 0.4494],
         [0.2081, 0.1301, 0.1719,  ..., 0.1401, 0.2041, 0.1223],
         [0.0995, 0.1301, 0.1719,  ..., 0.1401, 0.2041, 0.1223],
         [0.1013, 0.2732, 0.1719,  ..., 0.5733, 0.2569, 0.3059]],
        [[0.2468, 0.2759, 0.3482,  ..., 0.3219, 0.3220, 0.0717],
         [0.2468, 0.2414, 0.2495,  ..., 0.3493, 0.4142, 0.7366],
         [0.2468, 0.2414, 0.2011,  ..., 0.1644, 0.1319, 0.0912],
         [0.2597, 0.2414, 0.2011,  ..., 0.1644, 0.1319, 0.1006]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1157, 0.1924, 0.2154,  ..., 0.1400, 0.1871, 0.1325],
         [0.1157, 0.1924, 0.2154,  ..., 0.1793, 0.1871, 0.1326],
         [0.1190, 0.1924, 0.2154,  ..., 0.1400, 0.1871, 0.1325],
         [0.6496, 0.4227, 0.3537,  ..., 0.5407, 0.4387, 0.6024]],
        [[0.2500, 0.2500, 0.2858,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2391,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2375,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2375,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:49,592 [Process: 0] Synchronize training processes
2024-08-16 14:10:49,593 [Process: 0] Evaluating...
2024-08-16 14:10:49,595 [Process: 0] EPOCH 96:
2024-08-16 14:10:49,596 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2450, 0.3007, 0.3234,  ..., 0.2322, 0.1998, 0.2159],
         [0.1336, 0.1392, 0.1223,  ..., 0.2322, 0.0917, 0.1766],
         [0.1336, 0.1392, 0.1071,  ..., 0.2322, 0.0917, 0.1766],
         [0.4879, 0.4210, 0.4471,  ..., 0.3033, 0.6169, 0.4309]],
        [[0.3171, 0.2558, 0.1196,  ..., 0.1111, 0.1561, 0.1390],
         [0.3735, 0.3194, 0.4587,  ..., 0.4634, 0.2357, 0.3124],
         [0.1547, 0.2673, 0.3020,  ..., 0.3144, 0.4520, 0.4399],
         [0.1547, 0.1575, 0.1196,  ..., 0.1111, 0.1561, 0.1087]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1320, 0.1344, 0.1406,  ..., 0.1960, 0.1536, 0.1471],
         [0.1320, 0.1344, 0.1406,  ..., 0.2285, 0.1536, 0.1471],
         [0.1320, 0.1370, 0.1406,  ..., 0.1960, 0.1536, 0.1471],
         [0.6039, 0.5942, 0.5782,  ..., 0.3795, 0.5392, 0.5586]],
        [[0.2500, 0.2395, 0.2500,  ..., 0.2500, 0.2534, 0.2437],
         [0.2500, 0.2815, 0.2500,  ..., 0.2500, 0.2711, 0.2688],
         [0.2500, 0.2395, 0.2500,  ..., 0.2500, 0.2377, 0.2437],
         [0.2500, 0.2395, 0.2500,  ..., 0.2500, 0.2377, 0.2437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:51,526 [Process: 0] Synchronize training processes
2024-08-16 14:10:51,526 [Process: 0] Evaluating...
2024-08-16 14:10:51,528 [Process: 0] EPOCH 97:
2024-08-16 14:10:51,530 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2012, 0.2257, 0.3031,  ..., 0.2080, 0.2262, 0.3766],
         [0.3029, 0.3734, 0.3583,  ..., 0.3894, 0.3215, 0.2589],
         [0.2079, 0.2004, 0.1693,  ..., 0.2013, 0.2262, 0.1709],
         [0.2880, 0.2004, 0.1693,  ..., 0.2013, 0.2262, 0.1936]],
        [[0.2127, 0.1951, 0.2500,  ..., 0.3643, 0.2295, 0.0894],
         [0.2074, 0.2074, 0.2500,  ..., 0.1891, 0.2295, 0.1567],
         [0.3038, 0.2069, 0.2500,  ..., 0.2574, 0.3115, 0.0894],
         [0.2762, 0.3905, 0.2500,  ..., 0.1891, 0.2295, 0.6645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2208, 0.1917, 0.1124,  ..., 0.2229, 0.1798, 0.1907],
         [0.2476, 0.2079, 0.1244,  ..., 0.2244, 0.1875, 0.1937],
         [0.2208, 0.1917, 0.1124,  ..., 0.2229, 0.1900, 0.1907],
         [0.3108, 0.4087, 0.6507,  ..., 0.3297, 0.4427, 0.4249]],
        [[0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2843, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2386, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2386, 0.2500],
         [0.2500, 0.2500, 0.2500,  ..., 0.2500, 0.2386, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:53,573 [Process: 0] Synchronize training processes
2024-08-16 14:10:53,573 [Process: 0] Evaluating...
2024-08-16 14:10:53,575 [Process: 0] EPOCH 98:
2024-08-16 14:10:53,577 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2273, 0.2116, 0.4401,  ..., 0.1078, 0.3886, 0.2364],
         [0.1410, 0.2116, 0.2083,  ..., 0.1833, 0.1491, 0.2844],
         [0.4968, 0.2324, 0.2621,  ..., 0.0637, 0.3450, 0.2364],
         [0.1349, 0.3444, 0.0894,  ..., 0.6452, 0.1173, 0.2428]],
        [[0.1599, 0.2500, 0.4144,  ..., 0.2500, 0.3079, 0.1815],
         [0.2595, 0.2500, 0.0939,  ..., 0.2500, 0.1204, 0.1815],
         [0.4206, 0.2500, 0.2070,  ..., 0.2500, 0.1204, 0.1815],
         [0.1599, 0.2500, 0.2848,  ..., 0.2500, 0.4512, 0.4556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1535, 0.1874, 0.1064,  ..., 0.1900, 0.1585, 0.1978],
         [0.1535, 0.2065, 0.1166,  ..., 0.1900, 0.1585, 0.2148],
         [0.1535, 0.1874, 0.1089,  ..., 0.1900, 0.1585, 0.1554],
         [0.5396, 0.4188, 0.6680,  ..., 0.4300, 0.5245, 0.4319]],
        [[0.2496, 0.2515, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2513, 0.2718, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2496, 0.2383, 0.2500,  ..., 0.2500, 0.2500, 0.2500],
         [0.2496, 0.2383, 0.2500,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:55,663 [Process: 0] Synchronize training processes
2024-08-16 14:10:55,663 [Process: 0] Evaluating...
2024-08-16 14:10:55,666 [Process: 0] EPOCH 99:
2024-08-16 14:10:55,668 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1571, 0.1657, 0.1488,  ..., 0.1584, 0.4782, 0.3863],
         [0.1707, 0.1657, 0.1549,  ..., 0.1584, 0.3644, 0.2937],
         [0.2234, 0.1657, 0.1488,  ..., 0.1584, 0.0569, 0.1600],
         [0.4487, 0.5030, 0.5476,  ..., 0.5248, 0.1005, 0.1600]],
        [[0.0964, 0.2339, 0.4492,  ..., 0.2386, 0.2500, 0.2178],
         [0.0964, 0.1973, 0.3161,  ..., 0.2386, 0.2500, 0.2592],
         [0.7109, 0.3997, 0.1174,  ..., 0.2386, 0.2500, 0.3053],
         [0.0964, 0.1691, 0.1174,  ..., 0.2841, 0.2500, 0.2178]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1730, 0.1776, 0.1559,  ..., 0.1157, 0.1662, 0.2164],
         [0.1730, 0.1776, 0.1559,  ..., 0.1096, 0.1662, 0.2164],
         [0.1730, 0.1776, 0.1559,  ..., 0.1096, 0.1662, 0.2164],
         [0.4809, 0.4671, 0.5322,  ..., 0.6651, 0.5015, 0.3507]],
        [[0.2482, 0.2419, 0.2515,  ..., 0.2481, 0.2946, 0.2481],
         [0.2553, 0.2744, 0.2724,  ..., 0.2556, 0.2397, 0.2557],
         [0.2482, 0.2419, 0.2381,  ..., 0.2481, 0.2329, 0.2481],
         [0.2482, 0.2419, 0.2381,  ..., 0.2481, 0.2329, 0.2481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:57,740 [Process: 0] Synchronize training processes
2024-08-16 14:10:57,740 [Process: 0] Evaluating...
2024-08-16 14:10:57,742 [Process: 0] EPOCH 100:
2024-08-16 14:10:57,744 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1809, 0.1860, 0.2374,  ..., 0.2231, 0.2589, 0.2679],
         [0.1611, 0.1341, 0.2374,  ..., 0.1816, 0.2006, 0.2343],
         [0.1611, 0.1252, 0.2374,  ..., 0.1500, 0.1871, 0.2635],
         [0.4969, 0.5547, 0.2877,  ..., 0.4453, 0.3534, 0.2343]],
        [[0.2500, 0.2087, 0.2500,  ..., 0.2500, 0.2483, 0.2459],
         [0.2500, 0.2087, 0.2500,  ..., 0.2500, 0.2552, 0.2459],
         [0.2500, 0.2087, 0.2500,  ..., 0.2500, 0.2483, 0.2622],
         [0.2500, 0.3738, 0.2500,  ..., 0.2500, 0.2483, 0.2459]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1261, 0.2351, 0.1254,  ..., 0.1371, 0.1970, 0.1946],
         [0.1261, 0.2351, 0.1254,  ..., 0.1517, 0.1970, 0.1946],
         [0.1261, 0.2351, 0.1254,  ..., 0.1371, 0.1970, 0.1946],
         [0.6218, 0.2948, 0.6238,  ..., 0.5742, 0.4091, 0.4161]],
        [[0.2500, 0.2500, 0.2497,  ..., 0.2494, 0.2500, 0.2395],
         [0.2500, 0.2500, 0.2510,  ..., 0.2518, 0.2500, 0.2815],
         [0.2500, 0.2500, 0.2497,  ..., 0.2494, 0.2500, 0.2395],
         [0.2500, 0.2500, 0.2497,  ..., 0.2494, 0.2500, 0.2395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 14:10:59,817 [Process: 0] Synchronize training processes
2024-08-16 14:10:59,817 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1670, 0.2869, 0.2664,  ..., 0.5989, 0.4268, 0.2124],
         [0.2070, 0.2713, 0.4441,  ..., 0.1563, 0.1261, 0.4710],
         [0.3799, 0.1553, 0.1447,  ..., 0.0582, 0.1261, 0.0553],
         [0.2461, 0.2865, 0.1447,  ..., 0.1866, 0.3210, 0.2613]],
        [[0.2322, 0.1825, 0.1563,  ..., 0.1681, 0.1777, 0.2500],
         [0.2322, 0.1803, 0.1473,  ..., 0.1681, 0.4297, 0.2500],
         [0.3033, 0.1459, 0.5491,  ..., 0.2836, 0.1777, 0.2500],
         [0.2322, 0.4914, 0.1473,  ..., 0.3802, 0.2150, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...