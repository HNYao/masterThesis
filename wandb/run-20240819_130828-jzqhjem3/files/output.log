2024-08-19 13:08:33,385 [Worker 0] Is distributed: False
2024-08-19 13:08:33,385 [Process: 0] Starting training
2024-08-19 13:08:33,385 [Process: 0] EPOCH 1:
2024-08-19 13:08:33,388 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:35,004 [Process: 0] Synchronize training processes
2024-08-19 13:08:35,004 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3125, 0.2191, 0.2500,  ..., 0.3318, 0.2200, 0.1013],
         [0.2200, 0.3539, 0.2500,  ..., 0.2501, 0.2858, 0.1591],
         [0.1752, 0.1941, 0.2500,  ..., 0.1867, 0.1505, 0.2409],
         [0.2922, 0.2328, 0.2500,  ..., 0.2314, 0.3437, 0.4987]],
        [[0.3003, 0.2980, 0.2308,  ..., 0.3078, 0.2451, 0.1800],
         [0.2135, 0.2549, 0.2308,  ..., 0.2095, 0.2857, 0.1800],
         [0.1832, 0.1978, 0.2308,  ..., 0.1611, 0.2056, 0.4599],
         [0.3030, 0.2492, 0.3077,  ..., 0.3216, 0.2636, 0.1800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:08:35,389 [Process: 0] EPOCH 2:
2024-08-19 13:08:35,391 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:36,363 [Process: 0] Synchronize training processes
2024-08-19 13:08:36,364 [Process: 0] Evaluating...
2024-08-19 13:08:36,366 [Process: 0] EPOCH 3:
2024-08-19 13:08:36,367 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2781, 0.0478, 0.2594,  ..., 0.2884, 0.2763, 0.2453],
         [0.2496, 0.0478, 0.2583,  ..., 0.2573, 0.2636, 0.2487],
         [0.1906, 0.8565, 0.1992,  ..., 0.1859, 0.1791, 0.2446],
         [0.2818, 0.0478, 0.2831,  ..., 0.2684, 0.2810, 0.2614]],
        [[0.0950, 0.2851, 0.2756,  ..., 0.2581, 0.1664, 0.2544],
         [0.0950, 0.2559, 0.2626,  ..., 0.2391, 0.1664, 0.2440],
         [0.7151, 0.1942, 0.1732,  ..., 0.2202, 0.5009, 0.2189],
         [0.0950, 0.2648, 0.2886,  ..., 0.2826, 0.1664, 0.2828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2952, 0.2762, 0.2763,  ..., 0.2748, 0.0978, 0.2808],
         [0.2443, 0.2542, 0.2593,  ..., 0.2612, 0.0978, 0.2575],
         [0.1871, 0.1833, 0.1845,  ..., 0.1955, 0.7067, 0.1927],
         [0.2734, 0.2864, 0.2799,  ..., 0.2685, 0.0978, 0.2690]],
        [[0.2713, 0.2636, 0.2723,  ..., 0.2873, 0.2782, 0.2582],
         [0.2464, 0.2435, 0.2467,  ..., 0.2516, 0.2565, 0.2631],
         [0.2111, 0.1888, 0.1962,  ..., 0.1868, 0.1984, 0.1988],
         [0.2712, 0.3041, 0.2848,  ..., 0.2743, 0.2669, 0.2798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2719, 0.2675, 0.2736,  ..., 0.2755, 0.2779, 0.2736],
         [0.2429, 0.2562, 0.2501,  ..., 0.2466, 0.2520, 0.2565],
         [0.1986, 0.2019, 0.1982,  ..., 0.1954, 0.1997, 0.1987],
         [0.2866, 0.2745, 0.2781,  ..., 0.2825, 0.2703, 0.2712]],
        [[0.2579, 0.2697, 0.2758,  ..., 0.1607, 0.0020, 0.2630],
         [0.2570, 0.2517, 0.2469,  ..., 0.1609, 0.0020, 0.2525],
         [0.2318, 0.1977, 0.1934,  ..., 0.5177, 0.9939, 0.2190],
         [0.2533, 0.2809, 0.2838,  ..., 0.1607, 0.0020, 0.2655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:37,337 [Process: 0] Synchronize training processes
2024-08-19 13:08:37,337 [Process: 0] Evaluating...
2024-08-19 13:08:37,339 [Process: 0] EPOCH 4:
2024-08-19 13:08:37,341 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:38,313 [Process: 0] Synchronize training processes
2024-08-19 13:08:38,313 [Process: 0] Evaluating...
2024-08-19 13:08:38,315 [Process: 0] EPOCH 5:
2024-08-19 13:08:38,317 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2794, 0.2778, 0.2785,  ..., 0.2654, 0.0497, 0.0250],
         [0.2450, 0.2437, 0.2403,  ..., 0.2521, 0.0497, 0.0250],
         [0.1811, 0.1905, 0.1995,  ..., 0.1970, 0.8508, 0.9251],
         [0.2946, 0.2880, 0.2817,  ..., 0.2855, 0.0497, 0.0250]],
        [[0.2655, 0.2720, 0.2730,  ..., 0.2649, 0.2809, 0.2529],
         [0.2538, 0.2497, 0.2516,  ..., 0.2524, 0.2534, 0.2497],
         [0.2011, 0.1953, 0.1929,  ..., 0.1930, 0.2027, 0.2581],
         [0.2797, 0.2829, 0.2825,  ..., 0.2897, 0.2630, 0.2393]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2391, 0.2776, 0.2655,  ..., 0.2598, 0.2405, 0.2640],
         [0.2391, 0.2427, 0.2486,  ..., 0.2589, 0.2368, 0.2447],
         [0.2827, 0.2038, 0.2188,  ..., 0.2224, 0.2858, 0.2141],
         [0.2391, 0.2758, 0.2670,  ..., 0.2589, 0.2368, 0.2772]],
        [[0.2661, 0.2713, 0.2714,  ..., 0.2818, 0.1626, 0.2679],
         [0.2380, 0.2473, 0.2419,  ..., 0.2332, 0.1626, 0.2422],
         [0.2380, 0.2091, 0.2205,  ..., 0.2097, 0.5122, 0.2108],
         [0.2578, 0.2723, 0.2662,  ..., 0.2753, 0.1626, 0.2791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2755, 0.2783, 0.2679,  ..., 0.2796, 0.2770, 0.2756],
         [0.2404, 0.2363, 0.2366,  ..., 0.2423, 0.2479, 0.2434],
         [0.2268, 0.1989, 0.2096,  ..., 0.2001, 0.2180, 0.1999],
         [0.2574, 0.2865, 0.2860,  ..., 0.2780, 0.2571, 0.2811]],
        [[0.2726, 0.2815, 0.2717,  ..., 0.2714, 0.2437, 0.2319],
         [0.2306, 0.2342, 0.2394,  ..., 0.2416, 0.2455, 0.2497],
         [0.2073, 0.2118, 0.2076,  ..., 0.2092, 0.2861, 0.2866],
         [0.2895, 0.2726, 0.2813,  ..., 0.2777, 0.2247, 0.2319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1801, 0.2807, 0.2693,  ..., 0.2800, 0.2573, 0.2806],
         [0.1801, 0.2324, 0.2348,  ..., 0.2393, 0.2564, 0.2328],
         [0.4596, 0.2086, 0.2151,  ..., 0.2048, 0.2326, 0.2083],
         [0.1801, 0.2782, 0.2808,  ..., 0.2759, 0.2537, 0.2784]],
        [[0.2570, 0.2783, 0.2744,  ..., 0.2776, 0.2071, 0.2822],
         [0.2304, 0.2395, 0.2371,  ..., 0.2363, 0.2071, 0.2388],
         [0.2371, 0.2006, 0.2060,  ..., 0.2001, 0.3787, 0.2145],
         [0.2756, 0.2816, 0.2824,  ..., 0.2860, 0.2071, 0.2645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:39,290 [Process: 0] Synchronize training processes
2024-08-19 13:08:39,290 [Process: 0] Evaluating...
2024-08-19 13:08:39,292 [Process: 0] EPOCH 6:
2024-08-19 13:08:39,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:40,266 [Process: 0] Synchronize training processes
2024-08-19 13:08:40,266 [Process: 0] Evaluating...
2024-08-19 13:08:40,268 [Process: 0] EPOCH 7:
2024-08-19 13:08:40,270 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1058, 0.2831, 0.2846,  ..., 0.2756, 0.2804, 0.2841],
         [0.1058, 0.2202, 0.2361,  ..., 0.2265, 0.2308, 0.2289],
         [0.6827, 0.1977, 0.2040,  ..., 0.2020, 0.1943, 0.1946],
         [0.1058, 0.2990, 0.2753,  ..., 0.2960, 0.2944, 0.2924]],
        [[0.2868, 0.2886, 0.2748,  ..., 0.2892, 0.2817, 0.2744],
         [0.2319, 0.2230, 0.2315,  ..., 0.2349, 0.2292, 0.2221],
         [0.2000, 0.2193, 0.1977,  ..., 0.1976, 0.2048, 0.1971],
         [0.2813, 0.2692, 0.2959,  ..., 0.2783, 0.2843, 0.3063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1689, 0.2939, 0.3020,  ..., 0.2840, 0.1739, 0.2856],
         [0.1689, 0.2283, 0.2313,  ..., 0.2377, 0.1739, 0.2277],
         [0.4933, 0.1991, 0.1827,  ..., 0.1965, 0.4782, 0.1991],
         [0.1689, 0.2787, 0.2839,  ..., 0.2818, 0.1739, 0.2876]],
        [[0.2862, 0.2827, 0.2813,  ..., 0.3020, 0.1687, 0.2852],
         [0.2349, 0.2232, 0.2380,  ..., 0.2254, 0.1687, 0.2272],
         [0.2178, 0.1956, 0.1929,  ..., 0.1960, 0.4938, 0.1947],
         [0.2611, 0.2984, 0.2878,  ..., 0.2766, 0.1687, 0.2929]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5757e-05, 2.9973e-01, 3.1443e-01,  ..., 3.0025e-01,
          2.8559e-01, 3.0739e-01],
         [2.5757e-05, 2.1846e-01, 2.2022e-01,  ..., 2.2313e-01,
          2.2746e-01, 2.2647e-01],
         [9.9992e-01, 1.7959e-01, 1.7734e-01,  ..., 1.9839e-01,
          2.0090e-01, 1.8883e-01],
         [2.5757e-05, 3.0222e-01, 2.8801e-01,  ..., 2.7823e-01,
          2.8604e-01, 2.7731e-01]],
        [[3.1815e-01, 3.0365e-01, 2.9209e-01,  ..., 2.9300e-01,
          2.9441e-01, 2.9459e-01],
         [2.3266e-01, 2.2826e-01, 2.1802e-01,  ..., 2.3487e-01,
          2.2912e-01, 2.3072e-01],
         [1.6170e-01, 1.6790e-01, 1.9261e-01,  ..., 1.8251e-01,
          1.8212e-01, 1.8604e-01],
         [2.8749e-01, 3.0019e-01, 2.9729e-01,  ..., 2.8963e-01,
          2.9436e-01, 2.8865e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0018, 0.2996, 0.3014,  ..., 0.1999, 0.0441, 0.2833],
         [0.0018, 0.2237, 0.2288,  ..., 0.2225, 0.0441, 0.2215],
         [0.9945, 0.1910, 0.1792,  ..., 0.3778, 0.8677, 0.1964],
         [0.0018, 0.2857, 0.2906,  ..., 0.1999, 0.0441, 0.2988]],
        [[0.2810, 0.3010, 0.2990,  ..., 0.2956, 0.0717, 0.3010],
         [0.2348, 0.2178, 0.2310,  ..., 0.2286, 0.0717, 0.2155],
         [0.1915, 0.1983, 0.1875,  ..., 0.1894, 0.7848, 0.1820],
         [0.2927, 0.2828, 0.2826,  ..., 0.2863, 0.0717, 0.3015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:08:41,243 [Process: 0] Synchronize training processes
2024-08-19 13:08:41,244 [Process: 0] Evaluating...
2024-08-19 13:08:41,245 [Process: 0] EPOCH 8:
2024-08-19 13:08:41,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:42,219 [Process: 0] Synchronize training processes
2024-08-19 13:08:42,220 [Process: 0] Evaluating...
2024-08-19 13:08:42,221 [Process: 0] EPOCH 9:
2024-08-19 13:08:42,223 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0232, 0.3071, 0.3233,  ..., 0.3098, 0.2999, 0.3015],
         [0.0232, 0.2060, 0.1986,  ..., 0.2063, 0.2260, 0.2284],
         [0.9305, 0.1893, 0.1711,  ..., 0.1861, 0.1966, 0.1832],
         [0.0232, 0.2976, 0.3070,  ..., 0.2978, 0.2776, 0.2869]],
        [[0.3370, 0.3005, 0.3178,  ..., 0.3220, 0.3165, 0.2981],
         [0.1987, 0.2290, 0.1924,  ..., 0.2133, 0.2008, 0.2108],
         [0.1690, 0.1904, 0.1708,  ..., 0.1843, 0.1854, 0.1858],
         [0.2953, 0.2801, 0.3189,  ..., 0.2804, 0.2972, 0.3053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0553, 0.3004, 0.2888,  ..., 0.2511, 0.1402, 0.3121],
         [0.0553, 0.2172, 0.2221,  ..., 0.2540, 0.2407, 0.2141],
         [0.8341, 0.2031, 0.2082,  ..., 0.2397, 0.4788, 0.2020],
         [0.0553, 0.2794, 0.2810,  ..., 0.2552, 0.1402, 0.2718]],
        [[0.2826, 0.3284, 0.3050,  ..., 0.3163, 0.0225, 0.1751],
         [0.2495, 0.2029, 0.2210,  ..., 0.2165, 0.0225, 0.2479],
         [0.1816, 0.1625, 0.1878,  ..., 0.1753, 0.9324, 0.4096],
         [0.2864, 0.3063, 0.2862,  ..., 0.2919, 0.0225, 0.1674]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0748, 0.3011, 0.2941,  ..., 0.3176, 0.2907, 0.2958],
         [0.0748, 0.2088, 0.2059,  ..., 0.1924, 0.2086, 0.2099],
         [0.7756, 0.2074, 0.2059,  ..., 0.1874, 0.2086, 0.2099],
         [0.0748, 0.2826, 0.2942,  ..., 0.3026, 0.2920, 0.2843]],
        [[0.3323, 0.3270, 0.3360,  ..., 0.3133, 0.3399, 0.3117],
         [0.1857, 0.1886, 0.1869,  ..., 0.1943, 0.1658, 0.1964],
         [0.1697, 0.1886, 0.1680,  ..., 0.1759, 0.1612, 0.1838],
         [0.3123, 0.2958, 0.3090,  ..., 0.3164, 0.3331, 0.3081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0514, 0.3282, 0.3013,  ..., 0.3172, 0.2663, 0.3123],
         [0.0699, 0.1961, 0.2094,  ..., 0.1985, 0.2189, 0.1944],
         [0.8273, 0.1856, 0.2094,  ..., 0.1985, 0.2328, 0.1944],
         [0.0514, 0.2901, 0.2798,  ..., 0.2858, 0.2820, 0.2990]],
        [[0.3349, 0.3191, 0.3194,  ..., 0.2583, 0.0519, 0.0783],
         [0.1835, 0.1980, 0.1897,  ..., 0.2253, 0.0519, 0.1401],
         [0.1815, 0.1908, 0.1873,  ..., 0.2349, 0.8444, 0.7034],
         [0.3002, 0.2922, 0.3036,  ..., 0.2815, 0.0519, 0.0783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0770, 0.3165, 0.3243,  ..., 0.3083, 0.2912, 0.2970],
         [0.0770, 0.2095, 0.1975,  ..., 0.2049, 0.2175, 0.2122],
         [0.7690, 0.2095, 0.1975,  ..., 0.2049, 0.2175, 0.2122],
         [0.0770, 0.2646, 0.2808,  ..., 0.2818, 0.2738, 0.2786]],
        [[0.3426, 0.3280, 0.3375,  ..., 0.3029, 0.3250, 0.3429],
         [0.1759, 0.1852, 0.1809,  ..., 0.1962, 0.1847, 0.1733],
         [0.1705, 0.1852, 0.1743,  ..., 0.1962, 0.1847, 0.1700],
         [0.3110, 0.3016, 0.3073,  ..., 0.3048, 0.3057, 0.3138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:43,195 [Process: 0] Synchronize training processes
2024-08-19 13:08:43,195 [Process: 0] Evaluating...
2024-08-19 13:08:43,197 [Process: 0] EPOCH 10:
2024-08-19 13:08:43,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:44,172 [Process: 0] Synchronize training processes
2024-08-19 13:08:44,172 [Process: 0] Evaluating...
2024-08-19 13:08:44,174 [Process: 0] EPOCH 11:
2024-08-19 13:08:44,176 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0680, 0.3072, 0.2914,  ..., 0.3131, 0.2878, 0.2935],
         [0.1240, 0.2143, 0.2159,  ..., 0.1942, 0.2165, 0.2112],
         [0.7400, 0.2143, 0.2159,  ..., 0.1942, 0.2165, 0.2112],
         [0.0680, 0.2642, 0.2769,  ..., 0.2985, 0.2792, 0.2841]],
        [[0.3149, 0.3153, 0.3066,  ..., 0.3150, 0.1034, 0.1555],
         [0.1970, 0.1912, 0.1895,  ..., 0.1832, 0.1034, 0.1899],
         [0.1970, 0.1912, 0.1895,  ..., 0.1832, 0.6899, 0.4992],
         [0.2911, 0.3023, 0.3143,  ..., 0.3186, 0.1034, 0.1555]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0208, 0.2889, 0.3021,  ..., 0.2976, 0.3129, 0.3014],
         [0.0208, 0.2128, 0.2182,  ..., 0.2166, 0.2068, 0.2104],
         [0.9375, 0.2128, 0.2085,  ..., 0.2166, 0.2068, 0.2104],
         [0.0208, 0.2856, 0.2712,  ..., 0.2692, 0.2736, 0.2779]],
        [[0.3585, 0.3365, 0.3640,  ..., 0.3542, 0.3172, 0.3419],
         [0.1537, 0.1645, 0.1563,  ..., 0.1705, 0.1719, 0.1486],
         [0.1537, 0.1645, 0.1360,  ..., 0.1705, 0.1719, 0.1486],
         [0.3340, 0.3345, 0.3437,  ..., 0.3049, 0.3390, 0.3609]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1395, 0.3146, 0.3059,  ..., 0.3324, 0.2741, 0.3018],
         [0.1804, 0.2002, 0.2054,  ..., 0.1887, 0.2221, 0.2069],
         [0.5405, 0.2002, 0.2054,  ..., 0.1887, 0.2396, 0.2069],
         [0.1395, 0.2849, 0.2833,  ..., 0.2902, 0.2642, 0.2844]],
        [[0.3502, 0.3135, 0.3204,  ..., 0.3318, 0.1002, 0.1220],
         [0.1787, 0.1903, 0.2003,  ..., 0.1898, 0.1002, 0.1716],
         [0.1787, 0.1903, 0.2003,  ..., 0.1898, 0.6995, 0.5845],
         [0.2924, 0.3060, 0.2790,  ..., 0.2886, 0.1002, 0.1220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2008, 0.3143, 0.3219,  ..., 0.3444, 0.3138, 0.3010],
         [0.2008, 0.1995, 0.1999,  ..., 0.1926, 0.2003, 0.2136],
         [0.3976, 0.1995, 0.1999,  ..., 0.1926, 0.2003, 0.2136],
         [0.2008, 0.2867, 0.2783,  ..., 0.2703, 0.2857, 0.2718]],
        [[0.3575, 0.3415, 0.3801,  ..., 0.3726, 0.3476, 0.3445],
         [0.1596, 0.1836, 0.1712,  ..., 0.1661, 0.1678, 0.1727],
         [0.1340, 0.1836, 0.1633,  ..., 0.1605, 0.1678, 0.1726],
         [0.3489, 0.2914, 0.2854,  ..., 0.3008, 0.3168, 0.3101]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:45,149 [Process: 0] Synchronize training processes
2024-08-19 13:08:45,150 [Process: 0] Evaluating...
2024-08-19 13:08:45,532 [Process: 0] EPOCH 12:
2024-08-19 13:08:45,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:46,509 [Process: 0] Synchronize training processes
2024-08-19 13:08:46,509 [Process: 0] Evaluating...
2024-08-19 13:08:46,511 [Process: 0] EPOCH 13:
2024-08-19 13:08:46,512 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2002, 0.2870, 0.3009,  ..., 0.3239, 0.3036, 0.2594],
         [0.2131, 0.2142, 0.2021,  ..., 0.1867, 0.2114, 0.2239],
         [0.3865, 0.2142, 0.2021,  ..., 0.1867, 0.2114, 0.2669],
         [0.2002, 0.2846, 0.2949,  ..., 0.3026, 0.2736, 0.2498]],
        [[0.3396, 0.2972, 0.3202,  ..., 0.3073, 0.1360, 0.1627],
         [0.1861, 0.2054, 0.1941,  ..., 0.1999, 0.1360, 0.1627],
         [0.1788, 0.2054, 0.1941,  ..., 0.1999, 0.5919, 0.5119],
         [0.2954, 0.2921, 0.2916,  ..., 0.2929, 0.1360, 0.1627]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1867, 0.3745, 0.3314,  ..., 0.3377, 0.3103, 0.3073],
         [0.1867, 0.1811, 0.1912,  ..., 0.1931, 0.2067, 0.2078],
         [0.4398, 0.1686, 0.1909,  ..., 0.1931, 0.2067, 0.2078],
         [0.1867, 0.2758, 0.2865,  ..., 0.2760, 0.2764, 0.2771]],
        [[0.3326, 0.3057, 0.3464,  ..., 0.3679, 0.3539, 0.3863],
         [0.1774, 0.1815, 0.1759,  ..., 0.1682, 0.1622, 0.1777],
         [0.1599, 0.1723, 0.1685,  ..., 0.1303, 0.1450, 0.1593],
         [0.3301, 0.3406, 0.3092,  ..., 0.3336, 0.3389, 0.2766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3141, 0.3220, 0.3326,  ..., 0.3427, 0.2372, 0.2571],
         [0.1975, 0.1979, 0.1968,  ..., 0.1927, 0.2148, 0.2144],
         [0.1975, 0.1979, 0.1953,  ..., 0.1927, 0.3130, 0.2418],
         [0.2908, 0.2823, 0.2753,  ..., 0.2720, 0.2349, 0.2867]],
        [[0.3431, 0.3546, 0.2989,  ..., 0.3365, 0.0420, 0.1557],
         [0.1804, 0.1742, 0.2072,  ..., 0.1928, 0.0420, 0.1557],
         [0.1653, 0.1721, 0.2072,  ..., 0.1872, 0.8740, 0.5328],
         [0.3112, 0.2992, 0.2866,  ..., 0.2835, 0.0420, 0.1557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:47,486 [Process: 0] Synchronize training processes
2024-08-19 13:08:47,487 [Process: 0] Evaluating...
2024-08-19 13:08:47,488 [Process: 0] EPOCH 14:
2024-08-19 13:08:47,490 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:48,461 [Process: 0] Synchronize training processes
2024-08-19 13:08:48,461 [Process: 0] Evaluating...
2024-08-19 13:08:48,463 [Process: 0] EPOCH 15:
2024-08-19 13:08:48,464 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0181, 0.3508, 0.3233,  ..., 0.3172, 0.2870, 0.2943],
         [0.0181, 0.1848, 0.1924,  ..., 0.2029, 0.2212, 0.2091],
         [0.9457, 0.1715, 0.1924,  ..., 0.2029, 0.2324, 0.2091],
         [0.0181, 0.2929, 0.2920,  ..., 0.2769, 0.2594, 0.2874]],
        [[0.3563, 0.4097, 0.4344,  ..., 0.4421, 0.3515, 0.3440],
         [0.1650, 0.1566, 0.1543,  ..., 0.1351, 0.1868, 0.1886],
         [0.1253, 0.1198, 0.1117,  ..., 0.1159, 0.1453, 0.1665],
         [0.3534, 0.3138, 0.2996,  ..., 0.3069, 0.3164, 0.3009]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3482, 0.3363, 0.3514,  ..., 0.4006, 0.2453, 0.2203],
         [0.1926, 0.1943, 0.1825,  ..., 0.1740, 0.2086, 0.2110],
         [0.1749, 0.1943, 0.1787,  ..., 0.1565, 0.2751, 0.3259],
         [0.2843, 0.2751, 0.2874,  ..., 0.2690, 0.2710, 0.2428]],
        [[0.3285, 0.3642, 0.3412,  ..., 0.3255, 0.1223, 0.1478],
         [0.1916, 0.1751, 0.1837,  ..., 0.1938, 0.1223, 0.1478],
         [0.1916, 0.1751, 0.1812,  ..., 0.1791, 0.6330, 0.5566],
         [0.2884, 0.2857, 0.2939,  ..., 0.3016, 0.1223, 0.1478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1479, 0.3858, 0.3559,  ..., 0.3872, 0.2105, 0.2228],
         [0.1479, 0.1827, 0.1846,  ..., 0.1760, 0.2105, 0.2228],
         [0.5564, 0.1827, 0.1760,  ..., 0.1691, 0.3450, 0.3316],
         [0.1479, 0.2487, 0.2834,  ..., 0.2677, 0.2340, 0.2228]],
        [[0.4234, 0.3599, 0.3624,  ..., 0.4690, 0.4193, 0.1901],
         [0.1442, 0.1687, 0.1719,  ..., 0.1468, 0.1534, 0.1907],
         [0.1054, 0.1369, 0.1533,  ..., 0.1102, 0.1099, 0.3769],
         [0.3271, 0.3345, 0.3124,  ..., 0.2739, 0.3173, 0.2424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3744, 0.3736, 0.3488,  ..., 0.4369, 0.2964, 0.3119],
         [0.1720, 0.1860, 0.1942,  ..., 0.1675, 0.2092, 0.2118],
         [0.1558, 0.1772, 0.1942,  ..., 0.1568, 0.2092, 0.2118],
         [0.2978, 0.2632, 0.2629,  ..., 0.2388, 0.2852, 0.2645]],
        [[0.3164, 0.3508, 0.3495,  ..., 0.2288, 0.1070, 0.1314],
         [0.2042, 0.1895, 0.1913,  ..., 0.2061, 0.1070, 0.1314],
         [0.2042, 0.1895, 0.1845,  ..., 0.3063, 0.6790, 0.6057],
         [0.2752, 0.2703, 0.2747,  ..., 0.2587, 0.1070, 0.1314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:49,437 [Process: 0] Synchronize training processes
2024-08-19 13:08:49,437 [Process: 0] Evaluating...
2024-08-19 13:08:49,439 [Process: 0] EPOCH 16:
2024-08-19 13:08:49,440 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:50,412 [Process: 0] Synchronize training processes
2024-08-19 13:08:50,413 [Process: 0] Evaluating...
2024-08-19 13:08:50,414 [Process: 0] EPOCH 17:
2024-08-19 13:08:50,416 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0617, 0.4095, 0.4303,  ..., 0.3357, 0.1347, 0.1543],
         [0.0617, 0.1857, 0.1712,  ..., 0.1977, 0.1347, 0.1543],
         [0.8148, 0.1659, 0.1520,  ..., 0.1977, 0.5958, 0.5372],
         [0.0617, 0.2390, 0.2464,  ..., 0.2690, 0.1347, 0.1543]],
        [[0.3380, 0.4078, 0.5465,  ..., 0.4909, 0.4623, 0.1554],
         [0.1750, 0.1657, 0.1393,  ..., 0.1488, 0.1570, 0.1554],
         [0.1289, 0.1323, 0.0865,  ..., 0.1297, 0.1394, 0.5339],
         [0.3582, 0.2941, 0.2277,  ..., 0.2306, 0.2413, 0.1554]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2681, 0.3427, 0.3821,  ..., 0.4138, 0.3323, 0.3528],
         [0.2041, 0.1957, 0.1830,  ..., 0.1684, 0.1972, 0.1850],
         [0.2321, 0.1957, 0.1829,  ..., 0.1521, 0.1972, 0.1675],
         [0.2957, 0.2659, 0.2521,  ..., 0.2657, 0.2733, 0.2947]],
        [[0.3506, 0.3612, 0.3495,  ..., 0.2931, 0.1300, 0.1549],
         [0.1771, 0.1792, 0.1854,  ..., 0.2051, 0.1300, 0.1549],
         [0.1636, 0.1626, 0.1833,  ..., 0.2051, 0.6101, 0.5353],
         [0.3087, 0.2971, 0.2818,  ..., 0.2967, 0.1300, 0.1549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0123, 0.4217, 0.4620,  ..., 0.4404, 0.1333, 0.1157],
         [0.0123, 0.1922, 0.1643,  ..., 0.1865, 0.1333, 0.1157],
         [0.9631, 0.1922, 0.1393,  ..., 0.1865, 0.6000, 0.6530],
         [0.0123, 0.1938, 0.2344,  ..., 0.1865, 0.1333, 0.1157]],
        [[0.2923, 0.3616, 0.4416,  ..., 0.5677, 0.4313, 0.1526],
         [0.1781, 0.1684, 0.1574,  ..., 0.1075, 0.1549, 0.1526],
         [0.1755, 0.1324, 0.1574,  ..., 0.0907, 0.1221, 0.5422],
         [0.3541, 0.3376, 0.2435,  ..., 0.2341, 0.2918, 0.1526]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2018, 0.3539, 0.3077,  ..., 0.3500, 0.3711, 0.4622],
         [0.2005, 0.1807, 0.1970,  ..., 0.1783, 0.1776, 0.1563],
         [0.3252, 0.1764, 0.1970,  ..., 0.1730, 0.1699, 0.1465],
         [0.2725, 0.2890, 0.2983,  ..., 0.2987, 0.2814, 0.2350]],
        [[0.3695, 0.3350, 0.3407,  ..., 0.2054, 0.1057, 0.1653],
         [0.1768, 0.1887, 0.1841,  ..., 0.2024, 0.1057, 0.1653],
         [0.1553, 0.1772, 0.1841,  ..., 0.3187, 0.6830, 0.5040],
         [0.2985, 0.2992, 0.2911,  ..., 0.2735, 0.1057, 0.1653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:51,389 [Process: 0] Synchronize training processes
2024-08-19 13:08:51,389 [Process: 0] Evaluating...
2024-08-19 13:08:51,391 [Process: 0] EPOCH 18:
2024-08-19 13:08:51,392 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:52,365 [Process: 0] Synchronize training processes
2024-08-19 13:08:52,365 [Process: 0] Evaluating...
2024-08-19 13:08:52,367 [Process: 0] EPOCH 19:
2024-08-19 13:08:52,369 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0357, 0.4013, 0.5039,  ..., 0.5053, 0.1411, 0.1415],
         [0.0357, 0.1756, 0.1654,  ..., 0.1556, 0.1411, 0.1415],
         [0.8928, 0.1756, 0.1654,  ..., 0.1556, 0.5766, 0.5754],
         [0.0357, 0.2475, 0.1654,  ..., 0.1835, 0.1411, 0.1415]],
        [[0.1759, 0.3543, 0.4964,  ..., 0.5587, 0.3132, 0.1808],
         [0.1759, 0.1526, 0.1308,  ..., 0.1055, 0.1783, 0.1808],
         [0.3398, 0.1128, 0.1098,  ..., 0.0697, 0.1516, 0.4291],
         [0.3084, 0.3803, 0.2629,  ..., 0.2662, 0.3570, 0.2094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2004, 0.4261, 0.5071,  ..., 0.5297, 0.3162, 0.3141],
         [0.2003, 0.1484, 0.1513,  ..., 0.1382, 0.1946, 0.1923],
         [0.3157, 0.1380, 0.1365,  ..., 0.1382, 0.1946, 0.1923],
         [0.2836, 0.2875, 0.2051,  ..., 0.1939, 0.2946, 0.3012]],
        [[0.4113, 0.3083, 0.3474,  ..., 0.2771, 0.1213, 0.1846],
         [0.1599, 0.1915, 0.1690,  ..., 0.2034, 0.1213, 0.1846],
         [0.1479, 0.1913, 0.1645,  ..., 0.2108, 0.6360, 0.4070],
         [0.2809, 0.3088, 0.3191,  ..., 0.3087, 0.1213, 0.2237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0569, 0.4117, 0.5720,  ..., 0.5445, 0.1281, 0.1420],
         [0.0569, 0.1961, 0.1301,  ..., 0.1450, 0.1281, 0.1420],
         [0.8292, 0.1961, 0.1301,  ..., 0.1450, 0.6158, 0.5741],
         [0.0569, 0.1961, 0.1679,  ..., 0.1655, 0.1281, 0.1420]],
        [[0.1706, 0.3397, 0.5745,  ..., 0.7093, 0.2820, 0.1611],
         [0.1706, 0.1643, 0.1068,  ..., 0.0969, 0.1833, 0.1611],
         [0.4043, 0.1306, 0.1007,  ..., 0.0969, 0.1790, 0.5168],
         [0.2545, 0.3654, 0.2180,  ..., 0.0969, 0.3557, 0.1611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2116, 0.3901, 0.3954,  ..., 0.5931, 0.3517, 0.2546],
         [0.1943, 0.1644, 0.1658,  ..., 0.1175, 0.1753, 0.2014],
         [0.2874, 0.1614, 0.1528,  ..., 0.1043, 0.1753, 0.2194],
         [0.3067, 0.2840, 0.2861,  ..., 0.1850, 0.2977, 0.3246]],
        [[0.4578, 0.3107, 0.3140,  ..., 0.2311, 0.0921, 0.0932],
         [0.1664, 0.1845, 0.1797,  ..., 0.2036, 0.0921, 0.0932],
         [0.1535, 0.1845, 0.1753,  ..., 0.2200, 0.7236, 0.7204],
         [0.2223, 0.3203, 0.3310,  ..., 0.3453, 0.0921, 0.0932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:08:53,341 [Process: 0] Synchronize training processes
2024-08-19 13:08:53,341 [Process: 0] Evaluating...
2024-08-19 13:08:53,343 [Process: 0] EPOCH 20:
2024-08-19 13:08:53,345 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:54,316 [Process: 0] Synchronize training processes
2024-08-19 13:08:54,316 [Process: 0] Evaluating...
2024-08-19 13:08:54,317 [Process: 0] EPOCH 21:
2024-08-19 13:08:54,319 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2338, 0.4771, 0.5051,  ..., 0.3413, 0.0826, 0.1380],
         [0.2338, 0.1597, 0.1563,  ..., 0.1853, 0.0826, 0.1380],
         [0.2985, 0.1597, 0.1462,  ..., 0.1853, 0.7521, 0.5859],
         [0.2338, 0.2035, 0.1924,  ..., 0.2881, 0.0826, 0.1380]],
        [[0.1675, 0.1958, 0.5854,  ..., 0.8319, 0.2285, 0.1275],
         [0.1675, 0.1645, 0.1382,  ..., 0.0670, 0.1628, 0.1275],
         [0.3972, 0.1094, 0.1382,  ..., 0.0328, 0.1058, 0.6119],
         [0.2677, 0.5303, 0.1382,  ..., 0.0683, 0.5028, 0.1331]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2491, 0.4416, 0.3141,  ..., 0.4881, 0.2895, 0.1940],
         [0.1996, 0.1492, 0.1723,  ..., 0.1440, 0.1826, 0.1845],
         [0.2062, 0.1434, 0.1691,  ..., 0.1293, 0.1823, 0.1998],
         [0.3451, 0.2657, 0.3445,  ..., 0.2385, 0.3457, 0.4217]],
        [[0.4400, 0.2697, 0.2797,  ..., 0.2347, 0.1830, 0.1218],
         [0.1708, 0.1797, 0.1764,  ..., 0.1891, 0.1830, 0.1218],
         [0.1474, 0.1630, 0.1764,  ..., 0.1931, 0.4511, 0.6347],
         [0.2418, 0.3876, 0.3675,  ..., 0.3831, 0.1830, 0.1218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1002, 0.3912, 0.4765,  ..., 0.4192, 0.0902, 0.1257],
         [0.1002, 0.1758, 0.1477,  ..., 0.1936, 0.0902, 0.1257],
         [0.6995, 0.1758, 0.1477,  ..., 0.1936, 0.7293, 0.6064],
         [0.1002, 0.2573, 0.2281,  ..., 0.1936, 0.0902, 0.1421]],
        [[0.1577, 0.1467, 0.8294,  ..., 0.9115, 0.2659, 0.0939],
         [0.1577, 0.1347, 0.0569,  ..., 0.0295, 0.1395, 0.0939],
         [0.3932, 0.1075, 0.0569,  ..., 0.0295, 0.0893, 0.7184],
         [0.2915, 0.6112, 0.0569,  ..., 0.0295, 0.5052, 0.0939]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2663, 0.4514, 0.3010,  ..., 0.4926, 0.3795, 0.2992],
         [0.1941, 0.1596, 0.1793,  ..., 0.1575, 0.1731, 0.1827],
         [0.1955, 0.1517, 0.1711,  ..., 0.1575, 0.1731, 0.1744],
         [0.3442, 0.2372, 0.3486,  ..., 0.1925, 0.2744, 0.3437]],
        [[0.3227, 0.1819, 0.3124,  ..., 0.1633, 0.0924, 0.0639],
         [0.1715, 0.1819, 0.1703,  ..., 0.1633, 0.0924, 0.0639],
         [0.1630, 0.4022, 0.1527,  ..., 0.5102, 0.7228, 0.8084],
         [0.3427, 0.2340, 0.3646,  ..., 0.1633, 0.0924, 0.0639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0076, 0.4323, 0.4287,  ..., 0.4617, 0.1248, 0.1237],
         [0.0076, 0.1742, 0.1636,  ..., 0.1436, 0.1248, 0.1237],
         [0.9771, 0.1216, 0.1636,  ..., 0.1388, 0.6255, 0.6289],
         [0.0076, 0.2719, 0.2441,  ..., 0.2559, 0.1248, 0.1237]],
        [[0.1841, 0.1322, 0.7926,  ..., 0.6804, 0.1628, 0.1541],
         [0.1841, 0.1562, 0.0691,  ..., 0.1008, 0.1607, 0.1541],
         [0.4358, 0.1284, 0.0691,  ..., 0.1008, 0.1351, 0.5376],
         [0.1960, 0.5832, 0.0691,  ..., 0.1181, 0.5413, 0.1541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:55,290 [Process: 0] Synchronize training processes
2024-08-19 13:08:55,291 [Process: 0] Evaluating...
2024-08-19 13:08:55,677 [Process: 0] EPOCH 22:
2024-08-19 13:08:55,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:56,649 [Process: 0] Synchronize training processes
2024-08-19 13:08:56,650 [Process: 0] Evaluating...
2024-08-19 13:08:56,651 [Process: 0] EPOCH 23:
2024-08-19 13:08:56,653 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2167, 0.2407, 0.2016,  ..., 0.3420, 0.2231, 0.2001],
         [0.1981, 0.1928, 0.1919,  ..., 0.1691, 0.1918, 0.1967],
         [0.2012, 0.1928, 0.1919,  ..., 0.1691, 0.2023, 0.1981],
         [0.3840, 0.3737, 0.4146,  ..., 0.3197, 0.3828, 0.4052]],
        [[0.3796, 0.2304, 0.3836,  ..., 0.4301, 0.0562, 0.1941],
         [0.1749, 0.1920, 0.1632,  ..., 0.1529, 0.0562, 0.1993],
         [0.1749, 0.1959, 0.1614,  ..., 0.1529, 0.8313, 0.2060],
         [0.2706, 0.3817, 0.2919,  ..., 0.2640, 0.0562, 0.4006]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0477, 0.5952, 0.5783,  ..., 0.5848, 0.1157, 0.1699],
         [0.0073, 0.1251, 0.1406,  ..., 0.1384, 0.1157, 0.1699],
         [0.9377, 0.1251, 0.1406,  ..., 0.1384, 0.6528, 0.4902],
         [0.0073, 0.1546, 0.1406,  ..., 0.1384, 0.1157, 0.1699]],
        [[0.1740, 0.2316, 0.5052,  ..., 0.8401, 0.2284, 0.1298],
         [0.1740, 0.1621, 0.0984,  ..., 0.0561, 0.1675, 0.1298],
         [0.2418, 0.1330, 0.0873,  ..., 0.0519, 0.1675, 0.6107],
         [0.4101, 0.4732, 0.3091,  ..., 0.0519, 0.4366, 0.1298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2001, 0.1939, 0.2001,  ..., 0.5145, 0.1989, 0.1994],
         [0.2001, 0.2017, 0.2001,  ..., 0.1381, 0.2004, 0.1994],
         [0.2438, 0.2142, 0.2001,  ..., 0.1381, 0.2133, 0.1994],
         [0.3561, 0.3903, 0.3997,  ..., 0.2092, 0.3875, 0.4019]],
        [[0.4443, 0.3255, 0.4325,  ..., 0.4087, 0.0769, 0.2846],
         [0.1488, 0.1735, 0.1526,  ..., 0.1573, 0.0769, 0.1755],
         [0.1488, 0.1674, 0.1416,  ..., 0.1493, 0.7694, 0.1575],
         [0.2581, 0.3336, 0.2733,  ..., 0.2847, 0.0769, 0.3825]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:57,623 [Process: 0] Synchronize training processes
2024-08-19 13:08:57,623 [Process: 0] Evaluating...
2024-08-19 13:08:57,625 [Process: 0] EPOCH 24:
2024-08-19 13:08:57,627 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:08:58,601 [Process: 0] Synchronize training processes
2024-08-19 13:08:58,601 [Process: 0] Evaluating...
2024-08-19 13:08:58,603 [Process: 0] EPOCH 25:
2024-08-19 13:08:58,604 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6813, 0.4343, 0.4114,  ..., 0.4651, 0.0839, 0.1464],
         [0.0062, 0.1617, 0.1624,  ..., 0.1783, 0.0839, 0.1524],
         [0.3062, 0.1617, 0.1624,  ..., 0.1783, 0.7483, 0.5547],
         [0.0062, 0.2423, 0.2639,  ..., 0.1783, 0.0839, 0.1464]],
        [[0.1488, 0.1505, 0.7804,  ..., 0.8107, 0.1260, 0.1280],
         [0.1488, 0.1604, 0.0803,  ..., 0.0607, 0.1037, 0.1280],
         [0.1488, 0.1319, 0.0696,  ..., 0.0607, 0.0722, 0.6159],
         [0.5535, 0.5572, 0.0696,  ..., 0.0680, 0.6981, 0.1280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2074, 0.1808, 0.1862,  ..., 0.5462, 0.4330, 0.1888],
         [0.2056, 0.1883, 0.1862,  ..., 0.1411, 0.1582, 0.1978],
         [0.1952, 0.1924, 0.2040,  ..., 0.1411, 0.1526, 0.1888],
         [0.3918, 0.4385, 0.4235,  ..., 0.1716, 0.2562, 0.4247]],
        [[0.1897, 0.1840, 0.2301,  ..., 0.2588, 0.0515, 0.1929],
         [0.1934, 0.1888, 0.1984,  ..., 0.1804, 0.0515, 0.2015],
         [0.1897, 0.1839, 0.1789,  ..., 0.1716, 0.8456, 0.2114],
         [0.4272, 0.4433, 0.3927,  ..., 0.3892, 0.0515, 0.3942]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0105, 0.2252, 0.5626,  ..., 0.5329, 0.1020, 0.1176],
         [0.0040, 0.2020, 0.1458,  ..., 0.1374, 0.1020, 0.1176],
         [0.9815, 0.2007, 0.1458,  ..., 0.1254, 0.6940, 0.6473],
         [0.0040, 0.3721, 0.1458,  ..., 0.2043, 0.1020, 0.1176]],
        [[0.1720, 0.1165, 0.8346,  ..., 0.8391, 0.0770, 0.0634],
         [0.1720, 0.1479, 0.0540,  ..., 0.0536, 0.0983, 0.0634],
         [0.4840, 0.0892, 0.0520,  ..., 0.0536, 0.0701, 0.8099],
         [0.1720, 0.6464, 0.0594,  ..., 0.0536, 0.7546, 0.0634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1917, 0.1743, 0.1929,  ..., 0.7940, 0.5024, 0.1846],
         [0.1917, 0.1743, 0.1836,  ..., 0.0687, 0.1603, 0.1866],
         [0.3078, 0.1743, 0.1760,  ..., 0.0687, 0.1603, 0.1773],
         [0.3088, 0.4772, 0.4475,  ..., 0.0687, 0.1771, 0.4516]],
        [[0.1831, 0.1756, 0.1709,  ..., 0.1801, 0.0956, 0.1964],
         [0.1838, 0.1785, 0.1644,  ..., 0.1598, 0.0956, 0.2011],
         [0.1717, 0.1889, 0.1486,  ..., 0.1484, 0.7131, 0.2274],
         [0.4614, 0.4570, 0.5161,  ..., 0.5117, 0.0956, 0.3752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:08:59,570 [Process: 0] Synchronize training processes
2024-08-19 13:08:59,570 [Process: 0] Evaluating...
2024-08-19 13:08:59,572 [Process: 0] EPOCH 26:
2024-08-19 13:08:59,574 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:00,550 [Process: 0] Synchronize training processes
2024-08-19 13:09:00,550 [Process: 0] Evaluating...
2024-08-19 13:09:00,552 [Process: 0] EPOCH 27:
2024-08-19 13:09:00,554 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0013, 0.2701, 0.3750,  ..., 0.7098, 0.1267, 0.1289],
         [0.0013, 0.1922, 0.1794,  ..., 0.0967, 0.1267, 0.1289],
         [0.9961, 0.1922, 0.1794,  ..., 0.0967, 0.6198, 0.6133],
         [0.0013, 0.3456, 0.2661,  ..., 0.0967, 0.1267, 0.1289]],
        [[0.1493, 0.1262, 0.6614,  ..., 0.8456, 0.0860, 0.0954],
         [0.1493, 0.1163, 0.0800,  ..., 0.0515, 0.0934, 0.0954],
         [0.5521, 0.0835, 0.0800,  ..., 0.0515, 0.0860, 0.7139],
         [0.1493, 0.6739, 0.1786,  ..., 0.0515, 0.7345, 0.0954]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1918, 0.1685, 0.1950,  ..., 0.9163, 0.4768, 0.2513],
         [0.1918, 0.1623, 0.1822,  ..., 0.0279, 0.1575, 0.1797],
         [0.3203, 0.1623, 0.1705,  ..., 0.0279, 0.1575, 0.1579],
         [0.2961, 0.5069, 0.4523,  ..., 0.0279, 0.2081, 0.4111]],
        [[0.2070, 0.1571, 0.1653,  ..., 0.1809, 0.0785, 0.1939],
         [0.1605, 0.1564, 0.1653,  ..., 0.1836, 0.0785, 0.1939],
         [0.1507, 0.1526, 0.1653,  ..., 0.1653, 0.7644, 0.2563],
         [0.4817, 0.5340, 0.5042,  ..., 0.4702, 0.0785, 0.3558]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0125, 0.1955, 0.7875,  ..., 0.7076, 0.1212, 0.1193],
         [0.0077, 0.1953, 0.0708,  ..., 0.0975, 0.1212, 0.1193],
         [0.9722, 0.1932, 0.0708,  ..., 0.0975, 0.6364, 0.6421],
         [0.0077, 0.4161, 0.0708,  ..., 0.0975, 0.1212, 0.1193]],
        [[0.1425, 0.0973, 0.7329,  ..., 0.7231, 0.1052, 0.0843],
         [0.1425, 0.1118, 0.0890,  ..., 0.1209, 0.1337, 0.0843],
         [0.5725, 0.0804, 0.0890,  ..., 0.0720, 0.1034, 0.7471],
         [0.1425, 0.7104, 0.0890,  ..., 0.0840, 0.6577, 0.0843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1817, 0.1606, 0.1644,  ..., 0.6540, 0.3686, 0.1751],
         [0.1817, 0.1606, 0.1644,  ..., 0.1153, 0.1569, 0.1826],
         [0.3647, 0.1606, 0.1794,  ..., 0.1153, 0.1308, 0.2064],
         [0.2719, 0.5181, 0.4918,  ..., 0.1153, 0.3437, 0.4359]],
        [[0.1438, 0.1727, 0.1662,  ..., 0.1842, 0.1317, 0.1769],
         [0.1438, 0.1625, 0.1666,  ..., 0.1842, 0.1317, 0.1769],
         [0.1438, 0.1616, 0.1662,  ..., 0.1942, 0.6049, 0.4693],
         [0.5686, 0.5032, 0.5011,  ..., 0.4375, 0.1317, 0.1769]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:01,525 [Process: 0] Synchronize training processes
2024-08-19 13:09:01,525 [Process: 0] Evaluating...
2024-08-19 13:09:01,527 [Process: 0] EPOCH 28:
2024-08-19 13:09:01,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:02,502 [Process: 0] Synchronize training processes
2024-08-19 13:09:02,502 [Process: 0] Evaluating...
2024-08-19 13:09:02,504 [Process: 0] EPOCH 29:
2024-08-19 13:09:02,505 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0821, 0.1570, 0.6881,  ..., 0.7144, 0.1577, 0.1516],
         [0.0821, 0.1609, 0.1049,  ..., 0.1005, 0.1577, 0.1516],
         [0.7538, 0.1613, 0.1035,  ..., 0.0926, 0.3949, 0.5420],
         [0.0821, 0.5209, 0.1035,  ..., 0.0926, 0.2897, 0.1547]],
        [[0.0952, 0.0664, 0.7518,  ..., 0.8173, 0.0533, 0.0889],
         [0.0952, 0.0682, 0.0827,  ..., 0.0657, 0.0642, 0.0889],
         [0.7143, 0.0664, 0.0827,  ..., 0.0585, 0.0533, 0.7012],
         [0.0952, 0.7990, 0.0827,  ..., 0.0585, 0.8291, 0.1210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1598, 0.1966, 0.1591,  ..., 0.3222, 0.6080, 0.1684],
         [0.1598, 0.1601, 0.1591,  ..., 0.1730, 0.1307, 0.1558],
         [0.4382, 0.1468, 0.1591,  ..., 0.1661, 0.1307, 0.1558],
         [0.2423, 0.4964, 0.5228,  ..., 0.3386, 0.1307, 0.5200]],
        [[0.1356, 0.1464, 0.1834,  ..., 0.1689, 0.0706, 0.1831],
         [0.1383, 0.1464, 0.1814,  ..., 0.1689, 0.0706, 0.1831],
         [0.1356, 0.1464, 0.1832,  ..., 0.1689, 0.7882, 0.4493],
         [0.5906, 0.5607, 0.4519,  ..., 0.4932, 0.0706, 0.1846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0326, 0.1984, 0.7964,  ..., 0.8132, 0.1465, 0.1129],
         [0.0294, 0.1984, 0.0679,  ..., 0.0732, 0.1465, 0.1129],
         [0.9087, 0.2366, 0.0679,  ..., 0.0568, 0.5265, 0.6613],
         [0.0294, 0.3665, 0.0679,  ..., 0.0568, 0.1804, 0.1129]],
        [[0.0959, 0.0934, 0.8310,  ..., 0.8160, 0.0525, 0.0847],
         [0.1028, 0.0996, 0.0563,  ..., 0.0691, 0.0525, 0.0847],
         [0.7053, 0.0651, 0.0563,  ..., 0.0574, 0.0525, 0.7459],
         [0.0959, 0.7419, 0.0563,  ..., 0.0574, 0.8424, 0.0847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1720, 0.1738, 0.1628,  ..., 0.8067, 0.6168, 0.1339],
         [0.1720, 0.1796, 0.1628,  ..., 0.0644, 0.1277, 0.1339],
         [0.2502, 0.2107, 0.2134,  ..., 0.0644, 0.1277, 0.1339],
         [0.4058, 0.4358, 0.4609,  ..., 0.0644, 0.1277, 0.5984]],
        [[0.1328, 0.1604, 0.1365,  ..., 0.1741, 0.0463, 0.1402],
         [0.1431, 0.1604, 0.1365,  ..., 0.1741, 0.0463, 0.1402],
         [0.1328, 0.1811, 0.1453,  ..., 0.2750, 0.8610, 0.5735],
         [0.5914, 0.4982, 0.5817,  ..., 0.3768, 0.0463, 0.1462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:03,475 [Process: 0] Synchronize training processes
2024-08-19 13:09:03,475 [Process: 0] Evaluating...
2024-08-19 13:09:03,477 [Process: 0] EPOCH 30:
2024-08-19 13:09:03,479 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:04,450 [Process: 0] Synchronize training processes
2024-08-19 13:09:04,451 [Process: 0] Evaluating...
2024-08-19 13:09:04,452 [Process: 0] EPOCH 31:
2024-08-19 13:09:04,454 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0140, 0.2263, 0.7538,  ..., 0.8261, 0.1135, 0.0947],
         [0.0140, 0.2017, 0.0821,  ..., 0.0580, 0.1135, 0.0947],
         [0.9581, 0.2017, 0.0821,  ..., 0.0580, 0.6309, 0.7077],
         [0.0140, 0.3702, 0.0821,  ..., 0.0580, 0.1421, 0.1029]],
        [[0.1202, 0.0701, 0.8351,  ..., 0.8077, 0.0355, 0.0891],
         [0.1202, 0.0842, 0.0550,  ..., 0.0645, 0.0358, 0.0891],
         [0.6030, 0.0701, 0.0550,  ..., 0.0639, 0.0355, 0.6895],
         [0.1565, 0.7756, 0.0550,  ..., 0.0639, 0.8932, 0.1323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2670, 0.1535, 0.1369,  ..., 0.2773, 0.6260, 0.1593],
         [0.1683, 0.1535, 0.1369,  ..., 0.2128, 0.1247, 0.1593],
         [0.1663, 0.1563, 0.1369,  ..., 0.2128, 0.1247, 0.1593],
         [0.3984, 0.5366, 0.5893,  ..., 0.2971, 0.1247, 0.5221]],
        [[0.1361, 0.1458, 0.1585,  ..., 0.1626, 0.0221, 0.1152],
         [0.1361, 0.1458, 0.1615,  ..., 0.1626, 0.0221, 0.1152],
         [0.1361, 0.1500, 0.1615,  ..., 0.1754, 0.9338, 0.6544],
         [0.5916, 0.5583, 0.5186,  ..., 0.4993, 0.0221, 0.1152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0336, 0.3949, 0.5554,  ..., 0.7916, 0.1036, 0.0983],
         [0.0336, 0.2017, 0.1482,  ..., 0.0695, 0.1036, 0.0983],
         [0.8992, 0.2017, 0.1482,  ..., 0.0695, 0.6892, 0.7050],
         [0.0336, 0.2017, 0.1482,  ..., 0.0695, 0.1036, 0.0983]],
        [[0.1075, 0.0479, 0.6322,  ..., 0.7496, 0.0830, 0.1295],
         [0.1075, 0.0530, 0.1226,  ..., 0.0835, 0.0830, 0.1295],
         [0.6775, 0.0479, 0.1226,  ..., 0.0835, 0.0830, 0.6114],
         [0.1075, 0.8512, 0.1226,  ..., 0.0835, 0.7511, 0.1295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2153, 0.1251, 0.1206,  ..., 0.2333, 0.6938, 0.1362],
         [0.1774, 0.1259, 0.1206,  ..., 0.2333, 0.1021, 0.1362],
         [0.1774, 0.1251, 0.1206,  ..., 0.2384, 0.1021, 0.1362],
         [0.4298, 0.6239, 0.6382,  ..., 0.2951, 0.1021, 0.5915]],
        [[0.1376, 0.1363, 0.1414,  ..., 0.1648, 0.0346, 0.1313],
         [0.1376, 0.1363, 0.1414,  ..., 0.1648, 0.0346, 0.1313],
         [0.1376, 0.1363, 0.1414,  ..., 0.2225, 0.8962, 0.6061],
         [0.5873, 0.5911, 0.5757,  ..., 0.4480, 0.0346, 0.1313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:09:05,426 [Process: 0] Synchronize training processes
2024-08-19 13:09:05,426 [Process: 0] Evaluating...
2024-08-19 13:09:05,812 [Process: 0] EPOCH 32:
2024-08-19 13:09:05,816 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:06,788 [Process: 0] Synchronize training processes
2024-08-19 13:09:06,788 [Process: 0] Evaluating...
2024-08-19 13:09:06,790 [Process: 0] EPOCH 33:
2024-08-19 13:09:06,792 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0121, 0.2393, 0.3406,  ..., 0.8669, 0.1108, 0.1626],
         [0.0121, 0.1860, 0.1745,  ..., 0.0444, 0.1108, 0.1626],
         [0.9638, 0.1860, 0.1743,  ..., 0.0444, 0.6675, 0.4635],
         [0.0121, 0.3888, 0.3106,  ..., 0.0444, 0.1108, 0.2112]],
        [[0.0908, 0.1397, 0.9425,  ..., 0.6595, 0.0675, 0.0664],
         [0.0908, 0.1245, 0.0192,  ..., 0.1135, 0.0675, 0.0664],
         [0.7277, 0.0987, 0.0192,  ..., 0.1135, 0.0675, 0.8007],
         [0.0908, 0.6371, 0.0192,  ..., 0.1135, 0.7975, 0.0664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3320, 0.1654, 0.1509,  ..., 0.1874, 0.8215, 0.1062],
         [0.1842, 0.1654, 0.1511,  ..., 0.1874, 0.0632, 0.1062],
         [0.1842, 0.1921, 0.1509,  ..., 0.3999, 0.0577, 0.1062],
         [0.2997, 0.4770, 0.5470,  ..., 0.2253, 0.0577, 0.6815]],
        [[0.1575, 0.4935, 0.1339,  ..., 0.1917, 0.0868, 0.1776],
         [0.1575, 0.1516, 0.1339,  ..., 0.1917, 0.0868, 0.1776],
         [0.1575, 0.1516, 0.1339,  ..., 0.1960, 0.7395, 0.4502],
         [0.5275, 0.2033, 0.5982,  ..., 0.4205, 0.0868, 0.1945]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0932, 0.2237, 0.2268,  ..., 0.6973, 0.1189, 0.0942],
         [0.0932, 0.2013, 0.2028,  ..., 0.1009, 0.1189, 0.0962],
         [0.7203, 0.2013, 0.1601,  ..., 0.1009, 0.6433, 0.7154],
         [0.0932, 0.3737, 0.4103,  ..., 0.1009, 0.1189, 0.0942]],
        [[0.1201, 0.0933, 0.8840,  ..., 0.8925, 0.0883, 0.0644],
         [0.1201, 0.1112, 0.0387,  ..., 0.0358, 0.0956, 0.0644],
         [0.6398, 0.0933, 0.0387,  ..., 0.0358, 0.0883, 0.8067],
         [0.1201, 0.7023, 0.0387,  ..., 0.0358, 0.7278, 0.0644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6848, 0.1690, 0.1652,  ..., 0.4428, 0.8475, 0.1399],
         [0.1051, 0.1690, 0.1722,  ..., 0.1677, 0.0508, 0.1399],
         [0.1051, 0.2134, 0.1933,  ..., 0.1677, 0.0508, 0.1399],
         [0.1051, 0.4487, 0.4694,  ..., 0.2218, 0.0508, 0.5802]],
        [[0.1166, 0.1387, 0.0989,  ..., 0.1917, 0.0723, 0.1772],
         [0.1166, 0.1305, 0.0989,  ..., 0.1917, 0.0723, 0.1772],
         [0.1166, 0.1305, 0.0989,  ..., 0.2680, 0.7830, 0.4259],
         [0.6501, 0.6004, 0.7033,  ..., 0.3487, 0.0723, 0.2196]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:07,761 [Process: 0] Synchronize training processes
2024-08-19 13:09:07,762 [Process: 0] Evaluating...
2024-08-19 13:09:07,763 [Process: 0] EPOCH 34:
2024-08-19 13:09:07,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:08,736 [Process: 0] Synchronize training processes
2024-08-19 13:09:08,736 [Process: 0] Evaluating...
2024-08-19 13:09:08,738 [Process: 0] EPOCH 35:
2024-08-19 13:09:08,740 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0551, 0.4981, 0.6615,  ..., 0.9106, 0.1078, 0.0841],
         [0.0445, 0.1436, 0.1106,  ..., 0.0298, 0.1078, 0.0841],
         [0.8559, 0.1436, 0.1061,  ..., 0.0298, 0.6765, 0.7477],
         [0.0445, 0.2147, 0.1217,  ..., 0.0298, 0.1078, 0.0841]],
        [[0.0996, 0.0605, 0.7792,  ..., 0.9099, 0.0527, 0.0670],
         [0.0996, 0.0754, 0.0736,  ..., 0.0300, 0.0527, 0.0670],
         [0.7012, 0.0605, 0.0736,  ..., 0.0300, 0.0527, 0.7990],
         [0.0996, 0.8036, 0.0736,  ..., 0.0300, 0.8418, 0.0670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8517, 0.1639, 0.1495,  ..., 0.2803, 0.5114, 0.1444],
         [0.0494, 0.1639, 0.1495,  ..., 0.2275, 0.1473, 0.1444],
         [0.0494, 0.2133, 0.1671,  ..., 0.2594, 0.1473, 0.1444],
         [0.0494, 0.4589, 0.5340,  ..., 0.2328, 0.1940, 0.5668]],
        [[0.1477, 0.0746, 0.1147,  ..., 0.1517, 0.0813, 0.1242],
         [0.1477, 0.0746, 0.1147,  ..., 0.1517, 0.0813, 0.1242],
         [0.1477, 0.0746, 0.1147,  ..., 0.1517, 0.7562, 0.6274],
         [0.5569, 0.7762, 0.6560,  ..., 0.5448, 0.0813, 0.1242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0172, 0.4836, 0.7759,  ..., 0.9118, 0.0717, 0.0984],
         [0.0145, 0.1416, 0.0747,  ..., 0.0294, 0.0717, 0.0984],
         [0.9538, 0.1242, 0.0747,  ..., 0.0294, 0.7848, 0.7048],
         [0.0145, 0.2506, 0.0747,  ..., 0.0294, 0.0717, 0.0984]],
        [[0.0908, 0.1791, 0.8423,  ..., 0.6825, 0.1175, 0.0604],
         [0.0908, 0.1791, 0.0526,  ..., 0.1058, 0.1175, 0.0604],
         [0.7276, 0.1791, 0.0526,  ..., 0.1058, 0.1175, 0.8188],
         [0.0908, 0.4626, 0.0526,  ..., 0.1058, 0.6474, 0.0604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8611, 0.2081, 0.1498,  ..., 0.5384, 0.1375, 0.1350],
         [0.0463, 0.1510, 0.1498,  ..., 0.1539, 0.1375, 0.1350],
         [0.0463, 0.1510, 0.1498,  ..., 0.1539, 0.1375, 0.1350],
         [0.0463, 0.4900, 0.5505,  ..., 0.1539, 0.5874, 0.5951]],
        [[0.3117, 0.1107, 0.1373,  ..., 0.1269, 0.0779, 0.0245],
         [0.1552, 0.1107, 0.1373,  ..., 0.1269, 0.0779, 0.0245],
         [0.1552, 0.1107, 0.1373,  ..., 0.6193, 0.7662, 0.9265],
         [0.3779, 0.6679, 0.5881,  ..., 0.1269, 0.0779, 0.0245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:09,710 [Process: 0] Synchronize training processes
2024-08-19 13:09:09,711 [Process: 0] Evaluating...
2024-08-19 13:09:09,712 [Process: 0] EPOCH 36:
2024-08-19 13:09:09,714 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:10,684 [Process: 0] Synchronize training processes
2024-08-19 13:09:10,684 [Process: 0] Evaluating...
2024-08-19 13:09:10,686 [Process: 0] EPOCH 37:
2024-08-19 13:09:10,688 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0366, 0.1521, 0.2341,  ..., 0.9347, 0.0659, 0.1283],
         [0.0366, 0.1843, 0.1737,  ..., 0.0218, 0.0659, 0.1283],
         [0.8903, 0.1521, 0.1722,  ..., 0.0218, 0.8022, 0.6151],
         [0.0366, 0.5116, 0.4201,  ..., 0.0218, 0.0659, 0.1283]],
        [[0.1616, 0.0400, 0.8257,  ..., 0.8288, 0.0629, 0.0624],
         [0.1616, 0.0505, 0.0581,  ..., 0.0571, 0.0846, 0.0624],
         [0.3790, 0.0400, 0.0581,  ..., 0.0571, 0.0629, 0.8129],
         [0.2979, 0.8695, 0.0581,  ..., 0.0571, 0.7895, 0.0624]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8147, 0.1232, 0.1634,  ..., 0.7604, 0.2054, 0.2281],
         [0.0618, 0.1232, 0.1634,  ..., 0.0799, 0.1653, 0.2061],
         [0.0618, 0.1232, 0.1634,  ..., 0.0799, 0.1653, 0.2297],
         [0.0618, 0.6305, 0.5099,  ..., 0.0799, 0.4640, 0.3362]],
        [[0.7515, 0.1595, 0.5731,  ..., 0.1325, 0.1016, 0.1064],
         [0.0828, 0.1595, 0.1284,  ..., 0.1325, 0.1016, 0.1064],
         [0.0828, 0.1595, 0.1284,  ..., 0.1325, 0.6951, 0.1064],
         [0.0828, 0.5214, 0.1700,  ..., 0.6025, 0.1016, 0.6809]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0089, 0.3476, 0.6292,  ..., 0.9260, 0.0659, 0.0924],
         [0.0089, 0.1867, 0.1236,  ..., 0.0247, 0.0659, 0.0924],
         [0.9733, 0.1867, 0.1236,  ..., 0.0247, 0.8024, 0.7227],
         [0.0089, 0.2791, 0.1236,  ..., 0.0247, 0.0659, 0.0924]],
        [[0.1037, 0.1077, 0.9229,  ..., 0.8195, 0.0866, 0.0585],
         [0.1037, 0.1279, 0.0293,  ..., 0.0631, 0.1113, 0.0585],
         [0.6889, 0.1077, 0.0239,  ..., 0.0587, 0.0866, 0.8245],
         [0.1037, 0.6566, 0.0239,  ..., 0.0587, 0.7155, 0.0585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6692, 0.1308, 0.1190,  ..., 0.7309, 0.5616, 0.1353],
         [0.1103, 0.1308, 0.1208,  ..., 0.0777, 0.1396, 0.1353],
         [0.1103, 0.1308, 0.1190,  ..., 0.1137, 0.1396, 0.1353],
         [0.1103, 0.6077, 0.6412,  ..., 0.0777, 0.1593, 0.5940]],
        [[0.4829, 0.1730, 0.5318,  ..., 0.1723, 0.0750, 0.1367],
         [0.1540, 0.1730, 0.1528,  ..., 0.1723, 0.0750, 0.1367],
         [0.1540, 0.1730, 0.1528,  ..., 0.1723, 0.7750, 0.1367],
         [0.2091, 0.4810, 0.1626,  ..., 0.4831, 0.0750, 0.5900]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:11,657 [Process: 0] Synchronize training processes
2024-08-19 13:09:11,658 [Process: 0] Evaluating...
2024-08-19 13:09:11,659 [Process: 0] EPOCH 38:
2024-08-19 13:09:11,661 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:12,632 [Process: 0] Synchronize training processes
2024-08-19 13:09:12,632 [Process: 0] Evaluating...
2024-08-19 13:09:12,634 [Process: 0] EPOCH 39:
2024-08-19 13:09:12,635 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0132, 0.3175, 0.3182,  ..., 0.8255, 0.0908, 0.0936],
         [0.0132, 0.1999, 0.1947,  ..., 0.0582, 0.0908, 0.0936],
         [0.9605, 0.1589, 0.1947,  ..., 0.0582, 0.7276, 0.7192],
         [0.0132, 0.3236, 0.2925,  ..., 0.0582, 0.0908, 0.0936]],
        [[0.0917, 0.0839, 0.9414,  ..., 0.6246, 0.1147, 0.0987],
         [0.0917, 0.1385, 0.0195,  ..., 0.1156, 0.1442, 0.0987],
         [0.7248, 0.0839, 0.0195,  ..., 0.1057, 0.1147, 0.7040],
         [0.0917, 0.6937, 0.0195,  ..., 0.1541, 0.6263, 0.0987]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9077, 0.1058, 0.1284,  ..., 0.4475, 0.8547, 0.1296],
         [0.0308, 0.1109, 0.1388,  ..., 0.1245, 0.0484, 0.1340],
         [0.0308, 0.1058, 0.1284,  ..., 0.3035, 0.0484, 0.1296],
         [0.0308, 0.6776, 0.6044,  ..., 0.1245, 0.0484, 0.6068]],
        [[0.7189, 0.1326, 0.1800,  ..., 0.1398, 0.0595, 0.1375],
         [0.0937, 0.1378, 0.1583,  ..., 0.1437, 0.0595, 0.1402],
         [0.0937, 0.1326, 0.1583,  ..., 0.1398, 0.8215, 0.1375],
         [0.0937, 0.5971, 0.5034,  ..., 0.5767, 0.0595, 0.5848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0181, 0.2521, 0.3544,  ..., 0.9614, 0.1124, 0.1415],
         [0.0181, 0.2176, 0.1982,  ..., 0.0129, 0.1124, 0.1415],
         [0.9457, 0.1609, 0.1596,  ..., 0.0129, 0.6628, 0.5754],
         [0.0181, 0.3694, 0.2878,  ..., 0.0129, 0.1124, 0.1415]],
        [[0.1272, 0.0386, 0.8211,  ..., 0.8019, 0.0680, 0.0707],
         [0.1272, 0.0514, 0.0596,  ..., 0.0660, 0.0917, 0.0707],
         [0.5607, 0.0386, 0.0596,  ..., 0.0660, 0.0680, 0.7872],
         [0.1849, 0.8715, 0.0596,  ..., 0.0660, 0.7723, 0.0713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8732, 0.1354, 0.1018,  ..., 0.6172, 0.8785, 0.1411],
         [0.0423, 0.1448, 0.1018,  ..., 0.1198, 0.0405, 0.1432],
         [0.0423, 0.1354, 0.1018,  ..., 0.1432, 0.0405, 0.1411],
         [0.0423, 0.5844, 0.6946,  ..., 0.1198, 0.0405, 0.5747]],
        [[0.8305, 0.1052, 0.1976,  ..., 0.1424, 0.0235, 0.1976],
         [0.0565, 0.1167, 0.1717,  ..., 0.1424, 0.0235, 0.1976],
         [0.0565, 0.1052, 0.1565,  ..., 0.1424, 0.9296, 0.3786],
         [0.0565, 0.6728, 0.4743,  ..., 0.5728, 0.0235, 0.2262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:13,606 [Process: 0] Synchronize training processes
2024-08-19 13:09:13,606 [Process: 0] Evaluating...
2024-08-19 13:09:13,608 [Process: 0] EPOCH 40:
2024-08-19 13:09:13,610 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:14,580 [Process: 0] Synchronize training processes
2024-08-19 13:09:14,581 [Process: 0] Evaluating...
2024-08-19 13:09:14,582 [Process: 0] EPOCH 41:
2024-08-19 13:09:14,584 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1809, 0.1509, 0.1971,  ..., 0.8769, 0.0697, 0.1237],
         [0.1332, 0.2042, 0.2381,  ..., 0.0410, 0.0697, 0.1237],
         [0.5528, 0.1509, 0.1664,  ..., 0.0410, 0.7802, 0.6289],
         [0.1332, 0.4940, 0.3983,  ..., 0.0410, 0.0803, 0.1237]],
        [[0.1179, 0.1206, 0.9593,  ..., 0.9401, 0.0671, 0.1349],
         [0.1179, 0.2121, 0.0136,  ..., 0.0200, 0.1237, 0.1349],
         [0.6279, 0.1206, 0.0136,  ..., 0.0200, 0.0671, 0.5902],
         [0.1363, 0.5468, 0.0136,  ..., 0.0200, 0.7421, 0.1400]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2719, 0.1595, 0.1493,  ..., 0.1102, 0.1261, 0.1096],
         [0.2412, 0.1767, 0.1493,  ..., 0.1102, 0.1261, 0.1312],
         [0.2458, 0.1595, 0.3272,  ..., 0.6562, 0.5928, 0.1096],
         [0.2412, 0.5043, 0.3743,  ..., 0.1234, 0.1550, 0.6496]],
        [[0.8545, 0.2796, 0.0730,  ..., 0.1281, 0.0550, 0.1187],
         [0.0485, 0.2013, 0.1193,  ..., 0.1281, 0.0550, 0.1187],
         [0.0485, 0.1640, 0.0730,  ..., 0.1281, 0.8351, 0.6440],
         [0.0485, 0.3552, 0.7347,  ..., 0.6156, 0.0550, 0.1187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2901, 0.1606, 0.8790,  ..., 0.8571, 0.0554, 0.0675],
         [0.1878, 0.2228, 0.0403,  ..., 0.0476, 0.0554, 0.0675],
         [0.3247, 0.1606, 0.0403,  ..., 0.0476, 0.8339, 0.7975],
         [0.1973, 0.4560, 0.0403,  ..., 0.0476, 0.0554, 0.0675]],
        [[0.0896, 0.1367, 0.7836,  ..., 0.9059, 0.1103, 0.0875],
         [0.0896, 0.1367, 0.1066,  ..., 0.0314, 0.1468, 0.0875],
         [0.7312, 0.1684, 0.0549,  ..., 0.0314, 0.1103, 0.7376],
         [0.0896, 0.5582, 0.0549,  ..., 0.0314, 0.6325, 0.0875]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9164, 0.1477, 0.1131,  ..., 0.4625, 0.4645, 0.1248],
         [0.0279, 0.1477, 0.1207,  ..., 0.1729, 0.1756, 0.1248],
         [0.0279, 0.1477, 0.1131,  ..., 0.1916, 0.1756, 0.1248],
         [0.0279, 0.5569, 0.6531,  ..., 0.1729, 0.1844, 0.6256]],
        [[0.7885, 0.2025, 0.1501,  ..., 0.1251, 0.0446, 0.0745],
         [0.0733, 0.2014, 0.1501,  ..., 0.1251, 0.0266, 0.0745],
         [0.0691, 0.2014, 0.1501,  ..., 0.5874, 0.9022, 0.7765],
         [0.0691, 0.3947, 0.5496,  ..., 0.1625, 0.0266, 0.0745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:15,555 [Process: 0] Synchronize training processes
2024-08-19 13:09:15,555 [Process: 0] Evaluating...
2024-08-19 13:09:15,940 [Process: 0] EPOCH 42:
2024-08-19 13:09:15,943 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:16,917 [Process: 0] Synchronize training processes
2024-08-19 13:09:16,917 [Process: 0] Evaluating...
2024-08-19 13:09:16,919 [Process: 0] EPOCH 43:
2024-08-19 13:09:16,921 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1118, 0.1653, 0.1505,  ..., 0.8961, 0.0618, 0.0965],
         [0.1118, 0.1967, 0.2059,  ..., 0.0346, 0.0546, 0.0965],
         [0.6645, 0.1653, 0.1505,  ..., 0.0346, 0.8291, 0.7104],
         [0.1118, 0.4727, 0.4932,  ..., 0.0346, 0.0546, 0.0965]],
        [[0.1222, 0.0791, 0.9620,  ..., 0.7893, 0.1085, 0.1015],
         [0.1222, 0.0869, 0.0165,  ..., 0.0823, 0.1085, 0.1015],
         [0.6334, 0.0791, 0.0107,  ..., 0.0642, 0.1557, 0.6954],
         [0.1222, 0.7549, 0.0107,  ..., 0.0642, 0.6274, 0.1015]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7770, 0.1661, 0.1023,  ..., 0.6207, 0.1513, 0.1090],
         [0.0743, 0.1661, 0.1048,  ..., 0.1264, 0.1513, 0.1090],
         [0.0743, 0.2156, 0.1023,  ..., 0.1264, 0.1513, 0.1090],
         [0.0743, 0.4521, 0.6905,  ..., 0.1264, 0.5461, 0.6730]],
        [[0.8681, 0.1867, 0.1354,  ..., 0.1610, 0.0216, 0.0742],
         [0.0446, 0.1867, 0.1354,  ..., 0.1610, 0.0216, 0.0742],
         [0.0436, 0.1867, 0.1501,  ..., 0.1616, 0.9352, 0.7773],
         [0.0436, 0.4398, 0.5790,  ..., 0.5165, 0.0216, 0.0742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0032, 0.2294, 0.4968,  ..., 0.8988, 0.0759, 0.0697],
         [0.0032, 0.1915, 0.1654,  ..., 0.0337, 0.0759, 0.0697],
         [0.9904, 0.1626, 0.1616,  ..., 0.0337, 0.7723, 0.7908],
         [0.0032, 0.4166, 0.1762,  ..., 0.0337, 0.0759, 0.0697]],
        [[0.0705, 0.0520, 0.8095,  ..., 0.9209, 0.0582, 0.0706],
         [0.0705, 0.0629, 0.0635,  ..., 0.0313, 0.0837, 0.0706],
         [0.7886, 0.0520, 0.0635,  ..., 0.0239, 0.0582, 0.7881],
         [0.0705, 0.8331, 0.0635,  ..., 0.0239, 0.7999, 0.0706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:09:17,890 [Process: 0] Synchronize training processes
2024-08-19 13:09:17,890 [Process: 0] Evaluating...
2024-08-19 13:09:17,892 [Process: 0] EPOCH 44:
2024-08-19 13:09:17,894 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:18,864 [Process: 0] Synchronize training processes
2024-08-19 13:09:18,865 [Process: 0] Evaluating...
2024-08-19 13:09:18,866 [Process: 0] EPOCH 45:
2024-08-19 13:09:18,868 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.8389, 0.1341, 0.1039,  ..., 0.1922, 0.5711, 0.1528],
         [0.0537, 0.1341, 0.1039,  ..., 0.1922, 0.1420, 0.1528],
         [0.0537, 0.1341, 0.1039,  ..., 0.2525, 0.1450, 0.1750],
         [0.0537, 0.5976, 0.6882,  ..., 0.3631, 0.1420, 0.5194]],
        [[0.9410, 0.1302, 0.0595,  ..., 0.1334, 0.0267, 0.0853],
         [0.0197, 0.1302, 0.0595,  ..., 0.1334, 0.0267, 0.0853],
         [0.0197, 0.1361, 0.0595,  ..., 0.1334, 0.9199, 0.7442],
         [0.0197, 0.6035, 0.8214,  ..., 0.5997, 0.0267, 0.0853]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0044, 0.3355, 0.6528,  ..., 0.8911, 0.0514, 0.0416],
         [0.0044, 0.2219, 0.1164,  ..., 0.0384, 0.0514, 0.0416],
         [0.9869, 0.2059, 0.1154,  ..., 0.0352, 0.8458, 0.8753],
         [0.0044, 0.2367, 0.1154,  ..., 0.0352, 0.0514, 0.0416]],
        [[0.0598, 0.0787, 0.9175,  ..., 0.8827, 0.0535, 0.0532],
         [0.0598, 0.1140, 0.0275,  ..., 0.0410, 0.0718, 0.0532],
         [0.8206, 0.0787, 0.0275,  ..., 0.0382, 0.0535, 0.8405],
         [0.0598, 0.7286, 0.0275,  ..., 0.0382, 0.8212, 0.0532]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8688, 0.1690, 0.0836,  ..., 0.2684, 0.8027, 0.0966],
         [0.0437, 0.1568, 0.0836,  ..., 0.1962, 0.0729, 0.0966],
         [0.0437, 0.2110, 0.0836,  ..., 0.1924, 0.0622, 0.0966],
         [0.0437, 0.4633, 0.7492,  ..., 0.3429, 0.0622, 0.7102]],
        [[0.9155, 0.0385, 0.0814,  ..., 0.1158, 0.0096, 0.0760],
         [0.0282, 0.0385, 0.0814,  ..., 0.1158, 0.0096, 0.0760],
         [0.0282, 0.0385, 0.0814,  ..., 0.1158, 0.9712, 0.7721],
         [0.0282, 0.8844, 0.7558,  ..., 0.6525, 0.0096, 0.0760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0099, 0.2416, 0.8223,  ..., 0.9467, 0.0575, 0.0449],
         [0.0099, 0.2918, 0.0741,  ..., 0.0178, 0.0575, 0.0449],
         [0.8768, 0.2152, 0.0518,  ..., 0.0178, 0.8275, 0.8653],
         [0.1033, 0.2514, 0.0518,  ..., 0.0178, 0.0575, 0.0449]],
        [[0.0960, 0.0481, 0.9525,  ..., 0.8553, 0.0169, 0.0533],
         [0.0960, 0.0497, 0.0222,  ..., 0.0757, 0.0290, 0.0533],
         [0.7119, 0.0481, 0.0127,  ..., 0.0345, 0.0169, 0.8401],
         [0.0960, 0.8540, 0.0127,  ..., 0.0345, 0.9372, 0.0533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7065, 0.1240, 0.1341,  ..., 0.9514, 0.6726, 0.1452],
         [0.0964, 0.1240, 0.1341,  ..., 0.0162, 0.1172, 0.1452],
         [0.1007, 0.1240, 0.1341,  ..., 0.0162, 0.1051, 0.1452],
         [0.0964, 0.6279, 0.5978,  ..., 0.0162, 0.1051, 0.5644]],
        [[0.9217, 0.0735, 0.0806,  ..., 0.1559, 0.0220, 0.0945],
         [0.0277, 0.0789, 0.0806,  ..., 0.1559, 0.0220, 0.0945],
         [0.0253, 0.0735, 0.0806,  ..., 0.1932, 0.9340, 0.7166],
         [0.0253, 0.7740, 0.7583,  ..., 0.4949, 0.0220, 0.0945]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:19,837 [Process: 0] Synchronize training processes
2024-08-19 13:09:19,838 [Process: 0] Evaluating...
2024-08-19 13:09:19,839 [Process: 0] EPOCH 46:
2024-08-19 13:09:19,841 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:20,810 [Process: 0] Synchronize training processes
2024-08-19 13:09:20,811 [Process: 0] Evaluating...
2024-08-19 13:09:20,812 [Process: 0] EPOCH 47:
2024-08-19 13:09:20,814 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0150, 0.3529, 0.8000,  ..., 0.9360, 0.0864, 0.0987],
         [0.0150, 0.2375, 0.0763,  ..., 0.0213, 0.0864, 0.0987],
         [0.9474, 0.2048, 0.0618,  ..., 0.0213, 0.7407, 0.7039],
         [0.0225, 0.2048, 0.0618,  ..., 0.0213, 0.0864, 0.0987]],
        [[0.0732, 0.0498, 0.9493,  ..., 0.9514, 0.0286, 0.0686],
         [0.0732, 0.0498, 0.0169,  ..., 0.0162, 0.0350, 0.0686],
         [0.7804, 0.0498, 0.0169,  ..., 0.0162, 0.0286, 0.7943],
         [0.0732, 0.8505, 0.0169,  ..., 0.0162, 0.9078, 0.0686]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9137, 0.1483, 0.1157,  ..., 0.3438, 0.5131, 0.0614],
         [0.0313, 0.1483, 0.1157,  ..., 0.1194, 0.1467, 0.0614],
         [0.0275, 0.1766, 0.1240,  ..., 0.1194, 0.1408, 0.0614],
         [0.0275, 0.5268, 0.6447,  ..., 0.4175, 0.1995, 0.8159]],
        [[0.9595, 0.1234, 0.0930,  ..., 0.1740, 0.0167, 0.0941],
         [0.0136, 0.1234, 0.0930,  ..., 0.1740, 0.0167, 0.0941],
         [0.0135, 0.1234, 0.0930,  ..., 0.2641, 0.9499, 0.7176],
         [0.0135, 0.6299, 0.7211,  ..., 0.3879, 0.0167, 0.0941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0620, 0.2835, 0.9154,  ..., 0.8941, 0.0702, 0.0559],
         [0.0620, 0.2925, 0.0282,  ..., 0.0353, 0.0702, 0.0559],
         [0.8141, 0.1887, 0.0282,  ..., 0.0353, 0.7893, 0.8322],
         [0.0620, 0.2353, 0.0282,  ..., 0.0353, 0.0702, 0.0559]],
        [[0.0573, 0.0282, 0.9589,  ..., 0.9046, 0.0894, 0.0512],
         [0.0573, 0.0345, 0.0137,  ..., 0.0318, 0.1004, 0.0512],
         [0.8281, 0.0282, 0.0137,  ..., 0.0318, 0.0894, 0.8463],
         [0.0573, 0.9092, 0.0137,  ..., 0.0318, 0.7209, 0.0512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8058, 0.1225, 0.0947,  ..., 0.1840, 0.1312, 0.0457],
         [0.0647, 0.1225, 0.1040,  ..., 0.1840, 0.1312, 0.0457],
         [0.0647, 0.1225, 0.0947,  ..., 0.1840, 0.1312, 0.0457],
         [0.0647, 0.6324, 0.7065,  ..., 0.4479, 0.6064, 0.8628]],
        [[0.8723, 0.0898, 0.1281,  ..., 0.1557, 0.0213, 0.1209],
         [0.0426, 0.0898, 0.1304,  ..., 0.1557, 0.0213, 0.1209],
         [0.0426, 0.0898, 0.1281,  ..., 0.1849, 0.9361, 0.6374],
         [0.0426, 0.7306, 0.6134,  ..., 0.5037, 0.0213, 0.1209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:21,784 [Process: 0] Synchronize training processes
2024-08-19 13:09:21,784 [Process: 0] Evaluating...
2024-08-19 13:09:21,786 [Process: 0] EPOCH 48:
2024-08-19 13:09:21,788 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:22,762 [Process: 0] Synchronize training processes
2024-08-19 13:09:22,762 [Process: 0] Evaluating...
2024-08-19 13:09:22,764 [Process: 0] EPOCH 49:
2024-08-19 13:09:22,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0329, 0.2592, 0.9165,  ..., 0.9166, 0.0624, 0.0960],
         [0.0329, 0.3381, 0.0278,  ..., 0.0278, 0.0624, 0.0960],
         [0.9014, 0.2014, 0.0278,  ..., 0.0278, 0.8128, 0.7119],
         [0.0329, 0.2014, 0.0278,  ..., 0.0278, 0.0624, 0.0960]],
        [[0.0647, 0.0351, 0.9566,  ..., 0.9442, 0.0240, 0.0809],
         [0.0647, 0.0352, 0.0153,  ..., 0.0186, 0.0387, 0.0809],
         [0.8060, 0.0351, 0.0141,  ..., 0.0186, 0.0240, 0.7572],
         [0.0647, 0.8946, 0.0141,  ..., 0.0186, 0.9133, 0.0809]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9279, 0.1005, 0.1232,  ..., 0.4968, 0.9218, 0.0810],
         [0.0240, 0.1033, 0.1232,  ..., 0.1633, 0.0261, 0.0810],
         [0.0240, 0.1005, 0.1232,  ..., 0.1633, 0.0261, 0.0810],
         [0.0240, 0.6956, 0.6303,  ..., 0.1767, 0.0261, 0.7571]],
        [[0.8624, 0.0979, 0.1294,  ..., 0.1431, 0.0221, 0.0432],
         [0.0459, 0.0979, 0.1294,  ..., 0.1431, 0.0221, 0.0432],
         [0.0459, 0.0979, 0.1294,  ..., 0.1966, 0.9338, 0.8705],
         [0.0459, 0.7064, 0.6118,  ..., 0.5171, 0.0221, 0.0432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0434, 0.1824, 0.8624,  ..., 0.9023, 0.0887, 0.0614],
         [0.0434, 0.3420, 0.0459,  ..., 0.0326, 0.0887, 0.0614],
         [0.8699, 0.1824, 0.0459,  ..., 0.0326, 0.7340, 0.8158],
         [0.0434, 0.2932, 0.0459,  ..., 0.0326, 0.0887, 0.0614]],
        [[0.0716, 0.0422, 0.9675,  ..., 0.8918, 0.0540, 0.1146],
         [0.0716, 0.0422, 0.0108,  ..., 0.0331, 0.0699, 0.1146],
         [0.7852, 0.0422, 0.0108,  ..., 0.0331, 0.0540, 0.6490],
         [0.0716, 0.8735, 0.0108,  ..., 0.0420, 0.8222, 0.1218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8887, 0.0958, 0.1472,  ..., 0.4145, 0.1653, 0.0613],
         [0.0371, 0.0958, 0.1472,  ..., 0.1886, 0.1696, 0.0613],
         [0.0371, 0.0958, 0.1695,  ..., 0.1886, 0.1653, 0.0613],
         [0.0371, 0.7126, 0.5362,  ..., 0.2083, 0.4997, 0.8162]],
        [[0.8829, 0.0822, 0.0680,  ..., 0.1326, 0.0729, 0.0412],
         [0.0390, 0.0822, 0.0680,  ..., 0.1326, 0.0729, 0.0412],
         [0.0390, 0.0822, 0.0680,  ..., 0.2417, 0.7812, 0.8764],
         [0.0390, 0.7535, 0.7961,  ..., 0.4930, 0.0729, 0.0412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:23,738 [Process: 0] Synchronize training processes
2024-08-19 13:09:23,738 [Process: 0] Evaluating...
2024-08-19 13:09:23,740 [Process: 0] EPOCH 50:
2024-08-19 13:09:23,741 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:24,713 [Process: 0] Synchronize training processes
2024-08-19 13:09:24,713 [Process: 0] Evaluating...
2024-08-19 13:09:24,715 [Process: 0] EPOCH 51:
2024-08-19 13:09:24,717 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0274, 0.1318, 0.8414,  ..., 0.9472, 0.0487, 0.0739],
         [0.0274, 0.1407, 0.0529,  ..., 0.0176, 0.0487, 0.0739],
         [0.9178, 0.1318, 0.0529,  ..., 0.0176, 0.8538, 0.7784],
         [0.0274, 0.5957, 0.0529,  ..., 0.0176, 0.0487, 0.0739]],
        [[0.0357, 0.0459, 0.9325,  ..., 0.7271, 0.0130, 0.0665],
         [0.0357, 0.0459, 0.0225,  ..., 0.0783, 0.0130, 0.0665],
         [0.8928, 0.0459, 0.0225,  ..., 0.0783, 0.0130, 0.8006],
         [0.0357, 0.8622, 0.0225,  ..., 0.1163, 0.9611, 0.0665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9200, 0.0612, 0.0838,  ..., 0.2413, 0.8186, 0.0927],
         [0.0267, 0.0612, 0.0838,  ..., 0.2236, 0.0605, 0.0927],
         [0.0267, 0.0612, 0.0838,  ..., 0.2054, 0.0605, 0.0927],
         [0.0267, 0.8163, 0.7485,  ..., 0.3296, 0.0605, 0.7219]],
        [[0.9214, 0.0808, 0.0574,  ..., 0.1159, 0.0262, 0.0612],
         [0.0296, 0.0808, 0.0574,  ..., 0.1159, 0.0262, 0.0612],
         [0.0245, 0.0808, 0.0574,  ..., 0.1159, 0.9213, 0.8163],
         [0.0245, 0.7577, 0.8278,  ..., 0.6522, 0.0262, 0.0612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0988, 0.0616, 0.0855,  ..., 0.9025, 0.0739, 0.0777],
         [0.0988, 0.0616, 0.0878,  ..., 0.0325, 0.0739, 0.0777],
         [0.7037, 0.0616, 0.0855,  ..., 0.0325, 0.7782, 0.7670],
         [0.0988, 0.8153, 0.7411,  ..., 0.0325, 0.0739, 0.0777]],
        [[0.0792, 0.0529, 0.9620,  ..., 0.9495, 0.0620, 0.0647],
         [0.0792, 0.0529, 0.0127,  ..., 0.0168, 0.0620, 0.0647],
         [0.7625, 0.0529, 0.0127,  ..., 0.0168, 0.0620, 0.8060],
         [0.0792, 0.8414, 0.0127,  ..., 0.0168, 0.8139, 0.0647]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8460, 0.0620, 0.0856,  ..., 0.3955, 0.8359, 0.0432],
         [0.0513, 0.0620, 0.0856,  ..., 0.1734, 0.0547, 0.0432],
         [0.0513, 0.0620, 0.0856,  ..., 0.1719, 0.0547, 0.0432],
         [0.0513, 0.8141, 0.7431,  ..., 0.2592, 0.0547, 0.8703]],
        [[0.9897, 0.0465, 0.0511,  ..., 0.0914, 0.0165, 0.0358],
         [0.0034, 0.0465, 0.0511,  ..., 0.0914, 0.0165, 0.0358],
         [0.0034, 0.0465, 0.0511,  ..., 0.0914, 0.9505, 0.8925],
         [0.0034, 0.8606, 0.8468,  ..., 0.7257, 0.0165, 0.0358]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:25,688 [Process: 0] Synchronize training processes
2024-08-19 13:09:25,688 [Process: 0] Evaluating...
2024-08-19 13:09:26,072 [Process: 0] EPOCH 52:
2024-08-19 13:09:26,075 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:27,051 [Process: 0] Synchronize training processes
2024-08-19 13:09:27,052 [Process: 0] Evaluating...
2024-08-19 13:09:27,053 [Process: 0] EPOCH 53:
2024-08-19 13:09:27,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1073, 0.1974, 0.5629,  ..., 0.9778, 0.0466, 0.0970],
         [0.1073, 0.3677, 0.1901,  ..., 0.0074, 0.0466, 0.0970],
         [0.6782, 0.1712, 0.1235,  ..., 0.0074, 0.8602, 0.7091],
         [0.1073, 0.2637, 0.1235,  ..., 0.0074, 0.0466, 0.0970]],
        [[0.0488, 0.0151, 0.9122,  ..., 0.9274, 0.0558, 0.0485],
         [0.0488, 0.0151, 0.0398,  ..., 0.0342, 0.0558, 0.0485],
         [0.8537, 0.0151, 0.0240,  ..., 0.0192, 0.0558, 0.8546],
         [0.0488, 0.9547, 0.0240,  ..., 0.0192, 0.8326, 0.0485]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7831, 0.1201, 0.0945,  ..., 0.9428, 0.8916, 0.0784],
         [0.0723, 0.1201, 0.0945,  ..., 0.0191, 0.0361, 0.0784],
         [0.0723, 0.1201, 0.0945,  ..., 0.0191, 0.0361, 0.0784],
         [0.0723, 0.6396, 0.7165,  ..., 0.0191, 0.0361, 0.7648]],
        [[0.9274, 0.1284, 0.0264,  ..., 0.0677, 0.0217, 0.0517],
         [0.0242, 0.1284, 0.0264,  ..., 0.0677, 0.0217, 0.0517],
         [0.0242, 0.1284, 0.0264,  ..., 0.0819, 0.9348, 0.8448],
         [0.0242, 0.6149, 0.9208,  ..., 0.7827, 0.0217, 0.0517]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0601, 0.1916, 0.9101,  ..., 0.9335, 0.0457, 0.0890],
         [0.0601, 0.3654, 0.0300,  ..., 0.0249, 0.0457, 0.0890],
         [0.8197, 0.1916, 0.0300,  ..., 0.0208, 0.8628, 0.7331],
         [0.0601, 0.2515, 0.0300,  ..., 0.0208, 0.0457, 0.0890]],
        [[0.1121, 0.0513, 0.9583,  ..., 0.9289, 0.0102, 0.0549],
         [0.1121, 0.0513, 0.0139,  ..., 0.0237, 0.0102, 0.0549],
         [0.6637, 0.0513, 0.0139,  ..., 0.0237, 0.0102, 0.8353],
         [0.1121, 0.8462, 0.0139,  ..., 0.0237, 0.9695, 0.0549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 13:09:28,026 [Process: 0] Synchronize training processes
2024-08-19 13:09:28,026 [Process: 0] Evaluating...
2024-08-19 13:09:28,028 [Process: 0] EPOCH 54:
2024-08-19 13:09:28,029 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:29,008 [Process: 0] Synchronize training processes
2024-08-19 13:09:29,009 [Process: 0] Evaluating...
2024-08-19 13:09:29,010 [Process: 0] EPOCH 55:
2024-08-19 13:09:29,012 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9224, 0.0807, 0.1213,  ..., 0.2410, 0.9228, 0.0457],
         [0.0264, 0.0807, 0.1213,  ..., 0.2253, 0.0257, 0.0457],
         [0.0256, 0.0807, 0.1262,  ..., 0.1755, 0.0257, 0.0457],
         [0.0256, 0.7579, 0.6312,  ..., 0.3582, 0.0257, 0.8629]],
        [[0.7210, 0.0748, 0.0771,  ..., 0.0416, 0.0227, 0.1390],
         [0.0930, 0.0748, 0.0771,  ..., 0.0416, 0.0227, 0.1390],
         [0.0930, 0.0748, 0.0771,  ..., 0.0416, 0.9320, 0.3369],
         [0.0930, 0.7756, 0.7686,  ..., 0.8751, 0.0227, 0.3850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0344, 0.0741, 0.9213,  ..., 0.9627, 0.0632, 0.0614],
         [0.0344, 0.0880, 0.0369,  ..., 0.0124, 0.0632, 0.0614],
         [0.8948, 0.0741, 0.0209,  ..., 0.0124, 0.8103, 0.8157],
         [0.0363, 0.7638, 0.0209,  ..., 0.0124, 0.0632, 0.0614]],
        [[0.0806, 0.0295, 0.6965,  ..., 0.9228, 0.0278, 0.0659],
         [0.0806, 0.0295, 0.0936,  ..., 0.0257, 0.0278, 0.0659],
         [0.7583, 0.0295, 0.0936,  ..., 0.0257, 0.0278, 0.8022],
         [0.0806, 0.9115, 0.1164,  ..., 0.0257, 0.9165, 0.0659]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8751, 0.0612, 0.1001,  ..., 0.1342, 0.8288, 0.1361],
         [0.0416, 0.0612, 0.1001,  ..., 0.1342, 0.0620, 0.1361],
         [0.0416, 0.0612, 0.1001,  ..., 0.1542, 0.0546, 0.1527],
         [0.0416, 0.8165, 0.6997,  ..., 0.5774, 0.0546, 0.5751]],
        [[0.8961, 0.0760, 0.0510,  ..., 0.0801, 0.0063, 0.0908],
         [0.0399, 0.0760, 0.0510,  ..., 0.0801, 0.0063, 0.0908],
         [0.0320, 0.0760, 0.0510,  ..., 0.0801, 0.9810, 0.7275],
         [0.0320, 0.7719, 0.8469,  ..., 0.7596, 0.0063, 0.0908]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0469, 0.0757, 0.9133,  ..., 0.9756, 0.0395, 0.0739],
         [0.0469, 0.0800, 0.0289,  ..., 0.0081, 0.0395, 0.0739],
         [0.8594, 0.0757, 0.0289,  ..., 0.0081, 0.8814, 0.7783],
         [0.0469, 0.7686, 0.0289,  ..., 0.0081, 0.0395, 0.0739]],
        [[0.0534, 0.0081, 0.8708,  ..., 0.9391, 0.0130, 0.0734],
         [0.0534, 0.0081, 0.0438,  ..., 0.0203, 0.0130, 0.0734],
         [0.8398, 0.0081, 0.0380,  ..., 0.0203, 0.0130, 0.7798],
         [0.0534, 0.9757, 0.0474,  ..., 0.0203, 0.9609, 0.0734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:09:29,982 [Process: 0] Synchronize training processes
2024-08-19 13:09:29,983 [Process: 0] Evaluating...
2024-08-19 13:09:29,984 [Process: 0] EPOCH 56:
2024-08-19 13:09:29,986 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:30,957 [Process: 0] Synchronize training processes
2024-08-19 13:09:30,957 [Process: 0] Evaluating...
2024-08-19 13:09:30,959 [Process: 0] EPOCH 57:
2024-08-19 13:09:30,961 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9317, 0.1009, 0.0649,  ..., 0.1747, 0.4059, 0.0807],
         [0.0228, 0.0972, 0.0649,  ..., 0.1787, 0.1801, 0.0807],
         [0.0228, 0.0972, 0.0649,  ..., 0.2996, 0.1761, 0.0807],
         [0.0228, 0.7048, 0.8054,  ..., 0.3470, 0.2379, 0.7578]],
        [[0.9166, 0.0537, 0.0661,  ..., 0.0859, 0.0103, 0.0529],
         [0.0278, 0.0537, 0.0661,  ..., 0.0859, 0.0103, 0.0529],
         [0.0278, 0.0537, 0.0661,  ..., 0.0859, 0.9692, 0.8414],
         [0.0278, 0.8388, 0.8016,  ..., 0.7422, 0.0103, 0.0529]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0826, 0.0830, 0.9056,  ..., 0.8827, 0.0670, 0.0870],
         [0.0826, 0.0830, 0.0309,  ..., 0.0391, 0.0670, 0.0870],
         [0.7521, 0.0830, 0.0309,  ..., 0.0391, 0.7990, 0.7389],
         [0.0826, 0.7509, 0.0326,  ..., 0.0391, 0.0670, 0.0870]],
        [[0.0825, 0.0412, 0.9760,  ..., 0.9572, 0.0107, 0.0541],
         [0.0825, 0.0439, 0.0080,  ..., 0.0143, 0.0107, 0.0541],
         [0.7524, 0.0412, 0.0080,  ..., 0.0143, 0.0107, 0.8378],
         [0.0825, 0.8737, 0.0080,  ..., 0.0143, 0.9678, 0.0541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8786, 0.0651, 0.0800,  ..., 0.1360, 0.5370, 0.1031],
         [0.0405, 0.0651, 0.0800,  ..., 0.1360, 0.1453, 0.1031],
         [0.0405, 0.0651, 0.0800,  ..., 0.1360, 0.1249, 0.1031],
         [0.0405, 0.8047, 0.7599,  ..., 0.5920, 0.1927, 0.6906]],
        [[0.8881, 0.0785, 0.0229,  ..., 0.0577, 0.0056, 0.1042],
         [0.0373, 0.0785, 0.0229,  ..., 0.0577, 0.0056, 0.1042],
         [0.0373, 0.0785, 0.0229,  ..., 0.0577, 0.9831, 0.6873],
         [0.0373, 0.7646, 0.9314,  ..., 0.8269, 0.0056, 0.1042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0385, 0.0406, 0.8803,  ..., 0.9590, 0.0351, 0.0764],
         [0.0385, 0.0406, 0.0399,  ..., 0.0137, 0.0351, 0.0764],
         [0.8844, 0.0406, 0.0399,  ..., 0.0137, 0.8947, 0.7708],
         [0.0385, 0.8782, 0.0399,  ..., 0.0137, 0.0351, 0.0764]],
        [[0.0532, 0.0261, 0.9768,  ..., 0.9677, 0.0123, 0.0765],
         [0.0532, 0.0261, 0.0077,  ..., 0.0108, 0.0123, 0.0765],
         [0.8404, 0.0261, 0.0077,  ..., 0.0108, 0.0123, 0.7706],
         [0.0532, 0.9216, 0.0077,  ..., 0.0108, 0.9632, 0.0765]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8742, 0.0550, 0.0951,  ..., 0.0400, 0.8655, 0.0725],
         [0.0419, 0.0550, 0.0858,  ..., 0.0400, 0.0480, 0.0725],
         [0.0419, 0.0550, 0.0858,  ..., 0.0400, 0.0433, 0.0725],
         [0.0419, 0.8350, 0.7333,  ..., 0.8799, 0.0433, 0.7824]],
        [[0.9156, 0.0809, 0.0436,  ..., 0.0960, 0.0105, 0.1757],
         [0.0281, 0.0809, 0.0436,  ..., 0.0960, 0.0105, 0.1869],
         [0.0281, 0.0809, 0.0436,  ..., 0.0960, 0.9686, 0.3382],
         [0.0281, 0.7573, 0.8692,  ..., 0.7119, 0.0105, 0.2992]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:31,932 [Process: 0] Synchronize training processes
2024-08-19 13:09:31,933 [Process: 0] Evaluating...
2024-08-19 13:09:31,934 [Process: 0] EPOCH 58:
2024-08-19 13:09:31,936 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:32,913 [Process: 0] Synchronize training processes
2024-08-19 13:09:32,913 [Process: 0] Evaluating...
2024-08-19 13:09:32,915 [Process: 0] EPOCH 59:
2024-08-19 13:09:32,916 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0308, 0.0774, 0.9245,  ..., 0.9572, 0.0463, 0.0546],
         [0.0308, 0.0774, 0.0261,  ..., 0.0143, 0.0463, 0.0546],
         [0.9077, 0.0774, 0.0247,  ..., 0.0143, 0.8610, 0.8361],
         [0.0308, 0.7677, 0.0247,  ..., 0.0143, 0.0463, 0.0546]],
        [[0.0319, 0.0299, 0.9592,  ..., 0.9367, 0.0081, 0.0909],
         [0.0319, 0.0303, 0.0136,  ..., 0.0194, 0.0081, 0.0915],
         [0.9044, 0.0299, 0.0136,  ..., 0.0194, 0.0081, 0.7344],
         [0.0319, 0.9099, 0.0136,  ..., 0.0245, 0.9756, 0.0832]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9181, 0.0789, 0.0295,  ..., 0.9963, 0.8207, 0.0850],
         [0.0273, 0.0789, 0.0295,  ..., 0.0012, 0.0598, 0.0850],
         [0.0273, 0.0789, 0.0295,  ..., 0.0012, 0.0598, 0.0850],
         [0.0273, 0.7632, 0.9114,  ..., 0.0012, 0.0598, 0.7449]],
        [[0.7971, 0.1527, 0.0565,  ..., 0.0841, 0.0202, 0.1209],
         [0.0676, 0.2103, 0.0565,  ..., 0.0841, 0.0202, 0.1209],
         [0.0676, 0.1527, 0.0565,  ..., 0.0841, 0.9394, 0.6372],
         [0.0676, 0.4842, 0.8305,  ..., 0.7477, 0.0202, 0.1209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0420, 0.0598, 0.9708,  ..., 0.9763, 0.0399, 0.0411],
         [0.0420, 0.0598, 0.0097,  ..., 0.0079, 0.0399, 0.0411],
         [0.8739, 0.0598, 0.0097,  ..., 0.0079, 0.8802, 0.8767],
         [0.0420, 0.8205, 0.0097,  ..., 0.0079, 0.0399, 0.0411]],
        [[0.0560, 0.0051, 0.9736,  ..., 0.9597, 0.0108, 0.0631],
         [0.0560, 0.0051, 0.0088,  ..., 0.0134, 0.0108, 0.0631],
         [0.8320, 0.0051, 0.0088,  ..., 0.0134, 0.0108, 0.8106],
         [0.0560, 0.9846, 0.0088,  ..., 0.0134, 0.9677, 0.0631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8237, 0.1003, 0.0496,  ..., 0.9531, 0.9460, 0.0977],
         [0.0564, 0.0814, 0.0496,  ..., 0.0156, 0.0180, 0.0977],
         [0.0564, 0.0814, 0.0496,  ..., 0.0156, 0.0180, 0.0977],
         [0.0634, 0.7369, 0.8511,  ..., 0.0156, 0.0180, 0.7069]],
        [[0.9225, 0.1703, 0.0240,  ..., 0.0236, 0.0085, 0.1053],
         [0.0258, 0.1256, 0.0240,  ..., 0.0236, 0.0085, 0.1053],
         [0.0258, 0.1256, 0.0240,  ..., 0.0236, 0.9746, 0.6842],
         [0.0258, 0.5785, 0.9279,  ..., 0.9291, 0.0085, 0.1053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:33,892 [Process: 0] Synchronize training processes
2024-08-19 13:09:33,892 [Process: 0] Evaluating...
2024-08-19 13:09:33,894 [Process: 0] EPOCH 60:
2024-08-19 13:09:33,895 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:34,869 [Process: 0] Synchronize training processes
2024-08-19 13:09:34,869 [Process: 0] Evaluating...
2024-08-19 13:09:34,871 [Process: 0] EPOCH 61:
2024-08-19 13:09:34,873 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0241, 0.1433, 0.8557,  ..., 0.9419, 0.0569, 0.0423],
         [0.0241, 0.2473, 0.0279,  ..., 0.0194, 0.0569, 0.0423],
         [0.9276, 0.1433, 0.0279,  ..., 0.0194, 0.8271, 0.8732],
         [0.0241, 0.4661, 0.0885,  ..., 0.0194, 0.0591, 0.0423]],
        [[0.1074, 0.0376, 0.9172,  ..., 0.9073, 0.0019, 0.0565],
         [0.1338, 0.0496, 0.0222,  ..., 0.0309, 0.0019, 0.0565],
         [0.6514, 0.0376, 0.0222,  ..., 0.0309, 0.0019, 0.8306],
         [0.1074, 0.8752, 0.0383,  ..., 0.0309, 0.9943, 0.0565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8847, 0.1112, 0.0448,  ..., 0.4164, 0.9268, 0.1187],
         [0.0384, 0.1112, 0.0448,  ..., 0.1355, 0.0244, 0.1187],
         [0.0384, 0.1112, 0.0448,  ..., 0.3126, 0.0244, 0.1312],
         [0.0384, 0.6664, 0.8655,  ..., 0.1355, 0.0244, 0.6315]],
        [[0.8923, 0.1762, 0.1440,  ..., 0.0740, 0.0050, 0.1337],
         [0.0387, 0.1162, 0.1438,  ..., 0.0740, 0.0050, 0.1337],
         [0.0345, 0.1162, 0.1519,  ..., 0.0740, 0.9850, 0.5988],
         [0.0345, 0.5915, 0.5603,  ..., 0.7780, 0.0050, 0.1337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0229, 0.0499, 0.9402,  ..., 0.9474, 0.0430, 0.0517],
         [0.0229, 0.0499, 0.0199,  ..., 0.0169, 0.0430, 0.0517],
         [0.9312, 0.0499, 0.0199,  ..., 0.0169, 0.8710, 0.8449],
         [0.0229, 0.8504, 0.0199,  ..., 0.0188, 0.0430, 0.0517]],
        [[0.0612, 0.0047, 0.9677,  ..., 0.7819, 0.0118, 0.0588],
         [0.0612, 0.0047, 0.0170,  ..., 0.1389, 0.0118, 0.0588],
         [0.8165, 0.0047, 0.0076,  ..., 0.0396, 0.0118, 0.8236],
         [0.0612, 0.9858, 0.0076,  ..., 0.0396, 0.9646, 0.0588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9462, 0.0562, 0.0745,  ..., 0.5195, 0.9863, 0.0495],
         [0.0190, 0.0562, 0.0745,  ..., 0.1192, 0.0046, 0.0495],
         [0.0174, 0.0562, 0.0745,  ..., 0.2421, 0.0046, 0.0495],
         [0.0174, 0.8314, 0.7764,  ..., 0.1192, 0.0046, 0.8515]],
        [[0.9646, 0.0787, 0.0546,  ..., 0.0549, 0.0100, 0.1228],
         [0.0121, 0.0787, 0.0546,  ..., 0.0549, 0.0100, 0.1228],
         [0.0117, 0.0787, 0.0546,  ..., 0.0549, 0.9699, 0.6161],
         [0.0117, 0.7640, 0.8362,  ..., 0.8354, 0.0100, 0.1383]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:35,847 [Process: 0] Synchronize training processes
2024-08-19 13:09:35,847 [Process: 0] Evaluating...
2024-08-19 13:09:36,232 [Process: 0] EPOCH 62:
2024-08-19 13:09:36,235 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:37,207 [Process: 0] Synchronize training processes
2024-08-19 13:09:37,208 [Process: 0] Evaluating...
2024-08-19 13:09:37,209 [Process: 0] EPOCH 63:
2024-08-19 13:09:37,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0398, 0.0518, 0.9629,  ..., 0.9349, 0.0401, 0.0257],
         [0.0398, 0.0518, 0.0124,  ..., 0.0213, 0.0401, 0.0257],
         [0.8807, 0.0518, 0.0124,  ..., 0.0213, 0.8798, 0.9230],
         [0.0398, 0.8446, 0.0124,  ..., 0.0226, 0.0401, 0.0257]],
        [[0.0846, 0.0380, 0.8449,  ..., 0.8991, 0.0507, 0.0408],
         [0.0911, 0.0380, 0.0792,  ..., 0.0392, 0.0507, 0.0408],
         [0.7398, 0.0380, 0.0379,  ..., 0.0309, 0.0507, 0.8777],
         [0.0846, 0.8860, 0.0379,  ..., 0.0309, 0.8479, 0.0408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9592, 0.1033, 0.0655,  ..., 0.4983, 0.8563, 0.0536],
         [0.0161, 0.0839, 0.0655,  ..., 0.1336, 0.0456, 0.0536],
         [0.0124, 0.0839, 0.0655,  ..., 0.2365, 0.0454, 0.0536],
         [0.0124, 0.7289, 0.8036,  ..., 0.1317, 0.0527, 0.8391]],
        [[0.9852, 0.0744, 0.0495,  ..., 0.0373, 0.0078, 0.1139],
         [0.0049, 0.0744, 0.0495,  ..., 0.0373, 0.0078, 0.1139],
         [0.0049, 0.0744, 0.0495,  ..., 0.0373, 0.9767, 0.6549],
         [0.0049, 0.7768, 0.8515,  ..., 0.8880, 0.0078, 0.1172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0538, 0.1991, 0.9561,  ..., 0.9208, 0.0380, 0.0754],
         [0.0538, 0.1148, 0.0138,  ..., 0.0233, 0.0380, 0.0754],
         [0.8385, 0.1090, 0.0138,  ..., 0.0233, 0.8861, 0.7738],
         [0.0538, 0.5770, 0.0164,  ..., 0.0326, 0.0380, 0.0754]],
        [[0.0792, 0.0109, 0.9085,  ..., 0.8991, 0.0073, 0.0539],
         [0.0889, 0.0109, 0.0278,  ..., 0.0312, 0.0073, 0.0539],
         [0.7527, 0.0109, 0.0278,  ..., 0.0312, 0.0073, 0.8384],
         [0.0792, 0.9673, 0.0359,  ..., 0.0385, 0.9780, 0.0539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:38,184 [Process: 0] Synchronize training processes
2024-08-19 13:09:38,185 [Process: 0] Evaluating...
2024-08-19 13:09:38,187 [Process: 0] EPOCH 64:
2024-08-19 13:09:38,188 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:39,161 [Process: 0] Synchronize training processes
2024-08-19 13:09:39,161 [Process: 0] Evaluating...
2024-08-19 13:09:39,163 [Process: 0] EPOCH 65:
2024-08-19 13:09:39,164 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9524, 0.0755, 0.0486,  ..., 0.1987, 0.9342, 0.0663],
         [0.0159, 0.0755, 0.0486,  ..., 0.2516, 0.0211, 0.0663],
         [0.0159, 0.0755, 0.0486,  ..., 0.3496, 0.0211, 0.0663],
         [0.0159, 0.7735, 0.8542,  ..., 0.2001, 0.0236, 0.8012]],
        [[0.8705, 0.0632, 0.0298,  ..., 0.0297, 0.0147, 0.0483],
         [0.0432, 0.0632, 0.0298,  ..., 0.0297, 0.0147, 0.0483],
         [0.0432, 0.0632, 0.0298,  ..., 0.0297, 0.9559, 0.8552],
         [0.0432, 0.8105, 0.9105,  ..., 0.9109, 0.0147, 0.0483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0888, 0.1108, 0.8853,  ..., 0.9691, 0.0598, 0.0546],
         [0.0888, 0.1313, 0.0382,  ..., 0.0084, 0.0598, 0.0546],
         [0.7335, 0.1178, 0.0382,  ..., 0.0084, 0.8206, 0.8361],
         [0.0888, 0.6401, 0.0382,  ..., 0.0141, 0.0598, 0.0546]],
        [[0.0633, 0.0068, 0.9533,  ..., 0.9610, 0.0255, 0.0477],
         [0.0633, 0.0068, 0.0156,  ..., 0.0130, 0.0255, 0.0477],
         [0.8102, 0.0068, 0.0156,  ..., 0.0130, 0.0255, 0.8569],
         [0.0633, 0.9795, 0.0156,  ..., 0.0130, 0.9235, 0.0477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9428, 0.0630, 0.0680,  ..., 0.2013, 0.8385, 0.0688],
         [0.0191, 0.0630, 0.0680,  ..., 0.3248, 0.0529, 0.0688],
         [0.0191, 0.0630, 0.0680,  ..., 0.2427, 0.0529, 0.0688],
         [0.0191, 0.8110, 0.7959,  ..., 0.2312, 0.0557, 0.7937]],
        [[0.9816, 0.0540, 0.0692,  ..., 0.0331, 0.0333, 0.0713],
         [0.0061, 0.0540, 0.0692,  ..., 0.0331, 0.0333, 0.0713],
         [0.0061, 0.0561, 0.0692,  ..., 0.0331, 0.9000, 0.7860],
         [0.0061, 0.8360, 0.7925,  ..., 0.9008, 0.0333, 0.0713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0876, 0.1024, 0.9650,  ..., 0.9699, 0.0337, 0.0529],
         [0.0876, 0.2181, 0.0113,  ..., 0.0095, 0.0337, 0.0529],
         [0.7373, 0.1024, 0.0113,  ..., 0.0095, 0.8990, 0.8413],
         [0.0876, 0.5772, 0.0125,  ..., 0.0111, 0.0337, 0.0529]],
        [[0.0355, 0.0074, 0.9804,  ..., 0.9070, 0.0132, 0.0573],
         [0.0355, 0.0074, 0.0065,  ..., 0.0310, 0.0132, 0.0573],
         [0.8935, 0.0074, 0.0065,  ..., 0.0310, 0.0132, 0.8282],
         [0.0355, 0.9778, 0.0065,  ..., 0.0310, 0.9605, 0.0573]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:40,136 [Process: 0] Synchronize training processes
2024-08-19 13:09:40,136 [Process: 0] Evaluating...
2024-08-19 13:09:40,138 [Process: 0] EPOCH 66:
2024-08-19 13:09:40,140 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:41,138 [Process: 0] Synchronize training processes
2024-08-19 13:09:41,138 [Process: 0] Evaluating...
2024-08-19 13:09:41,140 [Process: 0] EPOCH 67:
2024-08-19 13:09:41,142 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9780, 0.0711, 0.1118,  ..., 0.1663, 0.8552, 0.1106],
         [0.0073, 0.0711, 0.1118,  ..., 0.2192, 0.0483, 0.1141],
         [0.0073, 0.0711, 0.1259,  ..., 0.1822, 0.0483, 0.1106],
         [0.0073, 0.7868, 0.6505,  ..., 0.4324, 0.0483, 0.6648]],
        [[0.9922, 0.0806, 0.0797,  ..., 0.0366, 0.0212, 0.0681],
         [0.0026, 0.0811, 0.0797,  ..., 0.0366, 0.0212, 0.0681],
         [0.0026, 0.0806, 0.0797,  ..., 0.0366, 0.9363, 0.7956],
         [0.0026, 0.7578, 0.7609,  ..., 0.8902, 0.0212, 0.0681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1008, 0.0459, 0.8720,  ..., 0.8878, 0.0278, 0.0473],
         [0.1008, 0.0425, 0.0427,  ..., 0.0374, 0.0278, 0.0473],
         [0.6977, 0.0425, 0.0427,  ..., 0.0374, 0.9165, 0.8581],
         [0.1008, 0.8691, 0.0427,  ..., 0.0374, 0.0278, 0.0473]],
        [[0.0420, 0.0149, 0.9897,  ..., 0.9769, 0.0052, 0.0478],
         [0.0420, 0.0153, 0.0034,  ..., 0.0077, 0.0052, 0.0478],
         [0.8740, 0.0149, 0.0034,  ..., 0.0077, 0.0052, 0.8565],
         [0.0420, 0.9549, 0.0034,  ..., 0.0077, 0.9845, 0.0478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9825, 0.0414, 0.0469,  ..., 0.1544, 0.9351, 0.0397],
         [0.0058, 0.0414, 0.0469,  ..., 0.2122, 0.0216, 0.0397],
         [0.0058, 0.0414, 0.0469,  ..., 0.1544, 0.0216, 0.0397],
         [0.0058, 0.8757, 0.8594,  ..., 0.4789, 0.0216, 0.8809]],
        [[0.9881, 0.0398, 0.0435,  ..., 0.0269, 0.0174, 0.0511],
         [0.0040, 0.0398, 0.0435,  ..., 0.0269, 0.0174, 0.0511],
         [0.0040, 0.0398, 0.0435,  ..., 0.0269, 0.9478, 0.8466],
         [0.0040, 0.8806, 0.8696,  ..., 0.9194, 0.0174, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0399, 0.0356, 0.9391,  ..., 0.9707, 0.0533, 0.0418],
         [0.0399, 0.0356, 0.0203,  ..., 0.0098, 0.0533, 0.0418],
         [0.8804, 0.0356, 0.0203,  ..., 0.0098, 0.8400, 0.8746],
         [0.0399, 0.8931, 0.0203,  ..., 0.0098, 0.0533, 0.0418]],
        [[0.0697, 0.0121, 0.9402,  ..., 0.8888, 0.0442, 0.0539],
         [0.0697, 0.0153, 0.0198,  ..., 0.0371, 0.0810, 0.0539],
         [0.7910, 0.0121, 0.0198,  ..., 0.0371, 0.0442, 0.8383],
         [0.0697, 0.9606, 0.0203,  ..., 0.0371, 0.8306, 0.0539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-19 13:09:42,113 [Process: 0] Synchronize training processes
2024-08-19 13:09:42,113 [Process: 0] Evaluating...
2024-08-19 13:09:42,115 [Process: 0] EPOCH 68:
2024-08-19 13:09:42,117 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:43,089 [Process: 0] Synchronize training processes
2024-08-19 13:09:43,089 [Process: 0] Evaluating...
2024-08-19 13:09:43,091 [Process: 0] EPOCH 69:
2024-08-19 13:09:43,093 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9748, 0.0325, 0.0474,  ..., 0.1673, 0.2618, 0.0462],
         [0.0084, 0.0325, 0.0474,  ..., 0.2336, 0.2001, 0.0462],
         [0.0084, 0.0325, 0.0474,  ..., 0.1673, 0.1661, 0.0462],
         [0.0084, 0.9024, 0.8577,  ..., 0.4317, 0.3720, 0.8613]],
        [[0.9631, 0.0639, 0.0295,  ..., 0.0320, 0.0130, 0.0995],
         [0.0123, 0.0576, 0.0295,  ..., 0.0320, 0.0130, 0.0995],
         [0.0123, 0.0576, 0.0295,  ..., 0.0320, 0.9610, 0.6738],
         [0.0123, 0.8209, 0.9114,  ..., 0.9041, 0.0130, 0.1273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0231, 0.2630, 0.9790,  ..., 0.9940, 0.0670, 0.0823],
         [0.0231, 0.1154, 0.0070,  ..., 0.0020, 0.0670, 0.0735],
         [0.9306, 0.1014, 0.0070,  ..., 0.0020, 0.7877, 0.7707],
         [0.0231, 0.5203, 0.0070,  ..., 0.0020, 0.0783, 0.0735]],
        [[0.0512, 0.0153, 0.9921,  ..., 0.9795, 0.0043, 0.0716],
         [0.0512, 0.0210, 0.0026,  ..., 0.0068, 0.0043, 0.0716],
         [0.8463, 0.0153, 0.0026,  ..., 0.0068, 0.0043, 0.7852],
         [0.0512, 0.9484, 0.0026,  ..., 0.0068, 0.9871, 0.0716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8864, 0.0893, 0.1174,  ..., 0.1488, 0.6183, 0.0752],
         [0.0349, 0.1114, 0.0992,  ..., 0.1623, 0.1052, 0.0806],
         [0.0349, 0.0893, 0.1377,  ..., 0.1488, 0.0913, 0.0752],
         [0.0438, 0.7100, 0.6457,  ..., 0.5400, 0.1852, 0.7690]],
        [[0.9852, 0.0423, 0.0675,  ..., 0.0603, 0.0237, 0.0965],
         [0.0049, 0.0494, 0.0675,  ..., 0.0707, 0.0237, 0.0965],
         [0.0049, 0.0423, 0.0675,  ..., 0.0603, 0.9288, 0.7105],
         [0.0049, 0.8659, 0.7976,  ..., 0.8087, 0.0237, 0.0965]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0418, 0.3372, 0.5790,  ..., 0.9878, 0.0418, 0.0440],
         [0.0418, 0.2108, 0.1669,  ..., 0.0041, 0.0418, 0.0440],
         [0.8745, 0.0918, 0.0986,  ..., 0.0041, 0.8745, 0.8680],
         [0.0418, 0.3603, 0.1555,  ..., 0.0041, 0.0418, 0.0440]],
        [[0.0631, 0.1024, 0.9775,  ..., 0.9681, 0.0034, 0.0897],
         [0.0631, 0.5708, 0.0075,  ..., 0.0106, 0.0034, 0.0897],
         [0.8107, 0.1024, 0.0075,  ..., 0.0106, 0.0034, 0.7310],
         [0.0631, 0.2244, 0.0075,  ..., 0.0106, 0.9898, 0.0897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:09:44,066 [Process: 0] Synchronize training processes
2024-08-19 13:09:44,066 [Process: 0] Evaluating...
2024-08-19 13:09:44,068 [Process: 0] EPOCH 70:
2024-08-19 13:09:44,070 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:45,042 [Process: 0] Synchronize training processes
2024-08-19 13:09:45,042 [Process: 0] Evaluating...
2024-08-19 13:09:45,044 [Process: 0] EPOCH 71:
2024-08-19 13:09:45,046 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9861, 0.0794, 0.0928,  ..., 0.2297, 0.9534, 0.0414],
         [0.0046, 0.0794, 0.0928,  ..., 0.2371, 0.0155, 0.0414],
         [0.0046, 0.0794, 0.1128,  ..., 0.2434, 0.0155, 0.0414],
         [0.0046, 0.7618, 0.7016,  ..., 0.2897, 0.0155, 0.8758]],
        [[0.7648, 0.0470, 0.0338,  ..., 0.0320, 0.0482, 0.1280],
         [0.0929, 0.0470, 0.0338,  ..., 0.0320, 0.0482, 0.1280],
         [0.0711, 0.0470, 0.0338,  ..., 0.0320, 0.8555, 0.6094],
         [0.0711, 0.8589, 0.8985,  ..., 0.9039, 0.0482, 0.1345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0565, 0.0872, 0.9385,  ..., 0.9765, 0.0554, 0.0893],
         [0.0565, 0.7385, 0.0162,  ..., 0.0078, 0.0554, 0.0893],
         [0.8304, 0.0872, 0.0162,  ..., 0.0078, 0.8339, 0.7322],
         [0.0565, 0.0872, 0.0291,  ..., 0.0078, 0.0554, 0.0893]],
        [[0.0425, 0.0127, 0.9622,  ..., 0.9523, 0.0085, 0.0365],
         [0.0425, 0.0127, 0.0121,  ..., 0.0159, 0.0085, 0.0365],
         [0.8724, 0.0127, 0.0121,  ..., 0.0159, 0.0085, 0.8904],
         [0.0425, 0.9620, 0.0136,  ..., 0.0159, 0.9745, 0.0365]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9813, 0.0666, 0.0736,  ..., 0.1451, 0.8515, 0.0276],
         [0.0062, 0.0666, 0.0736,  ..., 0.2159, 0.0490, 0.0276],
         [0.0062, 0.0666, 0.0811,  ..., 0.1451, 0.0490, 0.0276],
         [0.0062, 0.8002, 0.7717,  ..., 0.4939, 0.0505, 0.9172]],
        [[0.8802, 0.0478, 0.0649,  ..., 0.0576, 0.1545, 0.0254],
         [0.0417, 0.0478, 0.0649,  ..., 0.0576, 0.1545, 0.0254],
         [0.0390, 0.0478, 0.0649,  ..., 0.0576, 0.5154, 0.9237],
         [0.0390, 0.8566, 0.8052,  ..., 0.8273, 0.1756, 0.0254]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0392, 0.1137, 0.9588,  ..., 0.9789, 0.0583, 0.0830],
         [0.0392, 0.6208, 0.0117,  ..., 0.0070, 0.0583, 0.0830],
         [0.8825, 0.1137, 0.0117,  ..., 0.0070, 0.8219, 0.7167],
         [0.0392, 0.1518, 0.0178,  ..., 0.0070, 0.0615, 0.1173]],
        [[0.0386, 0.0094, 0.9260,  ..., 0.8862, 0.0039, 0.0373],
         [0.0386, 0.0094, 0.0243,  ..., 0.0351, 0.0039, 0.0373],
         [0.8828, 0.0094, 0.0236,  ..., 0.0351, 0.0039, 0.8839],
         [0.0399, 0.9718, 0.0260,  ..., 0.0436, 0.9884, 0.0416]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9771, 0.0289, 0.0901,  ..., 0.1483, 0.7134, 0.0611],
         [0.0076, 0.0289, 0.0901,  ..., 0.1776, 0.1179, 0.0611],
         [0.0076, 0.0289, 0.1073,  ..., 0.2006, 0.0862, 0.0611],
         [0.0076, 0.9132, 0.7125,  ..., 0.4734, 0.0825, 0.8168]],
        [[0.8626, 0.0342, 0.0374,  ..., 0.0409, 0.0178, 0.0409],
         [0.0458, 0.0342, 0.0309,  ..., 0.0409, 0.0178, 0.0409],
         [0.0458, 0.0342, 0.0309,  ..., 0.0409, 0.9466, 0.8774],
         [0.0458, 0.8975, 0.9009,  ..., 0.8772, 0.0178, 0.0409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:09:46,019 [Process: 0] Synchronize training processes
2024-08-19 13:09:46,019 [Process: 0] Evaluating...
2024-08-19 13:09:46,403 [Process: 0] EPOCH 72:
2024-08-19 13:09:46,407 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0239, 0.0744, 0.9835,  ..., 0.9715, 0.0395, 0.0919],
         [0.0239, 0.0872, 0.0055,  ..., 0.0095, 0.0395, 0.0919],
         [0.9284, 0.0744, 0.0055,  ..., 0.0095, 0.8816, 0.7183],
         [0.0239, 0.7639, 0.0055,  ..., 0.0095, 0.0395, 0.0979]],
        [[0.0414, 0.0206, 0.9637,  ..., 0.9682, 0.0061, 0.0266],
         [0.0414, 0.0206, 0.0102,  ..., 0.0106, 0.0061, 0.0266],
         [0.8757, 0.0206, 0.0102,  ..., 0.0106, 0.0061, 0.9203],
         [0.0414, 0.9382, 0.0159,  ..., 0.0106, 0.9816, 0.0266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9309, 0.0617, 0.0962,  ..., 0.1353, 0.4093, 0.0581],
         [0.0243, 0.0617, 0.0962,  ..., 0.1649, 0.2238, 0.0581],
         [0.0224, 0.0617, 0.0962,  ..., 0.1353, 0.1532, 0.0581],
         [0.0224, 0.8148, 0.7113,  ..., 0.5646, 0.2136, 0.8257]],
        [[0.7334, 0.0363, 0.0743,  ..., 0.0616, 0.0150, 0.0369],
         [0.1176, 0.0363, 0.0529,  ..., 0.0588, 0.0150, 0.0369],
         [0.0745, 0.0363, 0.0579,  ..., 0.0588, 0.9549, 0.8894],
         [0.0745, 0.8912, 0.8150,  ..., 0.8208, 0.0150, 0.0369]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0345, 0.0496, 0.9799,  ..., 0.9783, 0.0268, 0.0538],
         [0.0345, 0.0400, 0.0067,  ..., 0.0072, 0.0268, 0.0538],
         [0.8964, 0.0400, 0.0067,  ..., 0.0072, 0.9196, 0.8386],
         [0.0345, 0.8703, 0.0067,  ..., 0.0072, 0.0268, 0.0538]],
        [[0.0258, 0.0025, 0.9641,  ..., 0.9624, 0.0107, 0.0410],
         [0.0258, 0.0025, 0.0120,  ..., 0.0125, 0.0107, 0.0410],
         [0.9227, 0.0025, 0.0120,  ..., 0.0125, 0.0107, 0.8771],
         [0.0258, 0.9925, 0.0120,  ..., 0.0125, 0.9680, 0.0410]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:47,379 [Process: 0] Synchronize training processes
2024-08-19 13:09:47,380 [Process: 0] Evaluating...
2024-08-19 13:09:47,382 [Process: 0] EPOCH 73:
2024-08-19 13:09:47,383 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:48,358 [Process: 0] Synchronize training processes
2024-08-19 13:09:48,359 [Process: 0] Evaluating...
2024-08-19 13:09:48,361 [Process: 0] EPOCH 74:
2024-08-19 13:09:48,362 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9440, 0.0576, 0.0478,  ..., 0.1751, 0.6023, 0.0422],
         [0.0211, 0.0576, 0.0478,  ..., 0.1856, 0.1835, 0.0422],
         [0.0175, 0.0578, 0.0478,  ..., 0.1734, 0.1066, 0.0422],
         [0.0175, 0.8270, 0.8566,  ..., 0.4660, 0.1076, 0.8733]],
        [[0.9459, 0.0534, 0.0347,  ..., 0.0298, 0.0733, 0.0506],
         [0.0186, 0.0410, 0.0347,  ..., 0.0298, 0.0733, 0.0506],
         [0.0178, 0.0410, 0.0347,  ..., 0.0298, 0.7802, 0.8482],
         [0.0178, 0.8646, 0.8959,  ..., 0.9107, 0.0733, 0.0506]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0436, 0.0141, 0.9822,  ..., 0.9223, 0.0488, 0.0702],
         [0.0436, 0.0141, 0.0059,  ..., 0.0281, 0.0488, 0.0702],
         [0.8692, 0.0141, 0.0059,  ..., 0.0248, 0.8536, 0.7893],
         [0.0436, 0.9576, 0.0059,  ..., 0.0248, 0.0488, 0.0702]],
        [[0.0240, 0.0152, 0.9942,  ..., 0.9090, 0.0112, 0.0315],
         [0.0240, 0.0152, 0.0019,  ..., 0.0421, 0.0112, 0.0315],
         [0.9279, 0.0152, 0.0019,  ..., 0.0244, 0.0112, 0.9056],
         [0.0240, 0.9545, 0.0019,  ..., 0.0244, 0.9663, 0.0315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9777, 0.0416, 0.1004,  ..., 0.2057, 0.9109, 0.0309],
         [0.0090, 0.0416, 0.1004,  ..., 0.1836, 0.0297, 0.0309],
         [0.0066, 0.0416, 0.1343,  ..., 0.2002, 0.0297, 0.0309],
         [0.0066, 0.8753, 0.6649,  ..., 0.4105, 0.0297, 0.9072]],
        [[0.9575, 0.0289, 0.0311,  ..., 0.0449, 0.0359, 0.0782],
         [0.0142, 0.0289, 0.0311,  ..., 0.0449, 0.0359, 0.0782],
         [0.0142, 0.0289, 0.0311,  ..., 0.0449, 0.8924, 0.7626],
         [0.0142, 0.9132, 0.9066,  ..., 0.8652, 0.0359, 0.0811]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0249, 0.0236, 0.9472,  ..., 0.9797, 0.0531, 0.0325],
         [0.0249, 0.0236, 0.0176,  ..., 0.0068, 0.0531, 0.0325],
         [0.9254, 0.0236, 0.0176,  ..., 0.0068, 0.8399, 0.9025],
         [0.0249, 0.9291, 0.0176,  ..., 0.0068, 0.0539, 0.0325]],
        [[0.0318, 0.0015, 0.9618,  ..., 0.9045, 0.0053, 0.0386],
         [0.0318, 0.0015, 0.0124,  ..., 0.0279, 0.0053, 0.0386],
         [0.9045, 0.0015, 0.0124,  ..., 0.0279, 0.0053, 0.8842],
         [0.0318, 0.9956, 0.0135,  ..., 0.0397, 0.9840, 0.0386]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:49,335 [Process: 0] Synchronize training processes
2024-08-19 13:09:49,335 [Process: 0] Evaluating...
2024-08-19 13:09:49,337 [Process: 0] EPOCH 75:
2024-08-19 13:09:49,339 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:50,312 [Process: 0] Synchronize training processes
2024-08-19 13:09:50,312 [Process: 0] Evaluating...
2024-08-19 13:09:50,314 [Process: 0] EPOCH 76:
2024-08-19 13:09:50,316 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9086, 0.0604, 0.0767,  ..., 0.1693, 0.7664, 0.0524],
         [0.0364, 0.0604, 0.0767,  ..., 0.1509, 0.0774, 0.0524],
         [0.0275, 0.0604, 0.0767,  ..., 0.1703, 0.0744, 0.0524],
         [0.0275, 0.8187, 0.7699,  ..., 0.5094, 0.0818, 0.8429]],
        [[0.7876, 0.0371, 0.0324,  ..., 0.0654, 0.0152, 0.0308],
         [0.0821, 0.0371, 0.0324,  ..., 0.0654, 0.0152, 0.0308],
         [0.0682, 0.0371, 0.0324,  ..., 0.0654, 0.9545, 0.9076],
         [0.0622, 0.8886, 0.9027,  ..., 0.8039, 0.0152, 0.0308]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0451, 0.0314, 0.9729,  ..., 0.9824, 0.0226, 0.0342],
         [0.0451, 0.0314, 0.0090,  ..., 0.0059, 0.0226, 0.0342],
         [0.8648, 0.0314, 0.0090,  ..., 0.0059, 0.9322, 0.8974],
         [0.0451, 0.9059, 0.0090,  ..., 0.0059, 0.0226, 0.0342]],
        [[0.0280, 0.0032, 0.9943,  ..., 0.9603, 0.0061, 0.0461],
         [0.0280, 0.0032, 0.0019,  ..., 0.0132, 0.0061, 0.0461],
         [0.9161, 0.0032, 0.0019,  ..., 0.0132, 0.0061, 0.8618],
         [0.0280, 0.9904, 0.0019,  ..., 0.0132, 0.9818, 0.0461]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9557, 0.0480, 0.0527,  ..., 0.2364, 0.7955, 0.0220],
         [0.0148, 0.0480, 0.0527,  ..., 0.2639, 0.0858, 0.0220],
         [0.0148, 0.0480, 0.0527,  ..., 0.1657, 0.0593, 0.0220],
         [0.0148, 0.8561, 0.8420,  ..., 0.3340, 0.0593, 0.9339]],
        [[0.8187, 0.0447, 0.0368,  ..., 0.0242, 0.0305, 0.1131],
         [0.0922, 0.0448, 0.0368,  ..., 0.0242, 0.0305, 0.1131],
         [0.0446, 0.0447, 0.0369,  ..., 0.0242, 0.9086, 0.6247],
         [0.0446, 0.8657, 0.8896,  ..., 0.9273, 0.0305, 0.1490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0709, 0.0245, 0.9647,  ..., 0.9606, 0.0360, 0.0367],
         [0.0709, 0.0245, 0.0118,  ..., 0.0131, 0.0360, 0.0367],
         [0.7873, 0.0245, 0.0118,  ..., 0.0131, 0.8920, 0.8899],
         [0.0709, 0.9264, 0.0118,  ..., 0.0131, 0.0360, 0.0367]],
        [[0.0291, 0.0293, 0.9518,  ..., 0.9657, 0.6575, 0.0347],
         [0.0291, 0.0293, 0.0158,  ..., 0.0114, 0.0554, 0.0347],
         [0.9128, 0.0293, 0.0158,  ..., 0.0114, 0.0554, 0.8958],
         [0.0291, 0.9122, 0.0167,  ..., 0.0114, 0.2316, 0.0347]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:51,288 [Process: 0] Synchronize training processes
2024-08-19 13:09:51,289 [Process: 0] Evaluating...
2024-08-19 13:09:51,290 [Process: 0] EPOCH 77:
2024-08-19 13:09:51,292 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:52,265 [Process: 0] Synchronize training processes
2024-08-19 13:09:52,266 [Process: 0] Evaluating...
2024-08-19 13:09:52,268 [Process: 0] EPOCH 78:
2024-08-19 13:09:52,269 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:53,242 [Process: 0] Synchronize training processes
2024-08-19 13:09:53,242 [Process: 0] Evaluating...
2024-08-19 13:09:53,244 [Process: 0] EPOCH 79:
2024-08-19 13:09:53,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9874, 0.0357, 0.0859,  ..., 0.2331, 0.8930, 0.0238],
         [0.0042, 0.0357, 0.0859,  ..., 0.2552, 0.0297, 0.0238],
         [0.0042, 0.0357, 0.0984,  ..., 0.2138, 0.0297, 0.0238],
         [0.0042, 0.8929, 0.7299,  ..., 0.2979, 0.0476, 0.9287]],
        [[0.8898, 0.0571, 0.0298,  ..., 0.0536, 0.0377, 0.0164],
         [0.0361, 0.0375, 0.0298,  ..., 0.0536, 0.0377, 0.0164],
         [0.0361, 0.0375, 0.0298,  ..., 0.0536, 0.8870, 0.9507],
         [0.0379, 0.8678, 0.9107,  ..., 0.8391, 0.0377, 0.0164]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0478, 0.0818, 0.9446,  ..., 0.9678, 0.0447, 0.0515],
         [0.0478, 0.0818, 0.0153,  ..., 0.0107, 0.0447, 0.0515],
         [0.8565, 0.0818, 0.0153,  ..., 0.0107, 0.8659, 0.8456],
         [0.0478, 0.7546, 0.0249,  ..., 0.0107, 0.0447, 0.0515]],
        [[0.0657, 0.0027, 0.9729,  ..., 0.8770, 0.0105, 0.0299],
         [0.0676, 0.0027, 0.0079,  ..., 0.0303, 0.0105, 0.0299],
         [0.8011, 0.0027, 0.0079,  ..., 0.0303, 0.0105, 0.9104],
         [0.0657, 0.9920, 0.0113,  ..., 0.0624, 0.9685, 0.0299]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9707, 0.0350, 0.0437,  ..., 0.2285, 0.8861, 0.0415],
         [0.0098, 0.0346, 0.0437,  ..., 0.3511, 0.0395, 0.0415],
         [0.0098, 0.0346, 0.0437,  ..., 0.2142, 0.0352, 0.0415],
         [0.0098, 0.8958, 0.8690,  ..., 0.2063, 0.0392, 0.8755]],
        [[0.9663, 0.0244, 0.0317,  ..., 0.0228, 0.0092, 0.0085],
         [0.0113, 0.0244, 0.0317,  ..., 0.0228, 0.0092, 0.0085],
         [0.0112, 0.0244, 0.0317,  ..., 0.0228, 0.9724, 0.9745],
         [0.0112, 0.9268, 0.9050,  ..., 0.9317, 0.0092, 0.0085]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0478, 0.0546, 0.9006,  ..., 0.9869, 0.0339, 0.0342],
         [0.0478, 0.0546, 0.0207,  ..., 0.0044, 0.0339, 0.0342],
         [0.8567, 0.0614, 0.0207,  ..., 0.0044, 0.8984, 0.8974],
         [0.0478, 0.8294, 0.0580,  ..., 0.0044, 0.0339, 0.0342]],
        [[0.0196, 0.0028, 0.9664,  ..., 0.9697, 0.0047, 0.0314],
         [0.0196, 0.0028, 0.0109,  ..., 0.0065, 0.0047, 0.0314],
         [0.9412, 0.0028, 0.0109,  ..., 0.0065, 0.0047, 0.9058],
         [0.0196, 0.9915, 0.0118,  ..., 0.0172, 0.9860, 0.0314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:54,220 [Process: 0] Synchronize training processes
2024-08-19 13:09:54,220 [Process: 0] Evaluating...
2024-08-19 13:09:54,222 [Process: 0] EPOCH 80:
2024-08-19 13:09:54,223 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:55,195 [Process: 0] Synchronize training processes
2024-08-19 13:09:55,195 [Process: 0] Evaluating...
2024-08-19 13:09:55,197 [Process: 0] EPOCH 81:
2024-08-19 13:09:55,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9737, 0.0696, 0.0292,  ..., 0.2090, 0.9507, 0.0439],
         [0.0088, 0.0696, 0.0292,  ..., 0.2932, 0.0164, 0.0439],
         [0.0088, 0.0714, 0.0292,  ..., 0.2049, 0.0164, 0.0439],
         [0.0088, 0.7894, 0.9125,  ..., 0.2929, 0.0164, 0.8683]],
        [[0.7425, 0.0522, 0.0176,  ..., 0.0377, 0.0776, 0.0319],
         [0.1415, 0.0522, 0.0176,  ..., 0.0377, 0.1303, 0.0319],
         [0.0580, 0.0522, 0.0176,  ..., 0.0377, 0.7145, 0.9042],
         [0.0580, 0.8435, 0.9471,  ..., 0.8869, 0.0776, 0.0319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0793, 0.0235, 0.9700,  ..., 0.9485, 0.0213, 0.0769],
         [0.0793, 0.0235, 0.0096,  ..., 0.0172, 0.0213, 0.0769],
         [0.7621, 0.0235, 0.0096,  ..., 0.0172, 0.9362, 0.7694],
         [0.0793, 0.9295, 0.0107,  ..., 0.0172, 0.0213, 0.0769]],
        [[0.0446, 0.0053, 0.8552,  ..., 0.9610, 0.0309, 0.0523],
         [0.0449, 0.0053, 0.0483,  ..., 0.0126, 0.0312, 0.0523],
         [0.8660, 0.0053, 0.0483,  ..., 0.0126, 0.0309, 0.8432],
         [0.0446, 0.9842, 0.0483,  ..., 0.0139, 0.9070, 0.0523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8994, 0.0369, 0.0205,  ..., 0.2203, 0.3086, 0.0455],
         [0.0380, 0.0369, 0.0205,  ..., 0.1594, 0.2019, 0.0455],
         [0.0313, 0.0369, 0.0205,  ..., 0.2287, 0.1654, 0.0455],
         [0.0313, 0.8894, 0.9385,  ..., 0.3916, 0.3241, 0.8636]],
        [[0.9684, 0.0426, 0.0976,  ..., 0.0672, 0.0095, 0.0311],
         [0.0109, 0.0426, 0.1058,  ..., 0.0672, 0.0095, 0.0263],
         [0.0103, 0.0426, 0.0976,  ..., 0.0672, 0.9715, 0.9164],
         [0.0103, 0.8722, 0.6991,  ..., 0.7983, 0.0095, 0.0263]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0453, 0.0092, 0.9735,  ..., 0.9881, 0.0618, 0.0462],
         [0.0453, 0.0092, 0.0088,  ..., 0.0040, 0.0618, 0.0462],
         [0.8641, 0.0092, 0.0088,  ..., 0.0040, 0.8146, 0.8613],
         [0.0453, 0.9723, 0.0088,  ..., 0.0040, 0.0618, 0.0462]],
        [[0.0489, 0.0034, 0.9645,  ..., 0.9711, 0.5495, 0.0397],
         [0.0489, 0.0034, 0.0113,  ..., 0.0096, 0.0697, 0.0397],
         [0.8534, 0.0034, 0.0113,  ..., 0.0096, 0.0697, 0.8804],
         [0.0489, 0.9899, 0.0130,  ..., 0.0096, 0.3111, 0.0401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:09:56,173 [Process: 0] Synchronize training processes
2024-08-19 13:09:56,174 [Process: 0] Evaluating...
2024-08-19 13:09:56,556 [Process: 0] EPOCH 82:
2024-08-19 13:09:56,560 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9593, 0.0266, 0.0184,  ..., 0.2606, 0.9829, 0.0219],
         [0.0136, 0.0266, 0.0184,  ..., 0.1372, 0.0057, 0.0219],
         [0.0136, 0.0266, 0.0184,  ..., 0.2234, 0.0057, 0.0219],
         [0.0136, 0.9203, 0.9448,  ..., 0.3789, 0.0057, 0.9344]],
        [[0.8868, 0.0379, 0.0466,  ..., 0.0523, 0.0072, 0.0505],
         [0.0381, 0.0379, 0.0466,  ..., 0.0473, 0.0072, 0.0505],
         [0.0376, 0.0379, 0.0466,  ..., 0.0473, 0.9784, 0.8484],
         [0.0376, 0.8862, 0.8603,  ..., 0.8532, 0.0072, 0.0505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0257, 0.0455, 0.9891,  ..., 0.9777, 0.0421, 0.0406],
         [0.0257, 0.0455, 0.0036,  ..., 0.0074, 0.0421, 0.0406],
         [0.9229, 0.0455, 0.0036,  ..., 0.0074, 0.8738, 0.8783],
         [0.0257, 0.8636, 0.0036,  ..., 0.0074, 0.0421, 0.0406]],
        [[0.0899, 0.0035, 0.9605,  ..., 0.9868, 0.0135, 0.0290],
         [0.1241, 0.0035, 0.0128,  ..., 0.0044, 0.0135, 0.0290],
         [0.6962, 0.0035, 0.0128,  ..., 0.0044, 0.0135, 0.9130],
         [0.0899, 0.9894, 0.0140,  ..., 0.0044, 0.9596, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9960, 0.0667, 0.0452,  ..., 0.3932, 0.9923, 0.0521],
         [0.0013, 0.0573, 0.0397,  ..., 0.1311, 0.0026, 0.0521],
         [0.0013, 0.0573, 0.0444,  ..., 0.2074, 0.0026, 0.0521],
         [0.0013, 0.8187, 0.8707,  ..., 0.2683, 0.0026, 0.8437]],
        [[0.8304, 0.0414, 0.0405,  ..., 0.0404, 0.0077, 0.1245],
         [0.0524, 0.0414, 0.0405,  ..., 0.0404, 0.0077, 0.1245],
         [0.0524, 0.0414, 0.0405,  ..., 0.0404, 0.9770, 0.2502],
         [0.0648, 0.8759, 0.8786,  ..., 0.8787, 0.0077, 0.5007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0339, 0.0232, 0.9649,  ..., 0.9720, 0.0229, 0.0348],
         [0.0339, 0.0232, 0.0117,  ..., 0.0093, 0.0229, 0.0348],
         [0.8984, 0.0232, 0.0117,  ..., 0.0093, 0.9313, 0.8956],
         [0.0339, 0.9305, 0.0117,  ..., 0.0093, 0.0229, 0.0348]],
        [[0.0431, 0.0036, 0.9895,  ..., 0.8981, 0.0170, 0.0510],
         [0.0431, 0.0036, 0.0035,  ..., 0.0332, 0.0170, 0.0510],
         [0.8708, 0.0036, 0.0035,  ..., 0.0332, 0.0170, 0.8223],
         [0.0431, 0.9893, 0.0035,  ..., 0.0355, 0.9489, 0.0758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:57,538 [Process: 0] Synchronize training processes
2024-08-19 13:09:57,538 [Process: 0] Evaluating...
2024-08-19 13:09:57,540 [Process: 0] EPOCH 83:
2024-08-19 13:09:57,542 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:58,517 [Process: 0] Synchronize training processes
2024-08-19 13:09:58,518 [Process: 0] Evaluating...
2024-08-19 13:09:58,519 [Process: 0] EPOCH 84:
2024-08-19 13:09:58,521 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9684, 0.0131, 0.0524,  ..., 0.3857, 0.0954, 0.0387],
         [0.0115, 0.0131, 0.0524,  ..., 0.1180, 0.0954, 0.0387],
         [0.0101, 0.0131, 0.0524,  ..., 0.1977, 0.1771, 0.0511],
         [0.0101, 0.9607, 0.8427,  ..., 0.2985, 0.6321, 0.8716]],
        [[0.9811, 0.0375, 0.0524,  ..., 0.0317, 0.0122, 0.1236],
         [0.0063, 0.0375, 0.0524,  ..., 0.0317, 0.0122, 0.1236],
         [0.0063, 0.0396, 0.0524,  ..., 0.0317, 0.9633, 0.3629],
         [0.0063, 0.8854, 0.8427,  ..., 0.9049, 0.0122, 0.3899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0393, 0.0963, 0.9840,  ..., 0.9939, 0.0558, 0.0395],
         [0.0393, 0.1075, 0.0053,  ..., 0.0020, 0.0558, 0.0395],
         [0.8695, 0.1140, 0.0053,  ..., 0.0020, 0.8326, 0.8815],
         [0.0519, 0.6823, 0.0053,  ..., 0.0020, 0.0558, 0.0395]],
        [[0.0399, 0.0061, 0.9860,  ..., 0.9655, 0.0313, 0.0385],
         [0.0399, 0.0061, 0.0047,  ..., 0.0115, 0.0463, 0.0385],
         [0.8802, 0.0061, 0.0047,  ..., 0.0115, 0.0313, 0.8838],
         [0.0399, 0.9816, 0.0047,  ..., 0.0116, 0.8911, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9849, 0.0416, 0.0164,  ..., 0.4733, 0.1044, 0.0258],
         [0.0050, 0.0416, 0.0164,  ..., 0.0870, 0.1044, 0.0258],
         [0.0050, 0.0416, 0.0164,  ..., 0.0870, 0.2221, 0.0258],
         [0.0050, 0.8751, 0.9508,  ..., 0.3526, 0.5691, 0.9225]],
        [[0.9738, 0.0400, 0.0422,  ..., 0.0275, 0.0024, 0.0690],
         [0.0087, 0.0400, 0.0422,  ..., 0.0275, 0.0024, 0.0690],
         [0.0087, 0.0400, 0.0422,  ..., 0.0275, 0.9928, 0.7930],
         [0.0087, 0.8799, 0.8735,  ..., 0.9176, 0.0024, 0.0690]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0108, 0.1049, 0.9924,  ..., 0.9705, 0.0362, 0.0574],
         [0.0108, 0.1049, 0.0025,  ..., 0.0098, 0.0362, 0.0574],
         [0.9675, 0.6234, 0.0025,  ..., 0.0098, 0.8914, 0.8120],
         [0.0108, 0.1669, 0.0025,  ..., 0.0098, 0.0362, 0.0731]],
        [[0.0305, 0.0267, 0.9252,  ..., 0.9779, 0.5669, 0.0556],
         [0.0305, 0.0188, 0.0276,  ..., 0.0075, 0.1305, 0.0556],
         [0.9077, 0.0188, 0.0236,  ..., 0.0073, 0.0892, 0.8332],
         [0.0312, 0.9356, 0.0236,  ..., 0.0073, 0.2133, 0.0556]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:09:59,497 [Process: 0] Synchronize training processes
2024-08-19 13:09:59,497 [Process: 0] Evaluating...
2024-08-19 13:09:59,499 [Process: 0] EPOCH 85:
2024-08-19 13:09:59,501 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:00,488 [Process: 0] Synchronize training processes
2024-08-19 13:10:00,488 [Process: 0] Evaluating...
2024-08-19 13:10:00,490 [Process: 0] EPOCH 86:
2024-08-19 13:10:00,492 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9804, 0.0326, 0.0334,  ..., 0.3548, 0.1154, 0.0125],
         [0.0065, 0.0264, 0.0334,  ..., 0.1273, 0.1023, 0.0125],
         [0.0065, 0.0270, 0.0334,  ..., 0.2451, 0.1879, 0.0125],
         [0.0065, 0.9140, 0.8999,  ..., 0.2728, 0.5944, 0.9624]],
        [[0.9692, 0.0365, 0.0237,  ..., 0.0248, 0.0011, 0.0796],
         [0.0100, 0.0365, 0.0237,  ..., 0.0248, 0.0011, 0.0796],
         [0.0109, 0.0365, 0.0237,  ..., 0.0248, 0.9968, 0.7612],
         [0.0100, 0.8904, 0.9289,  ..., 0.9257, 0.0011, 0.0796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0236, 0.1659, 0.9755,  ..., 0.9800, 0.0155, 0.0206],
         [0.0236, 0.3185, 0.0082,  ..., 0.0067, 0.0155, 0.0206],
         [0.9209, 0.2513, 0.0082,  ..., 0.0067, 0.9535, 0.9382],
         [0.0320, 0.2643, 0.0082,  ..., 0.0067, 0.0155, 0.0206]],
        [[0.0349, 0.0174, 0.9732,  ..., 0.9485, 0.0604, 0.0438],
         [0.0349, 0.0174, 0.0089,  ..., 0.0172, 0.0941, 0.0438],
         [0.8954, 0.0174, 0.0089,  ..., 0.0172, 0.0604, 0.8686],
         [0.0349, 0.9478, 0.0089,  ..., 0.0172, 0.7851, 0.0438]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9388, 0.0110, 0.0336,  ..., 0.6032, 0.1041, 0.0305],
         [0.0204, 0.0110, 0.0336,  ..., 0.1025, 0.1041, 0.0305],
         [0.0204, 0.0110, 0.0336,  ..., 0.1379, 0.1778, 0.0305],
         [0.0204, 0.9670, 0.8993,  ..., 0.1564, 0.6140, 0.9084]],
        [[0.9776, 0.0501, 0.0109,  ..., 0.0563, 0.0023, 0.0450],
         [0.0075, 0.0501, 0.0109,  ..., 0.0563, 0.0023, 0.0450],
         [0.0075, 0.0508, 0.0109,  ..., 0.0563, 0.9930, 0.8651],
         [0.0075, 0.8489, 0.9673,  ..., 0.8310, 0.0023, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0147, 0.0202, 0.9573,  ..., 0.9829, 0.0277, 0.0468],
         [0.0147, 0.0431, 0.0151,  ..., 0.0057, 0.0277, 0.0468],
         [0.9501, 0.0202, 0.0138,  ..., 0.0057, 0.9169, 0.8595],
         [0.0205, 0.9164, 0.0138,  ..., 0.0057, 0.0277, 0.0468]],
        [[0.0396, 0.0189, 0.9622,  ..., 0.9302, 0.0753, 0.0233],
         [0.0396, 0.0189, 0.0117,  ..., 0.0157, 0.0753, 0.0233],
         [0.8812, 0.0189, 0.0117,  ..., 0.0157, 0.7366, 0.9300],
         [0.0396, 0.9432, 0.0144,  ..., 0.0384, 0.1129, 0.0233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:01,478 [Process: 0] Synchronize training processes
2024-08-19 13:10:01,478 [Process: 0] Evaluating...
2024-08-19 13:10:01,480 [Process: 0] EPOCH 87:
2024-08-19 13:10:01,482 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:02,482 [Process: 0] Synchronize training processes
2024-08-19 13:10:02,483 [Process: 0] Evaluating...
2024-08-19 13:10:02,484 [Process: 0] EPOCH 88:
2024-08-19 13:10:02,486 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9953, 0.0177, 0.0418,  ..., 0.6901, 0.0736, 0.0365],
         [0.0016, 0.0177, 0.0418,  ..., 0.0800, 0.0736, 0.0365],
         [0.0016, 0.0177, 0.0418,  ..., 0.1008, 0.0933, 0.0365],
         [0.0016, 0.9468, 0.8745,  ..., 0.1290, 0.7595, 0.8904]],
        [[0.9843, 0.0336, 0.0146,  ..., 0.0308, 0.0069, 0.0494],
         [0.0052, 0.0349, 0.0146,  ..., 0.0310, 0.0069, 0.0494],
         [0.0052, 0.0336, 0.0146,  ..., 0.0308, 0.9792, 0.8519],
         [0.0052, 0.8978, 0.9562,  ..., 0.9074, 0.0069, 0.0494]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7277e-02, 1.9844e-02, 9.2850e-01,  ..., 9.5469e-01,
          3.3383e-02, 4.6234e-02],
         [1.7277e-02, 3.1977e-02, 2.5976e-02,  ..., 1.8714e-02,
          3.3383e-02, 4.6234e-02],
         [9.4291e-01, 1.9844e-02, 2.2760e-02,  ..., 1.3299e-02,
          8.9985e-01, 8.6130e-01],
         [2.2532e-02, 9.2834e-01, 2.2760e-02,  ..., 1.3299e-02,
          3.3383e-02, 4.6234e-02]],
        [[3.8589e-02, 8.0596e-04, 9.8055e-01,  ..., 9.7056e-01,
          7.7436e-03, 4.9789e-02],
         [3.8589e-02, 8.0596e-04, 6.4829e-03,  ..., 6.8353e-03,
          7.7436e-03, 4.9789e-02],
         [8.8423e-01, 8.0596e-04, 6.4829e-03,  ..., 6.8353e-03,
          7.7436e-03, 8.5063e-01],
         [3.8589e-02, 9.9758e-01, 6.4829e-03,  ..., 1.5773e-02,
          9.7677e-01, 4.9789e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9500, 0.0495, 0.0641,  ..., 0.5712, 0.1050, 0.0356],
         [0.0167, 0.0495, 0.0641,  ..., 0.1165, 0.1050, 0.0356],
         [0.0167, 0.0515, 0.0641,  ..., 0.1697, 0.2018, 0.0360],
         [0.0167, 0.8495, 0.8076,  ..., 0.1426, 0.5883, 0.8928]],
        [[0.9716, 0.0205, 0.0294,  ..., 0.0258, 0.0045, 0.0570],
         [0.0095, 0.0205, 0.0294,  ..., 0.0258, 0.0045, 0.0557],
         [0.0095, 0.0205, 0.0294,  ..., 0.0258, 0.9864, 0.8316],
         [0.0095, 0.9385, 0.9119,  ..., 0.9226, 0.0045, 0.0557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0191, 0.0302, 0.9747,  ..., 0.9820, 0.0332, 0.0215],
         [0.0191, 0.0264, 0.0084,  ..., 0.0060, 0.0332, 0.0215],
         [0.9361, 0.0264, 0.0084,  ..., 0.0060, 0.9005, 0.9356],
         [0.0258, 0.9169, 0.0085,  ..., 0.0060, 0.0332, 0.0215]],
        [[0.0370, 0.0259, 0.9784,  ..., 0.9880, 0.2417, 0.0203],
         [0.0370, 0.0259, 0.0072,  ..., 0.0040, 0.0676, 0.0203],
         [0.8822, 0.0259, 0.0072,  ..., 0.0040, 0.0543, 0.9390],
         [0.0438, 0.9224, 0.0072,  ..., 0.0040, 0.6364, 0.0203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:03,484 [Process: 0] Synchronize training processes
2024-08-19 13:10:03,484 [Process: 0] Evaluating...
2024-08-19 13:10:03,486 [Process: 0] EPOCH 89:
2024-08-19 13:10:03,488 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:04,529 [Process: 0] Synchronize training processes
2024-08-19 13:10:04,529 [Process: 0] Evaluating...
2024-08-19 13:10:04,531 [Process: 0] EPOCH 90:
2024-08-19 13:10:04,533 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9689, 0.0342, 0.0311,  ..., 0.1392, 0.1347, 0.0421],
         [0.0104, 0.0342, 0.0311,  ..., 0.1127, 0.1347, 0.0405],
         [0.0104, 0.0342, 0.0311,  ..., 0.1378, 0.3984, 0.0405],
         [0.0104, 0.8975, 0.9066,  ..., 0.6103, 0.3322, 0.8768]],
        [[0.9668, 0.0236, 0.0256,  ..., 0.0115, 0.0029, 0.0587],
         [0.0111, 0.0236, 0.0256,  ..., 0.0097, 0.0029, 0.0587],
         [0.0111, 0.0236, 0.0256,  ..., 0.0097, 0.9913, 0.8240],
         [0.0111, 0.9292, 0.9233,  ..., 0.9691, 0.0029, 0.0587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0752, 0.0109, 0.9429,  ..., 0.9534, 0.0367, 0.0365],
         [0.0752, 0.0109, 0.0190,  ..., 0.0132, 0.0367, 0.0365],
         [0.5719, 0.0109, 0.0190,  ..., 0.0132, 0.8898, 0.8906],
         [0.2776, 0.9672, 0.0190,  ..., 0.0202, 0.0367, 0.0365]],
        [[0.0351, 0.0026, 0.9634,  ..., 0.9676, 0.4833, 0.0394],
         [0.0351, 0.0026, 0.0122,  ..., 0.0069, 0.0604, 0.0394],
         [0.8947, 0.0026, 0.0122,  ..., 0.0069, 0.0604, 0.8807],
         [0.0351, 0.9921, 0.0122,  ..., 0.0186, 0.3960, 0.0406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9661, 0.0739, 0.0286,  ..., 0.1301, 0.1362, 0.0347],
         [0.0113, 0.0739, 0.0286,  ..., 0.1761, 0.1251, 0.0347],
         [0.0113, 0.0739, 0.0286,  ..., 0.1266, 0.3264, 0.0347],
         [0.0113, 0.7783, 0.9143,  ..., 0.5672, 0.4123, 0.8959]],
        [[0.9416, 0.0666, 0.1049,  ..., 0.0120, 0.0040, 0.0384],
         [0.0195, 0.0627, 0.0594,  ..., 0.0120, 0.0040, 0.0384],
         [0.0195, 0.0624, 0.0726,  ..., 0.0120, 0.9881, 0.8849],
         [0.0195, 0.8083, 0.7630,  ..., 0.9640, 0.0040, 0.0384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0247, 0.0973, 0.9126,  ..., 0.9948, 0.0295, 0.0511],
         [0.0247, 0.0772, 0.0293,  ..., 0.0017, 0.0295, 0.0511],
         [0.9146, 0.1322, 0.0285,  ..., 0.0017, 0.9114, 0.8386],
         [0.0359, 0.6933, 0.0296,  ..., 0.0017, 0.0295, 0.0591]],
        [[0.0347, 0.0016, 0.9890,  ..., 0.9726, 0.0273, 0.0293],
         [0.0347, 0.0016, 0.0036,  ..., 0.0085, 0.0253, 0.0293],
         [0.8960, 0.0016, 0.0036,  ..., 0.0085, 0.0253, 0.9120],
         [0.0347, 0.9952, 0.0038,  ..., 0.0103, 0.9221, 0.0293]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:05,571 [Process: 0] Synchronize training processes
2024-08-19 13:10:05,572 [Process: 0] Evaluating...
2024-08-19 13:10:05,573 [Process: 0] EPOCH 91:
2024-08-19 13:10:05,575 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:06,614 [Process: 0] Synchronize training processes
2024-08-19 13:10:06,615 [Process: 0] Evaluating...
2024-08-19 13:10:07,027 [Process: 0] EPOCH 92:
2024-08-19 13:10:07,031 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9809, 0.0897, 0.0263,  ..., 0.4472, 0.1169, 0.0239],
         [0.0064, 0.0848, 0.0263,  ..., 0.2112, 0.1169, 0.0239],
         [0.0064, 0.0949, 0.0263,  ..., 0.1568, 0.2190, 0.0239],
         [0.0064, 0.7305, 0.9210,  ..., 0.1848, 0.5471, 0.9283]],
        [[0.8461, 0.0660, 0.0352,  ..., 0.0416, 0.0066, 0.0378],
         [0.0477, 0.0699, 0.0274,  ..., 0.0416, 0.0066, 0.0378],
         [0.0584, 0.0660, 0.0274,  ..., 0.0416, 0.9801, 0.8865],
         [0.0477, 0.7980, 0.9100,  ..., 0.8751, 0.0066, 0.0378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0485, 0.0484, 0.6538,  ..., 0.9845, 0.0369, 0.0258],
         [0.0485, 0.0509, 0.1504,  ..., 0.0052, 0.0350, 0.0258],
         [0.8430, 0.0484, 0.0798,  ..., 0.0052, 0.8932, 0.9227],
         [0.0599, 0.8522, 0.1160,  ..., 0.0052, 0.0350, 0.0258]],
        [[0.0346, 0.0085, 0.9776,  ..., 0.1128, 0.1580, 0.0319],
         [0.0346, 0.0073, 0.0068,  ..., 0.0277, 0.0671, 0.0319],
         [0.8961, 0.0073, 0.0068,  ..., 0.0277, 0.0671, 0.9043],
         [0.0346, 0.9769, 0.0088,  ..., 0.8318, 0.7079, 0.0319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9070, 0.0421, 0.0270,  ..., 0.5828, 0.1218, 0.0922],
         [0.0289, 0.0421, 0.0270,  ..., 0.1289, 0.1218, 0.0622],
         [0.0289, 0.0421, 0.0270,  ..., 0.1595, 0.2397, 0.0742],
         [0.0351, 0.8737, 0.9191,  ..., 0.1289, 0.5166, 0.7714]],
        [[0.9535, 0.0467, 0.0654,  ..., 0.0319, 0.0080, 0.0396],
         [0.0148, 0.0419, 0.0578,  ..., 0.0319, 0.0080, 0.0396],
         [0.0168, 0.0419, 0.0578,  ..., 0.0319, 0.9761, 0.8812],
         [0.0148, 0.8694, 0.8190,  ..., 0.9042, 0.0080, 0.0396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:08,066 [Process: 0] Synchronize training processes
2024-08-19 13:10:08,066 [Process: 0] Evaluating...
2024-08-19 13:10:08,068 [Process: 0] EPOCH 93:
2024-08-19 13:10:08,070 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:09,109 [Process: 0] Synchronize training processes
2024-08-19 13:10:09,109 [Process: 0] Evaluating...
2024-08-19 13:10:09,111 [Process: 0] EPOCH 94:
2024-08-19 13:10:09,113 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0316, 0.0205, 0.7924,  ..., 0.9339, 0.0367, 0.0490],
         [0.0316, 0.0205, 0.0495,  ..., 0.0215, 0.0367, 0.0490],
         [0.9044, 0.0205, 0.0495,  ..., 0.0215, 0.8897, 0.8531],
         [0.0325, 0.9386, 0.1086,  ..., 0.0231, 0.0367, 0.0490]],
        [[0.0445, 0.0118, 0.9722,  ..., 0.9304, 0.0607, 0.0248],
         [0.0445, 0.0118, 0.0087,  ..., 0.0173, 0.0291, 0.0248],
         [0.8664, 0.0118, 0.0087,  ..., 0.0173, 0.0291, 0.9257],
         [0.0445, 0.9647, 0.0103,  ..., 0.0350, 0.8811, 0.0248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9572, 0.0279, 0.0436,  ..., 0.5724, 0.1627, 0.0392],
         [0.0143, 0.0279, 0.0436,  ..., 0.1140, 0.1307, 0.0392],
         [0.0143, 0.0279, 0.0436,  ..., 0.1520, 0.1867, 0.0392],
         [0.0143, 0.9163, 0.8691,  ..., 0.1616, 0.5199, 0.8823]],
        [[0.9320, 0.0428, 0.0340,  ..., 0.0110, 0.0030, 0.0183],
         [0.0214, 0.0428, 0.0340,  ..., 0.0110, 0.0030, 0.0183],
         [0.0251, 0.0428, 0.0340,  ..., 0.0110, 0.9910, 0.9452],
         [0.0214, 0.8717, 0.8980,  ..., 0.9671, 0.0030, 0.0183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0537, 0.0225, 0.9420,  ..., 0.9780, 0.0227, 0.0258],
         [0.0537, 0.0147, 0.0180,  ..., 0.0073, 0.0227, 0.0258],
         [0.8282, 0.0147, 0.0180,  ..., 0.0073, 0.9320, 0.9226],
         [0.0645, 0.9481, 0.0220,  ..., 0.0073, 0.0227, 0.0258]],
        [[0.0170, 0.0024, 0.9726,  ..., 0.9785, 0.2548, 0.0402],
         [0.0170, 0.0024, 0.0082,  ..., 0.0066, 0.0578, 0.0402],
         [0.9491, 0.0024, 0.0082,  ..., 0.0066, 0.0578, 0.8738],
         [0.0170, 0.9927, 0.0109,  ..., 0.0083, 0.6295, 0.0458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8619, 0.0307, 0.0503,  ..., 0.7751, 0.9214, 0.0299],
         [0.0498, 0.0307, 0.0503,  ..., 0.0732, 0.0282, 0.0299],
         [0.0441, 0.0307, 0.0555,  ..., 0.0732, 0.0252, 0.0299],
         [0.0441, 0.9078, 0.8438,  ..., 0.0785, 0.0252, 0.9103]],
        [[0.9811, 0.0444, 0.0285,  ..., 0.0777, 0.0064, 0.0273],
         [0.0063, 0.0444, 0.0285,  ..., 0.0652, 0.0064, 0.0273],
         [0.0063, 0.0444, 0.0285,  ..., 0.0745, 0.9809, 0.9180],
         [0.0063, 0.8667, 0.9144,  ..., 0.7826, 0.0064, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:10,149 [Process: 0] Synchronize training processes
2024-08-19 13:10:10,150 [Process: 0] Evaluating...
2024-08-19 13:10:10,151 [Process: 0] EPOCH 95:
2024-08-19 13:10:10,153 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:11,195 [Process: 0] Synchronize training processes
2024-08-19 13:10:11,196 [Process: 0] Evaluating...
2024-08-19 13:10:11,198 [Process: 0] EPOCH 96:
2024-08-19 13:10:11,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0473, 0.0236, 0.9826,  ..., 0.9969, 0.0209, 0.0329],
         [0.0473, 0.0155, 0.0051,  ..., 0.0010, 0.0209, 0.0329],
         [0.8577, 0.0155, 0.0051,  ..., 0.0010, 0.9373, 0.9008],
         [0.0478, 0.9453, 0.0073,  ..., 0.0010, 0.0209, 0.0334]],
        [[0.0203, 0.0242, 0.9658,  ..., 0.9605, 0.0100, 0.0174],
         [0.0203, 0.0242, 0.0125,  ..., 0.0110, 0.0100, 0.0174],
         [0.9391, 0.0242, 0.0108,  ..., 0.0110, 0.0100, 0.9478],
         [0.0203, 0.9275, 0.0108,  ..., 0.0175, 0.9700, 0.0174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9754, 0.0365, 0.0519,  ..., 0.7096, 0.1224, 0.0242],
         [0.0082, 0.0365, 0.0519,  ..., 0.0933, 0.1477, 0.0242],
         [0.0082, 0.0365, 0.0519,  ..., 0.1039, 0.1527, 0.0242],
         [0.0082, 0.8904, 0.8443,  ..., 0.0933, 0.5772, 0.9273]],
        [[0.9701, 0.0201, 0.0387,  ..., 0.0523, 0.0114, 0.0040],
         [0.0100, 0.0201, 0.0387,  ..., 0.0504, 0.0114, 0.0040],
         [0.0100, 0.0201, 0.0387,  ..., 0.0504, 0.9659, 0.9879],
         [0.0100, 0.9396, 0.8839,  ..., 0.8468, 0.0114, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9602e-02, 3.4193e-03, 9.8096e-01,  ..., 9.8555e-01,
          4.0177e-02, 2.4348e-02],
         [3.9602e-02, 3.4193e-03, 6.3477e-03,  ..., 4.7004e-03,
          4.0177e-02, 2.4348e-02],
         [8.8119e-01, 3.4193e-03, 6.3477e-03,  ..., 4.7004e-03,
          8.7947e-01, 9.2696e-01],
         [3.9602e-02, 9.8974e-01, 6.3477e-03,  ..., 5.0505e-03,
          4.0177e-02, 2.4348e-02]],
        [[3.1089e-02, 6.0615e-04, 9.6964e-01,  ..., 9.9259e-01,
          3.4942e-03, 4.1284e-02],
         [3.1089e-02, 6.0615e-04, 8.3407e-03,  ..., 2.4706e-03,
          3.4942e-03, 3.7817e-02],
         [9.0673e-01, 6.0615e-04, 8.3407e-03,  ..., 2.4706e-03,
          3.4942e-03, 8.8088e-01],
         [3.1089e-02, 9.9818e-01, 1.3677e-02,  ..., 2.4706e-03,
          9.8952e-01, 4.0018e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9913, 0.0489, 0.0481,  ..., 0.3551, 0.0644, 0.0748],
         [0.0031, 0.0489, 0.0481,  ..., 0.1471, 0.0644, 0.0739],
         [0.0028, 0.0489, 0.0481,  ..., 0.1686, 0.0731, 0.1014],
         [0.0028, 0.8534, 0.8558,  ..., 0.3293, 0.7982, 0.7498]],
        [[0.9933, 0.0282, 0.0182,  ..., 0.0192, 0.0043, 0.0186],
         [0.0022, 0.0282, 0.0182,  ..., 0.0192, 0.0043, 0.0186],
         [0.0022, 0.0282, 0.0182,  ..., 0.0192, 0.9872, 0.9442],
         [0.0022, 0.9155, 0.9454,  ..., 0.9424, 0.0043, 0.0186]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:12,238 [Process: 0] Synchronize training processes
2024-08-19 13:10:12,238 [Process: 0] Evaluating...
2024-08-19 13:10:12,240 [Process: 0] EPOCH 97:
2024-08-19 13:10:12,242 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:13,280 [Process: 0] Synchronize training processes
2024-08-19 13:10:13,280 [Process: 0] Evaluating...
2024-08-19 13:10:13,282 [Process: 0] EPOCH 98:
2024-08-19 13:10:13,284 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0396, 0.0087, 0.9644,  ..., 0.9642, 0.0322, 0.0439],
         [0.0396, 0.0087, 0.0119,  ..., 0.0086, 0.0322, 0.0439],
         [0.8813, 0.0087, 0.0119,  ..., 0.0086, 0.9035, 0.8684],
         [0.0396, 0.9739, 0.0119,  ..., 0.0185, 0.0322, 0.0439]],
        [[0.0249, 0.0108, 0.9823,  ..., 0.8891, 0.0031, 0.0154],
         [0.0249, 0.0108, 0.0059,  ..., 0.0269, 0.0031, 0.0154],
         [0.9254, 0.0108, 0.0059,  ..., 0.0269, 0.0031, 0.9539],
         [0.0249, 0.9675, 0.0059,  ..., 0.0571, 0.9907, 0.0154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9955, 0.0395, 0.0394,  ..., 0.7886, 0.1053, 0.0292],
         [0.0015, 0.0395, 0.0394,  ..., 0.0612, 0.0905, 0.0292],
         [0.0015, 0.0449, 0.0394,  ..., 0.0612, 0.1626, 0.0292],
         [0.0015, 0.8762, 0.8818,  ..., 0.0890, 0.6416, 0.9123]],
        [[0.9343, 0.0369, 0.0242,  ..., 0.0461, 0.0037, 0.0165],
         [0.0219, 0.0369, 0.0242,  ..., 0.0450, 0.0037, 0.0165],
         [0.0219, 0.0369, 0.0242,  ..., 0.0450, 0.9889, 0.9505],
         [0.0219, 0.8894, 0.9274,  ..., 0.8639, 0.0037, 0.0165]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0426, 0.0085, 0.9284,  ..., 0.9855, 0.0138, 0.0163],
         [0.0426, 0.0085, 0.0221,  ..., 0.0048, 0.0138, 0.0163],
         [0.8722, 0.0085, 0.0220,  ..., 0.0048, 0.9586, 0.9512],
         [0.0426, 0.9745, 0.0275,  ..., 0.0048, 0.0138, 0.0163]],
        [[0.0199, 0.0054, 0.9476,  ..., 0.9798, 0.1119, 0.0395],
         [0.0199, 0.0054, 0.0159,  ..., 0.0067, 0.0543, 0.0395],
         [0.9403, 0.0054, 0.0159,  ..., 0.0067, 0.0543, 0.8794],
         [0.0199, 0.9839, 0.0207,  ..., 0.0069, 0.7796, 0.0415]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:10:14,322 [Process: 0] Synchronize training processes
2024-08-19 13:10:14,322 [Process: 0] Evaluating...
2024-08-19 13:10:14,324 [Process: 0] EPOCH 99:
2024-08-19 13:10:14,326 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9650, 0.0222, 0.0484,  ..., 0.7733, 0.0500, 0.0199],
         [0.0117, 0.0222, 0.0484,  ..., 0.0766, 0.0500, 0.0199],
         [0.0117, 0.0222, 0.0484,  ..., 0.0751, 0.8501, 0.0199],
         [0.0117, 0.9335, 0.8549,  ..., 0.0751, 0.0500, 0.9404]],
        [[0.9664, 0.0176, 0.0211,  ..., 0.0230, 0.0099, 0.0322],
         [0.0112, 0.0176, 0.0211,  ..., 0.0230, 0.0099, 0.0298],
         [0.0112, 0.0176, 0.0211,  ..., 0.0230, 0.9702, 0.9082],
         [0.0112, 0.9472, 0.9368,  ..., 0.9311, 0.0099, 0.0298]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0224, 0.0157, 0.9018,  ..., 0.9894, 0.0122, 0.0354],
         [0.0224, 0.0157, 0.0305,  ..., 0.0035, 0.0122, 0.0354],
         [0.9327, 0.0157, 0.0305,  ..., 0.0035, 0.9634, 0.8938],
         [0.0224, 0.9529, 0.0372,  ..., 0.0035, 0.0122, 0.0354]],
        [[0.0282, 0.0064, 0.9766,  ..., 0.9852, 0.0117, 0.0209],
         [0.0282, 0.0042, 0.0067,  ..., 0.0049, 0.0117, 0.0209],
         [0.9153, 0.0042, 0.0067,  ..., 0.0049, 0.0117, 0.9374],
         [0.0282, 0.9852, 0.0099,  ..., 0.0049, 0.9648, 0.0209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9850, 0.0323, 0.0211,  ..., 0.2334, 0.1264, 0.0197],
         [0.0050, 0.0323, 0.0211,  ..., 0.1396, 0.1308, 0.0197],
         [0.0050, 0.0323, 0.0211,  ..., 0.1698, 0.2833, 0.0197],
         [0.0050, 0.9032, 0.9366,  ..., 0.4571, 0.4595, 0.9410]],
        [[0.9672, 0.0357, 0.0313,  ..., 0.0332, 0.0029, 0.0079],
         [0.0109, 0.0357, 0.0313,  ..., 0.0332, 0.0029, 0.0079],
         [0.0109, 0.0357, 0.0313,  ..., 0.0332, 0.9912, 0.9764],
         [0.0109, 0.8930, 0.9061,  ..., 0.9004, 0.0029, 0.0079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0357, 0.0237, 0.9862,  ..., 0.9922, 0.0338, 0.0407],
         [0.0357, 0.0220, 0.0040,  ..., 0.0026, 0.0338, 0.0407],
         [0.8929, 0.0220, 0.0040,  ..., 0.0026, 0.8985, 0.8778],
         [0.0357, 0.9322, 0.0058,  ..., 0.0026, 0.0338, 0.0407]],
        [[0.0379, 0.0132, 0.9717,  ..., 0.9893, 0.0195, 0.0322],
         [0.0379, 0.0132, 0.0088,  ..., 0.0036, 0.0195, 0.0322],
         [0.8862, 0.0132, 0.0088,  ..., 0.0036, 0.0195, 0.9033],
         [0.0379, 0.9605, 0.0107,  ..., 0.0036, 0.9414, 0.0322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:15,363 [Process: 0] Synchronize training processes
2024-08-19 13:10:15,363 [Process: 0] Evaluating...
2024-08-19 13:10:15,365 [Process: 0] EPOCH 100:
2024-08-19 13:10:15,366 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:16,404 [Process: 0] Synchronize training processes
2024-08-19 13:10:16,404 [Process: 0] Evaluating...
2024-08-19 13:10:16,406 [Process: 0] EPOCH 101:
2024-08-19 13:10:16,408 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9729, 0.0427, 0.0485,  ..., 0.4214, 0.0936, 0.0307],
         [0.0096, 0.0427, 0.0485,  ..., 0.1523, 0.0964, 0.0307],
         [0.0087, 0.0427, 0.0623,  ..., 0.1882, 0.1332, 0.0307],
         [0.0087, 0.8719, 0.8408,  ..., 0.2381, 0.6768, 0.9078]],
        [[0.9851, 0.0990, 0.0362,  ..., 0.0223, 0.0121, 0.0300],
         [0.0050, 0.0704, 0.0362,  ..., 0.0223, 0.0121, 0.0300],
         [0.0050, 0.0818, 0.0362,  ..., 0.0223, 0.9636, 0.9099],
         [0.0050, 0.7488, 0.8915,  ..., 0.9331, 0.0121, 0.0300]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0374, 0.0169, 0.9955,  ..., 0.9878, 0.0174, 0.0156],
         [0.0374, 0.0169, 0.0015,  ..., 0.0041, 0.0174, 0.0156],
         [0.8803, 0.0169, 0.0015,  ..., 0.0041, 0.9478, 0.9532],
         [0.0448, 0.9492, 0.0015,  ..., 0.0041, 0.0174, 0.0156]],
        [[0.0382, 0.0037, 0.8888,  ..., 0.8511, 0.0063, 0.0239],
         [0.0382, 0.0037, 0.0308,  ..., 0.0594, 0.0063, 0.0239],
         [0.8854, 0.0037, 0.0308,  ..., 0.0424, 0.0063, 0.9284],
         [0.0382, 0.9889, 0.0496,  ..., 0.0471, 0.9810, 0.0239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9885, 0.0357, 0.0383,  ..., 0.6248, 0.1039, 0.0252],
         [0.0038, 0.0357, 0.0383,  ..., 0.1160, 0.1039, 0.0248],
         [0.0038, 0.0357, 0.0393,  ..., 0.1016, 0.1826, 0.0248],
         [0.0038, 0.8930, 0.8841,  ..., 0.1576, 0.6095, 0.9252]],
        [[0.9930, 0.0498, 0.0304,  ..., 0.0281, 0.0033, 0.0484],
         [0.0023, 0.0492, 0.0304,  ..., 0.0281, 0.0033, 0.0484],
         [0.0023, 0.0616, 0.0304,  ..., 0.0281, 0.9902, 0.8485],
         [0.0023, 0.8393, 0.9088,  ..., 0.9156, 0.0033, 0.0546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0261, 0.0158, 0.9727,  ..., 0.9865, 0.0232, 0.0260],
         [0.0261, 0.0158, 0.0084,  ..., 0.0072, 0.0232, 0.0260],
         [0.9216, 0.0158, 0.0084,  ..., 0.0032, 0.9303, 0.9219],
         [0.0261, 0.9526, 0.0106,  ..., 0.0032, 0.0232, 0.0260]],
        [[0.0386, 0.0021, 0.9711,  ..., 0.9562, 0.8948, 0.0141],
         [0.0544, 0.0021, 0.0096,  ..., 0.0119, 0.0210, 0.0141],
         [0.8683, 0.0021, 0.0096,  ..., 0.0119, 0.0210, 0.9576],
         [0.0386, 0.9937, 0.0096,  ..., 0.0201, 0.0632, 0.0141]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:10:17,444 [Process: 0] Synchronize training processes
2024-08-19 13:10:17,445 [Process: 0] Evaluating...
2024-08-19 13:10:17,863 [Process: 0] EPOCH 102:
2024-08-19 13:10:17,867 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:18,898 [Process: 0] Synchronize training processes
2024-08-19 13:10:18,898 [Process: 0] Evaluating...
2024-08-19 13:10:18,900 [Process: 0] EPOCH 103:
2024-08-19 13:10:18,902 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9457, 0.0522, 0.0267,  ..., 0.8675, 0.0562, 0.0209],
         [0.0226, 0.0522, 0.0267,  ..., 0.0494, 0.0453, 0.0209],
         [0.0159, 0.0561, 0.0267,  ..., 0.0415, 0.0453, 0.0209],
         [0.0159, 0.8396, 0.9200,  ..., 0.0415, 0.8533, 0.9373]],
        [[0.9552, 0.0316, 0.0303,  ..., 0.0565, 0.0246, 0.0106],
         [0.0149, 0.0299, 0.0343,  ..., 0.0475, 0.0246, 0.0106],
         [0.0149, 0.0299, 0.0303,  ..., 0.0496, 0.9263, 0.9682],
         [0.0149, 0.9086, 0.9051,  ..., 0.8465, 0.0246, 0.0106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0257, 0.0145, 0.9875,  ..., 0.9941, 0.0248, 0.0242],
         [0.0257, 0.0145, 0.0042,  ..., 0.0020, 0.0248, 0.0242],
         [0.9229, 0.0145, 0.0042,  ..., 0.0020, 0.9255, 0.9274],
         [0.0257, 0.9564, 0.0042,  ..., 0.0020, 0.0248, 0.0242]],
        [[0.0407, 0.0115, 0.9945,  ..., 0.9575, 0.4775, 0.0211],
         [0.0407, 0.0115, 0.0018,  ..., 0.0124, 0.0614, 0.0211],
         [0.8779, 0.0115, 0.0018,  ..., 0.0124, 0.0614, 0.9366],
         [0.0407, 0.9655, 0.0018,  ..., 0.0177, 0.3996, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9863, 0.0416, 0.0723,  ..., 0.8590, 0.1601, 0.0254],
         [0.0046, 0.0416, 0.0811,  ..., 0.0440, 0.1292, 0.0254],
         [0.0046, 0.0416, 0.0723,  ..., 0.0424, 0.1544, 0.0254],
         [0.0046, 0.8751, 0.7743,  ..., 0.0546, 0.5563, 0.9239]],
        [[0.9628, 0.0333, 0.0190,  ..., 0.0209, 0.0061, 0.0338],
         [0.0124, 0.0333, 0.0212,  ..., 0.0209, 0.0061, 0.0338],
         [0.0124, 0.0333, 0.0190,  ..., 0.0209, 0.9816, 0.8987],
         [0.0124, 0.9000, 0.9408,  ..., 0.9372, 0.0061, 0.0338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:19,937 [Process: 0] Synchronize training processes
2024-08-19 13:10:19,938 [Process: 0] Evaluating...
2024-08-19 13:10:19,939 [Process: 0] EPOCH 104:
2024-08-19 13:10:19,941 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:21,001 [Process: 0] Synchronize training processes
2024-08-19 13:10:21,001 [Process: 0] Evaluating...
2024-08-19 13:10:21,003 [Process: 0] EPOCH 105:
2024-08-19 13:10:21,005 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0280, 0.0117, 0.9487,  ..., 0.9647, 0.0368, 0.0210],
         [0.0280, 0.0117, 0.0123,  ..., 0.0116, 0.0368, 0.0210],
         [0.9160, 0.0117, 0.0123,  ..., 0.0116, 0.8890, 0.9370],
         [0.0280, 0.9649, 0.0268,  ..., 0.0122, 0.0373, 0.0210]],
        [[0.0227, 0.0090, 0.9483,  ..., 0.9717, 0.0019, 0.0148],
         [0.0227, 0.0090, 0.0138,  ..., 0.0081, 0.0019, 0.0148],
         [0.9320, 0.0090, 0.0138,  ..., 0.0081, 0.0019, 0.9556],
         [0.0227, 0.9729, 0.0241,  ..., 0.0121, 0.9943, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9925, 0.0434, 0.0418,  ..., 0.8798, 0.2224, 0.0369],
         [0.0025, 0.0413, 0.0418,  ..., 0.0381, 0.0946, 0.0369],
         [0.0025, 0.0413, 0.0434,  ..., 0.0381, 0.1020, 0.0369],
         [0.0025, 0.8739, 0.8730,  ..., 0.0440, 0.5810, 0.8892]],
        [[0.9535, 0.0170, 0.0308,  ..., 0.0512, 0.0137, 0.0063],
         [0.0155, 0.0170, 0.0308,  ..., 0.0496, 0.0137, 0.0063],
         [0.0155, 0.0170, 0.0308,  ..., 0.0496, 0.9589, 0.9810],
         [0.0155, 0.9490, 0.9077,  ..., 0.8497, 0.0137, 0.0063]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0249, 0.0023, 0.9713,  ..., 0.9924, 0.0457, 0.0171],
         [0.0249, 0.0023, 0.0085,  ..., 0.0025, 0.0457, 0.0171],
         [0.9252, 0.0023, 0.0085,  ..., 0.0025, 0.8577, 0.9488],
         [0.0249, 0.9930, 0.0116,  ..., 0.0025, 0.0508, 0.0171]],
        [[0.0183, 0.0283, 0.9923,  ..., 0.9190, 0.0050, 0.0215],
         [0.0183, 0.0283, 0.0025,  ..., 0.0317, 0.0050, 0.0215],
         [0.9451, 0.0283, 0.0025,  ..., 0.0225, 0.0050, 0.9356],
         [0.0183, 0.9150, 0.0027,  ..., 0.0269, 0.9851, 0.0215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9864, 0.0344, 0.0185,  ..., 0.7844, 0.3897, 0.0162],
         [0.0045, 0.0378, 0.0185,  ..., 0.0565, 0.1503, 0.0162],
         [0.0045, 0.0344, 0.0185,  ..., 0.0565, 0.1137, 0.0162],
         [0.0045, 0.8934, 0.9444,  ..., 0.1027, 0.3463, 0.9513]],
        [[0.9509, 0.0105, 0.0130,  ..., 0.1365, 0.0031, 0.0510],
         [0.0153, 0.0105, 0.0130,  ..., 0.1694, 0.0031, 0.0506],
         [0.0177, 0.0105, 0.0130,  ..., 0.1377, 0.9906, 0.8219],
         [0.0161, 0.9684, 0.9610,  ..., 0.5565, 0.0031, 0.0765]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:22,087 [Process: 0] Synchronize training processes
2024-08-19 13:10:22,088 [Process: 0] Evaluating...
2024-08-19 13:10:22,090 [Process: 0] EPOCH 106:
2024-08-19 13:10:22,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:23,154 [Process: 0] Synchronize training processes
2024-08-19 13:10:23,154 [Process: 0] Evaluating...
2024-08-19 13:10:23,156 [Process: 0] EPOCH 107:
2024-08-19 13:10:23,158 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0393, 0.0153, 0.9917,  ..., 0.9804, 0.0373, 0.0312],
         [0.0393, 0.0153, 0.0028,  ..., 0.0064, 0.0373, 0.0312],
         [0.8822, 0.0153, 0.0028,  ..., 0.0064, 0.8862, 0.9050],
         [0.0393, 0.9541, 0.0028,  ..., 0.0068, 0.0392, 0.0326]],
        [[0.0275, 0.0069, 0.9962,  ..., 0.9684, 0.1335, 0.0304],
         [0.0275, 0.0069, 0.0013,  ..., 0.0105, 0.0180, 0.0304],
         [0.9176, 0.0069, 0.0013,  ..., 0.0105, 0.0180, 0.9046],
         [0.0275, 0.9793, 0.0013,  ..., 0.0105, 0.8304, 0.0345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9487e-01, 2.3309e-02, 6.0141e-02,  ..., 7.0794e-01,
          5.4898e-01, 2.9942e-02],
         [1.7100e-03, 2.3309e-02, 5.5932e-02,  ..., 1.2984e-01,
          2.3804e-01, 2.9942e-02],
         [1.7100e-03, 2.3309e-02, 7.3717e-02,  ..., 7.4478e-02,
          1.1386e-01, 3.4902e-02],
         [1.7100e-03, 9.3007e-01, 8.1021e-01,  ..., 8.7741e-02,
          9.9122e-02, 9.0521e-01]],
        [[9.9818e-01, 2.4274e-02, 8.0894e-03,  ..., 3.9870e-02,
          1.6972e-02, 7.3499e-02],
         [6.0778e-04, 2.4274e-02, 8.0894e-03,  ..., 3.3877e-02,
          1.6972e-02, 6.8991e-02],
         [6.0778e-04, 2.4297e-02, 8.0894e-03,  ..., 3.3877e-02,
          9.4908e-01, 7.1218e-01],
         [6.0778e-04, 9.2715e-01, 9.7573e-01,  ..., 8.9238e-01,
          1.6972e-02, 1.4533e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0221, 0.0088, 0.9841,  ..., 0.9920, 0.0224, 0.0250],
         [0.0221, 0.0088, 0.0053,  ..., 0.0027, 0.0224, 0.0250],
         [0.9337, 0.0088, 0.0053,  ..., 0.0027, 0.9328, 0.9251],
         [0.0221, 0.9735, 0.0053,  ..., 0.0027, 0.0224, 0.0250]],
        [[0.0341, 0.0024, 0.9644,  ..., 0.9895, 0.7781, 0.0310],
         [0.0335, 0.0024, 0.0105,  ..., 0.0035, 0.0436, 0.0310],
         [0.8989, 0.0024, 0.0105,  ..., 0.0035, 0.0436, 0.9056],
         [0.0335, 0.9929, 0.0146,  ..., 0.0035, 0.1346, 0.0323]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9880, 0.0309, 0.0421,  ..., 0.8086, 0.5935, 0.0444],
         [0.0040, 0.0309, 0.0427,  ..., 0.0562, 0.1833, 0.0423],
         [0.0040, 0.0309, 0.0421,  ..., 0.0562, 0.1078, 0.0572],
         [0.0040, 0.9074, 0.8731,  ..., 0.0789, 0.1153, 0.8561]],
        [[0.9791, 0.0216, 0.0244,  ..., 0.0276, 0.0118, 0.0537],
         [0.0070, 0.0216, 0.0244,  ..., 0.0268, 0.0118, 0.0537],
         [0.0070, 0.0216, 0.0244,  ..., 0.0268, 0.9646, 0.7941],
         [0.0070, 0.9352, 0.9269,  ..., 0.9189, 0.0118, 0.0986]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:24,197 [Process: 0] Synchronize training processes
2024-08-19 13:10:24,197 [Process: 0] Evaluating...
2024-08-19 13:10:24,199 [Process: 0] EPOCH 108:
2024-08-19 13:10:24,201 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:25,250 [Process: 0] Synchronize training processes
2024-08-19 13:10:25,251 [Process: 0] Evaluating...
2024-08-19 13:10:25,252 [Process: 0] EPOCH 109:
2024-08-19 13:10:25,254 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0422, 0.0159, 0.9117,  ..., 0.9714, 0.0362, 0.0514],
         [0.0400, 0.0103, 0.0191,  ..., 0.0095, 0.0362, 0.0514],
         [0.8638, 0.0103, 0.0191,  ..., 0.0095, 0.8888, 0.8370],
         [0.0540, 0.9635, 0.0500,  ..., 0.0095, 0.0389, 0.0602]],
        [[0.0477, 0.0029, 0.9739,  ..., 0.9892, 0.6397, 0.0420],
         [0.0692, 0.0029, 0.0087,  ..., 0.0036, 0.0632, 0.0392],
         [0.8354, 0.0029, 0.0087,  ..., 0.0036, 0.0632, 0.8664],
         [0.0477, 0.9914, 0.0087,  ..., 0.0036, 0.2339, 0.0525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9934, 0.0288, 0.0346,  ..., 0.8542, 0.9584, 0.0197],
         [0.0022, 0.0288, 0.0346,  ..., 0.0697, 0.0171, 0.0197],
         [0.0022, 0.0288, 0.0352,  ..., 0.0381, 0.0122, 0.0197],
         [0.0022, 0.9136, 0.8956,  ..., 0.0381, 0.0122, 0.9410]],
        [[0.9716, 0.0114, 0.0158,  ..., 0.0210, 0.0108, 0.0174],
         [0.0089, 0.0114, 0.0158,  ..., 0.0210, 0.0108, 0.0174],
         [0.0106, 0.0114, 0.0158,  ..., 0.0210, 0.9675, 0.9477],
         [0.0089, 0.9657, 0.9527,  ..., 0.9371, 0.0108, 0.0174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0253, 0.0135, 0.9554,  ..., 0.9781, 0.0175, 0.0279],
         [0.0253, 0.0135, 0.0146,  ..., 0.0073, 0.0175, 0.0279],
         [0.9218, 0.0135, 0.0146,  ..., 0.0073, 0.9475, 0.9145],
         [0.0277, 0.9596, 0.0154,  ..., 0.0073, 0.0175, 0.0298]],
        [[0.0408, 0.0146, 0.9899,  ..., 0.9243, 0.5985, 0.0393],
         [0.0405, 0.0146, 0.0034,  ..., 0.0290, 0.0581, 0.0390],
         [0.8783, 0.0146, 0.0034,  ..., 0.0233, 0.0581, 0.8826],
         [0.0405, 0.9562, 0.0034,  ..., 0.0234, 0.2854, 0.0390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9848, 0.0180, 0.0357,  ..., 0.4646, 0.8642, 0.0094],
         [0.0051, 0.0180, 0.0381,  ..., 0.0962, 0.0414, 0.0094],
         [0.0051, 0.0180, 0.0357,  ..., 0.1109, 0.0455, 0.0094],
         [0.0051, 0.9459, 0.8904,  ..., 0.3283, 0.0488, 0.9718]],
        [[0.9769, 0.0260, 0.0253,  ..., 0.0393, 0.0067, 0.0083],
         [0.0077, 0.0260, 0.0253,  ..., 0.0393, 0.0067, 0.0083],
         [0.0077, 0.0347, 0.0297,  ..., 0.0393, 0.9799, 0.9751],
         [0.0077, 0.9133, 0.9196,  ..., 0.8822, 0.0067, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:26,303 [Process: 0] Synchronize training processes
2024-08-19 13:10:26,303 [Process: 0] Evaluating...
2024-08-19 13:10:26,305 [Process: 0] EPOCH 110:
2024-08-19 13:10:26,307 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0431, 0.1222, 0.9742,  ..., 0.9911, 0.0443, 0.0226],
         [0.0431, 0.0730, 0.0120,  ..., 0.0028, 0.0435, 0.0226],
         [0.8523, 0.0786, 0.0069,  ..., 0.0028, 0.8652, 0.9321],
         [0.0615, 0.7262, 0.0069,  ..., 0.0032, 0.0470, 0.0226]],
        [[0.0381, 0.0015, 0.9881,  ..., 0.9801, 0.0156, 0.0121],
         [0.0356, 0.0015, 0.0036,  ..., 0.0062, 0.0151, 0.0121],
         [0.8884, 0.0015, 0.0036,  ..., 0.0062, 0.0151, 0.9637],
         [0.0379, 0.9954, 0.0047,  ..., 0.0075, 0.9542, 0.0121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7509e-01, 2.5329e-02, 3.8762e-02,  ..., 8.7808e-01,
          9.6983e-01, 2.7063e-02],
         [8.3034e-03, 2.5329e-02, 4.2887e-02,  ..., 4.5253e-02,
          1.2348e-02, 2.7063e-02],
         [8.3034e-03, 2.5329e-02, 3.8762e-02,  ..., 3.8332e-02,
          8.9090e-03, 2.8002e-02],
         [8.3034e-03, 9.2401e-01, 8.7959e-01,  ..., 3.8332e-02,
          8.9090e-03, 9.1787e-01]],
        [[9.9842e-01, 1.8637e-02, 2.7684e-02,  ..., 1.9551e-02,
          7.5444e-03, 2.2585e-02],
         [5.2642e-04, 1.8637e-02, 2.7684e-02,  ..., 1.9551e-02,
          7.5444e-03, 2.2585e-02],
         [5.2642e-04, 1.8637e-02, 3.0823e-02,  ..., 1.9551e-02,
          9.7737e-01, 9.3225e-01],
         [5.2642e-04, 9.4409e-01, 9.1381e-01,  ..., 9.4135e-01,
          7.5444e-03, 2.2585e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0165, 0.0869, 0.9954,  ..., 0.9879, 0.0412, 0.0444],
         [0.0165, 0.0869, 0.0015,  ..., 0.0040, 0.0412, 0.0444],
         [0.9505, 0.1020, 0.0015,  ..., 0.0040, 0.8763, 0.8589],
         [0.0165, 0.7243, 0.0015,  ..., 0.0040, 0.0412, 0.0523]],
        [[0.0289, 0.0080, 0.9845,  ..., 0.9891, 0.4794, 0.0205],
         [0.0289, 0.0080, 0.0051,  ..., 0.0036, 0.0516, 0.0205],
         [0.9134, 0.0080, 0.0051,  ..., 0.0036, 0.0516, 0.9385],
         [0.0289, 0.9761, 0.0052,  ..., 0.0036, 0.4174, 0.0205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:10:27,352 [Process: 0] Synchronize training processes
2024-08-19 13:10:27,352 [Process: 0] Evaluating...
2024-08-19 13:10:27,354 [Process: 0] EPOCH 111:
2024-08-19 13:10:27,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:28,395 [Process: 0] Synchronize training processes
2024-08-19 13:10:28,395 [Process: 0] Evaluating...
2024-08-19 13:10:28,817 [Process: 0] EPOCH 112:
2024-08-19 13:10:28,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9884, 0.0385, 0.0519,  ..., 0.9628, 0.0666, 0.0178],
         [0.0039, 0.0385, 0.0544,  ..., 0.0158, 0.0726, 0.0178],
         [0.0039, 0.0385, 0.0519,  ..., 0.0107, 0.0666, 0.0178],
         [0.0039, 0.8844, 0.8418,  ..., 0.0107, 0.7943, 0.9466]],
        [[0.9705, 0.0132, 0.0160,  ..., 0.0153, 0.0112, 0.0460],
         [0.0091, 0.0132, 0.0160,  ..., 0.0153, 0.0112, 0.0383],
         [0.0112, 0.0132, 0.0160,  ..., 0.0153, 0.9665, 0.8593],
         [0.0091, 0.9603, 0.9519,  ..., 0.9540, 0.0112, 0.0564]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0164, 0.1830, 0.9270,  ..., 0.9917, 0.0391, 0.0441],
         [0.0164, 0.2286, 0.0196,  ..., 0.0028, 0.0391, 0.0441],
         [0.9508, 0.1356, 0.0196,  ..., 0.0028, 0.8756, 0.8631],
         [0.0164, 0.4529, 0.0337,  ..., 0.0028, 0.0462, 0.0486]],
        [[0.0242, 0.0018, 0.9946,  ..., 0.9864, 0.0315, 0.0146],
         [0.0242, 0.0018, 0.0018,  ..., 0.0045, 0.0198, 0.0146],
         [0.9274, 0.0018, 0.0018,  ..., 0.0045, 0.0198, 0.9563],
         [0.0242, 0.9946, 0.0018,  ..., 0.0045, 0.9289, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9847, 0.0352, 0.0255,  ..., 0.9553, 0.0320, 0.0223],
         [0.0051, 0.0352, 0.0255,  ..., 0.0130, 0.0320, 0.0223],
         [0.0051, 0.0378, 0.0255,  ..., 0.0187, 0.0320, 0.0223],
         [0.0051, 0.8918, 0.9235,  ..., 0.0130, 0.9040, 0.9332]],
        [[0.9936, 0.0241, 0.0165,  ..., 0.0282, 0.0088, 0.0211],
         [0.0021, 0.0241, 0.0165,  ..., 0.0282, 0.0088, 0.0211],
         [0.0021, 0.0241, 0.0165,  ..., 0.0282, 0.9736, 0.9367],
         [0.0021, 0.9276, 0.9504,  ..., 0.9153, 0.0088, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0098, 0.1404, 0.9815,  ..., 0.9957, 0.0350, 0.0465],
         [0.0098, 0.1404, 0.0056,  ..., 0.0015, 0.0350, 0.0465],
         [0.9705, 0.2436, 0.0056,  ..., 0.0014, 0.8950, 0.8480],
         [0.0098, 0.4755, 0.0074,  ..., 0.0014, 0.0350, 0.0591]],
        [[0.0344, 0.0020, 0.9712,  ..., 0.9870, 0.0026, 0.0392],
         [0.0344, 0.0020, 0.0098,  ..., 0.0043, 0.0026, 0.0392],
         [0.8969, 0.0020, 0.0095,  ..., 0.0043, 0.0026, 0.8823],
         [0.0344, 0.9940, 0.0095,  ..., 0.0043, 0.9922, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:29,869 [Process: 0] Synchronize training processes
2024-08-19 13:10:29,869 [Process: 0] Evaluating...
2024-08-19 13:10:29,871 [Process: 0] EPOCH 113:
2024-08-19 13:10:29,873 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:30,949 [Process: 0] Synchronize training processes
2024-08-19 13:10:30,950 [Process: 0] Evaluating...
2024-08-19 13:10:30,951 [Process: 0] EPOCH 114:
2024-08-19 13:10:30,953 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9703, 0.0150, 0.0324,  ..., 0.5541, 0.2218, 0.0115],
         [0.0099, 0.0150, 0.0324,  ..., 0.2064, 0.1426, 0.0115],
         [0.0099, 0.0150, 0.0324,  ..., 0.0881, 0.0942, 0.0115],
         [0.0099, 0.9551, 0.9029,  ..., 0.1514, 0.5413, 0.9655]],
        [[0.9638, 0.0126, 0.0353,  ..., 0.0392, 0.0048, 0.0051],
         [0.0132, 0.0126, 0.0353,  ..., 0.0392, 0.0048, 0.0051],
         [0.0115, 0.0126, 0.0353,  ..., 0.0392, 0.9855, 0.9847],
         [0.0115, 0.9623, 0.8941,  ..., 0.8824, 0.0048, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.5891e-02, 3.6356e-02, 9.7982e-01,  ..., 9.9237e-01,
          2.3042e-02, 2.9212e-02],
         [1.5891e-02, 3.6356e-02, 6.4992e-03,  ..., 2.5429e-03,
          2.2645e-02, 2.9212e-02],
         [9.5233e-01, 3.6356e-02, 6.4992e-03,  ..., 2.5429e-03,
          9.3167e-01, 9.1236e-01],
         [1.5891e-02, 8.9093e-01, 7.1812e-03,  ..., 2.5429e-03,
          2.2645e-02, 2.9212e-02]],
        [[3.6928e-02, 1.3625e-02, 9.8899e-01,  ..., 9.8173e-01,
          9.9540e-04, 2.0470e-02],
         [3.6928e-02, 1.3625e-02, 3.6713e-03,  ..., 5.2155e-03,
          9.9540e-04, 2.0470e-02],
         [8.8922e-01, 1.3625e-02, 3.6713e-03,  ..., 5.2155e-03,
          9.9540e-04, 9.3859e-01],
         [3.6928e-02, 9.5913e-01, 3.6713e-03,  ..., 7.8437e-03,
          9.9701e-01, 2.0470e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9934, 0.0337, 0.0458,  ..., 0.8199, 0.9912, 0.0226],
         [0.0022, 0.0337, 0.0458,  ..., 0.0448, 0.0037, 0.0226],
         [0.0022, 0.0337, 0.0458,  ..., 0.0590, 0.0025, 0.0226],
         [0.0022, 0.8990, 0.8625,  ..., 0.0763, 0.0025, 0.9323]],
        [[0.9762, 0.0348, 0.0210,  ..., 0.0540, 0.0043, 0.0170],
         [0.0077, 0.0348, 0.0210,  ..., 0.0437, 0.0043, 0.0170],
         [0.0085, 0.0348, 0.0210,  ..., 0.0437, 0.9871, 0.9490],
         [0.0077, 0.8956, 0.9371,  ..., 0.8586, 0.0043, 0.0170]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-19 13:10:32,000 [Process: 0] Synchronize training processes
2024-08-19 13:10:32,001 [Process: 0] Evaluating...
2024-08-19 13:10:32,002 [Process: 0] EPOCH 115:
2024-08-19 13:10:32,004 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:33,051 [Process: 0] Synchronize training processes
2024-08-19 13:10:33,052 [Process: 0] Evaluating...
2024-08-19 13:10:33,053 [Process: 0] EPOCH 116:
2024-08-19 13:10:33,055 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0084, 0.0357, 0.9783,  ..., 0.9791, 0.0205, 0.0326],
         [0.0084, 0.0405, 0.0072,  ..., 0.0075, 0.0205, 0.0326],
         [0.9748, 0.0357, 0.0072,  ..., 0.0067, 0.9384, 0.8944],
         [0.0084, 0.8880, 0.0072,  ..., 0.0067, 0.0205, 0.0405]],
        [[0.0158, 0.0108, 0.9886,  ..., 0.9749, 0.0017, 0.0311],
         [0.0158, 0.0132, 0.0038,  ..., 0.0082, 0.0017, 0.0311],
         [0.9526, 0.0108, 0.0038,  ..., 0.0082, 0.0017, 0.9067],
         [0.0158, 0.9651, 0.0038,  ..., 0.0087, 0.9948, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9944, 0.0309, 0.0873,  ..., 0.5450, 0.9434, 0.0247],
         [0.0019, 0.0309, 0.0565,  ..., 0.0938, 0.0272, 0.0247],
         [0.0018, 0.0309, 0.0565,  ..., 0.0938, 0.0147, 0.0247],
         [0.0018, 0.9074, 0.7997,  ..., 0.2674, 0.0147, 0.9259]],
        [[0.9802, 0.0234, 0.0439,  ..., 0.0084, 0.0297, 0.0311],
         [0.0066, 0.0234, 0.0406,  ..., 0.0084, 0.0297, 0.0311],
         [0.0066, 0.0234, 0.0417,  ..., 0.0084, 0.9109, 0.9066],
         [0.0066, 0.9297, 0.8738,  ..., 0.9747, 0.0297, 0.0311]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0203, 0.0122, 0.9764,  ..., 0.9946, 0.0141, 0.0409],
         [0.0203, 0.0122, 0.0071,  ..., 0.0018, 0.0141, 0.0394],
         [0.9365, 0.0122, 0.0071,  ..., 0.0018, 0.9578, 0.8796],
         [0.0228, 0.9635, 0.0095,  ..., 0.0018, 0.0141, 0.0401]],
        [[0.0203, 0.0023, 0.9734,  ..., 0.9732, 0.7587, 0.0320],
         [0.0203, 0.0023, 0.0067,  ..., 0.0089, 0.0579, 0.0320],
         [0.9391, 0.0023, 0.0067,  ..., 0.0089, 0.0579, 0.9041],
         [0.0203, 0.9932, 0.0131,  ..., 0.0089, 0.1256, 0.0320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9825e-01, 3.0824e-02, 1.6850e-02,  ..., 2.9043e-01,
          9.7315e-01, 1.3584e-02],
         [5.8288e-04, 3.1587e-02, 1.6850e-02,  ..., 1.1376e-01,
          8.9512e-03, 1.3584e-02],
         [5.8288e-04, 3.0824e-02, 1.6850e-02,  ..., 1.7618e-01,
          8.9512e-03, 1.3584e-02],
         [5.8288e-04, 9.0677e-01, 9.4945e-01,  ..., 4.1962e-01,
          8.9512e-03, 9.5925e-01]],
        [[9.8433e-01, 1.9955e-02, 1.6332e-02,  ..., 3.7765e-02,
          4.3710e-03, 1.3042e-02],
         [5.2223e-03, 1.9955e-02, 1.6332e-02,  ..., 3.7765e-02,
          4.3710e-03, 1.3042e-02],
         [5.2223e-03, 1.9955e-02, 1.6332e-02,  ..., 4.5758e-02,
          9.8689e-01, 9.6087e-01],
         [5.2223e-03, 9.4013e-01, 9.5100e-01,  ..., 8.7871e-01,
          4.3710e-03, 1.3042e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:34,106 [Process: 0] Synchronize training processes
2024-08-19 13:10:34,106 [Process: 0] Evaluating...
2024-08-19 13:10:34,108 [Process: 0] EPOCH 117:
2024-08-19 13:10:34,110 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:35,157 [Process: 0] Synchronize training processes
2024-08-19 13:10:35,158 [Process: 0] Evaluating...
2024-08-19 13:10:35,160 [Process: 0] EPOCH 118:
2024-08-19 13:10:35,162 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0364, 0.0102, 0.9892,  ..., 0.9527, 0.0147, 0.0239],
         [0.0364, 0.0075, 0.0036,  ..., 0.0112, 0.0147, 0.0239],
         [0.8657, 0.0075, 0.0036,  ..., 0.0112, 0.9560, 0.9284],
         [0.0615, 0.9749, 0.0036,  ..., 0.0249, 0.0147, 0.0239]],
        [[0.0171, 0.0045, 0.9842,  ..., 0.9848, 0.0022, 0.0108],
         [0.0171, 0.0045, 0.0053,  ..., 0.0051, 0.0022, 0.0108],
         [0.9487, 0.0045, 0.0053,  ..., 0.0051, 0.0022, 0.9676],
         [0.0171, 0.9864, 0.0053,  ..., 0.0051, 0.9933, 0.0108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9851, 0.0216, 0.0485,  ..., 0.9733, 0.9961, 0.0224],
         [0.0050, 0.0216, 0.0441,  ..., 0.0089, 0.0013, 0.0224],
         [0.0050, 0.0216, 0.0463,  ..., 0.0089, 0.0013, 0.0224],
         [0.0050, 0.9353, 0.8611,  ..., 0.0089, 0.0013, 0.9327]],
        [[0.9899, 0.0092, 0.0199,  ..., 0.0383, 0.0148, 0.0072],
         [0.0034, 0.0092, 0.0199,  ..., 0.0383, 0.0148, 0.0072],
         [0.0034, 0.0092, 0.0199,  ..., 0.0418, 0.9555, 0.9783],
         [0.0034, 0.9725, 0.9404,  ..., 0.8817, 0.0148, 0.0072]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0217, 0.0043, 0.9964,  ..., 0.9731, 0.0214, 0.0260],
         [0.0217, 0.0044, 0.0012,  ..., 0.0090, 0.0214, 0.0260],
         [0.9309, 0.0043, 0.0012,  ..., 0.0090, 0.9357, 0.9221],
         [0.0257, 0.9870, 0.0012,  ..., 0.0090, 0.0214, 0.0260]],
        [[0.0156, 0.0074, 0.9897,  ..., 0.9826, 0.0040, 0.0182],
         [0.0156, 0.0092, 0.0030,  ..., 0.0054, 0.0040, 0.0182],
         [0.9531, 0.0074, 0.0030,  ..., 0.0054, 0.0040, 0.9455],
         [0.0156, 0.9759, 0.0042,  ..., 0.0066, 0.9880, 0.0182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.1999e-01, 1.7649e-02, 1.4544e-02,  ..., 9.9973e-01,
          9.8364e-01, 1.8233e-02],
         [2.6668e-02, 1.7649e-02, 1.4544e-02,  ..., 9.1284e-05,
          5.4537e-03, 1.9141e-02],
         [2.6668e-02, 1.7649e-02, 1.4544e-02,  ..., 9.1284e-05,
          5.4537e-03, 1.8233e-02],
         [2.6668e-02, 9.4705e-01, 9.5637e-01,  ..., 9.1284e-05,
          5.4537e-03, 9.4439e-01]],
        [[9.9822e-01, 1.7593e-02, 2.4975e-02,  ..., 1.2383e-01,
          1.0682e-02, 1.9210e-02],
         [5.9193e-04, 1.7593e-02, 2.5518e-02,  ..., 9.4927e-02,
          1.0682e-02, 1.9210e-02],
         [5.9193e-04, 1.7593e-02, 2.4975e-02,  ..., 3.3389e-01,
          9.6795e-01, 9.4237e-01],
         [5.9193e-04, 9.4722e-01, 9.2453e-01,  ..., 4.4735e-01,
          1.0682e-02, 1.9210e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:36,214 [Process: 0] Synchronize training processes
2024-08-19 13:10:36,214 [Process: 0] Evaluating...
2024-08-19 13:10:36,216 [Process: 0] EPOCH 119:
2024-08-19 13:10:36,218 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:37,263 [Process: 0] Synchronize training processes
2024-08-19 13:10:37,264 [Process: 0] Evaluating...
2024-08-19 13:10:37,265 [Process: 0] EPOCH 120:
2024-08-19 13:10:37,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.2990e-02, 1.6185e-03, 9.9453e-01,  ..., 9.6421e-01,
          3.4067e-02, 3.9186e-02],
         [4.2990e-02, 1.6185e-03, 1.8227e-03,  ..., 1.1930e-02,
          3.4067e-02, 3.9186e-02],
         [8.3690e-01, 1.6185e-03, 1.8227e-03,  ..., 1.1930e-02,
          8.9780e-01, 8.8244e-01],
         [7.7117e-02, 9.9514e-01, 1.8227e-03,  ..., 1.1930e-02,
          3.4067e-02, 3.9186e-02]],
        [[1.9362e-02, 5.1252e-03, 9.9070e-01,  ..., 9.9622e-01,
          5.8096e-04, 1.6471e-02],
         [1.9362e-02, 5.1252e-03, 3.0746e-03,  ..., 1.2608e-03,
          5.8096e-04, 1.6471e-02],
         [9.4191e-01, 5.1252e-03, 3.0746e-03,  ..., 1.2608e-03,
          5.8096e-04, 9.5059e-01],
         [1.9362e-02, 9.8462e-01, 3.1497e-03,  ..., 1.2608e-03,
          9.9826e-01, 1.6471e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7323e-01, 3.4260e-02, 2.4592e-02,  ..., 9.9791e-01,
          9.6135e-01, 3.5503e-02],
         [9.9433e-03, 3.4260e-02, 2.6727e-02,  ..., 6.9552e-04,
          1.2882e-02, 3.5503e-02],
         [8.4114e-03, 3.7392e-02, 2.4592e-02,  ..., 6.9552e-04,
          1.2882e-02, 4.7755e-02],
         [8.4114e-03, 8.9409e-01, 9.2409e-01,  ..., 6.9552e-04,
          1.2882e-02, 8.8124e-01]],
        [[9.9806e-01, 8.2499e-03, 3.7656e-02,  ..., 2.7266e-02,
          3.4474e-03, 1.1981e-01],
         [6.4535e-04, 8.2499e-03, 3.3744e-02,  ..., 2.7266e-02,
          3.4474e-03, 8.0805e-02],
         [6.4535e-04, 8.2499e-03, 3.4760e-02,  ..., 2.7266e-02,
          9.8966e-01, 2.2360e-01],
         [6.4535e-04, 9.7525e-01, 8.9384e-01,  ..., 9.1820e-01,
          3.4474e-03, 5.7578e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.6502e-02, 5.5994e-03, 9.9445e-01,  ..., 9.9236e-01,
          4.0285e-02, 3.3059e-02],
         [8.6502e-02, 5.5994e-03, 1.8508e-03,  ..., 2.2397e-03,
          4.0285e-02, 3.3059e-02],
         [5.8791e-01, 5.5994e-03, 1.8508e-03,  ..., 2.2397e-03,
          8.7659e-01, 9.0082e-01],
         [2.3909e-01, 9.8320e-01, 1.8508e-03,  ..., 3.1653e-03,
          4.2835e-02, 3.3059e-02]],
        [[1.9835e-02, 6.5453e-04, 9.9152e-01,  ..., 9.9541e-01,
          9.7297e-04, 2.3270e-02],
         [1.9835e-02, 6.5453e-04, 2.8269e-03,  ..., 1.1756e-03,
          9.7297e-04, 2.3270e-02],
         [9.4049e-01, 6.5453e-04, 2.8269e-03,  ..., 1.1756e-03,
          9.7297e-04, 9.3019e-01],
         [1.9835e-02, 9.9804e-01, 2.8269e-03,  ..., 2.2418e-03,
          9.9708e-01, 2.3270e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2751e-01, 3.8588e-02, 3.3264e-02,  ..., 9.9763e-01,
          9.8710e-01, 1.2294e-02],
         [2.6917e-02, 3.8588e-02, 3.0555e-02,  ..., 7.9036e-04,
          4.3000e-03, 1.2294e-02],
         [2.2786e-02, 4.9114e-02, 3.2595e-02,  ..., 7.9036e-04,
          4.3000e-03, 1.2629e-02],
         [2.2786e-02, 8.7371e-01, 9.0359e-01,  ..., 7.9036e-04,
          4.3000e-03, 9.6278e-01]],
        [[9.9199e-01, 1.5202e-02, 1.0950e-02,  ..., 8.9227e-03,
          2.3139e-02, 2.9876e-02],
         [2.6685e-03, 1.5202e-02, 1.0950e-02,  ..., 8.9227e-03,
          2.3139e-02, 2.9876e-02],
         [2.6685e-03, 1.5202e-02, 1.0950e-02,  ..., 8.9227e-03,
          9.3058e-01, 9.1037e-01],
         [2.6685e-03, 9.5439e-01, 9.6715e-01,  ..., 9.7323e-01,
          2.3139e-02, 2.9876e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:38,326 [Process: 0] Synchronize training processes
2024-08-19 13:10:38,327 [Process: 0] Evaluating...
2024-08-19 13:10:38,329 [Process: 0] EPOCH 121:
2024-08-19 13:10:38,331 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0215, 0.0029, 0.9954,  ..., 0.9538, 0.0235, 0.0198],
         [0.0215, 0.0029, 0.0015,  ..., 0.0205, 0.0235, 0.0198],
         [0.9263, 0.0029, 0.0015,  ..., 0.0129, 0.9296, 0.9405],
         [0.0307, 0.9914, 0.0015,  ..., 0.0129, 0.0235, 0.0198]],
        [[0.0288, 0.0083, 0.9951,  ..., 0.9422, 0.0070, 0.0199],
         [0.0286, 0.0115, 0.0016,  ..., 0.0123, 0.0103, 0.0199],
         [0.9117, 0.0083, 0.0016,  ..., 0.0123, 0.0070, 0.9402],
         [0.0309, 0.9719, 0.0016,  ..., 0.0332, 0.9756, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9935, 0.0175, 0.0338,  ..., 0.1123, 0.9749, 0.0156],
         [0.0022, 0.0172, 0.0425,  ..., 0.0801, 0.0098, 0.0156],
         [0.0022, 0.0172, 0.0338,  ..., 0.0801, 0.0077, 0.0156],
         [0.0022, 0.9482, 0.8900,  ..., 0.7274, 0.0077, 0.9532]],
        [[0.9923, 0.0172, 0.0075,  ..., 0.4733, 0.0029, 0.0049],
         [0.0026, 0.0172, 0.0075,  ..., 0.0540, 0.0029, 0.0049],
         [0.0026, 0.0172, 0.0075,  ..., 0.0540, 0.9914, 0.9853],
         [0.0026, 0.9484, 0.9774,  ..., 0.4188, 0.0029, 0.0049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8174e-02, 6.6458e-03, 6.3716e-01,  ..., 9.9421e-01,
          1.0275e-02, 1.9708e-02],
         [2.8174e-02, 6.6458e-03, 1.3643e-01,  ..., 1.9303e-03,
          1.0275e-02, 1.9708e-02],
         [8.8923e-01, 6.6458e-03, 8.2133e-02,  ..., 1.9303e-03,
          9.6917e-01, 9.4088e-01],
         [5.4419e-02, 9.8006e-01, 1.4428e-01,  ..., 1.9303e-03,
          1.0275e-02, 1.9708e-02]],
        [[1.2307e-02, 5.9587e-03, 9.9688e-01,  ..., 9.9424e-01,
          2.1459e-04, 1.4132e-02],
         [1.2307e-02, 6.4091e-03, 1.0392e-03,  ..., 1.9188e-03,
          2.1459e-04, 1.4132e-02],
         [9.6308e-01, 5.9587e-03, 1.0392e-03,  ..., 1.9188e-03,
          2.1459e-04, 9.5760e-01],
         [1.2307e-02, 9.8167e-01, 1.0392e-03,  ..., 1.9188e-03,
          9.9936e-01, 1.4132e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:39,382 [Process: 0] Synchronize training processes
2024-08-19 13:10:39,383 [Process: 0] Evaluating...
2024-08-19 13:10:39,804 [Process: 0] EPOCH 122:
2024-08-19 13:10:39,806 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:10:40,849 [Process: 0] Synchronize training processes
2024-08-19 13:10:40,849 [Process: 0] Evaluating...
2024-08-19 13:10:40,851 [Process: 0] EPOCH 123:
2024-08-19 13:10:40,852 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0355, 0.0250, 0.0085,  ..., 0.1198, 0.0127, 0.0028],
         [0.0181, 0.0257, 0.0085,  ..., 0.1656, 0.0071, 0.0028],
         [0.0181, 0.0250, 0.0085,  ..., 0.1159, 0.0071, 0.0028],
         [0.9283, 0.9243, 0.9746,  ..., 0.5987, 0.9732, 0.9916]],
        [[0.9806, 0.0115, 0.0255,  ..., 0.0257, 0.0061, 0.0077],
         [0.0065, 0.0115, 0.0255,  ..., 0.0257, 0.0061, 0.0077],
         [0.0065, 0.0115, 0.0255,  ..., 0.0257, 0.9816, 0.9770],
         [0.0065, 0.9656, 0.9236,  ..., 0.9228, 0.0061, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8910, 0.0115, 0.3213,  ..., 0.9890, 0.0030, 0.0100],
         [0.0410, 0.0115, 0.0781,  ..., 0.0037, 0.0030, 0.0100],
         [0.0340, 0.0115, 0.0973,  ..., 0.0037, 0.9911, 0.9699],
         [0.0340, 0.9656, 0.5033,  ..., 0.0037, 0.0030, 0.0100]],
        [[0.8295, 0.0205, 0.9880,  ..., 0.9497, 0.0120, 0.9908],
         [0.0562, 0.0205, 0.0040,  ..., 0.0170, 0.0115, 0.0029],
         [0.0600, 0.0205, 0.0040,  ..., 0.0167, 0.0115, 0.0029],
         [0.0543, 0.9386, 0.0040,  ..., 0.0167, 0.9650, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0082, 0.0224, 0.0552,  ..., 0.3464, 0.0128, 0.0105],
         [0.0082, 0.0224, 0.0552,  ..., 0.3948, 0.0128, 0.0105],
         [0.9754, 0.0260, 0.0784,  ..., 0.1311, 0.9616, 0.0121],
         [0.0082, 0.9293, 0.8112,  ..., 0.1277, 0.0128, 0.9668]],
        [[0.9930, 0.0093, 0.0019,  ..., 0.0421, 0.0049, 0.0096],
         [0.0023, 0.0093, 0.0019,  ..., 0.0421, 0.0049, 0.0096],
         [0.0023, 0.0093, 0.0019,  ..., 0.0783, 0.9852, 0.9711],
         [0.0023, 0.9720, 0.9943,  ..., 0.8374, 0.0049, 0.0096]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1782, 0.0158, 0.9893,  ..., 0.9921, 0.0130, 0.0262],
         [0.1880, 0.0158, 0.0035,  ..., 0.0026, 0.0130, 0.0262],
         [0.4879, 0.0158, 0.0035,  ..., 0.0026, 0.9609, 0.9215],
         [0.1458, 0.9525, 0.0036,  ..., 0.0026, 0.0130, 0.0262]],
        [[0.0119, 0.0045, 0.9860,  ..., 0.9898, 0.0018, 0.0558],
         [0.0119, 0.0045, 0.0038,  ..., 0.0034, 0.0018, 0.0558],
         [0.9642, 0.0045, 0.0038,  ..., 0.0034, 0.0018, 0.7985],
         [0.0119, 0.9864, 0.0064,  ..., 0.0034, 0.9946, 0.0899]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:10:41,896 [Process: 0] Synchronize training processes
2024-08-19 13:10:41,896 [Process: 0] Evaluating...
2024-08-19 13:10:41,898 [Process: 0] EPOCH 124:
2024-08-19 13:10:41,900 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 198, in train_one_epoch
    outputs = self.model(batch=batch)["affordance"].squeeze(1)
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/GeoL.py", line 68, in forward
    x_align = self.concate(x_rgb["affordance"], scene_pcs, self.instrics).permute(0,2,1) # [B, Num_pts, C_rgbfeat]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/modules.py", line 133, in forward
    feat_2d = self.interpolate_image_grid_features(
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/modules.py", line 76, in interpolate_image_grid_features
    query_grids = self.project_3d(query_points, intrinsics)  # [B, 2, N]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/models/modules.py", line 35, in forward
    K = torch.from_numpy(K).float().to(points.device)
KeyboardInterrupt
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])