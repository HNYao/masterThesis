2024-08-18 19:39:37,673 [Worker 0] Is distributed: False
2024-08-18 19:39:37,674 [Process: 0] Starting training
2024-08-18 19:39:37,674 [Process: 0] EPOCH 1:
2024-08-18 19:39:37,676 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:39,390 [Process: 0] Synchronize training processes
2024-08-18 19:39:39,390 [Process: 0] Evaluating...
2024-08-18 19:39:39,397 [Process: 0] EPOCH 2:
2024-08-18 19:39:39,398 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2995, 0.2590, 0.2574,  ..., 0.3021, 0.2644, 0.2361],
         [0.2500, 0.2718, 0.2647,  ..., 0.2538, 0.3002, 0.3176],
         [0.1983, 0.2227, 0.2390,  ..., 0.2043, 0.1930, 0.1772],
         [0.2523, 0.2465, 0.2390,  ..., 0.2399, 0.2425, 0.2691]],
        [[0.2958, 0.2131, 0.2568,  ..., 0.0993, 0.0369, 0.3013],
         [0.2258, 0.2643, 0.2270,  ..., 0.0993, 0.2098, 0.2723],
         [0.2258, 0.1991, 0.2270,  ..., 0.7020, 0.7163, 0.1856],
         [0.2526, 0.3235, 0.2892,  ..., 0.0993, 0.0369, 0.2409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:40,471 [Process: 0] Synchronize training processes
2024-08-18 19:39:40,471 [Process: 0] Evaluating...
2024-08-18 19:39:40,473 [Process: 0] EPOCH 3:
2024-08-18 19:39:40,474 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:41,540 [Process: 0] Synchronize training processes
2024-08-18 19:39:41,540 [Process: 0] Evaluating...
2024-08-18 19:39:41,542 [Process: 0] EPOCH 4:
2024-08-18 19:39:41,543 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5777e-01, 1.5583e-04, 2.6129e-01,  ..., 2.7309e-01,
          2.6014e-01, 2.6964e-01],
         [2.6473e-01, 1.5583e-04, 2.6426e-01,  ..., 2.5289e-01,
          2.7773e-01, 2.6072e-01],
         [2.1465e-01, 9.9953e-01, 2.1714e-01,  ..., 2.1094e-01,
          1.9102e-01, 2.1066e-01],
         [2.6285e-01, 1.5583e-04, 2.5731e-01,  ..., 2.6308e-01,
          2.7111e-01, 2.5899e-01]],
        [[1.5091e-01, 2.8465e-01, 2.7549e-01,  ..., 2.6577e-01,
          2.1049e-01, 2.7119e-01],
         [1.5091e-01, 2.5569e-01, 2.6324e-01,  ..., 2.6182e-01,
          2.1049e-01, 2.5683e-01],
         [5.4728e-01, 2.0685e-01, 1.8520e-01,  ..., 2.1349e-01,
          3.6852e-01, 2.1061e-01],
         [1.5091e-01, 2.5281e-01, 2.7607e-01,  ..., 2.5892e-01,
          2.1049e-01, 2.6137e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2618, 0.2612, 0.2761,  ..., 0.2566, 0.2834, 0.2261],
         [0.2373, 0.2605, 0.2643,  ..., 0.2512, 0.2541, 0.2261],
         [0.2360, 0.1876, 0.1852,  ..., 0.2283, 0.2038, 0.3217],
         [0.2649, 0.2906, 0.2744,  ..., 0.2639, 0.2587, 0.2261]],
        [[0.2171, 0.2629, 0.2675,  ..., 0.2696, 0.2761, 0.2741],
         [0.2171, 0.2610, 0.2643,  ..., 0.2580, 0.2629, 0.2616],
         [0.3487, 0.1947, 0.1994,  ..., 0.2081, 0.1946, 0.1940],
         [0.2171, 0.2814, 0.2688,  ..., 0.2643, 0.2664, 0.2703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2622, 0.0297, 0.2731,  ..., 0.2729, 0.2744, 0.2762],
         [0.2599, 0.0297, 0.2522,  ..., 0.2574, 0.2531, 0.2588],
         [0.2009, 0.9110, 0.2025,  ..., 0.1991, 0.2044, 0.2000],
         [0.2770, 0.0297, 0.2722,  ..., 0.2706, 0.2681, 0.2651]],
        [[0.2141, 0.2653, 0.2674,  ..., 0.2644, 0.0321, 0.2612],
         [0.2141, 0.2520, 0.2523,  ..., 0.2533, 0.0321, 0.2531],
         [0.3578, 0.2029, 0.2052,  ..., 0.1989, 0.9038, 0.2126],
         [0.2141, 0.2798, 0.2752,  ..., 0.2834, 0.0321, 0.2731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2767, 0.2816, 0.2751,  ..., 0.2665, 0.2799, 0.2683],
         [0.2532, 0.2515, 0.2515,  ..., 0.2528, 0.2556, 0.2574],
         [0.1890, 0.1871, 0.2065,  ..., 0.2038, 0.1885, 0.2069],
         [0.2810, 0.2797, 0.2669,  ..., 0.2770, 0.2760, 0.2673]],
        [[0.0016, 0.2635, 0.2626,  ..., 0.2600, 0.2622, 0.2604],
         [0.0016, 0.2592, 0.2493,  ..., 0.2524, 0.2503, 0.2520],
         [0.9952, 0.2088, 0.2121,  ..., 0.2040, 0.2130, 0.2246],
         [0.0016, 0.2685, 0.2759,  ..., 0.2836, 0.2746, 0.2630]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:39:42,619 [Process: 0] Synchronize training processes
2024-08-18 19:39:42,620 [Process: 0] Evaluating...
2024-08-18 19:39:42,621 [Process: 0] EPOCH 5:
2024-08-18 19:39:42,623 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:43,702 [Process: 0] Synchronize training processes
2024-08-18 19:39:43,703 [Process: 0] Evaluating...
2024-08-18 19:39:43,704 [Process: 0] EPOCH 6:
2024-08-18 19:39:43,707 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2301, 0.2772, 0.2747,  ..., 0.2721, 0.2810, 0.2647],
         [0.2301, 0.2460, 0.2465,  ..., 0.2422, 0.2443, 0.2456],
         [0.3097, 0.2034, 0.2154,  ..., 0.2089, 0.2084, 0.2173],
         [0.2301, 0.2734, 0.2633,  ..., 0.2767, 0.2662, 0.2723]],
        [[0.0990, 0.2695, 0.2783,  ..., 0.2755, 0.0703, 0.2705],
         [0.0990, 0.2458, 0.2409,  ..., 0.2397, 0.0703, 0.2472],
         [0.7029, 0.2062, 0.2165,  ..., 0.2082, 0.7892, 0.2107],
         [0.0990, 0.2785, 0.2643,  ..., 0.2767, 0.0703, 0.2716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2718, 0.2720, 0.2634,  ..., 0.2692, 0.2765, 0.2673],
         [0.2454, 0.2533, 0.2473,  ..., 0.2530, 0.2476, 0.2545],
         [0.2101, 0.1921, 0.2076,  ..., 0.2107, 0.2028, 0.1971],
         [0.2727, 0.2827, 0.2817,  ..., 0.2671, 0.2730, 0.2812]],
        [[0.0491, 0.2762, 0.2713,  ..., 0.2701, 0.2731, 0.2708],
         [0.0491, 0.2469, 0.2441,  ..., 0.2489, 0.2471, 0.2428],
         [0.8527, 0.2091, 0.2070,  ..., 0.2071, 0.2028, 0.2148],
         [0.0491, 0.2677, 0.2776,  ..., 0.2739, 0.2770, 0.2716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1305, 0.2779, 0.2696,  ..., 0.2747, 0.2681, 0.2738],
         [0.1305, 0.2382, 0.2377,  ..., 0.2389, 0.2430, 0.2400],
         [0.6086, 0.2135, 0.2192,  ..., 0.2141, 0.2176, 0.2164],
         [0.1305, 0.2704, 0.2735,  ..., 0.2723, 0.2713, 0.2697]],
        [[0.1523, 0.2738, 0.2749,  ..., 0.2772, 0.2729, 0.2762],
         [0.1523, 0.2401, 0.2406,  ..., 0.2418, 0.2393, 0.2391],
         [0.5431, 0.2116, 0.2113,  ..., 0.2026, 0.2164, 0.2173],
         [0.1523, 0.2745, 0.2732,  ..., 0.2784, 0.2714, 0.2674]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:39:44,788 [Process: 0] Synchronize training processes
2024-08-18 19:39:44,788 [Process: 0] Evaluating...
2024-08-18 19:39:44,790 [Process: 0] EPOCH 7:
2024-08-18 19:39:44,792 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2763, 0.2754, 0.2725,  ..., 0.2776, 0.2734, 0.2713],
         [0.2365, 0.2369, 0.2439,  ..., 0.2393, 0.2392, 0.2365],
         [0.2097, 0.2120, 0.2135,  ..., 0.2080, 0.2081, 0.2117],
         [0.2775, 0.2757, 0.2701,  ..., 0.2751, 0.2793, 0.2805]],
        [[0.0023, 0.2783, 0.2757,  ..., 0.2793, 0.2697, 0.2821],
         [0.0023, 0.2303, 0.2344,  ..., 0.2402, 0.2361, 0.2393],
         [0.9930, 0.2209, 0.2110,  ..., 0.2064, 0.2157, 0.2083],
         [0.0023, 0.2705, 0.2789,  ..., 0.2742, 0.2784, 0.2704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1610, 0.2743, 0.2801,  ..., 0.2727, 0.2695, 0.2725],
         [0.1610, 0.2307, 0.2333,  ..., 0.2307, 0.2376, 0.2309],
         [0.5171, 0.2241, 0.2174,  ..., 0.2208, 0.2223, 0.2275],
         [0.1610, 0.2709, 0.2692,  ..., 0.2758, 0.2706, 0.2692]],
        [[0.1495, 0.2724, 0.2687,  ..., 0.2748, 0.2583, 0.2707],
         [0.1495, 0.2311, 0.2391,  ..., 0.2309, 0.2387, 0.2323],
         [0.5516, 0.2223, 0.2209,  ..., 0.2245, 0.2330, 0.2244],
         [0.1495, 0.2741, 0.2713,  ..., 0.2697, 0.2700, 0.2725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7759e-01, 2.8229e-01, 2.8474e-01,  ..., 2.7680e-01,
          2.8005e-01, 2.8253e-01],
         [2.3260e-01, 2.3085e-01, 2.3142e-01,  ..., 2.3398e-01,
          2.3590e-01, 2.3096e-01],
         [2.1345e-01, 2.0910e-01, 2.0985e-01,  ..., 2.1776e-01,
          2.1437e-01, 2.1027e-01],
         [2.7636e-01, 2.7776e-01, 2.7400e-01,  ..., 2.7146e-01,
          2.6968e-01, 2.7624e-01]],
        [[6.3582e-06, 2.8089e-01, 2.7306e-01,  ..., 2.7254e-01,
          2.8070e-01, 2.7583e-01],
         [6.3582e-06, 2.2988e-01, 2.2904e-01,  ..., 2.3558e-01,
          2.2335e-01, 2.3262e-01],
         [9.9998e-01, 2.0831e-01, 2.2205e-01,  ..., 2.1176e-01,
          2.1633e-01, 2.1546e-01],
         [6.3582e-06, 2.8091e-01, 2.7584e-01,  ..., 2.8012e-01,
          2.7962e-01, 2.7608e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1678, 0.2749, 0.2786,  ..., 0.2763, 0.2359, 0.2736],
         [0.1678, 0.2305, 0.2291,  ..., 0.2311, 0.2601, 0.2283],
         [0.4967, 0.2176, 0.2156,  ..., 0.2171, 0.2474, 0.2191],
         [0.1678, 0.2770, 0.2767,  ..., 0.2755, 0.2566, 0.2790]],
        [[0.2050, 0.2774, 0.2757,  ..., 0.2790, 0.2702, 0.2772],
         [0.2050, 0.2265, 0.2286,  ..., 0.2243, 0.2283, 0.2243],
         [0.3851, 0.2236, 0.2193,  ..., 0.2232, 0.2213, 0.2177],
         [0.2050, 0.2725, 0.2764,  ..., 0.2736, 0.2802, 0.2808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:39:45,875 [Process: 0] Synchronize training processes
2024-08-18 19:39:45,876 [Process: 0] Evaluating...
2024-08-18 19:39:45,877 [Process: 0] EPOCH 8:
2024-08-18 19:39:45,879 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:46,986 [Process: 0] Synchronize training processes
2024-08-18 19:39:46,986 [Process: 0] Evaluating...
2024-08-18 19:39:46,988 [Process: 0] EPOCH 9:
2024-08-18 19:39:46,990 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7985e-01, 2.8139e-01, 2.9295e-01,  ..., 2.8276e-01,
          2.8145e-01, 2.8402e-01],
         [2.2264e-01, 2.2193e-01, 2.2266e-01,  ..., 2.2607e-01,
          2.2486e-01, 2.3022e-01],
         [2.1412e-01, 2.1491e-01, 2.0087e-01,  ..., 2.1446e-01,
          2.1315e-01, 2.0824e-01],
         [2.8339e-01, 2.8178e-01, 2.8351e-01,  ..., 2.7671e-01,
          2.8055e-01, 2.7751e-01]],
        [[2.3992e-05, 2.7282e-01, 2.7780e-01,  ..., 2.8592e-01,
          2.8290e-01, 2.7382e-01],
         [2.3992e-05, 2.3394e-01, 2.1918e-01,  ..., 2.2469e-01,
          2.2219e-01, 2.3162e-01],
         [9.9993e-01, 2.1792e-01, 2.1338e-01,  ..., 2.1664e-01,
          2.1772e-01, 2.1383e-01],
         [2.3992e-05, 2.7532e-01, 2.8964e-01,  ..., 2.7275e-01,
          2.7720e-01, 2.8073e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1678, 0.2749, 0.2730,  ..., 0.2714, 0.2692, 0.2798],
         [0.1988, 0.2257, 0.2254,  ..., 0.2300, 0.2368, 0.2230],
         [0.4657, 0.2200, 0.2254,  ..., 0.2141, 0.2142, 0.2197],
         [0.1678, 0.2794, 0.2761,  ..., 0.2844, 0.2798, 0.2775]],
        [[0.2139, 0.2800, 0.2792,  ..., 0.2886, 0.2745, 0.2812],
         [0.2254, 0.2187, 0.2215,  ..., 0.2181, 0.2260, 0.2231],
         [0.3469, 0.2168, 0.2215,  ..., 0.2124, 0.2162, 0.2097],
         [0.2139, 0.2845, 0.2779,  ..., 0.2808, 0.2832, 0.2860]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7960e-01, 2.8266e-01, 2.7515e-01,  ..., 2.8594e-01,
          2.7851e-01, 2.7977e-01],
         [2.1805e-01, 2.2471e-01, 2.2335e-01,  ..., 2.1997e-01,
          2.1725e-01, 2.2069e-01],
         [2.1805e-01, 2.1239e-01, 2.2335e-01,  ..., 2.1376e-01,
          2.1725e-01, 2.1653e-01],
         [2.8429e-01, 2.8023e-01, 2.7815e-01,  ..., 2.8032e-01,
          2.8699e-01, 2.8301e-01]],
        [[6.2860e-05, 2.7576e-01, 2.7387e-01,  ..., 2.7349e-01,
          2.8432e-01, 2.7264e-01],
         [6.2860e-05, 2.2805e-01, 2.2126e-01,  ..., 2.2279e-01,
          2.1429e-01, 2.3170e-01],
         [9.9981e-01, 2.2366e-01, 2.2126e-01,  ..., 2.1804e-01,
          2.1232e-01, 2.1025e-01],
         [6.2860e-05, 2.7253e-01, 2.8360e-01,  ..., 2.8568e-01,
          2.8907e-01, 2.8541e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2158, 0.2896, 0.2765,  ..., 0.2752, 0.2654, 0.2825],
         [0.2238, 0.2147, 0.2220,  ..., 0.2214, 0.2335, 0.2165],
         [0.3446, 0.2080, 0.2165,  ..., 0.2214, 0.2196, 0.2165],
         [0.2158, 0.2877, 0.2851,  ..., 0.2819, 0.2815, 0.2844]],
        [[0.2109, 0.2823, 0.2817,  ..., 0.2787, 0.2758, 0.2849],
         [0.2153, 0.2185, 0.2195,  ..., 0.2179, 0.2269, 0.2150],
         [0.3630, 0.2185, 0.2195,  ..., 0.2173, 0.2156, 0.2129],
         [0.2109, 0.2808, 0.2793,  ..., 0.2862, 0.2816, 0.2873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:39:48,068 [Process: 0] Synchronize training processes
2024-08-18 19:39:48,068 [Process: 0] Evaluating...
2024-08-18 19:39:48,070 [Process: 0] EPOCH 10:
2024-08-18 19:39:48,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:49,151 [Process: 0] Synchronize training processes
2024-08-18 19:39:49,151 [Process: 0] Evaluating...
2024-08-18 19:39:49,153 [Process: 0] EPOCH 11:
2024-08-18 19:39:49,155 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7911e-01, 2.9057e-01, 2.8510e-01,  ..., 2.8755e-01,
          2.7540e-01, 2.8343e-01],
         [2.2352e-01, 2.1540e-01, 2.1706e-01,  ..., 2.1931e-01,
          2.2398e-01, 2.1805e-01],
         [2.2352e-01, 2.1540e-01, 2.1706e-01,  ..., 2.1931e-01,
          2.2398e-01, 2.1805e-01],
         [2.7384e-01, 2.7864e-01, 2.8079e-01,  ..., 2.7383e-01,
          2.7664e-01, 2.8046e-01]],
        [[1.4111e-04, 2.8153e-01, 2.8072e-01,  ..., 2.6657e-01,
          2.7516e-01, 2.8782e-01],
         [1.4111e-04, 2.1566e-01, 2.2054e-01,  ..., 2.2415e-01,
          2.1985e-01, 2.2082e-01],
         [9.9958e-01, 2.1566e-01, 2.1327e-01,  ..., 2.2415e-01,
          2.1985e-01, 2.0993e-01],
         [1.4111e-04, 2.8715e-01, 2.8547e-01,  ..., 2.8513e-01,
          2.8515e-01, 2.8142e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1795, 0.2822, 0.2748,  ..., 0.2788, 0.2671, 0.2813],
         [0.2220, 0.2190, 0.2218,  ..., 0.2152, 0.2316, 0.2161],
         [0.4191, 0.2190, 0.2218,  ..., 0.2152, 0.2239, 0.2161],
         [0.1795, 0.2798, 0.2815,  ..., 0.2908, 0.2773, 0.2864]],
        [[0.1561, 0.2828, 0.2715,  ..., 0.2753, 0.2766, 0.2831],
         [0.2285, 0.2162, 0.2203,  ..., 0.2159, 0.2199, 0.2122],
         [0.4593, 0.2162, 0.2203,  ..., 0.2159, 0.2199, 0.2122],
         [0.1561, 0.2848, 0.2880,  ..., 0.2930, 0.2837, 0.2925]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7855e-01, 2.7561e-01, 2.8197e-01,  ..., 2.8259e-01,
          2.8412e-01, 2.7409e-01],
         [2.1962e-01, 2.2142e-01, 2.1956e-01,  ..., 2.2371e-01,
          2.1802e-01, 2.2743e-01],
         [2.1962e-01, 2.2142e-01, 2.1956e-01,  ..., 2.2371e-01,
          2.1802e-01, 2.2743e-01],
         [2.8222e-01, 2.8155e-01, 2.7891e-01,  ..., 2.6998e-01,
          2.7984e-01, 2.7105e-01]],
        [[1.6361e-05, 2.7933e-01, 2.8220e-01,  ..., 2.7050e-01,
          2.6150e-01, 2.7412e-01],
         [1.6361e-05, 2.1724e-01, 2.0777e-01,  ..., 2.2378e-01,
          2.2136e-01, 2.1816e-01],
         [9.9995e-01, 2.1724e-01, 2.0777e-01,  ..., 2.2378e-01,
          2.2136e-01, 2.1816e-01],
         [1.6361e-05, 2.8619e-01, 3.0225e-01,  ..., 2.8195e-01,
          2.9578e-01, 2.8956e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
2024-08-18 19:39:50,234 [Process: 0] Synchronize training processes
2024-08-18 19:39:50,234 [Process: 0] Evaluating...
2024-08-18 19:39:50,240 [Process: 0] EPOCH 12:
2024-08-18 19:39:50,242 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:51,322 [Process: 0] Synchronize training processes
2024-08-18 19:39:51,322 [Process: 0] Evaluating...
2024-08-18 19:39:51,324 [Process: 0] EPOCH 13:
2024-08-18 19:39:51,326 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1733, 0.2839, 0.2865,  ..., 0.2795, 0.2754, 0.2899],
         [0.2273, 0.2129, 0.2097,  ..., 0.2130, 0.2171, 0.2046],
         [0.4162, 0.2129, 0.2097,  ..., 0.2108, 0.2171, 0.2046],
         [0.1832, 0.2902, 0.2940,  ..., 0.2966, 0.2904, 0.3009]],
        [[0.1812, 0.2878, 0.2823,  ..., 0.2884, 0.2771, 0.2762],
         [0.2184, 0.2095, 0.2160,  ..., 0.2097, 0.2170, 0.2160],
         [0.4071, 0.2095, 0.2160,  ..., 0.2097, 0.2170, 0.2160],
         [0.1932, 0.2933, 0.2858,  ..., 0.2922, 0.2888, 0.2918]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8605e-01, 2.7702e-01, 2.8761e-01,  ..., 2.8959e-01,
          2.8019e-01, 2.7627e-01],
         [2.2124e-01, 2.2219e-01, 2.2054e-01,  ..., 2.1933e-01,
          2.1956e-01, 2.2531e-01],
         [2.2124e-01, 2.2219e-01, 2.2054e-01,  ..., 2.1265e-01,
          2.1956e-01, 2.2531e-01],
         [2.7148e-01, 2.7861e-01, 2.7130e-01,  ..., 2.7843e-01,
          2.8069e-01, 2.7312e-01]],
        [[2.3104e-05, 2.6411e-01, 2.8221e-01,  ..., 2.6951e-01,
          2.7216e-01, 2.7317e-01],
         [2.3104e-05, 2.2403e-01, 2.1037e-01,  ..., 2.1604e-01,
          2.1540e-01, 2.1909e-01],
         [9.9993e-01, 2.2403e-01, 2.1037e-01,  ..., 2.0944e-01,
          2.1540e-01, 2.1909e-01],
         [2.3104e-05, 2.8782e-01, 2.9705e-01,  ..., 3.0501e-01,
          2.9704e-01, 2.8864e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2344, 0.2712, 0.2827,  ..., 0.2753, 0.2933, 0.2788],
         [0.2278, 0.2147, 0.2052,  ..., 0.2123, 0.2105, 0.2157],
         [0.2748, 0.2147, 0.2030,  ..., 0.2123, 0.2105, 0.2157],
         [0.2630, 0.2994, 0.3091,  ..., 0.3002, 0.2858, 0.2899]],
        [[0.1803, 0.2786, 0.2761,  ..., 0.2775, 0.1731, 0.2760],
         [0.1992, 0.2196, 0.2197,  ..., 0.2166, 0.2186, 0.2169],
         [0.4402, 0.2196, 0.2197,  ..., 0.2166, 0.4249, 0.2169],
         [0.1803, 0.2821, 0.2846,  ..., 0.2893, 0.1834, 0.2902]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2867, 0.2868, 0.2929,  ..., 0.2772, 0.2570, 0.2812],
         [0.2216, 0.2167, 0.2206,  ..., 0.2302, 0.2343, 0.2266],
         [0.2216, 0.2167, 0.2206,  ..., 0.2302, 0.2343, 0.2266],
         [0.2702, 0.2798, 0.2658,  ..., 0.2624, 0.2744, 0.2656]],
        [[0.1115, 0.2558, 0.2721,  ..., 0.2486, 0.2797, 0.2959],
         [0.1115, 0.2189, 0.2178,  ..., 0.2157, 0.2078, 0.2109],
         [0.6654, 0.2189, 0.2178,  ..., 0.2157, 0.2078, 0.2109],
         [0.1115, 0.3064, 0.2922,  ..., 0.3199, 0.3048, 0.2823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:52,410 [Process: 0] Synchronize training processes
2024-08-18 19:39:52,410 [Process: 0] Evaluating...
2024-08-18 19:39:52,411 [Process: 0] EPOCH 14:
2024-08-18 19:39:52,413 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2452, 0.2823, 0.2860,  ..., 0.2702, 0.2504, 0.2690],
         [0.2214, 0.2129, 0.2081,  ..., 0.2210, 0.2264, 0.2143],
         [0.2672, 0.2129, 0.2053,  ..., 0.2210, 0.2522, 0.2143],
         [0.2662, 0.2918, 0.3006,  ..., 0.2879, 0.2710, 0.3024]],
        [[0.2487, 0.2782, 0.2747,  ..., 0.2867, 0.1207, 0.2755],
         [0.2231, 0.2120, 0.2165,  ..., 0.2140, 0.1483, 0.2157],
         [0.2711, 0.2120, 0.2165,  ..., 0.2140, 0.6102, 0.2157],
         [0.2571, 0.2978, 0.2923,  ..., 0.2854, 0.1207, 0.2931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2760, 0.2777, 0.2769,  ..., 0.2750, 0.2694, 0.2789],
         [0.2235, 0.2223, 0.2251,  ..., 0.2222, 0.2291, 0.2195],
         [0.2235, 0.2223, 0.2251,  ..., 0.2222, 0.2291, 0.2195],
         [0.2770, 0.2777, 0.2730,  ..., 0.2805, 0.2725, 0.2821]],
        [[0.0106, 0.2685, 0.2769,  ..., 0.2705, 0.2528, 0.2816],
         [0.0106, 0.2087, 0.2034,  ..., 0.2114, 0.2180, 0.2097],
         [0.9683, 0.2087, 0.2034,  ..., 0.2114, 0.2180, 0.2097],
         [0.0106, 0.3141, 0.3162,  ..., 0.3066, 0.3112, 0.2991]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2572, 0.2789, 0.2835,  ..., 0.2816, 0.2374, 0.2827],
         [0.2180, 0.2111, 0.2041,  ..., 0.2106, 0.2158, 0.2065],
         [0.2605, 0.2111, 0.2041,  ..., 0.2106, 0.2718, 0.2065],
         [0.2643, 0.2990, 0.3084,  ..., 0.2972, 0.2750, 0.3043]],
        [[0.2082, 0.2770, 0.2762,  ..., 0.2751, 0.1192, 0.2802],
         [0.2072, 0.2193, 0.2144,  ..., 0.2152, 0.1192, 0.2114],
         [0.3534, 0.2193, 0.2144,  ..., 0.2152, 0.6423, 0.2114],
         [0.2312, 0.2844, 0.2951,  ..., 0.2945, 0.1192, 0.2971]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2740, 0.2694, 0.2742,  ..., 0.2745, 0.2354, 0.2724],
         [0.2373, 0.2363, 0.2285,  ..., 0.2354, 0.2276, 0.2385],
         [0.2373, 0.2363, 0.2285,  ..., 0.2354, 0.2783, 0.2385],
         [0.2514, 0.2580, 0.2688,  ..., 0.2547, 0.2587, 0.2507]],
        [[0.0134, 0.2863, 0.2456,  ..., 0.2794, 0.2533, 0.2983],
         [0.0134, 0.2115, 0.2228,  ..., 0.2084, 0.2140, 0.1935],
         [0.9597, 0.2115, 0.2228,  ..., 0.2084, 0.2140, 0.1935],
         [0.0134, 0.2907, 0.3087,  ..., 0.3037, 0.3187, 0.3146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:53,491 [Process: 0] Synchronize training processes
2024-08-18 19:39:53,491 [Process: 0] Evaluating...
2024-08-18 19:39:53,493 [Process: 0] EPOCH 15:
2024-08-18 19:39:53,494 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:54,573 [Process: 0] Synchronize training processes
2024-08-18 19:39:54,573 [Process: 0] Evaluating...
2024-08-18 19:39:54,575 [Process: 0] EPOCH 16:
2024-08-18 19:39:54,577 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2404, 0.3024, 0.2850,  ..., 0.2945, 0.1219, 0.2834],
         [0.2192, 0.2047, 0.2197,  ..., 0.2068, 0.1349, 0.2165],
         [0.2701, 0.2047, 0.2197,  ..., 0.2068, 0.6213, 0.2165],
         [0.2703, 0.2881, 0.2755,  ..., 0.2920, 0.1219, 0.2837]],
        [[0.2105, 0.2699, 0.2684,  ..., 0.2815, 0.2426, 0.2797],
         [0.2066, 0.2264, 0.2212,  ..., 0.2135, 0.2239, 0.2122],
         [0.3547, 0.2264, 0.2212,  ..., 0.2135, 0.2831, 0.2122],
         [0.2283, 0.2772, 0.2891,  ..., 0.2915, 0.2504, 0.2960]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7507e-01, 2.7247e-01, 2.7903e-01,  ..., 2.6747e-01,
          1.7691e-01, 2.6640e-01],
         [2.3388e-01, 2.3163e-01, 2.3062e-01,  ..., 2.4184e-01,
          1.7691e-01, 2.3228e-01],
         [2.3388e-01, 2.3163e-01, 2.3062e-01,  ..., 2.4444e-01,
          4.6927e-01, 2.3228e-01],
         [2.5717e-01, 2.6426e-01, 2.5973e-01,  ..., 2.4625e-01,
          1.7691e-01, 2.6903e-01]],
        [[2.0903e-06, 2.8202e-01, 2.7251e-01,  ..., 2.6750e-01,
          2.7030e-01, 2.8634e-01],
         [2.0903e-06, 2.1038e-01, 2.0483e-01,  ..., 2.1944e-01,
          2.2234e-01, 2.2174e-01],
         [9.9999e-01, 2.1038e-01, 2.0483e-01,  ..., 2.1944e-01,
          2.2234e-01, 2.2174e-01],
         [2.0903e-06, 2.9723e-01, 3.1782e-01,  ..., 2.9362e-01,
          2.8502e-01, 2.7019e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2076, 0.2881, 0.2735,  ..., 0.2904, 0.2729, 0.2854],
         [0.2037, 0.2111, 0.2188,  ..., 0.2021, 0.2216, 0.1994],
         [0.3454, 0.2111, 0.2188,  ..., 0.2021, 0.2216, 0.1994],
         [0.2433, 0.2898, 0.2889,  ..., 0.3053, 0.2839, 0.3158]],
        [[0.2211, 0.2725, 0.2645,  ..., 0.2747, 0.2174, 0.2679],
         [0.2081, 0.2184, 0.2254,  ..., 0.2173, 0.2097, 0.2235],
         [0.3444, 0.2184, 0.2254,  ..., 0.2173, 0.3334, 0.2235],
         [0.2265, 0.2906, 0.2848,  ..., 0.2907, 0.2395, 0.2850]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2664, 0.2871, 0.2955,  ..., 0.2778, 0.1331, 0.2736],
         [0.2397, 0.2344, 0.2265,  ..., 0.2407, 0.1331, 0.2421],
         [0.2397, 0.2344, 0.2265,  ..., 0.2407, 0.6007, 0.2421],
         [0.2541, 0.2442, 0.2516,  ..., 0.2407, 0.1331, 0.2421]],
        [[0.0118, 0.2938, 0.2536,  ..., 0.2541, 0.2703, 0.3493],
         [0.0118, 0.2011, 0.2205,  ..., 0.2006, 0.2079, 0.1955],
         [0.9646, 0.2011, 0.2205,  ..., 0.2006, 0.2079, 0.1955],
         [0.0118, 0.3041, 0.3053,  ..., 0.3447, 0.3139, 0.2598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:39:55,648 [Process: 0] Synchronize training processes
2024-08-18 19:39:55,649 [Process: 0] Evaluating...
2024-08-18 19:39:55,650 [Process: 0] EPOCH 17:
2024-08-18 19:39:55,652 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:56,724 [Process: 0] Synchronize training processes
2024-08-18 19:39:56,724 [Process: 0] Evaluating...
2024-08-18 19:39:56,726 [Process: 0] EPOCH 18:
2024-08-18 19:39:56,728 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2229, 0.2910, 0.2527,  ..., 0.2689, 0.2748, 0.2960],
         [0.2171, 0.2061, 0.2188,  ..., 0.2223, 0.2200, 0.1918],
         [0.3186, 0.2061, 0.2188,  ..., 0.2223, 0.2200, 0.1918],
         [0.2414, 0.2968, 0.3097,  ..., 0.2866, 0.2852, 0.3203]],
        [[0.1809, 0.2809, 0.2975,  ..., 0.2641, 0.1738, 0.2663],
         [0.1751, 0.2138, 0.2117,  ..., 0.2247, 0.1738, 0.2268],
         [0.4610, 0.2138, 0.2117,  ..., 0.2279, 0.4723, 0.2268],
         [0.1830, 0.2916, 0.2791,  ..., 0.2834, 0.1801, 0.2801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.7986e-01, 2.7544e-01, 3.0643e-01,  ..., 2.8281e-01,
          1.4458e-01, 2.7993e-01],
         [2.3483e-01, 2.1555e-01, 2.3034e-01,  ..., 2.3282e-01,
          1.5705e-01, 2.4002e-01],
         [2.4374e-01, 2.6296e-01, 2.3289e-01,  ..., 2.3282e-01,
          5.5379e-01, 2.4002e-01],
         [2.4158e-01, 2.4605e-01, 2.3034e-01,  ..., 2.5154e-01,
          1.4458e-01, 2.4002e-01]],
        [[5.2563e-06, 3.7043e-01, 2.1713e-01,  ..., 2.6651e-01,
          2.8876e-01, 3.8247e-01],
         [5.2563e-06, 1.7181e-01, 2.1713e-01,  ..., 1.8287e-01,
          2.0283e-01, 1.8315e-01],
         [9.9998e-01, 1.7181e-01, 2.1713e-01,  ..., 1.8287e-01,
          2.0283e-01, 1.8315e-01],
         [5.2563e-06, 2.8596e-01, 3.4862e-01,  ..., 3.6775e-01,
          3.0559e-01, 2.5124e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2088, 0.2909, 0.3473,  ..., 0.2984, 0.2545, 0.3123],
         [0.2029, 0.1901, 0.1904,  ..., 0.2078, 0.2211, 0.2069],
         [0.3529, 0.1901, 0.1904,  ..., 0.2078, 0.2211, 0.2069],
         [0.2353, 0.3290, 0.2719,  ..., 0.2860, 0.3034, 0.2740]],
        [[0.1416, 0.2673, 0.2628,  ..., 0.3025, 0.1671, 0.2901],
         [0.1416, 0.2128, 0.2173,  ..., 0.2159, 0.1668, 0.2075],
         [0.5686, 0.2468, 0.2173,  ..., 0.2159, 0.4816, 0.2075],
         [0.1482, 0.2731, 0.3026,  ..., 0.2656, 0.1845, 0.2949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:39:57,837 [Process: 0] Synchronize training processes
2024-08-18 19:39:57,837 [Process: 0] Evaluating...
2024-08-18 19:39:57,839 [Process: 0] EPOCH 19:
2024-08-18 19:39:57,841 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:39:58,916 [Process: 0] Synchronize training processes
2024-08-18 19:39:58,916 [Process: 0] Evaluating...
2024-08-18 19:39:58,918 [Process: 0] EPOCH 20:
2024-08-18 19:39:58,919 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2905, 0.3205, 0.3594,  ..., 0.3480, 0.2836, 0.1212],
         [0.2365, 0.2114, 0.2135,  ..., 0.2101, 0.2061, 0.1243],
         [0.2365, 0.2114, 0.2135,  ..., 0.2101, 0.2592, 0.6332],
         [0.2365, 0.2567, 0.2135,  ..., 0.2318, 0.2511, 0.1212]],
        [[0.0069, 0.4839, 0.2272,  ..., 0.2940, 0.2514, 0.3580],
         [0.0069, 0.1387, 0.2131,  ..., 0.2064, 0.2145, 0.1936],
         [0.9793, 0.1387, 0.2131,  ..., 0.2064, 0.2145, 0.1936],
         [0.0069, 0.2387, 0.3465,  ..., 0.2932, 0.3196, 0.2548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2835, 0.2408, 0.2849,  ..., 0.3165, 0.3081, 0.2941],
         [0.2026, 0.2102, 0.2003,  ..., 0.1876, 0.2078, 0.1952],
         [0.2594, 0.2102, 0.2003,  ..., 0.1876, 0.2078, 0.1952],
         [0.2545, 0.3388, 0.3144,  ..., 0.3084, 0.2763, 0.3154]],
        [[0.1631, 0.2892, 0.2732,  ..., 0.2747, 0.2207, 0.2799],
         [0.1620, 0.2188, 0.2170,  ..., 0.2158, 0.1943, 0.2147],
         [0.4926, 0.2188, 0.2170,  ..., 0.2158, 0.3521, 0.2147],
         [0.1823, 0.2732, 0.2929,  ..., 0.2937, 0.2329, 0.2907]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2776, 0.3413, 0.4072,  ..., 0.3470, 0.2994, 0.1351],
         [0.2152, 0.1991, 0.1914,  ..., 0.2001, 0.1981, 0.1351],
         [0.2920, 0.2126, 0.1914,  ..., 0.2528, 0.2939, 0.5946],
         [0.2152, 0.2470, 0.2100,  ..., 0.2001, 0.2086, 0.1351]],
        [[0.0916, 0.3961, 0.2253,  ..., 0.2054, 0.2246, 0.5204],
         [0.0916, 0.1638, 0.2253,  ..., 0.2054, 0.2246, 0.1373],
         [0.7253, 0.1638, 0.2253,  ..., 0.2054, 0.2246, 0.1373],
         [0.0916, 0.2764, 0.3240,  ..., 0.3839, 0.3262, 0.2049]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4055, 0.2614, 0.2778,  ..., 0.2876, 0.2612, 0.2432],
         [0.1826, 0.2073, 0.2023,  ..., 0.2069, 0.2223, 0.2301],
         [0.1826, 0.2073, 0.2023,  ..., 0.2069, 0.2223, 0.2301],
         [0.2294, 0.3241, 0.3177,  ..., 0.2985, 0.2942, 0.2966]],
        [[0.1949, 0.3580, 0.2714,  ..., 0.3567, 0.1954, 0.3207],
         [0.1579, 0.1852, 0.2150,  ..., 0.1873, 0.1954, 0.2050],
         [0.4867, 0.1852, 0.2150,  ..., 0.1873, 0.4034, 0.2050],
         [0.1605, 0.2716, 0.2985,  ..., 0.2688, 0.2058, 0.2694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:39:59,998 [Process: 0] Synchronize training processes
2024-08-18 19:39:59,998 [Process: 0] Evaluating...
2024-08-18 19:40:00,000 [Process: 0] EPOCH 21:
2024-08-18 19:40:00,002 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:01,079 [Process: 0] Synchronize training processes
2024-08-18 19:40:01,080 [Process: 0] Evaluating...
2024-08-18 19:40:01,086 [Process: 0] EPOCH 22:
2024-08-18 19:40:01,088 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2216, 0.3379, 0.4318,  ..., 0.1227, 0.2645, 0.1470],
         [0.1769, 0.1991, 0.1673,  ..., 0.1227, 0.1968, 0.1470],
         [0.4246, 0.1991, 0.1673,  ..., 0.6319, 0.3013, 0.5589],
         [0.1769, 0.2639, 0.2336,  ..., 0.1227, 0.2374, 0.1470]],
        [[0.0064, 0.5321, 0.2214,  ..., 0.2544, 0.2145, 0.4953],
         [0.0064, 0.1435, 0.2214,  ..., 0.2022, 0.2145, 0.1682],
         [0.9807, 0.1435, 0.2214,  ..., 0.2022, 0.2145, 0.1682],
         [0.0064, 0.1808, 0.3357,  ..., 0.3412, 0.3566, 0.1682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4059, 0.2114, 0.2300,  ..., 0.2562, 0.2244, 0.2402],
         [0.1754, 0.2114, 0.2106,  ..., 0.2204, 0.2244, 0.2073],
         [0.2075, 0.2114, 0.2106,  ..., 0.2204, 0.2244, 0.2073],
         [0.2112, 0.3659, 0.3488,  ..., 0.3030, 0.3268, 0.3452]],
        [[0.1881, 0.4136, 0.3587,  ..., 0.4160, 0.1719, 0.3013],
         [0.1766, 0.1747, 0.1814,  ..., 0.1753, 0.1719, 0.2074],
         [0.4588, 0.1747, 0.1814,  ..., 0.1753, 0.4731, 0.2074],
         [0.1766, 0.2370, 0.2785,  ..., 0.2335, 0.1830, 0.2840]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0759, 0.3899, 0.4122,  ..., 0.0891, 0.2163, 0.0960],
         [0.0759, 0.1688, 0.1752,  ..., 0.0891, 0.1899, 0.0960],
         [0.7722, 0.1656, 0.1752,  ..., 0.7328, 0.4039, 0.7121],
         [0.0759, 0.2758, 0.2373,  ..., 0.0891, 0.1899, 0.0960]],
        [[0.0075, 0.4504, 0.2066,  ..., 0.2277, 0.2274, 0.4415],
         [0.0075, 0.1640, 0.2066,  ..., 0.2093, 0.2274, 0.1862],
         [0.9775, 0.1640, 0.2066,  ..., 0.2093, 0.2274, 0.1862],
         [0.0075, 0.2216, 0.3802,  ..., 0.3537, 0.3178, 0.1862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4008, 0.3182, 0.2247,  ..., 0.3152, 0.2676, 0.2307],
         [0.1733, 0.2030, 0.2163,  ..., 0.2040, 0.2085, 0.2144],
         [0.1953, 0.2030, 0.2163,  ..., 0.2040, 0.2337, 0.2144],
         [0.2305, 0.2759, 0.3426,  ..., 0.2768, 0.2901, 0.3405]],
        [[0.1812, 0.4002, 0.5043,  ..., 0.3921, 0.1692, 0.2565],
         [0.1473, 0.1733, 0.1444,  ..., 0.1794, 0.1692, 0.2113],
         [0.5241, 0.1999, 0.1444,  ..., 0.1794, 0.4848, 0.2113],
         [0.1474, 0.2266, 0.2068,  ..., 0.2492, 0.1768, 0.3209]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:02,173 [Process: 0] Synchronize training processes
2024-08-18 19:40:02,174 [Process: 0] Evaluating...
2024-08-18 19:40:02,175 [Process: 0] EPOCH 23:
2024-08-18 19:40:02,177 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:03,258 [Process: 0] Synchronize training processes
2024-08-18 19:40:03,258 [Process: 0] Evaluating...
2024-08-18 19:40:03,260 [Process: 0] EPOCH 24:
2024-08-18 19:40:03,262 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1187, 0.3769, 0.3870,  ..., 0.0909, 0.2312, 0.1473],
         [0.1187, 0.1681, 0.1755,  ..., 0.0909, 0.1954, 0.1473],
         [0.6440, 0.1659, 0.1663,  ..., 0.7273, 0.3293, 0.5580],
         [0.1187, 0.2891, 0.2712,  ..., 0.0909, 0.2441, 0.1473]],
        [[0.0112, 0.5950, 0.2165,  ..., 0.2870, 0.2331, 0.5597],
         [0.0112, 0.1322, 0.2165,  ..., 0.2001, 0.2331, 0.1468],
         [0.9664, 0.1322, 0.2165,  ..., 0.2001, 0.2331, 0.1468],
         [0.0112, 0.1405, 0.3505,  ..., 0.3128, 0.3007, 0.1468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4567, 0.2601, 0.2250,  ..., 0.2739, 0.2754, 0.2187],
         [0.1547, 0.2118, 0.2250,  ..., 0.2070, 0.2132, 0.2187],
         [0.1717, 0.2118, 0.2250,  ..., 0.2070, 0.2132, 0.2187],
         [0.2169, 0.3164, 0.3249,  ..., 0.3120, 0.2982, 0.3438]],
        [[0.2546, 0.4924, 0.3581,  ..., 0.4299, 0.1520, 0.3868],
         [0.1641, 0.1468, 0.1814,  ..., 0.1558, 0.1520, 0.1710],
         [0.4135, 0.1468, 0.1814,  ..., 0.1558, 0.5441, 0.1710],
         [0.1678, 0.2141, 0.2791,  ..., 0.2586, 0.1520, 0.2711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0890, 0.5045, 0.4769,  ..., 0.1093, 0.3964, 0.1048],
         [0.0890, 0.1395, 0.1343,  ..., 0.1093, 0.1833, 0.1135],
         [0.7331, 0.1216, 0.1343,  ..., 0.6720, 0.1824, 0.6768],
         [0.0890, 0.2344, 0.2544,  ..., 0.1093, 0.2380, 0.1048]],
        [[0.4604, 0.2151, 0.2321,  ..., 0.2035, 0.2119, 0.5378],
         [0.1799, 0.2151, 0.2084,  ..., 0.2035, 0.2119, 0.1373],
         [0.1799, 0.2151, 0.2084,  ..., 0.2035, 0.2119, 0.1373],
         [0.1799, 0.3547, 0.3511,  ..., 0.3895, 0.3644, 0.1876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:04,347 [Process: 0] Synchronize training processes
2024-08-18 19:40:04,347 [Process: 0] Evaluating...
2024-08-18 19:40:04,349 [Process: 0] EPOCH 25:
2024-08-18 19:40:04,351 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:05,432 [Process: 0] Synchronize training processes
2024-08-18 19:40:05,432 [Process: 0] Evaluating...
2024-08-18 19:40:05,434 [Process: 0] EPOCH 26:
2024-08-18 19:40:05,436 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5718, 0.2198, 0.2438,  ..., 0.2953, 0.2287, 0.2533],
         [0.1294, 0.2198, 0.2103,  ..., 0.2066, 0.2287, 0.2089],
         [0.1572, 0.2198, 0.2225,  ..., 0.2066, 0.2446, 0.2089],
         [0.1417, 0.3407, 0.3234,  ..., 0.2914, 0.2980, 0.3289]],
        [[0.5054, 0.2853, 0.3004,  ..., 0.3835, 0.0893, 0.3372],
         [0.1423, 0.2009, 0.1991,  ..., 0.1682, 0.0893, 0.1908],
         [0.1913, 0.2009, 0.2263,  ..., 0.1682, 0.7321, 0.1908],
         [0.1610, 0.3130, 0.2742,  ..., 0.2801, 0.0893, 0.2812]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0971, 0.5265, 0.4368,  ..., 0.0645, 0.4390, 0.1168],
         [0.0971, 0.1309, 0.1582,  ..., 0.0645, 0.1631, 0.1168],
         [0.7086, 0.1253, 0.1582,  ..., 0.8065, 0.1598, 0.6495],
         [0.0971, 0.2174, 0.2469,  ..., 0.0645, 0.2381, 0.1168]],
        [[0.0104, 0.2241, 0.2258,  ..., 0.2269, 0.2322, 0.5439],
         [0.0104, 0.2185, 0.2258,  ..., 0.2269, 0.2322, 0.1491],
         [0.9689, 0.2185, 0.2258,  ..., 0.2269, 0.2322, 0.1491],
         [0.0104, 0.3388, 0.3227,  ..., 0.3193, 0.3035, 0.1579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9676, 0.2182, 0.2184,  ..., 0.4309, 0.3115, 0.2230],
         [0.0123, 0.2182, 0.2184,  ..., 0.1564, 0.1857, 0.2139],
         [0.0071, 0.2182, 0.2184,  ..., 0.1470, 0.2674, 0.2598],
         [0.0130, 0.3454, 0.3447,  ..., 0.2657, 0.2353, 0.3033]],
        [[0.5782, 0.5385, 0.4316,  ..., 0.4761, 0.0770, 0.3108],
         [0.1269, 0.1296, 0.1552,  ..., 0.1353, 0.0770, 0.1979],
         [0.1506, 0.1155, 0.1462,  ..., 0.1264, 0.7689, 0.1979],
         [0.1442, 0.2164, 0.2670,  ..., 0.2622, 0.0770, 0.2934]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1035, 0.5151, 0.4440,  ..., 0.0890, 0.3228, 0.1302],
         [0.1035, 0.1324, 0.1655,  ..., 0.0890, 0.1859, 0.1302],
         [0.6896, 0.1135, 0.1416,  ..., 0.7329, 0.2428, 0.6094],
         [0.1035, 0.2390, 0.2489,  ..., 0.0890, 0.2485, 0.1302]],
        [[0.0454, 0.2240, 0.2072,  ..., 0.2175, 0.2279, 0.7277],
         [0.0454, 0.2149, 0.2072,  ..., 0.2175, 0.2279, 0.0843],
         [0.8637, 0.2149, 0.2072,  ..., 0.2175, 0.2279, 0.0843],
         [0.0454, 0.3463, 0.3785,  ..., 0.3475, 0.3162, 0.1038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:06,520 [Process: 0] Synchronize training processes
2024-08-18 19:40:06,521 [Process: 0] Evaluating...
2024-08-18 19:40:06,522 [Process: 0] EPOCH 27:
2024-08-18 19:40:06,524 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9520, 0.2190, 0.2441,  ..., 0.4738, 0.2738, 0.2360],
         [0.0171, 0.2148, 0.2072,  ..., 0.1374, 0.2109, 0.2061],
         [0.0109, 0.2148, 0.2072,  ..., 0.1374, 0.2109, 0.2061],
         [0.0200, 0.3514, 0.3415,  ..., 0.2514, 0.3044, 0.3518]],
        [[0.5627, 0.4474, 0.4023,  ..., 0.3829, 0.1323, 0.2977],
         [0.1346, 0.1468, 0.1580,  ..., 0.1744, 0.1323, 0.1954],
         [0.1194, 0.1429, 0.1554,  ..., 0.1744, 0.6031, 0.2298],
         [0.1833, 0.2629, 0.2843,  ..., 0.2684, 0.1323, 0.2771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.6695e-02, 4.6593e-01, 4.7522e-01,  ..., 7.3199e-02,
          1.8270e-01, 1.5847e-01],
         [4.6695e-02, 1.5718e-01, 1.5374e-01,  ..., 7.3199e-02,
          1.8270e-01, 1.5847e-01],
         [8.5991e-01, 1.4783e-01, 1.3107e-01,  ..., 7.8040e-01,
          4.3293e-01, 5.2458e-01],
         [4.6695e-02, 2.2906e-01, 2.3997e-01,  ..., 7.3199e-02,
          2.0167e-01, 1.5847e-01]],
        [[4.8804e-04, 2.2061e-01, 2.2415e-01,  ..., 2.1583e-01,
          2.0980e-01, 5.3620e-01],
         [4.8804e-04, 2.2061e-01, 2.2415e-01,  ..., 2.1583e-01,
          2.0980e-01, 1.4429e-01],
         [9.9854e-01, 2.2061e-01, 2.2415e-01,  ..., 2.1583e-01,
          2.0980e-01, 1.7522e-01],
         [4.8804e-04, 3.3818e-01, 3.2754e-01,  ..., 3.5250e-01,
          3.7061e-01, 1.4429e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8494, 0.2234, 0.2414,  ..., 0.3716, 0.5452, 0.3115],
         [0.0544, 0.2234, 0.1810,  ..., 0.1805, 0.1263, 0.1860],
         [0.0434, 0.2234, 0.1801,  ..., 0.1805, 0.1246, 0.2366],
         [0.0528, 0.3297, 0.3975,  ..., 0.2675, 0.2039, 0.2659]],
        [[0.2278, 0.4314, 0.4156,  ..., 0.4801, 0.0949, 0.3623],
         [0.1301, 0.1576, 0.1581,  ..., 0.1448, 0.0949, 0.1822],
         [0.5120, 0.1576, 0.1561,  ..., 0.1427, 0.7154, 0.1872],
         [0.1301, 0.2534, 0.2702,  ..., 0.2324, 0.0949, 0.2682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2126e-01, 5.9623e-01, 5.0186e-01,  ..., 8.0385e-02,
          1.6431e-01, 1.0927e-01],
         [1.2126e-01, 1.2222e-01, 1.4873e-01,  ..., 8.0385e-02,
          1.6431e-01, 1.0927e-01],
         [6.2965e-01, 1.2222e-01, 1.3196e-01,  ..., 7.5884e-01,
          5.0511e-01, 6.7219e-01],
         [1.2783e-01, 1.5934e-01, 2.1745e-01,  ..., 8.0385e-02,
          1.6626e-01, 1.0927e-01]],
        [[9.5937e-05, 2.1944e-01, 2.2340e-01,  ..., 2.5060e-01,
          2.1991e-01, 8.7914e-01],
         [9.5937e-05, 2.1944e-01, 2.2340e-01,  ..., 2.0308e-01,
          2.1991e-01, 4.0286e-02],
         [9.9971e-01, 2.1944e-01, 2.2340e-01,  ..., 2.0308e-01,
          2.1991e-01, 4.0286e-02],
         [9.5937e-05, 3.4168e-01, 3.2981e-01,  ..., 3.4325e-01,
          3.4028e-01, 4.0286e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 19:40:07,602 [Process: 0] Synchronize training processes
2024-08-18 19:40:07,603 [Process: 0] Evaluating...
2024-08-18 19:40:07,604 [Process: 0] EPOCH 28:
2024-08-18 19:40:07,606 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:08,698 [Process: 0] Synchronize training processes
2024-08-18 19:40:08,698 [Process: 0] Evaluating...
2024-08-18 19:40:08,700 [Process: 0] EPOCH 29:
2024-08-18 19:40:08,702 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9941, 0.2545, 0.1987,  ..., 0.6294, 0.6618, 0.1926],
         [0.0024, 0.1778, 0.1987,  ..., 0.1071, 0.1066, 0.1926],
         [0.0017, 0.1702, 0.1987,  ..., 0.0992, 0.1026, 0.1926],
         [0.0017, 0.3975, 0.4039,  ..., 0.1642, 0.1290, 0.4221]],
        [[0.3758, 0.4971, 0.3662,  ..., 0.4697, 0.0270, 0.3324],
         [0.1232, 0.1454, 0.1852,  ..., 0.1480, 0.0270, 0.1856],
         [0.3777, 0.1308, 0.1852,  ..., 0.1476, 0.9190, 0.2169],
         [0.1232, 0.2267, 0.2634,  ..., 0.2348, 0.0270, 0.2651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0694, 0.4880, 0.4651,  ..., 0.0564, 0.1319, 0.0948],
         [0.0694, 0.1464, 0.1619,  ..., 0.0564, 0.1319, 0.0948],
         [0.7918, 0.1464, 0.1289,  ..., 0.8307, 0.6042, 0.7155],
         [0.0694, 0.2193, 0.2440,  ..., 0.0564, 0.1319, 0.0948]],
        [[0.0077, 0.2099, 0.2205,  ..., 0.2290, 0.2002, 0.7592],
         [0.0074, 0.1845, 0.2059,  ..., 0.1943, 0.2002, 0.0803],
         [0.9774, 0.1845, 0.2059,  ..., 0.1935, 0.2002, 0.0803],
         [0.0074, 0.4211, 0.3678,  ..., 0.3832, 0.3994, 0.0803]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9938e-01, 2.5253e-01, 2.1427e-01,  ..., 5.9909e-01,
          3.6074e-01, 2.0876e-01],
         [2.4123e-04, 2.1460e-01, 2.1427e-01,  ..., 1.1814e-01,
          1.8845e-01, 2.0876e-01],
         [1.8857e-04, 2.1460e-01, 2.1427e-01,  ..., 1.1138e-01,
          1.8845e-01, 2.0876e-01],
         [1.8857e-04, 3.1827e-01, 3.5720e-01,  ..., 1.7139e-01,
          2.6236e-01, 3.7372e-01]],
        [[9.8139e-01, 4.2437e-01, 3.5313e-01,  ..., 3.5369e-01,
          2.9080e-02, 3.2348e-01],
         [6.7251e-03, 1.6170e-01, 1.7697e-01,  ..., 1.8625e-01,
          2.9080e-02, 1.7847e-01],
         [5.9421e-03, 1.6170e-01, 1.7697e-01,  ..., 1.8625e-01,
          9.1276e-01, 2.4374e-01],
         [5.9421e-03, 2.5222e-01, 2.9293e-01,  ..., 2.7380e-01,
          2.9080e-02, 2.5432e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:40:09,782 [Process: 0] Synchronize training processes
2024-08-18 19:40:09,782 [Process: 0] Evaluating...
2024-08-18 19:40:09,784 [Process: 0] EPOCH 30:
2024-08-18 19:40:09,786 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:10,863 [Process: 0] Synchronize training processes
2024-08-18 19:40:10,864 [Process: 0] Evaluating...
2024-08-18 19:40:10,866 [Process: 0] EPOCH 31:
2024-08-18 19:40:10,868 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0631, 0.6384, 0.4775,  ..., 0.0713, 0.1304, 0.1186],
         [0.0631, 0.1205, 0.1384,  ..., 0.0713, 0.1304, 0.1186],
         [0.8106, 0.1205, 0.1361,  ..., 0.7860, 0.6050, 0.6441],
         [0.0631, 0.1205, 0.2480,  ..., 0.0713, 0.1342, 0.1186]],
        [[0.1003, 0.5681, 0.2323,  ..., 0.2106, 0.1934, 0.7173],
         [0.1003, 0.1366, 0.1843,  ..., 0.2106, 0.1934, 0.0939],
         [0.6990, 0.1276, 0.1788,  ..., 0.2106, 0.1934, 0.0939],
         [0.1003, 0.1677, 0.4045,  ..., 0.3683, 0.4199, 0.0949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9802, 0.2331, 0.2897,  ..., 0.4775, 0.6769, 0.2162],
         [0.0085, 0.2119, 0.1889,  ..., 0.1538, 0.1095, 0.2008],
         [0.0057, 0.2119, 0.1889,  ..., 0.1377, 0.1021, 0.2008],
         [0.0057, 0.3432, 0.3325,  ..., 0.2310, 0.1114, 0.3822]],
        [[0.9625, 0.2961, 0.3622,  ..., 0.3327, 0.0515, 0.1561],
         [0.0141, 0.1910, 0.1671,  ..., 0.1742, 0.0515, 0.1561],
         [0.0117, 0.2133, 0.1671,  ..., 0.1742, 0.8455, 0.5274],
         [0.0117, 0.2997, 0.3036,  ..., 0.3189, 0.0515, 0.1604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0581, 0.4658, 0.2923,  ..., 0.0412, 0.1290, 0.0959],
         [0.0581, 0.1544, 0.1850,  ..., 0.0412, 0.1290, 0.0959],
         [0.8256, 0.1506, 0.2073,  ..., 0.8765, 0.6111, 0.7124],
         [0.0581, 0.2292, 0.3154,  ..., 0.0412, 0.1310, 0.0959]],
        [[0.0198, 0.2175, 0.2254,  ..., 0.2294, 0.2153, 0.7989],
         [0.0057, 0.2175, 0.2254,  ..., 0.2294, 0.2153, 0.0656],
         [0.9687, 0.2175, 0.2254,  ..., 0.2294, 0.2153, 0.0656],
         [0.0057, 0.3476, 0.3239,  ..., 0.3117, 0.3540, 0.0699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9728e-01, 1.9105e-01, 2.1572e-01,  ..., 6.9458e-01,
          4.7561e-01, 2.0254e-01],
         [8.6364e-04, 1.9105e-01, 2.1572e-01,  ..., 9.5177e-02,
          1.3775e-01, 2.0254e-01],
         [1.1229e-03, 1.9105e-01, 2.1572e-01,  ..., 9.5177e-02,
          2.3034e-01, 2.0254e-01],
         [7.3271e-04, 4.2686e-01, 3.5283e-01,  ..., 1.1506e-01,
          1.5631e-01, 3.9239e-01]],
        [[3.2848e-01, 4.1215e-01, 3.4431e-01,  ..., 2.5909e-01,
          2.2454e-02, 1.6289e-01],
         [1.7468e-01, 1.5481e-01, 1.7708e-01,  ..., 1.9530e-01,
          2.2454e-02, 1.6289e-01],
         [3.2216e-01, 1.5172e-01, 1.6042e-01,  ..., 1.9530e-01,
          9.3264e-01, 4.8341e-01],
         [1.7468e-01, 2.8132e-01, 3.1819e-01,  ..., 3.5030e-01,
          2.2454e-02, 1.9082e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:11,944 [Process: 0] Synchronize training processes
2024-08-18 19:40:11,945 [Process: 0] Evaluating...
2024-08-18 19:40:11,951 [Process: 0] EPOCH 32:
2024-08-18 19:40:11,953 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:13,031 [Process: 0] Synchronize training processes
2024-08-18 19:40:13,031 [Process: 0] Evaluating...
2024-08-18 19:40:13,033 [Process: 0] EPOCH 33:
2024-08-18 19:40:13,034 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0850, 0.3108, 0.6828,  ..., 0.0575, 0.1330, 0.1209],
         [0.0850, 0.1923, 0.1079,  ..., 0.0575, 0.1330, 0.1209],
         [0.7451, 0.1750, 0.0910,  ..., 0.8088, 0.6010, 0.6090],
         [0.0850, 0.3219, 0.1183,  ..., 0.0762, 0.1330, 0.1493]],
        [[0.1573, 0.2229, 0.2152,  ..., 0.2426, 0.2175, 0.7110],
         [0.0050, 0.2229, 0.2121,  ..., 0.2186, 0.2175, 0.0949],
         [0.8326, 0.2229, 0.2121,  ..., 0.2186, 0.2175, 0.0886],
         [0.0050, 0.3314, 0.3605,  ..., 0.3201, 0.3476, 0.1055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7243, 0.2272, 0.1981,  ..., 0.7094, 0.4096, 0.1977],
         [0.0513, 0.2170, 0.1981,  ..., 0.0885, 0.1793, 0.1977],
         [0.1730, 0.2170, 0.1981,  ..., 0.0885, 0.2007, 0.1977],
         [0.0513, 0.3389, 0.4056,  ..., 0.1136, 0.2105, 0.4070]],
        [[0.2709, 0.3905, 0.2479,  ..., 0.3008, 0.1776, 0.1785],
         [0.1206, 0.1689, 0.2068,  ..., 0.1910, 0.1776, 0.1785],
         [0.4878, 0.1689, 0.2068,  ..., 0.1910, 0.4015, 0.4070],
         [0.1206, 0.2717, 0.3385,  ..., 0.3173, 0.2432, 0.2361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0830, 0.1627, 0.2939,  ..., 0.0730, 0.1122, 0.0658],
         [0.0830, 0.1750, 0.1916,  ..., 0.0730, 0.1122, 0.0658],
         [0.7069, 0.3265, 0.1851,  ..., 0.7810, 0.6494, 0.8026],
         [0.1272, 0.3358, 0.3294,  ..., 0.0730, 0.1262, 0.0658]],
        [[0.0077, 0.2170, 0.2313,  ..., 0.2247, 0.2259, 0.8538],
         [0.0077, 0.2170, 0.2313,  ..., 0.2247, 0.2259, 0.0487],
         [0.9769, 0.2170, 0.2313,  ..., 0.2247, 0.2259, 0.0487],
         [0.0077, 0.3490, 0.3060,  ..., 0.3258, 0.3223, 0.0487]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7068, 0.1872, 0.2448,  ..., 0.2134, 0.8055, 0.2098],
         [0.0723, 0.1872, 0.1854,  ..., 0.2033, 0.0648, 0.2098],
         [0.1486, 0.1872, 0.1694,  ..., 0.2033, 0.0648, 0.2098],
         [0.0723, 0.4384, 0.4004,  ..., 0.3799, 0.0648, 0.3706]],
        [[0.2235, 0.4473, 0.5441,  ..., 0.3051, 0.1597, 0.1998],
         [0.1840, 0.1548, 0.1286,  ..., 0.1810, 0.1597, 0.1998],
         [0.3897, 0.1454, 0.1286,  ..., 0.1810, 0.5127, 0.3359],
         [0.2027, 0.2524, 0.1986,  ..., 0.3330, 0.1679, 0.2644]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:14,111 [Process: 0] Synchronize training processes
2024-08-18 19:40:14,111 [Process: 0] Evaluating...
2024-08-18 19:40:14,113 [Process: 0] EPOCH 34:
2024-08-18 19:40:14,115 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:15,182 [Process: 0] Synchronize training processes
2024-08-18 19:40:15,182 [Process: 0] Evaluating...
2024-08-18 19:40:15,184 [Process: 0] EPOCH 35:
2024-08-18 19:40:15,186 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0968, 0.2646, 0.1732,  ..., 0.0511, 0.1400, 0.0879],
         [0.0968, 0.1870, 0.1898,  ..., 0.0511, 0.1416, 0.0879],
         [0.7097, 0.1633, 0.1732,  ..., 0.8466, 0.5783, 0.7362],
         [0.0968, 0.3851, 0.4639,  ..., 0.0511, 0.1400, 0.0879]],
        [[0.0014, 0.1720, 0.2235,  ..., 0.1629, 0.2042, 0.8757],
         [0.0014, 0.1720, 0.2235,  ..., 0.1629, 0.2042, 0.0414],
         [0.9959, 0.1720, 0.2235,  ..., 0.1629, 0.2042, 0.0414],
         [0.0014, 0.4840, 0.3296,  ..., 0.5112, 0.3875, 0.0414]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7975, 0.1982, 0.1993,  ..., 0.2040, 0.7954, 0.1797],
         [0.0540, 0.1982, 0.1993,  ..., 0.2040, 0.0695, 0.1742],
         [0.0945, 0.1982, 0.1993,  ..., 0.2040, 0.0675, 0.1742],
         [0.0540, 0.4053, 0.4020,  ..., 0.3879, 0.0675, 0.4720]],
        [[0.0456, 0.2007, 0.2549,  ..., 0.1887, 0.0021, 0.1082],
         [0.0456, 0.2007, 0.1829,  ..., 0.1887, 0.0021, 0.1082],
         [0.8632, 0.2007, 0.1829,  ..., 0.2852, 0.9938, 0.6753],
         [0.0456, 0.3979, 0.3793,  ..., 0.3374, 0.0021, 0.1082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0513, 0.2437, 0.6623,  ..., 0.0675, 0.1373, 0.0457],
         [0.0513, 0.1831, 0.1029,  ..., 0.0675, 0.1373, 0.0457],
         [0.8460, 0.1714, 0.0858,  ..., 0.7974, 0.4608, 0.8628],
         [0.0513, 0.4017, 0.1490,  ..., 0.0675, 0.2647, 0.0457]],
        [[0.2500, 0.2424, 0.2314,  ..., 0.2281, 0.2171, 0.8730],
         [0.2500, 0.2424, 0.2314,  ..., 0.2281, 0.2171, 0.0423],
         [0.2500, 0.2424, 0.2314,  ..., 0.2281, 0.2171, 0.0423],
         [0.2500, 0.2727, 0.3058,  ..., 0.3158, 0.3487, 0.0423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9173, 0.2533, 0.2534,  ..., 0.2188, 0.5910, 0.2252],
         [0.0273, 0.1888, 0.1982,  ..., 0.1865, 0.1319, 0.1956],
         [0.0282, 0.1888, 0.1982,  ..., 0.1865, 0.1319, 0.1956],
         [0.0273, 0.3691, 0.3502,  ..., 0.4083, 0.1451, 0.3835]],
        [[0.0416, 0.5519, 0.3217,  ..., 0.1821, 0.0082, 0.1215],
         [0.0416, 0.1287, 0.1632,  ..., 0.1821, 0.0082, 0.1215],
         [0.8751, 0.1287, 0.1632,  ..., 0.1821, 0.9753, 0.6318],
         [0.0416, 0.1907, 0.3518,  ..., 0.4538, 0.0082, 0.1251]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:16,263 [Process: 0] Synchronize training processes
2024-08-18 19:40:16,263 [Process: 0] Evaluating...
2024-08-18 19:40:16,265 [Process: 0] EPOCH 36:
2024-08-18 19:40:16,267 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:17,337 [Process: 0] Synchronize training processes
2024-08-18 19:40:17,338 [Process: 0] Evaluating...
2024-08-18 19:40:17,339 [Process: 0] EPOCH 37:
2024-08-18 19:40:17,341 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0571, 0.2050, 0.6390,  ..., 0.0508, 0.1079, 0.0854],
         [0.0571, 0.1858, 0.1073,  ..., 0.0508, 0.1079, 0.0854],
         [0.7673, 0.1506, 0.0885,  ..., 0.8327, 0.6647, 0.7366],
         [0.1184, 0.4586, 0.1653,  ..., 0.0656, 0.1195, 0.0926]],
        [[0.0012, 0.2111, 0.2091,  ..., 0.3324, 0.2382, 0.8213],
         [0.0012, 0.2111, 0.2091,  ..., 0.1984, 0.1835, 0.0596],
         [0.9965, 0.2111, 0.2091,  ..., 0.1984, 0.1835, 0.0596],
         [0.0012, 0.3668, 0.3726,  ..., 0.2708, 0.3947, 0.0596]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7473, 0.2284, 0.2635,  ..., 0.1950, 0.4327, 0.2447],
         [0.0685, 0.1888, 0.1997,  ..., 0.1906, 0.1587, 0.2168],
         [0.1158, 0.1888, 0.1997,  ..., 0.1906, 0.1587, 0.2168],
         [0.0685, 0.3940, 0.3371,  ..., 0.4238, 0.2498, 0.3217]],
        [[0.0351, 0.3855, 0.3561,  ..., 0.1822, 0.0167, 0.1344],
         [0.0351, 0.1570, 0.1704,  ..., 0.1822, 0.0167, 0.1344],
         [0.8948, 0.1494, 0.1706,  ..., 0.2257, 0.9500, 0.5659],
         [0.0351, 0.3082, 0.3029,  ..., 0.4098, 0.0167, 0.1653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0643, 0.1932, 0.6086,  ..., 0.0423, 0.0565, 0.0716],
         [0.0643, 0.1831, 0.1140,  ..., 0.0423, 0.0565, 0.0716],
         [0.8071, 0.1820, 0.1140,  ..., 0.8720, 0.8306, 0.7851],
         [0.0643, 0.4418, 0.1633,  ..., 0.0434, 0.0565, 0.0716]],
        [[0.0688, 0.1941, 0.2325,  ..., 0.2447, 0.2101, 0.8857],
         [0.0688, 0.1941, 0.2325,  ..., 0.2447, 0.2101, 0.0381],
         [0.7937, 0.1941, 0.2325,  ..., 0.2447, 0.2101, 0.0381],
         [0.0688, 0.4178, 0.3024,  ..., 0.2659, 0.3698, 0.0381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:18,415 [Process: 0] Synchronize training processes
2024-08-18 19:40:18,416 [Process: 0] Evaluating...
2024-08-18 19:40:18,418 [Process: 0] EPOCH 38:
2024-08-18 19:40:18,420 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4590, 0.2540, 0.2778,  ..., 0.1993, 0.4779, 0.2422],
         [0.1521, 0.2077, 0.1978,  ..., 0.1965, 0.1649, 0.2022],
         [0.2338, 0.2077, 0.1978,  ..., 0.1965, 0.1741, 0.2022],
         [0.1552, 0.3305, 0.3265,  ..., 0.4077, 0.1832, 0.3534]],
        [[0.0246, 0.2347, 0.2225,  ..., 0.1995, 0.0367, 0.1711],
         [0.0246, 0.2040, 0.1902,  ..., 0.1904, 0.0367, 0.1711],
         [0.9262, 0.2040, 0.1968,  ..., 0.1936, 0.8898, 0.4317],
         [0.0246, 0.3573, 0.3905,  ..., 0.4165, 0.0367, 0.2261]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0664, 0.1533, 0.1700,  ..., 0.0389, 0.0845, 0.0657],
         [0.0664, 0.1577, 0.1770,  ..., 0.0389, 0.0845, 0.0657],
         [0.7944, 0.1295, 0.1725,  ..., 0.8834, 0.6757, 0.8029],
         [0.0728, 0.5595, 0.4805,  ..., 0.0389, 0.1552, 0.0657]],
        [[0.0033, 0.2036, 0.2049,  ..., 0.2259, 0.2320, 0.5782],
         [0.0033, 0.2036, 0.2049,  ..., 0.2259, 0.2320, 0.1283],
         [0.9902, 0.2036, 0.2049,  ..., 0.2259, 0.2320, 0.1283],
         [0.0033, 0.3893, 0.3853,  ..., 0.3224, 0.3041, 0.1651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9138, 0.1788, 0.2033,  ..., 0.2099, 0.5810, 0.1658],
         [0.0192, 0.1788, 0.2033,  ..., 0.2099, 0.1397, 0.1658],
         [0.0477, 0.1843, 0.2033,  ..., 0.2099, 0.1397, 0.1658],
         [0.0192, 0.4581, 0.3901,  ..., 0.3702, 0.1397, 0.5027]],
        [[0.0485, 0.1669, 0.1663,  ..., 0.1589, 0.0767, 0.1622],
         [0.0485, 0.1676, 0.1663,  ..., 0.1613, 0.0767, 0.1597],
         [0.8544, 0.1582, 0.1663,  ..., 0.1736, 0.7698, 0.3805],
         [0.0485, 0.5073, 0.5011,  ..., 0.5063, 0.0767, 0.2977]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7929e-02, 1.7716e-01, 1.5649e-01,  ..., 2.0633e-02,
          1.2262e-01, 8.3839e-02],
         [5.7929e-02, 1.7431e-01, 1.5883e-01,  ..., 2.0633e-02,
          1.2950e-01, 8.3839e-02],
         [8.2621e-01, 1.2748e-01, 1.3068e-01,  ..., 9.3810e-01,
          3.9597e-01, 7.4848e-01],
         [5.7929e-02, 5.2105e-01, 5.5400e-01,  ..., 2.0633e-02,
          3.5190e-01, 8.3839e-02]],
        [[4.2557e-04, 1.5841e-01, 1.1220e-01,  ..., 1.8137e-01,
          2.2792e-01, 6.3338e-01],
         [4.2557e-04, 1.5841e-01, 1.1220e-01,  ..., 1.8137e-01,
          2.2792e-01, 1.2221e-01],
         [9.9872e-01, 1.5841e-01, 1.1220e-01,  ..., 1.8137e-01,
          2.2792e-01, 1.2221e-01],
         [4.2557e-04, 5.2477e-01, 6.6339e-01,  ..., 4.5590e-01,
          3.1625e-01, 1.2221e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:19,498 [Process: 0] Synchronize training processes
2024-08-18 19:40:19,498 [Process: 0] Evaluating...
2024-08-18 19:40:19,500 [Process: 0] EPOCH 39:
2024-08-18 19:40:19,502 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:20,585 [Process: 0] Synchronize training processes
2024-08-18 19:40:20,585 [Process: 0] Evaluating...
2024-08-18 19:40:20,587 [Process: 0] EPOCH 40:
2024-08-18 19:40:20,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9557, 0.1875, 0.2053,  ..., 0.1733, 0.5014, 0.1955],
         [0.0143, 0.1875, 0.2053,  ..., 0.1733, 0.1662, 0.1955],
         [0.0156, 0.1875, 0.2265,  ..., 0.1733, 0.1662, 0.2115],
         [0.0143, 0.4375, 0.3629,  ..., 0.4801, 0.1662, 0.3976]],
        [[0.0244, 0.1306, 0.1415,  ..., 0.1961, 0.0530, 0.1071],
         [0.0244, 0.1432, 0.1450,  ..., 0.1961, 0.0530, 0.1071],
         [0.9267, 0.1306, 0.1415,  ..., 0.2345, 0.8410, 0.6710],
         [0.0244, 0.5957, 0.5721,  ..., 0.3733, 0.0530, 0.1149]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0778, 0.1066, 0.0712,  ..., 0.0354, 0.0479, 0.1047],
         [0.0792, 0.1512, 0.1307,  ..., 0.0354, 0.0479, 0.1047],
         [0.6820, 0.1066, 0.0712,  ..., 0.8938, 0.8028, 0.5322],
         [0.1611, 0.6357, 0.7268,  ..., 0.0354, 0.1014, 0.2585]],
        [[0.0057, 0.2090, 0.2384,  ..., 0.2500, 0.2953, 0.7890],
         [0.0057, 0.2090, 0.2384,  ..., 0.2500, 0.2349, 0.0703],
         [0.9828, 0.2090, 0.2384,  ..., 0.2500, 0.2349, 0.0703],
         [0.0057, 0.3730, 0.2847,  ..., 0.2500, 0.2349, 0.0703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9908, 0.1988, 0.1940,  ..., 0.1753, 0.6447, 0.1842],
         [0.0029, 0.1988, 0.1940,  ..., 0.1753, 0.1184, 0.1842],
         [0.0034, 0.1988, 0.2209,  ..., 0.2211, 0.1184, 0.1842],
         [0.0029, 0.4036, 0.3912,  ..., 0.4283, 0.1184, 0.4475]],
        [[0.0816, 0.1963, 0.1416,  ..., 0.2051, 0.0245, 0.1255],
         [0.0475, 0.1963, 0.1431,  ..., 0.2051, 0.0245, 0.1255],
         [0.8233, 0.1963, 0.1416,  ..., 0.2146, 0.9266, 0.6025],
         [0.0475, 0.4110, 0.5738,  ..., 0.3752, 0.0245, 0.1465]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0805, 0.1526, 0.1688,  ..., 0.0416, 0.1296, 0.0511],
         [0.0796, 0.2239, 0.1951,  ..., 0.0416, 0.1209, 0.0511],
         [0.7262, 0.1526, 0.1688,  ..., 0.8752, 0.5381, 0.8467],
         [0.1137, 0.4708, 0.4673,  ..., 0.0416, 0.2114, 0.0511]],
        [[0.2037, 0.1214, 0.1377,  ..., 0.1893, 0.2077, 0.9057],
         [0.0268, 0.1401, 0.1377,  ..., 0.1893, 0.2077, 0.0314],
         [0.7427, 0.1214, 0.1377,  ..., 0.1893, 0.2077, 0.0314],
         [0.0268, 0.6172, 0.5870,  ..., 0.4321, 0.3768, 0.0314]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:21,667 [Process: 0] Synchronize training processes
2024-08-18 19:40:21,667 [Process: 0] Evaluating...
2024-08-18 19:40:21,669 [Process: 0] EPOCH 41:
2024-08-18 19:40:21,670 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:22,749 [Process: 0] Synchronize training processes
2024-08-18 19:40:22,750 [Process: 0] Evaluating...
2024-08-18 19:40:22,757 [Process: 0] EPOCH 42:
2024-08-18 19:40:22,758 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8682, 0.1896, 0.1753,  ..., 0.1954, 0.8079, 0.1946],
         [0.0220, 0.1896, 0.1803,  ..., 0.1954, 0.0640, 0.1946],
         [0.0879, 0.1973, 0.1939,  ..., 0.2130, 0.0640, 0.1946],
         [0.0220, 0.4234, 0.4505,  ..., 0.3962, 0.0640, 0.4162]],
        [[0.2032, 0.1723, 0.1645,  ..., 0.1416, 0.0252, 0.0711],
         [0.0328, 0.1836, 0.1877,  ..., 0.1416, 0.0252, 0.0711],
         [0.7311, 0.1723, 0.1645,  ..., 0.4002, 0.9244, 0.7868],
         [0.0328, 0.4718, 0.4834,  ..., 0.3166, 0.0252, 0.0711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1025, 0.1945, 0.1650,  ..., 0.0293, 0.0533, 0.0961],
         [0.1235, 0.2012, 0.2430,  ..., 0.0293, 0.0533, 0.1053],
         [0.5716, 0.2905, 0.1650,  ..., 0.8866, 0.8023, 0.5891],
         [0.2024, 0.3138, 0.4270,  ..., 0.0548, 0.0910, 0.2095]],
        [[0.6697, 0.1265, 0.1174,  ..., 0.2111, 0.2144, 0.4351],
         [0.0146, 0.1568, 0.1754,  ..., 0.2112, 0.2144, 0.1883],
         [0.3011, 0.1265, 0.1174,  ..., 0.2111, 0.2144, 0.1883],
         [0.0146, 0.5901, 0.5899,  ..., 0.3666, 0.3568, 0.1883]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7666, 0.2007, 0.2135,  ..., 0.2227, 0.9298, 0.1626],
         [0.0442, 0.2007, 0.2135,  ..., 0.2227, 0.0226, 0.1626],
         [0.1450, 0.2369, 0.2139,  ..., 0.2227, 0.0250, 0.1846],
         [0.0442, 0.3616, 0.3592,  ..., 0.3319, 0.0226, 0.4903]],
        [[0.7869, 0.1908, 0.1669,  ..., 0.1121, 0.1307, 0.0550],
         [0.0139, 0.2019, 0.1820,  ..., 0.1422, 0.1307, 0.0550],
         [0.1852, 0.1737, 0.1867,  ..., 0.1121, 0.5045, 0.8344],
         [0.0139, 0.4336, 0.4644,  ..., 0.6336, 0.2341, 0.0557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape:
2024-08-18 19:40:23,828 [Process: 0] Synchronize training processes
2024-08-18 19:40:23,829 [Process: 0] Evaluating...
2024-08-18 19:40:23,830 [Process: 0] EPOCH 43:
2024-08-18 19:40:23,832 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:24,909 [Process: 0] Synchronize training processes
2024-08-18 19:40:24,909 [Process: 0] Evaluating...
2024-08-18 19:40:24,911 [Process: 0] EPOCH 44:
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0861, 0.1215, 0.1213,  ..., 0.0819, 0.0603, 0.0561],
         [0.0861, 0.1535, 0.1821,  ..., 0.0819, 0.0715, 0.0561],
         [0.7333, 0.3328, 0.1213,  ..., 0.6830, 0.7556, 0.8095],
         [0.0945, 0.3922, 0.5753,  ..., 0.1531, 0.1126, 0.0783]],
        [[0.0325, 0.3177, 0.1559,  ..., 0.2554, 0.2617, 0.9220],
         [0.0281, 0.2274, 0.1559,  ..., 0.2482, 0.2172, 0.0260],
         [0.9114, 0.2274, 0.1559,  ..., 0.2482, 0.2172, 0.0260],
         [0.0281, 0.2274, 0.5324,  ..., 0.2482, 0.3038, 0.0260]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7570, 0.1578, 0.1614,  ..., 0.1987, 0.8199, 0.1672],
         [0.0677, 0.1661, 0.1721,  ..., 0.1987, 0.0600, 0.1720],
         [0.1076, 0.1787, 0.1653,  ..., 0.1987, 0.0600, 0.2277],
         [0.0677, 0.4974, 0.5011,  ..., 0.4038, 0.0600, 0.4331]],
        [[0.8415, 0.1508, 0.1686,  ..., 0.1770, 0.0262, 0.0286],
         [0.0295, 0.1683, 0.1770,  ..., 0.1770, 0.0262, 0.0286],
         [0.0995, 0.1582, 0.1686,  ..., 0.3224, 0.9213, 0.9142],
         [0.0295, 0.5228, 0.4857,  ..., 0.3235, 0.0262, 0.0286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0534, 0.1606, 0.1458,  ..., 0.0228, 0.1099, 0.0321],
         [0.0534, 0.2382, 0.2520,  ..., 0.0228, 0.1099, 0.0321],
         [0.7882, 0.2526, 0.1458,  ..., 0.9316, 0.6212, 0.9036],
         [0.1049, 0.3486, 0.4564,  ..., 0.0228, 0.1590, 0.0321]],
        [[0.0763, 0.0691, 0.0689,  ..., 0.0540, 0.4276, 0.9019],
         [0.0763, 0.1027, 0.1742,  ..., 0.0860, 0.1908, 0.0327],
         [0.7711, 0.0691, 0.0689,  ..., 0.0540, 0.1908, 0.0327],
         [0.0763, 0.7591, 0.6880,  ..., 0.8060, 0.1908, 0.0327]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5493, 0.1114, 0.0944,  ..., 0.8238, 0.6962, 0.1108],
         [0.1054, 0.1367, 0.1229,  ..., 0.0587, 0.1013, 0.1317],
         [0.2400, 0.1211, 0.1276,  ..., 0.0587, 0.1013, 0.1328],
         [0.1054, 0.6308, 0.6551,  ..., 0.0587, 0.1013, 0.6247]],
        [[0.7531, 0.0941, 0.1208,  ..., 0.1529, 0.0212, 0.0163],
         [0.0369, 0.1178, 0.1599,  ..., 0.1728, 0.0212, 0.0163],
         [0.1730, 0.0941, 0.1455,  ..., 0.1529, 0.9363, 0.9512],
         [0.0369, 0.6940, 0.5738,  ..., 0.5213, 0.0212, 0.0163]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:25,996 [Process: 0] Synchronize training processes
2024-08-18 19:40:25,996 [Process: 0] Evaluating...
2024-08-18 19:40:25,998 [Process: 0] EPOCH 45:
2024-08-18 19:40:26,000 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:27,077 [Process: 0] Synchronize training processes
2024-08-18 19:40:27,078 [Process: 0] Evaluating...
2024-08-18 19:40:27,079 [Process: 0] EPOCH 46:
2024-08-18 19:40:27,081 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0322, 0.3042, 0.2520,  ..., 0.0107, 0.1414, 0.0342],
         [0.0322, 0.2317, 0.2664,  ..., 0.0107, 0.1250, 0.0342],
         [0.8871, 0.2479, 0.1851,  ..., 0.9664, 0.5781, 0.8973],
         [0.0485, 0.2161, 0.2965,  ..., 0.0121, 0.1555, 0.0342]],
        [[0.2147, 0.0831, 0.0436,  ..., 0.1012, 0.2270, 0.6972],
         [0.2147, 0.1045, 0.0521,  ..., 0.1535, 0.2270, 0.1009],
         [0.3559, 0.0831, 0.0436,  ..., 0.1012, 0.2270, 0.1009],
         [0.2147, 0.7293, 0.8608,  ..., 0.6440, 0.3191, 0.1009]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6019, 0.0937, 0.0875,  ..., 0.0960, 0.7116, 0.1329],
         [0.1114, 0.1099, 0.1007,  ..., 0.1094, 0.0961, 0.1329],
         [0.1752, 0.1176, 0.1214,  ..., 0.1229, 0.0961, 0.1329],
         [0.1114, 0.6788, 0.6903,  ..., 0.6717, 0.0961, 0.6014]],
        [[0.7702, 0.4392, 0.2181,  ..., 0.1569, 0.0107, 0.0961],
         [0.0511, 0.1802, 0.1962,  ..., 0.1752, 0.0107, 0.0961],
         [0.1275, 0.1769, 0.1817,  ..., 0.1848, 0.9679, 0.6511],
         [0.0511, 0.2037, 0.4040,  ..., 0.4831, 0.0107, 0.1568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0430, 0.2555, 0.0588,  ..., 0.0445, 0.0957, 0.0944],
         [0.0437, 0.1981, 0.1205,  ..., 0.0445, 0.1162, 0.0807],
         [0.8659, 0.3149, 0.0588,  ..., 0.8664, 0.6003, 0.7274],
         [0.0475, 0.2315, 0.7620,  ..., 0.0445, 0.1879, 0.0976]],
        [[0.0098, 0.0361, 0.1333,  ..., 0.2752, 0.2335, 0.7910],
         [0.0098, 0.0701, 0.1333,  ..., 0.2411, 0.2335, 0.0697],
         [0.9706, 0.0361, 0.1333,  ..., 0.2427, 0.2377, 0.0697],
         [0.0098, 0.8576, 0.6000,  ..., 0.2411, 0.2954, 0.0697]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9311, 0.1180, 0.1038,  ..., 0.1673, 0.9374, 0.1398],
         [0.0230, 0.1207, 0.1038,  ..., 0.1682, 0.0209, 0.1398],
         [0.0230, 0.2079, 0.1038,  ..., 0.1785, 0.0209, 0.1398],
         [0.0230, 0.5534, 0.6886,  ..., 0.4860, 0.0209, 0.5806]],
        [[0.9014, 0.1235, 0.1513,  ..., 0.1310, 0.0281, 0.1196],
         [0.0229, 0.1413, 0.1513,  ..., 0.1465, 0.0281, 0.1196],
         [0.0528, 0.1399, 0.1513,  ..., 0.1310, 0.9157, 0.6168],
         [0.0229, 0.5953, 0.5462,  ..., 0.5914, 0.0281, 0.1439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:28,163 [Process: 0] Synchronize training processes
2024-08-18 19:40:28,164 [Process: 0] Evaluating...
2024-08-18 19:40:28,165 [Process: 0] EPOCH 47:
2024-08-18 19:40:28,167 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:29,245 [Process: 0] Synchronize training processes
2024-08-18 19:40:29,246 [Process: 0] Evaluating...
2024-08-18 19:40:29,247 [Process: 0] EPOCH 48:
2024-08-18 19:40:29,249 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0385, 0.1931, 0.0509,  ..., 0.0479, 0.0852, 0.0448],
         [0.0385, 0.1668, 0.0602,  ..., 0.0479, 0.0852, 0.0448],
         [0.8545, 0.3214, 0.0509,  ..., 0.8562, 0.6430, 0.8656],
         [0.0685, 0.3187, 0.8381,  ..., 0.0479, 0.1866, 0.0448]],
        [[0.0117, 0.0304, 0.0362,  ..., 0.2387, 0.3320, 0.7998],
         [0.0117, 0.0407, 0.0362,  ..., 0.2387, 0.2212, 0.0667],
         [0.9649, 0.0304, 0.0362,  ..., 0.2387, 0.2255, 0.0667],
         [0.0117, 0.8984, 0.8913,  ..., 0.2839, 0.2212, 0.0667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8314, 0.1299, 0.1099,  ..., 0.1496, 0.5792, 0.1275],
         [0.0541, 0.1299, 0.1099,  ..., 0.1496, 0.1266, 0.1275],
         [0.0604, 0.1299, 0.1099,  ..., 0.5017, 0.1675, 0.1275],
         [0.0541, 0.6103, 0.6703,  ..., 0.1991, 0.1266, 0.6176]],
        [[0.9337, 0.1340, 0.1593,  ..., 0.0927, 0.1321, 0.1257],
         [0.0118, 0.1340, 0.1614,  ..., 0.0927, 0.0720, 0.1257],
         [0.0427, 0.1998, 0.1593,  ..., 0.0927, 0.7240, 0.6058],
         [0.0118, 0.5321, 0.5200,  ..., 0.7218, 0.0720, 0.1427]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0722, 0.1320, 0.0609,  ..., 0.0390, 0.0907, 0.0842],
         [0.0722, 0.1747, 0.0815,  ..., 0.0390, 0.0907, 0.0842],
         [0.7833, 0.2026, 0.0609,  ..., 0.8718, 0.6568, 0.7228],
         [0.0722, 0.4906, 0.7967,  ..., 0.0503, 0.1619, 0.1088]],
        [[0.1927, 0.0452, 0.0984,  ..., 0.2661, 0.2500, 0.8430],
         [0.1927, 0.0452, 0.1290,  ..., 0.2446, 0.2500, 0.0523],
         [0.4220, 0.0452, 0.0984,  ..., 0.2446, 0.2500, 0.0523],
         [0.1927, 0.8644, 0.6741,  ..., 0.2446, 0.2500, 0.0523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9764, 0.1520, 0.1263,  ..., 0.2228, 0.7993, 0.1404],
         [0.0079, 0.1520, 0.1263,  ..., 0.2228, 0.0719, 0.1404],
         [0.0079, 0.1520, 0.1801,  ..., 0.2229, 0.0644, 0.1404],
         [0.0079, 0.5439, 0.5673,  ..., 0.3315, 0.0644, 0.5788]],
        [[0.9184, 0.1240, 0.1561,  ..., 0.0806, 0.0161, 0.0335],
         [0.0145, 0.1240, 0.1561,  ..., 0.0827, 0.0161, 0.0335],
         [0.0526, 0.1240, 0.1561,  ..., 0.0806, 0.9516, 0.8994],
         [0.0145, 0.6279, 0.5318,  ..., 0.7560, 0.0161, 0.0335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:30,330 [Process: 0] Synchronize training processes
2024-08-18 19:40:30,330 [Process: 0] Evaluating...
2024-08-18 19:40:30,332 [Process: 0] EPOCH 49:
2024-08-18 19:40:30,334 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:31,414 [Process: 0] Synchronize training processes
2024-08-18 19:40:31,414 [Process: 0] Evaluating...
2024-08-18 19:40:31,416 [Process: 0] EPOCH 50:
2024-08-18 19:40:31,418 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0379, 0.1271, 0.0359,  ..., 0.0468, 0.0935, 0.0486],
         [0.0379, 0.1383, 0.0420,  ..., 0.0468, 0.0935, 0.0486],
         [0.8735, 0.2529, 0.0359,  ..., 0.8597, 0.6084, 0.8343],
         [0.0508, 0.4817, 0.8861,  ..., 0.0468, 0.2046, 0.0685]],
        [[0.0534, 0.0261, 0.0554,  ..., 0.2428, 0.2075, 0.8330],
         [0.0534, 0.0275, 0.0554,  ..., 0.2428, 0.2075, 0.0557],
         [0.8397, 0.0261, 0.0554,  ..., 0.2437, 0.2165, 0.0557],
         [0.0534, 0.9203, 0.8338,  ..., 0.2708, 0.3685, 0.0557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7658, 0.1270, 0.1402,  ..., 0.2353, 0.5761, 0.1034],
         [0.0515, 0.1270, 0.1402,  ..., 0.2353, 0.1386, 0.1034],
         [0.1315, 0.1270, 0.1678,  ..., 0.2942, 0.1467, 0.1034],
         [0.0512, 0.6191, 0.5519,  ..., 0.2353, 0.1386, 0.6898]],
        [[0.6143, 0.1108, 0.0857,  ..., 0.1193, 0.0525, 0.0276],
         [0.0897, 0.1108, 0.0857,  ..., 0.1193, 0.0525, 0.0276],
         [0.2063, 0.1108, 0.0857,  ..., 0.1859, 0.8425, 0.9171],
         [0.0897, 0.6677, 0.7428,  ..., 0.5755, 0.0525, 0.0276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.7550e-02, 1.1968e-01, 1.3382e-01,  ..., 1.9009e-02,
          4.5108e-02, 8.8177e-02],
         [5.7550e-02, 1.1968e-01, 1.3382e-01,  ..., 1.9009e-02,
          4.5108e-02, 8.8177e-02],
         [8.2735e-01, 3.7477e-01, 1.3382e-01,  ..., 9.4297e-01,
          8.6467e-01, 6.9706e-01],
         [5.7550e-02, 3.8587e-01, 5.9853e-01,  ..., 1.9009e-02,
          4.5108e-02, 1.2659e-01]],
        [[2.7090e-04, 5.6048e-02, 3.2732e-02,  ..., 2.2640e-01,
          2.3458e-01, 9.0715e-01],
         [2.7090e-04, 5.6048e-02, 3.2732e-02,  ..., 2.2640e-01,
          2.3458e-01, 3.0951e-02],
         [9.9919e-01, 5.6048e-02, 3.2732e-02,  ..., 2.2640e-01,
          2.3458e-01, 3.0951e-02],
         [2.7090e-04, 8.3186e-01, 9.0180e-01,  ..., 3.2079e-01,
          2.9626e-01, 3.0951e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:32,499 [Process: 0] Synchronize training processes
2024-08-18 19:40:32,499 [Process: 0] Evaluating...
2024-08-18 19:40:32,501 [Process: 0] EPOCH 51:
2024-08-18 19:40:32,503 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8856, 0.1084, 0.1063,  ..., 0.2769, 0.6733, 0.1129],
         [0.0326, 0.1084, 0.1166,  ..., 0.2304, 0.1013, 0.1148],
         [0.0492, 0.1193, 0.1063,  ..., 0.2623, 0.1242, 0.1129],
         [0.0326, 0.6638, 0.6708,  ..., 0.2304, 0.1013, 0.6593]],
        [[0.5761, 0.1687, 0.1636,  ..., 0.1263, 0.2174, 0.0218],
         [0.1015, 0.1687, 0.1636,  ..., 0.1263, 0.1713, 0.0218],
         [0.2260, 0.1903, 0.1636,  ..., 0.1263, 0.3759, 0.9347],
         [0.0964, 0.4724, 0.5091,  ..., 0.6210, 0.2354, 0.0218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0446, 0.1636, 0.0536,  ..., 0.0333, 0.1073, 0.0450],
         [0.0446, 0.1902, 0.0659,  ..., 0.0333, 0.1073, 0.0450],
         [0.8663, 0.1726, 0.0536,  ..., 0.9000, 0.6403, 0.8649],
         [0.0446, 0.4736, 0.8268,  ..., 0.0333, 0.1452, 0.0450]],
        [[0.0179, 0.0143, 0.0230,  ..., 0.2403, 0.2472, 0.9470],
         [0.0179, 0.0144, 0.0230,  ..., 0.2403, 0.2472, 0.0177],
         [0.9463, 0.0143, 0.0230,  ..., 0.2403, 0.2472, 0.0177],
         [0.0179, 0.9570, 0.9310,  ..., 0.2791, 0.2583, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8766, 0.1295, 0.0933,  ..., 0.3684, 0.7047, 0.0567],
         [0.0383, 0.1295, 0.0933,  ..., 0.1656, 0.0984, 0.0567],
         [0.0468, 0.1295, 0.1199,  ..., 0.3005, 0.0984, 0.0567],
         [0.0383, 0.6116, 0.6934,  ..., 0.1656, 0.0984, 0.8298]],
        [[0.9553, 0.1705, 0.1423,  ..., 0.1751, 0.0185, 0.1624],
         [0.0149, 0.1705, 0.1423,  ..., 0.1751, 0.0185, 0.1624],
         [0.0149, 0.1705, 0.1423,  ..., 0.1751, 0.9444, 0.3443],
         [0.0149, 0.4885, 0.5730,  ..., 0.4746, 0.0185, 0.3309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0273, 0.1708, 0.1076,  ..., 0.0361, 0.0906, 0.0427],
         [0.0273, 0.1940, 0.1171,  ..., 0.0361, 0.0906, 0.0427],
         [0.9182, 0.2454, 0.1050,  ..., 0.8917, 0.7282, 0.8718],
         [0.0273, 0.3898, 0.6703,  ..., 0.0361, 0.0906, 0.0427]],
        [[0.0120, 0.0371, 0.0485,  ..., 0.1955, 0.2235, 0.9566],
         [0.0120, 0.0400, 0.0518,  ..., 0.1955, 0.2235, 0.0145],
         [0.9639, 0.0371, 0.0485,  ..., 0.4136, 0.3295, 0.0145],
         [0.0120, 0.8859, 0.8513,  ..., 0.1955, 0.2235, 0.0145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:33,583 [Process: 0] Synchronize training processes
2024-08-18 19:40:33,584 [Process: 0] Evaluating...
2024-08-18 19:40:33,590 [Process: 0] EPOCH 52:
2024-08-18 19:40:33,592 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:34,671 [Process: 0] Synchronize training processes
2024-08-18 19:40:34,671 [Process: 0] Evaluating...
2024-08-18 19:40:34,673 [Process: 0] EPOCH 53:
2024-08-18 19:40:34,675 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9446, 0.0810, 0.0890,  ..., 0.2905, 0.7391, 0.0353],
         [0.0185, 0.0810, 0.0890,  ..., 0.2056, 0.0870, 0.0353],
         [0.0185, 0.0810, 0.0890,  ..., 0.2980, 0.0870, 0.0353],
         [0.0185, 0.7570, 0.7330,  ..., 0.2058, 0.0870, 0.8940]],
        [[0.7253, 0.1796, 0.1132,  ..., 0.1962, 0.0296, 0.1090],
         [0.0781, 0.1796, 0.1132,  ..., 0.1962, 0.0296, 0.1090],
         [0.1185, 0.1796, 0.1132,  ..., 0.2165, 0.9112, 0.6729],
         [0.0781, 0.4612, 0.6604,  ..., 0.3911, 0.0296, 0.1090]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0417, 0.2047, 0.1347,  ..., 0.0152, 0.0886, 0.0598],
         [0.0417, 0.1889, 0.1540,  ..., 0.0152, 0.0886, 0.0598],
         [0.8748, 0.3461, 0.1121,  ..., 0.9543, 0.7341, 0.8205],
         [0.0417, 0.2603, 0.5992,  ..., 0.0152, 0.0886, 0.0598]],
        [[0.0016, 0.0200, 0.0218,  ..., 0.1749, 0.1872, 0.9752],
         [0.0016, 0.0200, 0.0238,  ..., 0.1749, 0.1872, 0.0083],
         [0.9952, 0.0200, 0.0218,  ..., 0.4753, 0.4383, 0.0083],
         [0.0016, 0.9401, 0.9326,  ..., 0.1749, 0.1872, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9347, 0.0651, 0.1099,  ..., 0.2440, 0.5452, 0.0283],
         [0.0218, 0.0651, 0.1099,  ..., 0.1589, 0.1304, 0.0283],
         [0.0218, 0.0651, 0.1099,  ..., 0.4381, 0.1940, 0.0283],
         [0.0218, 0.8048, 0.6702,  ..., 0.1589, 0.1304, 0.9150]],
        [[0.5291, 0.1189, 0.1195,  ..., 0.1855, 0.0808, 0.0580],
         [0.1086, 0.1189, 0.1197,  ..., 0.1855, 0.0808, 0.0580],
         [0.2538, 0.1189, 0.1195,  ..., 0.1855, 0.7576, 0.8261],
         [0.1086, 0.6433, 0.6414,  ..., 0.4435, 0.0808, 0.0580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0631, 0.1983, 0.0590,  ..., 0.0572, 0.0792, 0.0766],
         [0.0631, 0.2256, 0.0619,  ..., 0.0572, 0.0792, 0.0766],
         [0.8107, 0.1915, 0.0590,  ..., 0.8285, 0.7625, 0.7702],
         [0.0631, 0.3846, 0.8201,  ..., 0.0572, 0.0792, 0.0766]],
        [[0.0012, 0.0090, 0.0263,  ..., 0.1674, 0.1576, 0.9177],
         [0.0012, 0.0090, 0.0291,  ..., 0.1674, 0.1576, 0.0274],
         [0.9964, 0.0090, 0.0263,  ..., 0.4978, 0.5271, 0.0274],
         [0.0012, 0.9730, 0.9182,  ..., 0.1674, 0.1576, 0.0274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:35,759 [Process: 0] Synchronize training processes
2024-08-18 19:40:35,760 [Process: 0] Evaluating...
2024-08-18 19:40:35,761 [Process: 0] EPOCH 54:
2024-08-18 19:40:35,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:36,848 [Process: 0] Synchronize training processes
2024-08-18 19:40:36,848 [Process: 0] Evaluating...
2024-08-18 19:40:36,850 [Process: 0] EPOCH 55:
2024-08-18 19:40:36,852 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9698, 0.0410, 0.0374,  ..., 0.3411, 0.5578, 0.1140],
         [0.0101, 0.0410, 0.0374,  ..., 0.1342, 0.1190, 0.1140],
         [0.0101, 0.0410, 0.0374,  ..., 0.3905, 0.2043, 0.1625],
         [0.0101, 0.8769, 0.8878,  ..., 0.1342, 0.1190, 0.6095]],
        [[0.8671, 0.1201, 0.1095,  ..., 0.1987, 0.0745, 0.0737],
         [0.0402, 0.1201, 0.1095,  ..., 0.1987, 0.0638, 0.0737],
         [0.0526, 0.1201, 0.1095,  ..., 0.2157, 0.7979, 0.7788],
         [0.0402, 0.6396, 0.6716,  ..., 0.3869, 0.0638, 0.0737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.9941e-02, 1.8009e-01, 7.8895e-02,  ..., 6.2251e-02,
          1.2639e-01, 5.9951e-02],
         [5.9941e-02, 2.1397e-01, 3.8654e-02,  ..., 6.2251e-02,
          1.2639e-01, 5.9951e-02],
         [8.2018e-01, 1.9965e-01, 3.8654e-02,  ..., 8.1325e-01,
          6.2082e-01, 8.2015e-01],
         [5.9941e-02, 4.0629e-01, 8.4380e-01,  ..., 6.2251e-02,
          1.2639e-01, 5.9951e-02]],
        [[1.5413e-04, 4.1168e-03, 1.3672e-02,  ..., 1.3494e-01,
          1.2222e-01, 9.0716e-01],
         [1.5413e-04, 4.1168e-03, 1.3672e-02,  ..., 1.2987e-01,
          1.2222e-01, 3.0947e-02],
         [9.9954e-01, 4.1168e-03, 1.3672e-02,  ..., 6.0532e-01,
          6.3335e-01, 3.0947e-02],
         [1.5413e-04, 9.8765e-01, 9.5898e-01,  ..., 1.2987e-01,
          1.2222e-01, 3.0947e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8631, 0.0845, 0.0300,  ..., 0.4414, 0.7518, 0.1152],
         [0.0456, 0.0845, 0.0300,  ..., 0.1276, 0.0822, 0.1152],
         [0.0456, 0.0845, 0.0300,  ..., 0.3034, 0.0838, 0.1152],
         [0.0456, 0.7464, 0.9101,  ..., 0.1276, 0.0822, 0.6543]],
        [[0.7100, 0.1262, 0.0884,  ..., 0.1687, 0.0181, 0.0332],
         [0.0930, 0.1196, 0.0884,  ..., 0.1687, 0.0181, 0.0332],
         [0.1039, 0.1196, 0.0884,  ..., 0.1992, 0.9458, 0.9004],
         [0.0930, 0.6345, 0.7348,  ..., 0.4634, 0.0181, 0.0332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:37,936 [Process: 0] Synchronize training processes
2024-08-18 19:40:37,936 [Process: 0] Evaluating...
2024-08-18 19:40:37,938 [Process: 0] EPOCH 56:
2024-08-18 19:40:37,940 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:39,021 [Process: 0] Synchronize training processes
2024-08-18 19:40:39,021 [Process: 0] Evaluating...
2024-08-18 19:40:39,023 [Process: 0] EPOCH 57:
2024-08-18 19:40:39,024 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0460, 0.2124, 0.0319,  ..., 0.0629, 0.2238, 0.0518],
         [0.0460, 0.2058, 0.0319,  ..., 0.0629, 0.1838, 0.0518],
         [0.8621, 0.1737, 0.0319,  ..., 0.8113, 0.1381, 0.8446],
         [0.0460, 0.4081, 0.9044,  ..., 0.0629, 0.4543, 0.0518]],
        [[0.0223, 0.0417, 0.0490,  ..., 0.1142, 0.0901, 0.9351],
         [0.0223, 0.0498, 0.0490,  ..., 0.1142, 0.0901, 0.0216],
         [0.9320, 0.0417, 0.0490,  ..., 0.6573, 0.7297, 0.0216],
         [0.0234, 0.8669, 0.8531,  ..., 0.1142, 0.0901, 0.0216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5287, 0.0990, 0.0584,  ..., 0.1374, 0.9341, 0.0805],
         [0.1169, 0.0990, 0.0584,  ..., 0.1349, 0.0220, 0.0805],
         [0.2375, 0.0990, 0.0584,  ..., 0.5929, 0.0220, 0.0805],
         [0.1169, 0.7031, 0.8249,  ..., 0.1349, 0.0220, 0.7584]],
        [[0.7772, 0.0726, 0.0656,  ..., 0.1630, 0.0057, 0.0677],
         [0.0702, 0.0726, 0.0656,  ..., 0.1630, 0.0057, 0.0686],
         [0.0824, 0.0864, 0.0656,  ..., 0.1630, 0.9830, 0.7960],
         [0.0702, 0.7684, 0.8031,  ..., 0.5111, 0.0057, 0.0677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0490, 0.2047, 0.0575,  ..., 0.0584, 0.1815, 0.0531],
         [0.0490, 0.2167, 0.0560,  ..., 0.0584, 0.2056, 0.0531],
         [0.8529, 0.1685, 0.0560,  ..., 0.8248, 0.2563, 0.8406],
         [0.0490, 0.4100, 0.8304,  ..., 0.0584, 0.3566, 0.0531]],
        [[0.0091, 0.0321, 0.0501,  ..., 0.0960, 0.1041, 0.9241],
         [0.0091, 0.0321, 0.0439,  ..., 0.0960, 0.1041, 0.0253],
         [0.9706, 0.0321, 0.0439,  ..., 0.7119, 0.6877, 0.0253],
         [0.0113, 0.9037, 0.8621,  ..., 0.0960, 0.1041, 0.0253]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9310, 0.0531, 0.0717,  ..., 0.3979, 0.7409, 0.0863],
         [0.0230, 0.0531, 0.0717,  ..., 0.1648, 0.0864, 0.0863],
         [0.0230, 0.0531, 0.0717,  ..., 0.2725, 0.0864, 0.0863],
         [0.0230, 0.8406, 0.7850,  ..., 0.1648, 0.0864, 0.7411]],
        [[0.7849, 0.0965, 0.0482,  ..., 0.1685, 0.0091, 0.0356],
         [0.0717, 0.0965, 0.0482,  ..., 0.1685, 0.0091, 0.0356],
         [0.0717, 0.0965, 0.0482,  ..., 0.1685, 0.9727, 0.8932],
         [0.0717, 0.7104, 0.8553,  ..., 0.4946, 0.0091, 0.0356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:40,105 [Process: 0] Synchronize training processes
2024-08-18 19:40:40,105 [Process: 0] Evaluating...
2024-08-18 19:40:40,107 [Process: 0] EPOCH 58:
2024-08-18 19:40:40,109 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:41,191 [Process: 0] Synchronize training processes
2024-08-18 19:40:41,191 [Process: 0] Evaluating...
2024-08-18 19:40:41,193 [Process: 0] EPOCH 59:
2024-08-18 19:40:41,195 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0434, 0.1760, 0.0364,  ..., 0.0553, 0.1237, 0.0547],
         [0.0434, 0.1937, 0.0367,  ..., 0.0553, 0.1274, 0.0547],
         [0.8699, 0.1531, 0.0364,  ..., 0.8278, 0.5531, 0.8359],
         [0.0434, 0.4772, 0.8905,  ..., 0.0616, 0.1957, 0.0547]],
        [[0.0036, 0.0497, 0.0199,  ..., 0.0972, 0.0982, 0.9019],
         [0.0036, 0.0497, 0.0199,  ..., 0.0972, 0.0982, 0.0327],
         [0.9892, 0.0497, 0.0199,  ..., 0.7084, 0.7055, 0.0327],
         [0.0036, 0.8510, 0.9404,  ..., 0.0972, 0.0982, 0.0327]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8944, 0.1005, 0.0696,  ..., 0.5638, 0.3166, 0.0967],
         [0.0352, 0.1005, 0.0696,  ..., 0.1167, 0.1742, 0.0967],
         [0.0352, 0.1005, 0.0696,  ..., 0.2029, 0.3425, 0.0984],
         [0.0352, 0.6986, 0.7913,  ..., 0.1167, 0.1667, 0.7082]],
        [[0.6648, 0.1044, 0.0890,  ..., 0.1569, 0.0115, 0.0734],
         [0.1040, 0.1044, 0.0794,  ..., 0.1569, 0.0115, 0.0734],
         [0.1272, 0.1044, 0.0794,  ..., 0.1569, 0.9655, 0.7799],
         [0.1040, 0.6869, 0.7522,  ..., 0.5294, 0.0115, 0.0734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0818, 0.1203, 0.0467,  ..., 0.0486, 0.2254, 0.0629],
         [0.0818, 0.1314, 0.0467,  ..., 0.0486, 0.1950, 0.0629],
         [0.7545, 0.1073, 0.0467,  ..., 0.8543, 0.1760, 0.8113],
         [0.0818, 0.6410, 0.8598,  ..., 0.0486, 0.4036, 0.0629]],
        [[0.0168, 0.0106, 0.0485,  ..., 0.0998, 0.1029, 0.8474],
         [0.0168, 0.0106, 0.0485,  ..., 0.0998, 0.1066, 0.0540],
         [0.9497, 0.0106, 0.0485,  ..., 0.7007, 0.6876, 0.0493],
         [0.0168, 0.9681, 0.8544,  ..., 0.0998, 0.1029, 0.0493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8619, 0.0546, 0.0787,  ..., 0.2825, 0.3511, 0.0884],
         [0.0460, 0.0546, 0.0787,  ..., 0.1524, 0.1714, 0.0904],
         [0.0460, 0.0546, 0.0787,  ..., 0.4126, 0.3086, 0.0962],
         [0.0460, 0.8363, 0.7639,  ..., 0.1524, 0.1689, 0.7250]],
        [[0.8917, 0.0820, 0.0444,  ..., 0.1066, 0.0367, 0.0330],
         [0.0361, 0.0820, 0.0444,  ..., 0.1066, 0.0367, 0.0330],
         [0.0361, 0.0820, 0.0444,  ..., 0.1066, 0.8899, 0.9011],
         [0.0361, 0.7540, 0.8668,  ..., 0.6803, 0.0367, 0.0330]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:42,272 [Process: 0] Synchronize training processes
2024-08-18 19:40:42,272 [Process: 0] Evaluating...
2024-08-18 19:40:42,274 [Process: 0] EPOCH 60:
2024-08-18 19:40:42,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:43,356 [Process: 0] Synchronize training processes
2024-08-18 19:40:43,357 [Process: 0] Evaluating...
2024-08-18 19:40:43,358 [Process: 0] EPOCH 61:
2024-08-18 19:40:43,360 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0612, 0.1663, 0.0100,  ..., 0.0506, 0.0888, 0.0459],
         [0.0612, 0.2355, 0.0100,  ..., 0.0506, 0.0888, 0.0459],
         [0.8164, 0.2988, 0.0100,  ..., 0.8481, 0.7299, 0.8623],
         [0.0612, 0.2994, 0.9700,  ..., 0.0506, 0.0925, 0.0459]],
        [[0.0338, 0.0420, 0.0199,  ..., 0.0997, 0.0880, 0.9001],
         [0.0338, 0.0420, 0.0199,  ..., 0.1019, 0.0880, 0.0341],
         [0.8987, 0.0420, 0.0199,  ..., 0.6987, 0.7361, 0.0329],
         [0.0338, 0.8741, 0.9402,  ..., 0.0997, 0.0880, 0.0329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8798, 0.1149, 0.0840,  ..., 0.6538, 0.6753, 0.1196],
         [0.0401, 0.1149, 0.0840,  ..., 0.1006, 0.1140, 0.1196],
         [0.0401, 0.1187, 0.0840,  ..., 0.1450, 0.1071, 0.1615],
         [0.0401, 0.6515, 0.7480,  ..., 0.1006, 0.1036, 0.5993]],
        [[0.8864, 0.0462, 0.0881,  ..., 0.1545, 0.0142, 0.0412],
         [0.0379, 0.0462, 0.0881,  ..., 0.1545, 0.0142, 0.0412],
         [0.0379, 0.0462, 0.0881,  ..., 0.3211, 0.9573, 0.8765],
         [0.0379, 0.8613, 0.7357,  ..., 0.3698, 0.0142, 0.0412]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0405, 0.1335, 0.0136,  ..., 0.0522, 0.1600, 0.0766],
         [0.0405, 0.2063, 0.0136,  ..., 0.0522, 0.1984, 0.0766],
         [0.8785, 0.1335, 0.0136,  ..., 0.8435, 0.2561, 0.7702],
         [0.0405, 0.5267, 0.9591,  ..., 0.0522, 0.3856, 0.0766]],
        [[0.0401, 0.0026, 0.0113,  ..., 0.0890, 0.0601, 0.9115],
         [0.0401, 0.0026, 0.0113,  ..., 0.0890, 0.0601, 0.0295],
         [0.6257, 0.0026, 0.0113,  ..., 0.7329, 0.8197, 0.0295],
         [0.2941, 0.9923, 0.9660,  ..., 0.0890, 0.0601, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8883, 0.0838, 0.0669,  ..., 0.6791, 0.8781, 0.0537],
         [0.0372, 0.0838, 0.0669,  ..., 0.0973, 0.0406, 0.0537],
         [0.0372, 0.0838, 0.0926,  ..., 0.1262, 0.0406, 0.0537],
         [0.0372, 0.7486, 0.7735,  ..., 0.0973, 0.0406, 0.8388]],
        [[0.8344, 0.0703, 0.0482,  ..., 0.1879, 0.0171, 0.0770],
         [0.0552, 0.0703, 0.0482,  ..., 0.2050, 0.0171, 0.0770],
         [0.0552, 0.0751, 0.0482,  ..., 0.3667, 0.9488, 0.7691],
         [0.0552, 0.7842, 0.8555,  ..., 0.2404, 0.0171, 0.0770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:44,440 [Process: 0] Synchronize training processes
2024-08-18 19:40:44,440 [Process: 0] Evaluating...
2024-08-18 19:40:44,447 [Process: 0] EPOCH 62:
2024-08-18 19:40:44,449 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0394, 0.1572, 0.0312,  ..., 0.0563, 0.1000, 0.0395],
         [0.0394, 0.1609, 0.0312,  ..., 0.0563, 0.1000, 0.0395],
         [0.8817, 0.1979, 0.0312,  ..., 0.8311, 0.6718, 0.8816],
         [0.0394, 0.4840, 0.9064,  ..., 0.0563, 0.1282, 0.0395]],
        [[0.0211, 0.0305, 0.0037,  ..., 0.1202, 0.0483, 0.9065],
         [0.0211, 0.0305, 0.0037,  ..., 0.1323, 0.0483, 0.0332],
         [0.9351, 0.0305, 0.0037,  ..., 0.6018, 0.8551, 0.0301],
         [0.0227, 0.9085, 0.9888,  ..., 0.1457, 0.0483, 0.0301]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9806, 0.0894, 0.0552,  ..., 0.6984, 0.8167, 0.0485],
         [0.0065, 0.0894, 0.0552,  ..., 0.1075, 0.0624, 0.0485],
         [0.0065, 0.0929, 0.0552,  ..., 0.0971, 0.0605, 0.0485],
         [0.0065, 0.7283, 0.8344,  ..., 0.0971, 0.0605, 0.8546]],
        [[0.9049, 0.0853, 0.0880,  ..., 0.1689, 0.2160, 0.0133],
         [0.0323, 0.0853, 0.0828,  ..., 0.1696, 0.1484, 0.0133],
         [0.0314, 0.0853, 0.0828,  ..., 0.2357, 0.4872, 0.9602],
         [0.0314, 0.7440, 0.7465,  ..., 0.4258, 0.1484, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0495, 0.3014, 0.0120,  ..., 0.0338, 0.1450, 0.0597],
         [0.0495, 0.2339, 0.0120,  ..., 0.0338, 0.1545, 0.0597],
         [0.8516, 0.1377, 0.0120,  ..., 0.8986, 0.4466, 0.8210],
         [0.0495, 0.3269, 0.9640,  ..., 0.0338, 0.2538, 0.0597]],
        [[0.0186, 0.0161, 0.0261,  ..., 0.0677, 0.0742, 0.9130],
         [0.0186, 0.0161, 0.0261,  ..., 0.0713, 0.0742, 0.0290],
         [0.9441, 0.0161, 0.0261,  ..., 0.7934, 0.7774, 0.0290],
         [0.0186, 0.9518, 0.9217,  ..., 0.0677, 0.0742, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:45,525 [Process: 0] Synchronize training processes
2024-08-18 19:40:45,525 [Process: 0] Evaluating...
2024-08-18 19:40:45,527 [Process: 0] EPOCH 63:
2024-08-18 19:40:45,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:46,598 [Process: 0] Synchronize training processes
2024-08-18 19:40:46,598 [Process: 0] Evaluating...
2024-08-18 19:40:46,600 [Process: 0] EPOCH 64:
2024-08-18 19:40:46,602 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9324, 0.0920, 0.0889,  ..., 0.3551, 0.8348, 0.1156],
         [0.0225, 0.0920, 0.0889,  ..., 0.1458, 0.0584, 0.1156],
         [0.0225, 0.1087, 0.1110,  ..., 0.3568, 0.0534, 0.1199],
         [0.0225, 0.7073, 0.7111,  ..., 0.1422, 0.0534, 0.6488]],
        [[0.6684, 0.0643, 0.0532,  ..., 0.1287, 0.0068, 0.1742],
         [0.1102, 0.0643, 0.0532,  ..., 0.1575, 0.0068, 0.1852],
         [0.1309, 0.0643, 0.0532,  ..., 0.1287, 0.9796, 0.1548],
         [0.0906, 0.8072, 0.8404,  ..., 0.5851, 0.0068, 0.4859]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0425, 0.0998, 0.0227,  ..., 0.0729, 0.1222, 0.0508],
         [0.0425, 0.1305, 0.0227,  ..., 0.0626, 0.1222, 0.0503],
         [0.8724, 0.0998, 0.0227,  ..., 0.8019, 0.5872, 0.8486],
         [0.0425, 0.6698, 0.9318,  ..., 0.0626, 0.1685, 0.0503]],
        [[0.0094, 0.0086, 0.0210,  ..., 0.0418, 0.1045, 0.9411],
         [0.0094, 0.0086, 0.0210,  ..., 0.0418, 0.1086, 0.0225],
         [0.9718, 0.0086, 0.0210,  ..., 0.8746, 0.6824, 0.0182],
         [0.0094, 0.9742, 0.9369,  ..., 0.0418, 0.1045, 0.0182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6621, 0.0338, 0.0669,  ..., 0.6687, 0.8131, 0.0557],
         [0.1109, 0.0338, 0.0669,  ..., 0.0977, 0.0623, 0.0557],
         [0.1334, 0.0338, 0.0669,  ..., 0.1468, 0.0623, 0.0630],
         [0.0936, 0.8987, 0.7993,  ..., 0.0868, 0.0623, 0.8256]],
        [[0.9286, 0.1859, 0.0568,  ..., 0.1131, 0.0712, 0.0469],
         [0.0238, 0.1927, 0.0568,  ..., 0.1184, 0.0629, 0.0469],
         [0.0238, 0.1540, 0.0568,  ..., 0.1131, 0.8029, 0.8592],
         [0.0238, 0.4674, 0.8295,  ..., 0.6554, 0.0629, 0.0469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0491, 0.1025, 0.0065,  ..., 0.0275, 0.1329, 0.0414],
         [0.0491, 0.1203, 0.0065,  ..., 0.0275, 0.1329, 0.0414],
         [0.8528, 0.1025, 0.0065,  ..., 0.9174, 0.5332, 0.8757],
         [0.0491, 0.6747, 0.9805,  ..., 0.0275, 0.2010, 0.0414]],
        [[0.0362, 0.0080, 0.0114,  ..., 0.0676, 0.1073, 0.9851],
         [0.0362, 0.0080, 0.0114,  ..., 0.0676, 0.1230, 0.0050],
         [0.8915, 0.0080, 0.0114,  ..., 0.7971, 0.6624, 0.0050],
         [0.0362, 0.9759, 0.9659,  ..., 0.0676, 0.1073, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:47,682 [Process: 0] Synchronize training processes
2024-08-18 19:40:47,683 [Process: 0] Evaluating...
2024-08-18 19:40:47,684 [Process: 0] EPOCH 65:
2024-08-18 19:40:47,686 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:48,767 [Process: 0] Synchronize training processes
2024-08-18 19:40:48,767 [Process: 0] Evaluating...
2024-08-18 19:40:48,769 [Process: 0] EPOCH 66:
2024-08-18 19:40:48,770 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8217, 0.0356, 0.1370,  ..., 0.7539, 0.8998, 0.0892],
         [0.0594, 0.0356, 0.1505,  ..., 0.0702, 0.0334, 0.0892],
         [0.0594, 0.0356, 0.1763,  ..., 0.1058, 0.0334, 0.0892],
         [0.0594, 0.8932, 0.5362,  ..., 0.0702, 0.0334, 0.7325]],
        [[0.9590, 0.0826, 0.0610,  ..., 0.1433, 0.1539, 0.0191],
         [0.0113, 0.0908, 0.0610,  ..., 0.1596, 0.1708, 0.0191],
         [0.0184, 0.0826, 0.0610,  ..., 0.1433, 0.5134, 0.9427],
         [0.0113, 0.7441, 0.8171,  ..., 0.5537, 0.1619, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0898, 0.0875, 0.0115,  ..., 0.0264, 0.1108, 0.0426],
         [0.0869, 0.1520, 0.0115,  ..., 0.0264, 0.1641, 0.0426],
         [0.7279, 0.0875, 0.0115,  ..., 0.9209, 0.1108, 0.8721],
         [0.0954, 0.6730, 0.9654,  ..., 0.0264, 0.6143, 0.0426]],
        [[0.0050, 0.0058, 0.0061,  ..., 0.0392, 0.0505, 0.9263],
         [0.0048, 0.0058, 0.0061,  ..., 0.0392, 0.0505, 0.0246],
         [0.9854, 0.0058, 0.0061,  ..., 0.8823, 0.8484, 0.0246],
         [0.0048, 0.9827, 0.9818,  ..., 0.0392, 0.0505, 0.0246]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9296, 0.0307, 0.0455,  ..., 0.5973, 0.5022, 0.0288],
         [0.0235, 0.0307, 0.0455,  ..., 0.1113, 0.1822, 0.0288],
         [0.0235, 0.0307, 0.0455,  ..., 0.1800, 0.1773, 0.0288],
         [0.0235, 0.9080, 0.8635,  ..., 0.1113, 0.1384, 0.9136]],
        [[0.9546, 0.0252, 0.0609,  ..., 0.1069, 0.0059, 0.0304],
         [0.0117, 0.0252, 0.0609,  ..., 0.1184, 0.0059, 0.0304],
         [0.0220, 0.0252, 0.0609,  ..., 0.1069, 0.9823, 0.9089],
         [0.0117, 0.9244, 0.8173,  ..., 0.6677, 0.0059, 0.0304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0410, 0.1374, 0.0064,  ..., 0.0536, 0.1526, 0.0468],
         [0.0410, 0.2114, 0.0064,  ..., 0.0536, 0.2929, 0.0468],
         [0.8770, 0.1013, 0.0064,  ..., 0.8391, 0.3349, 0.8597],
         [0.0410, 0.5499, 0.9809,  ..., 0.0536, 0.2196, 0.0468]],
        [[0.0186, 0.0109, 0.0141,  ..., 0.0888, 0.0731, 0.9595],
         [0.0186, 0.0109, 0.0141,  ..., 0.0888, 0.0731, 0.0135],
         [0.9441, 0.0109, 0.0141,  ..., 0.7335, 0.7808, 0.0135],
         [0.0186, 0.9672, 0.9576,  ..., 0.0888, 0.0731, 0.0135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-18 19:40:49,852 [Process: 0] Synchronize training processes
2024-08-18 19:40:49,852 [Process: 0] Evaluating...
2024-08-18 19:40:49,854 [Process: 0] EPOCH 67:
2024-08-18 19:40:49,856 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:50,934 [Process: 0] Synchronize training processes
2024-08-18 19:40:50,935 [Process: 0] Evaluating...
2024-08-18 19:40:50,936 [Process: 0] EPOCH 68:
2024-08-18 19:40:50,938 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9004, 0.0324, 0.0162,  ..., 0.5113, 0.1926, 0.0489],
         [0.0332, 0.0324, 0.0162,  ..., 0.1454, 0.2681, 0.0489],
         [0.0332, 0.0324, 0.0162,  ..., 0.2165, 0.3397, 0.0489],
         [0.0332, 0.9029, 0.9515,  ..., 0.1268, 0.1996, 0.8534]],
        [[0.8627, 0.0877, 0.0179,  ..., 0.1451, 0.0292, 0.0322],
         [0.0424, 0.0793, 0.0179,  ..., 0.1854, 0.0292, 0.0322],
         [0.0525, 0.0793, 0.0179,  ..., 0.1451, 0.9123, 0.9034],
         [0.0424, 0.7537, 0.9464,  ..., 0.5244, 0.0292, 0.0322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0575, 0.1028, 0.0027,  ..., 0.0511, 0.1477, 0.0697],
         [0.0575, 0.2225, 0.0027,  ..., 0.0511, 0.1742, 0.0697],
         [0.8274, 0.1028, 0.0027,  ..., 0.8467, 0.4521, 0.7741],
         [0.0575, 0.5718, 0.9919,  ..., 0.0511, 0.2261, 0.0864]],
        [[0.0025, 0.0185, 0.0023,  ..., 0.0420, 0.0498, 0.9027],
         [0.0025, 0.0159, 0.0023,  ..., 0.0420, 0.0498, 0.0324],
         [0.9926, 0.0159, 0.0023,  ..., 0.8739, 0.8507, 0.0324],
         [0.0025, 0.9498, 0.9931,  ..., 0.0420, 0.0498, 0.0324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9438, 0.1039, 0.0497,  ..., 0.6810, 0.1774, 0.0861],
         [0.0187, 0.1090, 0.0491,  ..., 0.0754, 0.2270, 0.0861],
         [0.0187, 0.1039, 0.0491,  ..., 0.1682, 0.2786, 0.0930],
         [0.0187, 0.6831, 0.8522,  ..., 0.0754, 0.3171, 0.7349]],
        [[0.9713, 0.0361, 0.0476,  ..., 0.1526, 0.1536, 0.0198],
         [0.0096, 0.0361, 0.0476,  ..., 0.1910, 0.1864, 0.0198],
         [0.0096, 0.0361, 0.0476,  ..., 0.1526, 0.5065, 0.9406],
         [0.0096, 0.8917, 0.8571,  ..., 0.5038, 0.1536, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:40:52,016 [Process: 0] Synchronize training processes
2024-08-18 19:40:52,016 [Process: 0] Evaluating...
2024-08-18 19:40:52,018 [Process: 0] EPOCH 69:
2024-08-18 19:40:52,020 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:53,089 [Process: 0] Synchronize training processes
2024-08-18 19:40:53,089 [Process: 0] Evaluating...
2024-08-18 19:40:53,090 [Process: 0] EPOCH 70:
2024-08-18 19:40:53,092 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0765, 0.0870, 0.0032,  ..., 0.0636, 0.0681, 0.0328],
         [0.0765, 0.1627, 0.0032,  ..., 0.0636, 0.0681, 0.0328],
         [0.7704, 0.0751, 0.0032,  ..., 0.8018, 0.7891, 0.9015],
         [0.0765, 0.6753, 0.9905,  ..., 0.0711, 0.0746, 0.0328]],
        [[0.0121, 0.0075, 0.0309,  ..., 0.0606, 0.0729, 0.9557],
         [0.0121, 0.0075, 0.0309,  ..., 0.0606, 0.0729, 0.0148],
         [0.9484, 0.0075, 0.0309,  ..., 0.8182, 0.7814, 0.0148],
         [0.0274, 0.9775, 0.9073,  ..., 0.0606, 0.0729, 0.0148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9630, 0.0505, 0.1246,  ..., 0.7230, 0.1990, 0.0497],
         [0.0123, 0.0505, 0.1021,  ..., 0.0897, 0.2844, 0.0497],
         [0.0123, 0.0505, 0.1042,  ..., 0.1013, 0.2639, 0.0497],
         [0.0123, 0.8486, 0.6692,  ..., 0.0860, 0.2528, 0.8509]],
        [[0.7644, 0.0279, 0.0127,  ..., 0.0826, 0.0913, 0.0123],
         [0.0801, 0.0279, 0.0127,  ..., 0.0826, 0.0913, 0.0123],
         [0.0778, 0.0279, 0.0127,  ..., 0.0826, 0.7261, 0.9631],
         [0.0778, 0.9162, 0.9618,  ..., 0.7521, 0.0913, 0.0123]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0523, 0.1037, 0.0021,  ..., 0.0249, 0.0637, 0.0458],
         [0.0523, 0.1795, 0.0021,  ..., 0.0249, 0.0637, 0.0458],
         [0.8430, 0.0920, 0.0021,  ..., 0.9253, 0.8090, 0.8625],
         [0.0523, 0.6248, 0.9937,  ..., 0.0249, 0.0637, 0.0458]],
        [[0.0648, 0.0137, 0.0156,  ..., 0.0887, 0.1284, 0.9738],
         [0.0648, 0.0137, 0.0156,  ..., 0.0887, 0.1617, 0.0087],
         [0.5918, 0.0137, 0.0156,  ..., 0.7340, 0.2671, 0.0087],
         [0.2786, 0.9589, 0.9531,  ..., 0.0887, 0.4428, 0.0087]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8732, 0.0784, 0.0518,  ..., 0.8356, 0.6279, 0.0377],
         [0.0420, 0.0784, 0.0518,  ..., 0.0592, 0.1463, 0.0377],
         [0.0429, 0.0802, 0.0552,  ..., 0.0526, 0.1193, 0.0377],
         [0.0420, 0.7630, 0.8412,  ..., 0.0526, 0.1066, 0.8870]],
        [[0.8192, 0.0291, 0.0321,  ..., 0.0822, 0.0293, 0.0122],
         [0.0639, 0.0291, 0.0321,  ..., 0.0822, 0.0329, 0.0122],
         [0.0644, 0.0291, 0.0321,  ..., 0.0822, 0.9086, 0.9635],
         [0.0526, 0.9127, 0.9038,  ..., 0.7534, 0.0293, 0.0122]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:54,174 [Process: 0] Synchronize training processes
2024-08-18 19:40:54,174 [Process: 0] Evaluating...
2024-08-18 19:40:54,176 [Process: 0] EPOCH 71:
2024-08-18 19:40:54,178 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:55,262 [Process: 0] Synchronize training processes
2024-08-18 19:40:55,262 [Process: 0] Evaluating...
2024-08-18 19:40:55,268 [Process: 0] EPOCH 72:
2024-08-18 19:40:55,270 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0536, 0.0487, 0.0107,  ..., 0.0399, 0.0636, 0.0680],
         [0.0536, 0.0487, 0.0107,  ..., 0.0399, 0.0636, 0.0680],
         [0.8391, 0.0487, 0.0107,  ..., 0.8803, 0.8091, 0.7959],
         [0.0536, 0.8540, 0.9680,  ..., 0.0399, 0.0636, 0.0680]],
        [[0.0268, 0.0028, 0.0100,  ..., 0.0576, 0.0695, 0.9871],
         [0.0268, 0.0028, 0.0100,  ..., 0.0576, 0.0695, 0.0046],
         [0.9197, 0.0028, 0.0100,  ..., 0.8273, 0.7915, 0.0042],
         [0.0268, 0.9916, 0.9700,  ..., 0.0576, 0.0695, 0.0042]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7696, 0.0442, 0.0270,  ..., 0.7567, 0.8331, 0.0340],
         [0.1011, 0.0442, 0.0270,  ..., 0.1167, 0.0632, 0.0340],
         [0.0646, 0.0442, 0.0270,  ..., 0.0633, 0.0518, 0.0340],
         [0.0646, 0.8674, 0.9190,  ..., 0.0633, 0.0518, 0.8981]],
        [[0.7822, 0.0416, 0.0194,  ..., 0.1253, 0.0359, 0.0160],
         [0.0632, 0.0416, 0.0194,  ..., 0.1339, 0.0359, 0.0160],
         [0.0950, 0.0416, 0.0194,  ..., 0.1253, 0.8922, 0.9521],
         [0.0596, 0.8752, 0.9419,  ..., 0.6155, 0.0359, 0.0160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0468, 0.0328, 0.0082,  ..., 0.0306, 0.0853, 0.0525],
         [0.0468, 0.0328, 0.0047,  ..., 0.0306, 0.0853, 0.0525],
         [0.8597, 0.0328, 0.0047,  ..., 0.9082, 0.7113, 0.8424],
         [0.0468, 0.9017, 0.9825,  ..., 0.0306, 0.1181, 0.0525]],
        [[0.0109, 0.0179, 0.0177,  ..., 0.0566, 0.0472, 0.9837],
         [0.0109, 0.0179, 0.0177,  ..., 0.0566, 0.0472, 0.0054],
         [0.9674, 0.0179, 0.0177,  ..., 0.8303, 0.8585, 0.0054],
         [0.0109, 0.9464, 0.9468,  ..., 0.0566, 0.0472, 0.0054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4650, 0.0682, 0.0584,  ..., 0.3539, 0.6837, 0.0517],
         [0.1398, 0.0682, 0.0561,  ..., 0.2594, 0.1330, 0.0517],
         [0.2578, 0.0682, 0.0694,  ..., 0.2218, 0.0966, 0.0536],
         [0.1374, 0.7953, 0.8161,  ..., 0.1648, 0.0868, 0.8430]],
        [[0.9034, 0.0248, 0.0340,  ..., 0.1404, 0.0267, 0.0261],
         [0.0330, 0.0248, 0.0265,  ..., 0.1489, 0.0267, 0.0261],
         [0.0318, 0.0248, 0.0265,  ..., 0.1809, 0.9199, 0.9216],
         [0.0318, 0.9257, 0.9130,  ..., 0.5298, 0.0267, 0.0261]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:56,352 [Process: 0] Synchronize training processes
2024-08-18 19:40:56,352 [Process: 0] Evaluating...
2024-08-18 19:40:56,354 [Process: 0] EPOCH 73:
2024-08-18 19:40:56,356 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:57,435 [Process: 0] Synchronize training processes
2024-08-18 19:40:57,435 [Process: 0] Evaluating...
2024-08-18 19:40:57,437 [Process: 0] EPOCH 74:
2024-08-18 19:40:57,439 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0311, 0.0908, 0.0071,  ..., 0.0519, 0.0818, 0.0334],
         [0.0311, 0.1207, 0.0053,  ..., 0.0519, 0.0818, 0.0334],
         [0.9068, 0.0908, 0.0053,  ..., 0.8443, 0.7541, 0.8997],
         [0.0311, 0.6977, 0.9823,  ..., 0.0519, 0.0822, 0.0334]],
        [[0.0267, 0.0030, 0.0193,  ..., 0.0995, 0.0945, 0.9736],
         [0.0267, 0.0030, 0.0193,  ..., 0.0995, 0.0945, 0.0097],
         [0.9188, 0.0030, 0.0193,  ..., 0.6881, 0.6934, 0.0083],
         [0.0278, 0.9911, 0.9422,  ..., 0.1129, 0.1177, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6819, 0.0761, 0.0615,  ..., 0.6906, 0.2631, 0.0545],
         [0.1333, 0.0761, 0.0615,  ..., 0.0806, 0.2773, 0.0545],
         [0.0924, 0.0773, 0.0615,  ..., 0.1481, 0.2793, 0.0545],
         [0.0924, 0.7706, 0.8156,  ..., 0.0806, 0.1803, 0.8365]],
        [[0.9240, 0.0366, 0.0382,  ..., 0.1244, 0.0139, 0.0247],
         [0.0253, 0.0366, 0.0382,  ..., 0.1285, 0.0139, 0.0247],
         [0.0253, 0.0366, 0.0382,  ..., 0.1626, 0.9582, 0.9259],
         [0.0253, 0.8902, 0.8854,  ..., 0.5846, 0.0139, 0.0247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0569, 0.0320, 0.0110,  ..., 0.0676, 0.1435, 0.0418],
         [0.0569, 0.0278, 0.0110,  ..., 0.0676, 0.1831, 0.0418],
         [0.8293, 0.0278, 0.0110,  ..., 0.7972, 0.2067, 0.8746],
         [0.0569, 0.9125, 0.9670,  ..., 0.0676, 0.4667, 0.0418]],
        [[0.0186, 0.0446, 0.0220,  ..., 0.0526, 0.0677, 0.9560],
         [0.0186, 0.0313, 0.0220,  ..., 0.0526, 0.0677, 0.0147],
         [0.9441, 0.0313, 0.0220,  ..., 0.8423, 0.7857, 0.0147],
         [0.0186, 0.8929, 0.9340,  ..., 0.0526, 0.0789, 0.0147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8664, 0.0480, 0.0616,  ..., 0.8788, 0.4166, 0.0531],
         [0.0506, 0.0480, 0.0616,  ..., 0.0375, 0.2613, 0.0531],
         [0.0415, 0.0480, 0.0668,  ..., 0.0462, 0.1763, 0.0531],
         [0.0415, 0.8561, 0.8100,  ..., 0.0375, 0.1457, 0.8408]],
        [[0.8794, 0.0445, 0.0167,  ..., 0.1262, 0.0057, 0.0133],
         [0.0385, 0.0445, 0.0167,  ..., 0.1475, 0.0057, 0.0133],
         [0.0437, 0.0445, 0.0167,  ..., 0.1374, 0.9828, 0.9602],
         [0.0385, 0.8664, 0.9498,  ..., 0.5889, 0.0057, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:40:58,520 [Process: 0] Synchronize training processes
2024-08-18 19:40:58,520 [Process: 0] Evaluating...
2024-08-18 19:40:58,522 [Process: 0] EPOCH 75:
2024-08-18 19:40:58,524 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0538, 0.0170, 0.0142,  ..., 0.0447, 0.1170, 0.0341],
         [0.0538, 0.0170, 0.0142,  ..., 0.0447, 0.1228, 0.0341],
         [0.8386, 0.0170, 0.0142,  ..., 0.8660, 0.1690, 0.8977],
         [0.0538, 0.9491, 0.9575,  ..., 0.0447, 0.5912, 0.0341]],
        [[0.0118, 0.0157, 0.0249,  ..., 0.0625, 0.0327, 0.8856],
         [0.0118, 0.0157, 0.0260,  ..., 0.0625, 0.0327, 0.0377],
         [0.9647, 0.0157, 0.0249,  ..., 0.8126, 0.9019, 0.0390],
         [0.0118, 0.9530, 0.9241,  ..., 0.0625, 0.0327, 0.0377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7663, 0.0257, 0.0178,  ..., 0.6784, 0.7398, 0.0413],
         [0.1273, 0.0257, 0.0178,  ..., 0.0978, 0.1195, 0.0413],
         [0.0532, 0.0257, 0.0178,  ..., 0.1425, 0.0736, 0.0413],
         [0.0532, 0.9229, 0.9465,  ..., 0.0813, 0.0671, 0.8762]],
        [[0.9586, 0.0186, 0.0181,  ..., 0.1076, 0.0207, 0.0083],
         [0.0138, 0.0186, 0.0181,  ..., 0.1076, 0.0207, 0.0083],
         [0.0138, 0.0186, 0.0181,  ..., 0.1367, 0.9378, 0.9751],
         [0.0138, 0.9443, 0.9456,  ..., 0.6481, 0.0207, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0504, 0.0763, 0.0140,  ..., 0.0467, 0.0592, 0.0321],
         [0.0504, 0.1163, 0.0140,  ..., 0.0467, 0.0592, 0.0321],
         [0.8488, 0.0763, 0.0140,  ..., 0.8599, 0.8224, 0.9037],
         [0.0504, 0.7310, 0.9580,  ..., 0.0467, 0.0592, 0.0321]],
        [[0.0305, 0.0035, 0.0113,  ..., 0.0625, 0.0302, 0.8639],
         [0.0305, 0.0035, 0.0113,  ..., 0.0625, 0.0302, 0.0417],
         [0.9084, 0.0035, 0.0113,  ..., 0.8126, 0.9094, 0.0417],
         [0.0305, 0.9895, 0.9662,  ..., 0.0625, 0.0302, 0.0527]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:40:59,608 [Process: 0] Synchronize training processes
2024-08-18 19:40:59,608 [Process: 0] Evaluating...
2024-08-18 19:40:59,610 [Process: 0] EPOCH 76:
2024-08-18 19:40:59,612 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:00,694 [Process: 0] Synchronize training processes
2024-08-18 19:41:00,694 [Process: 0] Evaluating...
2024-08-18 19:41:00,696 [Process: 0] EPOCH 77:
2024-08-18 19:41:00,698 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8822, 0.0220, 0.0294,  ..., 0.8769, 0.8895, 0.0381],
         [0.0393, 0.0220, 0.0294,  ..., 0.0410, 0.0387, 0.0381],
         [0.0393, 0.0220, 0.0294,  ..., 0.0410, 0.0359, 0.0381],
         [0.0393, 0.9340, 0.9119,  ..., 0.0410, 0.0359, 0.8858]],
        [[0.9131, 0.0445, 0.0280,  ..., 0.1096, 0.0140, 0.0217],
         [0.0290, 0.0445, 0.0280,  ..., 0.1284, 0.0140, 0.0217],
         [0.0290, 0.0445, 0.0280,  ..., 0.1096, 0.9581, 0.9350],
         [0.0290, 0.8664, 0.9161,  ..., 0.6524, 0.0140, 0.0217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0356, 0.0748, 0.0406,  ..., 0.0249, 0.0565, 0.0398],
         [0.0356, 0.0854, 0.0346,  ..., 0.0249, 0.0565, 0.0398],
         [0.8931, 0.0748, 0.0346,  ..., 0.9252, 0.8306, 0.8805],
         [0.0356, 0.7650, 0.8903,  ..., 0.0249, 0.0565, 0.0398]],
        [[0.0258, 0.0168, 0.0146,  ..., 0.0521, 0.0846, 0.9716],
         [0.0258, 0.0168, 0.0146,  ..., 0.0521, 0.0846, 0.0095],
         [0.9225, 0.0168, 0.0146,  ..., 0.8238, 0.7372, 0.0095],
         [0.0258, 0.9495, 0.9561,  ..., 0.0721, 0.0936, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9060, 0.0616, 0.1212,  ..., 0.8832, 0.9844, 0.0314],
         [0.0315, 0.0616, 0.1037,  ..., 0.0424, 0.0051, 0.0314],
         [0.0313, 0.0636, 0.1101,  ..., 0.0402, 0.0053, 0.0314],
         [0.0313, 0.8133, 0.6650,  ..., 0.0342, 0.0051, 0.9058]],
        [[0.8791, 0.0381, 0.0288,  ..., 0.0693, 0.0388, 0.0136],
         [0.0374, 0.0381, 0.0288,  ..., 0.0693, 0.0388, 0.0136],
         [0.0462, 0.0381, 0.0288,  ..., 0.0693, 0.8836, 0.9593],
         [0.0374, 0.8858, 0.9136,  ..., 0.7920, 0.0388, 0.0136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0413, 0.0694, 0.0697,  ..., 0.0205, 0.0955, 0.0620],
         [0.0413, 0.0750, 0.1197,  ..., 0.0205, 0.0955, 0.0620],
         [0.8760, 0.0694, 0.0697,  ..., 0.9385, 0.6926, 0.8131],
         [0.0413, 0.7861, 0.7410,  ..., 0.0205, 0.1164, 0.0630]],
        [[0.0440, 0.0046, 0.0117,  ..., 0.0430, 0.0465, 0.9073],
         [0.0440, 0.0046, 0.0117,  ..., 0.0430, 0.0465, 0.0309],
         [0.8679, 0.0046, 0.0117,  ..., 0.8710, 0.8605, 0.0309],
         [0.0440, 0.9862, 0.9650,  ..., 0.0430, 0.0465, 0.0309]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:01,777 [Process: 0] Synchronize training processes
2024-08-18 19:41:01,778 [Process: 0] Evaluating...
2024-08-18 19:41:01,779 [Process: 0] EPOCH 78:
2024-08-18 19:41:01,781 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:02,889 [Process: 0] Synchronize training processes
2024-08-18 19:41:02,890 [Process: 0] Evaluating...
2024-08-18 19:41:02,891 [Process: 0] EPOCH 79:
2024-08-18 19:41:02,893 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8502, 0.0760, 0.0610,  ..., 0.8911, 0.9897, 0.0563],
         [0.0655, 0.0598, 0.0610,  ..., 0.0452, 0.0034, 0.0563],
         [0.0421, 0.0621, 0.0610,  ..., 0.0318, 0.0034, 0.0655],
         [0.0421, 0.8021, 0.8169,  ..., 0.0318, 0.0034, 0.8218]],
        [[0.9006, 0.0156, 0.0446,  ..., 0.0797, 0.0068, 0.0108],
         [0.0243, 0.0156, 0.0446,  ..., 0.0797, 0.0068, 0.0108],
         [0.0508, 0.0156, 0.0446,  ..., 0.0797, 0.9795, 0.9676],
         [0.0243, 0.9531, 0.8661,  ..., 0.7610, 0.0068, 0.0108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0345, 0.0840, 0.0239,  ..., 0.0292, 0.1184, 0.0250],
         [0.0345, 0.0840, 0.0239,  ..., 0.0292, 0.1134, 0.0250],
         [0.8965, 0.0840, 0.0239,  ..., 0.9124, 0.5919, 0.9251],
         [0.0345, 0.7480, 0.9284,  ..., 0.0292, 0.1763, 0.0250]],
        [[0.0460, 0.0035, 0.0451,  ..., 0.0472, 0.0649, 0.9543],
         [0.0460, 0.0035, 0.0451,  ..., 0.0472, 0.0649, 0.0187],
         [0.8565, 0.0035, 0.0451,  ..., 0.8583, 0.8053, 0.0135],
         [0.0515, 0.9896, 0.8648,  ..., 0.0472, 0.0649, 0.0135]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7832, 0.0543, 0.0158,  ..., 0.7435, 0.9808, 0.0228],
         [0.0576, 0.0543, 0.0158,  ..., 0.0720, 0.0064, 0.0228],
         [0.1087, 0.0543, 0.0158,  ..., 0.1125, 0.0064, 0.0228],
         [0.0505, 0.8371, 0.9526,  ..., 0.0720, 0.0064, 0.9315]],
        [[0.9145, 0.0229, 0.0161,  ..., 0.0784, 0.0042, 0.0174],
         [0.0187, 0.0229, 0.0161,  ..., 0.0784, 0.0042, 0.0174],
         [0.0480, 0.0229, 0.0161,  ..., 0.0784, 0.9873, 0.9478],
         [0.0187, 0.9312, 0.9518,  ..., 0.7647, 0.0042, 0.0174]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0644, 0.0216, 0.0496,  ..., 0.0261, 0.0973, 0.0561],
         [0.0554, 0.0216, 0.0528,  ..., 0.0261, 0.0973, 0.0561],
         [0.8247, 0.0216, 0.0496,  ..., 0.9217, 0.6255, 0.8233],
         [0.0554, 0.9351, 0.8479,  ..., 0.0261, 0.1799, 0.0646]],
        [[0.1126, 0.0129, 0.0441,  ..., 0.0596, 0.0350, 0.9824],
         [0.1126, 0.0100, 0.0441,  ..., 0.0596, 0.0350, 0.0059],
         [0.5843, 0.0100, 0.0441,  ..., 0.8213, 0.8949, 0.0059],
         [0.1906, 0.9672, 0.8676,  ..., 0.0596, 0.0350, 0.0059]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:03,979 [Process: 0] Synchronize training processes
2024-08-18 19:41:03,979 [Process: 0] Evaluating...
2024-08-18 19:41:03,981 [Process: 0] EPOCH 80:
2024-08-18 19:41:03,983 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:05,063 [Process: 0] Synchronize training processes
2024-08-18 19:41:05,064 [Process: 0] Evaluating...
2024-08-18 19:41:05,065 [Process: 0] EPOCH 81:
2024-08-18 19:41:05,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7417, 0.0449, 0.0164,  ..., 0.6510, 0.9143, 0.0296],
         [0.0792, 0.0449, 0.0164,  ..., 0.1829, 0.0325, 0.0296],
         [0.0999, 0.0477, 0.0164,  ..., 0.0831, 0.0266, 0.0296],
         [0.0792, 0.8625, 0.9507,  ..., 0.0831, 0.0266, 0.9111]],
        [[0.7706, 0.0140, 0.0261,  ..., 0.0838, 0.0476, 0.0280],
         [0.0545, 0.0140, 0.0261,  ..., 0.0838, 0.0455, 0.0280],
         [0.1205, 0.0140, 0.0261,  ..., 0.1026, 0.8613, 0.9161],
         [0.0544, 0.9579, 0.9217,  ..., 0.7298, 0.0455, 0.0280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0493, 0.0406, 0.0709,  ..., 0.0286, 0.1100, 0.0428],
         [0.0487, 0.0350, 0.0709,  ..., 0.0286, 0.1096, 0.0428],
         [0.8534, 0.0350, 0.0709,  ..., 0.9142, 0.5689, 0.8715],
         [0.0487, 0.8895, 0.7873,  ..., 0.0286, 0.2115, 0.0428]],
        [[0.1136, 0.0052, 0.0020,  ..., 0.0253, 0.0228, 0.9705],
         [0.1136, 0.0052, 0.0020,  ..., 0.0253, 0.0228, 0.0098],
         [0.6264, 0.0052, 0.0020,  ..., 0.9241, 0.9315, 0.0098],
         [0.1464, 0.9843, 0.9941,  ..., 0.0253, 0.0228, 0.0098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7203, 0.0195, 0.0448,  ..., 0.8336, 0.9928, 0.0218],
         [0.1164, 0.0195, 0.0448,  ..., 0.0620, 0.0024, 0.0218],
         [0.0817, 0.0195, 0.0448,  ..., 0.0522, 0.0024, 0.0218],
         [0.0817, 0.9415, 0.8655,  ..., 0.0522, 0.0024, 0.9346]],
        [[0.9200, 0.0170, 0.0281,  ..., 0.0827, 0.0421, 0.0130],
         [0.0225, 0.0170, 0.0281,  ..., 0.0827, 0.0421, 0.0130],
         [0.0351, 0.0170, 0.0281,  ..., 0.6284, 0.8736, 0.9610],
         [0.0225, 0.9490, 0.9157,  ..., 0.2063, 0.0421, 0.0130]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:06,149 [Process: 0] Synchronize training processes
2024-08-18 19:41:06,150 [Process: 0] Evaluating...
2024-08-18 19:41:06,156 [Process: 0] EPOCH 82:
2024-08-18 19:41:06,158 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:07,238 [Process: 0] Synchronize training processes
2024-08-18 19:41:07,238 [Process: 0] Evaluating...
2024-08-18 19:41:07,240 [Process: 0] EPOCH 83:
2024-08-18 19:41:07,241 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0256, 0.0886, 0.0348,  ..., 0.0358, 0.1114, 0.0271],
         [0.0256, 0.0573, 0.0348,  ..., 0.0358, 0.1084, 0.0271],
         [0.9232, 0.0511, 0.0348,  ..., 0.8927, 0.1160, 0.9188],
         [0.0256, 0.8029, 0.8956,  ..., 0.0358, 0.6642, 0.0271]],
        [[0.0339, 0.0091, 0.0136,  ..., 0.0328, 0.0420, 0.9494],
         [0.0339, 0.0091, 0.0136,  ..., 0.0254, 0.0420, 0.0169],
         [0.8982, 0.0091, 0.0136,  ..., 0.9164, 0.8740, 0.0169],
         [0.0339, 0.9727, 0.9591,  ..., 0.0254, 0.0420, 0.0169]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9395, 0.0514, 0.0673,  ..., 0.8962, 0.8214, 0.0350],
         [0.0193, 0.0514, 0.0664,  ..., 0.0360, 0.0786, 0.0350],
         [0.0220, 0.0514, 0.0664,  ..., 0.0362, 0.0500, 0.0350],
         [0.0193, 0.8459, 0.8000,  ..., 0.0317, 0.0500, 0.8951]],
        [[0.9846, 0.0147, 0.0548,  ..., 0.1076, 0.0083, 0.0099],
         [0.0051, 0.0147, 0.0577,  ..., 0.1076, 0.0083, 0.0099],
         [0.0051, 0.0147, 0.0548,  ..., 0.2230, 0.9751, 0.9704],
         [0.0051, 0.9558, 0.8327,  ..., 0.5618, 0.0083, 0.0099]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0227, 0.0596, 0.0035,  ..., 0.0198, 0.0422, 0.0256],
         [0.0227, 0.0489, 0.0035,  ..., 0.0198, 0.0411, 0.0256],
         [0.9318, 0.0489, 0.0035,  ..., 0.9406, 0.0411, 0.9233],
         [0.0227, 0.8426, 0.9895,  ..., 0.0198, 0.8755, 0.0256]],
        [[0.0114, 0.0104, 0.0287,  ..., 0.0646, 0.0196, 0.9837],
         [0.0114, 0.0104, 0.0287,  ..., 0.0646, 0.0196, 0.0057],
         [0.9659, 0.0104, 0.0287,  ..., 0.7988, 0.9412, 0.0053],
         [0.0114, 0.9687, 0.9139,  ..., 0.0720, 0.0196, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9254, 0.0558, 0.1035,  ..., 0.9418, 0.6740, 0.1095],
         [0.0235, 0.0558, 0.1035,  ..., 0.0194, 0.1039, 0.1095],
         [0.0277, 0.0558, 0.1035,  ..., 0.0194, 0.1226, 0.1095],
         [0.0235, 0.8327, 0.6894,  ..., 0.0194, 0.0995, 0.6716]],
        [[0.8738, 0.0220, 0.0080,  ..., 0.1035, 0.1536, 0.0561],
         [0.0178, 0.0218, 0.0080,  ..., 0.1035, 0.1536, 0.0561],
         [0.0906, 0.0218, 0.0080,  ..., 0.1035, 0.4761, 0.8252],
         [0.0178, 0.9343, 0.9761,  ..., 0.6895, 0.2168, 0.0626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:08,326 [Process: 0] Synchronize training processes
2024-08-18 19:41:08,326 [Process: 0] Evaluating...
2024-08-18 19:41:08,328 [Process: 0] EPOCH 84:
2024-08-18 19:41:08,330 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:09,415 [Process: 0] Synchronize training processes
2024-08-18 19:41:09,415 [Process: 0] Evaluating...
2024-08-18 19:41:09,417 [Process: 0] EPOCH 85:
2024-08-18 19:41:09,419 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0392, 0.1340, 0.0124,  ..., 0.0375, 0.0989, 0.0242],
         [0.0392, 0.0937, 0.0094,  ..., 0.0375, 0.0985, 0.0242],
         [0.8775, 0.0937, 0.0094,  ..., 0.8876, 0.0980, 0.9275],
         [0.0441, 0.6786, 0.9688,  ..., 0.0375, 0.7046, 0.0242]],
        [[0.0059, 0.0038, 0.0218,  ..., 0.0868, 0.0704, 0.9737],
         [0.0059, 0.0038, 0.0218,  ..., 0.0868, 0.0704, 0.0088],
         [0.9822, 0.0038, 0.0218,  ..., 0.7093, 0.7889, 0.0088],
         [0.0059, 0.9887, 0.9346,  ..., 0.1170, 0.0704, 0.0088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9834, 0.0469, 0.0376,  ..., 0.9312, 0.9576, 0.0340],
         [0.0055, 0.0469, 0.0376,  ..., 0.0229, 0.0141, 0.0340],
         [0.0055, 0.0469, 0.0376,  ..., 0.0229, 0.0141, 0.0340],
         [0.0055, 0.8592, 0.8873,  ..., 0.0229, 0.0141, 0.8979]],
        [[0.9921, 0.0132, 0.0231,  ..., 0.1067, 0.0056, 0.0212],
         [0.0026, 0.0132, 0.0231,  ..., 0.0954, 0.0056, 0.0212],
         [0.0026, 0.0132, 0.0231,  ..., 0.1490, 0.9833, 0.9363],
         [0.0026, 0.9605, 0.9307,  ..., 0.6489, 0.0056, 0.0212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0330, 0.0569, 0.0049,  ..., 0.0242, 0.1443, 0.0663],
         [0.0330, 0.0525, 0.0049,  ..., 0.0242, 0.1212, 0.0663],
         [0.9009, 0.0525, 0.0049,  ..., 0.9273, 0.1989, 0.7951],
         [0.0330, 0.8380, 0.9852,  ..., 0.0242, 0.5355, 0.0723]],
        [[0.0091, 0.0219, 0.0188,  ..., 0.0854, 0.0950, 0.9687],
         [0.0091, 0.0219, 0.0314,  ..., 0.0854, 0.0950, 0.0104],
         [0.9726, 0.0219, 0.0188,  ..., 0.7437, 0.6782, 0.0104],
         [0.0091, 0.9343, 0.9310,  ..., 0.0854, 0.1318, 0.0104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9959, 0.0297, 0.0691,  ..., 0.9556, 0.9006, 0.0314],
         [0.0014, 0.0297, 0.0691,  ..., 0.0148, 0.0331, 0.0314],
         [0.0014, 0.0313, 0.0691,  ..., 0.0148, 0.0331, 0.0314],
         [0.0014, 0.9093, 0.7928,  ..., 0.0148, 0.0331, 0.9058]],
        [[0.9842, 0.0224, 0.0221,  ..., 0.0436, 0.0022, 0.0147],
         [0.0053, 0.0224, 0.0221,  ..., 0.0436, 0.0022, 0.0147],
         [0.0053, 0.0224, 0.0221,  ..., 0.0436, 0.9933, 0.9560],
         [0.0053, 0.9328, 0.9336,  ..., 0.8691, 0.0022, 0.0147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:10,502 [Process: 0] Synchronize training processes
2024-08-18 19:41:10,503 [Process: 0] Evaluating...
2024-08-18 19:41:10,504 [Process: 0] EPOCH 86:
2024-08-18 19:41:10,506 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0998, 0.0419, 0.0329,  ..., 0.0198, 0.1369, 0.0247],
         [0.0998, 0.0419, 0.0329,  ..., 0.0198, 0.1069, 0.0247],
         [0.6428, 0.0419, 0.0329,  ..., 0.9406, 0.1384, 0.9258],
         [0.1577, 0.8743, 0.9013,  ..., 0.0198, 0.6178, 0.0247]],
        [[0.0097, 0.0076, 0.0496,  ..., 0.0216, 0.0411, 0.9602],
         [0.0097, 0.0076, 0.0419,  ..., 0.0216, 0.0411, 0.0133],
         [0.9709, 0.0076, 0.0454,  ..., 0.9353, 0.8767, 0.0133],
         [0.0097, 0.9771, 0.8631,  ..., 0.0216, 0.0411, 0.0133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9771, 0.0080, 0.0256,  ..., 0.9753, 0.9282, 0.0404],
         [0.0077, 0.0080, 0.0256,  ..., 0.0082, 0.0239, 0.0404],
         [0.0076, 0.0080, 0.0256,  ..., 0.0082, 0.0239, 0.0404],
         [0.0076, 0.9761, 0.9233,  ..., 0.0082, 0.0239, 0.8789]],
        [[0.9811, 0.0610, 0.0211,  ..., 0.0706, 0.0058, 0.0055],
         [0.0063, 0.0610, 0.0211,  ..., 0.0706, 0.0058, 0.0055],
         [0.0063, 0.0622, 0.0211,  ..., 0.0770, 0.9826, 0.9835],
         [0.0063, 0.8159, 0.9367,  ..., 0.7818, 0.0058, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0428, 0.0568, 0.0182,  ..., 0.0436, 0.1753, 0.0326],
         [0.0428, 0.0568, 0.0182,  ..., 0.0340, 0.1363, 0.0326],
         [0.8717, 0.0568, 0.0182,  ..., 0.8884, 0.3732, 0.9021],
         [0.0428, 0.8296, 0.9453,  ..., 0.0340, 0.3152, 0.0326]],
        [[0.0261, 0.0024, 0.0178,  ..., 0.0442, 0.0349, 0.9843],
         [0.0261, 0.0024, 0.0178,  ..., 0.0442, 0.0349, 0.0052],
         [0.9216, 0.0024, 0.0178,  ..., 0.8622, 0.8882, 0.0052],
         [0.0261, 0.9927, 0.9466,  ..., 0.0495, 0.0420, 0.0052]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:41:11,590 [Process: 0] Synchronize training processes
2024-08-18 19:41:11,591 [Process: 0] Evaluating...
2024-08-18 19:41:11,592 [Process: 0] EPOCH 87:
2024-08-18 19:41:11,594 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:12,678 [Process: 0] Synchronize training processes
2024-08-18 19:41:12,679 [Process: 0] Evaluating...
2024-08-18 19:41:12,680 [Process: 0] EPOCH 88:
2024-08-18 19:41:12,682 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9794e-01, 2.0289e-02, 6.9464e-02,  ..., 9.7053e-01,
          8.1978e-01, 5.8541e-02],
         [6.8662e-04, 2.0289e-02, 5.2232e-02,  ..., 9.8249e-03,
          5.1759e-02, 5.8541e-02],
         [6.8662e-04, 2.0289e-02, 5.2232e-02,  ..., 9.8249e-03,
          5.9155e-02, 6.4502e-02],
         [6.8662e-04, 9.3913e-01, 8.2607e-01,  ..., 9.8249e-03,
          6.9301e-02, 8.1842e-01]],
        [[9.4718e-01, 1.9279e-02, 1.4669e-02,  ..., 1.1876e-01,
          5.9439e-03, 6.5140e-03],
         [1.8149e-02, 1.9279e-02, 1.4669e-02,  ..., 1.3123e-01,
          5.9439e-03, 6.5140e-03],
         [1.8514e-02, 1.9279e-02, 1.4669e-02,  ..., 1.1876e-01,
          9.8217e-01, 9.8046e-01],
         [1.6160e-02, 9.4216e-01, 9.5599e-01,  ..., 6.3125e-01,
          5.9439e-03, 6.5140e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0368, 0.0510, 0.0059,  ..., 0.0266, 0.1317, 0.0461],
         [0.0368, 0.0510, 0.0059,  ..., 0.0266, 0.1317, 0.0386],
         [0.8895, 0.0510, 0.0059,  ..., 0.9201, 0.3451, 0.8766],
         [0.0368, 0.8470, 0.9823,  ..., 0.0266, 0.3915, 0.0386]],
        [[0.0164, 0.0012, 0.0020,  ..., 0.0556, 0.0617, 0.9642],
         [0.0164, 0.0012, 0.0020,  ..., 0.0459, 0.0526, 0.0119],
         [0.9508, 0.0012, 0.0020,  ..., 0.8526, 0.8263, 0.0119],
         [0.0164, 0.9965, 0.9939,  ..., 0.0459, 0.0594, 0.0119]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9932, 0.0266, 0.0466,  ..., 0.9225, 0.9380, 0.0748],
         [0.0023, 0.0266, 0.0466,  ..., 0.0258, 0.0260, 0.0748],
         [0.0023, 0.0266, 0.0466,  ..., 0.0258, 0.0180, 0.1088],
         [0.0023, 0.9203, 0.8603,  ..., 0.0258, 0.0180, 0.7417]],
        [[0.8805, 0.0115, 0.0313,  ..., 0.0822, 0.0066, 0.0043],
         [0.0364, 0.0115, 0.0313,  ..., 0.0822, 0.0066, 0.0043],
         [0.0466, 0.0115, 0.0313,  ..., 0.1046, 0.9803, 0.9871],
         [0.0364, 0.9656, 0.9062,  ..., 0.7310, 0.0066, 0.0043]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0181, 0.1605, 0.0086,  ..., 0.0283, 0.1017, 0.0193],
         [0.0181, 0.0956, 0.0085,  ..., 0.0283, 0.1017, 0.0193],
         [0.9456, 0.1365, 0.0085,  ..., 0.9151, 0.2258, 0.9422],
         [0.0181, 0.6074, 0.9743,  ..., 0.0283, 0.5709, 0.0193]],
        [[0.0213, 0.0320, 0.0147,  ..., 0.0253, 0.0303, 0.9679],
         [0.0213, 0.0320, 0.0147,  ..., 0.0253, 0.0303, 0.0107],
         [0.9361, 0.0320, 0.0147,  ..., 0.9235, 0.9091, 0.0107],
         [0.0213, 0.9039, 0.9560,  ..., 0.0258, 0.0303, 0.0107]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:13,762 [Process: 0] Synchronize training processes
2024-08-18 19:41:13,762 [Process: 0] Evaluating...
2024-08-18 19:41:13,764 [Process: 0] EPOCH 89:
2024-08-18 19:41:13,766 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:14,848 [Process: 0] Synchronize training processes
2024-08-18 19:41:14,848 [Process: 0] Evaluating...
2024-08-18 19:41:14,850 [Process: 0] EPOCH 90:
2024-08-18 19:41:14,852 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9621, 0.0083, 0.0332,  ..., 0.9144, 0.9111, 0.0426],
         [0.0126, 0.0083, 0.0332,  ..., 0.0271, 0.0296, 0.0426],
         [0.0126, 0.0083, 0.0332,  ..., 0.0313, 0.0296, 0.0426],
         [0.0126, 0.9752, 0.9005,  ..., 0.0273, 0.0296, 0.8723]],
        [[0.7410, 0.0210, 0.0253,  ..., 0.0575, 0.0029, 0.0062],
         [0.0552, 0.0210, 0.0253,  ..., 0.0575, 0.0029, 0.0062],
         [0.1498, 0.0210, 0.0253,  ..., 0.0575, 0.9913, 0.9815],
         [0.0540, 0.9369, 0.9242,  ..., 0.8275, 0.0029, 0.0062]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0399, 0.1038, 0.0069,  ..., 0.0262, 0.0527, 0.0403],
         [0.0399, 0.0587, 0.0069,  ..., 0.0349, 0.0527, 0.0403],
         [0.8803, 0.0587, 0.0069,  ..., 0.9127, 0.8293, 0.8790],
         [0.0399, 0.7789, 0.9793,  ..., 0.0262, 0.0653, 0.0403]],
        [[0.0154, 0.0049, 0.0267,  ..., 0.0353, 0.0327, 0.9667],
         [0.0154, 0.0049, 0.0267,  ..., 0.0353, 0.0327, 0.0111],
         [0.9524, 0.0049, 0.0267,  ..., 0.8941, 0.9018, 0.0111],
         [0.0169, 0.9853, 0.9198,  ..., 0.0353, 0.0327, 0.0111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9491, 0.0288, 0.0203,  ..., 0.8859, 0.8921, 0.0533],
         [0.0170, 0.0288, 0.0203,  ..., 0.0370, 0.0431, 0.0503],
         [0.0170, 0.0288, 0.0203,  ..., 0.0401, 0.0324, 0.0503],
         [0.0170, 0.9136, 0.9391,  ..., 0.0370, 0.0324, 0.8461]],
        [[0.6663, 0.0340, 0.0444,  ..., 0.0534, 0.0060, 0.0069],
         [0.0900, 0.0340, 0.0361,  ..., 0.0534, 0.0060, 0.0069],
         [0.1843, 0.0340, 0.0401,  ..., 0.0534, 0.9820, 0.9794],
         [0.0594, 0.8979, 0.8794,  ..., 0.8398, 0.0060, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0435, 0.0278, 0.0929,  ..., 0.0357, 0.0426, 0.0562],
         [0.0435, 0.0278, 0.0327,  ..., 0.0357, 0.0426, 0.0562],
         [0.8694, 0.0278, 0.0327,  ..., 0.8928, 0.8627, 0.8286],
         [0.0435, 0.9166, 0.8418,  ..., 0.0357, 0.0520, 0.0590]],
        [[0.0211, 0.0027, 0.0052,  ..., 0.0396, 0.0206, 0.9833],
         [0.0211, 0.0027, 0.0052,  ..., 0.0396, 0.0206, 0.0065],
         [0.9366, 0.0027, 0.0052,  ..., 0.8813, 0.9382, 0.0051],
         [0.0211, 0.9920, 0.9843,  ..., 0.0396, 0.0206, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:15,939 [Process: 0] Synchronize training processes
2024-08-18 19:41:15,939 [Process: 0] Evaluating...
2024-08-18 19:41:15,941 [Process: 0] EPOCH 91:
2024-08-18 19:41:15,943 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:17,025 [Process: 0] Synchronize training processes
2024-08-18 19:41:17,025 [Process: 0] Evaluating...
2024-08-18 19:41:17,031 [Process: 0] EPOCH 92:
2024-08-18 19:41:17,033 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9906, 0.1790, 0.0392,  ..., 0.9838, 0.7333, 0.0254],
         [0.0031, 0.3583, 0.0392,  ..., 0.0064, 0.0949, 0.0254],
         [0.0031, 0.2337, 0.0392,  ..., 0.0049, 0.0755, 0.0254],
         [0.0031, 0.2290, 0.8825,  ..., 0.0049, 0.0962, 0.9239]],
        [[0.7301, 0.0234, 0.0422,  ..., 0.0705, 0.1693, 0.0068],
         [0.0560, 0.0234, 0.0422,  ..., 0.0705, 0.3357, 0.0068],
         [0.1579, 0.0234, 0.0422,  ..., 0.0705, 0.2966, 0.9797],
         [0.0560, 0.9299, 0.8733,  ..., 0.7886, 0.1984, 0.0068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0266, 0.0912, 0.2338,  ..., 0.0215, 0.0598, 0.0225],
         [0.0266, 0.0663, 0.0362,  ..., 0.0215, 0.0598, 0.0225],
         [0.9201, 0.0648, 0.0362,  ..., 0.9355, 0.8041, 0.9326],
         [0.0266, 0.7777, 0.6939,  ..., 0.0215, 0.0764, 0.0225]],
        [[0.0310, 0.0055, 0.0068,  ..., 0.0301, 0.0564, 0.9834],
         [0.0310, 0.0055, 0.0068,  ..., 0.0301, 0.0564, 0.0055],
         [0.9069, 0.0055, 0.0068,  ..., 0.9098, 0.7880, 0.0055],
         [0.0310, 0.9835, 0.9795,  ..., 0.0301, 0.0993, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9530, 0.0325, 0.0490,  ..., 0.4274, 0.8766, 0.0656],
         [0.0123, 0.0325, 0.0490,  ..., 0.2645, 0.0576, 0.0537],
         [0.0223, 0.0325, 0.0490,  ..., 0.1540, 0.0329, 0.0561],
         [0.0123, 0.9024, 0.8529,  ..., 0.1540, 0.0329, 0.8246]],
        [[0.8358, 0.0383, 0.0615,  ..., 0.0909, 0.0592, 0.0270],
         [0.0283, 0.0383, 0.0458,  ..., 0.0927, 0.0526, 0.0270],
         [0.1076, 0.0383, 0.0458,  ..., 0.0963, 0.8356, 0.9190],
         [0.0283, 0.8852, 0.8470,  ..., 0.7201, 0.0526, 0.0270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0230, 0.0750, 0.0043,  ..., 0.0239, 0.0481, 0.0417],
         [0.0230, 0.0510, 0.0043,  ..., 0.0239, 0.0481, 0.0417],
         [0.9311, 0.0510, 0.0043,  ..., 0.9283, 0.8438, 0.8750],
         [0.0230, 0.8230, 0.9870,  ..., 0.0239, 0.0599, 0.0417]],
        [[0.0104, 0.0132, 0.0054,  ..., 0.0424, 0.0455, 0.9795],
         [0.0104, 0.0132, 0.0054,  ..., 0.0424, 0.0455, 0.0068],
         [0.9687, 0.0132, 0.0054,  ..., 0.8640, 0.8634, 0.0068],
         [0.0104, 0.9605, 0.9837,  ..., 0.0513, 0.0455, 0.0068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:18,118 [Process: 0] Synchronize training processes
2024-08-18 19:41:18,118 [Process: 0] Evaluating...
2024-08-18 19:41:18,120 [Process: 0] EPOCH 93:
2024-08-18 19:41:18,121 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:19,229 [Process: 0] Synchronize training processes
2024-08-18 19:41:19,229 [Process: 0] Evaluating...
2024-08-18 19:41:19,231 [Process: 0] EPOCH 94:
2024-08-18 19:41:19,233 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9907, 0.0314, 0.0366,  ..., 0.8178, 0.9171, 0.0636],
         [0.0028, 0.0314, 0.0366,  ..., 0.0878, 0.0359, 0.0585],
         [0.0038, 0.0314, 0.0366,  ..., 0.0472, 0.0235, 0.0725],
         [0.0028, 0.9057, 0.8902,  ..., 0.0472, 0.0235, 0.8054]],
        [[0.7565, 0.0392, 0.0373,  ..., 0.0799, 0.0026, 0.0071],
         [0.0196, 0.0392, 0.0394,  ..., 0.0827, 0.0026, 0.0071],
         [0.2043, 0.0403, 0.0373,  ..., 0.0799, 0.9923, 0.9788],
         [0.0196, 0.8813, 0.8861,  ..., 0.7575, 0.0026, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0610, 0.1658, 0.0049,  ..., 0.0130, 0.0781, 0.0338],
         [0.0491, 0.0622, 0.0049,  ..., 0.0130, 0.0781, 0.0338],
         [0.8409, 0.0507, 0.0049,  ..., 0.9609, 0.6872, 0.8985],
         [0.0491, 0.7213, 0.9853,  ..., 0.0130, 0.1566, 0.0338]],
        [[0.0050, 0.0017, 0.0127,  ..., 0.0367, 0.0330, 0.9629],
         [0.0050, 0.0025, 0.0148,  ..., 0.0367, 0.0330, 0.0124],
         [0.9851, 0.0017, 0.0127,  ..., 0.8899, 0.9009, 0.0124],
         [0.0050, 0.9942, 0.9597,  ..., 0.0367, 0.0330, 0.0124]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9445, 0.0467, 0.0303,  ..., 0.9846, 0.9283, 0.0720],
         [0.0228, 0.0444, 0.0303,  ..., 0.0051, 0.0294, 0.0720],
         [0.0163, 0.0444, 0.0322,  ..., 0.0051, 0.0212, 0.0797],
         [0.0163, 0.8646, 0.9073,  ..., 0.0051, 0.0212, 0.7762]],
        [[0.9434, 0.0350, 0.0354,  ..., 0.0898, 0.0029, 0.0176],
         [0.0092, 0.0350, 0.0354,  ..., 0.1106, 0.0029, 0.0156],
         [0.0383, 0.0350, 0.0354,  ..., 0.0898, 0.9913, 0.9512],
         [0.0092, 0.8951, 0.8937,  ..., 0.7099, 0.0029, 0.0156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:20,312 [Process: 0] Synchronize training processes
2024-08-18 19:41:20,312 [Process: 0] Evaluating...
2024-08-18 19:41:20,314 [Process: 0] EPOCH 95:
2024-08-18 19:41:20,316 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:21,394 [Process: 0] Synchronize training processes
2024-08-18 19:41:21,395 [Process: 0] Evaluating...
2024-08-18 19:41:21,396 [Process: 0] EPOCH 96:
2024-08-18 19:41:21,398 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0420, 0.1547, 0.0072,  ..., 0.0123, 0.0692, 0.0427],
         [0.0420, 0.0557, 0.0072,  ..., 0.0123, 0.0692, 0.0427],
         [0.8741, 0.0557, 0.0072,  ..., 0.9631, 0.7393, 0.8702],
         [0.0420, 0.7338, 0.9784,  ..., 0.0123, 0.1222, 0.0443]],
        [[0.0099, 0.0280, 0.0053,  ..., 0.0635, 0.0372, 0.9862],
         [0.0099, 0.0413, 0.0072,  ..., 0.0635, 0.0372, 0.0046],
         [0.9703, 0.0280, 0.0053,  ..., 0.8095, 0.8885, 0.0046],
         [0.0099, 0.9026, 0.9823,  ..., 0.0635, 0.0372, 0.0046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9874, 0.0262, 0.0517,  ..., 0.9118, 0.8600, 0.0323],
         [0.0042, 0.0262, 0.0397,  ..., 0.0289, 0.0729, 0.0323],
         [0.0042, 0.0262, 0.0458,  ..., 0.0289, 0.0335, 0.0323],
         [0.0042, 0.9214, 0.8629,  ..., 0.0305, 0.0335, 0.9030]],
        [[0.9187, 0.0092, 0.0325,  ..., 0.0372, 0.0077, 0.0018],
         [0.0140, 0.0092, 0.0325,  ..., 0.0292, 0.0077, 0.0018],
         [0.0533, 0.0092, 0.0325,  ..., 0.0301, 0.9770, 0.9945],
         [0.0140, 0.9724, 0.9025,  ..., 0.9035, 0.0077, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.7237e-02, 5.1557e-02, 3.1764e-03,  ..., 1.2166e-02,
          1.5008e-01, 2.8264e-02],
         [3.4292e-02, 2.8304e-02, 3.1764e-03,  ..., 1.2166e-02,
          1.0341e-01, 2.8264e-02],
         [8.9418e-01, 2.8304e-02, 3.1764e-03,  ..., 9.6350e-01,
          5.5954e-01, 9.1521e-01],
         [3.4292e-02, 8.9184e-01, 9.9047e-01,  ..., 1.2166e-02,
          1.8698e-01, 2.8264e-02]],
        [[2.3362e-02, 5.9559e-04, 1.7020e-03,  ..., 1.3834e-02,
          5.2853e-02, 9.7756e-01],
         [2.3362e-02, 5.9559e-04, 1.7020e-03,  ..., 1.3834e-02,
          6.9983e-02, 7.4805e-03],
         [9.2991e-01, 5.9559e-04, 1.7020e-03,  ..., 9.5850e-01,
          8.2431e-01, 7.4805e-03],
         [2.3362e-02, 9.9821e-01, 9.9489e-01,  ..., 1.3834e-02,
          5.2853e-02, 7.4805e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9742e-01, 1.8655e-02, 3.6831e-02,  ..., 9.4926e-01,
          8.3158e-01, 2.8090e-02],
         [8.5933e-04, 1.8655e-02, 3.6831e-02,  ..., 1.9759e-02,
          7.4745e-02, 2.8090e-02],
         [8.5933e-04, 1.8655e-02, 3.6831e-02,  ..., 1.5882e-02,
          4.6836e-02, 4.4644e-02],
         [8.5933e-04, 9.4404e-01, 8.8951e-01,  ..., 1.5094e-02,
          4.6836e-02, 8.9918e-01]],
        [[9.6519e-01, 2.4739e-02, 1.6722e-02,  ..., 6.8768e-02,
          1.2276e-01, 5.8583e-03],
         [7.7641e-03, 2.4739e-02, 1.6722e-02,  ..., 7.4464e-02,
          1.0829e-01, 5.8583e-03],
         [1.9279e-02, 2.4739e-02, 1.6722e-02,  ..., 6.8768e-02,
          6.0543e-01, 9.8243e-01],
         [7.7641e-03, 9.2578e-01, 9.4983e-01,  ..., 7.8800e-01,
          1.6352e-01, 5.8583e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:22,479 [Process: 0] Synchronize training processes
2024-08-18 19:41:22,479 [Process: 0] Evaluating...
2024-08-18 19:41:22,481 [Process: 0] EPOCH 97:
2024-08-18 19:41:22,482 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:23,561 [Process: 0] Synchronize training processes
2024-08-18 19:41:23,562 [Process: 0] Evaluating...
2024-08-18 19:41:23,564 [Process: 0] EPOCH 98:
2024-08-18 19:41:23,565 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0288, 0.0145, 0.0083,  ..., 0.0172, 0.0796, 0.0406],
         [0.0288, 0.0145, 0.0083,  ..., 0.0172, 0.0796, 0.0369],
         [0.9137, 0.0145, 0.0083,  ..., 0.9483, 0.7410, 0.8857],
         [0.0288, 0.9566, 0.9750,  ..., 0.0172, 0.0999, 0.0369]],
        [[0.0197, 0.0174, 0.0028,  ..., 0.0258, 0.0170, 0.9764],
         [0.0197, 0.0183, 0.0028,  ..., 0.0258, 0.0170, 0.0079],
         [0.9408, 0.0174, 0.0028,  ..., 0.9227, 0.9490, 0.0079],
         [0.0197, 0.9469, 0.9916,  ..., 0.0258, 0.0170, 0.0079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9952, 0.0434, 0.0183,  ..., 0.9669, 0.8860, 0.0089],
         [0.0016, 0.0434, 0.0183,  ..., 0.0110, 0.0368, 0.0089],
         [0.0016, 0.0501, 0.0183,  ..., 0.0110, 0.0404, 0.0089],
         [0.0016, 0.8632, 0.9452,  ..., 0.0110, 0.0368, 0.9732]],
        [[0.9503, 0.0112, 0.0138,  ..., 0.1080, 0.0036, 0.0053],
         [0.0110, 0.0112, 0.0138,  ..., 0.1080, 0.0036, 0.0053],
         [0.0276, 0.0112, 0.0138,  ..., 0.1301, 0.9891, 0.9840],
         [0.0110, 0.9665, 0.9585,  ..., 0.6538, 0.0036, 0.0053]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0278, 0.0410, 0.0017,  ..., 0.0313, 0.0795, 0.0225],
         [0.0278, 0.0410, 0.0017,  ..., 0.0313, 0.0612, 0.0207],
         [0.9165, 0.0410, 0.0017,  ..., 0.9061, 0.7981, 0.9360],
         [0.0278, 0.8769, 0.9949,  ..., 0.0313, 0.0612, 0.0207]],
        [[0.0138, 0.0037, 0.0118,  ..., 0.0257, 0.0398, 0.9912],
         [0.0138, 0.0037, 0.0118,  ..., 0.0257, 0.0398, 0.0029],
         [0.9587, 0.0037, 0.0118,  ..., 0.9229, 0.8790, 0.0029],
         [0.0138, 0.9889, 0.9646,  ..., 0.0257, 0.0414, 0.0029]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9936, 0.0080, 0.0144,  ..., 0.9585, 0.8300, 0.0277],
         [0.0021, 0.0080, 0.0144,  ..., 0.0140, 0.0597, 0.0277],
         [0.0021, 0.0080, 0.0144,  ..., 0.0137, 0.0558, 0.0290],
         [0.0021, 0.9759, 0.9567,  ..., 0.0137, 0.0544, 0.9156]],
        [[0.9648, 0.0096, 0.0196,  ..., 0.0733, 0.0034, 0.0144],
         [0.0111, 0.0096, 0.0196,  ..., 0.0733, 0.0034, 0.0158],
         [0.0130, 0.0096, 0.0196,  ..., 0.0733, 0.9897, 0.9554],
         [0.0111, 0.9711, 0.9411,  ..., 0.7801, 0.0034, 0.0144]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:24,646 [Process: 0] Synchronize training processes
2024-08-18 19:41:24,647 [Process: 0] Evaluating...
2024-08-18 19:41:24,648 [Process: 0] EPOCH 99:
2024-08-18 19:41:24,650 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0252, 0.0593, 0.0043,  ..., 0.0179, 0.1122, 0.0657],
         [0.0252, 0.0593, 0.0043,  ..., 0.0179, 0.1122, 0.0537],
         [0.9243, 0.0593, 0.0043,  ..., 0.9464, 0.4570, 0.8250],
         [0.0252, 0.8221, 0.9872,  ..., 0.0179, 0.3185, 0.0556]],
        [[0.0200, 0.0015, 0.0025,  ..., 0.0417, 0.0716, 0.9889],
         [0.0200, 0.0015, 0.0025,  ..., 0.0443, 0.0716, 0.0037],
         [0.9401, 0.0015, 0.0025,  ..., 0.8722, 0.7624, 0.0037],
         [0.0200, 0.9955, 0.9924,  ..., 0.0417, 0.0945, 0.0037]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9637, 0.0091, 0.0048,  ..., 0.9809, 0.8196, 0.0196],
         [0.0117, 0.0091, 0.0048,  ..., 0.0064, 0.0807, 0.0196],
         [0.0117, 0.0091, 0.0048,  ..., 0.0064, 0.0498, 0.0196],
         [0.0130, 0.9727, 0.9856,  ..., 0.0064, 0.0498, 0.9411]],
        [[0.8604, 0.0106, 0.0280,  ..., 0.0886, 0.0046, 0.0024],
         [0.0471, 0.0106, 0.0280,  ..., 0.0886, 0.0046, 0.0026],
         [0.0551, 0.0106, 0.0280,  ..., 0.0886, 0.9862, 0.9926],
         [0.0373, 0.9681, 0.9159,  ..., 0.7342, 0.0046, 0.0024]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0508, 0.0210, 0.0014,  ..., 0.0205, 0.1454, 0.0465],
         [0.0508, 0.0210, 0.0014,  ..., 0.0205, 0.0992, 0.0465],
         [0.8422, 0.0210, 0.0014,  ..., 0.9386, 0.1646, 0.8604],
         [0.0561, 0.9371, 0.9958,  ..., 0.0205, 0.5909, 0.0465]],
        [[0.0138, 0.0116, 0.0012,  ..., 0.0132, 0.0327, 0.9596],
         [0.0138, 0.0116, 0.0012,  ..., 0.0132, 0.0327, 0.0124],
         [0.9586, 0.0116, 0.0012,  ..., 0.9603, 0.9018, 0.0124],
         [0.0138, 0.9653, 0.9963,  ..., 0.0132, 0.0327, 0.0155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:25,731 [Process: 0] Synchronize training processes
2024-08-18 19:41:25,731 [Process: 0] Evaluating...
2024-08-18 19:41:25,733 [Process: 0] EPOCH 100:
2024-08-18 19:41:25,735 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:26,815 [Process: 0] Synchronize training processes
2024-08-18 19:41:26,815 [Process: 0] Evaluating...
2024-08-18 19:41:26,817 [Process: 0] EPOCH 101:
2024-08-18 19:41:26,819 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9564, 0.0317, 0.0336,  ..., 0.9649, 0.7992, 0.0200],
         [0.0145, 0.0317, 0.0336,  ..., 0.0130, 0.0692, 0.0200],
         [0.0145, 0.0317, 0.0441,  ..., 0.0111, 0.0670, 0.0200],
         [0.0145, 0.9048, 0.8888,  ..., 0.0111, 0.0645, 0.9399]],
        [[0.9579, 0.0217, 0.0616,  ..., 0.0560, 0.0076, 0.0108],
         [0.0134, 0.0217, 0.0616,  ..., 0.0560, 0.0076, 0.0108],
         [0.0153, 0.0217, 0.0706,  ..., 0.0560, 0.9771, 0.9675],
         [0.0134, 0.9349, 0.8062,  ..., 0.8320, 0.0076, 0.0108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.2721e-02, 2.2925e-02, 9.5460e-04,  ..., 3.8192e-02,
          6.3323e-02, 1.2378e-02],
         [3.2721e-02, 2.2925e-02, 9.5460e-04,  ..., 3.8192e-02,
          7.4697e-02, 1.2378e-02],
         [9.0184e-01, 2.2925e-02, 9.5460e-04,  ..., 8.8542e-01,
          6.3323e-02, 9.6287e-01],
         [3.2721e-02, 9.3123e-01, 9.9714e-01,  ..., 3.8192e-02,
          7.9866e-01, 1.2378e-02]],
        [[1.1652e-02, 1.3747e-02, 3.8043e-03,  ..., 1.4917e-02,
          2.4514e-02, 9.8337e-01],
         [1.1652e-02, 1.3747e-02, 3.8043e-03,  ..., 1.4917e-02,
          2.4514e-02, 5.5435e-03],
         [9.6504e-01, 1.3747e-02, 3.8043e-03,  ..., 9.5525e-01,
          9.2646e-01, 5.5435e-03],
         [1.1652e-02, 9.5876e-01, 9.8859e-01,  ..., 1.4917e-02,
          2.4514e-02, 5.5435e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9653, 0.0279, 0.0233,  ..., 0.9867, 0.8381, 0.0156],
         [0.0126, 0.0279, 0.0233,  ..., 0.0044, 0.0829, 0.0156],
         [0.0111, 0.0279, 0.0343,  ..., 0.0044, 0.0395, 0.0156],
         [0.0111, 0.9164, 0.9191,  ..., 0.0044, 0.0395, 0.9532]],
        [[0.9795, 0.0170, 0.0258,  ..., 0.0337, 0.0013, 0.0069],
         [0.0063, 0.0170, 0.0258,  ..., 0.0337, 0.0013, 0.0069],
         [0.0080, 0.0170, 0.0258,  ..., 0.0338, 0.9962, 0.9793],
         [0.0063, 0.9491, 0.9226,  ..., 0.8988, 0.0013, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.8506e-02, 2.9223e-02, 8.1316e-04,  ..., 3.6793e-02,
          1.2362e-01, 2.4739e-02],
         [1.8506e-02, 2.1549e-02, 8.1316e-04,  ..., 3.6793e-02,
          1.1493e-01, 2.4739e-02],
         [9.4448e-01, 2.1549e-02, 8.1316e-04,  ..., 8.8962e-01,
          4.2832e-01, 9.2578e-01],
         [1.8506e-02, 9.2768e-01, 9.9756e-01,  ..., 3.6793e-02,
          3.3313e-01, 2.4739e-02]],
        [[9.4741e-03, 1.6273e-03, 1.9999e-02,  ..., 2.1060e-02,
          2.8116e-02, 9.8988e-01],
         [9.4741e-03, 1.6273e-03, 1.9999e-02,  ..., 2.1060e-02,
          2.8116e-02, 3.3732e-03],
         [9.7158e-01, 1.6273e-03, 1.9999e-02,  ..., 9.3682e-01,
          9.1565e-01, 3.3732e-03],
         [9.4741e-03, 9.9512e-01, 9.4000e-01,  ..., 2.1060e-02,
          2.8116e-02, 3.3732e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:27,898 [Process: 0] Synchronize training processes
2024-08-18 19:41:27,898 [Process: 0] Evaluating...
2024-08-18 19:41:27,906 [Process: 0] EPOCH 102:
2024-08-18 19:41:27,908 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:28,989 [Process: 0] Synchronize training processes
2024-08-18 19:41:28,990 [Process: 0] Evaluating...
2024-08-18 19:41:28,991 [Process: 0] EPOCH 103:
2024-08-18 19:41:28,993 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9543, 0.0198, 0.0288,  ..., 0.9684, 0.8724, 0.0183],
         [0.0158, 0.0198, 0.0288,  ..., 0.0157, 0.0432, 0.0183],
         [0.0150, 0.0198, 0.0288,  ..., 0.0079, 0.0456, 0.0183],
         [0.0150, 0.9405, 0.9137,  ..., 0.0079, 0.0387, 0.9451]],
        [[0.9748, 0.0298, 0.0104,  ..., 0.0882, 0.0069, 0.0060],
         [0.0065, 0.0298, 0.0104,  ..., 0.0984, 0.0069, 0.0054],
         [0.0122, 0.0298, 0.0104,  ..., 0.0988, 0.9793, 0.9832],
         [0.0065, 0.9105, 0.9688,  ..., 0.7146, 0.0069, 0.0054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.0987e-02, 1.4016e-02, 4.4634e-04,  ..., 2.8601e-02,
          1.0890e-01, 2.2961e-02],
         [3.0987e-02, 1.5437e-02, 4.4634e-04,  ..., 2.8601e-02,
          1.1089e-01, 2.2961e-02],
         [9.0704e-01, 1.4016e-02, 4.4634e-04,  ..., 9.1394e-01,
          1.9973e-01, 9.3112e-01],
         [3.0987e-02, 9.5653e-01, 9.9866e-01,  ..., 2.8855e-02,
          5.8048e-01, 2.2961e-02]],
        [[2.2835e-02, 4.2647e-03, 3.8576e-03,  ..., 1.3094e-02,
          1.0384e-02, 9.9000e-01],
         [2.2835e-02, 4.2647e-03, 3.8576e-03,  ..., 1.3094e-02,
          1.0384e-02, 3.2441e-03],
         [9.3150e-01, 4.2647e-03, 3.8576e-03,  ..., 9.6072e-01,
          9.6885e-01, 3.5120e-03],
         [2.2835e-02, 9.8721e-01, 9.8843e-01,  ..., 1.3094e-02,
          1.0384e-02, 3.2441e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9306, 0.0416, 0.0116,  ..., 0.9564, 0.8717, 0.0414],
         [0.0231, 0.0358, 0.0116,  ..., 0.0145, 0.0552, 0.0414],
         [0.0231, 0.0358, 0.0116,  ..., 0.0145, 0.0368, 0.0431],
         [0.0231, 0.8868, 0.9651,  ..., 0.0145, 0.0363, 0.8740]],
        [[0.9081, 0.0284, 0.0236,  ..., 0.0397, 0.0037, 0.0182],
         [0.0220, 0.0284, 0.0236,  ..., 0.0397, 0.0037, 0.0182],
         [0.0480, 0.0284, 0.0236,  ..., 0.0429, 0.9889, 0.9453],
         [0.0220, 0.9147, 0.9291,  ..., 0.8777, 0.0037, 0.0182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.7117e-02, 2.4171e-02, 8.0385e-04,  ..., 1.9933e-02,
          1.2556e-01, 1.5093e-02],
         [1.7117e-02, 1.7583e-02, 8.0385e-04,  ..., 1.9933e-02,
          9.6807e-02, 1.5093e-02],
         [9.4865e-01, 1.7583e-02, 8.0385e-04,  ..., 9.4020e-01,
          1.4522e-01, 9.5472e-01],
         [1.7117e-02, 9.4066e-01, 9.9759e-01,  ..., 1.9933e-02,
          6.3241e-01, 1.5093e-02]],
        [[1.5183e-02, 5.0719e-03, 3.0856e-02,  ..., 1.5371e-02,
          2.1004e-02, 9.9258e-01],
         [1.5183e-02, 5.4307e-03, 3.2751e-02,  ..., 1.5371e-02,
          2.1004e-02, 2.4741e-03],
         [9.5445e-01, 5.0719e-03, 2.9430e-02,  ..., 9.5389e-01,
          9.3699e-01, 2.4741e-03],
         [1.5183e-02, 9.8443e-01, 9.0696e-01,  ..., 1.5371e-02,
          2.1004e-02, 2.4741e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:30,073 [Process: 0] Synchronize training processes
2024-08-18 19:41:30,073 [Process: 0] Evaluating...
2024-08-18 19:41:30,075 [Process: 0] EPOCH 104:
2024-08-18 19:41:30,077 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:31,157 [Process: 0] Synchronize training processes
2024-08-18 19:41:31,157 [Process: 0] Evaluating...
2024-08-18 19:41:31,159 [Process: 0] EPOCH 105:
2024-08-18 19:41:31,161 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9003, 0.0397, 0.0183,  ..., 0.9733, 0.9096, 0.0366],
         [0.0316, 0.0397, 0.0176,  ..., 0.0082, 0.0301, 0.0366],
         [0.0379, 0.0404, 0.0176,  ..., 0.0103, 0.0301, 0.0366],
         [0.0302, 0.8802, 0.9465,  ..., 0.0082, 0.0301, 0.8901]],
        [[0.9143, 0.0082, 0.0258,  ..., 0.0239, 0.0182, 0.0011],
         [0.0214, 0.0082, 0.0258,  ..., 0.0239, 0.0182, 0.0011],
         [0.0429, 0.0082, 0.0258,  ..., 0.0239, 0.9455, 0.9968],
         [0.0214, 0.9754, 0.9226,  ..., 0.9283, 0.0182, 0.0011]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5448e-02, 1.8846e-03, 8.5552e-04,  ..., 2.0116e-02,
          1.5481e-01, 2.1117e-02],
         [2.5448e-02, 1.8846e-03, 8.5552e-04,  ..., 2.0116e-02,
          1.2197e-01, 2.1117e-02],
         [9.2366e-01, 1.8846e-03, 8.5552e-04,  ..., 9.3965e-01,
          4.0020e-01, 9.3665e-01],
         [2.5448e-02, 9.9435e-01, 9.9743e-01,  ..., 2.0116e-02,
          3.2302e-01, 2.1117e-02]],
        [[2.2207e-02, 2.9693e-02, 7.0476e-03,  ..., 2.8384e-02,
          1.9419e-02, 9.9051e-01],
         [2.2207e-02, 1.7732e-02, 7.0476e-03,  ..., 2.8384e-02,
          1.9419e-02, 3.1647e-03],
         [9.3338e-01, 1.7732e-02, 7.0476e-03,  ..., 9.1485e-01,
          9.4174e-01, 3.1647e-03],
         [2.2207e-02, 9.3484e-01, 9.7886e-01,  ..., 2.8384e-02,
          1.9419e-02, 3.1647e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9290, 0.0482, 0.0198,  ..., 0.9775, 0.9506, 0.0102],
         [0.0210, 0.0482, 0.0198,  ..., 0.0092, 0.0193, 0.0102],
         [0.0291, 0.0482, 0.0198,  ..., 0.0067, 0.0150, 0.0102],
         [0.0210, 0.8554, 0.9405,  ..., 0.0067, 0.0150, 0.9695]],
        [[0.9775, 0.0082, 0.0164,  ..., 0.0186, 0.0051, 0.0302],
         [0.0064, 0.0082, 0.0164,  ..., 0.0186, 0.0051, 0.0302],
         [0.0098, 0.0082, 0.0164,  ..., 0.0186, 0.9846, 0.9094],
         [0.0064, 0.9754, 0.9508,  ..., 0.9441, 0.0051, 0.0302]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-18 19:41:32,246 [Process: 0] Synchronize training processes
2024-08-18 19:41:32,247 [Process: 0] Evaluating...
2024-08-18 19:41:32,248 [Process: 0] EPOCH 106:
2024-08-18 19:41:32,250 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:33,290 [Process: 0] Synchronize training processes
2024-08-18 19:41:33,291 [Process: 0] Evaluating...
2024-08-18 19:41:33,292 [Process: 0] EPOCH 107:
2024-08-18 19:41:33,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.5819e-02, 1.7211e-02, 5.7384e-04,  ..., 2.2221e-02,
          1.3914e-01, 2.7990e-02],
         [2.5819e-02, 1.3588e-02, 5.7384e-04,  ..., 2.2221e-02,
          1.4785e-01, 2.7990e-02],
         [9.2254e-01, 1.3588e-02, 5.7384e-04,  ..., 9.3334e-01,
          2.4636e-01, 9.1603e-01],
         [2.5819e-02, 9.5561e-01, 9.9828e-01,  ..., 2.2221e-02,
          4.6666e-01, 2.7990e-02]],
        [[2.6726e-02, 5.7543e-02, 6.7780e-03,  ..., 2.8576e-02,
          4.2169e-02, 9.8182e-01],
         [2.6726e-02, 3.8959e-02, 6.7780e-03,  ..., 2.8576e-02,
          4.2169e-02, 8.0821e-03],
         [9.1982e-01, 3.8959e-02, 6.7780e-03,  ..., 9.1427e-01,
          8.7349e-01, 5.0492e-03],
         [2.6726e-02, 8.6454e-01, 9.7967e-01,  ..., 2.8576e-02,
          4.2169e-02, 5.0492e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9826, 0.0274, 0.0856,  ..., 0.9955, 0.9436, 0.0357],
         [0.0058, 0.0282, 0.0533,  ..., 0.0015, 0.0218, 0.0357],
         [0.0058, 0.0274, 0.0533,  ..., 0.0016, 0.0173, 0.0395],
         [0.0058, 0.9170, 0.8078,  ..., 0.0015, 0.0173, 0.8891]],
        [[0.9777, 0.0251, 0.0196,  ..., 0.0264, 0.0095, 0.0150],
         [0.0074, 0.0251, 0.0196,  ..., 0.0242, 0.0095, 0.0150],
         [0.0074, 0.0251, 0.0196,  ..., 0.0242, 0.9716, 0.9550],
         [0.0074, 0.9248, 0.9413,  ..., 0.9253, 0.0095, 0.0150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0332, 0.0052, 0.0016,  ..., 0.0270, 0.0928, 0.0218],
         [0.0332, 0.0052, 0.0016,  ..., 0.0270, 0.1026, 0.0218],
         [0.9004, 0.0052, 0.0016,  ..., 0.9190, 0.0947, 0.9347],
         [0.0332, 0.9844, 0.9953,  ..., 0.0270, 0.7100, 0.0218]],
        [[0.0145, 0.0013, 0.0027,  ..., 0.0189, 0.0344, 0.9825],
         [0.0145, 0.0013, 0.0027,  ..., 0.0189, 0.0344, 0.0062],
         [0.9565, 0.0013, 0.0027,  ..., 0.9434, 0.8967, 0.0056],
         [0.0145, 0.9961, 0.9918,  ..., 0.0189, 0.0344, 0.0056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9298, 0.0314, 0.0240,  ..., 0.9925, 0.9188, 0.0507],
         [0.0227, 0.0314, 0.0240,  ..., 0.0025, 0.0341, 0.0505],
         [0.0249, 0.0314, 0.0241,  ..., 0.0025, 0.0236, 0.0512],
         [0.0227, 0.9058, 0.9279,  ..., 0.0025, 0.0236, 0.8476]],
        [[0.9821, 0.0168, 0.0289,  ..., 0.0378, 0.0035, 0.0073],
         [0.0055, 0.0168, 0.0260,  ..., 0.0370, 0.0035, 0.0073],
         [0.0068, 0.0168, 0.0260,  ..., 0.0451, 0.9896, 0.9782],
         [0.0055, 0.9497, 0.9192,  ..., 0.8800, 0.0035, 0.0073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:34,374 [Process: 0] Synchronize training processes
2024-08-18 19:41:34,374 [Process: 0] Evaluating...
2024-08-18 19:41:34,376 [Process: 0] EPOCH 108:
2024-08-18 19:41:34,378 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:35,465 [Process: 0] Synchronize training processes
2024-08-18 19:41:35,466 [Process: 0] Evaluating...
2024-08-18 19:41:35,467 [Process: 0] EPOCH 109:
2024-08-18 19:41:35,469 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.3723e-02, 6.4669e-03, 4.7522e-04,  ..., 3.0762e-02,
          9.0064e-02, 3.5143e-02],
         [4.4645e-02, 6.1378e-03, 4.7522e-04,  ..., 3.0762e-02,
          8.9545e-02, 3.5143e-02],
         [8.5699e-01, 6.1378e-03, 4.7522e-04,  ..., 9.0771e-01,
          6.9789e-01, 8.8986e-01],
         [4.4645e-02, 9.8126e-01, 9.9857e-01,  ..., 3.0762e-02,
          1.2250e-01, 3.9858e-02]],
        [[1.0954e-02, 5.7770e-03, 1.5625e-02,  ..., 2.2066e-02,
          1.7718e-02, 9.8905e-01],
         [1.0954e-02, 4.2971e-03, 1.5625e-02,  ..., 2.2066e-02,
          1.7718e-02, 3.6486e-03],
         [9.6714e-01, 4.2971e-03, 1.5625e-02,  ..., 9.3380e-01,
          9.4685e-01, 3.6486e-03],
         [1.0954e-02, 9.8563e-01, 9.5313e-01,  ..., 2.2066e-02,
          1.7718e-02, 3.6486e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9822, 0.0182, 0.0256,  ..., 0.9678, 0.8273, 0.0173],
         [0.0059, 0.0182, 0.0256,  ..., 0.0107, 0.0705, 0.0173],
         [0.0059, 0.0182, 0.0256,  ..., 0.0107, 0.0511, 0.0173],
         [0.0059, 0.9453, 0.9232,  ..., 0.0107, 0.0511, 0.9480]],
        [[0.9638, 0.0252, 0.0408,  ..., 0.0634, 0.0216, 0.0146],
         [0.0106, 0.0252, 0.0408,  ..., 0.0634, 0.0216, 0.0146],
         [0.0149, 0.0252, 0.0408,  ..., 0.0910, 0.9351, 0.9561],
         [0.0106, 0.9243, 0.8776,  ..., 0.7823, 0.0216, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0357, 0.0047, 0.0016,  ..., 0.0386, 0.1043, 0.0265],
         [0.0357, 0.0047, 0.0016,  ..., 0.0386, 0.1028, 0.0265],
         [0.8930, 0.0047, 0.0016,  ..., 0.8828, 0.6245, 0.9205],
         [0.0357, 0.9860, 0.9952,  ..., 0.0401, 0.1684, 0.0265]],
        [[0.0294, 0.0038, 0.0079,  ..., 0.0555, 0.0153, 0.9817],
         [0.0294, 0.0038, 0.0079,  ..., 0.0532, 0.0153, 0.0061],
         [0.9118, 0.0038, 0.0079,  ..., 0.8277, 0.9542, 0.0061],
         [0.0294, 0.9887, 0.9763,  ..., 0.0635, 0.0153, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9212, 0.0230, 0.0249,  ..., 0.9805, 0.7259, 0.0198],
         [0.0257, 0.0230, 0.0249,  ..., 0.0079, 0.0693, 0.0198],
         [0.0274, 0.0230, 0.0249,  ..., 0.0058, 0.0903, 0.0198],
         [0.0257, 0.9309, 0.9254,  ..., 0.0058, 0.1144, 0.9405]],
        [[0.9447, 0.0637, 0.0196,  ..., 0.0463, 0.0071, 0.0094],
         [0.0161, 0.0557, 0.0196,  ..., 0.0463, 0.0071, 0.0094],
         [0.0232, 0.0619, 0.0218,  ..., 0.0505, 0.9788, 0.9719],
         [0.0161, 0.8186, 0.9390,  ..., 0.8570, 0.0071, 0.0094]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:36,549 [Process: 0] Synchronize training processes
2024-08-18 19:41:36,549 [Process: 0] Evaluating...
2024-08-18 19:41:36,551 [Process: 0] EPOCH 110:
2024-08-18 19:41:36,552 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.5478e-02, 2.1144e-02, 8.3438e-04,  ..., 1.2914e-02,
          1.6316e-01, 2.0952e-02],
         [6.3891e-02, 2.0400e-02, 8.3438e-04,  ..., 1.2914e-02,
          1.5840e-01, 2.0952e-02],
         [7.8728e-01, 2.0400e-02, 8.3438e-04,  ..., 9.6126e-01,
          1.8098e-01, 9.3714e-01],
         [8.3349e-02, 9.3806e-01, 9.9750e-01,  ..., 1.2914e-02,
          4.9746e-01, 2.0952e-02]],
        [[2.7947e-02, 7.3879e-03, 3.6690e-03,  ..., 3.3557e-02,
          3.2420e-02, 9.8718e-01],
         [2.7947e-02, 8.1183e-03, 4.0173e-03,  ..., 3.3557e-02,
          3.2420e-02, 4.2749e-03],
         [9.0996e-01, 7.3879e-03, 3.6690e-03,  ..., 8.9533e-01,
          9.0274e-01, 4.2749e-03],
         [3.4145e-02, 9.7711e-01, 9.8864e-01,  ..., 3.7560e-02,
          3.2420e-02, 4.2749e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8774, 0.0341, 0.0415,  ..., 0.9267, 0.9024, 0.0237],
         [0.0339, 0.0341, 0.0420,  ..., 0.0299, 0.0325, 0.0237],
         [0.0547, 0.0341, 0.0415,  ..., 0.0217, 0.0325, 0.0237],
         [0.0339, 0.8976, 0.8749,  ..., 0.0217, 0.0325, 0.9289]],
        [[0.9826, 0.0196, 0.0331,  ..., 0.0440, 0.0028, 0.0025],
         [0.0058, 0.0196, 0.0331,  ..., 0.0484, 0.0028, 0.0025],
         [0.0058, 0.0196, 0.0331,  ..., 0.0440, 0.9917, 0.9925],
         [0.0058, 0.9413, 0.9006,  ..., 0.8635, 0.0028, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.4385e-02, 1.0961e-02, 4.6609e-04,  ..., 1.3585e-02,
          1.1715e-01, 2.9623e-02],
         [5.4385e-02, 1.0961e-02, 4.6609e-04,  ..., 1.3585e-02,
          1.2722e-01, 2.9623e-02],
         [8.1779e-01, 1.0961e-02, 4.6609e-04,  ..., 9.5925e-01,
          8.6819e-02, 9.0911e-01],
         [7.3443e-02, 9.6712e-01, 9.9860e-01,  ..., 1.3585e-02,
          6.6881e-01, 3.1642e-02]],
        [[2.3372e-02, 4.4329e-04, 1.4077e-03,  ..., 4.0568e-02,
          3.2627e-02, 9.8935e-01],
         [2.3372e-02, 4.4329e-04, 1.4077e-03,  ..., 4.0568e-02,
          3.2627e-02, 3.5488e-03],
         [9.2988e-01, 4.4329e-04, 1.4077e-03,  ..., 8.7251e-01,
          9.0212e-01, 3.5488e-03],
         [2.3372e-02, 9.9867e-01, 9.9578e-01,  ..., 4.6354e-02,
          3.2627e-02, 3.5488e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8906, 0.0135, 0.0298,  ..., 0.9764, 0.9384, 0.0306],
         [0.0332, 0.0135, 0.0298,  ..., 0.0079, 0.0258, 0.0306],
         [0.0431, 0.0135, 0.0298,  ..., 0.0079, 0.0179, 0.0306],
         [0.0332, 0.9595, 0.9107,  ..., 0.0079, 0.0179, 0.9082]],
        [[0.9565, 0.0229, 0.0163,  ..., 0.0385, 0.0058, 0.0018],
         [0.0145, 0.0229, 0.0163,  ..., 0.0385, 0.0058, 0.0018],
         [0.0145, 0.0229, 0.0163,  ..., 0.0385, 0.9825, 0.9945],
         [0.0145, 0.9312, 0.9511,  ..., 0.8845, 0.0058, 0.0018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:37,635 [Process: 0] Synchronize training processes
2024-08-18 19:41:37,635 [Process: 0] Evaluating...
2024-08-18 19:41:37,637 [Process: 0] EPOCH 111:
2024-08-18 19:41:37,639 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:38,719 [Process: 0] Synchronize training processes
2024-08-18 19:41:38,719 [Process: 0] Evaluating...
2024-08-18 19:41:38,725 [Process: 0] EPOCH 112:
2024-08-18 19:41:38,727 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0313, 0.0157, 0.0024,  ..., 0.0152, 0.0796, 0.0297],
         [0.0313, 0.0116, 0.0024,  ..., 0.0152, 0.0710, 0.0297],
         [0.9061, 0.0116, 0.0024,  ..., 0.9545, 0.0810, 0.9110],
         [0.0313, 0.9610, 0.9928,  ..., 0.0152, 0.7684, 0.0297]],
        [[0.0119, 0.0014, 0.0015,  ..., 0.0183, 0.0473, 0.9804],
         [0.0119, 0.0014, 0.0015,  ..., 0.0183, 0.0439, 0.0065],
         [0.9644, 0.0014, 0.0015,  ..., 0.9452, 0.8535, 0.0065],
         [0.0119, 0.9957, 0.9954,  ..., 0.0183, 0.0553, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9496, 0.0483, 0.0157,  ..., 0.9505, 0.9457, 0.0429],
         [0.0160, 0.0526, 0.0157,  ..., 0.0196, 0.0203, 0.0382],
         [0.0184, 0.0483, 0.0157,  ..., 0.0149, 0.0170, 0.0392],
         [0.0160, 0.8507, 0.9530,  ..., 0.0149, 0.0170, 0.8797]],
        [[0.9928, 0.0116, 0.0146,  ..., 0.0508, 0.0041, 0.0113],
         [0.0024, 0.0116, 0.0146,  ..., 0.0508, 0.0041, 0.0113],
         [0.0024, 0.0116, 0.0146,  ..., 0.0508, 0.9876, 0.9662],
         [0.0024, 0.9651, 0.9563,  ..., 0.8477, 0.0041, 0.0113]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0195, 0.0077, 0.0013,  ..., 0.0446, 0.1262, 0.0317],
         [0.0195, 0.0077, 0.0013,  ..., 0.0446, 0.0960, 0.0317],
         [0.9416, 0.0077, 0.0013,  ..., 0.8655, 0.2168, 0.9050],
         [0.0195, 0.9768, 0.9961,  ..., 0.0453, 0.5611, 0.0317]],
        [[0.0126, 0.0016, 0.0402,  ..., 0.0432, 0.0351, 0.9756],
         [0.0126, 0.0016, 0.0408,  ..., 0.0432, 0.0351, 0.0081],
         [0.9621, 0.0016, 0.0402,  ..., 0.8670, 0.8899, 0.0081],
         [0.0126, 0.9953, 0.8788,  ..., 0.0467, 0.0398, 0.0081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:39,868 [Process: 0] Synchronize training processes
2024-08-18 19:41:39,868 [Process: 0] Evaluating...
2024-08-18 19:41:39,870 [Process: 0] EPOCH 113:
2024-08-18 19:41:39,872 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:41,026 [Process: 0] Synchronize training processes
2024-08-18 19:41:41,026 [Process: 0] Evaluating...
2024-08-18 19:41:41,028 [Process: 0] EPOCH 114:
2024-08-18 19:41:41,030 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9556, 0.0157, 0.0369,  ..., 0.9883, 0.9404, 0.0115],
         [0.0148, 0.0157, 0.0369,  ..., 0.0040, 0.0248, 0.0115],
         [0.0148, 0.0157, 0.0381,  ..., 0.0039, 0.0174, 0.0115],
         [0.0148, 0.9529, 0.8882,  ..., 0.0039, 0.0174, 0.9655]],
        [[0.9586, 0.0122, 0.0086,  ..., 0.0610, 0.0053, 0.0016],
         [0.0138, 0.0122, 0.0086,  ..., 0.0610, 0.0053, 0.0016],
         [0.0138, 0.0122, 0.0086,  ..., 0.0827, 0.9841, 0.9951],
         [0.0138, 0.9633, 0.9741,  ..., 0.7953, 0.0053, 0.0016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0265, 0.0066, 0.0014,  ..., 0.0145, 0.0658, 0.0152],
         [0.0265, 0.0066, 0.0014,  ..., 0.0145, 0.0485, 0.0152],
         [0.9202, 0.0066, 0.0014,  ..., 0.9564, 0.0592, 0.9543],
         [0.0268, 0.9801, 0.9959,  ..., 0.0145, 0.8265, 0.0152]],
        [[0.0200, 0.0072, 0.0044,  ..., 0.0090, 0.0356, 0.9938],
         [0.0200, 0.0072, 0.0044,  ..., 0.0090, 0.0356, 0.0021],
         [0.9400, 0.0072, 0.0044,  ..., 0.9731, 0.8932, 0.0021],
         [0.0200, 0.9783, 0.9869,  ..., 0.0090, 0.0356, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9898, 0.0112, 0.0673,  ..., 0.9896, 0.7805, 0.0272],
         [0.0034, 0.0112, 0.0531,  ..., 0.0035, 0.0665, 0.0271],
         [0.0034, 0.0112, 0.0531,  ..., 0.0035, 0.0640, 0.0271],
         [0.0034, 0.9663, 0.8264,  ..., 0.0035, 0.0890, 0.9186]],
        [[0.9916, 0.0251, 0.0183,  ..., 0.0298, 0.0041, 0.0078],
         [0.0028, 0.0251, 0.0183,  ..., 0.0292, 0.0041, 0.0096],
         [0.0028, 0.0251, 0.0183,  ..., 0.0292, 0.9877, 0.9749],
         [0.0028, 0.9248, 0.9451,  ..., 0.9117, 0.0041, 0.0078]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4216e-03, 1.3363e-02, 5.4043e-04,  ..., 1.8465e-02,
          1.0270e-01, 3.1047e-02],
         [8.4216e-03, 1.3363e-02, 5.4043e-04,  ..., 1.8465e-02,
          6.8240e-02, 2.8659e-02],
         [9.7474e-01, 1.3363e-02, 5.4043e-04,  ..., 9.4460e-01,
          7.2398e-01, 9.1164e-01],
         [8.4216e-03, 9.5991e-01, 9.9838e-01,  ..., 1.8465e-02,
          1.0509e-01, 2.8659e-02]],
        [[9.7222e-03, 4.1439e-03, 1.8413e-02,  ..., 1.6135e-02,
          3.5692e-02, 9.7141e-01],
         [9.7222e-03, 4.1439e-03, 1.8413e-02,  ..., 1.6135e-02,
          2.7582e-02, 9.5297e-03],
         [9.7083e-01, 4.1439e-03, 1.8413e-02,  ..., 9.5159e-01,
          9.0914e-01, 9.5297e-03],
         [9.7222e-03, 9.8757e-01, 9.4476e-01,  ..., 1.6135e-02,
          2.7582e-02, 9.5297e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:42,183 [Process: 0] Synchronize training processes
2024-08-18 19:41:42,183 [Process: 0] Evaluating...
2024-08-18 19:41:42,185 [Process: 0] EPOCH 115:
2024-08-18 19:41:42,186 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:43,339 [Process: 0] Synchronize training processes
2024-08-18 19:41:43,340 [Process: 0] Evaluating...
2024-08-18 19:41:43,341 [Process: 0] EPOCH 116:
2024-08-18 19:41:43,343 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9701e-01, 2.6050e-02, 2.2322e-02,  ..., 9.8769e-01,
          7.5943e-01, 3.5130e-02],
         [9.9540e-04, 2.6050e-02, 2.2322e-02,  ..., 4.1044e-03,
          6.4740e-02, 3.1486e-02],
         [9.9540e-04, 2.6050e-02, 2.3472e-02,  ..., 4.1044e-03,
          7.7861e-02, 3.4367e-02],
         [9.9540e-04, 9.2185e-01, 9.3188e-01,  ..., 4.1044e-03,
          9.7972e-02, 8.9902e-01]],
        [[9.8948e-01, 7.6906e-03, 3.6889e-02,  ..., 4.0607e-02,
          1.7987e-02, 8.0257e-03],
         [3.5063e-03, 7.6906e-03, 3.6889e-02,  ..., 4.0607e-02,
          1.7987e-02, 8.0257e-03],
         [3.5063e-03, 7.6906e-03, 5.6383e-02,  ..., 5.9476e-02,
          9.4604e-01, 9.7592e-01],
         [3.5063e-03, 9.7693e-01, 8.6984e-01,  ..., 8.5931e-01,
          1.7987e-02, 8.0257e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0196, 0.0079, 0.0027,  ..., 0.0212, 0.1216, 0.0466],
         [0.0196, 0.0079, 0.0027,  ..., 0.0212, 0.1048, 0.0409],
         [0.9411, 0.0079, 0.0027,  ..., 0.9363, 0.3523, 0.8716],
         [0.0196, 0.9763, 0.9920,  ..., 0.0212, 0.4213, 0.0409]],
        [[0.0082, 0.0021, 0.1359,  ..., 0.0172, 0.0477, 0.9937],
         [0.0082, 0.0021, 0.0668,  ..., 0.0172, 0.0463, 0.0021],
         [0.9753, 0.0021, 0.0887,  ..., 0.9484, 0.8463, 0.0021],
         [0.0082, 0.9938, 0.7086,  ..., 0.0172, 0.0597, 0.0021]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9766, 0.0282, 0.0072,  ..., 0.9322, 0.8640, 0.0229],
         [0.0059, 0.0282, 0.0072,  ..., 0.0207, 0.0361, 0.0229],
         [0.0116, 0.0282, 0.0072,  ..., 0.0264, 0.0532, 0.0229],
         [0.0059, 0.9155, 0.9783,  ..., 0.0207, 0.0467, 0.9314]],
        [[0.7475, 0.0142, 0.0193,  ..., 0.0358, 0.0096, 0.0057],
         [0.0806, 0.0142, 0.0193,  ..., 0.0358, 0.0096, 0.0057],
         [0.1254, 0.0142, 0.0193,  ..., 0.0374, 0.9711, 0.9828],
         [0.0464, 0.9575, 0.9421,  ..., 0.8909, 0.0096, 0.0057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:44,495 [Process: 0] Synchronize training processes
2024-08-18 19:41:44,495 [Process: 0] Evaluating...
2024-08-18 19:41:44,497 [Process: 0] EPOCH 117:
2024-08-18 19:41:44,499 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0270, 0.0047, 0.0011,  ..., 0.0430, 0.1622, 0.0240],
         [0.0270, 0.0034, 0.0011,  ..., 0.0430, 0.0958, 0.0240],
         [0.9190, 0.0034, 0.0011,  ..., 0.8609, 0.1861, 0.9280],
         [0.0270, 0.9886, 0.9968,  ..., 0.0531, 0.5559, 0.0240]],
        [[0.0032, 0.0031, 0.1523,  ..., 0.0185, 0.0250, 0.9803],
         [0.0032, 0.0031, 0.0759,  ..., 0.0185, 0.0250, 0.0066],
         [0.9904, 0.0031, 0.1378,  ..., 0.9438, 0.9251, 0.0066],
         [0.0032, 0.9906, 0.6340,  ..., 0.0193, 0.0250, 0.0066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9393, 0.0097, 0.0189,  ..., 0.9941, 0.9645, 0.0114],
         [0.0154, 0.0097, 0.0189,  ..., 0.0020, 0.0134, 0.0114],
         [0.0299, 0.0097, 0.0189,  ..., 0.0020, 0.0111, 0.0114],
         [0.0154, 0.9708, 0.9433,  ..., 0.0020, 0.0111, 0.9658]],
        [[0.7319, 0.0039, 0.0062,  ..., 0.0599, 0.0049, 0.0047],
         [0.0467, 0.0039, 0.0062,  ..., 0.0820, 0.0049, 0.0047],
         [0.1748, 0.0039, 0.0062,  ..., 0.0599, 0.9852, 0.9859],
         [0.0467, 0.9884, 0.9814,  ..., 0.7981, 0.0049, 0.0047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4422e-02, 3.6782e-03, 9.1949e-04,  ..., 2.9477e-02,
          1.6406e-01, 2.7696e-02],
         [2.4422e-02, 3.6782e-03, 9.1949e-04,  ..., 2.9477e-02,
          1.0738e-01, 2.7696e-02],
         [9.2674e-01, 3.6782e-03, 9.1949e-04,  ..., 9.1142e-01,
          5.3511e-01, 9.1286e-01],
         [2.4422e-02, 9.8897e-01, 9.9724e-01,  ..., 2.9628e-02,
          1.9345e-01, 3.1752e-02]],
        [[1.1408e-02, 2.1370e-03, 1.9826e-02,  ..., 3.0620e-02,
          1.2845e-02, 9.9639e-01],
         [1.1408e-02, 2.1370e-03, 1.9826e-02,  ..., 3.0620e-02,
          1.2845e-02, 1.2048e-03],
         [9.6578e-01, 2.1370e-03, 1.9826e-02,  ..., 9.0814e-01,
          9.6146e-01, 1.2048e-03],
         [1.1408e-02, 9.9359e-01, 9.4052e-01,  ..., 3.0620e-02,
          1.2845e-02, 1.2048e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7677, 0.0096, 0.0111,  ..., 0.9763, 0.8577, 0.0093],
         [0.0406, 0.0096, 0.0111,  ..., 0.0079, 0.0426, 0.0093],
         [0.1512, 0.0096, 0.0111,  ..., 0.0079, 0.0570, 0.0093],
         [0.0406, 0.9713, 0.9667,  ..., 0.0079, 0.0426, 0.9721]],
        [[0.8661, 0.0257, 0.0328,  ..., 0.0330, 0.0097, 0.0077],
         [0.0185, 0.0257, 0.0328,  ..., 0.0330, 0.0097, 0.0077],
         [0.0970, 0.0257, 0.0328,  ..., 0.0330, 0.9710, 0.9770],
         [0.0185, 0.9228, 0.9016,  ..., 0.9009, 0.0097, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:45,651 [Process: 0] Synchronize training processes
2024-08-18 19:41:45,651 [Process: 0] Evaluating...
2024-08-18 19:41:45,653 [Process: 0] EPOCH 118:
2024-08-18 19:41:45,655 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:46,808 [Process: 0] Synchronize training processes
2024-08-18 19:41:46,809 [Process: 0] Evaluating...
2024-08-18 19:41:46,810 [Process: 0] EPOCH 119:
2024-08-18 19:41:46,812 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.7634e-02, 7.6542e-03, 7.0230e-04,  ..., 3.1087e-02,
          2.5117e-01, 1.8947e-02],
         [7.4337e-02, 7.6542e-03, 7.0230e-04,  ..., 3.1087e-02,
          1.1234e-01, 1.8947e-02],
         [7.1415e-01, 7.6542e-03, 7.0230e-04,  ..., 9.0361e-01,
          4.0959e-01, 9.4316e-01],
         [1.1388e-01, 9.7704e-01, 9.9789e-01,  ..., 3.4219e-02,
          2.2689e-01, 1.8947e-02]],
        [[6.0910e-04, 1.1970e-03, 1.5479e-02,  ..., 7.0754e-03,
          3.8536e-02, 9.9710e-01],
         [6.0910e-04, 1.1970e-03, 1.5479e-02,  ..., 7.0754e-03,
          3.7629e-02, 9.6623e-04],
         [9.9817e-01, 1.1970e-03, 1.5479e-02,  ..., 9.7877e-01,
          8.7794e-01, 9.6623e-04],
         [6.0910e-04, 9.9641e-01, 9.5356e-01,  ..., 7.0754e-03,
          4.5899e-02, 9.6623e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9644, 0.0146, 0.0278,  ..., 0.9819, 0.8500, 0.0503],
         [0.0088, 0.0146, 0.0278,  ..., 0.0049, 0.0365, 0.0469],
         [0.0181, 0.0146, 0.0278,  ..., 0.0082, 0.0572, 0.0493],
         [0.0088, 0.9563, 0.9165,  ..., 0.0049, 0.0562, 0.8535]],
        [[0.8860, 0.0116, 0.0337,  ..., 0.0466, 0.0084, 0.0121],
         [0.0172, 0.0116, 0.0337,  ..., 0.0479, 0.0084, 0.0121],
         [0.0797, 0.0116, 0.0337,  ..., 0.0520, 0.9749, 0.9636],
         [0.0172, 0.9653, 0.8989,  ..., 0.8535, 0.0084, 0.0121]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3519e-01, 4.3550e-02, 8.8600e-04,  ..., 1.9582e-02,
          2.1136e-01, 2.8744e-02],
         [9.6813e-02, 4.3550e-02, 8.8600e-04,  ..., 1.9582e-02,
          1.3522e-01, 2.8744e-02],
         [5.7184e-01, 4.3550e-02, 8.8600e-04,  ..., 9.4126e-01,
          3.2723e-01, 9.1367e-01],
         [1.9616e-01, 8.6935e-01, 9.9734e-01,  ..., 1.9582e-02,
          3.2619e-01, 2.8839e-02]],
        [[1.3383e-03, 1.8176e-03, 1.2566e-02,  ..., 1.6902e-02,
          3.3636e-02, 9.9294e-01],
         [1.3383e-03, 1.8176e-03, 1.2566e-02,  ..., 1.6902e-02,
          3.3636e-02, 2.3537e-03],
         [9.9599e-01, 1.8176e-03, 1.2566e-02,  ..., 9.4929e-01,
          8.8828e-01, 2.3537e-03],
         [1.3383e-03, 9.9455e-01, 9.6230e-01,  ..., 1.6902e-02,
          4.4446e-02, 2.3537e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:47,963 [Process: 0] Synchronize training processes
2024-08-18 19:41:47,963 [Process: 0] Evaluating...
2024-08-18 19:41:47,965 [Process: 0] EPOCH 120:
2024-08-18 19:41:47,968 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-18 19:41:49,120 [Process: 0] Synchronize training processes
2024-08-18 19:41:49,120 [Process: 0] Evaluating...
2024-08-18 19:41:49,122 [Process: 0] EPOCH 121:
2024-08-18 19:41:49,124 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9625, 0.0502, 0.0133,  ..., 0.9866, 0.9392, 0.0224],
         [0.0092, 0.0453, 0.0133,  ..., 0.0046, 0.0154, 0.0224],
         [0.0191, 0.0409, 0.0133,  ..., 0.0044, 0.0301, 0.0224],
         [0.0092, 0.8636, 0.9601,  ..., 0.0044, 0.0154, 0.9327]],
        [[0.9084, 0.0138, 0.0286,  ..., 0.0237, 0.0038, 0.0165],
         [0.0105, 0.0138, 0.0318,  ..., 0.0237, 0.0038, 0.0165],
         [0.0706, 0.0138, 0.0286,  ..., 0.0237, 0.9886, 0.9506],
         [0.0105, 0.9587, 0.9110,  ..., 0.9288, 0.0038, 0.0165]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9875e-02, 9.9798e-03, 7.7210e-04,  ..., 4.7412e-02,
          2.0578e-01, 1.3987e-02],
         [3.5673e-02, 9.5152e-03, 7.7210e-04,  ..., 3.9025e-02,
          1.2266e-01, 1.3987e-02],
         [8.8782e-01, 9.5152e-03, 7.7210e-04,  ..., 8.6641e-01,
          3.4136e-01, 9.5804e-01],
         [3.6631e-02, 9.7099e-01, 9.9768e-01,  ..., 4.7154e-02,
          3.3021e-01, 1.3987e-02]],
        [[1.4418e-02, 2.1392e-03, 4.8605e-02,  ..., 1.4592e-02,
          2.8877e-02, 9.4937e-01],
         [1.4418e-02, 2.1392e-03, 4.0023e-02,  ..., 1.4592e-02,
          2.8877e-02, 1.4855e-02],
         [9.5675e-01, 2.1392e-03, 4.0023e-02,  ..., 9.5622e-01,
          9.1337e-01, 1.4855e-02],
         [1.4418e-02, 9.9358e-01, 8.7135e-01,  ..., 1.4592e-02,
          2.8877e-02, 2.0923e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9780, 0.0076, 0.0146,  ..., 0.9729, 0.9426, 0.0204],
         [0.0073, 0.0076, 0.0146,  ..., 0.0101, 0.0182, 0.0204],
         [0.0073, 0.0076, 0.0146,  ..., 0.0085, 0.0210, 0.0204],
         [0.0073, 0.9772, 0.9563,  ..., 0.0085, 0.0182, 0.9387]],
        [[0.9338, 0.0140, 0.0104,  ..., 0.0266, 0.0038, 0.0022],
         [0.0185, 0.0140, 0.0104,  ..., 0.0266, 0.0038, 0.0022],
         [0.0292, 0.0140, 0.0104,  ..., 0.0266, 0.9886, 0.9934],
         [0.0185, 0.9580, 0.9687,  ..., 0.9202, 0.0038, 0.0022]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.8746e-02, 8.9050e-03, 2.5378e-03,  ..., 2.6787e-02,
          1.8159e-01, 1.6736e-02],
         [2.8746e-02, 8.9050e-03, 2.5378e-03,  ..., 2.5445e-02,
          1.1704e-01, 1.6736e-02],
         [9.1376e-01, 8.9050e-03, 2.5378e-03,  ..., 9.2232e-01,
          3.9493e-01, 9.4979e-01],
         [2.8746e-02, 9.7328e-01, 9.9239e-01,  ..., 2.5445e-02,
          3.0644e-01, 1.6736e-02]],
        [[1.4532e-02, 4.8533e-04, 5.2134e-03,  ..., 1.3521e-02,
          1.9267e-02, 9.9736e-01],
         [1.4532e-02, 4.8533e-04, 5.2134e-03,  ..., 1.3521e-02,
          1.9267e-02, 8.7918e-04],
         [9.5640e-01, 4.8533e-04, 5.2134e-03,  ..., 9.5944e-01,
          9.4220e-01, 8.7918e-04],
         [1.4532e-02, 9.9854e-01, 9.8436e-01,  ..., 1.3521e-02,
          1.9267e-02, 8.7918e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-18 19:41:50,277 [Process: 0] Synchronize training processes
2024-08-18 19:41:50,278 [Process: 0] Evaluating...
2024-08-18 19:41:50,285 [Process: 0] EPOCH 122:
2024-08-18 19:41:50,286 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in __getitem__
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 189, in <listcomp>
    yellow_indices = [i for i, color in enumerate(colors_ref) if is_yellow(color)]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 55, in is_yellow
    return (color[0] > 1 - tolerance and color[1] > 1 - tolerance and color[2] < tolerance)
KeyboardInterrupt
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True