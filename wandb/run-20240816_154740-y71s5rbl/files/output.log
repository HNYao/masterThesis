2024-08-16 15:47:44,648 [Worker 0] Is distributed: False
2024-08-16 15:47:44,648 [Process: 0] Starting training
2024-08-16 15:47:44,648 [Process: 0] EPOCH 1:
2024-08-16 15:47:44,651 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 4.3354e-01,
          2.0620e-01, 4.5928e-01],
         [2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 3.0070e-01,
          2.0620e-01, 1.8024e-01],
         [2.8603e-01, 6.5663e-01, 2.5000e-01,  ..., 1.3288e-01,
          3.8139e-01, 1.8024e-01],
         [2.3799e-01, 1.1446e-01, 2.5000e-01,  ..., 1.3288e-01,
          2.0620e-01, 1.8024e-01]],
        [[1.6186e-01, 4.9629e-01, 1.0041e-05,  ..., 2.4907e-01,
          3.8768e-01, 2.1944e-01],
         [1.5479e-01, 1.4618e-01, 3.8744e-04,  ..., 4.6661e-01,
          3.1204e-01, 3.4169e-01],
         [5.2856e-01, 2.2366e-01, 9.9488e-01,  ..., 1.1604e-01,
          1.5014e-01, 2.1944e-01],
         [1.5479e-01, 1.3387e-01, 4.7246e-03,  ..., 1.6828e-01,
          1.5014e-01, 2.1944e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:47:47,220 [Process: 0] Synchronize training processes
2024-08-16 15:47:47,221 [Process: 0] Evaluating...
2024-08-16 15:47:47,230 [Process: 0] EPOCH 2:
2024-08-16 15:47:47,232 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3926e-04, 2.0602e-01, 8.6463e-02,  ..., 2.3423e-01,
          3.0904e-01, 2.1588e-01],
         [1.3926e-04, 2.7935e-01, 8.6463e-02,  ..., 2.5075e-01,
          1.9317e-01, 2.1802e-01],
         [9.9958e-01, 3.0862e-01, 7.4061e-01,  ..., 2.2883e-01,
          1.7822e-01, 2.1588e-01],
         [1.3926e-04, 2.0602e-01, 8.6463e-02,  ..., 2.8619e-01,
          3.1958e-01, 3.5023e-01]],
        [[7.7429e-03, 2.2173e-01, 5.0209e-02,  ..., 2.4902e-01,
          2.9984e-01, 2.5149e-01],
         [7.7429e-03, 2.5276e-01, 5.0209e-02,  ..., 2.4902e-01,
          2.7807e-01, 2.2630e-01],
         [9.7677e-01, 3.0378e-01, 8.4937e-01,  ..., 2.5295e-01,
          1.9972e-01, 2.9784e-01],
         [7.7429e-03, 2.2173e-01, 5.0209e-02,  ..., 2.4902e-01,
          2.2237e-01, 2.2437e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2630, 0.2185, 0.1944,  ..., 0.3003, 0.2548, 0.3019],
         [0.3000, 0.2296, 0.1950,  ..., 0.2740, 0.3111, 0.2633],
         [0.2566, 0.2034, 0.1944,  ..., 0.2128, 0.2171, 0.2174],
         [0.1804, 0.3485, 0.4162,  ..., 0.2128, 0.2171, 0.2174]],
        [[0.2500, 0.0175, 0.2269,  ..., 0.2750, 0.2155, 0.2711],
         [0.2500, 0.0175, 0.1857,  ..., 0.2045, 0.1979, 0.2752],
         [0.2500, 0.9476, 0.1857,  ..., 0.2045, 0.1868, 0.2171],
         [0.2500, 0.0175, 0.4017,  ..., 0.3160, 0.3998, 0.2366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:47:49,140 [Process: 0] Synchronize training processes
2024-08-16 15:47:49,140 [Process: 0] Evaluating...
2024-08-16 15:47:49,142 [Process: 0] EPOCH 3:
2024-08-16 15:47:49,144 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.5482, 0.2029, 0.1740,  ..., 0.2851, 0.1808, 0.2006],
         [0.3826, 0.2029, 0.1740,  ..., 0.2544, 0.1808, 0.2006],
         [0.0355, 0.2029, 0.1740,  ..., 0.2303, 0.1808, 0.2006],
         [0.0337, 0.3913, 0.4781,  ..., 0.2303, 0.4576, 0.3981]],
        [[0.1981, 0.2210, 0.1835,  ..., 0.0394, 0.4313, 0.2024],
         [0.1981, 0.2210, 0.1835,  ..., 0.0394, 0.3588, 0.2024],
         [0.1981, 0.2210, 0.1835,  ..., 0.8819, 0.1050, 0.2024],
         [0.4056, 0.3370, 0.4495,  ..., 0.0394, 0.1050, 0.3927]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1671, 0.1613, 0.1844,  ..., 0.1738, 0.3154, 0.2897],
         [0.1671, 0.1613, 0.1844,  ..., 0.1738, 0.2787, 0.2546],
         [0.1671, 0.1613, 0.1844,  ..., 0.1738, 0.2029, 0.2278],
         [0.4986, 0.5160, 0.4469,  ..., 0.4785, 0.2029, 0.2278]],
        [[0.2500, 0.2500, 0.2020,  ..., 0.2500, 0.3528, 0.2430],
         [0.2500, 0.2500, 0.2020,  ..., 0.2500, 0.3220, 0.2436],
         [0.2500, 0.2500, 0.2020,  ..., 0.2500, 0.1626, 0.2426],
         [0.2500, 0.2500, 0.3940,  ..., 0.2500, 0.1626, 0.2708]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:47:51,055 [Process: 0] Synchronize training processes
2024-08-16 15:47:51,055 [Process: 0] Evaluating...
2024-08-16 15:47:51,057 [Process: 0] EPOCH 4:
2024-08-16 15:47:51,059 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1100e-01, 3.8947e-01, 3.4953e-01,  ..., 2.8738e-01,
          2.6001e-01, 1.8269e-01],
         [2.3628e-01, 2.3165e-01, 2.4467e-01,  ..., 2.3754e-01,
          2.6757e-01, 2.0803e-01],
         [2.1100e-01, 1.8944e-01, 2.0290e-01,  ..., 2.3754e-01,
          2.3621e-01, 1.8269e-01],
         [3.4172e-01, 1.8944e-01, 2.0290e-01,  ..., 2.3754e-01,
          2.3621e-01, 4.2660e-01]],
        [[1.7688e-01, 1.8959e-01, 1.8533e-01,  ..., 1.8172e-04,
          1.8653e-01, 1.9415e-01],
         [2.0570e-01, 2.2161e-01, 2.1823e-01,  ..., 1.8172e-04,
          2.1339e-01, 2.1951e-01],
         [1.7688e-01, 1.8959e-01, 1.8533e-01,  ..., 9.9945e-01,
          1.8653e-01, 1.9415e-01],
         [4.4055e-01, 3.9920e-01, 4.1111e-01,  ..., 1.8172e-04,
          4.1354e-01, 3.9219e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1766, 0.1071, 0.1621,  ..., 0.1895, 0.2674, 0.2574],
         [0.1989, 0.1267, 0.2024,  ..., 0.2208, 0.2442, 0.2475],
         [0.1766, 0.1071, 0.1621,  ..., 0.1895, 0.2442, 0.2475],
         [0.4479, 0.6592, 0.4733,  ..., 0.4002, 0.2442, 0.2475]],
        [[0.2252, 0.1822, 0.2464,  ..., 0.2108, 0.2565, 0.1720],
         [0.2544, 0.2155, 0.2608,  ..., 0.2421, 0.2478, 0.2056],
         [0.2252, 0.1822, 0.2464,  ..., 0.2108, 0.2478, 0.1720],
         [0.2952, 0.4201, 0.2464,  ..., 0.3362, 0.2478, 0.4505]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:47:52,980 [Process: 0] Synchronize training processes
2024-08-16 15:47:52,981 [Process: 0] Evaluating...
2024-08-16 15:47:52,983 [Process: 0] EPOCH 5:
2024-08-16 15:47:52,985 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7931e-01, 2.4636e-01, 1.9504e-01,  ..., 1.9860e-01,
          1.8163e-01, 1.7386e-01],
         [1.8157e-01, 2.6091e-01, 2.0271e-01,  ..., 2.0936e-01,
          1.8163e-01, 1.7726e-01],
         [1.7931e-01, 2.4636e-01, 1.9504e-01,  ..., 1.9594e-01,
          1.8163e-01, 1.7386e-01],
         [4.5980e-01, 2.4636e-01, 4.0721e-01,  ..., 3.9610e-01,
          4.5510e-01, 4.7502e-01]],
        [[1.6603e-01, 1.7527e-01, 1.7859e-01,  ..., 7.0613e-04,
          2.4703e-01, 2.5000e-01],
         [1.6603e-01, 1.7527e-01, 1.8908e-01,  ..., 7.0613e-04,
          2.5891e-01, 2.5000e-01],
         [1.6603e-01, 1.7527e-01, 1.7859e-01,  ..., 9.9788e-01,
          2.4703e-01, 2.5000e-01],
         [5.0190e-01, 4.7420e-01, 4.5375e-01,  ..., 7.0613e-04,
          2.4703e-01, 2.5000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.2412, 0.2077, 0.2409,  ..., 0.2003, 0.2411, 0.2441],
         [0.2855, 0.2139, 0.2774,  ..., 0.2048, 0.2766, 0.2676],
         [0.2366, 0.2045, 0.2409,  ..., 0.2003, 0.2411, 0.2441],
         [0.2366, 0.3739, 0.2409,  ..., 0.3946, 0.2411, 0.2441]],
        [[0.1020, 0.1826, 0.1269,  ..., 0.2453, 0.1520, 0.2472],
         [0.1020, 0.1826, 0.1255,  ..., 0.2641, 0.1520, 0.2840],
         [0.1020, 0.1826, 0.1255,  ..., 0.2453, 0.1520, 0.2344],
         [0.6939, 0.4523, 0.6222,  ..., 0.2453, 0.5441, 0.2344]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:47:54,971 [Process: 0] Synchronize training processes
2024-08-16 15:47:54,971 [Process: 0] Evaluating...
2024-08-16 15:47:54,973 [Process: 0] EPOCH 6:
2024-08-16 15:47:54,975 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1483, 0.1538, 0.1670,  ..., 0.2337, 0.2377, 0.1665],
         [0.1313, 0.1398, 0.1598,  ..., 0.2988, 0.2869, 0.1665],
         [0.1313, 0.1398, 0.1598,  ..., 0.2337, 0.2377, 0.1665],
         [0.5890, 0.5666, 0.5135,  ..., 0.2337, 0.2377, 0.5006]],
        [[0.1507, 0.1553, 0.1769,  ..., 0.0218, 0.5235, 0.2476],
         [0.1409, 0.1553, 0.1747,  ..., 0.0218, 0.2850, 0.2573],
         [0.1409, 0.1553, 0.1747,  ..., 0.9347, 0.1332, 0.2476],
         [0.5676, 0.5342, 0.4736,  ..., 0.0218, 0.0583, 0.2476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1666, 0.1670, 0.1647,  ..., 0.1600, 0.2402, 0.2695],
         [0.1653, 0.1659, 0.1647,  ..., 0.1600, 0.2793, 0.2926],
         [0.1653, 0.1659, 0.1647,  ..., 0.1600, 0.2402, 0.2189],
         [0.5028, 0.5013, 0.5060,  ..., 0.5199, 0.2402, 0.2189]],
        [[0.1801, 0.1650, 0.1781,  ..., 0.2391, 0.1787, 0.1869],
         [0.1775, 0.1489, 0.1731,  ..., 0.2826, 0.1697, 0.1778],
         [0.1775, 0.1489, 0.1708,  ..., 0.2391, 0.1664, 0.1699],
         [0.4650, 0.5372, 0.4780,  ..., 0.2391, 0.4852, 0.4654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:47:56,979 [Process: 0] Synchronize training processes
2024-08-16 15:47:56,980 [Process: 0] Evaluating...
2024-08-16 15:47:56,982 [Process: 0] EPOCH 7:
2024-08-16 15:47:56,983 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1780, 0.1604, 0.1451,  ..., 0.1972, 0.1600, 0.2477],
         [0.1780, 0.1604, 0.1451,  ..., 0.1972, 0.0958, 0.2570],
         [0.1780, 0.1604, 0.1451,  ..., 0.1972, 0.6515, 0.2477],
         [0.4659, 0.5188, 0.5647,  ..., 0.4085, 0.0928, 0.2477]],
        [[0.1343, 0.1405, 0.1819,  ..., 0.1659, 0.1539, 0.1602],
         [0.1343, 0.1405, 0.1821,  ..., 0.1659, 0.1539, 0.1602],
         [0.1343, 0.1405, 0.1819,  ..., 0.5022, 0.1539, 0.1602],
         [0.5972, 0.5785, 0.4541,  ..., 0.1659, 0.5384, 0.5193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1610, 0.1568, 0.1488,  ..., 0.1745, 0.2500, 0.2500],
         [0.1610, 0.1585, 0.1488,  ..., 0.1755, 0.2500, 0.2500],
         [0.1610, 0.1568, 0.1488,  ..., 0.1745, 0.2500, 0.2500],
         [0.5170, 0.5279, 0.5535,  ..., 0.4755, 0.2500, 0.2500]],
        [[0.1431, 0.1576, 0.1527,  ..., 0.2500, 0.2500, 0.1666],
         [0.1431, 0.1576, 0.1527,  ..., 0.2500, 0.2500, 0.1666],
         [0.1431, 0.1576, 0.1527,  ..., 0.2500, 0.2500, 0.1666],
         [0.5708, 0.5273, 0.5418,  ..., 0.2500, 0.2500, 0.5003]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:47:59,031 [Process: 0] Synchronize training processes
2024-08-16 15:47:59,032 [Process: 0] Evaluating...
2024-08-16 15:47:59,034 [Process: 0] EPOCH 8:
2024-08-16 15:47:59,036 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1811, 0.1240, 0.1756,  ..., 0.1368, 0.1663, 0.2500],
         [0.1811, 0.1240, 0.1825,  ..., 0.1399, 0.1710, 0.2500],
         [0.1811, 0.1240, 0.1756,  ..., 0.1368, 0.1663, 0.2500],
         [0.4566, 0.6279, 0.4662,  ..., 0.5864, 0.4965, 0.2500]],
        [[0.1460, 0.1769, 0.1599,  ..., 0.1553, 0.1589, 0.2197],
         [0.1460, 0.1769, 0.1599,  ..., 0.1553, 0.1589, 0.2197],
         [0.1460, 0.1769, 0.1599,  ..., 0.1553, 0.1589, 0.2197],
         [0.5619, 0.4693, 0.5202,  ..., 0.5341, 0.5232, 0.3409]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1557, 0.1560, 0.1732,  ..., 0.1495, 0.2500, 0.2500],
         [0.1561, 0.1676, 0.1732,  ..., 0.1508, 0.2500, 0.2500],
         [0.1557, 0.1560, 0.1732,  ..., 0.1495, 0.2500, 0.2500],
         [0.5325, 0.5205, 0.4804,  ..., 0.5502, 0.2500, 0.2500]],
        [[0.1609, 0.1613, 0.1565,  ..., 0.2500, 0.2500, 0.1920],
         [0.1624, 0.1738, 0.1647,  ..., 0.2500, 0.2500, 0.1920],
         [0.1609, 0.1613, 0.1565,  ..., 0.2500, 0.2500, 0.1920],
         [0.5159, 0.5036, 0.5224,  ..., 0.2500, 0.2500, 0.4240]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:01,091 [Process: 0] Synchronize training processes
2024-08-16 15:48:01,091 [Process: 0] Evaluating...
2024-08-16 15:48:01,093 [Process: 0] EPOCH 9:
2024-08-16 15:48:01,095 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1750, 0.1399, 0.1719,  ..., 0.1628, 0.6118, 0.1466],
         [0.1764, 0.1471, 0.1746,  ..., 0.1748, 0.1697, 0.1576],
         [0.1750, 0.1399, 0.1719,  ..., 0.1628, 0.1321, 0.1466],
         [0.4735, 0.5731, 0.4816,  ..., 0.4997, 0.0864, 0.5491]],
        [[0.1781, 0.1547, 0.1307,  ..., 0.1272, 0.1876, 0.1240],
         [0.1784, 0.1547, 0.1329,  ..., 0.1276, 0.1876, 0.1240],
         [0.1781, 0.1547, 0.1307,  ..., 0.1272, 0.1876, 0.1240],
         [0.4653, 0.5359, 0.6058,  ..., 0.6180, 0.4371, 0.6281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1505, 0.1763, 0.1567,  ..., 0.1473, 0.2394, 0.1664],
         [0.1505, 0.1763, 0.1567,  ..., 0.1473, 0.2394, 0.1672],
         [0.1505, 0.1763, 0.1567,  ..., 0.1473, 0.2394, 0.1664],
         [0.5485, 0.4711, 0.5299,  ..., 0.5581, 0.2818, 0.5000]],
        [[0.1254, 0.1704, 0.1741,  ..., 0.2500, 0.2500, 0.1588],
         [0.1254, 0.1704, 0.1741,  ..., 0.2500, 0.2500, 0.1588],
         [0.1254, 0.1704, 0.1741,  ..., 0.2500, 0.2500, 0.1588],
         [0.6237, 0.4887, 0.4778,  ..., 0.2500, 0.2500, 0.5235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:03,090 [Process: 0] Synchronize training processes
2024-08-16 15:48:03,090 [Process: 0] Evaluating...
2024-08-16 15:48:03,092 [Process: 0] EPOCH 10:
2024-08-16 15:48:03,094 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1659, 0.1832, 0.1233,  ..., 0.1418, 0.1354, 0.1467],
         [0.1659, 0.1832, 0.1233,  ..., 0.1418, 0.1354, 0.1467],
         [0.1659, 0.1832, 0.1233,  ..., 0.1418, 0.1354, 0.1467],
         [0.5022, 0.4505, 0.6300,  ..., 0.5746, 0.5938, 0.5598]],
        [[0.1702, 0.1851, 0.1515,  ..., 0.1198, 0.2803, 0.2646],
         [0.1702, 0.1851, 0.1515,  ..., 0.1198, 0.2399, 0.2451],
         [0.1702, 0.1851, 0.1515,  ..., 0.1198, 0.2399, 0.2451],
         [0.4893, 0.4446, 0.5454,  ..., 0.6406, 0.2399, 0.2451]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1405, 0.1440, 0.1364,  ..., 0.1483, 0.2500, 0.2500],
         [0.1405, 0.1440, 0.1364,  ..., 0.1483, 0.2500, 0.2500],
         [0.1405, 0.1440, 0.1364,  ..., 0.1483, 0.2500, 0.2500],
         [0.5785, 0.5681, 0.5909,  ..., 0.5550, 0.2500, 0.2500]],
        [[0.1411, 0.1472, 0.1492,  ..., 0.1913, 0.2500, 0.1209],
         [0.1411, 0.1472, 0.1492,  ..., 0.1913, 0.2500, 0.1209],
         [0.1411, 0.1472, 0.1492,  ..., 0.1913, 0.2500, 0.1209],
         [0.5766, 0.5584, 0.5525,  ..., 0.4262, 0.2500, 0.6373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:05,032 [Process: 0] Synchronize training processes
2024-08-16 15:48:05,032 [Process: 0] Evaluating...
2024-08-16 15:48:05,034 [Process: 0] EPOCH 11:
2024-08-16 15:48:05,036 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1471, 0.1512, 0.1246,  ..., 0.1334, 0.1380, 0.1428],
         [0.1471, 0.1512, 0.1246,  ..., 0.1334, 0.1380, 0.1428],
         [0.1471, 0.1512, 0.1246,  ..., 0.1334, 0.1380, 0.1428],
         [0.5586, 0.5465, 0.6261,  ..., 0.5997, 0.5861, 0.5716]],
        [[0.2500, 0.2500, 0.2576,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2500, 0.2500],
         [0.2500, 0.2500, 0.2475,  ..., 0.2500, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1681, 0.1635, 0.1705,  ..., 0.1753, 0.2500, 0.2500],
         [0.1681, 0.1635, 0.1705,  ..., 0.1753, 0.2500, 0.2500],
         [0.1681, 0.1635, 0.1705,  ..., 0.1753, 0.2500, 0.2500],
         [0.4957, 0.5095, 0.4884,  ..., 0.4742, 0.2500, 0.2500]],
        [[0.1461, 0.1414, 0.1779,  ..., 0.1685, 0.2500, 0.1861],
         [0.1461, 0.1414, 0.1779,  ..., 0.1685, 0.2500, 0.1861],
         [0.1461, 0.1414, 0.1779,  ..., 0.1685, 0.2500, 0.1861],
         [0.5616, 0.5758, 0.4664,  ..., 0.4944, 0.2500, 0.4417]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:07,014 [Process: 0] Synchronize training processes
2024-08-16 15:48:07,015 [Process: 0] Evaluating...
2024-08-16 15:48:07,023 [Process: 0] EPOCH 12:
2024-08-16 15:48:07,025 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1262, 0.1391, 0.1446,  ..., 0.2500, 0.1624, 0.1474],
         [0.1262, 0.1353, 0.1446,  ..., 0.2500, 0.1624, 0.1474],
         [0.1262, 0.1353, 0.1446,  ..., 0.2500, 0.1624, 0.1474],
         [0.6214, 0.5904, 0.5662,  ..., 0.2500, 0.5127, 0.5579]],
        [[0.1316, 0.1453, 0.1322,  ..., 0.2500, 0.2500, 0.1142],
         [0.1316, 0.1453, 0.1322,  ..., 0.2500, 0.2500, 0.1142],
         [0.1316, 0.1453, 0.1322,  ..., 0.2500, 0.2500, 0.1142],
         [0.6053, 0.5640, 0.6034,  ..., 0.2500, 0.2500, 0.6575]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1595, 0.1555, 0.1772,  ..., 0.1420, 0.2500, 0.2500],
         [0.1595, 0.1555, 0.1772,  ..., 0.1420, 0.2500, 0.2500],
         [0.1595, 0.1555, 0.1772,  ..., 0.1420, 0.2500, 0.2500],
         [0.5214, 0.5334, 0.4683,  ..., 0.5740, 0.2500, 0.2500]],
        [[0.1569, 0.1480, 0.1751,  ..., 0.1749, 0.2500, 0.1448],
         [0.1569, 0.1480, 0.1751,  ..., 0.1749, 0.2500, 0.1448],
         [0.1569, 0.1480, 0.1751,  ..., 0.1749, 0.2500, 0.1448],
         [0.5293, 0.5559, 0.4748,  ..., 0.4754, 0.2500, 0.5656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:09,004 [Process: 0] Synchronize training processes
2024-08-16 15:48:09,005 [Process: 0] Evaluating...
2024-08-16 15:48:09,007 [Process: 0] EPOCH 13:
2024-08-16 15:48:09,008 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1449, 0.1738, 0.1740,  ..., 0.1730, 0.2118, 0.1579],
         [0.1449, 0.1738, 0.1740,  ..., 0.1730, 0.2118, 0.1579],
         [0.1449, 0.1738, 0.1740,  ..., 0.1730, 0.2118, 0.1579],
         [0.5652, 0.4785, 0.4781,  ..., 0.4810, 0.3647, 0.5263]],
        [[0.2500, 0.1691, 0.1623,  ..., 0.2500, 0.2500, 0.1813],
         [0.2500, 0.1691, 0.1623,  ..., 0.2500, 0.2500, 0.1813],
         [0.2500, 0.1691, 0.1623,  ..., 0.2500, 0.2500, 0.1813],
         [0.2500, 0.4927, 0.5130,  ..., 0.2500, 0.2500, 0.4561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1528, 0.1738, 0.1588,  ..., 0.1656, 0.2500, 0.2500],
         [0.1528, 0.1738, 0.1588,  ..., 0.1656, 0.2500, 0.2500],
         [0.1528, 0.1738, 0.1588,  ..., 0.1656, 0.2500, 0.2500],
         [0.5417, 0.4787, 0.5237,  ..., 0.5032, 0.2500, 0.2500]],
        [[0.1336, 0.1536, 0.1648,  ..., 0.1504, 0.2500, 0.1386],
         [0.1336, 0.1536, 0.1648,  ..., 0.1504, 0.2500, 0.1386],
         [0.1336, 0.1536, 0.1648,  ..., 0.1504, 0.2500, 0.1386],
         [0.5993, 0.5392, 0.5057,  ..., 0.5488, 0.2500, 0.5843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:10,983 [Process: 0] Synchronize training processes
2024-08-16 15:48:10,983 [Process: 0] Evaluating...
2024-08-16 15:48:10,985 [Process: 0] EPOCH 14:
2024-08-16 15:48:10,987 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1782, 0.1798, 0.1339,  ..., 0.1762, 0.2500, 0.2500],
         [0.1782, 0.1798, 0.1339,  ..., 0.1762, 0.2500, 0.2500],
         [0.1782, 0.1798, 0.1339,  ..., 0.1762, 0.2500, 0.2500],
         [0.4653, 0.4606, 0.5984,  ..., 0.4715, 0.2500, 0.2500]],
        [[0.1151, 0.1515, 0.1783,  ..., 0.2500, 0.1132, 0.1533],
         [0.1076, 0.1515, 0.1783,  ..., 0.2500, 0.1132, 0.1533],
         [0.1076, 0.1515, 0.1783,  ..., 0.2500, 0.1132, 0.1533],
         [0.6697, 0.5454, 0.4650,  ..., 0.2500, 0.6605, 0.5401]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1425, 0.1469, 0.1446,  ..., 0.1585, 0.2500, 0.2500],
         [0.1425, 0.1469, 0.1446,  ..., 0.1585, 0.2500, 0.2500],
         [0.1425, 0.1469, 0.1446,  ..., 0.1585, 0.2500, 0.2500],
         [0.5726, 0.5592, 0.5661,  ..., 0.5244, 0.2500, 0.2500]],
        [[0.1392, 0.1532, 0.1563,  ..., 0.2500, 0.2500, 0.1569],
         [0.1392, 0.1532, 0.1563,  ..., 0.2500, 0.2500, 0.1569],
         [0.1392, 0.1532, 0.1563,  ..., 0.2500, 0.2500, 0.1569],
         [0.5825, 0.5405, 0.5311,  ..., 0.2500, 0.2500, 0.5293]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:12,933 [Process: 0] Synchronize training processes
2024-08-16 15:48:12,934 [Process: 0] Evaluating...
2024-08-16 15:48:12,935 [Process: 0] EPOCH 15:
2024-08-16 15:48:12,938 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1644, 0.1711, 0.1661,  ..., 0.1480, 0.1371, 0.1786],
         [0.1644, 0.1711, 0.1661,  ..., 0.1480, 0.1371, 0.1786],
         [0.1644, 0.1711, 0.1661,  ..., 0.1480, 0.1371, 0.1786],
         [0.5069, 0.4866, 0.5017,  ..., 0.5561, 0.5886, 0.4643]],
        [[0.1648, 0.1503, 0.1700,  ..., 0.2500, 0.2500, 0.1777],
         [0.1648, 0.1503, 0.1700,  ..., 0.2500, 0.2500, 0.1777],
         [0.1648, 0.1503, 0.1700,  ..., 0.2500, 0.2500, 0.1777],
         [0.5056, 0.5491, 0.4899,  ..., 0.2500, 0.2500, 0.4670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1527, 0.1249, 0.1355,  ..., 0.1330, 0.2500, 0.2500],
         [0.1527, 0.1249, 0.1355,  ..., 0.1330, 0.2500, 0.2500],
         [0.1527, 0.1249, 0.1355,  ..., 0.1330, 0.2500, 0.2500],
         [0.5420, 0.6254, 0.5934,  ..., 0.6011, 0.2500, 0.2500]],
        [[0.1254, 0.1359, 0.1474,  ..., 0.1437, 0.2500, 0.2500],
         [0.1254, 0.1359, 0.1474,  ..., 0.1437, 0.2500, 0.2500],
         [0.1254, 0.1359, 0.1474,  ..., 0.1437, 0.2500, 0.2500],
         [0.6239, 0.5922, 0.5578,  ..., 0.5689, 0.2500, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:14,983 [Process: 0] Synchronize training processes
2024-08-16 15:48:14,984 [Process: 0] Evaluating...
2024-08-16 15:48:14,986 [Process: 0] EPOCH 16:
2024-08-16 15:48:14,987 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1406, 0.1171, 0.1339,  ..., 0.1350, 0.1586, 0.1386],
         [0.1406, 0.1171, 0.1339,  ..., 0.1350, 0.1586, 0.1386],
         [0.1406, 0.1171, 0.1339,  ..., 0.1350, 0.1586, 0.1386],
         [0.5782, 0.6487, 0.5984,  ..., 0.5951, 0.5242, 0.5841]],
        [[0.1607, 0.1445, 0.1319,  ..., 0.2500, 0.1527, 0.1586],
         [0.1607, 0.1445, 0.1319,  ..., 0.2500, 0.1527, 0.1586],
         [0.1607, 0.1445, 0.1319,  ..., 0.2500, 0.1527, 0.1586],
         [0.5179, 0.5666, 0.6044,  ..., 0.2500, 0.5420, 0.5243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1295, 0.1412, 0.1301,  ..., 0.1573, 0.2500, 0.2500],
         [0.1295, 0.1412, 0.1301,  ..., 0.1573, 0.2500, 0.2500],
         [0.1295, 0.1412, 0.1301,  ..., 0.1573, 0.2500, 0.2500],
         [0.6116, 0.5765, 0.6096,  ..., 0.5281, 0.2500, 0.2500]],
        [[0.1608, 0.1606, 0.1300,  ..., 0.1622, 0.2500, 0.1051],
         [0.1608, 0.1606, 0.1300,  ..., 0.1622, 0.2500, 0.1051],
         [0.1608, 0.1606, 0.1300,  ..., 0.1622, 0.2500, 0.1051],
         [0.5175, 0.5182, 0.6100,  ..., 0.5135, 0.2500, 0.6846]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:17,029 [Process: 0] Synchronize training processes
2024-08-16 15:48:17,030 [Process: 0] Evaluating...
2024-08-16 15:48:17,032 [Process: 0] EPOCH 17:
2024-08-16 15:48:17,034 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1290, 0.1272, 0.1422,  ..., 0.1483, 0.1421, 0.1318],
         [0.1290, 0.1272, 0.1422,  ..., 0.1483, 0.1421, 0.1318],
         [0.1290, 0.1272, 0.1422,  ..., 0.1483, 0.1421, 0.1318],
         [0.6129, 0.6183, 0.5735,  ..., 0.5552, 0.5736, 0.6046]],
        [[0.1498, 0.1524, 0.1409,  ..., 0.2500, 0.1440, 0.1303],
         [0.1498, 0.1524, 0.1409,  ..., 0.2500, 0.1440, 0.1303],
         [0.1498, 0.1524, 0.1409,  ..., 0.2500, 0.1440, 0.1303],
         [0.5506, 0.5428, 0.5774,  ..., 0.2500, 0.5679, 0.6091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1395, 0.1484, 0.1186,  ..., 0.1494, 0.2500, 0.2500],
         [0.1395, 0.1484, 0.1186,  ..., 0.1494, 0.2500, 0.2500],
         [0.1395, 0.1484, 0.1186,  ..., 0.1494, 0.2500, 0.2500],
         [0.5816, 0.5549, 0.6442,  ..., 0.5519, 0.2500, 0.2500]],
        [[0.1340, 0.1522, 0.1146,  ..., 0.1387, 0.1213, 0.1208],
         [0.1340, 0.1522, 0.1146,  ..., 0.1387, 0.1213, 0.1208],
         [0.1340, 0.1522, 0.1146,  ..., 0.1387, 0.1213, 0.1208],
         [0.5979, 0.5434, 0.6561,  ..., 0.5840, 0.6360, 0.6377]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:19,080 [Process: 0] Synchronize training processes
2024-08-16 15:48:19,081 [Process: 0] Evaluating...
2024-08-16 15:48:19,083 [Process: 0] EPOCH 18:
2024-08-16 15:48:19,085 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1647, 0.1254, 0.1453,  ..., 0.1506, 0.1322, 0.1393],
         [0.1647, 0.1254, 0.1453,  ..., 0.1506, 0.1322, 0.1393],
         [0.1647, 0.1254, 0.1453,  ..., 0.1506, 0.1322, 0.1393],
         [0.5060, 0.6238, 0.5642,  ..., 0.5483, 0.6034, 0.5821]],
        [[0.1597, 0.1519, 0.1379,  ..., 0.2500, 0.1477, 0.1579],
         [0.1597, 0.1519, 0.1379,  ..., 0.2500, 0.1477, 0.1579],
         [0.1597, 0.1519, 0.1379,  ..., 0.2500, 0.1477, 0.1579],
         [0.5210, 0.5444, 0.5862,  ..., 0.2500, 0.5570, 0.5264]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1532, 0.1524, 0.1338,  ..., 0.1508, 0.2500, 0.2500],
         [0.1532, 0.1524, 0.1338,  ..., 0.1508, 0.2500, 0.2500],
         [0.1532, 0.1524, 0.1338,  ..., 0.1508, 0.2500, 0.2500],
         [0.5403, 0.5429, 0.5987,  ..., 0.5475, 0.2500, 0.2500]],
        [[0.1723, 0.1404, 0.1484,  ..., 0.1568, 0.1550, 0.1476],
         [0.1723, 0.1404, 0.1484,  ..., 0.1568, 0.1550, 0.1476],
         [0.1723, 0.1404, 0.1484,  ..., 0.1568, 0.1550, 0.1476],
         [0.4830, 0.5789, 0.5548,  ..., 0.5295, 0.5351, 0.5572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:21,134 [Process: 0] Synchronize training processes
2024-08-16 15:48:21,135 [Process: 0] Evaluating...
2024-08-16 15:48:21,137 [Process: 0] EPOCH 19:
2024-08-16 15:48:21,139 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1469, 0.1600, 0.1332,  ..., 0.1395, 0.1252, 0.1378],
         [0.1469, 0.1600, 0.1332,  ..., 0.1395, 0.1252, 0.1378],
         [0.1469, 0.1600, 0.1332,  ..., 0.1395, 0.1252, 0.1378],
         [0.5592, 0.5201, 0.6005,  ..., 0.5815, 0.6244, 0.5865]],
        [[0.1435, 0.1395, 0.1664,  ..., 0.2528, 0.1380, 0.1329],
         [0.1435, 0.1395, 0.1664,  ..., 0.2491, 0.1380, 0.1329],
         [0.1435, 0.1395, 0.1664,  ..., 0.2491, 0.1380, 0.1329],
         [0.5695, 0.5816, 0.5009,  ..., 0.2491, 0.5860, 0.6014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1348, 0.1550, 0.1248,  ..., 0.2500, 0.2500, 0.2500],
         [0.1348, 0.1550, 0.1248,  ..., 0.2500, 0.2500, 0.2500],
         [0.1348, 0.1550, 0.1248,  ..., 0.2500, 0.2500, 0.2500],
         [0.5956, 0.5350, 0.6256,  ..., 0.2500, 0.2500, 0.2500]],
        [[0.1345, 0.1426, 0.1430,  ..., 0.1498, 0.1455, 0.1403],
         [0.1345, 0.1426, 0.1430,  ..., 0.1498, 0.1455, 0.1403],
         [0.1345, 0.1426, 0.1430,  ..., 0.1498, 0.1455, 0.1403],
         [0.5964, 0.5722, 0.5709,  ..., 0.5505, 0.5634, 0.5791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:23,080 [Process: 0] Synchronize training processes
2024-08-16 15:48:23,080 [Process: 0] Evaluating...
2024-08-16 15:48:23,082 [Process: 0] EPOCH 20:
2024-08-16 15:48:23,084 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1473, 0.1541, 0.1668,  ..., 0.1378, 0.1413, 0.1409],
         [0.1473, 0.1541, 0.1668,  ..., 0.1378, 0.1413, 0.1409],
         [0.1473, 0.1541, 0.1668,  ..., 0.1378, 0.1413, 0.1409],
         [0.5582, 0.5376, 0.4997,  ..., 0.5867, 0.5762, 0.5773]],
        [[0.1686, 0.1519, 0.1303,  ..., 0.2500, 0.1407, 0.1433],
         [0.1686, 0.1519, 0.1303,  ..., 0.2500, 0.1407, 0.1433],
         [0.1686, 0.1519, 0.1303,  ..., 0.2500, 0.1407, 0.1433],
         [0.4941, 0.5444, 0.6090,  ..., 0.2500, 0.5780, 0.5701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1449, 0.1259, 0.1499,  ..., 0.1464, 0.2500, 0.2500],
         [0.1449, 0.1259, 0.1499,  ..., 0.1464, 0.2500, 0.2500],
         [0.1449, 0.1259, 0.1499,  ..., 0.1464, 0.2500, 0.2500],
         [0.5653, 0.6223, 0.5504,  ..., 0.5608, 0.2500, 0.2500]],
        [[0.1563, 0.1483, 0.1602,  ..., 0.1524, 0.1358, 0.1496],
         [0.1563, 0.1483, 0.1602,  ..., 0.1524, 0.1358, 0.1496],
         [0.1563, 0.1483, 0.1602,  ..., 0.1524, 0.1358, 0.1496],
         [0.5311, 0.5552, 0.5193,  ..., 0.5429, 0.5926, 0.5511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:24,998 [Process: 0] Synchronize training processes
2024-08-16 15:48:24,998 [Process: 0] Evaluating...
2024-08-16 15:48:25,000 [Process: 0] EPOCH 21:
2024-08-16 15:48:25,002 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1694, 0.1425, 0.1504,  ..., 0.1431, 0.1620, 0.1522],
         [0.1694, 0.1425, 0.1504,  ..., 0.1431, 0.1620, 0.1522],
         [0.1694, 0.1425, 0.1504,  ..., 0.1431, 0.1620, 0.1522],
         [0.4918, 0.5724, 0.5489,  ..., 0.5708, 0.5140, 0.5435]],
        [[0.1557, 0.1662, 0.1602,  ..., 0.2498, 0.1621, 0.1476],
         [0.1557, 0.1662, 0.1602,  ..., 0.2498, 0.1621, 0.1476],
         [0.1557, 0.1662, 0.1602,  ..., 0.2506, 0.1621, 0.1476],
         [0.5328, 0.5014, 0.5193,  ..., 0.2498, 0.5136, 0.5572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1127, 0.1270, 0.1320,  ..., 0.1280, 0.2500, 0.2500],
         [0.1127, 0.1270, 0.1320,  ..., 0.1280, 0.2500, 0.2500],
         [0.1127, 0.1270, 0.1320,  ..., 0.1280, 0.2500, 0.2500],
         [0.6620, 0.6189, 0.6040,  ..., 0.6159, 0.2500, 0.2500]],
        [[0.1226, 0.1261, 0.1235,  ..., 0.1384, 0.1383, 0.1364],
         [0.1226, 0.1261, 0.1235,  ..., 0.1384, 0.1383, 0.1364],
         [0.1226, 0.1261, 0.1235,  ..., 0.1384, 0.1383, 0.1364],
         [0.6321, 0.6218, 0.6296,  ..., 0.5847, 0.5852, 0.5907]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:26,953 [Process: 0] Synchronize training processes
2024-08-16 15:48:26,953 [Process: 0] Evaluating...
2024-08-16 15:48:26,963 [Process: 0] EPOCH 22:
2024-08-16 15:48:26,965 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1447, 0.1388, 0.1328,  ..., 0.1418, 0.1310, 0.1522],
         [0.1447, 0.1388, 0.1328,  ..., 0.1418, 0.1310, 0.1522],
         [0.1447, 0.1388, 0.1328,  ..., 0.1418, 0.1310, 0.1522],
         [0.5660, 0.5837, 0.6016,  ..., 0.5745, 0.6071, 0.5434]],
        [[0.1700, 0.1423, 0.1515,  ..., 0.1235, 0.1517, 0.1313],
         [0.1700, 0.1423, 0.1515,  ..., 0.1235, 0.1518, 0.1313],
         [0.1700, 0.1423, 0.1515,  ..., 0.6295, 0.1517, 0.1313],
         [0.4901, 0.5731, 0.5454,  ..., 0.1235, 0.5449, 0.6061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1108, 0.1137, 0.1042,  ..., 0.1125, 0.2500, 0.2500],
         [0.1108, 0.1137, 0.1042,  ..., 0.1125, 0.2500, 0.2500],
         [0.1108, 0.1137, 0.1042,  ..., 0.1125, 0.2500, 0.2500],
         [0.6677, 0.6588, 0.6873,  ..., 0.6626, 0.2500, 0.2500]],
        [[0.1175, 0.1340, 0.1173,  ..., 0.1233, 0.1234, 0.1394],
         [0.1175, 0.1340, 0.1173,  ..., 0.1233, 0.1234, 0.1394],
         [0.1175, 0.1340, 0.1173,  ..., 0.1233, 0.1234, 0.1394],
         [0.6476, 0.5980, 0.6480,  ..., 0.6302, 0.6299, 0.5819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:28,973 [Process: 0] Synchronize training processes
2024-08-16 15:48:28,973 [Process: 0] Evaluating...
2024-08-16 15:48:28,975 [Process: 0] EPOCH 23:
2024-08-16 15:48:28,977 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1052, 0.1235, 0.1259,  ..., 0.1091, 0.1345, 0.1192],
         [0.1052, 0.1235, 0.1259,  ..., 0.1091, 0.1345, 0.1192],
         [0.1052, 0.1235, 0.1259,  ..., 0.1091, 0.1345, 0.1192],
         [0.6844, 0.6296, 0.6222,  ..., 0.6728, 0.5964, 0.6425]],
        [[0.1194, 0.1371, 0.1225,  ..., 0.1333, 0.2500, 0.1128],
         [0.1194, 0.1371, 0.1225,  ..., 0.1333, 0.2500, 0.1128],
         [0.1194, 0.1371, 0.1225,  ..., 0.6000, 0.2500, 0.1128],
         [0.6419, 0.5888, 0.6326,  ..., 0.1333, 0.2500, 0.6615]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1323, 0.1095, 0.1050,  ..., 0.1074, 0.2500, 0.2500],
         [0.1323, 0.1095, 0.1050,  ..., 0.1074, 0.2500, 0.2500],
         [0.1323, 0.1095, 0.1050,  ..., 0.1074, 0.2500, 0.2500],
         [0.6031, 0.6716, 0.6850,  ..., 0.6779, 0.2500, 0.2500]],
        [[0.1400, 0.1224, 0.1105,  ..., 0.1309, 0.1087, 0.1379],
         [0.1400, 0.1224, 0.1105,  ..., 0.1309, 0.1087, 0.1379],
         [0.1400, 0.1224, 0.1105,  ..., 0.1309, 0.1087, 0.1379],
         [0.5800, 0.6329, 0.6684,  ..., 0.6073, 0.6738, 0.5862]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:30,942 [Process: 0] Synchronize training processes
2024-08-16 15:48:30,943 [Process: 0] Evaluating...
2024-08-16 15:48:30,945 [Process: 0] EPOCH 24:
2024-08-16 15:48:30,947 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1347, 0.1342, 0.1563,  ..., 0.1378, 0.1503, 0.1332],
         [0.1354, 0.1371, 0.1563,  ..., 0.1378, 0.1503, 0.1332],
         [0.1347, 0.1342, 0.1563,  ..., 0.1378, 0.1503, 0.1332],
         [0.5951, 0.5946, 0.5311,  ..., 0.5865, 0.5491, 0.6004]],
        [[0.1462, 0.1376, 0.1250,  ..., 0.1055, 0.1350, 0.1401],
         [0.1475, 0.1395, 0.1250,  ..., 0.1055, 0.1350, 0.1401],
         [0.1462, 0.1376, 0.1250,  ..., 0.6835, 0.1350, 0.1401],
         [0.5601, 0.5852, 0.6249,  ..., 0.1055, 0.5950, 0.5797]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1252, 0.1290, 0.1443,  ..., 0.1232, 0.2500, 0.2500],
         [0.1252, 0.1290, 0.1443,  ..., 0.1232, 0.2500, 0.2500],
         [0.1252, 0.1290, 0.1443,  ..., 0.1232, 0.2500, 0.2500],
         [0.6244, 0.6131, 0.5672,  ..., 0.6304, 0.2500, 0.2500]],
        [[0.1301, 0.1094, 0.1322,  ..., 0.1219, 0.1243, 0.1291],
         [0.1301, 0.1094, 0.1322,  ..., 0.1219, 0.1243, 0.1291],
         [0.1301, 0.1094, 0.1322,  ..., 0.1219, 0.1243, 0.1291],
         [0.6096, 0.6718, 0.6035,  ..., 0.6342, 0.6272, 0.6127]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:32,866 [Process: 0] Synchronize training processes
2024-08-16 15:48:32,866 [Process: 0] Evaluating...
2024-08-16 15:48:32,868 [Process: 0] EPOCH 25:
2024-08-16 15:48:32,870 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1369, 0.1523, 0.1357,  ..., 0.1230, 0.1309, 0.1269],
         [0.1369, 0.1523, 0.1357,  ..., 0.1230, 0.1309, 0.1269],
         [0.1369, 0.1523, 0.1357,  ..., 0.1230, 0.1309, 0.1269],
         [0.5893, 0.5430, 0.5930,  ..., 0.6311, 0.6074, 0.6194]],
        [[0.1358, 0.1346, 0.1303,  ..., 0.1145, 0.1420, 0.1490],
         [0.1358, 0.1346, 0.1303,  ..., 0.1145, 0.1420, 0.1490],
         [0.1358, 0.1346, 0.1303,  ..., 0.6564, 0.1420, 0.1490],
         [0.5925, 0.5961, 0.6090,  ..., 0.1145, 0.5739, 0.5531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1302, 0.1307, 0.1270,  ..., 0.1201, 0.2500, 0.2500],
         [0.1302, 0.1307, 0.1270,  ..., 0.1201, 0.2500, 0.2500],
         [0.1302, 0.1307, 0.1270,  ..., 0.1201, 0.2500, 0.2500],
         [0.6093, 0.6079, 0.6190,  ..., 0.6397, 0.2500, 0.2500]],
        [[0.1371, 0.1404, 0.1275,  ..., 0.1311, 0.1274, 0.1388],
         [0.1371, 0.1404, 0.1275,  ..., 0.1311, 0.1274, 0.1388],
         [0.1371, 0.1404, 0.1275,  ..., 0.1311, 0.1274, 0.1388],
         [0.5887, 0.5788, 0.6176,  ..., 0.6066, 0.6178, 0.5837]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:34,819 [Process: 0] Synchronize training processes
2024-08-16 15:48:34,820 [Process: 0] Evaluating...
2024-08-16 15:48:34,822 [Process: 0] EPOCH 26:
2024-08-16 15:48:34,824 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1405, 0.1350, 0.1319,  ..., 0.1554, 0.1303, 0.1370],
         [0.1405, 0.1350, 0.1319,  ..., 0.1554, 0.1303, 0.1370],
         [0.1405, 0.1350, 0.1319,  ..., 0.1554, 0.1303, 0.1370],
         [0.5786, 0.5949, 0.6042,  ..., 0.5338, 0.6091, 0.5891]],
        [[0.1335, 0.1437, 0.1404,  ..., 0.0778, 0.1332, 0.1450],
         [0.1335, 0.1437, 0.1404,  ..., 0.0778, 0.1332, 0.1450],
         [0.1335, 0.1437, 0.1404,  ..., 0.7666, 0.1332, 0.1450],
         [0.5995, 0.5690, 0.5787,  ..., 0.0778, 0.6005, 0.5650]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1159, 0.1261, 0.1268,  ..., 0.1340, 0.2500, 0.2500],
         [0.1159, 0.1261, 0.1268,  ..., 0.1340, 0.2500, 0.2500],
         [0.1159, 0.1261, 0.1268,  ..., 0.1340, 0.2500, 0.2500],
         [0.6522, 0.6217, 0.6197,  ..., 0.5979, 0.2500, 0.2500]],
        [[0.1241, 0.1161, 0.1293,  ..., 0.1418, 0.2500, 0.1123],
         [0.1241, 0.1161, 0.1293,  ..., 0.1418, 0.2500, 0.1123],
         [0.1241, 0.1161, 0.1293,  ..., 0.1418, 0.2500, 0.1123],
         [0.6277, 0.6517, 0.6122,  ..., 0.5746, 0.2500, 0.6630]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:36,798 [Process: 0] Synchronize training processes
2024-08-16 15:48:36,798 [Process: 0] Evaluating...
2024-08-16 15:48:36,800 [Process: 0] EPOCH 27:
2024-08-16 15:48:36,802 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1401, 0.1420, 0.1402,  ..., 0.1385, 0.1604, 0.1508],
         [0.1401, 0.1420, 0.1402,  ..., 0.1385, 0.1604, 0.1508],
         [0.1401, 0.1420, 0.1402,  ..., 0.1385, 0.1604, 0.1508],
         [0.5798, 0.5741, 0.5794,  ..., 0.5844, 0.5189, 0.5475]],
        [[0.1492, 0.1422, 0.1385,  ..., 0.1930, 0.1401, 0.1399],
         [0.1492, 0.1422, 0.1385,  ..., 0.1930, 0.1401, 0.1399],
         [0.1492, 0.1422, 0.1385,  ..., 0.4210, 0.1401, 0.1399],
         [0.5525, 0.5734, 0.5844,  ..., 0.1930, 0.5798, 0.5802]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1293, 0.1359, 0.1441,  ..., 0.1498, 0.1429, 0.1452],
         [0.1293, 0.1359, 0.1441,  ..., 0.1498, 0.1429, 0.1452],
         [0.1293, 0.1359, 0.1441,  ..., 0.1498, 0.1429, 0.1452],
         [0.6122, 0.5923, 0.5677,  ..., 0.5505, 0.5714, 0.5645]],
        [[0.1378, 0.1435, 0.1504,  ..., 0.1565, 0.2500, 0.1534],
         [0.1378, 0.1435, 0.1504,  ..., 0.1565, 0.2500, 0.1534],
         [0.1378, 0.1435, 0.1504,  ..., 0.1565, 0.2500, 0.1534],
         [0.5867, 0.5696, 0.5488,  ..., 0.5306, 0.2500, 0.5399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:48:38,727 [Process: 0] Synchronize training processes
2024-08-16 15:48:38,727 [Process: 0] Evaluating...
2024-08-16 15:48:38,730 [Process: 0] EPOCH 28:
2024-08-16 15:48:38,732 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1409, 0.1347, 0.1253,  ..., 0.1409, 0.1751, 0.1334],
         [0.1409, 0.1347, 0.1253,  ..., 0.1409, 0.1751, 0.1334],
         [0.1409, 0.1347, 0.1253,  ..., 0.1409, 0.1751, 0.1334],
         [0.5772, 0.5960, 0.6240,  ..., 0.5772, 0.4747, 0.5999]],
        [[0.1431, 0.1411, 0.1494,  ..., 0.1106, 0.1315, 0.1332],
         [0.1431, 0.1411, 0.1494,  ..., 0.1106, 0.1315, 0.1332],
         [0.1431, 0.1411, 0.1494,  ..., 0.6681, 0.1315, 0.1332],
         [0.5706, 0.5768, 0.5519,  ..., 0.1106, 0.6054, 0.6005]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1151, 0.1116, 0.1222,  ..., 0.1017, 0.2500, 0.2500],
         [0.1151, 0.1116, 0.1222,  ..., 0.1017, 0.2500, 0.2500],
         [0.1151, 0.1116, 0.1222,  ..., 0.1017, 0.2500, 0.2500],
         [0.6546, 0.6651, 0.6333,  ..., 0.6949, 0.2500, 0.2500]],
        [[0.1308, 0.1270, 0.1275,  ..., 0.1255, 0.2500, 0.1256],
         [0.1308, 0.1270, 0.1275,  ..., 0.1255, 0.2500, 0.1256],
         [0.1308, 0.1270, 0.1275,  ..., 0.1255, 0.2500, 0.1256],
         [0.6075, 0.6191, 0.6174,  ..., 0.6235, 0.2500, 0.6231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 15:48:40,795 [Process: 0] Synchronize training processes
2024-08-16 15:48:40,796 [Process: 0] Evaluating...
2024-08-16 15:48:40,798 [Process: 0] EPOCH 29:
2024-08-16 15:48:40,799 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1286, 0.1337, 0.1340,  ..., 0.1378, 0.1694, 0.1309],
         [0.1286, 0.1337, 0.1340,  ..., 0.1378, 0.1694, 0.1309],
         [0.1286, 0.1337, 0.1340,  ..., 0.1378, 0.1694, 0.1309],
         [0.6141, 0.5990, 0.5980,  ..., 0.5867, 0.4919, 0.6072]],
        [[0.1379, 0.1318, 0.1379,  ..., 0.0444, 0.1354, 0.1284],
         [0.1379, 0.1318, 0.1379,  ..., 0.0444, 0.1354, 0.1284],
         [0.1379, 0.1318, 0.1379,  ..., 0.8668, 0.1354, 0.1284],
         [0.5864, 0.6045, 0.5863,  ..., 0.0444, 0.5939, 0.6148]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1386, 0.1279, 0.1214,  ..., 0.1266, 0.2500, 0.2500],
         [0.1386, 0.1279, 0.1214,  ..., 0.1266, 0.2500, 0.2500],
         [0.1386, 0.1279, 0.1214,  ..., 0.1266, 0.2500, 0.2500],
         [0.5842, 0.6164, 0.6358,  ..., 0.6203, 0.2500, 0.2500]],
        [[0.1170, 0.1163, 0.1319,  ..., 0.1414, 0.1208, 0.1409],
         [0.1170, 0.1163, 0.1319,  ..., 0.1414, 0.1208, 0.1409],
         [0.1170, 0.1163, 0.1319,  ..., 0.1414, 0.1208, 0.1409],
         [0.6490, 0.6511, 0.6042,  ..., 0.5758, 0.6376, 0.5772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:42,875 [Process: 0] Synchronize training processes
2024-08-16 15:48:42,875 [Process: 0] Evaluating...
2024-08-16 15:48:42,877 [Process: 0] EPOCH 30:
2024-08-16 15:48:42,879 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1329, 0.1121, 0.1431,  ..., 0.1312, 0.1792, 0.1245],
         [0.1329, 0.1121, 0.1431,  ..., 0.1312, 0.1792, 0.1245],
         [0.1329, 0.1121, 0.1431,  ..., 0.1312, 0.1792, 0.1245],
         [0.6012, 0.6637, 0.5707,  ..., 0.6065, 0.4623, 0.6265]],
        [[0.1256, 0.1310, 0.1340,  ..., 0.0359, 0.1407, 0.1505],
         [0.1256, 0.1310, 0.1340,  ..., 0.0359, 0.1407, 0.1505],
         [0.1256, 0.1310, 0.1340,  ..., 0.8923, 0.1407, 0.1505],
         [0.6233, 0.6071, 0.5981,  ..., 0.0359, 0.5780, 0.5486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1227, 0.1171, 0.1160,  ..., 0.1198, 0.2500, 0.2500],
         [0.1227, 0.1171, 0.1160,  ..., 0.1198, 0.2500, 0.2500],
         [0.1227, 0.1171, 0.1160,  ..., 0.1198, 0.2500, 0.2500],
         [0.6319, 0.6486, 0.6520,  ..., 0.6405, 0.2500, 0.2500]],
        [[0.1199, 0.1361, 0.1319,  ..., 0.1358, 0.1199, 0.1289],
         [0.1199, 0.1361, 0.1319,  ..., 0.1358, 0.1199, 0.1289],
         [0.1199, 0.1361, 0.1319,  ..., 0.1358, 0.1199, 0.1289],
         [0.6404, 0.5916, 0.6043,  ..., 0.5926, 0.6403, 0.6132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:44,961 [Process: 0] Synchronize training processes
2024-08-16 15:48:44,962 [Process: 0] Evaluating...
2024-08-16 15:48:44,964 [Process: 0] EPOCH 31:
2024-08-16 15:48:44,966 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1270, 0.1197, 0.1234,  ..., 0.1171, 0.1394, 0.1301],
         [0.1270, 0.1197, 0.1234,  ..., 0.1171, 0.1394, 0.1301],
         [0.1270, 0.1197, 0.1234,  ..., 0.1171, 0.1394, 0.1301],
         [0.6191, 0.6410, 0.6299,  ..., 0.6487, 0.5818, 0.6098]],
        [[0.1223, 0.1273, 0.1337,  ..., 0.0337, 0.1379, 0.1318],
         [0.1223, 0.1273, 0.1337,  ..., 0.0337, 0.1379, 0.1318],
         [0.1223, 0.1273, 0.1337,  ..., 0.8989, 0.1379, 0.1318],
         [0.6330, 0.6182, 0.5990,  ..., 0.0337, 0.5862, 0.6047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1138, 0.1027, 0.1227,  ..., 0.1213, 0.2500, 0.2500],
         [0.1138, 0.1027, 0.1227,  ..., 0.1213, 0.2500, 0.2500],
         [0.1138, 0.1027, 0.1227,  ..., 0.1213, 0.2500, 0.2500],
         [0.6587, 0.6920, 0.6319,  ..., 0.6360, 0.2500, 0.2500]],
        [[0.1255, 0.1132, 0.1174,  ..., 0.1254, 0.1276, 0.1245],
         [0.1255, 0.1132, 0.1174,  ..., 0.1254, 0.1276, 0.1245],
         [0.1255, 0.1132, 0.1174,  ..., 0.1254, 0.1276, 0.1245],
         [0.6236, 0.6603, 0.6479,  ..., 0.6239, 0.6173, 0.6266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:47,034 [Process: 0] Synchronize training processes
2024-08-16 15:48:47,035 [Process: 0] Evaluating...
2024-08-16 15:48:47,043 [Process: 0] EPOCH 32:
2024-08-16 15:48:47,045 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1216, 0.1256, 0.1230,  ..., 0.1138, 0.1404, 0.1352],
         [0.1216, 0.1256, 0.1230,  ..., 0.1138, 0.1404, 0.1352],
         [0.1216, 0.1256, 0.1230,  ..., 0.1138, 0.1404, 0.1352],
         [0.6351, 0.6232, 0.6310,  ..., 0.6585, 0.5787, 0.5943]],
        [[0.1283, 0.1261, 0.1103,  ..., 0.0476, 0.1272, 0.1310],
         [0.1283, 0.1261, 0.1103,  ..., 0.0476, 0.1272, 0.1310],
         [0.1283, 0.1261, 0.1103,  ..., 0.8573, 0.1272, 0.1310],
         [0.6151, 0.6216, 0.6690,  ..., 0.0476, 0.6185, 0.6069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1207, 0.1255, 0.1289,  ..., 0.1154, 0.2454, 0.2500],
         [0.1207, 0.1255, 0.1289,  ..., 0.1154, 0.2454, 0.2500],
         [0.1207, 0.1255, 0.1289,  ..., 0.1154, 0.2638, 0.2500],
         [0.6379, 0.6234, 0.6132,  ..., 0.6537, 0.2454, 0.2500]],
        [[0.1380, 0.1227, 0.1229,  ..., 0.1215, 0.1119, 0.1246],
         [0.1380, 0.1227, 0.1229,  ..., 0.1215, 0.1119, 0.1246],
         [0.1380, 0.1227, 0.1229,  ..., 0.1215, 0.1119, 0.1246],
         [0.5860, 0.6319, 0.6314,  ..., 0.6356, 0.6643, 0.6262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:49,135 [Process: 0] Synchronize training processes
2024-08-16 15:48:49,135 [Process: 0] Evaluating...
2024-08-16 15:48:49,137 [Process: 0] EPOCH 33:
2024-08-16 15:48:49,139 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1137, 0.1256, 0.1262,  ..., 0.1179, 0.1411, 0.1143],
         [0.1137, 0.1256, 0.1262,  ..., 0.1179, 0.1411, 0.1143],
         [0.1137, 0.1256, 0.1262,  ..., 0.1179, 0.1411, 0.1143],
         [0.6590, 0.6233, 0.6213,  ..., 0.6463, 0.5767, 0.6572]],
        [[0.1174, 0.1157, 0.1246,  ..., 0.0456, 0.1338, 0.1201],
         [0.1174, 0.1157, 0.1246,  ..., 0.0456, 0.1338, 0.1201],
         [0.1174, 0.1157, 0.1246,  ..., 0.8633, 0.1338, 0.1201],
         [0.6479, 0.6528, 0.6262,  ..., 0.0456, 0.5987, 0.6397]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1075, 0.1184, 0.1086,  ..., 0.1133, 0.2500, 0.2500],
         [0.1075, 0.1184, 0.1086,  ..., 0.1133, 0.2500, 0.2500],
         [0.1075, 0.1184, 0.1086,  ..., 0.1133, 0.2500, 0.2500],
         [0.6774, 0.6448, 0.6743,  ..., 0.6600, 0.2500, 0.2500]],
        [[0.1266, 0.1132, 0.1307,  ..., 0.1205, 0.1054, 0.1209],
         [0.1266, 0.1132, 0.1307,  ..., 0.1205, 0.1054, 0.1209],
         [0.1266, 0.1132, 0.1307,  ..., 0.1205, 0.1054, 0.1209],
         [0.6203, 0.6604, 0.6078,  ..., 0.6386, 0.6839, 0.6373]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:51,204 [Process: 0] Synchronize training processes
2024-08-16 15:48:51,204 [Process: 0] Evaluating...
2024-08-16 15:48:51,206 [Process: 0] EPOCH 34:
2024-08-16 15:48:51,208 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1188, 0.1043, 0.1111,  ..., 0.1199, 0.1377, 0.1113],
         [0.1188, 0.1043, 0.1111,  ..., 0.1199, 0.1377, 0.1113],
         [0.1188, 0.1043, 0.1111,  ..., 0.1199, 0.1377, 0.1113],
         [0.6435, 0.6871, 0.6667,  ..., 0.6402, 0.5868, 0.6660]],
        [[0.1100, 0.1142, 0.1221,  ..., 0.0140, 0.1121, 0.1218],
         [0.1100, 0.1142, 0.1221,  ..., 0.0140, 0.1121, 0.1218],
         [0.1100, 0.1142, 0.1221,  ..., 0.9580, 0.1121, 0.1218],
         [0.6700, 0.6575, 0.6338,  ..., 0.0140, 0.6637, 0.6346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1117, 0.1221, 0.1107,  ..., 0.1030, 0.2500, 0.2500],
         [0.1117, 0.1221, 0.1107,  ..., 0.1030, 0.2500, 0.2500],
         [0.1117, 0.1221, 0.1107,  ..., 0.1030, 0.2500, 0.2500],
         [0.6648, 0.6338, 0.6680,  ..., 0.6909, 0.2500, 0.2500]],
        [[0.1045, 0.0997, 0.1201,  ..., 0.1158, 0.1106, 0.1246],
         [0.1045, 0.0997, 0.1201,  ..., 0.1158, 0.1106, 0.1246],
         [0.1045, 0.0997, 0.1201,  ..., 0.1158, 0.1106, 0.1246],
         [0.6866, 0.7010, 0.6397,  ..., 0.6527, 0.6682, 0.6262]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:53,297 [Process: 0] Synchronize training processes
2024-08-16 15:48:53,297 [Process: 0] Evaluating...
2024-08-16 15:48:53,299 [Process: 0] EPOCH 35:
2024-08-16 15:48:53,301 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1286, 0.1040, 0.1119,  ..., 0.1132, 0.1348, 0.1053],
         [0.1286, 0.1040, 0.1119,  ..., 0.1132, 0.1348, 0.1053],
         [0.1286, 0.1040, 0.1119,  ..., 0.1132, 0.1348, 0.1053],
         [0.6142, 0.6880, 0.6642,  ..., 0.6604, 0.5956, 0.6840]],
        [[0.1093, 0.1201, 0.1115,  ..., 0.0187, 0.1195, 0.1021],
         [0.1093, 0.1201, 0.1115,  ..., 0.0187, 0.1195, 0.1021],
         [0.1093, 0.1201, 0.1115,  ..., 0.9438, 0.1195, 0.1021],
         [0.6720, 0.6398, 0.6654,  ..., 0.0187, 0.6416, 0.6938]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1117, 0.1116, 0.1104,  ..., 0.1104, 0.2500, 0.2500],
         [0.1117, 0.1116, 0.1104,  ..., 0.1104, 0.2500, 0.2500],
         [0.1117, 0.1116, 0.1104,  ..., 0.1104, 0.2500, 0.2500],
         [0.6650, 0.6653, 0.6689,  ..., 0.6687, 0.2500, 0.2500]],
        [[0.1259, 0.1163, 0.1100,  ..., 0.1126, 0.1159, 0.1145],
         [0.1259, 0.1163, 0.1100,  ..., 0.1126, 0.1159, 0.1145],
         [0.1259, 0.1163, 0.1100,  ..., 0.1126, 0.1159, 0.1145],
         [0.6224, 0.6511, 0.6701,  ..., 0.6623, 0.6524, 0.6565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:55,383 [Process: 0] Synchronize training processes
2024-08-16 15:48:55,383 [Process: 0] Evaluating...
2024-08-16 15:48:55,385 [Process: 0] EPOCH 36:
2024-08-16 15:48:55,387 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1198, 0.1030, 0.1139,  ..., 0.1038, 0.1054, 0.1062],
         [0.1198, 0.1030, 0.1139,  ..., 0.1038, 0.1054, 0.1062],
         [0.1198, 0.1030, 0.1139,  ..., 0.1038, 0.1054, 0.1062],
         [0.6407, 0.6909, 0.6582,  ..., 0.6887, 0.6838, 0.6813]],
        [[0.1099, 0.1170, 0.1174,  ..., 0.0059, 0.1272, 0.0975],
         [0.1099, 0.1170, 0.1174,  ..., 0.0059, 0.1272, 0.0975],
         [0.1099, 0.1170, 0.1174,  ..., 0.9824, 0.1272, 0.0975],
         [0.6703, 0.6490, 0.6477,  ..., 0.0059, 0.6184, 0.7076]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1354, 0.1310, 0.1213,  ..., 0.1211, 0.2500, 0.1076],
         [0.1354, 0.1310, 0.1213,  ..., 0.1211, 0.2500, 0.1076],
         [0.1354, 0.1310, 0.1213,  ..., 0.1211, 0.2500, 0.1076],
         [0.5938, 0.6069, 0.6362,  ..., 0.6368, 0.2500, 0.6773]],
        [[0.1158, 0.1231, 0.1151,  ..., 0.1168, 0.1261, 0.1103],
         [0.1158, 0.1231, 0.1151,  ..., 0.1168, 0.1261, 0.1103],
         [0.1158, 0.1231, 0.1151,  ..., 0.1168, 0.1261, 0.1103],
         [0.6527, 0.6307, 0.6547,  ..., 0.6495, 0.6217, 0.6691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:57,459 [Process: 0] Synchronize training processes
2024-08-16 15:48:57,459 [Process: 0] Evaluating...
2024-08-16 15:48:57,461 [Process: 0] EPOCH 37:
2024-08-16 15:48:57,463 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1083, 0.1056, 0.1112,  ..., 0.1165, 0.1093, 0.0986],
         [0.1083, 0.1056, 0.1112,  ..., 0.1165, 0.1093, 0.0986],
         [0.1083, 0.1056, 0.1112,  ..., 0.1165, 0.1093, 0.0986],
         [0.6752, 0.6831, 0.6664,  ..., 0.6506, 0.6722, 0.7042]],
        [[0.1194, 0.1150, 0.1143,  ..., 0.0180, 0.1036, 0.1234],
         [0.1194, 0.1151, 0.1143,  ..., 0.0180, 0.1036, 0.1234],
         [0.1194, 0.1150, 0.1143,  ..., 0.9461, 0.1036, 0.1234],
         [0.6419, 0.6549, 0.6572,  ..., 0.0180, 0.6893, 0.6299]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1279, 0.1273, 0.1240,  ..., 0.1138, 0.1317, 0.1192],
         [0.1279, 0.1273, 0.1240,  ..., 0.1138, 0.1317, 0.1192],
         [0.1279, 0.1273, 0.1240,  ..., 0.1138, 0.1317, 0.1192],
         [0.6164, 0.6182, 0.6279,  ..., 0.6585, 0.6050, 0.6425]],
        [[0.1299, 0.1358, 0.1333,  ..., 0.1451, 0.1382, 0.1379],
         [0.1299, 0.1358, 0.1333,  ..., 0.1451, 0.1382, 0.1379],
         [0.1299, 0.1358, 0.1333,  ..., 0.1451, 0.1382, 0.1379],
         [0.6102, 0.5925, 0.6002,  ..., 0.5648, 0.5854, 0.5863]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:48:59,534 [Process: 0] Synchronize training processes
2024-08-16 15:48:59,534 [Process: 0] Evaluating...
2024-08-16 15:48:59,536 [Process: 0] EPOCH 38:
2024-08-16 15:48:59,538 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1126, 0.0985, 0.1162,  ..., 0.1097, 0.1065, 0.1016],
         [0.1126, 0.0985, 0.1162,  ..., 0.1097, 0.1065, 0.1016],
         [0.1126, 0.0985, 0.1162,  ..., 0.1097, 0.1065, 0.1016],
         [0.6623, 0.7045, 0.6514,  ..., 0.6709, 0.6806, 0.6952]],
        [[0.1045, 0.1088, 0.1068,  ..., 0.0829, 0.1079, 0.1122],
         [0.1059, 0.1088, 0.1077,  ..., 0.0829, 0.1092, 0.1124],
         [0.1045, 0.1088, 0.1068,  ..., 0.7514, 0.1079, 0.1122],
         [0.6851, 0.6736, 0.6787,  ..., 0.0829, 0.6751, 0.6632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1030, 0.1121, 0.1127,  ..., 0.1116, 0.2500, 0.2500],
         [0.1030, 0.1121, 0.1127,  ..., 0.1116, 0.2500, 0.2500],
         [0.1030, 0.1121, 0.1127,  ..., 0.1116, 0.2500, 0.2500],
         [0.6909, 0.6637, 0.6620,  ..., 0.6651, 0.2500, 0.2500]],
        [[0.1009, 0.0972, 0.0919,  ..., 0.1063, 0.0995, 0.1052],
         [0.1009, 0.0972, 0.0919,  ..., 0.1063, 0.0995, 0.1052],
         [0.1009, 0.0972, 0.0919,  ..., 0.1063, 0.0995, 0.1052],
         [0.6972, 0.7083, 0.7244,  ..., 0.6812, 0.7015, 0.6843]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:01,605 [Process: 0] Synchronize training processes
2024-08-16 15:49:01,605 [Process: 0] Evaluating...
2024-08-16 15:49:01,608 [Process: 0] EPOCH 39:
2024-08-16 15:49:01,610 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1106, 0.1153, 0.0986,  ..., 0.1049, 0.1035, 0.1027],
         [0.1106, 0.1153, 0.0986,  ..., 0.1049, 0.1035, 0.1027],
         [0.1106, 0.1153, 0.0986,  ..., 0.1049, 0.1035, 0.1027],
         [0.6681, 0.6541, 0.7042,  ..., 0.6852, 0.6895, 0.6920]],
        [[0.1056, 0.1069, 0.1055,  ..., 0.0137, 0.1094, 0.0995],
         [0.1056, 0.1069, 0.1055,  ..., 0.0137, 0.1094, 0.0995],
         [0.1056, 0.1069, 0.1055,  ..., 0.9589, 0.1094, 0.0995],
         [0.6833, 0.6794, 0.6834,  ..., 0.0137, 0.6719, 0.7014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1059, 0.1126, 0.1035,  ..., 0.0984, 0.2500, 0.2500],
         [0.1059, 0.1126, 0.1035,  ..., 0.0984, 0.2500, 0.2500],
         [0.1059, 0.1126, 0.1035,  ..., 0.0984, 0.2500, 0.2500],
         [0.6822, 0.6623, 0.6894,  ..., 0.7048, 0.2500, 0.2500]],
        [[0.1058, 0.1037, 0.1074,  ..., 0.0995, 0.1150, 0.0918],
         [0.1058, 0.1037, 0.1074,  ..., 0.0995, 0.1150, 0.0918],
         [0.1058, 0.1037, 0.1074,  ..., 0.0995, 0.1150, 0.0918],
         [0.6827, 0.6888, 0.6777,  ..., 0.7016, 0.6550, 0.7245]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:03,670 [Process: 0] Synchronize training processes
2024-08-16 15:49:03,670 [Process: 0] Evaluating...
2024-08-16 15:49:03,672 [Process: 0] EPOCH 40:
2024-08-16 15:49:03,674 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1037, 0.1072, 0.1097,  ..., 0.0921, 0.1017, 0.1121],
         [0.1037, 0.1072, 0.1097,  ..., 0.0921, 0.1017, 0.1121],
         [0.1037, 0.1072, 0.1097,  ..., 0.0921, 0.1017, 0.1121],
         [0.6889, 0.6784, 0.6710,  ..., 0.7238, 0.6950, 0.6636]],
        [[0.1027, 0.1076, 0.1122,  ..., 0.0107, 0.1028, 0.1068],
         [0.1027, 0.1076, 0.1122,  ..., 0.0107, 0.1028, 0.1068],
         [0.1027, 0.1076, 0.1122,  ..., 0.9678, 0.1028, 0.1068],
         [0.6920, 0.6772, 0.6633,  ..., 0.0107, 0.6916, 0.6795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0980, 0.0942, 0.0969,  ..., 0.1002, 0.2500, 0.2500],
         [0.0980, 0.0942, 0.0969,  ..., 0.1002, 0.2500, 0.2500],
         [0.0980, 0.0942, 0.0969,  ..., 0.1002, 0.2500, 0.2500],
         [0.7061, 0.7173, 0.7092,  ..., 0.6995, 0.2500, 0.2500]],
        [[0.1072, 0.1055, 0.1126,  ..., 0.1070, 0.1007, 0.1113],
         [0.1072, 0.1055, 0.1126,  ..., 0.1070, 0.1007, 0.1113],
         [0.1072, 0.1055, 0.1126,  ..., 0.1070, 0.1007, 0.1113],
         [0.6783, 0.6835, 0.6623,  ..., 0.6791, 0.6978, 0.6660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:05,700 [Process: 0] Synchronize training processes
2024-08-16 15:49:05,700 [Process: 0] Evaluating...
2024-08-16 15:49:05,702 [Process: 0] EPOCH 41:
2024-08-16 15:49:05,704 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1010, 0.0920, 0.0919,  ..., 0.1037, 0.1017, 0.0960],
         [0.1010, 0.0920, 0.0919,  ..., 0.1037, 0.1017, 0.0960],
         [0.1010, 0.0920, 0.0919,  ..., 0.1037, 0.1017, 0.0960],
         [0.6969, 0.7241, 0.7242,  ..., 0.6890, 0.6949, 0.7119]],
        [[0.1128, 0.1056, 0.1010,  ..., 0.0075, 0.1052, 0.1040],
         [0.1128, 0.1056, 0.1010,  ..., 0.0066, 0.1052, 0.1040],
         [0.1128, 0.1056, 0.1010,  ..., 0.9793, 0.1052, 0.1040],
         [0.6616, 0.6832, 0.6970,  ..., 0.0066, 0.6844, 0.6879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1132, 0.1075, 0.1021,  ..., 0.0982, 0.2496, 0.2500],
         [0.1132, 0.1075, 0.1021,  ..., 0.0982, 0.2512, 0.2500],
         [0.1132, 0.1075, 0.1021,  ..., 0.0982, 0.2496, 0.2500],
         [0.6605, 0.6774, 0.6936,  ..., 0.7053, 0.2496, 0.2500]],
        [[0.1015, 0.1038, 0.1115,  ..., 0.0925, 0.1054, 0.0968],
         [0.1015, 0.1038, 0.1115,  ..., 0.0925, 0.1054, 0.0968],
         [0.1015, 0.1038, 0.1115,  ..., 0.0925, 0.1054, 0.0968],
         [0.6955, 0.6886, 0.6656,  ..., 0.7225, 0.6839, 0.7095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:07,683 [Process: 0] Synchronize training processes
2024-08-16 15:49:07,683 [Process: 0] Evaluating...
2024-08-16 15:49:07,691 [Process: 0] EPOCH 42:
2024-08-16 15:49:07,694 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1045, 0.1101, 0.1010,  ..., 0.1069, 0.1063, 0.1003],
         [0.1045, 0.1101, 0.1010,  ..., 0.1069, 0.1063, 0.1003],
         [0.1045, 0.1101, 0.1010,  ..., 0.1069, 0.1063, 0.1003],
         [0.6864, 0.6697, 0.6969,  ..., 0.6792, 0.6810, 0.6991]],
        [[0.1090, 0.1103, 0.1058,  ..., 0.0105, 0.0983, 0.1008],
         [0.1090, 0.1103, 0.1058,  ..., 0.0105, 0.0983, 0.1008],
         [0.1090, 0.1103, 0.1058,  ..., 0.9686, 0.0983, 0.1008],
         [0.6730, 0.6691, 0.6825,  ..., 0.0105, 0.7051, 0.6976]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1100, 0.0989, 0.1029,  ..., 0.1035, 0.2500, 0.0980],
         [0.1100, 0.0989, 0.1029,  ..., 0.1035, 0.2500, 0.0980],
         [0.1100, 0.0989, 0.1029,  ..., 0.1035, 0.2500, 0.0980],
         [0.6701, 0.7034, 0.6912,  ..., 0.6894, 0.2500, 0.7061]],
        [[0.1020, 0.1099, 0.0961,  ..., 0.0968, 0.1052, 0.1120],
         [0.1020, 0.1099, 0.0961,  ..., 0.0968, 0.1052, 0.1120],
         [0.1020, 0.1099, 0.0961,  ..., 0.0968, 0.1052, 0.1120],
         [0.6941, 0.6703, 0.7118,  ..., 0.7097, 0.6844, 0.6641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:09,756 [Process: 0] Synchronize training processes
2024-08-16 15:49:09,757 [Process: 0] Evaluating...
2024-08-16 15:49:09,759 [Process: 0] EPOCH 43:
2024-08-16 15:49:09,761 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0933, 0.1063, 0.1012,  ..., 0.1093, 0.0971, 0.1015],
         [0.0933, 0.1063, 0.1012,  ..., 0.1093, 0.0971, 0.1015],
         [0.0933, 0.1063, 0.1012,  ..., 0.1093, 0.0971, 0.1015],
         [0.7201, 0.6810, 0.6965,  ..., 0.6720, 0.7086, 0.6956]],
        [[0.0958, 0.1071, 0.1090,  ..., 0.0039, 0.1028, 0.1155],
         [0.0958, 0.1071, 0.1090,  ..., 0.0039, 0.1028, 0.1155],
         [0.0958, 0.1071, 0.1090,  ..., 0.9882, 0.1028, 0.1155],
         [0.7126, 0.6788, 0.6730,  ..., 0.0039, 0.6916, 0.6534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1094, 0.1067, 0.1027,  ..., 0.1103, 0.0998, 0.1038],
         [0.1094, 0.1067, 0.1027,  ..., 0.1103, 0.0998, 0.1038],
         [0.1094, 0.1067, 0.1027,  ..., 0.1103, 0.0998, 0.1038],
         [0.6718, 0.6799, 0.6919,  ..., 0.6692, 0.7006, 0.6886]],
        [[0.1146, 0.1048, 0.1040,  ..., 0.1040, 0.1091, 0.1010],
         [0.1146, 0.1048, 0.1040,  ..., 0.1040, 0.1091, 0.1010],
         [0.1146, 0.1048, 0.1040,  ..., 0.1040, 0.1091, 0.1010],
         [0.6561, 0.6856, 0.6879,  ..., 0.6880, 0.6727, 0.6969]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:11,794 [Process: 0] Synchronize training processes
2024-08-16 15:49:11,794 [Process: 0] Evaluating...
2024-08-16 15:49:11,796 [Process: 0] EPOCH 44:
2024-08-16 15:49:11,798 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1111, 0.0980, 0.1051,  ..., 0.1038, 0.1016, 0.1038],
         [0.1111, 0.0980, 0.1051,  ..., 0.1038, 0.1016, 0.1038],
         [0.1111, 0.0980, 0.1051,  ..., 0.1038, 0.1016, 0.1038],
         [0.6666, 0.7061, 0.6846,  ..., 0.6886, 0.6952, 0.6887]],
        [[0.0947, 0.0996, 0.0939,  ..., 0.0072, 0.1052, 0.1023],
         [0.0947, 0.0996, 0.0939,  ..., 0.0072, 0.1052, 0.1023],
         [0.0947, 0.0996, 0.0939,  ..., 0.9784, 0.1052, 0.1023],
         [0.7159, 0.7011, 0.7183,  ..., 0.0072, 0.6843, 0.6932]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:49:13,883 [Process: 0] Synchronize training processes
2024-08-16 15:49:13,883 [Process: 0] Evaluating...
2024-08-16 15:49:13,885 [Process: 0] EPOCH 45:
2024-08-16 15:49:13,887 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1133, 0.1084, 0.1129,  ..., 0.1053, 0.1009, 0.1035],
         [0.1133, 0.1084, 0.1129,  ..., 0.1053, 0.1009, 0.1035],
         [0.1133, 0.1084, 0.1129,  ..., 0.1053, 0.1009, 0.1035],
         [0.6601, 0.6749, 0.6613,  ..., 0.6842, 0.6973, 0.6895]],
        [[0.1048, 0.1170, 0.1070,  ..., 0.1145, 0.1106, 0.1115],
         [0.1048, 0.1170, 0.1070,  ..., 0.1145, 0.1106, 0.1115],
         [0.1048, 0.1170, 0.1070,  ..., 0.1145, 0.1106, 0.1115],
         [0.6856, 0.6490, 0.6789,  ..., 0.6565, 0.6682, 0.6656]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0997, 0.1045, 0.0968,  ..., 0.1144, 0.1104, 0.0986],
         [0.0997, 0.1045, 0.0968,  ..., 0.1144, 0.1104, 0.0986],
         [0.0997, 0.1045, 0.0968,  ..., 0.1144, 0.1104, 0.0986],
         [0.7009, 0.6866, 0.7096,  ..., 0.6568, 0.6689, 0.7042]],
        [[0.1046, 0.1107, 0.1042,  ..., 0.0018, 0.1024, 0.1060],
         [0.1046, 0.1107, 0.1042,  ..., 0.0018, 0.1024, 0.1060],
         [0.1046, 0.1107, 0.1042,  ..., 0.9946, 0.1024, 0.1060],
         [0.6862, 0.6680, 0.6873,  ..., 0.0018, 0.6928, 0.6821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:49:15,965 [Process: 0] Synchronize training processes
2024-08-16 15:49:15,965 [Process: 0] Evaluating...
2024-08-16 15:49:15,967 [Process: 0] EPOCH 46:
2024-08-16 15:49:15,969 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1114, 0.1026, 0.1043,  ..., 0.1051, 0.1150, 0.1061],
         [0.1114, 0.1026, 0.1043,  ..., 0.1051, 0.1150, 0.1061],
         [0.1114, 0.1026, 0.1043,  ..., 0.1051, 0.1150, 0.1061],
         [0.6658, 0.6922, 0.6870,  ..., 0.6847, 0.6550, 0.6817]],
        [[0.1089, 0.1133, 0.1153,  ..., 0.1086, 0.1124, 0.1058],
         [0.1089, 0.1133, 0.1153,  ..., 0.1086, 0.1124, 0.1058],
         [0.1089, 0.1133, 0.1153,  ..., 0.1086, 0.1124, 0.1058],
         [0.6732, 0.6602, 0.6542,  ..., 0.6741, 0.6629, 0.6826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0302e-01, 1.0708e-01, 9.7485e-02,  ..., 1.0291e-01,
          9.9601e-02, 9.7644e-02],
         [1.0302e-01, 1.0708e-01, 9.7485e-02,  ..., 1.0291e-01,
          9.9601e-02, 9.7644e-02],
         [1.0302e-01, 1.0708e-01, 9.7485e-02,  ..., 1.0291e-01,
          9.9601e-02, 9.7644e-02],
         [6.9093e-01, 6.7875e-01, 7.0754e-01,  ..., 6.9128e-01,
          7.0120e-01, 7.0707e-01]],
        [[1.0340e-01, 9.9054e-02, 1.0130e-01,  ..., 5.2699e-04,
          1.0217e-01, 9.9514e-02],
         [1.0340e-01, 9.9054e-02, 1.0130e-01,  ..., 5.2699e-04,
          1.0217e-01, 9.9514e-02],
         [1.0340e-01, 9.9054e-02, 1.0130e-01,  ..., 9.9842e-01,
          1.0217e-01, 9.9514e-02],
         [6.8980e-01, 7.0284e-01, 6.9611e-01,  ..., 5.2699e-04,
          6.9349e-01, 7.0146e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:18,054 [Process: 0] Synchronize training processes
2024-08-16 15:49:18,054 [Process: 0] Evaluating...
2024-08-16 15:49:18,056 [Process: 0] EPOCH 47:
2024-08-16 15:49:18,058 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1029, 0.1128, 0.1130,  ..., 0.1057, 0.1040, 0.1133],
         [0.1029, 0.1128, 0.1130,  ..., 0.1057, 0.1040, 0.1133],
         [0.1029, 0.1128, 0.1130,  ..., 0.1057, 0.1040, 0.1133],
         [0.6913, 0.6617, 0.6609,  ..., 0.6828, 0.6881, 0.6601]],
        [[0.1197, 0.1150, 0.1053,  ..., 0.1071, 0.1167, 0.1123],
         [0.1197, 0.1150, 0.1053,  ..., 0.1071, 0.1167, 0.1123],
         [0.1197, 0.1150, 0.1053,  ..., 0.1071, 0.1167, 0.1123],
         [0.6409, 0.6551, 0.6842,  ..., 0.6788, 0.6499, 0.6631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1068, 0.1030, 0.1009,  ..., 0.0997, 0.1076, 0.1021],
         [0.1068, 0.1030, 0.1009,  ..., 0.0997, 0.1076, 0.1021],
         [0.1068, 0.1030, 0.1009,  ..., 0.0997, 0.1076, 0.1021],
         [0.6796, 0.6910, 0.6974,  ..., 0.7009, 0.6772, 0.6938]],
        [[0.0987, 0.1022, 0.0995,  ..., 0.0021, 0.0988, 0.0993],
         [0.0987, 0.1022, 0.0995,  ..., 0.0021, 0.0988, 0.0993],
         [0.0987, 0.1022, 0.0995,  ..., 0.9938, 0.0988, 0.0993],
         [0.7040, 0.6934, 0.7016,  ..., 0.0021, 0.7035, 0.7020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:20,173 [Process: 0] Synchronize training processes
2024-08-16 15:49:20,173 [Process: 0] Evaluating...
2024-08-16 15:49:20,175 [Process: 0] EPOCH 48:
2024-08-16 15:49:20,178 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1119, 0.1051, 0.1030,  ..., 0.1055, 0.1077, 0.1071],
         [0.1119, 0.1051, 0.1030,  ..., 0.1055, 0.1077, 0.1071],
         [0.1119, 0.1051, 0.1030,  ..., 0.1055, 0.1077, 0.1071],
         [0.6643, 0.6848, 0.6911,  ..., 0.6834, 0.6769, 0.6788]],
        [[0.1097, 0.1138, 0.1126,  ..., 0.1113, 0.1149, 0.1114],
         [0.1097, 0.1138, 0.1126,  ..., 0.1113, 0.1149, 0.1114],
         [0.1097, 0.1138, 0.1126,  ..., 0.1113, 0.1149, 0.1114],
         [0.6710, 0.6585, 0.6622,  ..., 0.6660, 0.6553, 0.6659]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0919, 0.0995, 0.1021,  ..., 0.0985, 0.0974, 0.0939],
         [0.0919, 0.0995, 0.1021,  ..., 0.0985, 0.0974, 0.0939],
         [0.0919, 0.0995, 0.1021,  ..., 0.0985, 0.0974, 0.0939],
         [0.7244, 0.7016, 0.6938,  ..., 0.7045, 0.7078, 0.7183]],
        [[0.0990, 0.0994, 0.1052,  ..., 0.0029, 0.1028, 0.1010],
         [0.0990, 0.0994, 0.1052,  ..., 0.0029, 0.1028, 0.1010],
         [0.0990, 0.0994, 0.1052,  ..., 0.9912, 0.1028, 0.1010],
         [0.7030, 0.7017, 0.6843,  ..., 0.0029, 0.6915, 0.6970]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:22,246 [Process: 0] Synchronize training processes
2024-08-16 15:49:22,246 [Process: 0] Evaluating...
2024-08-16 15:49:22,248 [Process: 0] EPOCH 49:
2024-08-16 15:49:22,250 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1125, 0.1005, 0.1021,  ..., 0.1085, 0.1097, 0.1044],
         [0.1125, 0.1005, 0.1021,  ..., 0.1085, 0.1097, 0.1044],
         [0.1125, 0.1005, 0.1021,  ..., 0.1085, 0.1097, 0.1044],
         [0.6624, 0.6986, 0.6938,  ..., 0.6744, 0.6709, 0.6867]],
        [[0.1050, 0.1079, 0.1010,  ..., 0.1024, 0.1094, 0.1084],
         [0.1050, 0.1079, 0.1010,  ..., 0.1024, 0.1094, 0.1084],
         [0.1050, 0.1079, 0.1010,  ..., 0.1024, 0.1094, 0.1084],
         [0.6851, 0.6763, 0.6970,  ..., 0.6927, 0.6717, 0.6748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.9112e-02, 9.7581e-02, 9.8781e-02,  ..., 9.6029e-02,
          9.9431e-02, 9.4410e-02],
         [9.9112e-02, 9.7581e-02, 9.8781e-02,  ..., 9.6029e-02,
          9.9431e-02, 9.4410e-02],
         [9.9112e-02, 9.7581e-02, 9.8781e-02,  ..., 9.6029e-02,
          9.9431e-02, 9.4410e-02],
         [7.0267e-01, 7.0726e-01, 7.0366e-01,  ..., 7.1191e-01,
          7.0171e-01, 7.1677e-01]],
        [[9.4621e-02, 9.7597e-02, 9.3405e-02,  ..., 6.5285e-04,
          9.9088e-02, 9.6579e-02],
         [9.4621e-02, 9.7597e-02, 9.3405e-02,  ..., 6.5285e-04,
          9.9088e-02, 9.6579e-02],
         [9.4621e-02, 9.7597e-02, 9.3405e-02,  ..., 9.9804e-01,
          9.9088e-02, 9.6579e-02],
         [7.1614e-01, 7.0721e-01, 7.1978e-01,  ..., 6.5285e-04,
          7.0274e-01, 7.1026e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:24,228 [Process: 0] Synchronize training processes
2024-08-16 15:49:24,229 [Process: 0] Evaluating...
2024-08-16 15:49:24,230 [Process: 0] EPOCH 50:
2024-08-16 15:49:24,232 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1133, 0.1023, 0.1072,  ..., 0.1052, 0.1043, 0.1010],
         [0.1133, 0.1023, 0.1072,  ..., 0.1052, 0.1043, 0.1010],
         [0.1133, 0.1023, 0.1072,  ..., 0.1052, 0.1043, 0.1010],
         [0.6600, 0.6930, 0.6783,  ..., 0.6843, 0.6871, 0.6971]],
        [[0.1081, 0.1047, 0.1053,  ..., 0.1036, 0.1056, 0.1051],
         [0.1081, 0.1047, 0.1053,  ..., 0.1036, 0.1056, 0.1051],
         [0.1081, 0.1047, 0.1053,  ..., 0.1036, 0.1056, 0.1051],
         [0.6758, 0.6859, 0.6840,  ..., 0.6891, 0.6831, 0.6848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0875, 0.0988, 0.0947,  ..., 0.0925, 0.0954, 0.0937],
         [0.0875, 0.0988, 0.0947,  ..., 0.0925, 0.0954, 0.0937],
         [0.0875, 0.0988, 0.0947,  ..., 0.0925, 0.0954, 0.0937],
         [0.7376, 0.7037, 0.7160,  ..., 0.7224, 0.7137, 0.7189]],
        [[0.0960, 0.0923, 0.0962,  ..., 0.0013, 0.0964, 0.0920],
         [0.0960, 0.0923, 0.0962,  ..., 0.0013, 0.0964, 0.0920],
         [0.0960, 0.0923, 0.0962,  ..., 0.9961, 0.0964, 0.0920],
         [0.7120, 0.7231, 0.7114,  ..., 0.0013, 0.7109, 0.7239]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:26,291 [Process: 0] Synchronize training processes
2024-08-16 15:49:26,292 [Process: 0] Evaluating...
2024-08-16 15:49:26,294 [Process: 0] EPOCH 51:
2024-08-16 15:49:26,296 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1094, 0.1047, 0.1038,  ..., 0.1047, 0.0998, 0.1000],
         [0.1094, 0.1047, 0.1038,  ..., 0.1047, 0.0998, 0.1000],
         [0.1094, 0.1047, 0.1038,  ..., 0.1047, 0.0998, 0.1000],
         [0.6717, 0.6858, 0.6885,  ..., 0.6858, 0.7005, 0.6999]],
        [[0.1139, 0.0993, 0.1011,  ..., 0.1021, 0.1061, 0.1032],
         [0.1139, 0.0993, 0.1011,  ..., 0.1021, 0.1061, 0.1032],
         [0.1139, 0.0993, 0.1011,  ..., 0.1021, 0.1061, 0.1032],
         [0.6582, 0.7021, 0.6968,  ..., 0.6938, 0.6818, 0.6903]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0896, 0.0941, 0.0952,  ..., 0.0945, 0.0900, 0.0919],
         [0.0896, 0.0941, 0.0952,  ..., 0.0945, 0.0900, 0.0919],
         [0.0896, 0.0941, 0.0952,  ..., 0.0945, 0.0900, 0.0919],
         [0.7311, 0.7176, 0.7145,  ..., 0.7164, 0.7301, 0.7243]],
        [[0.0967, 0.0900, 0.0946,  ..., 0.0026, 0.0897, 0.0905],
         [0.0967, 0.0900, 0.0946,  ..., 0.0026, 0.0897, 0.0905],
         [0.0967, 0.0900, 0.0946,  ..., 0.9921, 0.0897, 0.0905],
         [0.7099, 0.7301, 0.7163,  ..., 0.0026, 0.7310, 0.7286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:28,349 [Process: 0] Synchronize training processes
2024-08-16 15:49:28,349 [Process: 0] Evaluating...
2024-08-16 15:49:28,357 [Process: 0] EPOCH 52:
2024-08-16 15:49:28,359 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.1034, 0.0996, 0.0989,  ..., 0.0959, 0.0985, 0.0994],
         [0.1034, 0.0996, 0.0989,  ..., 0.0959, 0.0985, 0.0994],
         [0.1034, 0.0996, 0.0989,  ..., 0.0959, 0.0985, 0.0994],
         [0.6899, 0.7011, 0.7034,  ..., 0.7123, 0.7045, 0.7018]],
        [[0.1036, 0.1037, 0.1005,  ..., 0.1006, 0.0967, 0.1080],
         [0.1036, 0.1037, 0.1005,  ..., 0.1006, 0.0967, 0.1080],
         [0.1036, 0.1037, 0.1005,  ..., 0.1006, 0.0967, 0.1080],
         [0.6893, 0.6889, 0.6986,  ..., 0.6981, 0.7098, 0.6760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0823, 0.0824, 0.0817,  ..., 0.0837, 0.0862, 0.0879],
         [0.0823, 0.0824, 0.0817,  ..., 0.0837, 0.0862, 0.0879],
         [0.0823, 0.0824, 0.0817,  ..., 0.0837, 0.0862, 0.0879],
         [0.7531, 0.7528, 0.7548,  ..., 0.7490, 0.7414, 0.7363]],
        [[0.0946, 0.0947, 0.0856,  ..., 0.0099, 0.0889, 0.0889],
         [0.0946, 0.0947, 0.0856,  ..., 0.0099, 0.0889, 0.0889],
         [0.0946, 0.0947, 0.0856,  ..., 0.9703, 0.0889, 0.0889],
         [0.7163, 0.7159, 0.7433,  ..., 0.0099, 0.7333, 0.7333]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:30,329 [Process: 0] Synchronize training processes
2024-08-16 15:49:30,330 [Process: 0] Evaluating...
2024-08-16 15:49:30,332 [Process: 0] EPOCH 53:
2024-08-16 15:49:30,334 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0945, 0.1025, 0.0907,  ..., 0.0977, 0.1026, 0.0913],
         [0.0945, 0.1025, 0.0907,  ..., 0.0977, 0.1026, 0.0913],
         [0.0945, 0.1025, 0.0907,  ..., 0.0977, 0.1026, 0.0913],
         [0.7164, 0.6926, 0.7278,  ..., 0.7068, 0.6922, 0.7261]],
        [[0.0976, 0.0965, 0.0965,  ..., 0.0944, 0.1050, 0.0971],
         [0.0976, 0.0965, 0.0965,  ..., 0.0944, 0.1050, 0.0971],
         [0.0976, 0.0965, 0.0965,  ..., 0.0944, 0.1050, 0.0971],
         [0.7073, 0.7104, 0.7104,  ..., 0.7168, 0.6851, 0.7086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0785, 0.0882, 0.0904,  ..., 0.0879, 0.0908, 0.0886],
         [0.0785, 0.0882, 0.0904,  ..., 0.0879, 0.0908, 0.0886],
         [0.0785, 0.0882, 0.0904,  ..., 0.0879, 0.0908, 0.0886],
         [0.7645, 0.7354, 0.7288,  ..., 0.7362, 0.7275, 0.7343]],
        [[0.0833, 0.0903, 0.0933,  ..., 0.0048, 0.0817, 0.0876],
         [0.0833, 0.0903, 0.0933,  ..., 0.0048, 0.0817, 0.0876],
         [0.0833, 0.0903, 0.0933,  ..., 0.9857, 0.0817, 0.0876],
         [0.7502, 0.7290, 0.7202,  ..., 0.0048, 0.7549, 0.7371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:32,343 [Process: 0] Synchronize training processes
2024-08-16 15:49:32,343 [Process: 0] Evaluating...
2024-08-16 15:49:32,345 [Process: 0] EPOCH 54:
2024-08-16 15:49:32,347 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0976, 0.0941, 0.0945,  ..., 0.1000, 0.0969, 0.0918],
         [0.0976, 0.0941, 0.0945,  ..., 0.1000, 0.0969, 0.0918],
         [0.0976, 0.0941, 0.0945,  ..., 0.1000, 0.0969, 0.0918],
         [0.7073, 0.7177, 0.7166,  ..., 0.7001, 0.7094, 0.7247]],
        [[0.0989, 0.0957, 0.1024,  ..., 0.0946, 0.1009, 0.0943],
         [0.0989, 0.0957, 0.1024,  ..., 0.0946, 0.1009, 0.0943],
         [0.0989, 0.0957, 0.1024,  ..., 0.0946, 0.1009, 0.0943],
         [0.7034, 0.7129, 0.6927,  ..., 0.7162, 0.6974, 0.7171]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0863, 0.0802, 0.0924,  ..., 0.0783, 0.0873, 0.0908],
         [0.0863, 0.0802, 0.0924,  ..., 0.0783, 0.0873, 0.0908],
         [0.0863, 0.0802, 0.0924,  ..., 0.0783, 0.0873, 0.0908],
         [0.7412, 0.7593, 0.7227,  ..., 0.7652, 0.7381, 0.7276]],
        [[0.0849, 0.0861, 0.0879,  ..., 0.0023, 0.0839, 0.0845],
         [0.0849, 0.0861, 0.0879,  ..., 0.0023, 0.0839, 0.0845],
         [0.0849, 0.0861, 0.0879,  ..., 0.9932, 0.0839, 0.0845],
         [0.7452, 0.7418, 0.7364,  ..., 0.0023, 0.7483, 0.7464]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:34,308 [Process: 0] Synchronize training processes
2024-08-16 15:49:34,308 [Process: 0] Evaluating...
2024-08-16 15:49:34,310 [Process: 0] EPOCH 55:
2024-08-16 15:49:34,312 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0981, 0.0937, 0.0981,  ..., 0.0975, 0.0983, 0.1026],
         [0.0981, 0.0937, 0.0981,  ..., 0.0975, 0.0983, 0.1026],
         [0.0981, 0.0937, 0.0981,  ..., 0.0975, 0.0983, 0.1026],
         [0.7056, 0.7188, 0.7057,  ..., 0.7074, 0.7050, 0.6923]],
        [[0.0961, 0.0953, 0.1003,  ..., 0.0942, 0.0970, 0.0927],
         [0.0961, 0.0953, 0.1003,  ..., 0.0942, 0.0970, 0.0927],
         [0.0961, 0.0953, 0.1003,  ..., 0.0942, 0.0970, 0.0927],
         [0.7117, 0.7140, 0.6991,  ..., 0.7173, 0.7089, 0.7219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0836, 0.0879, 0.0848,  ..., 0.0813, 0.0823, 0.0873],
         [0.0836, 0.0879, 0.0848,  ..., 0.0813, 0.0823, 0.0873],
         [0.0836, 0.0879, 0.0848,  ..., 0.0813, 0.0823, 0.0873],
         [0.7492, 0.7363, 0.7457,  ..., 0.7560, 0.7531, 0.7380]],
        [[0.0880, 0.0844, 0.0851,  ..., 0.0089, 0.0817, 0.0846],
         [0.0880, 0.0844, 0.0851,  ..., 0.0089, 0.0817, 0.0846],
         [0.0880, 0.0844, 0.0851,  ..., 0.9733, 0.0817, 0.0846],
         [0.7360, 0.7467, 0.7448,  ..., 0.0089, 0.7548, 0.7463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:36,232 [Process: 0] Synchronize training processes
2024-08-16 15:49:36,232 [Process: 0] Evaluating...
2024-08-16 15:49:36,235 [Process: 0] EPOCH 56:
2024-08-16 15:49:36,237 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0927, 0.0933, 0.0899,  ..., 0.0941, 0.1011, 0.0925],
         [0.0927, 0.0933, 0.0899,  ..., 0.0941, 0.1011, 0.0925],
         [0.0927, 0.0933, 0.0899,  ..., 0.0941, 0.1011, 0.0925],
         [0.7218, 0.7200, 0.7302,  ..., 0.7176, 0.6968, 0.7224]],
        [[0.0935, 0.0931, 0.0932,  ..., 0.0941, 0.0960, 0.0905],
         [0.0935, 0.0931, 0.0932,  ..., 0.0941, 0.0960, 0.0905],
         [0.0935, 0.0931, 0.0932,  ..., 0.0941, 0.0960, 0.0905],
         [0.7194, 0.7207, 0.7204,  ..., 0.7176, 0.7119, 0.7286]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0882, 0.0788, 0.0874,  ..., 0.0831, 0.0822, 0.0841],
         [0.0882, 0.0788, 0.0874,  ..., 0.0831, 0.0822, 0.0841],
         [0.0882, 0.0788, 0.0874,  ..., 0.0831, 0.0822, 0.0841],
         [0.7354, 0.7636, 0.7379,  ..., 0.7508, 0.7533, 0.7478]],
        [[0.0913, 0.0830, 0.0853,  ..., 0.0056, 0.0825, 0.0866],
         [0.0913, 0.0830, 0.0853,  ..., 0.0056, 0.0825, 0.0866],
         [0.0913, 0.0830, 0.0853,  ..., 0.9831, 0.0825, 0.0866],
         [0.7260, 0.7509, 0.7442,  ..., 0.0056, 0.7524, 0.7402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:38,207 [Process: 0] Synchronize training processes
2024-08-16 15:49:38,208 [Process: 0] Evaluating...
2024-08-16 15:49:38,210 [Process: 0] EPOCH 57:
2024-08-16 15:49:38,211 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0931, 0.0922, 0.0924,  ..., 0.0895, 0.0964, 0.0959],
         [0.0931, 0.0922, 0.0924,  ..., 0.0895, 0.0964, 0.0959],
         [0.0931, 0.0922, 0.0924,  ..., 0.0895, 0.0964, 0.0959],
         [0.7206, 0.7233, 0.7227,  ..., 0.7316, 0.7109, 0.7122]],
        [[0.0872, 0.0883, 0.0902,  ..., 0.0860, 0.1004, 0.0929],
         [0.0872, 0.0883, 0.0902,  ..., 0.0860, 0.1004, 0.0929],
         [0.0872, 0.0883, 0.0902,  ..., 0.0860, 0.1004, 0.0929],
         [0.7385, 0.7351, 0.7295,  ..., 0.7421, 0.6987, 0.7213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3159e-02, 7.9517e-02, 8.8637e-02,  ..., 8.4980e-02,
          8.2171e-02, 8.6151e-02],
         [8.3159e-02, 7.9517e-02, 8.8637e-02,  ..., 8.4980e-02,
          8.2171e-02, 8.6151e-02],
         [8.3159e-02, 7.9517e-02, 8.8637e-02,  ..., 8.4980e-02,
          8.2171e-02, 8.6151e-02],
         [7.5052e-01, 7.6145e-01, 7.3409e-01,  ..., 7.4506e-01,
          7.5349e-01, 7.4155e-01]],
        [[8.3689e-02, 8.8123e-02, 8.4766e-02,  ..., 1.7535e-04,
          8.6103e-02, 8.6041e-02],
         [8.3689e-02, 8.8123e-02, 8.4766e-02,  ..., 1.7535e-04,
          8.6103e-02, 8.6041e-02],
         [8.3689e-02, 8.8123e-02, 8.4766e-02,  ..., 9.9947e-01,
          8.6103e-02, 8.6041e-02],
         [7.4893e-01, 7.3563e-01, 7.4570e-01,  ..., 1.7535e-04,
          7.4169e-01, 7.4188e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:40,297 [Process: 0] Synchronize training processes
2024-08-16 15:49:40,297 [Process: 0] Evaluating...
2024-08-16 15:49:40,299 [Process: 0] EPOCH 58:
2024-08-16 15:49:40,301 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0966, 0.0966, 0.0957,  ..., 0.0848, 0.0871, 0.0890],
         [0.0966, 0.0966, 0.0957,  ..., 0.0848, 0.0871, 0.0890],
         [0.0966, 0.0966, 0.0957,  ..., 0.0848, 0.0871, 0.0890],
         [0.7101, 0.7101, 0.7128,  ..., 0.7455, 0.7386, 0.7329]],
        [[0.0909, 0.0921, 0.0902,  ..., 0.0889, 0.0910, 0.0848],
         [0.0909, 0.0921, 0.0902,  ..., 0.0889, 0.0910, 0.0848],
         [0.0909, 0.0921, 0.0902,  ..., 0.0889, 0.0910, 0.0848],
         [0.7272, 0.7237, 0.7293,  ..., 0.7332, 0.7271, 0.7457]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1081e-02, 8.0635e-02, 7.8924e-02,  ..., 8.1149e-02,
          8.6315e-02, 8.0443e-02],
         [7.1081e-02, 8.0635e-02, 7.8924e-02,  ..., 8.1149e-02,
          8.6315e-02, 8.0443e-02],
         [7.1081e-02, 8.0635e-02, 7.8924e-02,  ..., 8.1149e-02,
          8.6315e-02, 8.0443e-02],
         [7.8676e-01, 7.5810e-01, 7.6323e-01,  ..., 7.5655e-01,
          7.4105e-01, 7.5867e-01]],
        [[8.4854e-02, 8.3756e-02, 8.4357e-02,  ..., 6.6427e-05,
          8.5169e-02, 8.0944e-02],
         [8.4854e-02, 8.3756e-02, 8.4357e-02,  ..., 6.6427e-05,
          8.5169e-02, 8.0944e-02],
         [8.4854e-02, 8.3756e-02, 8.4357e-02,  ..., 9.9980e-01,
          8.5169e-02, 8.0944e-02],
         [7.4544e-01, 7.4873e-01, 7.4693e-01,  ..., 6.6427e-05,
          7.4449e-01, 7.5717e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:42,370 [Process: 0] Synchronize training processes
2024-08-16 15:49:42,370 [Process: 0] Evaluating...
2024-08-16 15:49:42,372 [Process: 0] EPOCH 59:
2024-08-16 15:49:42,374 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0834, 0.0933, 0.0930,  ..., 0.0876, 0.0949, 0.0898],
         [0.0834, 0.0933, 0.0930,  ..., 0.0876, 0.0949, 0.0898],
         [0.0834, 0.0933, 0.0930,  ..., 0.0876, 0.0949, 0.0898],
         [0.7499, 0.7200, 0.7210,  ..., 0.7371, 0.7153, 0.7306]],
        [[0.0903, 0.0906, 0.0901,  ..., 0.0854, 0.0900, 0.0836],
         [0.0903, 0.0906, 0.0901,  ..., 0.0854, 0.0900, 0.0836],
         [0.0903, 0.0906, 0.0901,  ..., 0.0854, 0.0900, 0.0836],
         [0.7292, 0.7283, 0.7296,  ..., 0.7439, 0.7299, 0.7493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0801, 0.0822, 0.0781,  ..., 0.0788, 0.0770, 0.0713],
         [0.0801, 0.0822, 0.0781,  ..., 0.0788, 0.0770, 0.0713],
         [0.0801, 0.0822, 0.0781,  ..., 0.0788, 0.0770, 0.0713],
         [0.7596, 0.7535, 0.7657,  ..., 0.7635, 0.7689, 0.7861]],
        [[0.0826, 0.0769, 0.0855,  ..., 0.0055, 0.0826, 0.0827],
         [0.0826, 0.0769, 0.0855,  ..., 0.0055, 0.0826, 0.0827],
         [0.0826, 0.0769, 0.0855,  ..., 0.9834, 0.0826, 0.0827],
         [0.7523, 0.7692, 0.7436,  ..., 0.0055, 0.7523, 0.7519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:44,436 [Process: 0] Synchronize training processes
2024-08-16 15:49:44,436 [Process: 0] Evaluating...
2024-08-16 15:49:44,438 [Process: 0] EPOCH 60:
2024-08-16 15:49:44,440 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0906, 0.0885, 0.0901,  ..., 0.0865, 0.0904, 0.0874],
         [0.0906, 0.0885, 0.0901,  ..., 0.0865, 0.0904, 0.0874],
         [0.0906, 0.0885, 0.0901,  ..., 0.0865, 0.0904, 0.0874],
         [0.7283, 0.7346, 0.7296,  ..., 0.7405, 0.7288, 0.7378]],
        [[0.0907, 0.0890, 0.0922,  ..., 0.0840, 0.0857, 0.0885],
         [0.0907, 0.0890, 0.0922,  ..., 0.0840, 0.0857, 0.0885],
         [0.0907, 0.0890, 0.0922,  ..., 0.0840, 0.0857, 0.0885],
         [0.7278, 0.7331, 0.7233,  ..., 0.7480, 0.7429, 0.7346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0770, 0.0808, 0.0739,  ..., 0.0826, 0.0759, 0.0733],
         [0.0770, 0.0808, 0.0739,  ..., 0.0826, 0.0759, 0.0733],
         [0.0770, 0.0808, 0.0739,  ..., 0.0826, 0.0759, 0.0733],
         [0.7689, 0.7576, 0.7783,  ..., 0.7521, 0.7724, 0.7802]],
        [[0.0782, 0.0787, 0.0776,  ..., 0.0088, 0.0789, 0.0837],
         [0.0782, 0.0787, 0.0776,  ..., 0.0088, 0.0789, 0.0837],
         [0.0782, 0.0787, 0.0776,  ..., 0.9737, 0.0789, 0.0837],
         [0.7653, 0.7638, 0.7672,  ..., 0.0088, 0.7634, 0.7489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:46,511 [Process: 0] Synchronize training processes
2024-08-16 15:49:46,511 [Process: 0] Evaluating...
2024-08-16 15:49:46,513 [Process: 0] EPOCH 61:
2024-08-16 15:49:46,515 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0888, 0.0892, 0.0870,  ..., 0.0847, 0.0872, 0.0853],
         [0.0888, 0.0892, 0.0870,  ..., 0.0847, 0.0872, 0.0853],
         [0.0888, 0.0892, 0.0870,  ..., 0.0847, 0.0872, 0.0853],
         [0.7335, 0.7324, 0.7390,  ..., 0.7459, 0.7383, 0.7441]],
        [[0.0882, 0.0890, 0.0863,  ..., 0.0884, 0.0893, 0.0879],
         [0.0882, 0.0890, 0.0863,  ..., 0.0884, 0.0893, 0.0879],
         [0.0882, 0.0890, 0.0863,  ..., 0.0884, 0.0893, 0.0879],
         [0.7354, 0.7331, 0.7411,  ..., 0.7349, 0.7320, 0.7362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0791, 0.0764, 0.0767,  ..., 0.0699, 0.0796, 0.0743],
         [0.0791, 0.0764, 0.0767,  ..., 0.0699, 0.0796, 0.0743],
         [0.0791, 0.0764, 0.0767,  ..., 0.0699, 0.0796, 0.0743],
         [0.7626, 0.7707, 0.7699,  ..., 0.7903, 0.7612, 0.7770]],
        [[0.0737, 0.0780, 0.0767,  ..., 0.0053, 0.0740, 0.0772],
         [0.0737, 0.0780, 0.0767,  ..., 0.0053, 0.0740, 0.0772],
         [0.0737, 0.0780, 0.0767,  ..., 0.9840, 0.0740, 0.0772],
         [0.7790, 0.7661, 0.7698,  ..., 0.0053, 0.7779, 0.7683]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0885, 0.0842, 0.0842,  ..., 0.0796, 0.0816, 0.0868],
         [0.0885, 0.0842, 0.0842,  ..., 0.0796, 0.0816, 0.0868],
         [0.0885, 0.0842, 0.0842,  ..., 0.0796, 0.0816, 0.0868],
         [0.7344, 0.7474, 0.7475,  ..., 0.7613, 0.7553, 0.7395]],
        [[0.0853, 0.0853, 0.0844,  ..., 0.0798, 0.0838, 0.0842],
         [0.0853, 0.0853, 0.0844,  ..., 0.0798, 0.0838, 0.0842],
         [0.0853, 0.0853, 0.0844,  ..., 0.0798, 0.0838, 0.0842],
         [0.7442, 0.7440, 0.7469,  ..., 0.7605, 0.7487, 0.7473]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0773, 0.0759, 0.0734,  ..., 0.0725, 0.0733, 0.0701],
         [0.0773, 0.0759, 0.0734,  ..., 0.0725, 0.0733, 0.0701],
         [0.0773, 0.0759, 0.0734,  ..., 0.0725, 0.0733, 0.0701],
         [0.7680, 0.7722, 0.7798,  ..., 0.7826, 0.7802, 0.7896]],
        [[0.0801, 0.0757, 0.0756,  ..., 0.0066, 0.0768, 0.0785],
         [0.0801, 0.0757, 0.0756,  ..., 0.0066, 0.0768, 0.0785],
         [0.0801, 0.0757, 0.0756,  ..., 0.9803, 0.0768, 0.0785],
         [0.7597, 0.7729, 0.7731,  ..., 0.0066, 0.7696, 0.7645]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:48,576 [Process: 0] Synchronize training processes
2024-08-16 15:49:48,576 [Process: 0] Evaluating...
2024-08-16 15:49:48,584 [Process: 0] EPOCH 62:
2024-08-16 15:49:48,586 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0842, 0.0835, 0.0841,  ..., 0.0799, 0.0836, 0.0838],
         [0.0842, 0.0835, 0.0841,  ..., 0.0799, 0.0836, 0.0838],
         [0.0842, 0.0835, 0.0841,  ..., 0.0799, 0.0836, 0.0838],
         [0.7475, 0.7495, 0.7478,  ..., 0.7602, 0.7493, 0.7487]],
        [[0.0842, 0.0875, 0.0836,  ..., 0.0848, 0.0850, 0.0907],
         [0.0842, 0.0875, 0.0836,  ..., 0.0848, 0.0850, 0.0907],
         [0.0842, 0.0875, 0.0836,  ..., 0.0848, 0.0850, 0.0907],
         [0.7474, 0.7375, 0.7491,  ..., 0.7455, 0.7450, 0.7279]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5890e-02, 8.0073e-02, 7.6881e-02,  ..., 7.2921e-02,
          7.9561e-02, 8.1940e-02],
         [7.5890e-02, 8.0073e-02, 7.6881e-02,  ..., 7.2921e-02,
          7.9561e-02, 8.1940e-02],
         [7.5890e-02, 8.0073e-02, 7.6881e-02,  ..., 7.2921e-02,
          7.9561e-02, 8.1940e-02],
         [7.7233e-01, 7.5978e-01, 7.6936e-01,  ..., 7.8124e-01,
          7.6132e-01, 7.5418e-01]],
        [[8.1134e-02, 7.6833e-02, 7.2493e-02,  ..., 8.0202e-04,
          7.6295e-02, 7.5688e-02],
         [8.1134e-02, 7.6833e-02, 7.2493e-02,  ..., 8.0202e-04,
          7.6295e-02, 7.5688e-02],
         [8.1134e-02, 7.6833e-02, 7.2493e-02,  ..., 9.9759e-01,
          7.6295e-02, 7.5688e-02],
         [7.5660e-01, 7.6950e-01, 7.8252e-01,  ..., 8.0202e-04,
          7.7111e-01, 7.7294e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:50,653 [Process: 0] Synchronize training processes
2024-08-16 15:49:50,654 [Process: 0] Evaluating...
2024-08-16 15:49:50,656 [Process: 0] EPOCH 63:
2024-08-16 15:49:50,658 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0843, 0.0869, 0.0850,  ..., 0.0851, 0.0860, 0.0793],
         [0.0843, 0.0869, 0.0850,  ..., 0.0851, 0.0860, 0.0793],
         [0.0843, 0.0869, 0.0850,  ..., 0.0851, 0.0860, 0.0793],
         [0.7472, 0.7392, 0.7449,  ..., 0.7448, 0.7420, 0.7620]],
        [[0.0802, 0.0827, 0.0799,  ..., 0.0820, 0.0793, 0.0865],
         [0.0802, 0.0827, 0.0799,  ..., 0.0820, 0.0793, 0.0865],
         [0.0802, 0.0827, 0.0799,  ..., 0.0820, 0.0793, 0.0865],
         [0.7593, 0.7519, 0.7604,  ..., 0.7541, 0.7620, 0.7406]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7496e-02, 7.3569e-02, 7.5490e-02,  ..., 7.8000e-02,
          7.5915e-02, 7.4544e-02],
         [7.7496e-02, 7.3569e-02, 7.5490e-02,  ..., 7.8000e-02,
          7.5915e-02, 7.4544e-02],
         [7.7496e-02, 7.3569e-02, 7.5490e-02,  ..., 7.8000e-02,
          7.5915e-02, 7.4544e-02],
         [7.6751e-01, 7.7929e-01, 7.7353e-01,  ..., 7.6600e-01,
          7.7225e-01, 7.7637e-01]],
        [[7.6555e-02, 7.6442e-02, 7.7743e-02,  ..., 7.9835e-04,
          7.7465e-02, 7.6540e-02],
         [7.6555e-02, 7.6442e-02, 7.7743e-02,  ..., 7.9835e-04,
          7.7465e-02, 7.6540e-02],
         [7.6555e-02, 7.6442e-02, 7.7743e-02,  ..., 9.9760e-01,
          7.7465e-02, 7.6540e-02],
         [7.7034e-01, 7.7067e-01, 7.6677e-01,  ..., 7.9835e-04,
          7.6760e-01, 7.7038e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:49:52,752 [Process: 0] Synchronize training processes
2024-08-16 15:49:52,752 [Process: 0] Evaluating...
2024-08-16 15:49:52,754 [Process: 0] EPOCH 64:
2024-08-16 15:49:52,756 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0807, 0.0860, 0.0811,  ..., 0.0842, 0.0842, 0.0858],
         [0.0807, 0.0860, 0.0811,  ..., 0.0842, 0.0842, 0.0858],
         [0.0807, 0.0860, 0.0811,  ..., 0.0842, 0.0842, 0.0858],
         [0.7578, 0.7419, 0.7567,  ..., 0.7473, 0.7474, 0.7425]],
        [[0.0825, 0.0839, 0.0796,  ..., 0.0812, 0.0859, 0.0827],
         [0.0825, 0.0839, 0.0796,  ..., 0.0812, 0.0859, 0.0827],
         [0.0825, 0.0839, 0.0796,  ..., 0.0812, 0.0859, 0.0827],
         [0.7525, 0.7482, 0.7613,  ..., 0.7565, 0.7422, 0.7520]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0741, 0.0690, 0.0732,  ..., 0.0754, 0.0723, 0.0740],
         [0.0741, 0.0690, 0.0732,  ..., 0.0754, 0.0723, 0.0740],
         [0.0741, 0.0690, 0.0732,  ..., 0.0754, 0.0723, 0.0740],
         [0.7777, 0.7930, 0.7804,  ..., 0.7739, 0.7830, 0.7780]],
        [[0.0776, 0.0722, 0.0771,  ..., 0.0012, 0.0771, 0.0782],
         [0.0776, 0.0722, 0.0771,  ..., 0.0012, 0.0771, 0.0782],
         [0.0776, 0.0722, 0.0771,  ..., 0.9963, 0.0771, 0.0782],
         [0.7672, 0.7835, 0.7688,  ..., 0.0012, 0.7687, 0.7655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:54,860 [Process: 0] Synchronize training processes
2024-08-16 15:49:54,861 [Process: 0] Evaluating...
2024-08-16 15:49:54,863 [Process: 0] EPOCH 65:
2024-08-16 15:49:54,865 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0841, 0.0829, 0.0818,  ..., 0.0812, 0.0868, 0.0787],
         [0.0841, 0.0829, 0.0818,  ..., 0.0812, 0.0868, 0.0787],
         [0.0841, 0.0829, 0.0818,  ..., 0.0812, 0.0868, 0.0787],
         [0.7476, 0.7512, 0.7547,  ..., 0.7564, 0.7396, 0.7639]],
        [[0.0773, 0.0868, 0.0801,  ..., 0.0775, 0.0822, 0.0760],
         [0.0773, 0.0868, 0.0801,  ..., 0.0775, 0.0822, 0.0760],
         [0.0773, 0.0868, 0.0801,  ..., 0.0775, 0.0822, 0.0760],
         [0.7682, 0.7397, 0.7598,  ..., 0.7675, 0.7533, 0.7719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:49:57,033 [Process: 0] Synchronize training processes
2024-08-16 15:49:57,033 [Process: 0] Evaluating...
2024-08-16 15:49:57,035 [Process: 0] EPOCH 66:
2024-08-16 15:49:57,037 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0711, 0.0702, 0.0707,  ..., 0.0708, 0.0742, 0.0732],
         [0.0711, 0.0702, 0.0707,  ..., 0.0708, 0.0742, 0.0732],
         [0.0711, 0.0702, 0.0707,  ..., 0.0708, 0.0742, 0.0732],
         [0.7867, 0.7893, 0.7879,  ..., 0.7875, 0.7775, 0.7803]],
        [[0.0710, 0.0765, 0.0749,  ..., 0.0015, 0.0718, 0.0692],
         [0.0710, 0.0765, 0.0749,  ..., 0.0015, 0.0718, 0.0692],
         [0.0710, 0.0765, 0.0749,  ..., 0.9954, 0.0718, 0.0692],
         [0.7869, 0.7704, 0.7752,  ..., 0.0015, 0.7845, 0.7923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0808, 0.0850, 0.0807,  ..., 0.0815, 0.0852, 0.0835],
         [0.0808, 0.0850, 0.0807,  ..., 0.0815, 0.0852, 0.0835],
         [0.0808, 0.0850, 0.0807,  ..., 0.0815, 0.0852, 0.0835],
         [0.7575, 0.7451, 0.7578,  ..., 0.7554, 0.7444, 0.7494]],
        [[0.0780, 0.0748, 0.0791,  ..., 0.0761, 0.0799, 0.0787],
         [0.0780, 0.0748, 0.0791,  ..., 0.0761, 0.0799, 0.0787],
         [0.0780, 0.0748, 0.0791,  ..., 0.0761, 0.0799, 0.0787],
         [0.7660, 0.7756, 0.7627,  ..., 0.7717, 0.7602, 0.7640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:49:59,154 [Process: 0] Synchronize training processes
2024-08-16 15:49:59,155 [Process: 0] Evaluating...
2024-08-16 15:49:59,157 [Process: 0] EPOCH 67:
2024-08-16 15:49:59,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0688, 0.0672, 0.0722,  ..., 0.0703, 0.0682, 0.0709],
         [0.0688, 0.0672, 0.0722,  ..., 0.0703, 0.0682, 0.0709],
         [0.0688, 0.0672, 0.0722,  ..., 0.0703, 0.0682, 0.0709],
         [0.7937, 0.7983, 0.7835,  ..., 0.7892, 0.7954, 0.7874]],
        [[0.0742, 0.0738, 0.0735,  ..., 0.0012, 0.0736, 0.0765],
         [0.0742, 0.0738, 0.0735,  ..., 0.0012, 0.0736, 0.0765],
         [0.0742, 0.0738, 0.0735,  ..., 0.9964, 0.0736, 0.0765],
         [0.7773, 0.7785, 0.7796,  ..., 0.0012, 0.7793, 0.7706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0803, 0.0765, 0.0754,  ..., 0.0745, 0.0805, 0.0773],
         [0.0803, 0.0765, 0.0754,  ..., 0.0745, 0.0805, 0.0773],
         [0.0803, 0.0765, 0.0754,  ..., 0.0745, 0.0805, 0.0773],
         [0.7592, 0.7705, 0.7739,  ..., 0.7766, 0.7585, 0.7680]],
        [[0.0788, 0.0777, 0.0757,  ..., 0.0777, 0.0779, 0.0784],
         [0.0788, 0.0777, 0.0757,  ..., 0.0777, 0.0779, 0.0784],
         [0.0788, 0.0777, 0.0757,  ..., 0.0777, 0.0779, 0.0784],
         [0.7636, 0.7668, 0.7730,  ..., 0.7668, 0.7664, 0.7649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:01,244 [Process: 0] Synchronize training processes
2024-08-16 15:50:01,245 [Process: 0] Evaluating...
2024-08-16 15:50:01,247 [Process: 0] EPOCH 68:
2024-08-16 15:50:01,249 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0672, 0.0678, 0.0694,  ..., 0.0715, 0.0716, 0.0723],
         [0.0672, 0.0678, 0.0694,  ..., 0.0715, 0.0716, 0.0723],
         [0.0672, 0.0678, 0.0694,  ..., 0.0715, 0.0716, 0.0723],
         [0.7984, 0.7966, 0.7919,  ..., 0.7856, 0.7852, 0.7831]],
        [[0.0713, 0.0702, 0.0719,  ..., 0.0012, 0.0728, 0.0725],
         [0.0713, 0.0702, 0.0719,  ..., 0.0012, 0.0728, 0.0725],
         [0.0713, 0.0702, 0.0719,  ..., 0.9964, 0.0728, 0.0725],
         [0.7862, 0.7895, 0.7842,  ..., 0.0012, 0.7815, 0.7825]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0771, 0.0830, 0.0756,  ..., 0.0782, 0.0777, 0.0762],
         [0.0771, 0.0830, 0.0756,  ..., 0.0782, 0.0777, 0.0762],
         [0.0771, 0.0830, 0.0756,  ..., 0.0782, 0.0777, 0.0762],
         [0.7688, 0.7510, 0.7732,  ..., 0.7655, 0.7670, 0.7714]],
        [[0.0782, 0.0800, 0.0775,  ..., 0.0797, 0.0828, 0.0783],
         [0.0782, 0.0800, 0.0775,  ..., 0.0797, 0.0828, 0.0783],
         [0.0782, 0.0800, 0.0775,  ..., 0.0797, 0.0828, 0.0783],
         [0.7653, 0.7600, 0.7674,  ..., 0.7608, 0.7515, 0.7651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:03,369 [Process: 0] Synchronize training processes
2024-08-16 15:50:03,370 [Process: 0] Evaluating...
2024-08-16 15:50:03,372 [Process: 0] EPOCH 69:
2024-08-16 15:50:03,373 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6581e-02, 6.8680e-02, 7.0297e-02,  ..., 6.7011e-02,
          6.9670e-02, 6.9412e-02],
         [6.6581e-02, 6.8680e-02, 7.0297e-02,  ..., 6.7011e-02,
          6.9670e-02, 6.9412e-02],
         [6.6581e-02, 6.8680e-02, 7.0297e-02,  ..., 6.7011e-02,
          6.9670e-02, 6.9412e-02],
         [8.0026e-01, 7.9396e-01, 7.8911e-01,  ..., 7.9897e-01,
          7.9099e-01, 7.9176e-01]],
        [[6.6455e-02, 6.7326e-02, 6.9573e-02,  ..., 9.5245e-04,
          7.0627e-02, 6.8217e-02],
         [6.6455e-02, 6.7326e-02, 6.9573e-02,  ..., 9.5245e-04,
          7.0627e-02, 6.8217e-02],
         [6.6455e-02, 6.7326e-02, 6.9573e-02,  ..., 9.9714e-01,
          7.0627e-02, 6.8217e-02],
         [8.0063e-01, 7.9802e-01, 7.9128e-01,  ..., 9.5245e-04,
          7.8812e-01, 7.9535e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0726, 0.0769, 0.0752,  ..., 0.0780, 0.0751, 0.0744],
         [0.0726, 0.0769, 0.0752,  ..., 0.0780, 0.0751, 0.0744],
         [0.0726, 0.0769, 0.0752,  ..., 0.0780, 0.0751, 0.0744],
         [0.7821, 0.7694, 0.7745,  ..., 0.7661, 0.7748, 0.7767]],
        [[0.0766, 0.0776, 0.0766,  ..., 0.0772, 0.0853, 0.0792],
         [0.0766, 0.0776, 0.0766,  ..., 0.0772, 0.0853, 0.0792],
         [0.0766, 0.0776, 0.0766,  ..., 0.0772, 0.0853, 0.0792],
         [0.7701, 0.7671, 0.7703,  ..., 0.7684, 0.7442, 0.7625]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:05,476 [Process: 0] Synchronize training processes
2024-08-16 15:50:05,476 [Process: 0] Evaluating...
2024-08-16 15:50:05,478 [Process: 0] EPOCH 70:
2024-08-16 15:50:05,480 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0647, 0.0669, 0.0663,  ..., 0.0710, 0.0720, 0.0698],
         [0.0647, 0.0669, 0.0663,  ..., 0.0710, 0.0720, 0.0698],
         [0.0647, 0.0669, 0.0663,  ..., 0.0710, 0.0720, 0.0698],
         [0.8058, 0.7993, 0.8011,  ..., 0.7870, 0.7839, 0.7906]],
        [[0.0688, 0.0681, 0.0710,  ..., 0.0041, 0.0713, 0.0690],
         [0.0688, 0.0681, 0.0710,  ..., 0.0041, 0.0713, 0.0690],
         [0.0688, 0.0681, 0.0710,  ..., 0.9876, 0.0713, 0.0690],
         [0.7936, 0.7956, 0.7869,  ..., 0.0041, 0.7860, 0.7931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0751, 0.0753, 0.0772,  ..., 0.0754, 0.0740, 0.0772],
         [0.0751, 0.0753, 0.0772,  ..., 0.0754, 0.0740, 0.0772],
         [0.0751, 0.0753, 0.0772,  ..., 0.0754, 0.0740, 0.0772],
         [0.7746, 0.7742, 0.7683,  ..., 0.7739, 0.7781, 0.7685]],
        [[0.0766, 0.0767, 0.0774,  ..., 0.0772, 0.0772, 0.0760],
         [0.0766, 0.0767, 0.0774,  ..., 0.0772, 0.0772, 0.0760],
         [0.0766, 0.0767, 0.0774,  ..., 0.0772, 0.0772, 0.0760],
         [0.7702, 0.7700, 0.7679,  ..., 0.7684, 0.7684, 0.7720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:07,539 [Process: 0] Synchronize training processes
2024-08-16 15:50:07,539 [Process: 0] Evaluating...
2024-08-16 15:50:07,541 [Process: 0] EPOCH 71:
2024-08-16 15:50:07,543 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0659, 0.0668, 0.0676,  ..., 0.0690, 0.0692, 0.0671],
         [0.0659, 0.0668, 0.0676,  ..., 0.0690, 0.0692, 0.0671],
         [0.0659, 0.0668, 0.0676,  ..., 0.0690, 0.0692, 0.0671],
         [0.8024, 0.7995, 0.7972,  ..., 0.7931, 0.7925, 0.7988]],
        [[0.0671, 0.0637, 0.0691,  ..., 0.0095, 0.0694, 0.0676],
         [0.0671, 0.0637, 0.0691,  ..., 0.0028, 0.0694, 0.0676],
         [0.0671, 0.0637, 0.0691,  ..., 0.9849, 0.0694, 0.0676],
         [0.7986, 0.8088, 0.7928,  ..., 0.0028, 0.7917, 0.7972]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0753, 0.0736, 0.0735,  ..., 0.0748, 0.0731, 0.0735],
         [0.0753, 0.0736, 0.0735,  ..., 0.0748, 0.0731, 0.0735],
         [0.0753, 0.0736, 0.0735,  ..., 0.0748, 0.0731, 0.0735],
         [0.7741, 0.7792, 0.7796,  ..., 0.7757, 0.7808, 0.7794]],
        [[0.0773, 0.0723, 0.0752,  ..., 0.0751, 0.0760, 0.0739],
         [0.0773, 0.0723, 0.0752,  ..., 0.0751, 0.0760, 0.0739],
         [0.0773, 0.0723, 0.0752,  ..., 0.0751, 0.0760, 0.0739],
         [0.7681, 0.7831, 0.7745,  ..., 0.7748, 0.7720, 0.7784]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:09,626 [Process: 0] Synchronize training processes
2024-08-16 15:50:09,627 [Process: 0] Evaluating...
2024-08-16 15:50:09,634 [Process: 0] EPOCH 72:
2024-08-16 15:50:09,636 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5139e-02, 6.6972e-02, 6.6065e-02,  ..., 6.7117e-02,
          6.4213e-02, 6.5833e-02],
         [6.5139e-02, 6.6972e-02, 6.6065e-02,  ..., 6.7117e-02,
          6.4213e-02, 6.5833e-02],
         [6.5139e-02, 6.6972e-02, 6.6065e-02,  ..., 6.7117e-02,
          6.4213e-02, 6.5833e-02],
         [8.0458e-01, 7.9908e-01, 8.0181e-01,  ..., 7.9865e-01,
          8.0736e-01, 8.0250e-01]],
        [[6.3225e-02, 6.1195e-02, 6.6883e-02,  ..., 8.5480e-04,
          6.6402e-02, 6.3557e-02],
         [6.3225e-02, 6.1195e-02, 6.6883e-02,  ..., 8.5480e-04,
          6.6402e-02, 6.3557e-02],
         [6.3225e-02, 6.1195e-02, 6.6883e-02,  ..., 9.9744e-01,
          6.6402e-02, 6.3557e-02],
         [8.1033e-01, 8.1642e-01, 7.9935e-01,  ..., 8.5480e-04,
          8.0080e-01, 8.0933e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0764, 0.0707, 0.0766,  ..., 0.0715, 0.0744, 0.0746],
         [0.0764, 0.0707, 0.0766,  ..., 0.0715, 0.0744, 0.0746],
         [0.0764, 0.0707, 0.0766,  ..., 0.0715, 0.0744, 0.0746],
         [0.7708, 0.7879, 0.7701,  ..., 0.7856, 0.7769, 0.7763]],
        [[0.0736, 0.0774, 0.0763,  ..., 0.0738, 0.0741, 0.0749],
         [0.0736, 0.0774, 0.0763,  ..., 0.0738, 0.0741, 0.0749],
         [0.0736, 0.0774, 0.0763,  ..., 0.0738, 0.0741, 0.0749],
         [0.7792, 0.7678, 0.7712,  ..., 0.7785, 0.7778, 0.7754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:11,699 [Process: 0] Synchronize training processes
2024-08-16 15:50:11,699 [Process: 0] Evaluating...
2024-08-16 15:50:11,701 [Process: 0] EPOCH 73:
2024-08-16 15:50:11,703 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6859e-02, 6.6275e-02, 6.6570e-02,  ..., 6.5779e-02,
          6.6626e-02, 6.5094e-02],
         [6.6859e-02, 6.6275e-02, 6.6570e-02,  ..., 6.5779e-02,
          6.6626e-02, 6.5094e-02],
         [6.6859e-02, 6.6275e-02, 6.6570e-02,  ..., 6.5779e-02,
          6.6626e-02, 6.5094e-02],
         [7.9942e-01, 8.0118e-01, 8.0029e-01,  ..., 8.0266e-01,
          8.0012e-01, 8.0472e-01]],
        [[6.5143e-02, 6.6542e-02, 6.2115e-02,  ..., 2.9197e-04,
          6.3520e-02, 6.1691e-02],
         [6.5143e-02, 6.6542e-02, 6.2115e-02,  ..., 2.9197e-04,
          6.3520e-02, 6.1691e-02],
         [6.5143e-02, 6.6542e-02, 6.2115e-02,  ..., 9.9912e-01,
          6.3520e-02, 6.1691e-02],
         [8.0457e-01, 8.0037e-01, 8.1366e-01,  ..., 2.9197e-04,
          8.0944e-01, 8.1493e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0716, 0.0720, 0.0736,  ..., 0.0736, 0.0738, 0.0725],
         [0.0716, 0.0720, 0.0736,  ..., 0.0736, 0.0738, 0.0725],
         [0.0716, 0.0720, 0.0736,  ..., 0.0736, 0.0738, 0.0725],
         [0.7852, 0.7839, 0.7792,  ..., 0.7792, 0.7786, 0.7826]],
        [[0.0725, 0.0745, 0.0730,  ..., 0.0732, 0.0710, 0.0757],
         [0.0725, 0.0745, 0.0730,  ..., 0.0732, 0.0710, 0.0757],
         [0.0725, 0.0745, 0.0730,  ..., 0.0732, 0.0710, 0.0757],
         [0.7825, 0.7766, 0.7810,  ..., 0.7803, 0.7869, 0.7730]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:13,724 [Process: 0] Synchronize training processes
2024-08-16 15:50:13,724 [Process: 0] Evaluating...
2024-08-16 15:50:13,726 [Process: 0] EPOCH 74:
2024-08-16 15:50:13,728 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5391e-02, 6.2327e-02, 6.7499e-02,  ..., 6.4349e-02,
          6.2314e-02, 6.2737e-02],
         [6.5391e-02, 6.2327e-02, 6.7499e-02,  ..., 6.4349e-02,
          6.2314e-02, 6.2737e-02],
         [6.5391e-02, 6.2327e-02, 6.7499e-02,  ..., 6.4349e-02,
          6.2314e-02, 6.2737e-02],
         [8.0383e-01, 8.1302e-01, 7.9750e-01,  ..., 8.0695e-01,
          8.1306e-01, 8.1179e-01]],
        [[6.3661e-02, 6.6334e-02, 6.1446e-02,  ..., 2.3485e-04,
          6.5202e-02, 6.4478e-02],
         [6.3661e-02, 6.6334e-02, 6.1446e-02,  ..., 2.3485e-04,
          6.5202e-02, 6.4478e-02],
         [6.3661e-02, 6.6334e-02, 6.1446e-02,  ..., 9.9930e-01,
          6.5202e-02, 6.4478e-02],
         [8.0902e-01, 8.0100e-01, 8.1566e-01,  ..., 2.3485e-04,
          8.0439e-01, 8.0657e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0695, 0.0731, 0.0712,  ..., 0.0713, 0.0700, 0.0702],
         [0.0695, 0.0731, 0.0712,  ..., 0.0713, 0.0700, 0.0702],
         [0.0695, 0.0731, 0.0712,  ..., 0.0713, 0.0700, 0.0702],
         [0.7914, 0.7807, 0.7863,  ..., 0.7861, 0.7899, 0.7893]],
        [[0.0735, 0.0717, 0.0691,  ..., 0.0717, 0.0695, 0.0709],
         [0.0735, 0.0717, 0.0691,  ..., 0.0717, 0.0695, 0.0709],
         [0.0735, 0.0717, 0.0691,  ..., 0.0717, 0.0695, 0.0709],
         [0.7794, 0.7849, 0.7927,  ..., 0.7849, 0.7915, 0.7873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:15,785 [Process: 0] Synchronize training processes
2024-08-16 15:50:15,786 [Process: 0] Evaluating...
2024-08-16 15:50:15,788 [Process: 0] EPOCH 75:
2024-08-16 15:50:15,790 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0609, 0.0625, 0.0624,  ..., 0.0626, 0.0594, 0.0649],
         [0.0609, 0.0625, 0.0624,  ..., 0.0626, 0.0594, 0.0649],
         [0.0609, 0.0625, 0.0624,  ..., 0.0626, 0.0594, 0.0649],
         [0.8173, 0.8126, 0.8127,  ..., 0.8123, 0.8219, 0.8054]],
        [[0.0599, 0.0598, 0.0632,  ..., 0.0019, 0.0632, 0.0633],
         [0.0599, 0.0598, 0.0632,  ..., 0.0019, 0.0632, 0.0633],
         [0.0599, 0.0598, 0.0632,  ..., 0.9942, 0.0632, 0.0633],
         [0.8204, 0.8207, 0.8105,  ..., 0.0019, 0.8105, 0.8102]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0691, 0.0717, 0.0714,  ..., 0.0677, 0.0673, 0.0716],
         [0.0691, 0.0717, 0.0714,  ..., 0.0677, 0.0673, 0.0716],
         [0.0691, 0.0717, 0.0714,  ..., 0.0677, 0.0673, 0.0716],
         [0.7927, 0.7848, 0.7858,  ..., 0.7969, 0.7980, 0.7851]],
        [[0.0695, 0.0728, 0.0704,  ..., 0.0711, 0.0720, 0.0689],
         [0.0695, 0.0728, 0.0704,  ..., 0.0711, 0.0720, 0.0689],
         [0.0695, 0.0728, 0.0704,  ..., 0.0711, 0.0720, 0.0689],
         [0.7916, 0.7815, 0.7887,  ..., 0.7868, 0.7839, 0.7934]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:17,881 [Process: 0] Synchronize training processes
2024-08-16 15:50:17,882 [Process: 0] Evaluating...
2024-08-16 15:50:17,884 [Process: 0] EPOCH 76:
2024-08-16 15:50:17,886 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0620, 0.0631, 0.0600,  ..., 0.0599, 0.0642, 0.0617],
         [0.0620, 0.0631, 0.0600,  ..., 0.0599, 0.0642, 0.0617],
         [0.0620, 0.0631, 0.0600,  ..., 0.0599, 0.0642, 0.0617],
         [0.8141, 0.8106, 0.8201,  ..., 0.8202, 0.8073, 0.8150]],
        [[0.0639, 0.0631, 0.0599,  ..., 0.0015, 0.0618, 0.0601],
         [0.0639, 0.0631, 0.0599,  ..., 0.0015, 0.0618, 0.0601],
         [0.0639, 0.0631, 0.0599,  ..., 0.9956, 0.0618, 0.0601],
         [0.8083, 0.8108, 0.8204,  ..., 0.0015, 0.8145, 0.8197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0663, 0.0707, 0.0694,  ..., 0.0688, 0.0683, 0.0684],
         [0.0663, 0.0707, 0.0694,  ..., 0.0688, 0.0683, 0.0684],
         [0.0663, 0.0707, 0.0694,  ..., 0.0688, 0.0683, 0.0684],
         [0.8011, 0.7880, 0.7917,  ..., 0.7936, 0.7951, 0.7947]],
        [[0.0678, 0.0681, 0.0675,  ..., 0.0695, 0.0722, 0.0704],
         [0.0678, 0.0681, 0.0675,  ..., 0.0695, 0.0722, 0.0704],
         [0.0678, 0.0681, 0.0675,  ..., 0.0695, 0.0722, 0.0704],
         [0.7966, 0.7958, 0.7976,  ..., 0.7914, 0.7833, 0.7887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:19,994 [Process: 0] Synchronize training processes
2024-08-16 15:50:19,994 [Process: 0] Evaluating...
2024-08-16 15:50:19,996 [Process: 0] EPOCH 77:
2024-08-16 15:50:19,998 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8147e-02, 5.8706e-02, 6.3513e-02,  ..., 6.1707e-02,
          5.9294e-02, 5.9703e-02],
         [5.8147e-02, 5.8706e-02, 6.3513e-02,  ..., 6.1707e-02,
          5.9294e-02, 5.9703e-02],
         [5.8147e-02, 5.8706e-02, 6.3513e-02,  ..., 6.1707e-02,
          5.9294e-02, 5.9703e-02],
         [8.2556e-01, 8.2388e-01, 8.0946e-01,  ..., 8.1488e-01,
          8.2212e-01, 8.2089e-01]],
        [[5.8799e-02, 6.3339e-02, 5.9362e-02,  ..., 9.3317e-05,
          6.1528e-02, 6.3884e-02],
         [5.8799e-02, 6.3339e-02, 5.9362e-02,  ..., 9.3317e-05,
          6.1528e-02, 6.3884e-02],
         [5.8799e-02, 6.3339e-02, 5.9362e-02,  ..., 9.9972e-01,
          6.1528e-02, 6.3884e-02],
         [8.2360e-01, 8.0998e-01, 8.2191e-01,  ..., 9.3317e-05,
          8.1542e-01, 8.0835e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0693, 0.0681, 0.0649,  ..., 0.0684, 0.0686, 0.0662],
         [0.0693, 0.0681, 0.0649,  ..., 0.0684, 0.0686, 0.0662],
         [0.0693, 0.0681, 0.0649,  ..., 0.0684, 0.0686, 0.0662],
         [0.7920, 0.7958, 0.8052,  ..., 0.7948, 0.7943, 0.8014]],
        [[0.0659, 0.0657, 0.0670,  ..., 0.0694, 0.0723, 0.0693],
         [0.0659, 0.0657, 0.0670,  ..., 0.0694, 0.0723, 0.0693],
         [0.0659, 0.0657, 0.0670,  ..., 0.0694, 0.0723, 0.0693],
         [0.8023, 0.8030, 0.7989,  ..., 0.7919, 0.7831, 0.7922]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:22,078 [Process: 0] Synchronize training processes
2024-08-16 15:50:22,078 [Process: 0] Evaluating...
2024-08-16 15:50:22,080 [Process: 0] EPOCH 78:
2024-08-16 15:50:22,082 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0606, 0.0583, 0.0593,  ..., 0.0571, 0.0569, 0.0604],
         [0.0606, 0.0583, 0.0593,  ..., 0.0571, 0.0569, 0.0604],
         [0.0606, 0.0583, 0.0593,  ..., 0.0571, 0.0569, 0.0604],
         [0.8181, 0.8250, 0.8222,  ..., 0.8287, 0.8294, 0.8187]],
        [[0.0586, 0.0585, 0.0636,  ..., 0.0014, 0.0587, 0.0575],
         [0.0586, 0.0585, 0.0636,  ..., 0.0014, 0.0587, 0.0575],
         [0.0586, 0.0585, 0.0636,  ..., 0.9959, 0.0587, 0.0575],
         [0.8243, 0.8246, 0.8092,  ..., 0.0014, 0.8240, 0.8275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:50:24,114 [Process: 0] Synchronize training processes
2024-08-16 15:50:24,114 [Process: 0] Evaluating...
2024-08-16 15:50:24,116 [Process: 0] EPOCH 79:
2024-08-16 15:50:24,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0674, 0.0669, 0.0681,  ..., 0.0651, 0.0651, 0.0656],
         [0.0674, 0.0669, 0.0681,  ..., 0.0651, 0.0651, 0.0656],
         [0.0674, 0.0669, 0.0681,  ..., 0.0651, 0.0651, 0.0656],
         [0.7978, 0.7992, 0.7956,  ..., 0.8048, 0.8046, 0.8031]],
        [[0.0647, 0.0672, 0.0635,  ..., 0.0665, 0.0642, 0.0648],
         [0.0647, 0.0672, 0.0635,  ..., 0.0665, 0.0642, 0.0648],
         [0.0647, 0.0672, 0.0635,  ..., 0.0665, 0.0642, 0.0648],
         [0.8058, 0.7984, 0.8094,  ..., 0.8005, 0.8074, 0.8057]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0569, 0.0553, 0.0541,  ..., 0.0586, 0.0560, 0.0559],
         [0.0569, 0.0553, 0.0541,  ..., 0.0586, 0.0560, 0.0559],
         [0.0569, 0.0553, 0.0541,  ..., 0.0586, 0.0560, 0.0559],
         [0.8293, 0.8340, 0.8378,  ..., 0.8241, 0.8319, 0.8322]],
        [[0.0607, 0.0594, 0.0570,  ..., 0.0029, 0.0563, 0.0595],
         [0.0607, 0.0594, 0.0570,  ..., 0.0029, 0.0563, 0.0598],
         [0.0607, 0.0594, 0.0570,  ..., 0.9912, 0.0563, 0.0595],
         [0.8179, 0.8217, 0.8290,  ..., 0.0029, 0.8312, 0.8213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:50:26,193 [Process: 0] Synchronize training processes
2024-08-16 15:50:26,193 [Process: 0] Evaluating...
2024-08-16 15:50:26,195 [Process: 0] EPOCH 80:
2024-08-16 15:50:26,197 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0659, 0.0653, 0.0643,  ..., 0.0654, 0.0647, 0.0671],
         [0.0659, 0.0653, 0.0643,  ..., 0.0654, 0.0647, 0.0671],
         [0.0659, 0.0653, 0.0643,  ..., 0.0654, 0.0647, 0.0671],
         [0.8022, 0.8041, 0.8070,  ..., 0.8039, 0.8060, 0.7988]],
        [[0.0653, 0.0651, 0.0630,  ..., 0.0671, 0.0696, 0.0677],
         [0.0653, 0.0651, 0.0630,  ..., 0.0671, 0.0696, 0.0677],
         [0.0653, 0.0651, 0.0630,  ..., 0.0671, 0.0696, 0.0677],
         [0.8040, 0.8046, 0.8111,  ..., 0.7988, 0.7912, 0.7968]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8577e-02, 5.7595e-02, 6.0621e-02,  ..., 5.7980e-02,
          6.1406e-02, 5.9230e-02],
         [5.8577e-02, 5.7595e-02, 6.0621e-02,  ..., 5.7980e-02,
          6.1406e-02, 5.9230e-02],
         [5.8577e-02, 5.7595e-02, 6.0621e-02,  ..., 5.7980e-02,
          6.1406e-02, 5.9230e-02],
         [8.2427e-01, 8.2721e-01, 8.1814e-01,  ..., 8.2606e-01,
          8.1578e-01, 8.2231e-01]],
        [[5.6894e-02, 5.6685e-02, 5.7074e-02,  ..., 7.3577e-04,
          5.5324e-02, 5.4222e-02],
         [5.6894e-02, 5.6685e-02, 5.7074e-02,  ..., 7.3577e-04,
          5.5324e-02, 5.4222e-02],
         [5.6894e-02, 5.6685e-02, 5.7074e-02,  ..., 9.9779e-01,
          5.5324e-02, 5.4222e-02],
         [8.2932e-01, 8.2994e-01, 8.2878e-01,  ..., 7.3577e-04,
          8.3403e-01, 8.3733e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:28,285 [Process: 0] Synchronize training processes
2024-08-16 15:50:28,286 [Process: 0] Evaluating...
2024-08-16 15:50:28,288 [Process: 0] EPOCH 81:
2024-08-16 15:50:28,290 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0651, 0.0635, 0.0634,  ..., 0.0657, 0.0636, 0.0637],
         [0.0651, 0.0635, 0.0634,  ..., 0.0657, 0.0636, 0.0637],
         [0.0651, 0.0635, 0.0634,  ..., 0.0657, 0.0636, 0.0637],
         [0.8047, 0.8096, 0.8098,  ..., 0.8029, 0.8092, 0.8089]],
        [[0.0639, 0.0646, 0.0665,  ..., 0.0646, 0.0659, 0.0656],
         [0.0639, 0.0646, 0.0665,  ..., 0.0646, 0.0659, 0.0656],
         [0.0639, 0.0646, 0.0665,  ..., 0.0646, 0.0659, 0.0656],
         [0.8084, 0.8063, 0.8004,  ..., 0.8061, 0.8023, 0.8033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0303e-02, 6.0019e-02, 5.6915e-02,  ..., 5.8507e-02,
          5.9307e-02, 5.9342e-02],
         [6.0303e-02, 6.0019e-02, 5.6915e-02,  ..., 5.8507e-02,
          5.9307e-02, 5.9342e-02],
         [6.0303e-02, 6.0019e-02, 5.6915e-02,  ..., 5.8507e-02,
          5.9307e-02, 5.9342e-02],
         [8.1909e-01, 8.1994e-01, 8.2926e-01,  ..., 8.2448e-01,
          8.2208e-01, 8.2197e-01]],
        [[5.5466e-02, 5.2935e-02, 5.7119e-02,  ..., 5.8648e-04,
          5.2433e-02, 5.5399e-02],
         [5.5466e-02, 5.2935e-02, 5.7119e-02,  ..., 5.8648e-04,
          5.2433e-02, 5.5399e-02],
         [5.5466e-02, 5.2935e-02, 5.7119e-02,  ..., 9.9824e-01,
          5.2433e-02, 5.5399e-02],
         [8.3360e-01, 8.4119e-01, 8.2864e-01,  ..., 5.8648e-04,
          8.4270e-01, 8.3380e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:30,382 [Process: 0] Synchronize training processes
2024-08-16 15:50:30,382 [Process: 0] Evaluating...
2024-08-16 15:50:30,390 [Process: 0] EPOCH 82:
2024-08-16 15:50:30,392 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0644, 0.0620, 0.0635,  ..., 0.0620, 0.0647, 0.0621],
         [0.0644, 0.0620, 0.0635,  ..., 0.0620, 0.0647, 0.0621],
         [0.0644, 0.0620, 0.0635,  ..., 0.0620, 0.0647, 0.0621],
         [0.8068, 0.8139, 0.8094,  ..., 0.8140, 0.8059, 0.8138]],
        [[0.0639, 0.0646, 0.0647,  ..., 0.0639, 0.0616, 0.0618],
         [0.0639, 0.0646, 0.0647,  ..., 0.0639, 0.0616, 0.0618],
         [0.0639, 0.0646, 0.0647,  ..., 0.0639, 0.0616, 0.0618],
         [0.8084, 0.8061, 0.8059,  ..., 0.8083, 0.8152, 0.8147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8198e-02, 5.6354e-02, 5.8509e-02,  ..., 5.6852e-02,
          5.9113e-02, 5.9525e-02],
         [5.8198e-02, 5.6354e-02, 5.8509e-02,  ..., 5.6852e-02,
          5.9113e-02, 5.9525e-02],
         [5.8198e-02, 5.6354e-02, 5.8509e-02,  ..., 5.6852e-02,
          5.9113e-02, 5.9525e-02],
         [8.2541e-01, 8.3094e-01, 8.2447e-01,  ..., 8.2944e-01,
          8.2266e-01, 8.2143e-01]],
        [[5.3146e-02, 5.8240e-02, 5.6097e-02,  ..., 3.8566e-04,
          5.6758e-02, 5.5817e-02],
         [5.3146e-02, 5.8240e-02, 5.6097e-02,  ..., 3.8566e-04,
          5.6758e-02, 5.5817e-02],
         [5.3146e-02, 5.8240e-02, 5.6097e-02,  ..., 9.9884e-01,
          5.6758e-02, 5.5817e-02],
         [8.4056e-01, 8.2528e-01, 8.3171e-01,  ..., 3.8566e-04,
          8.2973e-01, 8.3255e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:32,471 [Process: 0] Synchronize training processes
2024-08-16 15:50:32,471 [Process: 0] Evaluating...
2024-08-16 15:50:32,473 [Process: 0] EPOCH 83:
2024-08-16 15:50:32,475 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0618, 0.0645, 0.0624,  ..., 0.0617, 0.0621, 0.0628],
         [0.0618, 0.0645, 0.0624,  ..., 0.0617, 0.0621, 0.0628],
         [0.0618, 0.0645, 0.0624,  ..., 0.0617, 0.0621, 0.0628],
         [0.8146, 0.8066, 0.8128,  ..., 0.8149, 0.8136, 0.8115]],
        [[0.0626, 0.0598, 0.0649,  ..., 0.0622, 0.0632, 0.0614],
         [0.0626, 0.0598, 0.0649,  ..., 0.0622, 0.0632, 0.0614],
         [0.0626, 0.0598, 0.0649,  ..., 0.0622, 0.0632, 0.0614],
         [0.8123, 0.8205, 0.8053,  ..., 0.8135, 0.8104, 0.8159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0545, 0.0528, 0.0545,  ..., 0.0558, 0.0532, 0.0531],
         [0.0545, 0.0528, 0.0545,  ..., 0.0558, 0.0532, 0.0531],
         [0.0545, 0.0528, 0.0545,  ..., 0.0558, 0.0532, 0.0531],
         [0.8364, 0.8417, 0.8364,  ..., 0.8325, 0.8403, 0.8406]],
        [[0.0567, 0.0525, 0.0535,  ..., 0.0040, 0.0518, 0.0504],
         [0.0567, 0.0525, 0.0535,  ..., 0.0029, 0.0518, 0.0504],
         [0.0567, 0.0525, 0.0535,  ..., 0.9902, 0.0518, 0.0504],
         [0.8300, 0.8425, 0.8395,  ..., 0.0029, 0.8445, 0.8488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:34,537 [Process: 0] Synchronize training processes
2024-08-16 15:50:34,537 [Process: 0] Evaluating...
2024-08-16 15:50:34,539 [Process: 0] EPOCH 84:
2024-08-16 15:50:34,541 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0619, 0.0608, 0.0619,  ..., 0.0606, 0.0589, 0.0636],
         [0.0619, 0.0608, 0.0619,  ..., 0.0606, 0.0589, 0.0636],
         [0.0619, 0.0608, 0.0619,  ..., 0.0606, 0.0589, 0.0636],
         [0.8142, 0.8177, 0.8142,  ..., 0.8181, 0.8234, 0.8091]],
        [[0.0625, 0.0580, 0.0612,  ..., 0.0599, 0.0621, 0.0606],
         [0.0625, 0.0580, 0.0612,  ..., 0.0599, 0.0621, 0.0606],
         [0.0625, 0.0580, 0.0612,  ..., 0.0599, 0.0621, 0.0606],
         [0.8125, 0.8259, 0.8163,  ..., 0.8204, 0.8137, 0.8181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0544, 0.0558, 0.0527,  ..., 0.0523, 0.0501, 0.0545],
         [0.0544, 0.0558, 0.0527,  ..., 0.0523, 0.0501, 0.0545],
         [0.0544, 0.0558, 0.0527,  ..., 0.0523, 0.0501, 0.0545],
         [0.8367, 0.8325, 0.8420,  ..., 0.8431, 0.8498, 0.8365]],
        [[0.0550, 0.0519, 0.0552,  ..., 0.0011, 0.0540, 0.0511],
         [0.0550, 0.0519, 0.0552,  ..., 0.0011, 0.0540, 0.0511],
         [0.0550, 0.0519, 0.0552,  ..., 0.9966, 0.0540, 0.0511],
         [0.8351, 0.8444, 0.8344,  ..., 0.0011, 0.8381, 0.8466]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0576, 0.0616, 0.0589,  ..., 0.0595, 0.0621, 0.0596],
         [0.0576, 0.0616, 0.0589,  ..., 0.0595, 0.0621, 0.0596],
         [0.0576, 0.0616, 0.0589,  ..., 0.0595, 0.0621, 0.0596],
         [0.8272, 0.8152, 0.8232,  ..., 0.8214, 0.8138, 0.8211]],
        [[0.0611, 0.0593, 0.0618,  ..., 0.0604, 0.0617, 0.0609],
         [0.0611, 0.0593, 0.0618,  ..., 0.0604, 0.0617, 0.0609],
         [0.0611, 0.0593, 0.0618,  ..., 0.0604, 0.0617, 0.0609],
         [0.8167, 0.8221, 0.8146,  ..., 0.8189, 0.8149, 0.8173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0538, 0.0524, 0.0507,  ..., 0.0502, 0.0520, 0.0543],
         [0.0538, 0.0524, 0.0507,  ..., 0.0502, 0.0520, 0.0543],
         [0.0538, 0.0524, 0.0507,  ..., 0.0502, 0.0520, 0.0543],
         [0.8387, 0.8428, 0.8480,  ..., 0.8495, 0.8440, 0.8372]],
        [[0.0521, 0.0520, 0.0526,  ..., 0.0016, 0.0521, 0.0520],
         [0.0521, 0.0520, 0.0526,  ..., 0.0016, 0.0521, 0.0520],
         [0.0521, 0.0520, 0.0526,  ..., 0.9953, 0.0521, 0.0520],
         [0.8437, 0.8439, 0.8421,  ..., 0.0016, 0.8437, 0.8440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:36,621 [Process: 0] Synchronize training processes
2024-08-16 15:50:36,621 [Process: 0] Evaluating...
2024-08-16 15:50:36,623 [Process: 0] EPOCH 85:
2024-08-16 15:50:36,625 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0612, 0.0616, 0.0588,  ..., 0.0613, 0.0592, 0.0583],
         [0.0612, 0.0616, 0.0588,  ..., 0.0613, 0.0592, 0.0583],
         [0.0613, 0.0616, 0.0588,  ..., 0.0613, 0.0592, 0.0583],
         [0.8162, 0.8152, 0.8236,  ..., 0.8162, 0.8225, 0.8250]],
        [[0.0614, 0.0577, 0.0596,  ..., 0.0595, 0.0590, 0.0578],
         [0.0614, 0.0577, 0.0596,  ..., 0.0595, 0.0590, 0.0578],
         [0.0614, 0.0577, 0.0596,  ..., 0.0595, 0.0590, 0.0578],
         [0.8157, 0.8269, 0.8213,  ..., 0.8215, 0.8231, 0.8265]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0512, 0.0507, 0.0529,  ..., 0.0507, 0.0532, 0.0517],
         [0.0512, 0.0507, 0.0529,  ..., 0.0507, 0.0532, 0.0517],
         [0.0512, 0.0507, 0.0529,  ..., 0.0507, 0.0532, 0.0517],
         [0.8463, 0.8479, 0.8414,  ..., 0.8479, 0.8404, 0.8449]],
        [[0.0489, 0.0536, 0.0510,  ..., 0.0025, 0.0485, 0.0544],
         [0.0489, 0.0536, 0.0510,  ..., 0.0025, 0.0485, 0.0544],
         [0.0489, 0.0536, 0.0510,  ..., 0.9924, 0.0485, 0.0544],
         [0.8533, 0.8393, 0.8471,  ..., 0.0025, 0.8544, 0.8368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:38,690 [Process: 0] Synchronize training processes
2024-08-16 15:50:38,691 [Process: 0] Evaluating...
2024-08-16 15:50:38,692 [Process: 0] EPOCH 86:
2024-08-16 15:50:38,694 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0585, 0.0579, 0.0569,  ..., 0.0600, 0.0588, 0.0576],
         [0.0585, 0.0579, 0.0569,  ..., 0.0600, 0.0588, 0.0576],
         [0.0645, 0.0586, 0.0569,  ..., 0.0600, 0.0588, 0.0576],
         [0.8185, 0.8256, 0.8292,  ..., 0.8201, 0.8235, 0.8273]],
        [[0.0547, 0.0551, 0.0550,  ..., 0.0573, 0.0573, 0.0578],
         [0.0547, 0.0551, 0.0550,  ..., 0.0573, 0.0573, 0.0578],
         [0.0547, 0.0551, 0.0550,  ..., 0.0573, 0.0573, 0.0578],
         [0.8359, 0.8346, 0.8349,  ..., 0.8280, 0.8281, 0.8266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0522, 0.0495, 0.0508,  ..., 0.0494, 0.0542, 0.0505],
         [0.0522, 0.0495, 0.0508,  ..., 0.0494, 0.0542, 0.0505],
         [0.0522, 0.0495, 0.0508,  ..., 0.0494, 0.0542, 0.0505],
         [0.8434, 0.8515, 0.8475,  ..., 0.8518, 0.8375, 0.8486]],
        [[0.0486, 0.0480, 0.0499,  ..., 0.0027, 0.0513, 0.0506],
         [0.0486, 0.0480, 0.0499,  ..., 0.0020, 0.0513, 0.0506],
         [0.0486, 0.0480, 0.0499,  ..., 0.9933, 0.0513, 0.0506],
         [0.8542, 0.8560, 0.8502,  ..., 0.0020, 0.8461, 0.8483]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:40,765 [Process: 0] Synchronize training processes
2024-08-16 15:50:40,765 [Process: 0] Evaluating...
2024-08-16 15:50:40,767 [Process: 0] EPOCH 87:
2024-08-16 15:50:40,769 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0570, 0.0568, 0.0557,  ..., 0.0585, 0.0568, 0.0574],
         [0.0570, 0.0568, 0.0557,  ..., 0.0585, 0.0568, 0.0574],
         [0.0570, 0.0568, 0.0557,  ..., 0.0585, 0.0568, 0.0574],
         [0.8291, 0.8296, 0.8328,  ..., 0.8246, 0.8295, 0.8278]],
        [[0.0582, 0.0560, 0.0567,  ..., 0.0572, 0.0562, 0.0588],
         [0.0582, 0.0560, 0.0567,  ..., 0.0572, 0.0562, 0.0588],
         [0.0582, 0.0560, 0.0567,  ..., 0.0572, 0.0562, 0.0588],
         [0.8254, 0.8320, 0.8300,  ..., 0.8283, 0.8315, 0.8236]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0517, 0.0494, 0.0493,  ..., 0.0480, 0.0505, 0.0491],
         [0.0517, 0.0494, 0.0493,  ..., 0.0480, 0.0505, 0.0491],
         [0.0517, 0.0494, 0.0493,  ..., 0.0480, 0.0505, 0.0491],
         [0.8450, 0.8517, 0.8520,  ..., 0.8560, 0.8486, 0.8527]],
        [[0.0518, 0.0478, 0.0487,  ..., 0.0014, 0.0508, 0.0480],
         [0.0518, 0.0478, 0.0487,  ..., 0.0014, 0.0508, 0.0480],
         [0.0518, 0.0478, 0.0487,  ..., 0.9958, 0.0508, 0.0480],
         [0.8446, 0.8567, 0.8540,  ..., 0.0014, 0.8477, 0.8560]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:42,852 [Process: 0] Synchronize training processes
2024-08-16 15:50:42,853 [Process: 0] Evaluating...
2024-08-16 15:50:42,855 [Process: 0] EPOCH 88:
2024-08-16 15:50:42,857 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0570, 0.0564, 0.0546,  ..., 0.0549, 0.0566, 0.0564],
         [0.0570, 0.0564, 0.0546,  ..., 0.0549, 0.0566, 0.0564],
         [0.0570, 0.0564, 0.0546,  ..., 0.0549, 0.0566, 0.0564],
         [0.8291, 0.8307, 0.8362,  ..., 0.8352, 0.8303, 0.8307]],
        [[0.0553, 0.0553, 0.0568,  ..., 0.0573, 0.0565, 0.0556],
         [0.0553, 0.0553, 0.0568,  ..., 0.0573, 0.0565, 0.0556],
         [0.0553, 0.0553, 0.0568,  ..., 0.0573, 0.0565, 0.0556],
         [0.8340, 0.8341, 0.8296,  ..., 0.8280, 0.8306, 0.8332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7949e-02, 5.0227e-02, 4.7940e-02,  ..., 4.9206e-02,
          4.8813e-02, 4.8321e-02],
         [4.7949e-02, 5.0227e-02, 4.7940e-02,  ..., 4.9206e-02,
          4.8813e-02, 4.8321e-02],
         [4.7949e-02, 5.0227e-02, 4.7940e-02,  ..., 4.9206e-02,
          4.8813e-02, 4.8321e-02],
         [8.5615e-01, 8.4932e-01, 8.5618e-01,  ..., 8.5238e-01,
          8.5356e-01, 8.5504e-01]],
        [[4.8286e-02, 4.6617e-02, 4.7910e-02,  ..., 6.3882e-04,
          4.9568e-02, 5.1008e-02],
         [4.8286e-02, 4.6617e-02, 4.7910e-02,  ..., 6.3882e-04,
          4.9568e-02, 5.1008e-02],
         [4.8286e-02, 4.6617e-02, 4.7910e-02,  ..., 9.9808e-01,
          4.9568e-02, 5.1008e-02],
         [8.5514e-01, 8.6015e-01, 8.5627e-01,  ..., 6.3882e-04,
          8.5129e-01, 8.4698e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:44,919 [Process: 0] Synchronize training processes
2024-08-16 15:50:44,919 [Process: 0] Evaluating...
2024-08-16 15:50:44,922 [Process: 0] EPOCH 89:
2024-08-16 15:50:44,925 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0569, 0.0564, 0.0564,  ..., 0.0574, 0.0561, 0.0574],
         [0.0569, 0.0564, 0.0564,  ..., 0.0574, 0.0561, 0.0574],
         [0.0569, 0.0564, 0.0564,  ..., 0.0574, 0.0561, 0.0574],
         [0.8292, 0.8308, 0.8307,  ..., 0.8277, 0.8318, 0.8278]],
        [[0.0553, 0.0566, 0.0553,  ..., 0.0559, 0.0534, 0.0551],
         [0.0553, 0.0566, 0.0553,  ..., 0.0559, 0.0534, 0.0551],
         [0.0553, 0.0566, 0.0553,  ..., 0.0559, 0.0534, 0.0551],
         [0.8340, 0.8303, 0.8342,  ..., 0.8324, 0.8399, 0.8348]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.6357e-02, 4.6649e-02, 4.6605e-02,  ..., 4.8840e-02,
          5.0337e-02, 4.6304e-02],
         [4.6357e-02, 4.6649e-02, 4.6605e-02,  ..., 4.8840e-02,
          5.0337e-02, 4.6304e-02],
         [4.6357e-02, 4.6649e-02, 4.6605e-02,  ..., 4.8840e-02,
          5.0337e-02, 4.6304e-02],
         [8.6093e-01, 8.6005e-01, 8.6018e-01,  ..., 8.5348e-01,
          8.4899e-01, 8.6109e-01]],
        [[4.8461e-02, 4.8042e-02, 4.6711e-02,  ..., 6.6993e-04,
          4.7031e-02, 4.6639e-02],
         [4.8461e-02, 4.8042e-02, 4.6711e-02,  ..., 6.6993e-04,
          4.7031e-02, 4.6639e-02],
         [4.8461e-02, 4.8042e-02, 4.6711e-02,  ..., 9.9799e-01,
          4.7031e-02, 4.6639e-02],
         [8.5462e-01, 8.5587e-01, 8.5987e-01,  ..., 6.6993e-04,
          8.5891e-01, 8.6008e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:46,923 [Process: 0] Synchronize training processes
2024-08-16 15:50:46,923 [Process: 0] Evaluating...
2024-08-16 15:50:46,926 [Process: 0] EPOCH 90:
2024-08-16 15:50:46,928 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0558, 0.0562, 0.0567,  ..., 0.0548, 0.0559, 0.0549],
         [0.0558, 0.0562, 0.0567,  ..., 0.0548, 0.0559, 0.0549],
         [0.0558, 0.0562, 0.0567,  ..., 0.0548, 0.0559, 0.0549],
         [0.8325, 0.8313, 0.8300,  ..., 0.8357, 0.8323, 0.8352]],
        [[0.0571, 0.0554, 0.0573,  ..., 0.0560, 0.0547, 0.0555],
         [0.0571, 0.0554, 0.0573,  ..., 0.0560, 0.0547, 0.0555],
         [0.0571, 0.0554, 0.0573,  ..., 0.0560, 0.0547, 0.0555],
         [0.8286, 0.8338, 0.8281,  ..., 0.8320, 0.8360, 0.8335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0495, 0.0485, 0.0474,  ..., 0.0465, 0.0483, 0.0486],
         [0.0497, 0.0486, 0.0474,  ..., 0.0466, 0.0483, 0.0487],
         [0.0495, 0.0485, 0.0474,  ..., 0.0465, 0.0483, 0.0486],
         [0.8513, 0.8544, 0.8577,  ..., 0.8604, 0.8552, 0.8542]],
        [[0.0461, 0.0451, 0.0442,  ..., 0.0490, 0.0482, 0.0474],
         [0.0461, 0.0452, 0.0442,  ..., 0.0293, 0.0482, 0.0475],
         [0.0461, 0.0451, 0.0442,  ..., 0.8924, 0.0482, 0.0474],
         [0.8617, 0.8645, 0.8675,  ..., 0.0293, 0.8554, 0.8577]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:48,941 [Process: 0] Synchronize training processes
2024-08-16 15:50:48,941 [Process: 0] Evaluating...
2024-08-16 15:50:48,943 [Process: 0] EPOCH 91:
2024-08-16 15:50:48,945 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0524, 0.0526, 0.0533,  ..., 0.0537, 0.0545, 0.0527],
         [0.0524, 0.0526, 0.0533,  ..., 0.0537, 0.0545, 0.0527],
         [0.0524, 0.0526, 0.0533,  ..., 0.0537, 0.0545, 0.0527],
         [0.8427, 0.8421, 0.8402,  ..., 0.8388, 0.8364, 0.8419]],
        [[0.0531, 0.0517, 0.0535,  ..., 0.0536, 0.0536, 0.0535],
         [0.0531, 0.0517, 0.0535,  ..., 0.0536, 0.0536, 0.0535],
         [0.0531, 0.0517, 0.0535,  ..., 0.0536, 0.0536, 0.0535],
         [0.8406, 0.8448, 0.8396,  ..., 0.8393, 0.8391, 0.8394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0471, 0.0484, 0.0479,  ..., 0.0478, 0.0470, 0.0468],
         [0.0471, 0.0484, 0.0479,  ..., 0.0478, 0.0470, 0.0468],
         [0.0471, 0.0484, 0.0479,  ..., 0.0478, 0.0470, 0.0468],
         [0.8588, 0.8548, 0.8563,  ..., 0.8566, 0.8589, 0.8597]],
        [[0.0470, 0.0448, 0.0442,  ..., 0.0015, 0.0445, 0.0455],
         [0.0470, 0.0448, 0.0442,  ..., 0.0015, 0.0445, 0.0455],
         [0.0470, 0.0448, 0.0442,  ..., 0.9955, 0.0445, 0.0455],
         [0.8589, 0.8657, 0.8673,  ..., 0.0015, 0.8665, 0.8636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:51,023 [Process: 0] Synchronize training processes
2024-08-16 15:50:51,023 [Process: 0] Evaluating...
2024-08-16 15:50:51,031 [Process: 0] EPOCH 92:
2024-08-16 15:50:51,034 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0513, 0.0526, 0.0541,  ..., 0.0541, 0.0547, 0.0544],
         [0.0513, 0.0526, 0.0541,  ..., 0.0541, 0.0547, 0.0544],
         [0.0513, 0.0526, 0.0541,  ..., 0.0541, 0.0547, 0.0544],
         [0.8460, 0.8421, 0.8378,  ..., 0.8376, 0.8360, 0.8369]],
        [[0.0557, 0.0538, 0.0567,  ..., 0.0562, 0.0535, 0.0548],
         [0.0557, 0.0538, 0.0567,  ..., 0.0562, 0.0535, 0.0548],
         [0.0557, 0.0538, 0.0567,  ..., 0.0562, 0.0535, 0.0548],
         [0.8330, 0.8385, 0.8300,  ..., 0.8315, 0.8396, 0.8356]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.7080e-02, 4.7011e-02, 4.5967e-02,  ..., 4.8752e-02,
          4.6614e-02, 4.8680e-02],
         [4.7080e-02, 4.7011e-02, 4.5967e-02,  ..., 4.8752e-02,
          4.6614e-02, 4.8680e-02],
         [4.7080e-02, 4.7011e-02, 4.5967e-02,  ..., 4.8752e-02,
          4.6614e-02, 4.8680e-02],
         [8.5876e-01, 8.5897e-01, 8.6210e-01,  ..., 8.5374e-01,
          8.6016e-01, 8.5396e-01]],
        [[4.5115e-02, 4.4200e-02, 4.6695e-02,  ..., 9.6251e-04,
          4.5524e-02, 4.5240e-02],
         [4.5115e-02, 4.4200e-02, 4.6695e-02,  ..., 9.6251e-04,
          4.5524e-02, 4.5240e-02],
         [4.5115e-02, 4.4200e-02, 4.6695e-02,  ..., 9.9711e-01,
          4.5524e-02, 4.5240e-02],
         [8.6465e-01, 8.6740e-01, 8.5992e-01,  ..., 9.6251e-04,
          8.6343e-01, 8.6428e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:53,043 [Process: 0] Synchronize training processes
2024-08-16 15:50:53,043 [Process: 0] Evaluating...
2024-08-16 15:50:53,045 [Process: 0] EPOCH 93:
2024-08-16 15:50:53,047 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0520, 0.0537, 0.0517,  ..., 0.0540, 0.0518, 0.0521],
         [0.0520, 0.0537, 0.0517,  ..., 0.0540, 0.0518, 0.0521],
         [0.0520, 0.0537, 0.0517,  ..., 0.0540, 0.0518, 0.0521],
         [0.8439, 0.8388, 0.8449,  ..., 0.8379, 0.8447, 0.8438]],
        [[0.0554, 0.0515, 0.0526,  ..., 0.0541, 0.0532, 0.0537],
         [0.0554, 0.0515, 0.0526,  ..., 0.0541, 0.0532, 0.0537],
         [0.0554, 0.0515, 0.0526,  ..., 0.0559, 0.0532, 0.0537],
         [0.8339, 0.8455, 0.8422,  ..., 0.8358, 0.8403, 0.8388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.6295e-02, 4.5230e-02, 4.8341e-02,  ..., 4.6742e-02,
          4.5741e-02, 4.7303e-02],
         [4.6295e-02, 4.5230e-02, 4.8341e-02,  ..., 4.6742e-02,
          4.5741e-02, 4.7303e-02],
         [4.6295e-02, 4.5230e-02, 4.8341e-02,  ..., 4.6742e-02,
          4.5741e-02, 4.7303e-02],
         [8.6111e-01, 8.6431e-01, 8.5498e-01,  ..., 8.5977e-01,
          8.6278e-01, 8.5809e-01]],
        [[4.7048e-02, 4.6841e-02, 4.5609e-02,  ..., 4.3587e-04,
          4.4102e-02, 4.6077e-02],
         [4.7048e-02, 4.6841e-02, 4.5609e-02,  ..., 4.3587e-04,
          4.4102e-02, 4.6077e-02],
         [4.7048e-02, 4.6841e-02, 4.5609e-02,  ..., 9.9869e-01,
          4.4102e-02, 4.6077e-02],
         [8.5886e-01, 8.5948e-01, 8.6317e-01,  ..., 4.3587e-04,
          8.6769e-01, 8.6177e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:50:55,010 [Process: 0] Synchronize training processes
2024-08-16 15:50:55,011 [Process: 0] Evaluating...
2024-08-16 15:50:55,012 [Process: 0] EPOCH 94:
2024-08-16 15:50:55,014 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0515, 0.0520, 0.0540,  ..., 0.0525, 0.0514, 0.0527],
         [0.0515, 0.0520, 0.0540,  ..., 0.0525, 0.0514, 0.0527],
         [0.0515, 0.0520, 0.0540,  ..., 0.0525, 0.0514, 0.0527],
         [0.8454, 0.8441, 0.8379,  ..., 0.8425, 0.8459, 0.8420]],
        [[0.0531, 0.0528, 0.0548,  ..., 0.0546, 0.0520, 0.0533],
         [0.0531, 0.0528, 0.0548,  ..., 0.0546, 0.0520, 0.0533],
         [0.0531, 0.0528, 0.0548,  ..., 0.0546, 0.0520, 0.0533],
         [0.8407, 0.8416, 0.8355,  ..., 0.8362, 0.8439, 0.8402]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0444, 0.0456, 0.0453,  ..., 0.0449, 0.0462, 0.0446],
         [0.0444, 0.0456, 0.0453,  ..., 0.0449, 0.0462, 0.0446],
         [0.0444, 0.0456, 0.0453,  ..., 0.0449, 0.0462, 0.0446],
         [0.8669, 0.8631, 0.8642,  ..., 0.8653, 0.8613, 0.8661]],
        [[0.0442, 0.0448, 0.0453,  ..., 0.0011, 0.0442, 0.0457],
         [0.0442, 0.0448, 0.0453,  ..., 0.0011, 0.0442, 0.0457],
         [0.0442, 0.0448, 0.0453,  ..., 0.9968, 0.0442, 0.0457],
         [0.8673, 0.8656, 0.8642,  ..., 0.0011, 0.8673, 0.8628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:57,052 [Process: 0] Synchronize training processes
2024-08-16 15:50:57,053 [Process: 0] Evaluating...
2024-08-16 15:50:57,055 [Process: 0] EPOCH 95:
2024-08-16 15:50:57,057 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0501, 0.0530, 0.0530,  ..., 0.0513, 0.0534, 0.0502],
         [0.0501, 0.0530, 0.0530,  ..., 0.0513, 0.0534, 0.0502],
         [0.0501, 0.0530, 0.0530,  ..., 0.0513, 0.0534, 0.0502],
         [0.8496, 0.8411, 0.8410,  ..., 0.8462, 0.8399, 0.8493]],
        [[0.0534, 0.0515, 0.0529,  ..., 0.0522, 0.0504, 0.0549],
         [0.0534, 0.0515, 0.0529,  ..., 0.0522, 0.0504, 0.0549],
         [0.0534, 0.0515, 0.0529,  ..., 0.0522, 0.0504, 0.0549],
         [0.8398, 0.8456, 0.8414,  ..., 0.8434, 0.8488, 0.8353]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.3810e-02, 4.4309e-02, 4.4016e-02,  ..., 4.4852e-02,
          4.2105e-02, 4.4001e-02],
         [4.3810e-02, 4.4309e-02, 4.4016e-02,  ..., 4.4852e-02,
          4.2105e-02, 4.4001e-02],
         [4.3810e-02, 4.4309e-02, 4.4016e-02,  ..., 4.4852e-02,
          4.2105e-02, 4.4001e-02],
         [8.6857e-01, 8.6707e-01, 8.6795e-01,  ..., 8.6544e-01,
          8.7369e-01, 8.6800e-01]],
        [[4.2441e-02, 4.4616e-02, 4.4518e-02,  ..., 1.7578e-04,
          4.3452e-02, 4.5108e-02],
         [4.2441e-02, 4.4616e-02, 4.4518e-02,  ..., 1.7578e-04,
          4.3452e-02, 4.5108e-02],
         [4.2441e-02, 4.4616e-02, 4.4518e-02,  ..., 9.9947e-01,
          4.3452e-02, 4.5108e-02],
         [8.7268e-01, 8.6615e-01, 8.6644e-01,  ..., 1.7578e-04,
          8.6964e-01, 8.6468e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:50:59,048 [Process: 0] Synchronize training processes
2024-08-16 15:50:59,048 [Process: 0] Evaluating...
2024-08-16 15:50:59,050 [Process: 0] EPOCH 96:
2024-08-16 15:50:59,052 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0516, 0.0521, 0.0508,  ..., 0.0525, 0.0523, 0.0482],
         [0.0516, 0.0521, 0.0508,  ..., 0.0525, 0.0523, 0.0482],
         [0.0516, 0.0521, 0.0508,  ..., 0.0525, 0.0523, 0.0482],
         [0.8453, 0.8438, 0.8475,  ..., 0.8424, 0.8431, 0.8553]],
        [[0.0509, 0.0481, 0.0508,  ..., 0.0511, 0.0517, 0.0499],
         [0.0509, 0.0481, 0.0508,  ..., 0.0511, 0.0517, 0.0499],
         [0.0509, 0.0481, 0.0508,  ..., 0.0511, 0.0517, 0.0499],
         [0.8474, 0.8557, 0.8475,  ..., 0.8468, 0.8450, 0.8502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0423, 0.0442, 0.0439,  ..., 0.0417, 0.0431, 0.0433],
         [0.0423, 0.0442, 0.0439,  ..., 0.0417, 0.0431, 0.0433],
         [0.0423, 0.0442, 0.0439,  ..., 0.0417, 0.0431, 0.0433],
         [0.8732, 0.8673, 0.8683,  ..., 0.8750, 0.8708, 0.8700]],
        [[0.0411, 0.0426, 0.0440,  ..., 0.0266, 0.0429, 0.0439],
         [0.0411, 0.0426, 0.0440,  ..., 0.0050, 0.0429, 0.0439],
         [0.0411, 0.0426, 0.0440,  ..., 0.9634, 0.0429, 0.0439],
         [0.8768, 0.8721, 0.8681,  ..., 0.0050, 0.8713, 0.8683]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 15:51:01,049 [Process: 0] Synchronize training processes
2024-08-16 15:51:01,049 [Process: 0] Evaluating...
2024-08-16 15:51:01,051 [Process: 0] EPOCH 97:
2024-08-16 15:51:01,053 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0508, 0.0495, 0.0503,  ..., 0.0504, 0.0485, 0.0515],
         [0.0508, 0.0495, 0.0503,  ..., 0.0504, 0.0485, 0.0515],
         [0.0508, 0.0495, 0.0503,  ..., 0.0504, 0.0485, 0.0515],
         [0.8477, 0.8514, 0.8490,  ..., 0.8487, 0.8546, 0.8456]],
        [[0.0489, 0.0490, 0.0506,  ..., 0.0505, 0.0485, 0.0493],
         [0.0489, 0.0490, 0.0506,  ..., 0.0505, 0.0485, 0.0493],
         [0.0489, 0.0490, 0.0506,  ..., 0.0505, 0.0485, 0.0493],
         [0.8533, 0.8530, 0.8483,  ..., 0.8485, 0.8545, 0.8522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0438, 0.0434, 0.0409,  ..., 0.0420, 0.0436, 0.0435],
         [0.0438, 0.0434, 0.0409,  ..., 0.0420, 0.0436, 0.0435],
         [0.0438, 0.0434, 0.0409,  ..., 0.0420, 0.0436, 0.0435],
         [0.8687, 0.8699, 0.8773,  ..., 0.8741, 0.8692, 0.8696]],
        [[0.0431, 0.0434, 0.0417,  ..., 0.0067, 0.0417, 0.0419],
         [0.0431, 0.0434, 0.0417,  ..., 0.0033, 0.0417, 0.0419],
         [0.0431, 0.0434, 0.0417,  ..., 0.9867, 0.0417, 0.0419],
         [0.8706, 0.8698, 0.8750,  ..., 0.0033, 0.8750, 0.8743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:02,971 [Process: 0] Synchronize training processes
2024-08-16 15:51:02,971 [Process: 0] Evaluating...
2024-08-16 15:51:02,973 [Process: 0] EPOCH 98:
2024-08-16 15:51:02,975 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0516, 0.0508, 0.0485,  ..., 0.0507, 0.0501, 0.0494],
         [0.0516, 0.0508, 0.0485,  ..., 0.0507, 0.0501, 0.0494],
         [0.0516, 0.0508, 0.0485,  ..., 0.0507, 0.0501, 0.0494],
         [0.8451, 0.8476, 0.8546,  ..., 0.8479, 0.8497, 0.8517]],
        [[0.0484, 0.0485, 0.0473,  ..., 0.0488, 0.0474, 0.0488],
         [0.0484, 0.0485, 0.0473,  ..., 0.0488, 0.0474, 0.0488],
         [0.0484, 0.0485, 0.0473,  ..., 0.0488, 0.0474, 0.0488],
         [0.8548, 0.8546, 0.8582,  ..., 0.8537, 0.8577, 0.8535]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0426, 0.0431, 0.0417,  ..., 0.0418, 0.0428, 0.0415],
         [0.0426, 0.0431, 0.0417,  ..., 0.0418, 0.0428, 0.0415],
         [0.0426, 0.0431, 0.0417,  ..., 0.0418, 0.0428, 0.0415],
         [0.8722, 0.8708, 0.8748,  ..., 0.8745, 0.8715, 0.8756]],
        [[0.0393, 0.0399, 0.0433,  ..., 0.0020, 0.0412, 0.0421],
         [0.0393, 0.0399, 0.0433,  ..., 0.0020, 0.0412, 0.0421],
         [0.0393, 0.0399, 0.0433,  ..., 0.9941, 0.0412, 0.0421],
         [0.8820, 0.8804, 0.8701,  ..., 0.0020, 0.8763, 0.8737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:04,907 [Process: 0] Synchronize training processes
2024-08-16 15:51:04,907 [Process: 0] Evaluating...
2024-08-16 15:51:04,909 [Process: 0] EPOCH 99:
2024-08-16 15:51:04,911 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0496, 0.0507, 0.0508,  ..., 0.0479, 0.0492, 0.0505],
         [0.0496, 0.0507, 0.0508,  ..., 0.0479, 0.0492, 0.0505],
         [0.0496, 0.0507, 0.0508,  ..., 0.0479, 0.0492, 0.0505],
         [0.8512, 0.8478, 0.8476,  ..., 0.8563, 0.8523, 0.8486]],
        [[0.0479, 0.0484, 0.0461,  ..., 0.0476, 0.0486, 0.0481],
         [0.0479, 0.0484, 0.0461,  ..., 0.0476, 0.0486, 0.0481],
         [0.0479, 0.0484, 0.0461,  ..., 0.0476, 0.0486, 0.0481],
         [0.8562, 0.8547, 0.8616,  ..., 0.8571, 0.8541, 0.8557]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.1798e-02, 4.0782e-02, 4.1034e-02,  ..., 4.1155e-02,
          4.3196e-02, 4.2238e-02],
         [4.1798e-02, 4.0782e-02, 4.1034e-02,  ..., 4.1155e-02,
          4.3196e-02, 4.2238e-02],
         [4.1798e-02, 4.0782e-02, 4.1034e-02,  ..., 4.1155e-02,
          4.3196e-02, 4.2238e-02],
         [8.7460e-01, 8.7765e-01, 8.7690e-01,  ..., 8.7653e-01,
          8.7041e-01, 8.7329e-01]],
        [[4.2476e-02, 4.1487e-02, 4.1050e-02,  ..., 6.0853e-04,
          4.1925e-02, 4.1004e-02],
         [4.2476e-02, 4.1487e-02, 4.1050e-02,  ..., 6.0853e-04,
          4.1925e-02, 4.1004e-02],
         [4.2476e-02, 4.1487e-02, 4.1050e-02,  ..., 9.9817e-01,
          4.1925e-02, 4.1004e-02],
         [8.7257e-01, 8.7554e-01, 8.7685e-01,  ..., 6.0853e-04,
          8.7423e-01, 8.7699e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:06,828 [Process: 0] Synchronize training processes
2024-08-16 15:51:06,828 [Process: 0] Evaluating...
2024-08-16 15:51:06,830 [Process: 0] EPOCH 100:
2024-08-16 15:51:06,832 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0491, 0.0514, 0.0489,  ..., 0.0474, 0.0489, 0.0468],
         [0.0491, 0.0514, 0.0489,  ..., 0.0474, 0.0489, 0.0468],
         [0.0491, 0.0514, 0.0489,  ..., 0.0474, 0.0489, 0.0468],
         [0.8526, 0.8458, 0.8532,  ..., 0.8577, 0.8533, 0.8597]],
        [[0.0469, 0.0462, 0.0464,  ..., 0.0473, 0.0470, 0.0477],
         [0.0469, 0.0462, 0.0464,  ..., 0.0473, 0.0470, 0.0477],
         [0.0469, 0.0462, 0.0464,  ..., 0.0473, 0.0470, 0.0477],
         [0.8592, 0.8613, 0.8608,  ..., 0.8581, 0.8591, 0.8569]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0422, 0.0417, 0.0426,  ..., 0.0412, 0.0431, 0.0407],
         [0.0422, 0.0417, 0.0426,  ..., 0.0412, 0.0431, 0.0407],
         [0.0422, 0.0417, 0.0426,  ..., 0.0412, 0.0431, 0.0407],
         [0.8734, 0.8749, 0.8722,  ..., 0.8764, 0.8706, 0.8779]],
        [[0.0398, 0.0420, 0.0419,  ..., 0.0062, 0.0414, 0.0411],
         [0.0398, 0.0420, 0.0419,  ..., 0.0062, 0.0414, 0.0411],
         [0.0398, 0.0420, 0.0419,  ..., 0.9814, 0.0414, 0.0411],
         [0.8807, 0.8741, 0.8743,  ..., 0.0062, 0.8759, 0.8768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:08,743 [Process: 0] Synchronize training processes
2024-08-16 15:51:08,744 [Process: 0] Evaluating...
2024-08-16 15:51:08,746 [Process: 0] EPOCH 101:
2024-08-16 15:51:08,748 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0464, 0.0473, 0.0486,  ..., 0.0481, 0.0471, 0.0475],
         [0.0464, 0.0473, 0.0486,  ..., 0.0481, 0.0471, 0.0475],
         [0.0464, 0.0473, 0.0486,  ..., 0.0481, 0.0471, 0.0475],
         [0.8608, 0.8580, 0.8541,  ..., 0.8556, 0.8586, 0.8575]],
        [[0.0464, 0.0470, 0.0468,  ..., 0.0476, 0.0470, 0.0491],
         [0.0464, 0.0470, 0.0468,  ..., 0.0476, 0.0470, 0.0491],
         [0.0464, 0.0470, 0.0468,  ..., 0.0476, 0.0470, 0.0491],
         [0.8609, 0.8590, 0.8595,  ..., 0.8572, 0.8589, 0.8528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0422, 0.0430, 0.0427,  ..., 0.0433, 0.0439, 0.0425],
         [0.0422, 0.0430, 0.0427,  ..., 0.0433, 0.0439, 0.0425],
         [0.0422, 0.0430, 0.0427,  ..., 0.0433, 0.0439, 0.0425],
         [0.8734, 0.8710, 0.8718,  ..., 0.8700, 0.8682, 0.8725]],
        [[0.0429, 0.0430, 0.0429,  ..., 0.0046, 0.0416, 0.0421],
         [0.0429, 0.0430, 0.0429,  ..., 0.0046, 0.0416, 0.0421],
         [0.0429, 0.0430, 0.0429,  ..., 0.9861, 0.0416, 0.0421],
         [0.8712, 0.8711, 0.8714,  ..., 0.0046, 0.8752, 0.8736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:10,672 [Process: 0] Synchronize training processes
2024-08-16 15:51:10,672 [Process: 0] Evaluating...
2024-08-16 15:51:10,679 [Process: 0] EPOCH 102:
2024-08-16 15:51:10,681 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:12,591 [Process: 0] Synchronize training processes
2024-08-16 15:51:12,592 [Process: 0] Evaluating...
2024-08-16 15:51:12,594 [Process: 0] EPOCH 103:
2024-08-16 15:51:12,596 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0475, 0.0483, 0.0481,  ..., 0.0468, 0.0474, 0.0469],
         [0.0475, 0.0483, 0.0481,  ..., 0.0468, 0.0474, 0.0469],
         [0.0475, 0.0483, 0.0481,  ..., 0.0468, 0.0474, 0.0469],
         [0.8576, 0.8552, 0.8557,  ..., 0.8595, 0.8579, 0.8593]],
        [[0.0459, 0.0465, 0.0473,  ..., 0.0460, 0.0482, 0.0478],
         [0.0459, 0.0465, 0.0473,  ..., 0.0460, 0.0482, 0.0478],
         [0.0459, 0.0465, 0.0473,  ..., 0.0460, 0.0482, 0.0478],
         [0.8624, 0.8606, 0.8580,  ..., 0.8620, 0.8554, 0.8566]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0457, 0.0456, 0.0455,  ..., 0.0448, 0.0455, 0.0449],
         [0.0457, 0.0456, 0.0455,  ..., 0.0448, 0.0455, 0.0449],
         [0.0457, 0.0456, 0.0455,  ..., 0.0448, 0.0455, 0.0449],
         [0.8630, 0.8633, 0.8636,  ..., 0.8657, 0.8635, 0.8652]],
        [[0.0425, 0.0433, 0.0440,  ..., 0.0037, 0.0437, 0.0445],
         [0.0425, 0.0433, 0.0440,  ..., 0.0037, 0.0437, 0.0445],
         [0.0425, 0.0433, 0.0440,  ..., 0.9890, 0.0437, 0.0445],
         [0.8726, 0.8702, 0.8679,  ..., 0.0037, 0.8688, 0.8665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:14,494 [Process: 0] Synchronize training processes
2024-08-16 15:51:14,495 [Process: 0] Evaluating...
2024-08-16 15:51:14,497 [Process: 0] EPOCH 104:
2024-08-16 15:51:14,499 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0465, 0.0459, 0.0467,  ..., 0.0472, 0.0455, 0.0457],
         [0.0465, 0.0459, 0.0467,  ..., 0.0472, 0.0455, 0.0457],
         [0.0465, 0.0459, 0.0467,  ..., 0.0472, 0.0455, 0.0457],
         [0.8604, 0.8622, 0.8599,  ..., 0.8584, 0.8634, 0.8629]],
        [[0.0474, 0.0473, 0.0461,  ..., 0.0474, 0.0448, 0.0469],
         [0.0474, 0.0473, 0.0461,  ..., 0.0474, 0.0448, 0.0469],
         [0.0474, 0.0473, 0.0461,  ..., 0.0474, 0.0448, 0.0469],
         [0.8577, 0.8581, 0.8618,  ..., 0.8579, 0.8657, 0.8594]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0443, 0.0454, 0.0443,  ..., 0.0446, 0.0456, 0.0444],
         [0.0443, 0.0454, 0.0443,  ..., 0.0446, 0.0456, 0.0444],
         [0.0443, 0.0454, 0.0443,  ..., 0.0446, 0.0456, 0.0444],
         [0.8671, 0.8638, 0.8671,  ..., 0.8661, 0.8632, 0.8667]],
        [[0.0429, 0.0443, 0.0464,  ..., 0.0041, 0.0442, 0.0435],
         [0.0429, 0.0443, 0.0464,  ..., 0.0041, 0.0442, 0.0435],
         [0.0429, 0.0443, 0.0464,  ..., 0.9878, 0.0442, 0.0435],
         [0.8714, 0.8672, 0.8609,  ..., 0.0041, 0.8675, 0.8695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:16,410 [Process: 0] Synchronize training processes
2024-08-16 15:51:16,411 [Process: 0] Evaluating...
2024-08-16 15:51:16,413 [Process: 0] EPOCH 105:
2024-08-16 15:51:16,415 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0449, 0.0452, 0.0455,  ..., 0.0467, 0.0442, 0.0459],
         [0.0449, 0.0452, 0.0455,  ..., 0.0467, 0.0442, 0.0459],
         [0.0449, 0.0452, 0.0455,  ..., 0.0467, 0.0442, 0.0459],
         [0.8652, 0.8645, 0.8635,  ..., 0.8599, 0.8673, 0.8622]],
        [[0.0455, 0.0447, 0.0453,  ..., 0.0464, 0.0465, 0.0472],
         [0.0455, 0.0447, 0.0453,  ..., 0.0464, 0.0465, 0.0472],
         [0.0455, 0.0447, 0.0453,  ..., 0.0464, 0.0465, 0.0472],
         [0.8634, 0.8659, 0.8640,  ..., 0.8609, 0.8605, 0.8585]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.5167e-02, 4.3566e-02, 4.3257e-02,  ..., 4.2495e-02,
          4.3905e-02, 4.5367e-02],
         [4.5167e-02, 4.3566e-02, 4.3257e-02,  ..., 4.2495e-02,
          4.3905e-02, 4.5367e-02],
         [4.5167e-02, 4.3566e-02, 4.3257e-02,  ..., 4.2495e-02,
          4.3905e-02, 4.5367e-02],
         [8.6450e-01, 8.6930e-01, 8.7023e-01,  ..., 8.7251e-01,
          8.6829e-01, 8.6390e-01]],
        [[4.2917e-02, 4.1813e-02, 4.3760e-02,  ..., 9.1562e-04,
          4.4368e-02, 4.4308e-02],
         [4.2917e-02, 4.1813e-02, 4.3760e-02,  ..., 9.1562e-04,
          4.4368e-02, 4.4308e-02],
         [4.2917e-02, 4.1813e-02, 4.3760e-02,  ..., 9.9725e-01,
          4.4368e-02, 4.4308e-02],
         [8.7125e-01, 8.7456e-01, 8.6872e-01,  ..., 9.1562e-04,
          8.6689e-01, 8.6708e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:18,327 [Process: 0] Synchronize training processes
2024-08-16 15:51:18,328 [Process: 0] Evaluating...
2024-08-16 15:51:18,330 [Process: 0] EPOCH 106:
2024-08-16 15:51:18,331 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0456, 0.0448, 0.0448,  ..., 0.0442, 0.0445, 0.0459],
         [0.0456, 0.0448, 0.0448,  ..., 0.0442, 0.0445, 0.0459],
         [0.0456, 0.0448, 0.0448,  ..., 0.0442, 0.0445, 0.0459],
         [0.8633, 0.8655, 0.8656,  ..., 0.8673, 0.8664, 0.8623]],
        [[0.0461, 0.0460, 0.0453,  ..., 0.0462, 0.0453, 0.0451],
         [0.0461, 0.0460, 0.0453,  ..., 0.0462, 0.0453, 0.0451],
         [0.0461, 0.0460, 0.0453,  ..., 0.0462, 0.0453, 0.0451],
         [0.8618, 0.8621, 0.8642,  ..., 0.8613, 0.8641, 0.8646]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0441, 0.0432, 0.0429,  ..., 0.0443, 0.0123, 0.0444],
         [0.0441, 0.0432, 0.0429,  ..., 0.0443, 0.0123, 0.0444],
         [0.0441, 0.0432, 0.0429,  ..., 0.0443, 0.9630, 0.0444],
         [0.8678, 0.8703, 0.8713,  ..., 0.8670, 0.0123, 0.8669]],
        [[0.0417, 0.0417, 0.0401,  ..., 0.0017, 0.0428, 0.0420],
         [0.0417, 0.0417, 0.0401,  ..., 0.0017, 0.0428, 0.0420],
         [0.0417, 0.0417, 0.0401,  ..., 0.9949, 0.0428, 0.0420],
         [0.8749, 0.8750, 0.8798,  ..., 0.0017, 0.8717, 0.8740]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:51:20,248 [Process: 0] Synchronize training processes
2024-08-16 15:51:20,248 [Process: 0] Evaluating...
2024-08-16 15:51:20,250 [Process: 0] EPOCH 107:
2024-08-16 15:51:20,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0451, 0.0450, 0.0441,  ..., 0.0439, 0.0442, 0.0441],
         [0.0451, 0.0450, 0.0441,  ..., 0.0439, 0.0442, 0.0441],
         [0.0451, 0.0450, 0.0441,  ..., 0.0439, 0.0442, 0.0441],
         [0.8647, 0.8650, 0.8678,  ..., 0.8682, 0.8673, 0.8677]],
        [[0.0444, 0.0441, 0.0447,  ..., 0.0441, 0.0438, 0.0446],
         [0.0444, 0.0441, 0.0447,  ..., 0.0441, 0.0438, 0.0446],
         [0.0444, 0.0441, 0.0447,  ..., 0.0441, 0.0438, 0.0446],
         [0.8668, 0.8676, 0.8658,  ..., 0.8677, 0.8687, 0.8661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0432, 0.0427, 0.0442,  ..., 0.0435, 0.0414, 0.0447],
         [0.0432, 0.0427, 0.0442,  ..., 0.0435, 0.0414, 0.0447],
         [0.0432, 0.0427, 0.0442,  ..., 0.0435, 0.0414, 0.0447],
         [0.8704, 0.8719, 0.8673,  ..., 0.8695, 0.8759, 0.8660]],
        [[0.0425, 0.0428, 0.0393,  ..., 0.0040, 0.0408, 0.0402],
         [0.0425, 0.0428, 0.0393,  ..., 0.0040, 0.0408, 0.0402],
         [0.0425, 0.0428, 0.0393,  ..., 0.9879, 0.0408, 0.0402],
         [0.8726, 0.8715, 0.8821,  ..., 0.0040, 0.8777, 0.8793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0448, 0.0450, 0.0439,  ..., 0.0438, 0.0445, 0.0449],
         [0.0448, 0.0450, 0.0439,  ..., 0.0438, 0.0445, 0.0449],
         [0.0448, 0.0450, 0.0439,  ..., 0.0438, 0.0445, 0.0449],
         [0.8656, 0.8650, 0.8684,  ..., 0.8685, 0.8666, 0.8654]],
        [[0.0453, 0.0448, 0.0434,  ..., 0.0447, 0.0433, 0.0448],
         [0.0453, 0.0448, 0.0434,  ..., 0.0447, 0.0433, 0.0448],
         [0.0453, 0.0448, 0.0434,  ..., 0.0447, 0.0433, 0.0448],
         [0.8640, 0.8656, 0.8699,  ..., 0.8660, 0.8702, 0.8657]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:22,159 [Process: 0] Synchronize training processes
2024-08-16 15:51:22,159 [Process: 0] Evaluating...
2024-08-16 15:51:22,161 [Process: 0] EPOCH 108:
2024-08-16 15:51:22,163 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0437, 0.0429, 0.0437,  ..., 0.0413, 0.0406, 0.0409],
         [0.0437, 0.0429, 0.0437,  ..., 0.0413, 0.0406, 0.0409],
         [0.0437, 0.0429, 0.0437,  ..., 0.0413, 0.0406, 0.0409],
         [0.8688, 0.8714, 0.8689,  ..., 0.8760, 0.8782, 0.8772]],
        [[0.0405, 0.0385, 0.0393,  ..., 0.0015, 0.0413, 0.0392],
         [0.0405, 0.0385, 0.0393,  ..., 0.0015, 0.0413, 0.0392],
         [0.0405, 0.0385, 0.0393,  ..., 0.9954, 0.0413, 0.0392],
         [0.8785, 0.8844, 0.8821,  ..., 0.0015, 0.8760, 0.8824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0421, 0.0435, 0.0442,  ..., 0.0440, 0.0438, 0.0434],
         [0.0421, 0.0435, 0.0442,  ..., 0.0440, 0.0438, 0.0434],
         [0.0421, 0.0435, 0.0442,  ..., 0.0440, 0.0438, 0.0434],
         [0.8737, 0.8694, 0.8675,  ..., 0.8680, 0.8685, 0.8698]],
        [[0.0433, 0.0422, 0.0428,  ..., 0.0417, 0.0418, 0.0422],
         [0.0433, 0.0422, 0.0428,  ..., 0.0417, 0.0418, 0.0422],
         [0.0433, 0.0422, 0.0428,  ..., 0.0417, 0.0418, 0.0422],
         [0.8701, 0.8733, 0.8715,  ..., 0.8748, 0.8745, 0.8733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:24,066 [Process: 0] Synchronize training processes
2024-08-16 15:51:24,066 [Process: 0] Evaluating...
2024-08-16 15:51:24,068 [Process: 0] EPOCH 109:
2024-08-16 15:51:24,070 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.2299e-02, 4.2440e-02, 4.1035e-02,  ..., 4.1041e-02,
          4.2050e-02, 4.1590e-02],
         [4.2299e-02, 4.2440e-02, 4.1035e-02,  ..., 4.1041e-02,
          4.2050e-02, 4.1590e-02],
         [4.2299e-02, 4.2440e-02, 4.1035e-02,  ..., 4.1041e-02,
          4.2050e-02, 4.1590e-02],
         [8.7310e-01, 8.7268e-01, 8.7690e-01,  ..., 8.7688e-01,
          8.7385e-01, 8.7523e-01]],
        [[3.9753e-02, 4.1530e-02, 4.0029e-02,  ..., 8.7760e-04,
          4.0453e-02, 4.1255e-02],
         [3.9753e-02, 4.1530e-02, 4.0029e-02,  ..., 8.7760e-04,
          4.0453e-02, 4.1255e-02],
         [3.9753e-02, 4.1530e-02, 4.0029e-02,  ..., 9.9737e-01,
          4.0453e-02, 4.1255e-02],
         [8.8074e-01, 8.7541e-01, 8.7991e-01,  ..., 8.7760e-04,
          8.7864e-01, 8.7624e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0428, 0.0431, 0.0436,  ..., 0.0430, 0.0425, 0.0426],
         [0.0428, 0.0431, 0.0436,  ..., 0.0430, 0.0425, 0.0426],
         [0.0428, 0.0431, 0.0436,  ..., 0.0430, 0.0425, 0.0426],
         [0.8715, 0.8707, 0.8693,  ..., 0.8711, 0.8724, 0.8721]],
        [[0.0422, 0.0420, 0.0420,  ..., 0.0421, 0.0418, 0.0432],
         [0.0422, 0.0420, 0.0420,  ..., 0.0421, 0.0418, 0.0432],
         [0.0422, 0.0420, 0.0420,  ..., 0.0421, 0.0418, 0.0432],
         [0.8734, 0.8741, 0.8741,  ..., 0.8738, 0.8747, 0.8704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:25,983 [Process: 0] Synchronize training processes
2024-08-16 15:51:25,983 [Process: 0] Evaluating...
2024-08-16 15:51:25,985 [Process: 0] EPOCH 110:
2024-08-16 15:51:25,987 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.1108e-02, 4.1619e-02, 4.0242e-02,  ..., 4.0525e-02,
          4.2280e-02, 4.1906e-02],
         [4.1108e-02, 4.1619e-02, 4.0242e-02,  ..., 4.0525e-02,
          4.2280e-02, 4.1906e-02],
         [4.1108e-02, 4.1619e-02, 4.0242e-02,  ..., 4.0525e-02,
          4.2280e-02, 4.1906e-02],
         [8.7668e-01, 8.7514e-01, 8.7927e-01,  ..., 8.7842e-01,
          8.7316e-01, 8.7428e-01]],
        [[3.9760e-02, 4.0343e-02, 3.9940e-02,  ..., 6.6477e-05,
          3.9512e-02, 4.0002e-02],
         [3.9760e-02, 4.0343e-02, 3.9940e-02,  ..., 6.6477e-05,
          3.9512e-02, 4.0002e-02],
         [3.9760e-02, 4.0343e-02, 3.9940e-02,  ..., 9.9980e-01,
          3.9512e-02, 4.0002e-02],
         [8.8072e-01, 8.7897e-01, 8.8018e-01,  ..., 6.6477e-05,
          8.8147e-01, 8.8000e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0426, 0.0421, 0.0421,  ..., 0.0424, 0.0428, 0.0425],
         [0.0426, 0.0421, 0.0421,  ..., 0.0424, 0.0428, 0.0425],
         [0.0426, 0.0421, 0.0421,  ..., 0.0424, 0.0428, 0.0425],
         [0.8722, 0.8736, 0.8736,  ..., 0.8728, 0.8717, 0.8724]],
        [[0.0403, 0.0409, 0.0417,  ..., 0.0422, 0.0410, 0.0421],
         [0.0403, 0.0409, 0.0417,  ..., 0.0422, 0.0410, 0.0421],
         [0.0403, 0.0409, 0.0417,  ..., 0.0422, 0.0410, 0.0421],
         [0.8792, 0.8774, 0.8748,  ..., 0.8735, 0.8771, 0.8736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:27,902 [Process: 0] Synchronize training processes
2024-08-16 15:51:27,902 [Process: 0] Evaluating...
2024-08-16 15:51:27,904 [Process: 0] EPOCH 111:
2024-08-16 15:51:27,906 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0402, 0.0389, 0.0405,  ..., 0.0398, 0.0407, 0.0402],
         [0.0402, 0.0389, 0.0405,  ..., 0.0398, 0.0407, 0.0402],
         [0.0402, 0.0389, 0.0405,  ..., 0.0398, 0.0407, 0.0402],
         [0.8793, 0.8834, 0.8784,  ..., 0.8807, 0.8778, 0.8793]],
        [[0.0409, 0.0431, 0.0410,  ..., 0.0021, 0.0404, 0.0410],
         [0.0409, 0.0431, 0.0410,  ..., 0.0021, 0.0404, 0.0410],
         [0.0409, 0.0431, 0.0410,  ..., 0.9938, 0.0404, 0.0410],
         [0.8772, 0.8707, 0.8771,  ..., 0.0021, 0.8789, 0.8770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0406, 0.0419, 0.0415,  ..., 0.0411, 0.0410, 0.0427],
         [0.0406, 0.0419, 0.0415,  ..., 0.0411, 0.0410, 0.0427],
         [0.0406, 0.0419, 0.0415,  ..., 0.0411, 0.0410, 0.0427],
         [0.8781, 0.8744, 0.8755,  ..., 0.8767, 0.8771, 0.8719]],
        [[0.0420, 0.0398, 0.0401,  ..., 0.0407, 0.0413, 0.0442],
         [0.0420, 0.0398, 0.0401,  ..., 0.0407, 0.0413, 0.0442],
         [0.0420, 0.0398, 0.0401,  ..., 0.0407, 0.0413, 0.0442],
         [0.8739, 0.8807, 0.8798,  ..., 0.8780, 0.8760, 0.8674]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:29,814 [Process: 0] Synchronize training processes
2024-08-16 15:51:29,814 [Process: 0] Evaluating...
2024-08-16 15:51:29,822 [Process: 0] EPOCH 112:
2024-08-16 15:51:29,824 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[4.0300e-02, 4.2096e-02, 3.9282e-02,  ..., 3.9766e-02,
          4.1405e-02, 4.0644e-02],
         [4.0300e-02, 4.2096e-02, 3.9282e-02,  ..., 3.9766e-02,
          4.1405e-02, 4.0644e-02],
         [4.0300e-02, 4.2096e-02, 3.9282e-02,  ..., 3.9766e-02,
          4.1405e-02, 4.0644e-02],
         [8.7910e-01, 8.7371e-01, 8.8216e-01,  ..., 8.8070e-01,
          8.7579e-01, 8.7807e-01]],
        [[4.1237e-02, 3.8628e-02, 4.0366e-02,  ..., 1.3621e-04,
          3.8852e-02, 4.0763e-02],
         [4.1237e-02, 3.8628e-02, 4.0366e-02,  ..., 1.3621e-04,
          3.8852e-02, 4.0763e-02],
         [4.1237e-02, 3.8628e-02, 4.0366e-02,  ..., 9.9959e-01,
          3.8852e-02, 4.0763e-02],
         [8.7629e-01, 8.8412e-01, 8.7890e-01,  ..., 1.3621e-04,
          8.8344e-01, 8.7771e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0406, 0.0416, 0.0409,  ..., 0.0413, 0.0394, 0.0401],
         [0.0406, 0.0416, 0.0409,  ..., 0.0413, 0.0394, 0.0401],
         [0.0406, 0.0416, 0.0409,  ..., 0.0413, 0.0394, 0.0401],
         [0.8783, 0.8752, 0.8772,  ..., 0.8760, 0.8819, 0.8798]],
        [[0.0414, 0.0419, 0.0402,  ..., 0.0409, 0.0439, 0.0410],
         [0.0414, 0.0419, 0.0402,  ..., 0.0409, 0.0439, 0.0410],
         [0.0414, 0.0419, 0.0402,  ..., 0.0409, 0.0439, 0.0410],
         [0.8757, 0.8743, 0.8794,  ..., 0.8774, 0.8683, 0.8770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:31,741 [Process: 0] Synchronize training processes
2024-08-16 15:51:31,741 [Process: 0] Evaluating...
2024-08-16 15:51:31,743 [Process: 0] EPOCH 113:
2024-08-16 15:51:31,745 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.9324e-02, 3.9440e-02, 3.9089e-02,  ..., 3.8461e-02,
          3.8647e-02, 3.8985e-02],
         [3.9324e-02, 3.9440e-02, 3.9089e-02,  ..., 3.8461e-02,
          3.8647e-02, 3.8985e-02],
         [3.9324e-02, 3.9440e-02, 3.9089e-02,  ..., 3.8461e-02,
          3.8647e-02, 3.8985e-02],
         [8.8203e-01, 8.8168e-01, 8.8273e-01,  ..., 8.8462e-01,
          8.8406e-01, 8.8305e-01]],
        [[3.7885e-02, 3.9181e-02, 3.9467e-02,  ..., 1.1895e-03,
          3.8696e-02, 3.8005e-02],
         [3.7885e-02, 3.9181e-02, 3.9467e-02,  ..., 6.5558e-04,
          3.8696e-02, 3.8005e-02],
         [3.7885e-02, 3.9181e-02, 3.9467e-02,  ..., 9.9750e-01,
          3.8696e-02, 3.8005e-02],
         [8.8635e-01, 8.8246e-01, 8.8160e-01,  ..., 6.5558e-04,
          8.8391e-01, 8.8598e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0410, 0.0426, 0.0412,  ..., 0.0400, 0.0396, 0.0416],
         [0.0410, 0.0426, 0.0412,  ..., 0.0400, 0.0396, 0.0416],
         [0.0410, 0.0426, 0.0412,  ..., 0.0400, 0.0396, 0.0416],
         [0.8769, 0.8722, 0.8763,  ..., 0.8799, 0.8811, 0.8752]],
        [[0.0400, 0.0397, 0.0383,  ..., 0.0407, 0.0402, 0.0410],
         [0.0400, 0.0397, 0.0383,  ..., 0.0407, 0.0402, 0.0410],
         [0.0400, 0.0397, 0.0383,  ..., 0.0407, 0.0402, 0.0410],
         [0.8799, 0.8810, 0.8850,  ..., 0.8780, 0.8795, 0.8771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:33,664 [Process: 0] Synchronize training processes
2024-08-16 15:51:33,664 [Process: 0] Evaluating...
2024-08-16 15:51:33,666 [Process: 0] EPOCH 114:
2024-08-16 15:51:33,668 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7814e-02, 3.6314e-02, 3.9052e-02,  ..., 3.8259e-02,
          4.5847e-02, 3.7406e-02],
         [3.7814e-02, 3.6314e-02, 3.9052e-02,  ..., 3.8259e-02,
          4.5847e-02, 3.7406e-02],
         [3.7814e-02, 3.6314e-02, 3.9052e-02,  ..., 3.8259e-02,
          4.9326e-02, 3.7406e-02],
         [8.8656e-01, 8.9106e-01, 8.8284e-01,  ..., 8.8522e-01,
          8.5898e-01, 8.8778e-01]],
        [[3.9390e-02, 3.7953e-02, 3.8519e-02,  ..., 1.3240e-04,
          3.8102e-02, 3.9013e-02],
         [3.9390e-02, 3.7953e-02, 3.8519e-02,  ..., 1.3240e-04,
          3.8102e-02, 3.9013e-02],
         [3.9390e-02, 3.7953e-02, 3.8519e-02,  ..., 9.9960e-01,
          3.8102e-02, 3.9013e-02],
         [8.8183e-01, 8.8614e-01, 8.8444e-01,  ..., 1.3240e-04,
          8.8569e-01, 8.8296e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0423, 0.0424, 0.0402,  ..., 0.0404, 0.0407, 0.0418],
         [0.0423, 0.0424, 0.0402,  ..., 0.0404, 0.0407, 0.0418],
         [0.0423, 0.0424, 0.0402,  ..., 0.0404, 0.0407, 0.0418],
         [0.8732, 0.8729, 0.8793,  ..., 0.8788, 0.8779, 0.8747]],
        [[0.0386, 0.0399, 0.0393,  ..., 0.0400, 0.0386, 0.0402],
         [0.0386, 0.0399, 0.0393,  ..., 0.0400, 0.0386, 0.0402],
         [0.0386, 0.0399, 0.0393,  ..., 0.0400, 0.0386, 0.0402],
         [0.8842, 0.8803, 0.8822,  ..., 0.8801, 0.8843, 0.8794]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:35,587 [Process: 0] Synchronize training processes
2024-08-16 15:51:35,587 [Process: 0] Evaluating...
2024-08-16 15:51:35,590 [Process: 0] EPOCH 115:
2024-08-16 15:51:35,591 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.8376e-02, 3.8411e-02, 3.8314e-02,  ..., 3.9105e-02,
          3.9676e-02, 3.8392e-02],
         [3.8376e-02, 3.8411e-02, 3.8314e-02,  ..., 3.9105e-02,
          3.9676e-02, 3.8392e-02],
         [3.8376e-02, 3.8411e-02, 3.8314e-02,  ..., 3.9105e-02,
          3.9676e-02, 3.8392e-02],
         [8.8487e-01, 8.8477e-01, 8.8506e-01,  ..., 8.8268e-01,
          8.8097e-01, 8.8482e-01]],
        [[3.7508e-02, 3.6846e-02, 3.7385e-02,  ..., 4.2524e-04,
          3.7157e-02, 3.7159e-02],
         [3.7508e-02, 3.6846e-02, 3.7385e-02,  ..., 4.2524e-04,
          3.7157e-02, 3.7159e-02],
         [3.7508e-02, 3.6846e-02, 3.7385e-02,  ..., 9.9872e-01,
          3.7157e-02, 3.7159e-02],
         [8.8748e-01, 8.8946e-01, 8.8784e-01,  ..., 4.2524e-04,
          8.8853e-01, 8.8852e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0408, 0.0395, 0.0388,  ..., 0.0407, 0.0400, 0.0390],
         [0.0408, 0.0395, 0.0388,  ..., 0.0407, 0.0400, 0.0390],
         [0.0408, 0.0395, 0.0388,  ..., 0.0407, 0.0400, 0.0390],
         [0.8777, 0.8816, 0.8837,  ..., 0.8780, 0.8801, 0.8829]],
        [[0.0387, 0.0400, 0.0397,  ..., 0.0389, 0.0401, 0.0375],
         [0.0387, 0.0400, 0.0397,  ..., 0.0389, 0.0401, 0.0375],
         [0.0387, 0.0400, 0.0397,  ..., 0.0389, 0.0401, 0.0375],
         [0.8839, 0.8801, 0.8810,  ..., 0.8834, 0.8796, 0.8876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:37,521 [Process: 0] Synchronize training processes
2024-08-16 15:51:37,522 [Process: 0] Evaluating...
2024-08-16 15:51:37,524 [Process: 0] EPOCH 116:
2024-08-16 15:51:37,526 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.7509e-02, 3.6597e-02, 3.6864e-02,  ..., 3.5912e-02,
          3.7741e-02, 3.8469e-02],
         [3.7509e-02, 3.6597e-02, 3.6864e-02,  ..., 3.5912e-02,
          3.7741e-02, 3.8469e-02],
         [3.7509e-02, 3.6597e-02, 3.6864e-02,  ..., 3.5912e-02,
          3.7741e-02, 3.8469e-02],
         [8.8747e-01, 8.9021e-01, 8.8941e-01,  ..., 8.9226e-01,
          8.8678e-01, 8.8459e-01]],
        [[3.7000e-02, 3.6692e-02, 3.6700e-02,  ..., 6.1043e-04,
          3.6216e-02, 3.6444e-02],
         [3.7000e-02, 3.6692e-02, 3.6700e-02,  ..., 6.1043e-04,
          3.6216e-02, 3.6444e-02],
         [3.7000e-02, 3.6692e-02, 3.6700e-02,  ..., 9.9817e-01,
          3.6216e-02, 3.6444e-02],
         [8.8900e-01, 8.8992e-01, 8.8990e-01,  ..., 6.1043e-04,
          8.9135e-01, 8.9067e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0384, 0.0384, 0.0388,  ..., 0.0395, 0.0397, 0.0386],
         [0.0384, 0.0384, 0.0388,  ..., 0.0395, 0.0397, 0.0386],
         [0.0384, 0.0384, 0.0388,  ..., 0.0395, 0.0397, 0.0386],
         [0.8848, 0.8849, 0.8835,  ..., 0.8816, 0.8808, 0.8843]],
        [[0.0396, 0.0386, 0.0388,  ..., 0.0389, 0.0378, 0.0386],
         [0.0396, 0.0386, 0.0388,  ..., 0.0389, 0.0378, 0.0386],
         [0.0396, 0.0386, 0.0388,  ..., 0.0389, 0.0378, 0.0386],
         [0.8811, 0.8843, 0.8837,  ..., 0.8833, 0.8867, 0.8841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 15:51:39,447 [Process: 0] Synchronize training processes
2024-08-16 15:51:39,448 [Process: 0] Evaluating...
2024-08-16 15:51:39,449 [Process: 0] EPOCH 117:
2024-08-16 15:51:39,451 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0367, 0.0360, 0.0383,  ..., 0.0373, 0.0363, 0.0385],
         [0.0367, 0.0360, 0.0383,  ..., 0.0373, 0.0363, 0.0385],
         [0.0367, 0.0360, 0.0383,  ..., 0.0373, 0.0363, 0.0385],
         [0.8899, 0.8921, 0.8850,  ..., 0.8882, 0.8912, 0.8844]],
        [[0.0366, 0.0351, 0.0363,  ..., 0.0023, 0.0375, 0.0341],
         [0.0366, 0.0351, 0.0363,  ..., 0.0023, 0.0375, 0.0341],
         [0.0366, 0.0351, 0.0363,  ..., 0.9930, 0.0375, 0.0341],
         [0.8903, 0.8948, 0.8911,  ..., 0.0023, 0.8875, 0.8977]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0376, 0.0393, 0.0391,  ..., 0.0379, 0.0399, 0.0392],
         [0.0376, 0.0393, 0.0391,  ..., 0.0379, 0.0399, 0.0392],
         [0.0376, 0.0393, 0.0391,  ..., 0.0379, 0.0399, 0.0392],
         [0.8871, 0.8822, 0.8826,  ..., 0.8862, 0.8803, 0.8825]],
        [[0.0373, 0.0389, 0.0376,  ..., 0.0374, 0.0369, 0.0388],
         [0.0373, 0.0389, 0.0376,  ..., 0.0374, 0.0369, 0.0388],
         [0.0373, 0.0389, 0.0376,  ..., 0.0374, 0.0369, 0.0388],
         [0.8881, 0.8832, 0.8873,  ..., 0.8878, 0.8893, 0.8835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 15:51:41,363 [Process: 0] Synchronize training processes
2024-08-16 15:51:41,364 [Process: 0] Evaluating...
2024-08-16 15:51:41,365 [Process: 0] EPOCH 118:
2024-08-16 15:51:41,367 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[3.6591e-02, 3.8360e-02, 3.8933e-02,  ..., 3.6651e-02,
          3.6698e-02, 3.7948e-02],
         [3.6591e-02, 3.8360e-02, 3.8933e-02,  ..., 3.6651e-02,
          3.6698e-02, 3.7948e-02],
         [3.6591e-02, 3.8360e-02, 3.8933e-02,  ..., 3.6651e-02,
          3.6698e-02, 3.7948e-02],
         [8.9023e-01, 8.8492e-01, 8.8320e-01,  ..., 8.9005e-01,
          8.8991e-01, 8.8616e-01]],
        [[3.7728e-02, 3.7250e-02, 3.5753e-02,  ..., 3.4184e-04,
          3.6400e-02, 3.5628e-02],
         [3.7728e-02, 3.7250e-02, 3.5753e-02,  ..., 3.4184e-04,
          3.6400e-02, 3.5628e-02],
         [3.7728e-02, 3.7250e-02, 3.5753e-02,  ..., 9.9897e-01,
          3.6400e-02, 3.5628e-02],
         [8.8682e-01, 8.8825e-01, 8.9274e-01,  ..., 3.4184e-04,
          8.9080e-01, 8.9312e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0447, 0.0467, 0.0481,  ..., 0.0393, 0.0446, 0.0424],
         [0.0447, 0.0467, 0.0481,  ..., 0.0393, 0.0446, 0.0424],
         [0.0447, 0.0522, 0.0502,  ..., 0.0393, 0.0446, 0.0424],
         [0.8659, 0.8543, 0.8537,  ..., 0.8820, 0.8661, 0.8729]],
        [[0.0565, 0.0470, 0.0474,  ..., 0.0528, 0.0498, 0.0517],
         [0.0565, 0.0470, 0.0474,  ..., 0.0528, 0.0498, 0.0517],
         [0.0565, 0.0470, 0.0474,  ..., 0.0699, 0.0498, 0.0546],
         [0.8305, 0.8590, 0.8577,  ..., 0.8245, 0.8507, 0.8420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.8800e-02, 3.8648e-02, 3.8489e-02,  ..., 3.9331e-02,
          3.9240e-02, 3.8974e-02],
         [3.8800e-02, 3.8648e-02, 3.8489e-02,  ..., 3.9331e-02,
          3.9240e-02, 3.8974e-02],
         [3.8800e-02, 3.8648e-02, 3.8489e-02,  ..., 3.9331e-02,
          3.9240e-02, 3.8974e-02],
         [8.8360e-01, 8.8406e-01, 8.8453e-01,  ..., 8.8201e-01,
          8.8228e-01, 8.8308e-01]],
        [[3.8380e-02, 3.7590e-02, 3.8918e-02,  ..., 3.6880e-04,
          3.8632e-02, 3.9190e-02],
         [3.8380e-02, 3.7590e-02, 3.8918e-02,  ..., 3.6880e-04,
          3.8632e-02, 3.9190e-02],
         [3.8380e-02, 3.7590e-02, 3.8918e-02,  ..., 9.9889e-01,
          3.8632e-02, 3.9190e-02],
         [8.8486e-01, 8.8723e-01, 8.8325e-01,  ..., 3.6880e-04,
          8.8410e-01, 8.8243e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:51:43,292 [Process: 0] Synchronize training processes
2024-08-16 15:51:43,293 [Process: 0] Evaluating...
2024-08-16 15:51:43,295 [Process: 0] EPOCH 119:
2024-08-16 15:51:43,297 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0616, 0.0657, 0.0710,  ..., 0.0537, 0.0558, 0.0543],
         [0.0616, 0.0657, 0.0710,  ..., 0.0537, 0.0558, 0.0543],
         [0.0616, 0.0734, 0.0710,  ..., 0.0548, 0.0558, 0.0555],
         [0.8153, 0.7952, 0.7869,  ..., 0.8378, 0.8326, 0.8359]],
        [[0.0417, 0.0417, 0.0418,  ..., 0.0418, 0.0416, 0.0415],
         [0.0417, 0.0417, 0.0418,  ..., 0.0418, 0.0416, 0.0415],
         [0.0417, 0.0417, 0.0418,  ..., 0.0418, 0.0416, 0.0415],
         [0.8748, 0.8749, 0.8745,  ..., 0.8745, 0.8751, 0.8754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5921e-02, 3.4868e-02, 3.4289e-02,  ..., 3.4562e-02,
          3.5060e-02, 3.4105e-02],
         [3.5921e-02, 3.4868e-02, 3.4289e-02,  ..., 3.4562e-02,
          3.5060e-02, 3.4105e-02],
         [3.5921e-02, 3.4868e-02, 3.4289e-02,  ..., 3.4562e-02,
          3.5060e-02, 3.4105e-02],
         [8.9224e-01, 8.9540e-01, 8.9713e-01,  ..., 8.9631e-01,
          8.9482e-01, 8.9768e-01]],
        [[3.5132e-02, 3.5062e-02, 3.4498e-02,  ..., 7.3662e-06,
          3.4971e-02, 3.5878e-02],
         [3.5132e-02, 3.5062e-02, 3.4498e-02,  ..., 7.3662e-06,
          3.4971e-02, 3.5878e-02],
         [3.5132e-02, 3.5062e-02, 3.4498e-02,  ..., 9.9998e-01,
          3.4971e-02, 3.5878e-02],
         [8.9460e-01, 8.9481e-01, 8.9651e-01,  ..., 7.3662e-06,
          8.9509e-01, 8.9237e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:45,218 [Process: 0] Synchronize training processes
2024-08-16 15:51:45,219 [Process: 0] Evaluating...
2024-08-16 15:51:45,221 [Process: 0] EPOCH 120:
2024-08-16 15:51:45,223 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0435, 0.0433, 0.0433,  ..., 0.0434, 0.0435, 0.0430],
         [0.0435, 0.0433, 0.0433,  ..., 0.0434, 0.0435, 0.0430],
         [0.0435, 0.0433, 0.0433,  ..., 0.0434, 0.0435, 0.0430],
         [0.8696, 0.8701, 0.8702,  ..., 0.8698, 0.8696, 0.8709]],
        [[0.0435, 0.0435, 0.0433,  ..., 0.0435, 0.0432, 0.0432],
         [0.0435, 0.0435, 0.0433,  ..., 0.0435, 0.0432, 0.0432],
         [0.0435, 0.0435, 0.0433,  ..., 0.0435, 0.0432, 0.0432],
         [0.8695, 0.8694, 0.8701,  ..., 0.8696, 0.8704, 0.8704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5811e-02, 3.4165e-02, 3.5439e-02,  ..., 3.6450e-02,
          3.4710e-02, 3.3993e-02],
         [3.5811e-02, 3.4165e-02, 3.5439e-02,  ..., 3.6450e-02,
          3.4710e-02, 3.3993e-02],
         [3.5811e-02, 3.4165e-02, 3.5439e-02,  ..., 3.6450e-02,
          3.4710e-02, 3.3993e-02],
         [8.9257e-01, 8.9750e-01, 8.9368e-01,  ..., 8.9065e-01,
          8.9587e-01, 8.9802e-01]],
        [[3.4553e-02, 3.6152e-02, 3.5890e-02,  ..., 2.7858e-05,
          3.6095e-02, 3.4995e-02],
         [3.4553e-02, 3.6152e-02, 3.5890e-02,  ..., 2.7858e-05,
          3.6095e-02, 3.4995e-02],
         [3.4553e-02, 3.6152e-02, 3.5890e-02,  ..., 9.9992e-01,
          3.6095e-02, 3.4995e-02],
         [8.9634e-01, 8.9154e-01, 8.9233e-01,  ..., 2.7858e-05,
          8.9172e-01, 8.9501e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:47,142 [Process: 0] Synchronize training processes
2024-08-16 15:51:47,143 [Process: 0] Evaluating...
2024-08-16 15:51:47,145 [Process: 0] EPOCH 121:
2024-08-16 15:51:47,146 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0425, 0.0429, 0.0420,  ..., 0.0419, 0.0422, 0.0430],
         [0.0425, 0.0429, 0.0420,  ..., 0.0419, 0.0422, 0.0430],
         [0.0425, 0.0429, 0.0420,  ..., 0.0419, 0.0422, 0.0430],
         [0.8726, 0.8713, 0.8740,  ..., 0.8743, 0.8734, 0.8710]],
        [[0.0423, 0.0424, 0.0424,  ..., 0.0424, 0.0420, 0.0426],
         [0.0423, 0.0424, 0.0424,  ..., 0.0424, 0.0420, 0.0426],
         [0.0423, 0.0424, 0.0424,  ..., 0.0424, 0.0420, 0.0426],
         [0.8730, 0.8729, 0.8727,  ..., 0.8727, 0.8741, 0.8722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.5018e-02, 3.4032e-02, 3.4675e-02,  ..., 3.5876e-02,
          3.5261e-02, 3.4812e-02],
         [3.5018e-02, 3.4032e-02, 3.4675e-02,  ..., 3.5876e-02,
          3.5261e-02, 3.4812e-02],
         [3.5018e-02, 3.4032e-02, 3.4675e-02,  ..., 3.5876e-02,
          3.5261e-02, 3.4812e-02],
         [8.9495e-01, 8.9791e-01, 8.9597e-01,  ..., 8.9237e-01,
          8.9422e-01, 8.9557e-01]],
        [[3.4734e-02, 3.4888e-02, 3.5251e-02,  ..., 3.7407e-04,
          3.2990e-02, 3.5082e-02],
         [3.4734e-02, 3.4888e-02, 3.5251e-02,  ..., 3.7407e-04,
          3.2990e-02, 3.5082e-02],
         [3.4734e-02, 3.4888e-02, 3.5251e-02,  ..., 9.9888e-01,
          3.2990e-02, 3.5082e-02],
         [8.9580e-01, 8.9534e-01, 8.9425e-01,  ..., 3.7407e-04,
          9.0103e-01, 8.9475e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:49,071 [Process: 0] Synchronize training processes
2024-08-16 15:51:49,072 [Process: 0] Evaluating...
2024-08-16 15:51:49,080 [Process: 0] EPOCH 122:
2024-08-16 15:51:49,081 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0401, 0.0416, 0.0414,  ..., 0.0419, 0.0415, 0.0424],
         [0.0401, 0.0416, 0.0414,  ..., 0.0419, 0.0415, 0.0424],
         [0.0401, 0.0416, 0.0414,  ..., 0.0419, 0.0415, 0.0424],
         [0.8798, 0.8752, 0.8759,  ..., 0.8743, 0.8756, 0.8727]],
        [[0.0416, 0.0407, 0.0416,  ..., 0.0414, 0.0409, 0.0418],
         [0.0416, 0.0407, 0.0416,  ..., 0.0414, 0.0409, 0.0418],
         [0.0416, 0.0407, 0.0416,  ..., 0.0414, 0.0409, 0.0418],
         [0.8751, 0.8778, 0.8753,  ..., 0.8757, 0.8774, 0.8745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.6190e-02, 3.5000e-02, 3.3777e-02,  ..., 3.4377e-02,
          3.4701e-02, 3.5658e-02],
         [3.6190e-02, 3.5000e-02, 3.3777e-02,  ..., 3.4377e-02,
          3.4701e-02, 3.5658e-02],
         [3.6190e-02, 3.5000e-02, 3.3777e-02,  ..., 3.4377e-02,
          3.4701e-02, 3.5658e-02],
         [8.9143e-01, 8.9500e-01, 8.9867e-01,  ..., 8.9687e-01,
          8.9590e-01, 8.9303e-01]],
        [[3.5008e-02, 3.4886e-02, 3.5515e-02,  ..., 9.7026e-04,
          3.4742e-02, 3.3690e-02],
         [3.5008e-02, 3.4886e-02, 3.5515e-02,  ..., 9.7026e-04,
          3.4742e-02, 3.3690e-02],
         [3.5008e-02, 3.4886e-02, 3.5515e-02,  ..., 9.9709e-01,
          3.4742e-02, 3.3690e-02],
         [8.9498e-01, 8.9534e-01, 8.9346e-01,  ..., 9.7026e-04,
          8.9578e-01, 8.9893e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:51,050 [Process: 0] Synchronize training processes
2024-08-16 15:51:51,051 [Process: 0] Evaluating...
2024-08-16 15:51:51,053 [Process: 0] EPOCH 123:
2024-08-16 15:51:51,055 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0414, 0.0411, 0.0413,  ..., 0.0408, 0.0404, 0.0412],
         [0.0414, 0.0411, 0.0413,  ..., 0.0408, 0.0404, 0.0412],
         [0.0414, 0.0411, 0.0413,  ..., 0.0408, 0.0404, 0.0412],
         [0.8759, 0.8766, 0.8760,  ..., 0.8775, 0.8787, 0.8765]],
        [[0.0417, 0.0406, 0.0417,  ..., 0.0404, 0.0421, 0.0417],
         [0.0417, 0.0406, 0.0417,  ..., 0.0404, 0.0421, 0.0417],
         [0.0417, 0.0406, 0.0417,  ..., 0.0404, 0.0421, 0.0417],
         [0.8749, 0.8781, 0.8748,  ..., 0.8788, 0.8737, 0.8748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.4206e-02, 3.4502e-02, 3.2809e-02,  ..., 3.4087e-02,
          3.4072e-02, 3.3060e-02],
         [3.4206e-02, 3.4502e-02, 3.2809e-02,  ..., 3.4087e-02,
          3.4072e-02, 3.3060e-02],
         [3.4206e-02, 3.4502e-02, 3.2809e-02,  ..., 3.4087e-02,
          3.4072e-02, 3.3060e-02],
         [8.9738e-01, 8.9649e-01, 9.0157e-01,  ..., 8.9774e-01,
          8.9779e-01, 9.0082e-01]],
        [[3.3521e-02, 3.4151e-02, 3.4335e-02,  ..., 1.4679e-04,
          3.3267e-02, 3.3551e-02],
         [3.3521e-02, 3.4151e-02, 3.4335e-02,  ..., 1.4679e-04,
          3.3267e-02, 3.3551e-02],
         [3.3521e-02, 3.4151e-02, 3.4335e-02,  ..., 9.9956e-01,
          3.3267e-02, 3.3551e-02],
         [8.9944e-01, 8.9755e-01, 8.9700e-01,  ..., 1.4679e-04,
          9.0020e-01, 8.9935e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:52,976 [Process: 0] Synchronize training processes
2024-08-16 15:51:52,977 [Process: 0] Evaluating...
2024-08-16 15:51:52,979 [Process: 0] EPOCH 124:
2024-08-16 15:51:52,980 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0419, 0.0414, 0.0403,  ..., 0.0403, 0.0414, 0.0422],
         [0.0419, 0.0414, 0.0403,  ..., 0.0403, 0.0414, 0.0422],
         [0.0419, 0.0414, 0.0403,  ..., 0.0403, 0.0414, 0.0422],
         [0.8743, 0.8757, 0.8791,  ..., 0.8792, 0.8759, 0.8733]],
        [[0.0404, 0.0421, 0.0399,  ..., 0.0412, 0.0404, 0.0403],
         [0.0404, 0.0421, 0.0399,  ..., 0.0412, 0.0404, 0.0403],
         [0.0404, 0.0421, 0.0399,  ..., 0.0412, 0.0404, 0.0403],
         [0.8789, 0.8736, 0.8802,  ..., 0.8763, 0.8789, 0.8790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0327, 0.0332, 0.0336,  ..., 0.0331, 0.0333, 0.0319],
         [0.0327, 0.0332, 0.0336,  ..., 0.0331, 0.0333, 0.0319],
         [0.0327, 0.0332, 0.0336,  ..., 0.0331, 0.0333, 0.0319],
         [0.9020, 0.9003, 0.8991,  ..., 0.9006, 0.9002, 0.9043]],
        [[0.0346, 0.0338, 0.0337,  ..., 0.0053, 0.0332, 0.0350],
         [0.0346, 0.0338, 0.0337,  ..., 0.0053, 0.0332, 0.0350],
         [0.0346, 0.0338, 0.0337,  ..., 0.9842, 0.0332, 0.0350],
         [0.8963, 0.8985, 0.8990,  ..., 0.0053, 0.9004, 0.8949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:54,910 [Process: 0] Synchronize training processes
2024-08-16 15:51:54,911 [Process: 0] Evaluating...
2024-08-16 15:51:54,913 [Process: 0] EPOCH 125:
2024-08-16 15:51:54,915 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0402, 0.0384, 0.0388,  ..., 0.0403, 0.0396, 0.0391],
         [0.0402, 0.0384, 0.0388,  ..., 0.0403, 0.0396, 0.0391],
         [0.0402, 0.0384, 0.0388,  ..., 0.0403, 0.0396, 0.0391],
         [0.8794, 0.8849, 0.8835,  ..., 0.8790, 0.8811, 0.8828]],
        [[0.0384, 0.0392, 0.0398,  ..., 0.0403, 0.0393, 0.0398],
         [0.0384, 0.0392, 0.0398,  ..., 0.0403, 0.0393, 0.0398],
         [0.0384, 0.0392, 0.0398,  ..., 0.0403, 0.0393, 0.0398],
         [0.8849, 0.8825, 0.8807,  ..., 0.8790, 0.8822, 0.8805]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1590e-02, 3.3773e-02, 3.2581e-02,  ..., 3.3381e-02,
          3.3818e-02, 3.3188e-02],
         [3.1590e-02, 3.3773e-02, 3.2581e-02,  ..., 3.3381e-02,
          3.3818e-02, 3.3188e-02],
         [3.1590e-02, 3.3773e-02, 3.2581e-02,  ..., 3.3381e-02,
          3.3818e-02, 3.3188e-02],
         [9.0523e-01, 8.9868e-01, 9.0226e-01,  ..., 8.9986e-01,
          8.9855e-01, 9.0044e-01]],
        [[3.2995e-02, 3.2904e-02, 3.2312e-02,  ..., 5.0418e-04,
          3.3597e-02, 3.2346e-02],
         [3.2995e-02, 3.2904e-02, 3.2312e-02,  ..., 5.0418e-04,
          3.3597e-02, 3.2346e-02],
         [3.2995e-02, 3.2904e-02, 3.2312e-02,  ..., 9.9849e-01,
          3.3597e-02, 3.2346e-02],
         [9.0102e-01, 9.0129e-01, 9.0306e-01,  ..., 5.0418e-04,
          8.9921e-01, 9.0296e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:56,824 [Process: 0] Synchronize training processes
2024-08-16 15:51:56,824 [Process: 0] Evaluating...
2024-08-16 15:51:56,826 [Process: 0] EPOCH 126:
2024-08-16 15:51:56,828 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0394, 0.0415, 0.0402,  ..., 0.0401, 0.0404, 0.0400],
         [0.0394, 0.0415, 0.0402,  ..., 0.0401, 0.0404, 0.0400],
         [0.0394, 0.0415, 0.0402,  ..., 0.0401, 0.0404, 0.0400],
         [0.8817, 0.8755, 0.8795,  ..., 0.8797, 0.8787, 0.8799]],
        [[0.0406, 0.0393, 0.0384,  ..., 0.0387, 0.0398, 0.0392],
         [0.0406, 0.0393, 0.0384,  ..., 0.0387, 0.0398, 0.0392],
         [0.0406, 0.0393, 0.0384,  ..., 0.0387, 0.0398, 0.0392],
         [0.8782, 0.8821, 0.8847,  ..., 0.8839, 0.8807, 0.8823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0334, 0.0332, 0.0331,  ..., 0.0311, 0.0313, 0.0314],
         [0.0334, 0.0332, 0.0331,  ..., 0.0311, 0.0313, 0.0314],
         [0.0334, 0.0332, 0.0331,  ..., 0.0311, 0.0313, 0.0314],
         [0.8998, 0.9005, 0.9006,  ..., 0.9067, 0.9062, 0.9059]],
        [[0.0326, 0.0336, 0.0328,  ..., 0.0114, 0.0331, 0.0347],
         [0.0326, 0.0336, 0.0328,  ..., 0.0034, 0.0331, 0.0347],
         [0.0326, 0.0336, 0.0328,  ..., 0.9819, 0.0331, 0.0347],
         [0.9022, 0.8993, 0.9015,  ..., 0.0034, 0.9007, 0.8958]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:51:58,757 [Process: 0] Synchronize training processes
2024-08-16 15:51:58,757 [Process: 0] Evaluating...
2024-08-16 15:51:58,759 [Process: 0] EPOCH 127:
2024-08-16 15:51:58,761 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:00,683 [Process: 0] Synchronize training processes
2024-08-16 15:52:00,684 [Process: 0] Evaluating...
2024-08-16 15:52:00,686 [Process: 0] EPOCH 128:
2024-08-16 15:52:00,687 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0391, 0.0393, 0.0409,  ..., 0.0396, 0.0386, 0.0399],
         [0.0391, 0.0393, 0.0409,  ..., 0.0396, 0.0386, 0.0399],
         [0.0391, 0.0393, 0.0409,  ..., 0.0396, 0.0386, 0.0399],
         [0.8827, 0.8821, 0.8773,  ..., 0.8813, 0.8842, 0.8804]],
        [[0.0373, 0.0397, 0.0389,  ..., 0.0398, 0.0380, 0.0395],
         [0.0373, 0.0397, 0.0389,  ..., 0.0398, 0.0380, 0.0395],
         [0.0373, 0.0397, 0.0389,  ..., 0.0398, 0.0380, 0.0395],
         [0.8880, 0.8809, 0.8832,  ..., 0.8807, 0.8861, 0.8816]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0327, 0.0314, 0.0326,  ..., 0.0314, 0.0322, 0.0330],
         [0.0327, 0.0314, 0.0326,  ..., 0.0314, 0.0322, 0.0330],
         [0.0327, 0.0314, 0.0326,  ..., 0.0314, 0.0322, 0.0330],
         [0.9018, 0.9058, 0.9022,  ..., 0.9059, 0.9033, 0.9011]],
        [[0.0329, 0.0325, 0.0316,  ..., 0.0016, 0.0333, 0.0333],
         [0.0329, 0.0325, 0.0316,  ..., 0.0016, 0.0333, 0.0333],
         [0.0329, 0.0325, 0.0316,  ..., 0.9951, 0.0333, 0.0333],
         [0.9013, 0.9025, 0.9051,  ..., 0.0016, 0.9000, 0.9000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:02,607 [Process: 0] Synchronize training processes
2024-08-16 15:52:02,608 [Process: 0] Evaluating...
2024-08-16 15:52:02,610 [Process: 0] EPOCH 129:
2024-08-16 15:52:02,611 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0392, 0.0389, 0.0392,  ..., 0.0380, 0.0391, 0.0388],
         [0.0392, 0.0389, 0.0392,  ..., 0.0380, 0.0391, 0.0388],
         [0.0392, 0.0389, 0.0392,  ..., 0.0380, 0.0391, 0.0388],
         [0.8825, 0.8834, 0.8824,  ..., 0.8859, 0.8828, 0.8837]],
        [[0.0402, 0.0378, 0.0374,  ..., 0.0382, 0.0383, 0.0392],
         [0.0402, 0.0378, 0.0374,  ..., 0.0382, 0.0383, 0.0392],
         [0.0402, 0.0378, 0.0374,  ..., 0.0382, 0.0383, 0.0392],
         [0.8795, 0.8866, 0.8879,  ..., 0.8854, 0.8851, 0.8823]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0319, 0.0304, 0.0304,  ..., 0.0322, 0.0321, 0.0308],
         [0.0319, 0.0304, 0.0304,  ..., 0.0322, 0.0321, 0.0308],
         [0.0319, 0.0304, 0.0304,  ..., 0.0322, 0.0321, 0.0308],
         [0.9043, 0.9087, 0.9088,  ..., 0.9035, 0.9038, 0.9076]],
        [[0.0302, 0.0336, 0.0314,  ..., 0.0014, 0.0308, 0.0323],
         [0.0302, 0.0336, 0.0314,  ..., 0.0014, 0.0308, 0.0323],
         [0.0302, 0.0336, 0.0314,  ..., 0.9959, 0.0308, 0.0323],
         [0.9093, 0.8992, 0.9058,  ..., 0.0014, 0.9075, 0.9032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:04,528 [Process: 0] Synchronize training processes
2024-08-16 15:52:04,528 [Process: 0] Evaluating...
2024-08-16 15:52:04,530 [Process: 0] EPOCH 130:
2024-08-16 15:52:04,532 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0383, 0.0381, 0.0390,  ..., 0.0377, 0.0382, 0.0392],
         [0.0383, 0.0381, 0.0390,  ..., 0.0377, 0.0382, 0.0392],
         [0.0383, 0.0381, 0.0390,  ..., 0.0377, 0.0382, 0.0392],
         [0.8852, 0.8856, 0.8829,  ..., 0.8870, 0.8854, 0.8823]],
        [[0.0380, 0.0396, 0.0373,  ..., 0.0392, 0.0368, 0.0364],
         [0.0380, 0.0396, 0.0373,  ..., 0.0392, 0.0368, 0.0364],
         [0.0380, 0.0396, 0.0373,  ..., 0.0392, 0.0368, 0.0364],
         [0.8859, 0.8813, 0.8881,  ..., 0.8823, 0.8895, 0.8909]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0310, 0.0308, 0.0314,  ..., 0.0301, 0.0300, 0.0310],
         [0.0310, 0.0308, 0.0314,  ..., 0.0301, 0.0300, 0.0310],
         [0.0310, 0.0308, 0.0314,  ..., 0.0301, 0.0300, 0.0310],
         [0.9071, 0.9076, 0.9058,  ..., 0.9097, 0.9099, 0.9070]],
        [[0.0331, 0.0312, 0.0296,  ..., 0.0017, 0.0322, 0.0315],
         [0.0331, 0.0312, 0.0296,  ..., 0.0017, 0.0322, 0.0315],
         [0.0331, 0.0312, 0.0296,  ..., 0.9948, 0.0322, 0.0315],
         [0.9007, 0.9063, 0.9111,  ..., 0.0017, 0.9034, 0.9056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:52:06,457 [Process: 0] Synchronize training processes
2024-08-16 15:52:06,458 [Process: 0] Evaluating...
2024-08-16 15:52:06,460 [Process: 0] EPOCH 131:
2024-08-16 15:52:06,462 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0369, 0.0371, 0.0381,  ..., 0.0386, 0.0373, 0.0393],
         [0.0369, 0.0371, 0.0381,  ..., 0.0386, 0.0373, 0.0393],
         [0.0369, 0.0371, 0.0381,  ..., 0.0386, 0.0373, 0.0393],
         [0.8893, 0.8886, 0.8856,  ..., 0.8841, 0.8880, 0.8821]],
        [[0.0367, 0.0372, 0.0386,  ..., 0.0378, 0.0379, 0.0376],
         [0.0367, 0.0372, 0.0386,  ..., 0.0378, 0.0379, 0.0376],
         [0.0367, 0.0372, 0.0386,  ..., 0.0378, 0.0379, 0.0376],
         [0.8898, 0.8884, 0.8843,  ..., 0.8865, 0.8864, 0.8872]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.1595e-02, 3.0197e-02, 3.1731e-02,  ..., 3.0025e-02,
          3.0697e-02, 3.1139e-02],
         [3.1595e-02, 3.0197e-02, 3.1731e-02,  ..., 3.0025e-02,
          3.0697e-02, 3.1139e-02],
         [3.1595e-02, 3.0197e-02, 3.1731e-02,  ..., 3.0025e-02,
          3.0697e-02, 3.1139e-02],
         [9.0521e-01, 9.0941e-01, 9.0481e-01,  ..., 9.0992e-01,
          9.0791e-01, 9.0658e-01]],
        [[3.0932e-02, 3.1749e-02, 3.0625e-02,  ..., 3.6262e-04,
          3.1650e-02, 3.0112e-02],
         [3.0932e-02, 3.1749e-02, 3.0625e-02,  ..., 3.6262e-04,
          3.1650e-02, 3.0112e-02],
         [3.0932e-02, 3.1749e-02, 3.0625e-02,  ..., 9.9891e-01,
          3.1650e-02, 3.0112e-02],
         [9.0720e-01, 9.0475e-01, 9.0812e-01,  ..., 3.6262e-04,
          9.0505e-01, 9.0966e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0374, 0.0374, 0.0380,  ..., 0.0375, 0.0380, 0.0370],
         [0.0374, 0.0374, 0.0380,  ..., 0.0375, 0.0380, 0.0370],
         [0.0374, 0.0374, 0.0380,  ..., 0.0375, 0.0380, 0.0370],
         [0.8879, 0.8878, 0.8860,  ..., 0.8876, 0.8860, 0.8889]],
        [[0.0359, 0.0374, 0.0361,  ..., 0.0347, 0.0371, 0.0374],
         [0.0359, 0.0374, 0.0361,  ..., 0.0347, 0.0371, 0.0374],
         [0.0359, 0.0374, 0.0361,  ..., 0.0347, 0.0371, 0.0374],
         [0.8922, 0.8879, 0.8917,  ..., 0.8959, 0.8888, 0.8879]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:08,383 [Process: 0] Synchronize training processes
2024-08-16 15:52:08,383 [Process: 0] Evaluating...
2024-08-16 15:52:08,392 [Process: 0] EPOCH 132:
2024-08-16 15:52:08,394 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0028e-02, 3.0990e-02, 3.0346e-02,  ..., 3.1173e-02,
          2.9982e-02, 2.8795e-02],
         [3.0028e-02, 3.0990e-02, 3.0346e-02,  ..., 3.1173e-02,
          2.9982e-02, 2.8795e-02],
         [3.0028e-02, 3.0990e-02, 3.0346e-02,  ..., 3.1173e-02,
          2.9982e-02, 2.8795e-02],
         [9.0992e-01, 9.0703e-01, 9.0896e-01,  ..., 9.0648e-01,
          9.1005e-01, 9.1361e-01]],
        [[3.0025e-02, 3.1726e-02, 3.1164e-02,  ..., 6.7557e-04,
          3.0971e-02, 3.2085e-02],
         [3.0025e-02, 3.1726e-02, 3.1164e-02,  ..., 6.7557e-04,
          3.0971e-02, 3.2085e-02],
         [3.0025e-02, 3.1726e-02, 3.1164e-02,  ..., 9.9797e-01,
          3.0971e-02, 3.2085e-02],
         [9.0993e-01, 9.0482e-01, 9.0651e-01,  ..., 6.7557e-04,
          9.0709e-01, 9.0374e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0373, 0.0377, 0.0370,  ..., 0.0385, 0.0377, 0.0380],
         [0.0373, 0.0377, 0.0370,  ..., 0.0385, 0.0377, 0.0380],
         [0.0373, 0.0377, 0.0370,  ..., 0.0385, 0.0377, 0.0380],
         [0.8882, 0.8868, 0.8890,  ..., 0.8846, 0.8868, 0.8860]],
        [[0.0356, 0.0364, 0.0370,  ..., 0.0359, 0.0367, 0.0362],
         [0.0356, 0.0364, 0.0370,  ..., 0.0359, 0.0367, 0.0362],
         [0.0356, 0.0364, 0.0370,  ..., 0.0359, 0.0367, 0.0362],
         [0.8933, 0.8909, 0.8890,  ..., 0.8922, 0.8900, 0.8915]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:10,320 [Process: 0] Synchronize training processes
2024-08-16 15:52:10,321 [Process: 0] Evaluating...
2024-08-16 15:52:10,323 [Process: 0] EPOCH 133:
2024-08-16 15:52:10,325 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[3.0739e-02, 3.0312e-02, 3.1240e-02,  ..., 3.0656e-02,
          3.0482e-02, 3.0320e-02],
         [3.0739e-02, 3.0312e-02, 3.1240e-02,  ..., 3.0656e-02,
          3.0482e-02, 3.0320e-02],
         [3.0739e-02, 3.0312e-02, 3.1240e-02,  ..., 3.0656e-02,
          3.0482e-02, 3.0320e-02],
         [9.0778e-01, 9.0906e-01, 9.0628e-01,  ..., 9.0803e-01,
          9.0855e-01, 9.0904e-01]],
        [[2.9646e-02, 3.0179e-02, 3.1254e-02,  ..., 7.3197e-05,
          3.1892e-02, 3.0578e-02],
         [2.9646e-02, 3.0179e-02, 3.1254e-02,  ..., 7.3197e-05,
          3.1892e-02, 3.0578e-02],
         [2.9646e-02, 3.0179e-02, 3.1254e-02,  ..., 9.9978e-01,
          3.1892e-02, 3.0578e-02],
         [9.1106e-01, 9.0946e-01, 9.0624e-01,  ..., 7.3197e-05,
          9.0433e-01, 9.0827e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0373, 0.0379, 0.0380,  ..., 0.0361, 0.0378, 0.0370],
         [0.0373, 0.0379, 0.0380,  ..., 0.0361, 0.0378, 0.0370],
         [0.0373, 0.0379, 0.0380,  ..., 0.0361, 0.0378, 0.0370],
         [0.8881, 0.8863, 0.8859,  ..., 0.8918, 0.8866, 0.8889]],
        [[0.0348, 0.0342, 0.0354,  ..., 0.0351, 0.0370, 0.0357],
         [0.0348, 0.0342, 0.0354,  ..., 0.0351, 0.0370, 0.0357],
         [0.0348, 0.0342, 0.0354,  ..., 0.0351, 0.0370, 0.0357],
         [0.8956, 0.8975, 0.8938,  ..., 0.8948, 0.8889, 0.8928]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:12,247 [Process: 0] Synchronize training processes
2024-08-16 15:52:12,248 [Process: 0] Evaluating...
2024-08-16 15:52:12,250 [Process: 0] EPOCH 134:
2024-08-16 15:52:12,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.9206e-02, 2.8281e-02, 3.0745e-02,  ..., 3.0206e-02,
          3.0570e-02, 3.1922e-02],
         [2.9206e-02, 2.8281e-02, 3.0745e-02,  ..., 3.0206e-02,
          3.0570e-02, 3.1922e-02],
         [2.9206e-02, 2.8281e-02, 3.0745e-02,  ..., 3.0206e-02,
          3.0570e-02, 3.1922e-02],
         [9.1238e-01, 9.1516e-01, 9.0776e-01,  ..., 9.0938e-01,
          9.0829e-01, 9.0423e-01]],
        [[3.1330e-02, 2.9129e-02, 3.1207e-02,  ..., 1.1893e-04,
          3.1695e-02, 3.1341e-02],
         [3.1330e-02, 2.9129e-02, 3.1207e-02,  ..., 1.1893e-04,
          3.1695e-02, 3.1341e-02],
         [3.1330e-02, 2.9129e-02, 3.1207e-02,  ..., 9.9964e-01,
          3.1695e-02, 3.1341e-02],
         [9.0601e-01, 9.1261e-01, 9.0638e-01,  ..., 1.1893e-04,
          9.0492e-01, 9.0598e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0374, 0.0376, 0.0367,  ..., 0.0373, 0.0358, 0.0365],
         [0.0374, 0.0376, 0.0367,  ..., 0.0373, 0.0358, 0.0365],
         [0.0374, 0.0376, 0.0367,  ..., 0.0373, 0.0358, 0.0365],
         [0.8879, 0.8872, 0.8899,  ..., 0.8881, 0.8926, 0.8904]],
        [[0.0363, 0.0354, 0.0350,  ..., 0.0356, 0.0358, 0.0355],
         [0.0363, 0.0354, 0.0350,  ..., 0.0356, 0.0358, 0.0355],
         [0.0363, 0.0354, 0.0350,  ..., 0.0356, 0.0358, 0.0355],
         [0.8912, 0.8939, 0.8949,  ..., 0.8932, 0.8925, 0.8935]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:14,173 [Process: 0] Synchronize training processes
2024-08-16 15:52:14,173 [Process: 0] Evaluating...
2024-08-16 15:52:14,175 [Process: 0] EPOCH 135:
2024-08-16 15:52:14,177 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8946e-02, 3.0083e-02, 2.7665e-02,  ..., 2.8812e-02,
          2.9176e-02, 3.0508e-02],
         [2.8946e-02, 3.0083e-02, 2.7665e-02,  ..., 2.8812e-02,
          2.9176e-02, 3.0508e-02],
         [2.8946e-02, 3.0083e-02, 2.7665e-02,  ..., 2.8812e-02,
          2.9176e-02, 3.0508e-02],
         [9.1316e-01, 9.0975e-01, 9.1701e-01,  ..., 9.1356e-01,
          9.1247e-01, 9.0848e-01]],
        [[3.0392e-02, 2.9517e-02, 3.0037e-02,  ..., 4.8319e-04,
          2.8594e-02, 2.8939e-02],
         [3.0392e-02, 2.9517e-02, 3.0037e-02,  ..., 4.8319e-04,
          2.8594e-02, 2.8939e-02],
         [3.0392e-02, 2.9517e-02, 3.0037e-02,  ..., 9.9855e-01,
          2.8594e-02, 2.8939e-02],
         [9.0882e-01, 9.1145e-01, 9.0989e-01,  ..., 4.8319e-04,
          9.1422e-01, 9.1318e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0373, 0.0374, 0.0363,  ..., 0.0366, 0.0356, 0.0365],
         [0.0373, 0.0374, 0.0363,  ..., 0.0366, 0.0356, 0.0365],
         [0.0373, 0.0374, 0.0363,  ..., 0.0366, 0.0356, 0.0365],
         [0.8880, 0.8877, 0.8912,  ..., 0.8902, 0.8932, 0.8905]],
        [[0.0367, 0.0361, 0.0350,  ..., 0.0337, 0.0342, 0.0364],
         [0.0367, 0.0361, 0.0350,  ..., 0.0337, 0.0342, 0.0364],
         [0.0367, 0.0361, 0.0350,  ..., 0.0337, 0.0342, 0.0364],
         [0.8900, 0.8918, 0.8949,  ..., 0.8989, 0.8975, 0.8908]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:16,091 [Process: 0] Synchronize training processes
2024-08-16 15:52:16,091 [Process: 0] Evaluating...
2024-08-16 15:52:16,093 [Process: 0] EPOCH 136:
2024-08-16 15:52:16,095 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0285, 0.0286, 0.0283,  ..., 0.0313, 0.0301, 0.0282],
         [0.0285, 0.0286, 0.0283,  ..., 0.0313, 0.0301, 0.0282],
         [0.0285, 0.0286, 0.0283,  ..., 0.0313, 0.0301, 0.0282],
         [0.9145, 0.9143, 0.9151,  ..., 0.9060, 0.9097, 0.9154]],
        [[0.0288, 0.0295, 0.0298,  ..., 0.0014, 0.0294, 0.0287],
         [0.0288, 0.0295, 0.0298,  ..., 0.0014, 0.0294, 0.0287],
         [0.0288, 0.0295, 0.0298,  ..., 0.9959, 0.0294, 0.0287],
         [0.9135, 0.9115, 0.9105,  ..., 0.0014, 0.9117, 0.9138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0361, 0.0365, 0.0363,  ..., 0.0365, 0.0363, 0.0365],
         [0.0361, 0.0365, 0.0363,  ..., 0.0365, 0.0363, 0.0365],
         [0.0361, 0.0365, 0.0363,  ..., 0.0365, 0.0363, 0.0365],
         [0.8916, 0.8906, 0.8911,  ..., 0.8906, 0.8910, 0.8906]],
        [[0.0342, 0.0350, 0.0362,  ..., 0.0342, 0.0347, 0.0332],
         [0.0342, 0.0350, 0.0362,  ..., 0.0342, 0.0347, 0.0332],
         [0.0342, 0.0350, 0.0362,  ..., 0.0342, 0.0347, 0.0332],
         [0.8973, 0.8951, 0.8915,  ..., 0.8974, 0.8960, 0.9004]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:18,016 [Process: 0] Synchronize training processes
2024-08-16 15:52:18,017 [Process: 0] Evaluating...
2024-08-16 15:52:18,019 [Process: 0] EPOCH 137:
2024-08-16 15:52:18,021 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.8864e-02, 2.6540e-02, 2.7084e-02,  ..., 2.7525e-02,
          2.6402e-02, 2.8093e-02],
         [2.8864e-02, 2.6540e-02, 2.7084e-02,  ..., 2.7525e-02,
          2.6402e-02, 2.8093e-02],
         [2.8864e-02, 2.6540e-02, 2.7084e-02,  ..., 2.7525e-02,
          2.6402e-02, 2.8093e-02],
         [9.1341e-01, 9.2038e-01, 9.1875e-01,  ..., 9.1743e-01,
          9.2080e-01, 9.1572e-01]],
        [[2.7235e-02, 2.8711e-02, 2.8730e-02,  ..., 2.7291e-04,
          2.6503e-02, 2.9387e-02],
         [2.7235e-02, 2.8711e-02, 2.8730e-02,  ..., 2.7291e-04,
          2.6503e-02, 2.9387e-02],
         [2.7235e-02, 2.8711e-02, 2.8730e-02,  ..., 9.9918e-01,
          2.6503e-02, 2.9387e-02],
         [9.1829e-01, 9.1387e-01, 9.1381e-01,  ..., 2.7291e-04,
          9.2049e-01, 9.1184e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0361, 0.0366, 0.0360,  ..., 0.0356, 0.0358, 0.0362],
         [0.0361, 0.0366, 0.0360,  ..., 0.0356, 0.0358, 0.0362],
         [0.0361, 0.0366, 0.0360,  ..., 0.0356, 0.0358, 0.0362],
         [0.8916, 0.8903, 0.8920,  ..., 0.8933, 0.8927, 0.8913]],
        [[0.0348, 0.0322, 0.0337,  ..., 0.0329, 0.0326, 0.0334],
         [0.0348, 0.0322, 0.0337,  ..., 0.0329, 0.0326, 0.0334],
         [0.0348, 0.0322, 0.0337,  ..., 0.0329, 0.0326, 0.0334],
         [0.8955, 0.9035, 0.8988,  ..., 0.9013, 0.9022, 0.8997]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:19,944 [Process: 0] Synchronize training processes
2024-08-16 15:52:19,944 [Process: 0] Evaluating...
2024-08-16 15:52:19,946 [Process: 0] EPOCH 138:
2024-08-16 15:52:19,948 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7383e-02, 2.7455e-02, 2.8691e-02,  ..., 2.8894e-02,
          2.6477e-02, 2.7145e-02],
         [2.7383e-02, 2.7455e-02, 2.8691e-02,  ..., 2.8894e-02,
          2.6477e-02, 2.7145e-02],
         [2.7383e-02, 2.7455e-02, 2.8691e-02,  ..., 2.8894e-02,
          2.6477e-02, 2.7145e-02],
         [9.1785e-01, 9.1763e-01, 9.1393e-01,  ..., 9.1332e-01,
          9.2057e-01, 9.1857e-01]],
        [[2.8582e-02, 2.9958e-02, 2.8301e-02,  ..., 1.8008e-04,
          2.8278e-02, 2.8472e-02],
         [2.8582e-02, 2.9958e-02, 2.8301e-02,  ..., 1.8008e-04,
          2.8278e-02, 2.8472e-02],
         [2.8582e-02, 2.9958e-02, 2.8301e-02,  ..., 9.9946e-01,
          2.8278e-02, 2.8472e-02],
         [9.1426e-01, 9.1013e-01, 9.1510e-01,  ..., 1.8008e-04,
          9.1517e-01, 9.1458e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0359, 0.0346, 0.0354,  ..., 0.0353, 0.0364, 0.0351],
         [0.0359, 0.0346, 0.0354,  ..., 0.0353, 0.0364, 0.0351],
         [0.0359, 0.0346, 0.0354,  ..., 0.0353, 0.0364, 0.0351],
         [0.8924, 0.8963, 0.8937,  ..., 0.8940, 0.8908, 0.8948]],
        [[0.0340, 0.0329, 0.0334,  ..., 0.0345, 0.0340, 0.0333],
         [0.0340, 0.0329, 0.0334,  ..., 0.0345, 0.0340, 0.0333],
         [0.0340, 0.0329, 0.0334,  ..., 0.0345, 0.0340, 0.0333],
         [0.8979, 0.9012, 0.8997,  ..., 0.8966, 0.8981, 0.9001]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:21,869 [Process: 0] Synchronize training processes
2024-08-16 15:52:21,870 [Process: 0] Evaluating...
2024-08-16 15:52:21,871 [Process: 0] EPOCH 139:
2024-08-16 15:52:21,873 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7182e-02, 2.9857e-02, 2.8789e-02,  ..., 2.8087e-02,
          2.9201e-02, 2.7188e-02],
         [2.7182e-02, 2.9857e-02, 2.8789e-02,  ..., 2.8087e-02,
          2.9201e-02, 2.7188e-02],
         [2.7182e-02, 2.9857e-02, 2.8789e-02,  ..., 2.8087e-02,
          2.9201e-02, 2.7188e-02],
         [9.1845e-01, 9.1043e-01, 9.1363e-01,  ..., 9.1574e-01,
          9.1240e-01, 9.1844e-01]],
        [[2.8067e-02, 2.8238e-02, 2.9021e-02,  ..., 8.4184e-04,
          2.8575e-02, 2.9267e-02],
         [2.8067e-02, 2.8238e-02, 2.9021e-02,  ..., 8.4184e-04,
          2.8575e-02, 2.9267e-02],
         [2.8067e-02, 2.8238e-02, 2.9021e-02,  ..., 9.9747e-01,
          2.8575e-02, 2.9267e-02],
         [9.1580e-01, 9.1529e-01, 9.1294e-01,  ..., 8.4184e-04,
          9.1427e-01, 9.1220e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0346, 0.0342, 0.0346,  ..., 0.0345, 0.0353, 0.0342],
         [0.0346, 0.0342, 0.0346,  ..., 0.0345, 0.0353, 0.0342],
         [0.0346, 0.0342, 0.0346,  ..., 0.0345, 0.0353, 0.0342],
         [0.8961, 0.8974, 0.8962,  ..., 0.8966, 0.8941, 0.8975]],
        [[0.0338, 0.0326, 0.0338,  ..., 0.0331, 0.0338, 0.0327],
         [0.0338, 0.0326, 0.0338,  ..., 0.0331, 0.0338, 0.0327],
         [0.0338, 0.0326, 0.0338,  ..., 0.0331, 0.0338, 0.0327],
         [0.8987, 0.9021, 0.8986,  ..., 0.9008, 0.8987, 0.9018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:23,787 [Process: 0] Synchronize training processes
2024-08-16 15:52:23,787 [Process: 0] Evaluating...
2024-08-16 15:52:23,789 [Process: 0] EPOCH 140:
2024-08-16 15:52:23,791 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6472e-02, 2.6312e-02, 2.6137e-02,  ..., 2.6854e-02,
          2.8500e-02, 2.7096e-02],
         [2.6472e-02, 2.6312e-02, 2.6137e-02,  ..., 2.6854e-02,
          2.8500e-02, 2.7096e-02],
         [2.6472e-02, 2.6312e-02, 2.6137e-02,  ..., 2.6854e-02,
          2.8500e-02, 2.7096e-02],
         [9.2059e-01, 9.2106e-01, 9.2159e-01,  ..., 9.1944e-01,
          9.1450e-01, 9.1871e-01]],
        [[2.7616e-02, 2.8155e-02, 2.8406e-02,  ..., 2.8097e-04,
          2.6975e-02, 2.7216e-02],
         [2.7616e-02, 2.8155e-02, 2.8406e-02,  ..., 2.8097e-04,
          2.6975e-02, 2.7216e-02],
         [2.7616e-02, 2.8155e-02, 2.8406e-02,  ..., 9.9916e-01,
          2.6975e-02, 2.7216e-02],
         [9.1715e-01, 9.1554e-01, 9.1478e-01,  ..., 2.8097e-04,
          9.1907e-01, 9.1835e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0348, 0.0348, 0.0346,  ..., 0.0347, 0.0346, 0.0345],
         [0.0348, 0.0348, 0.0346,  ..., 0.0347, 0.0346, 0.0345],
         [0.0348, 0.0348, 0.0346,  ..., 0.0347, 0.0346, 0.0345],
         [0.8956, 0.8956, 0.8963,  ..., 0.8959, 0.8961, 0.8964]],
        [[0.0328, 0.0330, 0.0323,  ..., 0.0314, 0.0324, 0.0335],
         [0.0328, 0.0330, 0.0323,  ..., 0.0314, 0.0324, 0.0335],
         [0.0328, 0.0330, 0.0323,  ..., 0.0314, 0.0324, 0.0335],
         [0.9017, 0.9009, 0.9032,  ..., 0.9057, 0.9027, 0.8995]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:25,716 [Process: 0] Synchronize training processes
2024-08-16 15:52:25,717 [Process: 0] Evaluating...
2024-08-16 15:52:25,719 [Process: 0] EPOCH 141:
2024-08-16 15:52:25,720 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6679e-02, 2.7605e-02, 2.6695e-02,  ..., 2.7509e-02,
          2.7564e-02, 2.6827e-02],
         [2.6679e-02, 2.7605e-02, 2.6695e-02,  ..., 2.7509e-02,
          2.7564e-02, 2.6827e-02],
         [2.6679e-02, 2.7605e-02, 2.6695e-02,  ..., 2.7509e-02,
          2.7564e-02, 2.6827e-02],
         [9.1996e-01, 9.1718e-01, 9.1991e-01,  ..., 9.1747e-01,
          9.1731e-01, 9.1952e-01]],
        [[2.7671e-02, 2.8213e-02, 2.7293e-02,  ..., 3.0181e-04,
          2.7123e-02, 2.7504e-02],
         [2.7671e-02, 2.8213e-02, 2.7293e-02,  ..., 3.0181e-04,
          2.7123e-02, 2.7504e-02],
         [2.7671e-02, 2.8213e-02, 2.7293e-02,  ..., 9.9909e-01,
          2.7123e-02, 2.7504e-02],
         [9.1699e-01, 9.1536e-01, 9.1812e-01,  ..., 3.0181e-04,
          9.1863e-01, 9.1749e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0356, 0.0346, 0.0351,  ..., 0.0349, 0.0350, 0.0347],
         [0.0356, 0.0346, 0.0351,  ..., 0.0349, 0.0350, 0.0347],
         [0.0356, 0.0346, 0.0351,  ..., 0.0349, 0.0350, 0.0347],
         [0.8932, 0.8962, 0.8947,  ..., 0.8954, 0.8950, 0.8960]],
        [[0.0333, 0.0331, 0.0333,  ..., 0.0361, 0.0335, 0.0331],
         [0.0333, 0.0331, 0.0333,  ..., 0.0361, 0.0335, 0.0331],
         [0.0333, 0.0331, 0.0333,  ..., 0.0361, 0.0335, 0.0331],
         [0.9001, 0.9008, 0.9002,  ..., 0.8918, 0.8995, 0.9008]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:27,674 [Process: 0] Synchronize training processes
2024-08-16 15:52:27,674 [Process: 0] Evaluating...
2024-08-16 15:52:27,683 [Process: 0] EPOCH 142:
2024-08-16 15:52:27,685 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6585e-02, 2.6642e-02, 2.7266e-02,  ..., 2.6803e-02,
          2.7167e-02, 2.7367e-02],
         [2.6585e-02, 2.6642e-02, 2.7266e-02,  ..., 2.6803e-02,
          2.7167e-02, 2.7367e-02],
         [2.6585e-02, 2.6642e-02, 2.7266e-02,  ..., 2.6803e-02,
          2.7167e-02, 2.7367e-02],
         [9.2025e-01, 9.2007e-01, 9.1820e-01,  ..., 9.1959e-01,
          9.1850e-01, 9.1790e-01]],
        [[2.6968e-02, 2.7336e-02, 2.7868e-02,  ..., 1.2028e-04,
          2.8263e-02, 2.7784e-02],
         [2.6968e-02, 2.7336e-02, 2.7868e-02,  ..., 1.2028e-04,
          2.8263e-02, 2.7784e-02],
         [2.6968e-02, 2.7336e-02, 2.7868e-02,  ..., 9.9964e-01,
          2.8263e-02, 2.7784e-02],
         [9.1910e-01, 9.1799e-01, 9.1640e-01,  ..., 1.2028e-04,
          9.1521e-01, 9.1665e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0335, 0.0340, 0.0337,  ..., 0.0341, 0.0338, 0.0339],
         [0.0335, 0.0340, 0.0337,  ..., 0.0341, 0.0338, 0.0339],
         [0.0335, 0.0340, 0.0337,  ..., 0.0341, 0.0338, 0.0339],
         [0.8994, 0.8979, 0.8989,  ..., 0.8978, 0.8985, 0.8982]],
        [[0.0325, 0.0322, 0.0314,  ..., 0.0322, 0.0320, 0.0330],
         [0.0325, 0.0322, 0.0314,  ..., 0.0322, 0.0320, 0.0330],
         [0.0325, 0.0322, 0.0314,  ..., 0.0322, 0.0320, 0.0330],
         [0.9024, 0.9033, 0.9058,  ..., 0.9034, 0.9041, 0.9010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:52:29,628 [Process: 0] Synchronize training processes
2024-08-16 15:52:29,629 [Process: 0] Evaluating...
2024-08-16 15:52:29,631 [Process: 0] EPOCH 143:
2024-08-16 15:52:29,632 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.7044e-02, 2.8059e-02, 2.8569e-02,  ..., 2.7849e-02,
          2.7549e-02, 2.7469e-02],
         [2.7044e-02, 2.8059e-02, 2.8569e-02,  ..., 2.7849e-02,
          2.7549e-02, 2.7469e-02],
         [2.7044e-02, 2.8059e-02, 2.8569e-02,  ..., 2.7849e-02,
          2.7549e-02, 2.7469e-02],
         [9.1887e-01, 9.1582e-01, 9.1429e-01,  ..., 9.1645e-01,
          9.1735e-01, 9.1759e-01]],
        [[2.7651e-02, 2.7318e-02, 2.6550e-02,  ..., 2.7370e-04,
          2.7534e-02, 2.6270e-02],
         [2.7651e-02, 2.7318e-02, 2.6550e-02,  ..., 2.7370e-04,
          2.7534e-02, 2.6270e-02],
         [2.7651e-02, 2.7318e-02, 2.6550e-02,  ..., 9.9918e-01,
          2.7534e-02, 2.6270e-02],
         [9.1705e-01, 9.1805e-01, 9.2035e-01,  ..., 2.7370e-04,
          9.1740e-01, 9.2119e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0325, 0.0324, 0.0331,  ..., 0.0326, 0.0331, 0.0331],
         [0.0325, 0.0324, 0.0331,  ..., 0.0326, 0.0331, 0.0331],
         [0.0325, 0.0324, 0.0331,  ..., 0.0326, 0.0331, 0.0331],
         [0.9024, 0.9028, 0.9007,  ..., 0.9021, 0.9008, 0.9007]],
        [[0.0307, 0.0308, 0.0318,  ..., 0.0325, 0.0322, 0.0328],
         [0.0307, 0.0308, 0.0318,  ..., 0.0325, 0.0322, 0.0328],
         [0.0307, 0.0308, 0.0318,  ..., 0.0325, 0.0322, 0.0328],
         [0.9078, 0.9075, 0.9047,  ..., 0.9024, 0.9034, 0.9016]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
2024-08-16 15:52:31,555 [Process: 0] Synchronize training processes
2024-08-16 15:52:31,555 [Process: 0] Evaluating...
2024-08-16 15:52:31,557 [Process: 0] EPOCH 144:
2024-08-16 15:52:31,559 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6333e-02, 2.6796e-02, 2.6430e-02,  ..., 2.6661e-02,
          2.5171e-02, 2.5738e-02],
         [2.6333e-02, 2.6796e-02, 2.6430e-02,  ..., 2.6661e-02,
          2.5171e-02, 2.5738e-02],
         [2.6333e-02, 2.6796e-02, 2.6430e-02,  ..., 2.6661e-02,
          2.5171e-02, 2.5738e-02],
         [9.2100e-01, 9.1961e-01, 9.2071e-01,  ..., 9.2002e-01,
          9.2449e-01, 9.2279e-01]],
        [[2.6131e-02, 2.5119e-02, 2.5913e-02,  ..., 3.9289e-04,
          2.6393e-02, 2.6000e-02],
         [2.6131e-02, 2.5119e-02, 2.5913e-02,  ..., 3.9289e-04,
          2.6393e-02, 2.6000e-02],
         [2.6131e-02, 2.5119e-02, 2.5913e-02,  ..., 9.9882e-01,
          2.6393e-02, 2.6000e-02],
         [9.2161e-01, 9.2464e-01, 9.2226e-01,  ..., 3.9289e-04,
          9.2082e-01, 9.2200e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0330, 0.0328, 0.0331,  ..., 0.0334, 0.0328, 0.0329],
         [0.0330, 0.0328, 0.0331,  ..., 0.0334, 0.0328, 0.0329],
         [0.0330, 0.0328, 0.0331,  ..., 0.0334, 0.0328, 0.0329],
         [0.9011, 0.9017, 0.9007,  ..., 0.8999, 0.9016, 0.9014]],
        [[0.0316, 0.0315, 0.0316,  ..., 0.0334, 0.0313, 0.0310],
         [0.0316, 0.0315, 0.0316,  ..., 0.0334, 0.0313, 0.0310],
         [0.0316, 0.0315, 0.0316,  ..., 0.0334, 0.0313, 0.0310],
         [0.9051, 0.9055, 0.9052,  ..., 0.8998, 0.9062, 0.9070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.6473e-02, 2.6026e-02, 2.6372e-02,  ..., 2.6118e-02,
          2.6347e-02, 2.6225e-02],
         [2.6473e-02, 2.6026e-02, 2.6372e-02,  ..., 2.6118e-02,
          2.6347e-02, 2.6225e-02],
         [2.6473e-02, 2.6026e-02, 2.6372e-02,  ..., 2.6118e-02,
          2.6347e-02, 2.6225e-02],
         [9.2058e-01, 9.2192e-01, 9.2088e-01,  ..., 9.2165e-01,
          9.2096e-01, 9.2133e-01]],
        [[2.6754e-02, 2.6392e-02, 2.6221e-02,  ..., 9.0375e-06,
          2.6560e-02, 2.6367e-02],
         [2.6754e-02, 2.6392e-02, 2.6221e-02,  ..., 9.0375e-06,
          2.6560e-02, 2.6367e-02],
         [2.6754e-02, 2.6392e-02, 2.6221e-02,  ..., 9.9997e-01,
          2.6560e-02, 2.6367e-02],
         [9.1974e-01, 9.2082e-01, 9.2134e-01,  ..., 9.0375e-06,
          9.2032e-01, 9.2090e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:33,488 [Process: 0] Synchronize training processes
2024-08-16 15:52:33,488 [Process: 0] Evaluating...
2024-08-16 15:52:33,490 [Process: 0] EPOCH 145:
2024-08-16 15:52:33,492 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0319, 0.0326, 0.0321,  ..., 0.0328, 0.0323, 0.0324],
         [0.0319, 0.0326, 0.0321,  ..., 0.0328, 0.0323, 0.0324],
         [0.0319, 0.0326, 0.0321,  ..., 0.0328, 0.0323, 0.0324],
         [0.9042, 0.9021, 0.9037,  ..., 0.9017, 0.9030, 0.9027]],
        [[0.0314, 0.0320, 0.0300,  ..., 0.0326, 0.0323, 0.0299],
         [0.0314, 0.0320, 0.0300,  ..., 0.0326, 0.0323, 0.0299],
         [0.0314, 0.0320, 0.0300,  ..., 0.0326, 0.0323, 0.0299],
         [0.9059, 0.9041, 0.9101,  ..., 0.9021, 0.9031, 0.9104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0257, 0.0255, 0.0266,  ..., 0.0262, 0.0259, 0.0266],
         [0.0257, 0.0255, 0.0266,  ..., 0.0262, 0.0259, 0.0266],
         [0.0257, 0.0255, 0.0266,  ..., 0.0262, 0.0259, 0.0266],
         [0.9229, 0.9236, 0.9203,  ..., 0.9213, 0.9222, 0.9203]],
        [[0.0269, 0.0260, 0.0269,  ..., 0.0011, 0.0273, 0.0264],
         [0.0269, 0.0260, 0.0269,  ..., 0.0011, 0.0273, 0.0264],
         [0.0269, 0.0260, 0.0269,  ..., 0.9966, 0.0273, 0.0264],
         [0.9193, 0.9221, 0.9194,  ..., 0.0011, 0.9182, 0.9208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:35,409 [Process: 0] Synchronize training processes
2024-08-16 15:52:35,409 [Process: 0] Evaluating...
2024-08-16 15:52:35,411 [Process: 0] EPOCH 146:
2024-08-16 15:52:35,413 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0329, 0.0319, 0.0324,  ..., 0.0326, 0.0323, 0.0324],
         [0.0329, 0.0319, 0.0324,  ..., 0.0326, 0.0323, 0.0324],
         [0.0329, 0.0319, 0.0324,  ..., 0.0326, 0.0323, 0.0324],
         [0.9014, 0.9042, 0.9029,  ..., 0.9022, 0.9030, 0.9027]],
        [[0.0312, 0.0313, 0.0307,  ..., 0.0305, 0.0311, 0.0311],
         [0.0312, 0.0313, 0.0307,  ..., 0.0305, 0.0311, 0.0311],
         [0.0312, 0.0313, 0.0307,  ..., 0.0305, 0.0311, 0.0311],
         [0.9063, 0.9062, 0.9079,  ..., 0.9084, 0.9068, 0.9068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5799e-02, 2.4925e-02, 2.5705e-02,  ..., 2.6159e-02,
          2.6003e-02, 2.5567e-02],
         [2.5799e-02, 2.4925e-02, 2.5705e-02,  ..., 2.6159e-02,
          2.6003e-02, 2.5567e-02],
         [2.5799e-02, 2.4925e-02, 2.5705e-02,  ..., 2.6159e-02,
          2.6003e-02, 2.5567e-02],
         [9.2260e-01, 9.2523e-01, 9.2288e-01,  ..., 9.2152e-01,
          9.2199e-01, 9.2330e-01]],
        [[2.6673e-02, 2.5649e-02, 2.6291e-02,  ..., 4.1530e-05,
          2.5696e-02, 2.5887e-02],
         [2.6673e-02, 2.5649e-02, 2.6291e-02,  ..., 4.1530e-05,
          2.5696e-02, 2.5887e-02],
         [2.6673e-02, 2.5649e-02, 2.6291e-02,  ..., 9.9988e-01,
          2.5696e-02, 2.5887e-02],
         [9.1998e-01, 9.2305e-01, 9.2113e-01,  ..., 4.1530e-05,
          9.2291e-01, 9.2234e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:37,328 [Process: 0] Synchronize training processes
2024-08-16 15:52:37,328 [Process: 0] Evaluating...
2024-08-16 15:52:37,330 [Process: 0] EPOCH 147:
2024-08-16 15:52:37,332 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0317, 0.0314, 0.0318,  ..., 0.0313, 0.0321, 0.0311],
         [0.0317, 0.0314, 0.0318,  ..., 0.0313, 0.0321, 0.0311],
         [0.0317, 0.0314, 0.0318,  ..., 0.0313, 0.0321, 0.0311],
         [0.9050, 0.9059, 0.9047,  ..., 0.9061, 0.9037, 0.9066]],
        [[0.0295, 0.0298, 0.0302,  ..., 0.0308, 0.0297, 0.0305],
         [0.0295, 0.0298, 0.0302,  ..., 0.0308, 0.0297, 0.0305],
         [0.0295, 0.0298, 0.0302,  ..., 0.0308, 0.0297, 0.0305],
         [0.9116, 0.9107, 0.9095,  ..., 0.9076, 0.9109, 0.9086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0259, 0.0247, 0.0246,  ..., 0.0249, 0.0248, 0.0251],
         [0.0259, 0.0247, 0.0246,  ..., 0.0249, 0.0248, 0.0251],
         [0.0259, 0.0247, 0.0246,  ..., 0.0249, 0.0248, 0.0251],
         [0.9224, 0.9259, 0.9262,  ..., 0.9253, 0.9256, 0.9247]],
        [[0.0257, 0.0250, 0.0254,  ..., 0.0011, 0.0257, 0.0263],
         [0.0257, 0.0250, 0.0254,  ..., 0.0011, 0.0257, 0.0263],
         [0.0257, 0.0250, 0.0254,  ..., 0.9967, 0.0257, 0.0263],
         [0.9230, 0.9250, 0.9238,  ..., 0.0011, 0.9228, 0.9210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:39,263 [Process: 0] Synchronize training processes
2024-08-16 15:52:39,263 [Process: 0] Evaluating...
2024-08-16 15:52:39,265 [Process: 0] EPOCH 148:
2024-08-16 15:52:39,267 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0314, 0.0316, 0.0319,  ..., 0.0312, 0.0313, 0.0316],
         [0.0314, 0.0316, 0.0319,  ..., 0.0312, 0.0313, 0.0316],
         [0.0314, 0.0316, 0.0319,  ..., 0.0312, 0.0313, 0.0316],
         [0.9058, 0.9053, 0.9042,  ..., 0.9065, 0.9061, 0.9053]],
        [[0.0308, 0.0301, 0.0305,  ..., 0.0295, 0.0295, 0.0306],
         [0.0308, 0.0301, 0.0305,  ..., 0.0295, 0.0295, 0.0306],
         [0.0308, 0.0301, 0.0305,  ..., 0.0295, 0.0295, 0.0306],
         [0.9075, 0.9096, 0.9085,  ..., 0.9114, 0.9114, 0.9082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4788e-02, 2.5694e-02, 2.5561e-02,  ..., 2.5382e-02,
          2.6282e-02, 2.5595e-02],
         [2.4788e-02, 2.5694e-02, 2.5561e-02,  ..., 2.5382e-02,
          2.6282e-02, 2.5595e-02],
         [2.4788e-02, 2.5694e-02, 2.5561e-02,  ..., 2.5382e-02,
          2.6282e-02, 2.5595e-02],
         [9.2564e-01, 9.2292e-01, 9.2332e-01,  ..., 9.2386e-01,
          9.2115e-01, 9.2321e-01]],
        [[2.4989e-02, 2.5091e-02, 2.5056e-02,  ..., 2.2600e-04,
          2.5210e-02, 2.5014e-02],
         [2.4989e-02, 2.5091e-02, 2.5056e-02,  ..., 2.2600e-04,
          2.5210e-02, 2.5014e-02],
         [2.4989e-02, 2.5091e-02, 2.5056e-02,  ..., 9.9932e-01,
          2.5210e-02, 2.5014e-02],
         [9.2503e-01, 9.2473e-01, 9.2483e-01,  ..., 2.2600e-04,
          9.2437e-01, 9.2496e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:41,191 [Process: 0] Synchronize training processes
2024-08-16 15:52:41,191 [Process: 0] Evaluating...
2024-08-16 15:52:41,193 [Process: 0] EPOCH 149:
2024-08-16 15:52:41,195 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0313, 0.0307, 0.0310,  ..., 0.0310, 0.0311, 0.0309],
         [0.0313, 0.0307, 0.0310,  ..., 0.0310, 0.0311, 0.0309],
         [0.0313, 0.0307, 0.0310,  ..., 0.0310, 0.0311, 0.0309],
         [0.9061, 0.9078, 0.9069,  ..., 0.9070, 0.9068, 0.9072]],
        [[0.0307, 0.0307, 0.0303,  ..., 0.0305, 0.0302, 0.0300],
         [0.0307, 0.0307, 0.0303,  ..., 0.0305, 0.0302, 0.0300],
         [0.0307, 0.0307, 0.0303,  ..., 0.0305, 0.0302, 0.0300],
         [0.9078, 0.9080, 0.9090,  ..., 0.9086, 0.9095, 0.9101]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5070e-02, 2.5393e-02, 2.4773e-02,  ..., 2.5182e-02,
          2.3920e-02, 2.5616e-02],
         [2.5070e-02, 2.5393e-02, 2.4773e-02,  ..., 2.5182e-02,
          2.3920e-02, 2.5616e-02],
         [2.5070e-02, 2.5393e-02, 2.4773e-02,  ..., 2.5182e-02,
          2.3920e-02, 2.5616e-02],
         [9.2479e-01, 9.2382e-01, 9.2568e-01,  ..., 9.2445e-01,
          9.2824e-01, 9.2315e-01]],
        [[2.4698e-02, 2.5022e-02, 2.4520e-02,  ..., 9.6043e-04,
          2.5129e-02, 2.5032e-02],
         [2.4698e-02, 2.5022e-02, 2.4520e-02,  ..., 9.6043e-04,
          2.5129e-02, 2.5032e-02],
         [2.4698e-02, 2.5022e-02, 2.4520e-02,  ..., 9.9712e-01,
          2.5129e-02, 2.5032e-02],
         [9.2591e-01, 9.2493e-01, 9.2644e-01,  ..., 9.6043e-04,
          9.2461e-01, 9.2490e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:43,114 [Process: 0] Synchronize training processes
2024-08-16 15:52:43,115 [Process: 0] Evaluating...
2024-08-16 15:52:43,117 [Process: 0] EPOCH 150:
2024-08-16 15:52:43,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0309, 0.0305, 0.0305,  ..., 0.0308, 0.0306, 0.0308],
         [0.0309, 0.0305, 0.0305,  ..., 0.0308, 0.0306, 0.0308],
         [0.0309, 0.0305, 0.0305,  ..., 0.0308, 0.0306, 0.0308],
         [0.9074, 0.9086, 0.9086,  ..., 0.9076, 0.9082, 0.9077]],
        [[0.0304, 0.0292, 0.0294,  ..., 0.0305, 0.0303, 0.0298],
         [0.0304, 0.0292, 0.0294,  ..., 0.0305, 0.0303, 0.0298],
         [0.0304, 0.0292, 0.0294,  ..., 0.0305, 0.0303, 0.0298],
         [0.9087, 0.9123, 0.9118,  ..., 0.9085, 0.9091, 0.9106]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.5025e-02, 2.4092e-02, 2.4730e-02,  ..., 2.5251e-02,
          2.4551e-02, 2.5695e-02],
         [2.5025e-02, 2.4092e-02, 2.4730e-02,  ..., 2.5251e-02,
          2.4551e-02, 2.5695e-02],
         [2.5025e-02, 2.4092e-02, 2.4730e-02,  ..., 2.5251e-02,
          2.4551e-02, 2.5695e-02],
         [9.2492e-01, 9.2772e-01, 9.2581e-01,  ..., 9.2425e-01,
          9.2635e-01, 9.2291e-01]],
        [[2.4222e-02, 2.4513e-02, 2.4730e-02,  ..., 7.5840e-04,
          2.4281e-02, 2.3872e-02],
         [2.4222e-02, 2.4513e-02, 2.4730e-02,  ..., 7.5840e-04,
          2.4281e-02, 2.3872e-02],
         [2.4222e-02, 2.4513e-02, 2.4730e-02,  ..., 9.9772e-01,
          2.4281e-02, 2.3872e-02],
         [9.2733e-01, 9.2646e-01, 9.2581e-01,  ..., 7.5840e-04,
          9.2716e-01, 9.2838e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:45,053 [Process: 0] Synchronize training processes
2024-08-16 15:52:45,053 [Process: 0] Evaluating...
2024-08-16 15:52:45,055 [Process: 0] EPOCH 151:
2024-08-16 15:52:45,057 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0303, 0.0311, 0.0309,  ..., 0.0306, 0.0304, 0.0307],
         [0.0303, 0.0311, 0.0309,  ..., 0.0306, 0.0304, 0.0307],
         [0.0303, 0.0311, 0.0309,  ..., 0.0306, 0.0304, 0.0307],
         [0.9091, 0.9068, 0.9073,  ..., 0.9083, 0.9088, 0.9078]],
        [[0.0302, 0.0300, 0.0296,  ..., 0.0296, 0.0301, 0.0296],
         [0.0302, 0.0300, 0.0296,  ..., 0.0296, 0.0301, 0.0296],
         [0.0302, 0.0300, 0.0296,  ..., 0.0296, 0.0301, 0.0296],
         [0.9094, 0.9101, 0.9111,  ..., 0.9111, 0.9097, 0.9111]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4828e-02, 2.5115e-02, 2.4571e-02,  ..., 2.3463e-02,
          2.4168e-02, 2.4315e-02],
         [2.4828e-02, 2.5115e-02, 2.4571e-02,  ..., 2.3463e-02,
          2.4168e-02, 2.4315e-02],
         [2.4828e-02, 2.5115e-02, 2.4571e-02,  ..., 2.3463e-02,
          2.4168e-02, 2.4315e-02],
         [9.2552e-01, 9.2466e-01, 9.2629e-01,  ..., 9.2961e-01,
          9.2749e-01, 9.2706e-01]],
        [[2.4183e-02, 2.4656e-02, 2.4175e-02,  ..., 1.4548e-04,
          2.5571e-02, 2.4695e-02],
         [2.4183e-02, 2.4656e-02, 2.4175e-02,  ..., 1.4548e-04,
          2.5571e-02, 2.4695e-02],
         [2.4183e-02, 2.4656e-02, 2.4175e-02,  ..., 9.9956e-01,
          2.5571e-02, 2.4695e-02],
         [9.2745e-01, 9.2603e-01, 9.2748e-01,  ..., 1.4548e-04,
          9.2329e-01, 9.2592e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:46,971 [Process: 0] Synchronize training processes
2024-08-16 15:52:46,971 [Process: 0] Evaluating...
2024-08-16 15:52:46,980 [Process: 0] EPOCH 152:
2024-08-16 15:52:46,982 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0303, 0.0303, 0.0301,  ..., 0.0302, 0.0304, 0.0300],
         [0.0303, 0.0303, 0.0301,  ..., 0.0302, 0.0304, 0.0300],
         [0.0303, 0.0303, 0.0301,  ..., 0.0302, 0.0304, 0.0300],
         [0.9092, 0.9092, 0.9098,  ..., 0.9095, 0.9089, 0.9100]],
        [[0.0293, 0.0287, 0.0293,  ..., 0.0293, 0.0299, 0.0287],
         [0.0293, 0.0287, 0.0293,  ..., 0.0293, 0.0299, 0.0287],
         [0.0293, 0.0287, 0.0293,  ..., 0.0293, 0.0299, 0.0287],
         [0.9121, 0.9140, 0.9122,  ..., 0.9122, 0.9104, 0.9138]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4349e-02, 2.4711e-02, 2.3746e-02,  ..., 2.4382e-02,
          2.3992e-02, 2.4355e-02],
         [2.4349e-02, 2.4711e-02, 2.3746e-02,  ..., 2.4382e-02,
          2.3992e-02, 2.4355e-02],
         [2.4349e-02, 2.4711e-02, 2.3746e-02,  ..., 2.4382e-02,
          2.3992e-02, 2.4355e-02],
         [9.2695e-01, 9.2587e-01, 9.2876e-01,  ..., 9.2686e-01,
          9.2802e-01, 9.2694e-01]],
        [[2.3826e-02, 2.4396e-02, 2.4814e-02,  ..., 1.9761e-05,
          2.4324e-02, 2.4105e-02],
         [2.3826e-02, 2.4396e-02, 2.4814e-02,  ..., 1.9761e-05,
          2.4324e-02, 2.4105e-02],
         [2.3826e-02, 2.4396e-02, 2.4814e-02,  ..., 9.9994e-01,
          2.4324e-02, 2.4105e-02],
         [9.2852e-01, 9.2681e-01, 9.2556e-01,  ..., 1.9761e-05,
          9.2703e-01, 9.2768e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:48,901 [Process: 0] Synchronize training processes
2024-08-16 15:52:48,901 [Process: 0] Evaluating...
2024-08-16 15:52:48,903 [Process: 0] EPOCH 153:
2024-08-16 15:52:48,905 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0294, 0.0292, 0.0293,  ..., 0.0297, 0.0299, 0.0295],
         [0.0294, 0.0292, 0.0293,  ..., 0.0297, 0.0299, 0.0295],
         [0.0294, 0.0292, 0.0293,  ..., 0.0297, 0.0299, 0.0295],
         [0.9119, 0.9124, 0.9121,  ..., 0.9108, 0.9104, 0.9116]],
        [[0.0283, 0.0286, 0.0279,  ..., 0.0291, 0.0286, 0.0282],
         [0.0283, 0.0286, 0.0279,  ..., 0.0291, 0.0286, 0.0282],
         [0.0283, 0.0286, 0.0279,  ..., 0.0291, 0.0286, 0.0282],
         [0.9150, 0.9143, 0.9163,  ..., 0.9128, 0.9141, 0.9155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.4346e-02, 2.4755e-02, 2.5010e-02,  ..., 2.4059e-02,
          2.4165e-02, 2.4491e-02],
         [2.4346e-02, 2.4755e-02, 2.5010e-02,  ..., 2.4059e-02,
          2.4165e-02, 2.4491e-02],
         [2.4346e-02, 2.4755e-02, 2.5010e-02,  ..., 2.4059e-02,
          2.4165e-02, 2.4491e-02],
         [9.2696e-01, 9.2573e-01, 9.2497e-01,  ..., 9.2782e-01,
          9.2750e-01, 9.2653e-01]],
        [[2.3474e-02, 2.3860e-02, 2.4064e-02,  ..., 6.0620e-04,
          2.4003e-02, 2.3165e-02],
         [2.3474e-02, 2.3860e-02, 2.4064e-02,  ..., 6.0620e-04,
          2.4003e-02, 2.3165e-02],
         [2.3474e-02, 2.3860e-02, 2.4064e-02,  ..., 9.9818e-01,
          2.4003e-02, 2.3165e-02],
         [9.2958e-01, 9.2842e-01, 9.2781e-01,  ..., 6.0620e-04,
          9.2799e-01, 9.3051e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:50,880 [Process: 0] Synchronize training processes
2024-08-16 15:52:50,880 [Process: 0] Evaluating...
2024-08-16 15:52:50,882 [Process: 0] EPOCH 154:
2024-08-16 15:52:50,884 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0303, 0.0302, 0.0299,  ..., 0.0301, 0.0301, 0.0300],
         [0.0303, 0.0302, 0.0299,  ..., 0.0301, 0.0301, 0.0300],
         [0.0303, 0.0302, 0.0299,  ..., 0.0301, 0.0301, 0.0300],
         [0.9090, 0.9093, 0.9102,  ..., 0.9096, 0.9097, 0.9099]],
        [[0.0298, 0.0296, 0.0289,  ..., 0.0292, 0.0300, 0.0295],
         [0.0298, 0.0296, 0.0289,  ..., 0.0292, 0.0300, 0.0295],
         [0.0298, 0.0296, 0.0289,  ..., 0.0292, 0.0300, 0.0295],
         [0.9107, 0.9112, 0.9132,  ..., 0.9125, 0.9101, 0.9116]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.3152e-02, 2.3718e-02, 2.3858e-02,  ..., 2.4115e-02,
          2.4290e-02, 2.3262e-02],
         [2.3152e-02, 2.3718e-02, 2.3858e-02,  ..., 2.4115e-02,
          2.4290e-02, 2.3262e-02],
         [2.3152e-02, 2.3718e-02, 2.3858e-02,  ..., 2.4115e-02,
          2.4290e-02, 2.3262e-02],
         [9.3054e-01, 9.2885e-01, 9.2843e-01,  ..., 9.2766e-01,
          9.2713e-01, 9.3021e-01]],
        [[2.2530e-02, 2.3797e-02, 2.3585e-02,  ..., 4.1918e-04,
          2.3946e-02, 2.3593e-02],
         [2.2530e-02, 2.3797e-02, 2.3585e-02,  ..., 4.1918e-04,
          2.3946e-02, 2.3593e-02],
         [2.2530e-02, 2.3797e-02, 2.3585e-02,  ..., 9.9874e-01,
          2.3946e-02, 2.3593e-02],
         [9.3241e-01, 9.2861e-01, 9.2924e-01,  ..., 4.1918e-04,
          9.2816e-01, 9.2922e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:52,821 [Process: 0] Synchronize training processes
2024-08-16 15:52:52,821 [Process: 0] Evaluating...
2024-08-16 15:52:52,823 [Process: 0] EPOCH 155:
2024-08-16 15:52:52,825 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:52:54,755 [Process: 0] Synchronize training processes
2024-08-16 15:52:54,755 [Process: 0] Evaluating...
2024-08-16 15:52:54,757 [Process: 0] EPOCH 156:
2024-08-16 15:52:54,759 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0295, 0.0297, 0.0301,  ..., 0.0298, 0.0299, 0.0300],
         [0.0295, 0.0297, 0.0301,  ..., 0.0298, 0.0299, 0.0300],
         [0.0295, 0.0297, 0.0301,  ..., 0.0298, 0.0299, 0.0300],
         [0.9116, 0.9110, 0.9096,  ..., 0.9105, 0.9102, 0.9101]],
        [[0.0292, 0.0290, 0.0286,  ..., 0.0289, 0.0296, 0.0294],
         [0.0292, 0.0290, 0.0286,  ..., 0.0289, 0.0296, 0.0294],
         [0.0292, 0.0290, 0.0286,  ..., 0.0289, 0.0296, 0.0294],
         [0.9123, 0.9130, 0.9142,  ..., 0.9133, 0.9111, 0.9118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0226, 0.0238, 0.0230,  ..., 0.0232, 0.0240, 0.0239],
         [0.0226, 0.0238, 0.0230,  ..., 0.0232, 0.0240, 0.0239],
         [0.0226, 0.0238, 0.0230,  ..., 0.0232, 0.0240, 0.0239],
         [0.9321, 0.9285, 0.9309,  ..., 0.9305, 0.9279, 0.9283]],
        [[0.0234, 0.0237, 0.0238,  ..., 0.0103, 0.0243, 0.0242],
         [0.0234, 0.0237, 0.0238,  ..., 0.0103, 0.0243, 0.0242],
         [0.0234, 0.0237, 0.0238,  ..., 0.9692, 0.0243, 0.0242],
         [0.9297, 0.9288, 0.9286,  ..., 0.0103, 0.9272, 0.9275]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:52:56,679 [Process: 0] Synchronize training processes
2024-08-16 15:52:56,680 [Process: 0] Evaluating...
2024-08-16 15:52:56,681 [Process: 0] EPOCH 157:
2024-08-16 15:52:56,683 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0292, 0.0290, 0.0291,  ..., 0.0291, 0.0294, 0.0292],
         [0.0292, 0.0290, 0.0291,  ..., 0.0291, 0.0294, 0.0292],
         [0.0292, 0.0290, 0.0291,  ..., 0.0291, 0.0294, 0.0292],
         [0.9125, 0.9130, 0.9127,  ..., 0.9128, 0.9117, 0.9125]],
        [[0.0280, 0.0286, 0.0289,  ..., 0.0289, 0.0280, 0.0283],
         [0.0280, 0.0286, 0.0289,  ..., 0.0289, 0.0280, 0.0283],
         [0.0280, 0.0286, 0.0289,  ..., 0.0289, 0.0280, 0.0283],
         [0.9161, 0.9141, 0.9133,  ..., 0.9133, 0.9159, 0.9151]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.2912e-02, 2.3394e-02, 2.2812e-02,  ..., 2.2426e-02,
          2.3108e-02, 2.2258e-02],
         [2.2912e-02, 2.3394e-02, 2.2812e-02,  ..., 2.2426e-02,
          2.3108e-02, 2.2258e-02],
         [2.2912e-02, 2.3394e-02, 2.2812e-02,  ..., 2.2426e-02,
          2.3108e-02, 2.2258e-02],
         [9.3126e-01, 9.2982e-01, 9.3156e-01,  ..., 9.3272e-01,
          9.3068e-01, 9.3323e-01]],
        [[2.3171e-02, 2.2213e-02, 2.3105e-02,  ..., 3.4795e-04,
          2.3406e-02, 2.3383e-02],
         [2.3171e-02, 2.2213e-02, 2.3105e-02,  ..., 3.4795e-04,
          2.3406e-02, 2.3383e-02],
         [2.3171e-02, 2.2213e-02, 2.3105e-02,  ..., 9.9896e-01,
          2.3406e-02, 2.3383e-02],
         [9.3049e-01, 9.3336e-01, 9.3068e-01,  ..., 3.4795e-04,
          9.2978e-01, 9.2985e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0290, 0.0288, 0.0290,  ..., 0.0284, 0.0287, 0.0286],
         [0.0290, 0.0288, 0.0290,  ..., 0.0284, 0.0287, 0.0286],
         [0.0290, 0.0288, 0.0290,  ..., 0.0284, 0.0287, 0.0286],
         [0.9131, 0.9135, 0.9130,  ..., 0.9149, 0.9140, 0.9142]],
        [[0.0276, 0.0274, 0.0277,  ..., 0.0277, 0.0274, 0.0273],
         [0.0276, 0.0274, 0.0277,  ..., 0.0277, 0.0274, 0.0273],
         [0.0276, 0.0274, 0.0277,  ..., 0.0277, 0.0274, 0.0273],
         [0.9171, 0.9178, 0.9170,  ..., 0.9169, 0.9179, 0.9180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:52:58,607 [Process: 0] Synchronize training processes
2024-08-16 15:52:58,607 [Process: 0] Evaluating...
2024-08-16 15:52:58,609 [Process: 0] EPOCH 158:
2024-08-16 15:52:58,611 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0230, 0.0231, 0.0230,  ..., 0.0229, 0.0221, 0.0228],
         [0.0230, 0.0231, 0.0230,  ..., 0.0229, 0.0221, 0.0228],
         [0.0230, 0.0231, 0.0230,  ..., 0.0229, 0.0221, 0.0228],
         [0.9311, 0.9307, 0.9310,  ..., 0.9313, 0.9336, 0.9316]],
        [[0.0224, 0.0224, 0.0227,  ..., 0.0032, 0.0226, 0.0232],
         [0.0224, 0.0224, 0.0227,  ..., 0.0032, 0.0226, 0.0232],
         [0.0224, 0.0224, 0.0227,  ..., 0.9905, 0.0226, 0.0232],
         [0.9328, 0.9329, 0.9320,  ..., 0.0032, 0.9322, 0.9303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0284, 0.0284, 0.0288,  ..., 0.0284, 0.0285, 0.0286],
         [0.0284, 0.0284, 0.0288,  ..., 0.0284, 0.0285, 0.0286],
         [0.0284, 0.0284, 0.0288,  ..., 0.0284, 0.0285, 0.0286],
         [0.9147, 0.9147, 0.9137,  ..., 0.9149, 0.9146, 0.9142]],
        [[0.0272, 0.0274, 0.0272,  ..., 0.0267, 0.0280, 0.0271],
         [0.0272, 0.0274, 0.0272,  ..., 0.0267, 0.0280, 0.0271],
         [0.0272, 0.0274, 0.0272,  ..., 0.0267, 0.0280, 0.0271],
         [0.9183, 0.9177, 0.9184,  ..., 0.9198, 0.9160, 0.9187]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:00,573 [Process: 0] Synchronize training processes
2024-08-16 15:53:00,573 [Process: 0] Evaluating...
2024-08-16 15:53:00,575 [Process: 0] EPOCH 159:
2024-08-16 15:53:00,577 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0224, 0.0226, 0.0227,  ..., 0.0227, 0.0236, 0.0227],
         [0.0224, 0.0226, 0.0227,  ..., 0.0227, 0.0236, 0.0227],
         [0.0224, 0.0226, 0.0227,  ..., 0.0227, 0.0236, 0.0227],
         [0.9328, 0.9321, 0.9320,  ..., 0.9318, 0.9293, 0.9318]],
        [[0.0229, 0.0224, 0.0231,  ..., 0.0013, 0.0232, 0.0225],
         [0.0229, 0.0224, 0.0231,  ..., 0.0013, 0.0232, 0.0225],
         [0.0229, 0.0224, 0.0231,  ..., 0.9961, 0.0232, 0.0225],
         [0.9314, 0.9328, 0.9308,  ..., 0.0013, 0.9304, 0.9325]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0284, 0.0283, 0.0285,  ..., 0.0285, 0.0287, 0.0284],
         [0.0284, 0.0283, 0.0285,  ..., 0.0285, 0.0287, 0.0284],
         [0.0284, 0.0283, 0.0285,  ..., 0.0285, 0.0287, 0.0284],
         [0.9148, 0.9150, 0.9145,  ..., 0.9146, 0.9140, 0.9148]],
        [[0.0271, 0.0269, 0.0265,  ..., 0.0268, 0.0274, 0.0272],
         [0.0271, 0.0269, 0.0265,  ..., 0.0268, 0.0274, 0.0272],
         [0.0271, 0.0269, 0.0265,  ..., 0.0268, 0.0274, 0.0272],
         [0.9186, 0.9193, 0.9204,  ..., 0.9196, 0.9179, 0.9184]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:02,568 [Process: 0] Synchronize training processes
2024-08-16 15:53:02,569 [Process: 0] Evaluating...
2024-08-16 15:53:02,571 [Process: 0] EPOCH 160:
2024-08-16 15:53:02,572 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0225, 0.0224, 0.0220,  ..., 0.0230, 0.0224, 0.0226],
         [0.0225, 0.0224, 0.0220,  ..., 0.0230, 0.0224, 0.0226],
         [0.0225, 0.0224, 0.0220,  ..., 0.0230, 0.0224, 0.0226],
         [0.9325, 0.9327, 0.9340,  ..., 0.9310, 0.9329, 0.9322]],
        [[0.0226, 0.0215, 0.0219,  ..., 0.0022, 0.0223, 0.0224],
         [0.0226, 0.0215, 0.0219,  ..., 0.0022, 0.0223, 0.0224],
         [0.0226, 0.0215, 0.0219,  ..., 0.9934, 0.0223, 0.0224],
         [0.9323, 0.9356, 0.9344,  ..., 0.0022, 0.9330, 0.9328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 160:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0282, 0.0284, 0.0286,  ..., 0.0284, 0.0282, 0.0283],
         [0.0282, 0.0284, 0.0286,  ..., 0.0284, 0.0282, 0.0283],
         [0.0282, 0.0284, 0.0286,  ..., 0.0284, 0.0282, 0.0283],
         [0.9153, 0.9149, 0.9143,  ..., 0.9148, 0.9154, 0.9152]],
        [[0.0265, 0.0272, 0.0268,  ..., 0.0263, 0.0264, 0.0263],
         [0.0265, 0.0272, 0.0268,  ..., 0.0263, 0.0264, 0.0263],
         [0.0265, 0.0272, 0.0268,  ..., 0.0263, 0.0264, 0.0263],
         [0.9204, 0.9185, 0.9197,  ..., 0.9211, 0.9207, 0.9210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:04,595 [Process: 0] Synchronize training processes
2024-08-16 15:53:04,595 [Process: 0] Evaluating...
2024-08-16 15:53:04,597 [Process: 0] EPOCH 161:
2024-08-16 15:53:04,599 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0221, 0.0220, 0.0220,  ..., 0.0224, 0.0220, 0.0225],
         [0.0221, 0.0220, 0.0220,  ..., 0.0224, 0.0220, 0.0225],
         [0.0221, 0.0220, 0.0220,  ..., 0.0224, 0.0220, 0.0225],
         [0.9338, 0.9339, 0.9340,  ..., 0.9329, 0.9341, 0.9326]],
        [[0.0217, 0.0218, 0.0223,  ..., 0.0015, 0.0225, 0.0224],
         [0.0217, 0.0218, 0.0223,  ..., 0.0015, 0.0225, 0.0224],
         [0.0217, 0.0218, 0.0223,  ..., 0.9954, 0.0225, 0.0224],
         [0.9349, 0.9345, 0.9330,  ..., 0.0015, 0.9326, 0.9328]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 161:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0282, 0.0280, 0.0284,  ..., 0.0281, 0.0278, 0.0282],
         [0.0282, 0.0280, 0.0284,  ..., 0.0281, 0.0278, 0.0282],
         [0.0282, 0.0280, 0.0284,  ..., 0.0281, 0.0278, 0.0282],
         [0.9154, 0.9161, 0.9148,  ..., 0.9156, 0.9165, 0.9154]],
        [[0.0264, 0.0271, 0.0270,  ..., 0.0267, 0.0265, 0.0263],
         [0.0264, 0.0271, 0.0270,  ..., 0.0267, 0.0265, 0.0263],
         [0.0264, 0.0271, 0.0270,  ..., 0.0267, 0.0265, 0.0263],
         [0.9209, 0.9188, 0.9189,  ..., 0.9200, 0.9205, 0.9212]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:06,695 [Process: 0] Synchronize training processes
2024-08-16 15:53:06,695 [Process: 0] Evaluating...
2024-08-16 15:53:06,703 [Process: 0] EPOCH 162:
2024-08-16 15:53:06,705 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0224, 0.0212, 0.0223,  ..., 0.0207, 0.0207, 0.0214],
         [0.0224, 0.0212, 0.0223,  ..., 0.0207, 0.0207, 0.0214],
         [0.0224, 0.0212, 0.0223,  ..., 0.0207, 0.0207, 0.0214],
         [0.9329, 0.9363, 0.9332,  ..., 0.9379, 0.9379, 0.9357]],
        [[0.0216, 0.0219, 0.0219,  ..., 0.0022, 0.0222, 0.0213],
         [0.0216, 0.0219, 0.0219,  ..., 0.0022, 0.0222, 0.0213],
         [0.0216, 0.0219, 0.0219,  ..., 0.9935, 0.0222, 0.0213],
         [0.9353, 0.9344, 0.9342,  ..., 0.0022, 0.9335, 0.9362]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 162:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:53:08,796 [Process: 0] Synchronize training processes
2024-08-16 15:53:08,796 [Process: 0] Evaluating...
2024-08-16 15:53:08,798 [Process: 0] EPOCH 163:
2024-08-16 15:53:08,800 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0272, 0.0273, 0.0271,  ..., 0.0272, 0.0271, 0.0270],
         [0.0272, 0.0273, 0.0271,  ..., 0.0272, 0.0271, 0.0270],
         [0.0272, 0.0273, 0.0271,  ..., 0.0272, 0.0271, 0.0270],
         [0.9185, 0.9180, 0.9186,  ..., 0.9183, 0.9187, 0.9190]],
        [[0.0255, 0.0266, 0.0248,  ..., 0.0265, 0.0257, 0.0265],
         [0.0255, 0.0266, 0.0248,  ..., 0.0265, 0.0257, 0.0265],
         [0.0255, 0.0266, 0.0248,  ..., 0.0265, 0.0257, 0.0265],
         [0.9235, 0.9202, 0.9257,  ..., 0.9205, 0.9228, 0.9205]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1294e-02, 2.2233e-02, 2.1205e-02,  ..., 2.2439e-02,
          2.1188e-02, 2.2482e-02],
         [2.1294e-02, 2.2233e-02, 2.1205e-02,  ..., 2.2439e-02,
          2.1188e-02, 2.2482e-02],
         [2.1294e-02, 2.2233e-02, 2.1205e-02,  ..., 2.2439e-02,
          2.1188e-02, 2.2482e-02],
         [9.3612e-01, 9.3330e-01, 9.3638e-01,  ..., 9.3268e-01,
          9.3644e-01, 9.3255e-01]],
        [[2.2667e-02, 2.2624e-02, 2.1678e-02,  ..., 4.6985e-04,
          2.2148e-02, 2.2142e-02],
         [2.2667e-02, 2.2624e-02, 2.1678e-02,  ..., 4.6985e-04,
          2.2148e-02, 2.2142e-02],
         [2.2667e-02, 2.2624e-02, 2.1678e-02,  ..., 9.9859e-01,
          2.2148e-02, 2.2142e-02],
         [9.3200e-01, 9.3213e-01, 9.3497e-01,  ..., 4.6985e-04,
          9.3356e-01, 9.3357e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 163:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0284, 0.0281, 0.0287,  ..., 0.0278, 0.0281, 0.0281],
         [0.0284, 0.0281, 0.0287,  ..., 0.0278, 0.0281, 0.0281],
         [0.0284, 0.0281, 0.0287,  ..., 0.0278, 0.0281, 0.0281],
         [0.9149, 0.9157, 0.9138,  ..., 0.9167, 0.9156, 0.9158]],
        [[0.0265, 0.0269, 0.0268,  ..., 0.0268, 0.0263, 0.0270],
         [0.0265, 0.0269, 0.0268,  ..., 0.0268, 0.0263, 0.0270],
         [0.0265, 0.0269, 0.0268,  ..., 0.0268, 0.0263, 0.0270],
         [0.9206, 0.9192, 0.9196,  ..., 0.9196, 0.9210, 0.9190]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0829e-02, 2.2500e-02, 2.1120e-02,  ..., 2.2327e-02,
          2.1464e-02, 2.2346e-02],
         [2.0829e-02, 2.2500e-02, 2.1120e-02,  ..., 2.2327e-02,
          2.1464e-02, 2.2346e-02],
         [2.0829e-02, 2.2500e-02, 2.1120e-02,  ..., 2.2327e-02,
          2.1464e-02, 2.2346e-02],
         [9.3751e-01, 9.3250e-01, 9.3664e-01,  ..., 9.3302e-01,
          9.3561e-01, 9.3296e-01]],
        [[2.2566e-02, 2.1922e-02, 2.1685e-02,  ..., 3.5196e-04,
          2.2076e-02, 2.1596e-02],
         [2.2566e-02, 2.1922e-02, 2.1685e-02,  ..., 3.5196e-04,
          2.2076e-02, 2.1596e-02],
         [2.2566e-02, 2.1922e-02, 2.1685e-02,  ..., 9.9894e-01,
          2.2076e-02, 2.1596e-02],
         [9.3230e-01, 9.3423e-01, 9.3495e-01,  ..., 3.5196e-04,
          9.3377e-01, 9.3521e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 164:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:10,857 [Process: 0] Synchronize training processes
2024-08-16 15:53:10,857 [Process: 0] Evaluating...
2024-08-16 15:53:10,859 [Process: 0] EPOCH 164:
2024-08-16 15:53:10,861 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0271, 0.0272, 0.0276,  ..., 0.0272, 0.0272, 0.0276],
         [0.0271, 0.0272, 0.0276,  ..., 0.0272, 0.0272, 0.0276],
         [0.0271, 0.0272, 0.0276,  ..., 0.0272, 0.0272, 0.0276],
         [0.9187, 0.9185, 0.9173,  ..., 0.9185, 0.9183, 0.9171]],
        [[0.0258, 0.0255, 0.0251,  ..., 0.0255, 0.0256, 0.0256],
         [0.0258, 0.0255, 0.0251,  ..., 0.0255, 0.0256, 0.0256],
         [0.0258, 0.0255, 0.0251,  ..., 0.0255, 0.0256, 0.0256],
         [0.9226, 0.9234, 0.9246,  ..., 0.9236, 0.9231, 0.9232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.1356e-02, 2.1405e-02, 2.1413e-02,  ..., 2.1357e-02,
          2.1169e-02, 2.1465e-02],
         [2.1356e-02, 2.1405e-02, 2.1413e-02,  ..., 2.1357e-02,
          2.1169e-02, 2.1465e-02],
         [2.1356e-02, 2.1405e-02, 2.1413e-02,  ..., 2.1357e-02,
          2.1169e-02, 2.1465e-02],
         [9.3593e-01, 9.3578e-01, 9.3576e-01,  ..., 9.3593e-01,
          9.3649e-01, 9.3561e-01]],
        [[2.1277e-02, 2.2629e-02, 2.1829e-02,  ..., 2.3203e-04,
          2.2334e-02, 2.2357e-02],
         [2.1277e-02, 2.2629e-02, 2.1829e-02,  ..., 2.3203e-04,
          2.2334e-02, 2.2357e-02],
         [2.1277e-02, 2.2629e-02, 2.1829e-02,  ..., 9.9930e-01,
          2.2334e-02, 2.2357e-02],
         [9.3617e-01, 9.3211e-01, 9.3451e-01,  ..., 2.3203e-04,
          9.3300e-01, 9.3293e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 165:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:12,924 [Process: 0] Synchronize training processes
2024-08-16 15:53:12,925 [Process: 0] Evaluating...
2024-08-16 15:53:12,927 [Process: 0] EPOCH 165:
2024-08-16 15:53:12,928 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0271, 0.0268, 0.0267,  ..., 0.0270, 0.0268, 0.0267],
         [0.0271, 0.0268, 0.0267,  ..., 0.0270, 0.0268, 0.0267],
         [0.0271, 0.0268, 0.0267,  ..., 0.0270, 0.0268, 0.0267],
         [0.9187, 0.9196, 0.9198,  ..., 0.9190, 0.9195, 0.9198]],
        [[0.0250, 0.0256, 0.0258,  ..., 0.0262, 0.0255, 0.0262],
         [0.0250, 0.0256, 0.0258,  ..., 0.0262, 0.0255, 0.0262],
         [0.0250, 0.0256, 0.0258,  ..., 0.0262, 0.0255, 0.0262],
         [0.9249, 0.9232, 0.9225,  ..., 0.9214, 0.9235, 0.9215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0209, 0.0214, 0.0211,  ..., 0.0206, 0.0214, 0.0209],
         [0.0209, 0.0214, 0.0211,  ..., 0.0206, 0.0214, 0.0209],
         [0.0209, 0.0214, 0.0211,  ..., 0.0206, 0.0214, 0.0209],
         [0.9373, 0.9357, 0.9368,  ..., 0.9382, 0.9359, 0.9372]],
        [[0.0214, 0.0208, 0.0209,  ..., 0.0014, 0.0214, 0.0221],
         [0.0214, 0.0208, 0.0209,  ..., 0.0014, 0.0214, 0.0221],
         [0.0214, 0.0208, 0.0209,  ..., 0.9959, 0.0214, 0.0221],
         [0.9359, 0.9375, 0.9373,  ..., 0.0014, 0.9357, 0.9338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 166:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:14,968 [Process: 0] Synchronize training processes
2024-08-16 15:53:14,968 [Process: 0] Evaluating...
2024-08-16 15:53:14,970 [Process: 0] EPOCH 166:
2024-08-16 15:53:14,972 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0269, 0.0269,  ..., 0.0272, 0.0267, 0.0266],
         [0.0268, 0.0269, 0.0269,  ..., 0.0272, 0.0267, 0.0266],
         [0.0268, 0.0269, 0.0269,  ..., 0.0272, 0.0267, 0.0266],
         [0.9195, 0.9192, 0.9192,  ..., 0.9184, 0.9199, 0.9202]],
        [[0.0261, 0.0255, 0.0257,  ..., 0.0255, 0.0260, 0.0257],
         [0.0261, 0.0255, 0.0257,  ..., 0.0255, 0.0260, 0.0257],
         [0.0261, 0.0255, 0.0257,  ..., 0.0255, 0.0260, 0.0257],
         [0.9218, 0.9235, 0.9229,  ..., 0.9236, 0.9219, 0.9230]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0755e-02, 2.0503e-02, 2.0785e-02,  ..., 2.1950e-02,
          2.0182e-02, 2.0088e-02],
         [2.0755e-02, 2.0503e-02, 2.0785e-02,  ..., 2.1950e-02,
          2.0182e-02, 2.0088e-02],
         [2.0755e-02, 2.0503e-02, 2.0785e-02,  ..., 2.1950e-02,
          2.0182e-02, 2.0088e-02],
         [9.3773e-01, 9.3849e-01, 9.3764e-01,  ..., 9.3415e-01,
          9.3945e-01, 9.3974e-01]],
        [[2.1104e-02, 2.1079e-02, 2.0175e-02,  ..., 2.7625e-04,
          2.1144e-02, 2.0728e-02],
         [2.1104e-02, 2.1079e-02, 2.0175e-02,  ..., 2.7625e-04,
          2.1144e-02, 2.0728e-02],
         [2.1104e-02, 2.1079e-02, 2.0175e-02,  ..., 9.9917e-01,
          2.1144e-02, 2.0728e-02],
         [9.3669e-01, 9.3676e-01, 9.3948e-01,  ..., 2.7625e-04,
          9.3657e-01, 9.3782e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 167:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:16,947 [Process: 0] Synchronize training processes
2024-08-16 15:53:16,947 [Process: 0] Evaluating...
2024-08-16 15:53:16,949 [Process: 0] EPOCH 167:
2024-08-16 15:53:16,951 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0268, 0.0269, 0.0269,  ..., 0.0266, 0.0268, 0.0268],
         [0.0268, 0.0269, 0.0269,  ..., 0.0266, 0.0268, 0.0268],
         [0.0268, 0.0269, 0.0269,  ..., 0.0266, 0.0268, 0.0268],
         [0.9196, 0.9192, 0.9194,  ..., 0.9202, 0.9196, 0.9195]],
        [[0.0256, 0.0250, 0.0262,  ..., 0.0258, 0.0259, 0.0264],
         [0.0256, 0.0250, 0.0262,  ..., 0.0258, 0.0259, 0.0264],
         [0.0256, 0.0250, 0.0262,  ..., 0.0258, 0.0259, 0.0264],
         [0.9233, 0.9250, 0.9215,  ..., 0.9226, 0.9223, 0.9207]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0644e-02, 2.1111e-02, 2.0225e-02,  ..., 2.1364e-02,
          2.0621e-02, 2.0152e-02],
         [2.0644e-02, 2.1111e-02, 2.0225e-02,  ..., 2.1364e-02,
          2.0621e-02, 2.0152e-02],
         [2.0644e-02, 2.1111e-02, 2.0225e-02,  ..., 2.1364e-02,
          2.0621e-02, 2.0152e-02],
         [9.3807e-01, 9.3667e-01, 9.3932e-01,  ..., 9.3591e-01,
          9.3814e-01, 9.3954e-01]],
        [[2.0999e-02, 2.0671e-02, 2.1249e-02,  ..., 7.1313e-05,
          2.1397e-02, 2.0135e-02],
         [2.0999e-02, 2.0671e-02, 2.1249e-02,  ..., 7.1313e-05,
          2.1397e-02, 2.0135e-02],
         [2.0999e-02, 2.0671e-02, 2.1249e-02,  ..., 9.9979e-01,
          2.1397e-02, 2.0135e-02],
         [9.3700e-01, 9.3799e-01, 9.3625e-01,  ..., 7.1313e-05,
          9.3581e-01, 9.3959e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 168:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:19,054 [Process: 0] Synchronize training processes
2024-08-16 15:53:19,055 [Process: 0] Evaluating...
2024-08-16 15:53:19,057 [Process: 0] EPOCH 168:
2024-08-16 15:53:19,059 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0267, 0.0266, 0.0268,  ..., 0.0265, 0.0265, 0.0265],
         [0.0267, 0.0266, 0.0268,  ..., 0.0265, 0.0265, 0.0265],
         [0.0267, 0.0266, 0.0268,  ..., 0.0265, 0.0265, 0.0265],
         [0.9199, 0.9202, 0.9197,  ..., 0.9204, 0.9206, 0.9204]],
        [[0.0249, 0.0255, 0.0258,  ..., 0.0257, 0.0257, 0.0256],
         [0.0249, 0.0255, 0.0258,  ..., 0.0257, 0.0257, 0.0256],
         [0.0249, 0.0255, 0.0258,  ..., 0.0257, 0.0257, 0.0256],
         [0.9254, 0.9235, 0.9227,  ..., 0.9228, 0.9230, 0.9232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0844e-02, 1.9630e-02, 2.0892e-02,  ..., 2.1888e-02,
          2.0797e-02, 2.1118e-02],
         [2.0844e-02, 1.9630e-02, 2.0892e-02,  ..., 2.1888e-02,
          2.0797e-02, 2.1118e-02],
         [2.0844e-02, 1.9630e-02, 2.0892e-02,  ..., 2.1888e-02,
          2.0797e-02, 2.1118e-02],
         [9.3747e-01, 9.4111e-01, 9.3732e-01,  ..., 9.3434e-01,
          9.3761e-01, 9.3665e-01]],
        [[2.1299e-02, 2.0679e-02, 2.0040e-02,  ..., 3.0641e-05,
          2.0611e-02, 2.0783e-02],
         [2.1299e-02, 2.0679e-02, 2.0040e-02,  ..., 3.0641e-05,
          2.0611e-02, 2.0783e-02],
         [2.1299e-02, 2.0679e-02, 2.0040e-02,  ..., 9.9991e-01,
          2.0611e-02, 2.0783e-02],
         [9.3610e-01, 9.3796e-01, 9.3988e-01,  ..., 3.0641e-05,
          9.3817e-01, 9.3765e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 169:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:21,132 [Process: 0] Synchronize training processes
2024-08-16 15:53:21,132 [Process: 0] Evaluating...
2024-08-16 15:53:21,134 [Process: 0] EPOCH 169:
2024-08-16 15:53:21,136 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0262, 0.0260, 0.0259,  ..., 0.0261, 0.0264, 0.0262],
         [0.0262, 0.0260, 0.0259,  ..., 0.0261, 0.0264, 0.0262],
         [0.0262, 0.0260, 0.0259,  ..., 0.0261, 0.0264, 0.0262],
         [0.9213, 0.9220, 0.9222,  ..., 0.9217, 0.9209, 0.9213]],
        [[0.0253, 0.0253, 0.0248,  ..., 0.0249, 0.0253, 0.0252],
         [0.0253, 0.0253, 0.0248,  ..., 0.0249, 0.0253, 0.0252],
         [0.0253, 0.0253, 0.0248,  ..., 0.0249, 0.0253, 0.0252],
         [0.9241, 0.9240, 0.9256,  ..., 0.9253, 0.9242, 0.9244]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0204, 0.0212, 0.0213,  ..., 0.0218, 0.0211, 0.0200],
         [0.0204, 0.0212, 0.0213,  ..., 0.0218, 0.0211, 0.0200],
         [0.0204, 0.0212, 0.0213,  ..., 0.0218, 0.0211, 0.0200],
         [0.9389, 0.9365, 0.9360,  ..., 0.9346, 0.9366, 0.9399]],
        [[0.0202, 0.0207, 0.0204,  ..., 0.0010, 0.0208, 0.0209],
         [0.0202, 0.0207, 0.0204,  ..., 0.0010, 0.0208, 0.0209],
         [0.0202, 0.0207, 0.0204,  ..., 0.9970, 0.0208, 0.0209],
         [0.9394, 0.9378, 0.9388,  ..., 0.0010, 0.9375, 0.9374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 170:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:23,232 [Process: 0] Synchronize training processes
2024-08-16 15:53:23,232 [Process: 0] Evaluating...
2024-08-16 15:53:23,234 [Process: 0] EPOCH 170:
2024-08-16 15:53:23,236 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0255, 0.0259, 0.0260,  ..., 0.0259, 0.0259, 0.0260],
         [0.0255, 0.0259, 0.0260,  ..., 0.0259, 0.0259, 0.0260],
         [0.0255, 0.0259, 0.0260,  ..., 0.0259, 0.0259, 0.0260],
         [0.9236, 0.9224, 0.9220,  ..., 0.9222, 0.9222, 0.9221]],
        [[0.0243, 0.0246, 0.0243,  ..., 0.0245, 0.0244, 0.0253],
         [0.0243, 0.0246, 0.0243,  ..., 0.0245, 0.0244, 0.0253],
         [0.0243, 0.0246, 0.0243,  ..., 0.0245, 0.0244, 0.0253],
         [0.9271, 0.9262, 0.9272,  ..., 0.9265, 0.9268, 0.9241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0206, 0.0202, 0.0195,  ..., 0.0200, 0.0208, 0.0199],
         [0.0206, 0.0202, 0.0195,  ..., 0.0200, 0.0208, 0.0199],
         [0.0206, 0.0202, 0.0195,  ..., 0.0200, 0.0208, 0.0199],
         [0.9381, 0.9395, 0.9416,  ..., 0.9399, 0.9376, 0.9404]],
        [[0.0211, 0.0205, 0.0210,  ..., 0.0020, 0.0205, 0.0202],
         [0.0211, 0.0205, 0.0210,  ..., 0.0020, 0.0205, 0.0202],
         [0.0211, 0.0205, 0.0210,  ..., 0.9941, 0.0205, 0.0202],
         [0.9366, 0.9385, 0.9370,  ..., 0.0020, 0.9386, 0.9394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 171:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:53:25,338 [Process: 0] Synchronize training processes
2024-08-16 15:53:25,339 [Process: 0] Evaluating...
2024-08-16 15:53:25,341 [Process: 0] EPOCH 171:
2024-08-16 15:53:25,342 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0258, 0.0254, 0.0258,  ..., 0.0257, 0.0257, 0.0258],
         [0.0258, 0.0254, 0.0258,  ..., 0.0257, 0.0257, 0.0258],
         [0.0258, 0.0254, 0.0258,  ..., 0.0257, 0.0257, 0.0258],
         [0.9225, 0.9237, 0.9226,  ..., 0.9229, 0.9228, 0.9226]],
        [[0.0245, 0.0244, 0.0241,  ..., 0.0242, 0.0249, 0.0245],
         [0.0245, 0.0244, 0.0241,  ..., 0.0242, 0.0249, 0.0245],
         [0.0245, 0.0244, 0.0241,  ..., 0.0242, 0.0249, 0.0245],
         [0.9266, 0.9267, 0.9278,  ..., 0.9274, 0.9252, 0.9266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:27,425 [Process: 0] Synchronize training processes
2024-08-16 15:53:27,425 [Process: 0] Evaluating...
2024-08-16 15:53:27,434 [Process: 0] EPOCH 172:
2024-08-16 15:53:27,436 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0104e-02, 1.9877e-02, 1.9924e-02,  ..., 2.0410e-02,
          1.9268e-02, 2.0290e-02],
         [2.0104e-02, 1.9877e-02, 1.9924e-02,  ..., 2.0410e-02,
          1.9268e-02, 2.0290e-02],
         [2.0104e-02, 1.9877e-02, 1.9924e-02,  ..., 2.0410e-02,
          1.9268e-02, 2.0290e-02],
         [9.3969e-01, 9.4037e-01, 9.4023e-01,  ..., 9.3877e-01,
          9.4220e-01, 9.3913e-01]],
        [[2.0005e-02, 1.9891e-02, 2.0536e-02,  ..., 5.0320e-04,
          2.0189e-02, 2.0713e-02],
         [2.0005e-02, 1.9891e-02, 2.0536e-02,  ..., 5.0320e-04,
          2.0189e-02, 2.0713e-02],
         [2.0005e-02, 1.9891e-02, 2.0536e-02,  ..., 9.9849e-01,
          2.0189e-02, 2.0713e-02],
         [9.3999e-01, 9.4033e-01, 9.3839e-01,  ..., 5.0320e-04,
          9.3943e-01, 9.3786e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 172:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0253, 0.0258, 0.0257,  ..., 0.0257, 0.0255, 0.0258],
         [0.0253, 0.0258, 0.0257,  ..., 0.0257, 0.0255, 0.0258],
         [0.0253, 0.0258, 0.0257,  ..., 0.0257, 0.0255, 0.0258],
         [0.9240, 0.9227, 0.9228,  ..., 0.9228, 0.9234, 0.9227]],
        [[0.0242, 0.0240, 0.0241,  ..., 0.0243, 0.0237, 0.0242],
         [0.0242, 0.0240, 0.0241,  ..., 0.0243, 0.0237, 0.0242],
         [0.0242, 0.0240, 0.0241,  ..., 0.0243, 0.0237, 0.0242],
         [0.9274, 0.9281, 0.9276,  ..., 0.9272, 0.9290, 0.9274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:29,530 [Process: 0] Synchronize training processes
2024-08-16 15:53:29,530 [Process: 0] Evaluating...
2024-08-16 15:53:29,532 [Process: 0] EPOCH 173:
2024-08-16 15:53:29,534 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[2.0048e-02, 1.9693e-02, 2.0126e-02,  ..., 1.9300e-02,
          1.8850e-02, 1.9644e-02],
         [2.0048e-02, 1.9693e-02, 2.0126e-02,  ..., 1.9300e-02,
          1.8850e-02, 1.9644e-02],
         [2.0048e-02, 1.9693e-02, 2.0126e-02,  ..., 1.9300e-02,
          1.8850e-02, 1.9644e-02],
         [9.3985e-01, 9.4092e-01, 9.3962e-01,  ..., 9.4210e-01,
          9.4345e-01, 9.4107e-01]],
        [[2.0305e-02, 2.0399e-02, 1.9310e-02,  ..., 6.5427e-04,
          2.0071e-02, 2.0563e-02],
         [2.0305e-02, 2.0399e-02, 1.9310e-02,  ..., 6.5427e-04,
          2.0071e-02, 2.0563e-02],
         [2.0305e-02, 2.0399e-02, 1.9310e-02,  ..., 9.9804e-01,
          2.0071e-02, 2.0563e-02],
         [9.3909e-01, 9.3880e-01, 9.4207e-01,  ..., 6.5427e-04,
          9.3979e-01, 9.3831e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 173:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0254, 0.0255, 0.0255,  ..., 0.0254, 0.0256, 0.0253],
         [0.0254, 0.0255, 0.0255,  ..., 0.0254, 0.0256, 0.0253],
         [0.0254, 0.0255, 0.0255,  ..., 0.0254, 0.0256, 0.0253],
         [0.9237, 0.9236, 0.9234,  ..., 0.9237, 0.9232, 0.9242]],
        [[0.0233, 0.0242, 0.0242,  ..., 0.0243, 0.0238, 0.0241],
         [0.0233, 0.0242, 0.0242,  ..., 0.0243, 0.0238, 0.0241],
         [0.0233, 0.0242, 0.0242,  ..., 0.0243, 0.0238, 0.0241],
         [0.9301, 0.9275, 0.9275,  ..., 0.9270, 0.9285, 0.9278]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:31,609 [Process: 0] Synchronize training processes
2024-08-16 15:53:31,609 [Process: 0] Evaluating...
2024-08-16 15:53:31,611 [Process: 0] EPOCH 174:
2024-08-16 15:53:31,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0193, 0.0195, 0.0187,  ..., 0.0194, 0.0202, 0.0195],
         [0.0193, 0.0195, 0.0187,  ..., 0.0194, 0.0202, 0.0195],
         [0.0193, 0.0195, 0.0187,  ..., 0.0194, 0.0202, 0.0195],
         [0.9420, 0.9414, 0.9439,  ..., 0.9417, 0.9393, 0.9414]],
        [[0.0197, 0.0197, 0.0202,  ..., 0.0194, 0.0197, 0.0200],
         [0.0197, 0.0197, 0.0202,  ..., 0.0194, 0.0197, 0.0200],
         [0.0197, 0.0197, 0.0202,  ..., 0.9419, 0.0197, 0.0200],
         [0.9410, 0.9408, 0.9395,  ..., 0.0194, 0.9408, 0.9399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 174:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0254, 0.0252, 0.0254,  ..., 0.0250, 0.0251, 0.0251],
         [0.0254, 0.0252, 0.0254,  ..., 0.0250, 0.0251, 0.0251],
         [0.0254, 0.0252, 0.0254,  ..., 0.0250, 0.0251, 0.0251],
         [0.9239, 0.9245, 0.9239,  ..., 0.9249, 0.9246, 0.9248]],
        [[0.0235, 0.0239, 0.0240,  ..., 0.0242, 0.0241, 0.0240],
         [0.0235, 0.0239, 0.0240,  ..., 0.0242, 0.0241, 0.0240],
         [0.0235, 0.0239, 0.0240,  ..., 0.0242, 0.0241, 0.0240],
         [0.9296, 0.9283, 0.9280,  ..., 0.9273, 0.9277, 0.9281]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:33,726 [Process: 0] Synchronize training processes
2024-08-16 15:53:33,726 [Process: 0] Evaluating...
2024-08-16 15:53:33,728 [Process: 0] EPOCH 175:
2024-08-16 15:53:33,730 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9296e-02, 1.9735e-02, 1.9102e-02,  ..., 1.9824e-02,
          1.8991e-02, 2.0114e-02],
         [1.9296e-02, 1.9735e-02, 1.9102e-02,  ..., 1.9824e-02,
          1.8991e-02, 2.0114e-02],
         [1.9296e-02, 1.9735e-02, 1.9102e-02,  ..., 1.9824e-02,
          1.8991e-02, 2.0114e-02],
         [9.4211e-01, 9.4080e-01, 9.4269e-01,  ..., 9.4053e-01,
          9.4303e-01, 9.3966e-01]],
        [[2.0244e-02, 1.9696e-02, 1.9355e-02,  ..., 4.4652e-04,
          1.9955e-02, 1.9780e-02],
         [2.0244e-02, 1.9696e-02, 1.9355e-02,  ..., 4.4652e-04,
          1.9955e-02, 1.9780e-02],
         [2.0244e-02, 1.9696e-02, 1.9355e-02,  ..., 9.9866e-01,
          1.9955e-02, 1.9780e-02],
         [9.3927e-01, 9.4091e-01, 9.4194e-01,  ..., 4.4652e-04,
          9.4013e-01, 9.4066e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 175:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0248, 0.0247, 0.0249,  ..., 0.0247, 0.0250, 0.0248],
         [0.0248, 0.0247, 0.0249,  ..., 0.0247, 0.0250, 0.0248],
         [0.0248, 0.0247, 0.0249,  ..., 0.0247, 0.0250, 0.0248],
         [0.9256, 0.9260, 0.9252,  ..., 0.9259, 0.9251, 0.9257]],
        [[0.0230, 0.0225, 0.0244,  ..., 0.0238, 0.0238, 0.0231],
         [0.0230, 0.0225, 0.0244,  ..., 0.0238, 0.0238, 0.0231],
         [0.0230, 0.0225, 0.0244,  ..., 0.0238, 0.0238, 0.0231],
         [0.9310, 0.9324, 0.9269,  ..., 0.9287, 0.9285, 0.9307]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:35,834 [Process: 0] Synchronize training processes
2024-08-16 15:53:35,835 [Process: 0] Evaluating...
2024-08-16 15:53:35,837 [Process: 0] EPOCH 176:
2024-08-16 15:53:35,839 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0202, 0.0196, 0.0188,  ..., 0.0196, 0.0196, 0.0195],
         [0.0202, 0.0196, 0.0188,  ..., 0.0196, 0.0196, 0.0195],
         [0.0202, 0.0196, 0.0188,  ..., 0.0196, 0.0196, 0.0195],
         [0.9393, 0.9411, 0.9436,  ..., 0.9413, 0.9412, 0.9415]],
        [[0.0199, 0.0190, 0.0188,  ..., 0.0012, 0.0191, 0.0192],
         [0.0199, 0.0190, 0.0188,  ..., 0.0012, 0.0191, 0.0192],
         [0.0199, 0.0190, 0.0188,  ..., 0.9964, 0.0191, 0.0192],
         [0.9404, 0.9429, 0.9436,  ..., 0.0012, 0.9428, 0.9425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 176:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0246, 0.0248, 0.0249,  ..., 0.0244, 0.0246, 0.0247],
         [0.0246, 0.0248, 0.0249,  ..., 0.0244, 0.0246, 0.0247],
         [0.0246, 0.0248, 0.0249,  ..., 0.0244, 0.0246, 0.0247],
         [0.9261, 0.9256, 0.9254,  ..., 0.9269, 0.9261, 0.9259]],
        [[0.0241, 0.0239, 0.0234,  ..., 0.0236, 0.0238, 0.0241],
         [0.0241, 0.0239, 0.0234,  ..., 0.0236, 0.0238, 0.0241],
         [0.0241, 0.0239, 0.0234,  ..., 0.0236, 0.0238, 0.0241],
         [0.9276, 0.9282, 0.9299,  ..., 0.9291, 0.9287, 0.9276]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:37,861 [Process: 0] Synchronize training processes
2024-08-16 15:53:37,861 [Process: 0] Evaluating...
2024-08-16 15:53:37,863 [Process: 0] EPOCH 177:
2024-08-16 15:53:37,865 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9054e-02, 1.9576e-02, 1.9055e-02,  ..., 1.9968e-02,
          1.7696e-02, 1.8692e-02],
         [1.9054e-02, 1.9576e-02, 1.9055e-02,  ..., 1.9968e-02,
          1.7696e-02, 1.8692e-02],
         [1.9054e-02, 1.9576e-02, 1.9055e-02,  ..., 1.9968e-02,
          1.7696e-02, 1.8692e-02],
         [9.4284e-01, 9.4127e-01, 9.4284e-01,  ..., 9.4010e-01,
          9.4691e-01, 9.4392e-01]],
        [[1.8687e-02, 1.8614e-02, 1.8879e-02,  ..., 2.7901e-04,
          1.9639e-02, 1.8513e-02],
         [1.8687e-02, 1.8614e-02, 1.8879e-02,  ..., 2.7901e-04,
          1.9639e-02, 1.8513e-02],
         [1.8687e-02, 1.8614e-02, 1.8879e-02,  ..., 9.9916e-01,
          1.9639e-02, 1.8513e-02],
         [9.4394e-01, 9.4416e-01, 9.4336e-01,  ..., 2.7901e-04,
          9.4108e-01, 9.4446e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 177:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0242, 0.0243, 0.0244,  ..., 0.0242, 0.0244, 0.0245],
         [0.0242, 0.0243, 0.0244,  ..., 0.0242, 0.0244, 0.0245],
         [0.0242, 0.0243, 0.0244,  ..., 0.0242, 0.0244, 0.0245],
         [0.9273, 0.9271, 0.9268,  ..., 0.9273, 0.9267, 0.9265]],
        [[0.0234, 0.0236, 0.0239,  ..., 0.0231, 0.0232, 0.0227],
         [0.0234, 0.0236, 0.0239,  ..., 0.0231, 0.0232, 0.0227],
         [0.0234, 0.0236, 0.0239,  ..., 0.0231, 0.0232, 0.0227],
         [0.9297, 0.9293, 0.9284,  ..., 0.9307, 0.9305, 0.9319]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:39,800 [Process: 0] Synchronize training processes
2024-08-16 15:53:39,800 [Process: 0] Evaluating...
2024-08-16 15:53:39,802 [Process: 0] EPOCH 178:
2024-08-16 15:53:39,804 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0184, 0.0186, 0.0193,  ..., 0.0190, 0.0189, 0.0191],
         [0.0184, 0.0186, 0.0193,  ..., 0.0190, 0.0189, 0.0191],
         [0.0184, 0.0186, 0.0193,  ..., 0.0190, 0.0189, 0.0191],
         [0.9448, 0.9441, 0.9422,  ..., 0.9429, 0.9434, 0.9426]],
        [[0.0190, 0.0195, 0.0189,  ..., 0.0013, 0.0191, 0.0197],
         [0.0190, 0.0195, 0.0189,  ..., 0.0013, 0.0191, 0.0197],
         [0.0190, 0.0195, 0.0189,  ..., 0.9960, 0.0191, 0.0197],
         [0.9430, 0.9416, 0.9434,  ..., 0.0013, 0.9428, 0.9410]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 178:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0242, 0.0241, 0.0241,  ..., 0.0242, 0.0244, 0.0242],
         [0.0242, 0.0241, 0.0241,  ..., 0.0242, 0.0244, 0.0242],
         [0.0242, 0.0241, 0.0241,  ..., 0.0242, 0.0244, 0.0242],
         [0.9274, 0.9278, 0.9276,  ..., 0.9273, 0.9267, 0.9273]],
        [[0.0233, 0.0236, 0.0228,  ..., 0.0233, 0.0231, 0.0227],
         [0.0233, 0.0236, 0.0228,  ..., 0.0233, 0.0231, 0.0227],
         [0.0233, 0.0236, 0.0228,  ..., 0.0233, 0.0231, 0.0227],
         [0.9301, 0.9293, 0.9316,  ..., 0.9302, 0.9308, 0.9320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:41,736 [Process: 0] Synchronize training processes
2024-08-16 15:53:41,736 [Process: 0] Evaluating...
2024-08-16 15:53:41,738 [Process: 0] EPOCH 179:
2024-08-16 15:53:41,740 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.9137e-02, 1.8485e-02, 1.8093e-02,  ..., 1.9171e-02,
          1.7795e-02, 1.9047e-02],
         [1.9137e-02, 1.8485e-02, 1.8093e-02,  ..., 1.9171e-02,
          1.7795e-02, 1.9047e-02],
         [1.9137e-02, 1.8485e-02, 1.8093e-02,  ..., 1.9171e-02,
          1.7795e-02, 1.9047e-02],
         [9.4259e-01, 9.4454e-01, 9.4572e-01,  ..., 9.4249e-01,
          9.4662e-01, 9.4286e-01]],
        [[1.8717e-02, 1.8960e-02, 1.8699e-02,  ..., 4.7225e-05,
          1.9214e-02, 1.8538e-02],
         [1.8717e-02, 1.8960e-02, 1.8699e-02,  ..., 4.7225e-05,
          1.9214e-02, 1.8538e-02],
         [1.8717e-02, 1.8960e-02, 1.8699e-02,  ..., 9.9986e-01,
          1.9214e-02, 1.8538e-02],
         [9.4385e-01, 9.4312e-01, 9.4390e-01,  ..., 4.7225e-05,
          9.4236e-01, 9.4438e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 179:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0242, 0.0241, 0.0242,  ..., 0.0240, 0.0241, 0.0241],
         [0.0242, 0.0241, 0.0242,  ..., 0.0240, 0.0241, 0.0241],
         [0.0242, 0.0241, 0.0242,  ..., 0.0240, 0.0241, 0.0241],
         [0.9274, 0.9277, 0.9275,  ..., 0.9280, 0.9278, 0.9277]],
        [[0.0232, 0.0227, 0.0228,  ..., 0.0230, 0.0231, 0.0226],
         [0.0232, 0.0227, 0.0228,  ..., 0.0230, 0.0231, 0.0226],
         [0.0232, 0.0227, 0.0228,  ..., 0.0230, 0.0231, 0.0226],
         [0.9304, 0.9319, 0.9317,  ..., 0.9310, 0.9306, 0.9322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:43,755 [Process: 0] Synchronize training processes
2024-08-16 15:53:43,755 [Process: 0] Evaluating...
2024-08-16 15:53:43,757 [Process: 0] EPOCH 180:
2024-08-16 15:53:43,759 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7591e-02, 1.8096e-02, 1.8440e-02,  ..., 1.8594e-02,
          1.8639e-02, 1.8055e-02],
         [1.7591e-02, 1.8096e-02, 1.8440e-02,  ..., 1.8594e-02,
          1.8639e-02, 1.8055e-02],
         [1.7591e-02, 1.8096e-02, 1.8440e-02,  ..., 1.8594e-02,
          1.8639e-02, 1.8055e-02],
         [9.4723e-01, 9.4571e-01, 9.4468e-01,  ..., 9.4422e-01,
          9.4408e-01, 9.4584e-01]],
        [[1.8838e-02, 1.8407e-02, 1.8649e-02,  ..., 4.4033e-04,
          1.8959e-02, 1.9006e-02],
         [1.8838e-02, 1.8407e-02, 1.8649e-02,  ..., 4.4033e-04,
          1.8959e-02, 1.9006e-02],
         [1.8838e-02, 1.8407e-02, 1.8649e-02,  ..., 9.9868e-01,
          1.8959e-02, 1.9006e-02],
         [9.4349e-01, 9.4478e-01, 9.4405e-01,  ..., 4.4033e-04,
          9.4312e-01, 9.4298e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 180:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0238, 0.0240, 0.0237,  ..., 0.0241, 0.0238, 0.0241],
         [0.0238, 0.0240, 0.0237,  ..., 0.0241, 0.0238, 0.0241],
         [0.0238, 0.0240, 0.0237,  ..., 0.0241, 0.0238, 0.0241],
         [0.9285, 0.9280, 0.9289,  ..., 0.9276, 0.9286, 0.9277]],
        [[0.0226, 0.0223, 0.0230,  ..., 0.0229, 0.0231, 0.0219],
         [0.0226, 0.0223, 0.0230,  ..., 0.0229, 0.0231, 0.0219],
         [0.0226, 0.0223, 0.0230,  ..., 0.0229, 0.0231, 0.0219],
         [0.9322, 0.9330, 0.9311,  ..., 0.9312, 0.9306, 0.9344]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:45,787 [Process: 0] Synchronize training processes
2024-08-16 15:53:45,787 [Process: 0] Evaluating...
2024-08-16 15:53:45,789 [Process: 0] EPOCH 181:
2024-08-16 15:53:45,791 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8578e-02, 1.8987e-02, 1.8028e-02,  ..., 1.8035e-02,
          1.8516e-02, 1.8586e-02],
         [1.8578e-02, 1.8987e-02, 1.8028e-02,  ..., 1.8035e-02,
          1.8516e-02, 1.8586e-02],
         [1.8578e-02, 1.8987e-02, 1.8028e-02,  ..., 1.8035e-02,
          1.8516e-02, 1.8586e-02],
         [9.4427e-01, 9.4304e-01, 9.4592e-01,  ..., 9.4589e-01,
          9.4445e-01, 9.4424e-01]],
        [[1.9044e-02, 1.8264e-02, 1.8718e-02,  ..., 8.3635e-04,
          1.7940e-02, 1.8734e-02],
         [1.9044e-02, 1.8264e-02, 1.8718e-02,  ..., 8.3635e-04,
          1.7940e-02, 1.8734e-02],
         [1.9044e-02, 1.8264e-02, 1.8718e-02,  ..., 9.9749e-01,
          1.7940e-02, 1.8734e-02],
         [9.4287e-01, 9.4521e-01, 9.4385e-01,  ..., 8.3635e-04,
          9.4618e-01, 9.4380e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 181:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0237, 0.0238, 0.0235,  ..., 0.0239, 0.0238, 0.0235],
         [0.0237, 0.0238, 0.0235,  ..., 0.0239, 0.0238, 0.0235],
         [0.0237, 0.0238, 0.0235,  ..., 0.0239, 0.0238, 0.0235],
         [0.9290, 0.9286, 0.9295,  ..., 0.9284, 0.9286, 0.9295]],
        [[0.0223, 0.0230, 0.0238,  ..., 0.0223, 0.0224, 0.0235],
         [0.0223, 0.0230, 0.0238,  ..., 0.0223, 0.0224, 0.0235],
         [0.0223, 0.0230, 0.0238,  ..., 0.0223, 0.0224, 0.0235],
         [0.9330, 0.9310, 0.9287,  ..., 0.9332, 0.9327, 0.9295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:47,767 [Process: 0] Synchronize training processes
2024-08-16 15:53:47,767 [Process: 0] Evaluating...
2024-08-16 15:53:47,775 [Process: 0] EPOCH 182:
2024-08-16 15:53:47,777 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0181, 0.0180, 0.0193,  ..., 0.0183, 0.0182, 0.0186],
         [0.0181, 0.0180, 0.0193,  ..., 0.0183, 0.0182, 0.0186],
         [0.0181, 0.0180, 0.0193,  ..., 0.0183, 0.0182, 0.0186],
         [0.9458, 0.9461, 0.9420,  ..., 0.9452, 0.9453, 0.9443]],
        [[0.0185, 0.0183, 0.0191,  ..., 0.0022, 0.0178, 0.0185],
         [0.0185, 0.0183, 0.0191,  ..., 0.0022, 0.0178, 0.0185],
         [0.0185, 0.0183, 0.0191,  ..., 0.9933, 0.0178, 0.0185],
         [0.9444, 0.9450, 0.9426,  ..., 0.0022, 0.9465, 0.9445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 182:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0233, 0.0233, 0.0235,  ..., 0.0233, 0.0230, 0.0230],
         [0.0233, 0.0233, 0.0235,  ..., 0.0233, 0.0230, 0.0230],
         [0.0233, 0.0233, 0.0235,  ..., 0.0233, 0.0230, 0.0230],
         [0.9300, 0.9302, 0.9295,  ..., 0.9301, 0.9310, 0.9309]],
        [[0.0235, 0.0230, 0.0233,  ..., 0.0215, 0.0222, 0.0232],
         [0.0235, 0.0230, 0.0233,  ..., 0.0215, 0.0222, 0.0232],
         [0.0235, 0.0230, 0.0233,  ..., 0.0215, 0.0222, 0.0232],
         [0.9295, 0.9309, 0.9302,  ..., 0.9354, 0.9334, 0.9305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:49,749 [Process: 0] Synchronize training processes
2024-08-16 15:53:49,750 [Process: 0] Evaluating...
2024-08-16 15:53:49,752 [Process: 0] EPOCH 183:
2024-08-16 15:53:49,754 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.8005e-02, 1.7857e-02, 1.8176e-02,  ..., 1.8381e-02,
          1.8140e-02, 1.7760e-02],
         [1.8005e-02, 1.7857e-02, 1.8176e-02,  ..., 1.8381e-02,
          1.8140e-02, 1.7760e-02],
         [1.8005e-02, 1.7857e-02, 1.8176e-02,  ..., 1.8381e-02,
          1.8140e-02, 1.7760e-02],
         [9.4599e-01, 9.4643e-01, 9.4547e-01,  ..., 9.4486e-01,
          9.4558e-01, 9.4672e-01]],
        [[1.8658e-02, 1.8051e-02, 1.7968e-02,  ..., 1.2388e-04,
          1.8075e-02, 1.8378e-02],
         [1.8658e-02, 1.8051e-02, 1.7968e-02,  ..., 1.2388e-04,
          1.8075e-02, 1.8378e-02],
         [1.8658e-02, 1.8051e-02, 1.7968e-02,  ..., 9.9963e-01,
          1.8075e-02, 1.8378e-02],
         [9.4403e-01, 9.4585e-01, 9.4610e-01,  ..., 1.2388e-04,
          9.4578e-01, 9.4487e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 183:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0233, 0.0230, 0.0231,  ..., 0.0233, 0.0230, 0.0232],
         [0.0233, 0.0230, 0.0231,  ..., 0.0233, 0.0230, 0.0232],
         [0.0233, 0.0230, 0.0231,  ..., 0.0233, 0.0230, 0.0232],
         [0.9300, 0.9311, 0.9306,  ..., 0.9302, 0.9310, 0.9305]],
        [[0.0222, 0.0223, 0.0232,  ..., 0.0215, 0.0217, 0.0226],
         [0.0222, 0.0223, 0.0232,  ..., 0.0215, 0.0217, 0.0226],
         [0.0222, 0.0223, 0.0232,  ..., 0.0215, 0.0217, 0.0226],
         [0.9333, 0.9331, 0.9304,  ..., 0.9356, 0.9348, 0.9322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:51,818 [Process: 0] Synchronize training processes
2024-08-16 15:53:51,818 [Process: 0] Evaluating...
2024-08-16 15:53:51,820 [Process: 0] EPOCH 184:
2024-08-16 15:53:51,823 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7673e-02, 1.8239e-02, 1.7640e-02,  ..., 1.7127e-02,
          1.7512e-02, 1.8603e-02],
         [1.7673e-02, 1.8239e-02, 1.7640e-02,  ..., 1.7127e-02,
          1.7512e-02, 1.8603e-02],
         [1.7673e-02, 1.8239e-02, 1.7640e-02,  ..., 1.7127e-02,
          1.7512e-02, 1.8603e-02],
         [9.4698e-01, 9.4528e-01, 9.4708e-01,  ..., 9.4862e-01,
          9.4746e-01, 9.4419e-01]],
        [[1.8166e-02, 1.7392e-02, 1.8187e-02,  ..., 7.4065e-04,
          1.8602e-02, 1.7907e-02],
         [1.8166e-02, 1.7392e-02, 1.8187e-02,  ..., 7.4065e-04,
          1.8602e-02, 1.7907e-02],
         [1.8166e-02, 1.7392e-02, 1.8187e-02,  ..., 9.9778e-01,
          1.8602e-02, 1.7907e-02],
         [9.4550e-01, 9.4783e-01, 9.4544e-01,  ..., 7.4065e-04,
          9.4419e-01, 9.4628e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 184:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0230, 0.0229, 0.0230,  ..., 0.0231, 0.0231, 0.0232],
         [0.0230, 0.0229, 0.0230,  ..., 0.0231, 0.0231, 0.0232],
         [0.0230, 0.0229, 0.0230,  ..., 0.0231, 0.0231, 0.0232],
         [0.9309, 0.9313, 0.9310,  ..., 0.9308, 0.9307, 0.9305]],
        [[0.0218, 0.0224, 0.0220,  ..., 0.0219, 0.0219, 0.0221],
         [0.0218, 0.0224, 0.0220,  ..., 0.0219, 0.0219, 0.0221],
         [0.0218, 0.0224, 0.0220,  ..., 0.0219, 0.0219, 0.0221],
         [0.9345, 0.9329, 0.9341,  ..., 0.9343, 0.9343, 0.9338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:53,870 [Process: 0] Synchronize training processes
2024-08-16 15:53:53,870 [Process: 0] Evaluating...
2024-08-16 15:53:53,872 [Process: 0] EPOCH 185:
2024-08-16 15:53:53,874 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0179, 0.0184, 0.0175,  ..., 0.0177, 0.0181, 0.0185],
         [0.0179, 0.0184, 0.0175,  ..., 0.0177, 0.0181, 0.0185],
         [0.0179, 0.0184, 0.0175,  ..., 0.0177, 0.0181, 0.0185],
         [0.9462, 0.9448, 0.9474,  ..., 0.9469, 0.9456, 0.9446]],
        [[0.0185, 0.0187, 0.0176,  ..., 0.0011, 0.0180, 0.0176],
         [0.0185, 0.0187, 0.0176,  ..., 0.0011, 0.0180, 0.0176],
         [0.0185, 0.0187, 0.0176,  ..., 0.9968, 0.0180, 0.0176],
         [0.9445, 0.9440, 0.9471,  ..., 0.0011, 0.9461, 0.9472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 185:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0229, 0.0230, 0.0228,  ..., 0.0229, 0.0229, 0.0230],
         [0.0229, 0.0230, 0.0228,  ..., 0.0229, 0.0229, 0.0230],
         [0.0229, 0.0230, 0.0228,  ..., 0.0229, 0.0229, 0.0230],
         [0.9312, 0.9309, 0.9316,  ..., 0.9313, 0.9312, 0.9310]],
        [[0.0219, 0.0219, 0.0218,  ..., 0.0223, 0.0215, 0.0221],
         [0.0219, 0.0219, 0.0218,  ..., 0.0223, 0.0215, 0.0221],
         [0.0219, 0.0219, 0.0218,  ..., 0.0223, 0.0215, 0.0221],
         [0.9342, 0.9344, 0.9347,  ..., 0.9332, 0.9355, 0.9337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:55,952 [Process: 0] Synchronize training processes
2024-08-16 15:53:55,953 [Process: 0] Evaluating...
2024-08-16 15:53:55,955 [Process: 0] EPOCH 186:
2024-08-16 15:53:55,957 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7585e-02, 1.7368e-02, 1.7153e-02,  ..., 1.7525e-02,
          1.8161e-02, 1.6653e-02],
         [1.7585e-02, 1.7368e-02, 1.7153e-02,  ..., 1.7525e-02,
          1.8161e-02, 1.6653e-02],
         [1.7585e-02, 1.7368e-02, 1.7153e-02,  ..., 1.7525e-02,
          1.8161e-02, 1.6653e-02],
         [9.4724e-01, 9.4789e-01, 9.4854e-01,  ..., 9.4743e-01,
          9.4552e-01, 9.5004e-01]],
        [[1.7811e-02, 1.6879e-02, 1.7399e-02,  ..., 3.4627e-04,
          1.7226e-02, 1.7859e-02],
         [1.7811e-02, 1.6879e-02, 1.7399e-02,  ..., 3.4627e-04,
          1.7226e-02, 1.7859e-02],
         [1.7811e-02, 1.6879e-02, 1.7399e-02,  ..., 9.9896e-01,
          1.7226e-02, 1.7859e-02],
         [9.4657e-01, 9.4936e-01, 9.4780e-01,  ..., 3.4627e-04,
          9.4832e-01, 9.4642e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 186:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0230, 0.0229, 0.0227,  ..., 0.0228, 0.0229, 0.0229],
         [0.0230, 0.0229, 0.0227,  ..., 0.0228, 0.0229, 0.0229],
         [0.0230, 0.0229, 0.0227,  ..., 0.0228, 0.0229, 0.0229],
         [0.9311, 0.9312, 0.9320,  ..., 0.9316, 0.9313, 0.9314]],
        [[0.0216, 0.0214, 0.0217,  ..., 0.0218, 0.0219, 0.0214],
         [0.0216, 0.0214, 0.0217,  ..., 0.0218, 0.0219, 0.0214],
         [0.0216, 0.0214, 0.0217,  ..., 0.0218, 0.0219, 0.0214],
         [0.9352, 0.9358, 0.9348,  ..., 0.9345, 0.9343, 0.9357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:53:58,025 [Process: 0] Synchronize training processes
2024-08-16 15:53:58,026 [Process: 0] Evaluating...
2024-08-16 15:53:58,028 [Process: 0] EPOCH 187:
2024-08-16 15:53:58,030 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7100e-02, 1.7577e-02, 1.7527e-02,  ..., 1.7110e-02,
          1.8112e-02, 1.7855e-02],
         [1.7100e-02, 1.7577e-02, 1.7527e-02,  ..., 1.7110e-02,
          1.8112e-02, 1.7855e-02],
         [1.7100e-02, 1.7577e-02, 1.7527e-02,  ..., 1.7110e-02,
          1.8112e-02, 1.7855e-02],
         [9.4870e-01, 9.4727e-01, 9.4742e-01,  ..., 9.4867e-01,
          9.4566e-01, 9.4644e-01]],
        [[1.7629e-02, 1.8109e-02, 1.8121e-02,  ..., 7.9316e-04,
          1.7768e-02, 1.7234e-02],
         [1.7629e-02, 1.8109e-02, 1.8121e-02,  ..., 7.9316e-04,
          1.7768e-02, 1.7234e-02],
         [1.7629e-02, 1.8109e-02, 1.8121e-02,  ..., 9.9762e-01,
          1.7768e-02, 1.7234e-02],
         [9.4711e-01, 9.4567e-01, 9.4564e-01,  ..., 7.9316e-04,
          9.4670e-01, 9.4830e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 187:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0226, 0.0228, 0.0225,  ..., 0.0226, 0.0226, 0.0226],
         [0.0226, 0.0228, 0.0225,  ..., 0.0226, 0.0226, 0.0226],
         [0.0226, 0.0228, 0.0225,  ..., 0.0226, 0.0226, 0.0226],
         [0.9321, 0.9317, 0.9325,  ..., 0.9323, 0.9323, 0.9322]],
        [[0.0216, 0.0214, 0.0218,  ..., 0.0213, 0.0209, 0.0215],
         [0.0216, 0.0214, 0.0218,  ..., 0.0213, 0.0209, 0.0215],
         [0.0216, 0.0214, 0.0218,  ..., 0.0213, 0.0209, 0.0215],
         [0.9353, 0.9357, 0.9347,  ..., 0.9361, 0.9374, 0.9355]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:00,098 [Process: 0] Synchronize training processes
2024-08-16 15:54:00,098 [Process: 0] Evaluating...
2024-08-16 15:54:00,100 [Process: 0] EPOCH 188:
2024-08-16 15:54:00,102 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.7147e-02, 1.7813e-02, 1.7030e-02,  ..., 1.7223e-02,
          1.7190e-02, 1.7282e-02],
         [1.7147e-02, 1.7813e-02, 1.7030e-02,  ..., 1.7223e-02,
          1.7190e-02, 1.7282e-02],
         [1.7147e-02, 1.7813e-02, 1.7030e-02,  ..., 1.7223e-02,
          1.7190e-02, 1.7282e-02],
         [9.4856e-01, 9.4656e-01, 9.4891e-01,  ..., 9.4833e-01,
          9.4843e-01, 9.4815e-01]],
        [[1.7266e-02, 1.7261e-02, 1.7329e-02,  ..., 9.3081e-04,
          1.8000e-02, 1.7171e-02],
         [1.7266e-02, 1.7261e-02, 1.7329e-02,  ..., 9.3081e-04,
          1.8000e-02, 1.7171e-02],
         [1.7266e-02, 1.7261e-02, 1.7329e-02,  ..., 9.9721e-01,
          1.8000e-02, 1.7171e-02],
         [9.4820e-01, 9.4822e-01, 9.4801e-01,  ..., 9.3081e-04,
          9.4600e-01, 9.4849e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 188:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0226, 0.0224, 0.0222,  ..., 0.0223, 0.0224, 0.0225],
         [0.0226, 0.0224, 0.0222,  ..., 0.0223, 0.0224, 0.0225],
         [0.0226, 0.0224, 0.0222,  ..., 0.0223, 0.0224, 0.0225],
         [0.9322, 0.9327, 0.9334,  ..., 0.9331, 0.9329, 0.9326]],
        [[0.0209, 0.0215, 0.0213,  ..., 0.0211, 0.0205, 0.0202],
         [0.0209, 0.0215, 0.0213,  ..., 0.0211, 0.0205, 0.0202],
         [0.0209, 0.0215, 0.0213,  ..., 0.0211, 0.0205, 0.0202],
         [0.9374, 0.9354, 0.9361,  ..., 0.9367, 0.9384, 0.9395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:02,193 [Process: 0] Synchronize training processes
2024-08-16 15:54:02,193 [Process: 0] Evaluating...
2024-08-16 15:54:02,195 [Process: 0] EPOCH 189:
2024-08-16 15:54:02,197 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0172, 0.0172, 0.0174,  ..., 0.0175, 0.0175, 0.0176],
         [0.0172, 0.0172, 0.0174,  ..., 0.0175, 0.0175, 0.0176],
         [0.0172, 0.0172, 0.0174,  ..., 0.0175, 0.0175, 0.0176],
         [0.9483, 0.9484, 0.9479,  ..., 0.9475, 0.9476, 0.9473]],
        [[0.0171, 0.0166, 0.0172,  ..., 0.0027, 0.0181, 0.0173],
         [0.0171, 0.0166, 0.0172,  ..., 0.0027, 0.0181, 0.0173],
         [0.0171, 0.0166, 0.0172,  ..., 0.9920, 0.0181, 0.0173],
         [0.9486, 0.9501, 0.9485,  ..., 0.0027, 0.9458, 0.9480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 189:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0221, 0.0224, 0.0222,  ..., 0.0220, 0.0222, 0.0224],
         [0.0221, 0.0224, 0.0222,  ..., 0.0220, 0.0222, 0.0224],
         [0.0221, 0.0224, 0.0222,  ..., 0.0220, 0.0222, 0.0224],
         [0.9338, 0.9329, 0.9333,  ..., 0.9339, 0.9334, 0.9329]],
        [[0.0205, 0.0210, 0.0208,  ..., 0.0203, 0.0205, 0.0206],
         [0.0205, 0.0210, 0.0208,  ..., 0.0203, 0.0205, 0.0206],
         [0.0205, 0.0210, 0.0208,  ..., 0.0203, 0.0205, 0.0206],
         [0.9386, 0.9369, 0.9376,  ..., 0.9392, 0.9386, 0.9382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:04,286 [Process: 0] Synchronize training processes
2024-08-16 15:54:04,286 [Process: 0] Evaluating...
2024-08-16 15:54:04,288 [Process: 0] EPOCH 190:
2024-08-16 15:54:04,290 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6856e-02, 1.7505e-02, 1.6517e-02,  ..., 1.7606e-02,
          1.6162e-02, 1.6598e-02],
         [1.6856e-02, 1.7505e-02, 1.6517e-02,  ..., 1.7606e-02,
          1.6162e-02, 1.6598e-02],
         [1.6856e-02, 1.7505e-02, 1.6517e-02,  ..., 1.7606e-02,
          1.6162e-02, 1.6598e-02],
         [9.4943e-01, 9.4749e-01, 9.5045e-01,  ..., 9.4718e-01,
          9.5152e-01, 9.5021e-01]],
        [[1.7798e-02, 1.7479e-02, 1.6896e-02,  ..., 2.5113e-04,
          1.7630e-02, 1.7368e-02],
         [1.7798e-02, 1.7479e-02, 1.6896e-02,  ..., 2.5113e-04,
          1.7630e-02, 1.7368e-02],
         [1.7798e-02, 1.7479e-02, 1.6896e-02,  ..., 9.9925e-01,
          1.7630e-02, 1.7368e-02],
         [9.4661e-01, 9.4756e-01, 9.4931e-01,  ..., 2.5113e-04,
          9.4711e-01, 9.4789e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 190:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0223, 0.0221, 0.0222,  ..., 0.0219, 0.0222, 0.0219],
         [0.0223, 0.0221, 0.0222,  ..., 0.0219, 0.0222, 0.0219],
         [0.0223, 0.0221, 0.0222,  ..., 0.0219, 0.0222, 0.0219],
         [0.9331, 0.9336, 0.9335,  ..., 0.9342, 0.9335, 0.9343]],
        [[0.0208, 0.0205, 0.0212,  ..., 0.0202, 0.0210, 0.0206],
         [0.0208, 0.0205, 0.0212,  ..., 0.0202, 0.0210, 0.0206],
         [0.0208, 0.0205, 0.0212,  ..., 0.0202, 0.0210, 0.0206],
         [0.9375, 0.9386, 0.9364,  ..., 0.9395, 0.9369, 0.9381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:06,380 [Process: 0] Synchronize training processes
2024-08-16 15:54:06,381 [Process: 0] Evaluating...
2024-08-16 15:54:06,383 [Process: 0] EPOCH 191:
2024-08-16 15:54:06,385 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0166, 0.0163, 0.0169,  ..., 0.0164, 0.0157, 0.0169],
         [0.0166, 0.0163, 0.0169,  ..., 0.0164, 0.0157, 0.0169],
         [0.0166, 0.0163, 0.0169,  ..., 0.0164, 0.0157, 0.0169],
         [0.9503, 0.9511, 0.9492,  ..., 0.9509, 0.9528, 0.9493]],
        [[0.0170, 0.0169, 0.0173,  ..., 0.0036, 0.0171, 0.0173],
         [0.0170, 0.0169, 0.0173,  ..., 0.0036, 0.0171, 0.0173],
         [0.0170, 0.0169, 0.0173,  ..., 0.9892, 0.0171, 0.0173],
         [0.9490, 0.9493, 0.9480,  ..., 0.0036, 0.9487, 0.9482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 191:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0221, 0.0218, 0.0220,  ..., 0.0219, 0.0215, 0.0220],
         [0.0221, 0.0218, 0.0220,  ..., 0.0219, 0.0215, 0.0220],
         [0.0221, 0.0218, 0.0220,  ..., 0.0219, 0.0215, 0.0220],
         [0.9337, 0.9347, 0.9339,  ..., 0.9343, 0.9355, 0.9341]],
        [[0.0203, 0.0198, 0.0207,  ..., 0.0211, 0.0209, 0.0207],
         [0.0203, 0.0198, 0.0207,  ..., 0.0211, 0.0209, 0.0207],
         [0.0203, 0.0198, 0.0207,  ..., 0.0211, 0.0209, 0.0207],
         [0.9392, 0.9406, 0.9378,  ..., 0.9367, 0.9372, 0.9380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:08,479 [Process: 0] Synchronize training processes
2024-08-16 15:54:08,480 [Process: 0] Evaluating...
2024-08-16 15:54:08,489 [Process: 0] EPOCH 192:
2024-08-16 15:54:08,492 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0167, 0.0167, 0.0169,  ..., 0.0169, 0.0173, 0.0172],
         [0.0167, 0.0167, 0.0169,  ..., 0.0169, 0.0173, 0.0172],
         [0.0167, 0.0167, 0.0169,  ..., 0.0169, 0.0173, 0.0172],
         [0.9499, 0.9499, 0.9494,  ..., 0.9494, 0.9482, 0.9484]],
        [[0.0175, 0.0169, 0.0171,  ..., 0.0040, 0.0170, 0.0171],
         [0.0175, 0.0169, 0.0171,  ..., 0.0040, 0.0170, 0.0171],
         [0.0175, 0.0169, 0.0171,  ..., 0.9880, 0.0170, 0.0171],
         [0.9476, 0.9492, 0.9487,  ..., 0.0040, 0.9490, 0.9486]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 192:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:54:10,573 [Process: 0] Synchronize training processes
2024-08-16 15:54:10,574 [Process: 0] Evaluating...
2024-08-16 15:54:10,576 [Process: 0] EPOCH 193:
2024-08-16 15:54:10,578 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0218, 0.0217, 0.0218,  ..., 0.0219, 0.0217, 0.0220],
         [0.0218, 0.0217, 0.0218,  ..., 0.0219, 0.0217, 0.0220],
         [0.0218, 0.0217, 0.0218,  ..., 0.0219, 0.0217, 0.0220],
         [0.9346, 0.9348, 0.9346,  ..., 0.9342, 0.9350, 0.9340]],
        [[0.0206, 0.0214, 0.0201,  ..., 0.0204, 0.0207, 0.0202],
         [0.0206, 0.0214, 0.0201,  ..., 0.0204, 0.0207, 0.0202],
         [0.0206, 0.0214, 0.0201,  ..., 0.0204, 0.0207, 0.0202],
         [0.9382, 0.9359, 0.9397,  ..., 0.9389, 0.9379, 0.9394]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0168, 0.0170,  ..., 0.0164, 0.0161, 0.0169],
         [0.0163, 0.0168, 0.0170,  ..., 0.0164, 0.0161, 0.0169],
         [0.0163, 0.0168, 0.0170,  ..., 0.0164, 0.0161, 0.0169],
         [0.9511, 0.9497, 0.9491,  ..., 0.9508, 0.9517, 0.9492]],
        [[0.0166, 0.0171, 0.0174,  ..., 0.0021, 0.0168, 0.0170],
         [0.0166, 0.0171, 0.0174,  ..., 0.0021, 0.0168, 0.0170],
         [0.0166, 0.0171, 0.0174,  ..., 0.9938, 0.0168, 0.0170],
         [0.9502, 0.9486, 0.9479,  ..., 0.0021, 0.9497, 0.9491]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 193:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:12,681 [Process: 0] Synchronize training processes
2024-08-16 15:54:12,682 [Process: 0] Evaluating...
2024-08-16 15:54:12,684 [Process: 0] EPOCH 194:
2024-08-16 15:54:12,686 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0216, 0.0216, 0.0217,  ..., 0.0216, 0.0216, 0.0218],
         [0.0216, 0.0216, 0.0217,  ..., 0.0216, 0.0216, 0.0218],
         [0.0216, 0.0216, 0.0217,  ..., 0.0216, 0.0216, 0.0218],
         [0.9353, 0.9353, 0.9349,  ..., 0.9352, 0.9352, 0.9346]],
        [[0.0196, 0.0197, 0.0202,  ..., 0.0202, 0.0200, 0.0200],
         [0.0196, 0.0197, 0.0202,  ..., 0.0202, 0.0200, 0.0200],
         [0.0196, 0.0197, 0.0202,  ..., 0.0202, 0.0200, 0.0200],
         [0.9411, 0.9408, 0.9393,  ..., 0.9393, 0.9399, 0.9399]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6086e-02, 1.5390e-02, 1.6782e-02,  ..., 1.6503e-02,
          1.6503e-02, 1.6211e-02],
         [1.6086e-02, 1.5390e-02, 1.6782e-02,  ..., 1.6503e-02,
          1.6503e-02, 1.6211e-02],
         [1.6086e-02, 1.5390e-02, 1.6782e-02,  ..., 1.6503e-02,
          1.6503e-02, 1.6211e-02],
         [9.5174e-01, 9.5383e-01, 9.4965e-01,  ..., 9.5049e-01,
          9.5049e-01, 9.5137e-01]],
        [[1.6136e-02, 1.6310e-02, 1.6434e-02,  ..., 9.3776e-04,
          1.7107e-02, 1.7015e-02],
         [1.6136e-02, 1.6310e-02, 1.6434e-02,  ..., 9.3776e-04,
          1.7107e-02, 1.7015e-02],
         [1.6136e-02, 1.6310e-02, 1.6434e-02,  ..., 9.9719e-01,
          1.7107e-02, 1.7015e-02],
         [9.5159e-01, 9.5107e-01, 9.5070e-01,  ..., 9.3776e-04,
          9.4868e-01, 9.4895e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 194:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0217, 0.0215, 0.0214,  ..., 0.0214, 0.0212, 0.0213],
         [0.0217, 0.0215, 0.0214,  ..., 0.0214, 0.0212, 0.0213],
         [0.0217, 0.0215, 0.0214,  ..., 0.0214, 0.0212, 0.0213],
         [0.9350, 0.9356, 0.9358,  ..., 0.9359, 0.9363, 0.9361]],
        [[0.0207, 0.0203, 0.0206,  ..., 0.0205, 0.0209, 0.0203],
         [0.0207, 0.0203, 0.0206,  ..., 0.0205, 0.0209, 0.0203],
         [0.0207, 0.0203, 0.0206,  ..., 0.0205, 0.0209, 0.0203],
         [0.9379, 0.9390, 0.9382,  ..., 0.9385, 0.9372, 0.9392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0166, 0.0158, 0.0160,  ..., 0.0165, 0.0164, 0.0163],
         [0.0166, 0.0158, 0.0160,  ..., 0.0165, 0.0164, 0.0163],
         [0.0166, 0.0158, 0.0160,  ..., 0.0165, 0.0164, 0.0163],
         [0.9502, 0.9527, 0.9521,  ..., 0.9506, 0.9507, 0.9510]],
        [[0.0161, 0.0163, 0.0163,  ..., 0.0014, 0.0165, 0.0157],
         [0.0161, 0.0163, 0.0163,  ..., 0.0014, 0.0165, 0.0157],
         [0.0161, 0.0163, 0.0163,  ..., 0.9957, 0.0165, 0.0157],
         [0.9518, 0.9512, 0.9510,  ..., 0.0014, 0.9505, 0.9528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 195:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:14,779 [Process: 0] Synchronize training processes
2024-08-16 15:54:14,780 [Process: 0] Evaluating...
2024-08-16 15:54:14,782 [Process: 0] EPOCH 195:
2024-08-16 15:54:14,784 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:16,868 [Process: 0] Synchronize training processes
2024-08-16 15:54:16,868 [Process: 0] Evaluating...
2024-08-16 15:54:16,870 [Process: 0] EPOCH 196:
2024-08-16 15:54:16,873 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0212, 0.0213, 0.0211,  ..., 0.0213, 0.0212, 0.0210],
         [0.0212, 0.0213, 0.0211,  ..., 0.0213, 0.0212, 0.0210],
         [0.0212, 0.0213, 0.0211,  ..., 0.0213, 0.0212, 0.0210],
         [0.9365, 0.9360, 0.9366,  ..., 0.9361, 0.9363, 0.9369]],
        [[0.0203, 0.0198, 0.0203,  ..., 0.0196, 0.0195, 0.0204],
         [0.0203, 0.0198, 0.0203,  ..., 0.0196, 0.0195, 0.0204],
         [0.0203, 0.0198, 0.0203,  ..., 0.0196, 0.0195, 0.0204],
         [0.9390, 0.9406, 0.9392,  ..., 0.9411, 0.9415, 0.9388]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0162, 0.0155,  ..., 0.0165, 0.0157, 0.0157],
         [0.0157, 0.0162, 0.0155,  ..., 0.0165, 0.0157, 0.0157],
         [0.0157, 0.0162, 0.0155,  ..., 0.0165, 0.0157, 0.0157],
         [0.9530, 0.9515, 0.9534,  ..., 0.9504, 0.9528, 0.9530]],
        [[0.0161, 0.0163, 0.0160,  ..., 0.0017, 0.0160, 0.0158],
         [0.0161, 0.0163, 0.0160,  ..., 0.0017, 0.0160, 0.0158],
         [0.0161, 0.0163, 0.0160,  ..., 0.9950, 0.0160, 0.0158],
         [0.9516, 0.9510, 0.9520,  ..., 0.0017, 0.9520, 0.9525]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 196:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0209, 0.0211, 0.0210,  ..., 0.0211, 0.0212, 0.0211],
         [0.0209, 0.0211, 0.0210,  ..., 0.0211, 0.0212, 0.0211],
         [0.0209, 0.0211, 0.0210,  ..., 0.0211, 0.0212, 0.0211],
         [0.9372, 0.9368, 0.9371,  ..., 0.9368, 0.9363, 0.9367]],
        [[0.0201, 0.0198, 0.0205,  ..., 0.0189, 0.0199, 0.0203],
         [0.0201, 0.0198, 0.0205,  ..., 0.0189, 0.0199, 0.0203],
         [0.0201, 0.0198, 0.0205,  ..., 0.0189, 0.0199, 0.0203],
         [0.9398, 0.9407, 0.9385,  ..., 0.9433, 0.9403, 0.9392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.6256e-02, 1.6107e-02, 1.5387e-02,  ..., 1.6260e-02,
          1.5553e-02, 1.5803e-02],
         [1.6256e-02, 1.6107e-02, 1.5387e-02,  ..., 1.6260e-02,
          1.5553e-02, 1.5803e-02],
         [1.6256e-02, 1.6107e-02, 1.5387e-02,  ..., 1.6260e-02,
          1.5553e-02, 1.5803e-02],
         [9.5123e-01, 9.5168e-01, 9.5384e-01,  ..., 9.5122e-01,
          9.5334e-01, 9.5259e-01]],
        [[1.5779e-02, 1.6327e-02, 1.6114e-02,  ..., 7.9327e-04,
          1.6765e-02, 1.6865e-02],
         [1.5779e-02, 1.6327e-02, 1.6114e-02,  ..., 7.9327e-04,
          1.6765e-02, 1.6865e-02],
         [1.5779e-02, 1.6327e-02, 1.6114e-02,  ..., 9.9762e-01,
          1.6765e-02, 1.6865e-02],
         [9.5266e-01, 9.5102e-01, 9.5166e-01,  ..., 7.9327e-04,
          9.4971e-01, 9.4941e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 197:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:18,959 [Process: 0] Synchronize training processes
2024-08-16 15:54:18,959 [Process: 0] Evaluating...
2024-08-16 15:54:18,961 [Process: 0] EPOCH 197:
2024-08-16 15:54:18,963 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0209, 0.0207, 0.0205,  ..., 0.0209, 0.0208, 0.0207],
         [0.0209, 0.0207, 0.0205,  ..., 0.0209, 0.0208, 0.0207],
         [0.0209, 0.0207, 0.0205,  ..., 0.0209, 0.0208, 0.0207],
         [0.9373, 0.9380, 0.9385,  ..., 0.9374, 0.9375, 0.9378]],
        [[0.0205, 0.0212, 0.0202,  ..., 0.0199, 0.0190, 0.0202],
         [0.0205, 0.0212, 0.0202,  ..., 0.0199, 0.0190, 0.0202],
         [0.0205, 0.0212, 0.0202,  ..., 0.0199, 0.0190, 0.0202],
         [0.9384, 0.9363, 0.9395,  ..., 0.9403, 0.9431, 0.9395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0161, 0.0150,  ..., 0.0163, 0.0153, 0.0160],
         [0.0152, 0.0161, 0.0150,  ..., 0.0163, 0.0153, 0.0160],
         [0.0152, 0.0161, 0.0150,  ..., 0.0163, 0.0153, 0.0160],
         [0.9543, 0.9516, 0.9550,  ..., 0.9512, 0.9542, 0.9520]],
        [[0.0162, 0.0160, 0.0160,  ..., 0.0103, 0.0161, 0.0161],
         [0.0162, 0.0160, 0.0160,  ..., 0.0103, 0.0161, 0.0161],
         [0.0162, 0.0160, 0.0160,  ..., 0.9691, 0.0161, 0.0161],
         [0.9515, 0.9520, 0.9521,  ..., 0.0103, 0.9517, 0.9516]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 198:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:21,032 [Process: 0] Synchronize training processes
2024-08-16 15:54:21,033 [Process: 0] Evaluating...
2024-08-16 15:54:21,035 [Process: 0] EPOCH 198:
2024-08-16 15:54:21,037 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0203, 0.0204, 0.0205,  ..., 0.0202, 0.0203, 0.0203],
         [0.0203, 0.0204, 0.0205,  ..., 0.0202, 0.0203, 0.0203],
         [0.0203, 0.0204, 0.0205,  ..., 0.0202, 0.0203, 0.0203],
         [0.9391, 0.9387, 0.9385,  ..., 0.9395, 0.9391, 0.9390]],
        [[0.0213, 0.0221, 0.0217,  ..., 0.0215, 0.0186, 0.0206],
         [0.0213, 0.0221, 0.0217,  ..., 0.0215, 0.0186, 0.0206],
         [0.0213, 0.0221, 0.0217,  ..., 0.0215, 0.0186, 0.0206],
         [0.9361, 0.9336, 0.9348,  ..., 0.9356, 0.9442, 0.9382]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0164, 0.0159, 0.0155,  ..., 0.0161, 0.0156, 0.0163],
         [0.0164, 0.0159, 0.0155,  ..., 0.0161, 0.0156, 0.0163],
         [0.0164, 0.0159, 0.0155,  ..., 0.0161, 0.0156, 0.0163],
         [0.9508, 0.9523, 0.9534,  ..., 0.9518, 0.9533, 0.9512]],
        [[0.0154, 0.0159, 0.0158,  ..., 0.0035, 0.0156, 0.0163],
         [0.0154, 0.0159, 0.0158,  ..., 0.0035, 0.0156, 0.0163],
         [0.0154, 0.0159, 0.0158,  ..., 0.9894, 0.0156, 0.0163],
         [0.9537, 0.9524, 0.9526,  ..., 0.0035, 0.9532, 0.9510]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 199:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:23,127 [Process: 0] Synchronize training processes
2024-08-16 15:54:23,127 [Process: 0] Evaluating...
2024-08-16 15:54:23,129 [Process: 0] EPOCH 199:
2024-08-16 15:54:23,131 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0203, 0.0203, 0.0205,  ..., 0.0203, 0.0203, 0.0203],
         [0.0203, 0.0203, 0.0205,  ..., 0.0203, 0.0203, 0.0203],
         [0.0203, 0.0203, 0.0205,  ..., 0.0203, 0.0203, 0.0203],
         [0.9391, 0.9390, 0.9385,  ..., 0.9391, 0.9391, 0.9390]],
        [[0.0194, 0.0192, 0.0196,  ..., 0.0197, 0.0190, 0.0192],
         [0.0194, 0.0192, 0.0196,  ..., 0.0197, 0.0190, 0.0192],
         [0.0194, 0.0192, 0.0196,  ..., 0.0197, 0.0190, 0.0192],
         [0.9417, 0.9423, 0.9412,  ..., 0.9409, 0.9430, 0.9423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5803e-02, 1.5240e-02, 1.5558e-02,  ..., 1.5214e-02,
          1.5750e-02, 1.5934e-02],
         [1.5803e-02, 1.5240e-02, 1.5558e-02,  ..., 1.5214e-02,
          1.5750e-02, 1.5934e-02],
         [1.5803e-02, 1.5240e-02, 1.5558e-02,  ..., 1.5214e-02,
          1.5750e-02, 1.5934e-02],
         [9.5259e-01, 9.5428e-01, 9.5333e-01,  ..., 9.5436e-01,
          9.5275e-01, 9.5220e-01]],
        [[1.5944e-02, 1.5866e-02, 1.5293e-02,  ..., 8.2530e-04,
          1.5755e-02, 1.6137e-02],
         [1.5944e-02, 1.5866e-02, 1.5293e-02,  ..., 8.2530e-04,
          1.5755e-02, 1.6137e-02],
         [1.5944e-02, 1.5866e-02, 1.5293e-02,  ..., 9.9752e-01,
          1.5755e-02, 1.6137e-02],
         [9.5217e-01, 9.5240e-01, 9.5412e-01,  ..., 8.2530e-04,
          9.5274e-01, 9.5159e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 200:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:25,209 [Process: 0] Synchronize training processes
2024-08-16 15:54:25,209 [Process: 0] Evaluating...
2024-08-16 15:54:25,211 [Process: 0] EPOCH 200:
2024-08-16 15:54:25,213 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0197, 0.0196, 0.0196,  ..., 0.0197, 0.0197, 0.0196],
         [0.0197, 0.0196, 0.0196,  ..., 0.0197, 0.0197, 0.0196],
         [0.0197, 0.0196, 0.0196,  ..., 0.0197, 0.0197, 0.0196],
         [0.9410, 0.9413, 0.9412,  ..., 0.9408, 0.9410, 0.9413]],
        [[0.0190, 0.0189, 0.0186,  ..., 0.0181, 0.0183, 0.0185],
         [0.0190, 0.0189, 0.0186,  ..., 0.0181, 0.0183, 0.0185],
         [0.0190, 0.0189, 0.0186,  ..., 0.0181, 0.0183, 0.0185],
         [0.9430, 0.9433, 0.9443,  ..., 0.9456, 0.9450, 0.9445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0153, 0.0157, 0.0149,  ..., 0.0153, 0.0169, 0.0156],
         [0.0153, 0.0157, 0.0149,  ..., 0.0153, 0.0169, 0.0156],
         [0.0153, 0.0157, 0.0149,  ..., 0.0153, 0.0169, 0.0156],
         [0.9541, 0.9528, 0.9552,  ..., 0.9541, 0.9493, 0.9531]],
        [[0.0155, 0.0148, 0.0155,  ..., 0.0056, 0.0161, 0.0157],
         [0.0155, 0.0148, 0.0155,  ..., 0.0056, 0.0161, 0.0157],
         [0.0155, 0.0148, 0.0155,  ..., 0.9831, 0.0161, 0.0157],
         [0.9535, 0.9555, 0.9535,  ..., 0.0056, 0.9518, 0.9528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 201:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:27,295 [Process: 0] Synchronize training processes
2024-08-16 15:54:27,295 [Process: 0] Evaluating...
2024-08-16 15:54:27,297 [Process: 0] EPOCH 201:
2024-08-16 15:54:27,299 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0196, 0.0200, 0.0201,  ..., 0.0200, 0.0200, 0.0200],
         [0.0196, 0.0200, 0.0201,  ..., 0.0200, 0.0200, 0.0200],
         [0.0196, 0.0200, 0.0201,  ..., 0.0200, 0.0200, 0.0200],
         [0.9412, 0.9401, 0.9397,  ..., 0.9400, 0.9400, 0.9401]],
        [[0.0192, 0.0192, 0.0189,  ..., 0.0190, 0.0192, 0.0193],
         [0.0192, 0.0192, 0.0189,  ..., 0.0190, 0.0192, 0.0193],
         [0.0192, 0.0192, 0.0189,  ..., 0.0190, 0.0192, 0.0193],
         [0.9423, 0.9423, 0.9434,  ..., 0.9430, 0.9425, 0.9421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0156, 0.0155, 0.0153,  ..., 0.0158, 0.0147, 0.0151],
         [0.0156, 0.0155, 0.0153,  ..., 0.0158, 0.0147, 0.0151],
         [0.0156, 0.0155, 0.0153,  ..., 0.0158, 0.0147, 0.0151],
         [0.9533, 0.9536, 0.9542,  ..., 0.9527, 0.9560, 0.9548]],
        [[0.0159, 0.0163, 0.0154,  ..., 0.0017, 0.0158, 0.0157],
         [0.0159, 0.0163, 0.0154,  ..., 0.0017, 0.0158, 0.0157],
         [0.0159, 0.0163, 0.0154,  ..., 0.9948, 0.0158, 0.0157],
         [0.9524, 0.9511, 0.9539,  ..., 0.0017, 0.9525, 0.9530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:29,411 [Process: 0] Synchronize training processes
2024-08-16 15:54:29,412 [Process: 0] Evaluating...
2024-08-16 15:54:29,420 [Process: 0] EPOCH 202:
2024-08-16 15:54:29,422 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 202:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0201, 0.0199, 0.0198,  ..., 0.0199, 0.0200, 0.0202],
         [0.0201, 0.0199, 0.0198,  ..., 0.0199, 0.0200, 0.0202],
         [0.0201, 0.0199, 0.0198,  ..., 0.0199, 0.0200, 0.0202],
         [0.9397, 0.9403, 0.9406,  ..., 0.9403, 0.9401, 0.9395]],
        [[0.0192, 0.0193, 0.0191,  ..., 0.0195, 0.0197, 0.0190],
         [0.0192, 0.0193, 0.0191,  ..., 0.0195, 0.0197, 0.0190],
         [0.0192, 0.0193, 0.0191,  ..., 0.0195, 0.0197, 0.0190],
         [0.9423, 0.9422, 0.9426,  ..., 0.9416, 0.9409, 0.9429]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 15:54:31,509 [Process: 0] Synchronize training processes
2024-08-16 15:54:31,510 [Process: 0] Evaluating...
2024-08-16 15:54:31,512 [Process: 0] EPOCH 203:
2024-08-16 15:54:31,514 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[1.4789e-02, 1.4572e-02, 1.4724e-02,  ..., 1.5836e-02,
          1.5474e-02, 1.6069e-02],
         [1.4789e-02, 1.4572e-02, 1.4724e-02,  ..., 1.5836e-02,
          1.5474e-02, 1.6069e-02],
         [1.4789e-02, 1.4572e-02, 1.4724e-02,  ..., 1.5836e-02,
          1.5474e-02, 1.6069e-02],
         [9.5563e-01, 9.5628e-01, 9.5583e-01,  ..., 9.5249e-01,
          9.5358e-01, 9.5179e-01]],
        [[1.5951e-02, 1.5237e-02, 1.5977e-02,  ..., 1.8168e-04,
          1.5996e-02, 1.5078e-02],
         [1.5951e-02, 1.5237e-02, 1.5977e-02,  ..., 1.8168e-04,
          1.5996e-02, 1.5078e-02],
         [1.5951e-02, 1.5237e-02, 1.5977e-02,  ..., 9.9945e-01,
          1.5996e-02, 1.5078e-02],
         [9.5215e-01, 9.5429e-01, 9.5207e-01,  ..., 1.8168e-04,
          9.5201e-01, 9.5477e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 203:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0197, 0.0194, 0.0196,  ..., 0.0195, 0.0194, 0.0197],
         [0.0197, 0.0194, 0.0196,  ..., 0.0195, 0.0194, 0.0197],
         [0.0197, 0.0194, 0.0196,  ..., 0.0195, 0.0194, 0.0197],
         [0.9410, 0.9417, 0.9413,  ..., 0.9416, 0.9419, 0.9409]],
        [[0.0187, 0.0190, 0.0192,  ..., 0.0193, 0.0189, 0.0187],
         [0.0187, 0.0190, 0.0192,  ..., 0.0193, 0.0189, 0.0187],
         [0.0187, 0.0190, 0.0192,  ..., 0.0193, 0.0189, 0.0187],
         [0.9440, 0.9430, 0.9425,  ..., 0.9422, 0.9434, 0.9440]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 15:54:33,616 [Process: 0] Synchronize training processes
2024-08-16 15:54:33,616 [Process: 0] Evaluating...
2024-08-16 15:54:33,618 [Process: 0] EPOCH 204:
2024-08-16 15:54:33,620 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.5255e-02, 1.5014e-02, 1.5224e-02,  ..., 1.5349e-02,
          1.4356e-02, 1.5286e-02],
         [1.5255e-02, 1.5014e-02, 1.5224e-02,  ..., 1.5349e-02,
          1.4356e-02, 1.5286e-02],
         [1.5255e-02, 1.5014e-02, 1.5224e-02,  ..., 1.5349e-02,
          1.4356e-02, 1.5286e-02],
         [9.5424e-01, 9.5496e-01, 9.5433e-01,  ..., 9.5395e-01,
          9.5693e-01, 9.5414e-01]],
        [[1.5489e-02, 1.5377e-02, 1.4531e-02,  ..., 1.7644e-04,
          1.5260e-02, 1.4877e-02],
         [1.5489e-02, 1.5377e-02, 1.4531e-02,  ..., 1.7644e-04,
          1.5260e-02, 1.4877e-02],
         [1.5489e-02, 1.5377e-02, 1.4531e-02,  ..., 9.9947e-01,
          1.5260e-02, 1.4877e-02],
         [9.5353e-01, 9.5387e-01, 9.5641e-01,  ..., 1.7644e-04,
          9.5422e-01, 9.5537e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 204:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0196, 0.0194, 0.0196,  ..., 0.0196, 0.0195, 0.0196],
         [0.0196, 0.0194, 0.0196,  ..., 0.0196, 0.0195, 0.0196],
         [0.0196, 0.0194, 0.0196,  ..., 0.0196, 0.0195, 0.0196],
         [0.9413, 0.9417, 0.9411,  ..., 0.9412, 0.9415, 0.9412]],
        [[0.0187, 0.0187, 0.0189,  ..., 0.0190, 0.0188, 0.0192],
         [0.0187, 0.0187, 0.0189,  ..., 0.0190, 0.0188, 0.0192],
         [0.0187, 0.0187, 0.0189,  ..., 0.0190, 0.0188, 0.0192],
         [0.9439, 0.9439, 0.9433,  ..., 0.9430, 0.9436, 0.9425]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:35,704 [Process: 0] Synchronize training processes
2024-08-16 15:54:35,705 [Process: 0] Evaluating...
2024-08-16 15:54:35,707 [Process: 0] EPOCH 205:
2024-08-16 15:54:35,709 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0148, 0.0147, 0.0150,  ..., 0.0156, 0.0160, 0.0152],
         [0.0148, 0.0147, 0.0150,  ..., 0.0156, 0.0160, 0.0152],
         [0.0148, 0.0147, 0.0150,  ..., 0.0156, 0.0160, 0.0152],
         [0.9556, 0.9558, 0.9549,  ..., 0.9532, 0.9519, 0.9545]],
        [[0.0157, 0.0150, 0.0154,  ..., 0.0034, 0.0152, 0.0145],
         [0.0157, 0.0150, 0.0154,  ..., 0.0034, 0.0152, 0.0145],
         [0.0157, 0.0150, 0.0154,  ..., 0.9899, 0.0152, 0.0145],
         [0.9529, 0.9550, 0.9538,  ..., 0.0034, 0.9545, 0.9564]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 205:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0193, 0.0194, 0.0196,  ..., 0.0193, 0.0195, 0.0194],
         [0.0193, 0.0194, 0.0196,  ..., 0.0193, 0.0195, 0.0194],
         [0.0193, 0.0194, 0.0196,  ..., 0.0193, 0.0195, 0.0194],
         [0.9420, 0.9417, 0.9413,  ..., 0.9421, 0.9416, 0.9417]],
        [[0.0184, 0.0183, 0.0188,  ..., 0.0184, 0.0192, 0.0189],
         [0.0184, 0.0183, 0.0188,  ..., 0.0184, 0.0192, 0.0189],
         [0.0184, 0.0183, 0.0188,  ..., 0.0184, 0.0192, 0.0189],
         [0.9448, 0.9450, 0.9437,  ..., 0.9449, 0.9425, 0.9432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:37,788 [Process: 0] Synchronize training processes
2024-08-16 15:54:37,788 [Process: 0] Evaluating...
2024-08-16 15:54:37,790 [Process: 0] EPOCH 206:
2024-08-16 15:54:37,792 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4783e-02, 1.5076e-02, 1.5117e-02,  ..., 1.5083e-02,
          1.5382e-02, 1.5292e-02],
         [1.4783e-02, 1.5076e-02, 1.5117e-02,  ..., 1.5083e-02,
          1.5382e-02, 1.5292e-02],
         [1.4783e-02, 1.5076e-02, 1.5117e-02,  ..., 1.5083e-02,
          1.5382e-02, 1.5292e-02],
         [9.5565e-01, 9.5477e-01, 9.5465e-01,  ..., 9.5475e-01,
          9.5385e-01, 9.5412e-01]],
        [[1.5190e-02, 1.4966e-02, 1.4992e-02,  ..., 7.7609e-04,
          1.5175e-02, 1.5034e-02],
         [1.5190e-02, 1.4966e-02, 1.4992e-02,  ..., 7.7609e-04,
          1.5175e-02, 1.5034e-02],
         [1.5190e-02, 1.4966e-02, 1.4992e-02,  ..., 9.9767e-01,
          1.5175e-02, 1.5034e-02],
         [9.5443e-01, 9.5510e-01, 9.5503e-01,  ..., 7.7609e-04,
          9.5448e-01, 9.5490e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 206:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0193, 0.0194, 0.0190,  ..., 0.0191, 0.0190, 0.0193],
         [0.0193, 0.0194, 0.0190,  ..., 0.0191, 0.0190, 0.0193],
         [0.0193, 0.0194, 0.0190,  ..., 0.0191, 0.0190, 0.0193],
         [0.9421, 0.9419, 0.9430,  ..., 0.9426, 0.9430, 0.9421]],
        [[0.0181, 0.0187, 0.0187,  ..., 0.0184, 0.0188, 0.0181],
         [0.0181, 0.0187, 0.0187,  ..., 0.0184, 0.0188, 0.0181],
         [0.0181, 0.0187, 0.0187,  ..., 0.0184, 0.0188, 0.0181],
         [0.9458, 0.9440, 0.9439,  ..., 0.9447, 0.9435, 0.9458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:39,888 [Process: 0] Synchronize training processes
2024-08-16 15:54:39,888 [Process: 0] Evaluating...
2024-08-16 15:54:39,890 [Process: 0] EPOCH 207:
2024-08-16 15:54:39,892 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4930e-02, 1.5265e-02, 1.4875e-02,  ..., 1.4665e-02,
          1.4060e-02, 1.5845e-02],
         [1.4930e-02, 1.5265e-02, 1.4875e-02,  ..., 1.4665e-02,
          1.4060e-02, 1.5845e-02],
         [1.4930e-02, 1.5265e-02, 1.4875e-02,  ..., 1.4665e-02,
          1.4060e-02, 1.5845e-02],
         [9.5521e-01, 9.5420e-01, 9.5538e-01,  ..., 9.5601e-01,
          9.5782e-01, 9.5247e-01]],
        [[1.5671e-02, 1.5137e-02, 1.4946e-02,  ..., 3.3382e-04,
          1.4564e-02, 1.4958e-02],
         [1.5671e-02, 1.5137e-02, 1.4946e-02,  ..., 3.3382e-04,
          1.4564e-02, 1.4958e-02],
         [1.5671e-02, 1.5137e-02, 1.4946e-02,  ..., 9.9900e-01,
          1.4564e-02, 1.4958e-02],
         [9.5299e-01, 9.5459e-01, 9.5516e-01,  ..., 3.3382e-04,
          9.5631e-01, 9.5513e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 207:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0189, 0.0193, 0.0192,  ..., 0.0190, 0.0194, 0.0194],
         [0.0189, 0.0193, 0.0192,  ..., 0.0190, 0.0194, 0.0194],
         [0.0189, 0.0193, 0.0192,  ..., 0.0190, 0.0194, 0.0194],
         [0.9432, 0.9420, 0.9425,  ..., 0.9431, 0.9419, 0.9417]],
        [[0.0182, 0.0182, 0.0179,  ..., 0.0180, 0.0186, 0.0184],
         [0.0182, 0.0182, 0.0179,  ..., 0.0180, 0.0186, 0.0184],
         [0.0182, 0.0182, 0.0179,  ..., 0.0180, 0.0186, 0.0184],
         [0.9454, 0.9453, 0.9464,  ..., 0.9459, 0.9442, 0.9449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:41,981 [Process: 0] Synchronize training processes
2024-08-16 15:54:41,981 [Process: 0] Evaluating...
2024-08-16 15:54:41,983 [Process: 0] EPOCH 208:
2024-08-16 15:54:41,985 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4499e-02, 1.4638e-02, 1.4394e-02,  ..., 1.4995e-02,
          1.4788e-02, 1.4851e-02],
         [1.4499e-02, 1.4638e-02, 1.4394e-02,  ..., 1.4995e-02,
          1.4788e-02, 1.4851e-02],
         [1.4499e-02, 1.4638e-02, 1.4394e-02,  ..., 1.4995e-02,
          1.4788e-02, 1.4851e-02],
         [9.5650e-01, 9.5609e-01, 9.5682e-01,  ..., 9.5501e-01,
          9.5564e-01, 9.5545e-01]],
        [[1.4595e-02, 1.4753e-02, 1.4839e-02,  ..., 1.9113e-04,
          1.4486e-02, 1.5108e-02],
         [1.4595e-02, 1.4753e-02, 1.4839e-02,  ..., 1.9113e-04,
          1.4486e-02, 1.5108e-02],
         [1.4595e-02, 1.4753e-02, 1.4839e-02,  ..., 9.9943e-01,
          1.4486e-02, 1.5108e-02],
         [9.5622e-01, 9.5574e-01, 9.5548e-01,  ..., 1.9113e-04,
          9.5654e-01, 9.5468e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 208:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0194, 0.0195, 0.0192,  ..., 0.0192, 0.0197, 0.0195],
         [0.0194, 0.0195, 0.0192,  ..., 0.0192, 0.0197, 0.0195],
         [0.0194, 0.0195, 0.0192,  ..., 0.0192, 0.0197, 0.0195],
         [0.9419, 0.9416, 0.9424,  ..., 0.9425, 0.9408, 0.9415]],
        [[0.0180, 0.0182, 0.0180,  ..., 0.0185, 0.0183, 0.0179],
         [0.0180, 0.0182, 0.0180,  ..., 0.0185, 0.0183, 0.0179],
         [0.0180, 0.0182, 0.0180,  ..., 0.0185, 0.0183, 0.0179],
         [0.9460, 0.9454, 0.9459,  ..., 0.9446, 0.9451, 0.9462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:44,092 [Process: 0] Synchronize training processes
2024-08-16 15:54:44,092 [Process: 0] Evaluating...
2024-08-16 15:54:44,094 [Process: 0] EPOCH 209:
2024-08-16 15:54:44,096 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4439e-02, 1.4383e-02, 1.5212e-02,  ..., 1.4713e-02,
          1.4448e-02, 1.4590e-02],
         [1.4439e-02, 1.4383e-02, 1.5212e-02,  ..., 1.4713e-02,
          1.4448e-02, 1.4590e-02],
         [1.4439e-02, 1.4383e-02, 1.5212e-02,  ..., 1.4713e-02,
          1.4448e-02, 1.4590e-02],
         [9.5668e-01, 9.5685e-01, 9.5437e-01,  ..., 9.5586e-01,
          9.5665e-01, 9.5623e-01]],
        [[1.4591e-02, 1.4532e-02, 1.4861e-02,  ..., 5.3801e-04,
          1.5308e-02, 1.4205e-02],
         [1.4591e-02, 1.4532e-02, 1.4861e-02,  ..., 5.3801e-04,
          1.5308e-02, 1.4205e-02],
         [1.4591e-02, 1.4532e-02, 1.4861e-02,  ..., 9.9839e-01,
          1.5308e-02, 1.4205e-02],
         [9.5623e-01, 9.5640e-01, 9.5542e-01,  ..., 5.3801e-04,
          9.5408e-01, 9.5739e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 209:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0193, 0.0189, 0.0189,  ..., 0.0190, 0.0191, 0.0194],
         [0.0193, 0.0189, 0.0189,  ..., 0.0190, 0.0191, 0.0194],
         [0.0193, 0.0189, 0.0189,  ..., 0.0190, 0.0191, 0.0194],
         [0.9420, 0.9434, 0.9433,  ..., 0.9429, 0.9427, 0.9417]],
        [[0.0187, 0.0185, 0.0180,  ..., 0.0180, 0.0184, 0.0182],
         [0.0187, 0.0185, 0.0180,  ..., 0.0180, 0.0184, 0.0182],
         [0.0187, 0.0185, 0.0180,  ..., 0.0180, 0.0184, 0.0182],
         [0.9440, 0.9444, 0.9461,  ..., 0.9460, 0.9449, 0.9454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:46,202 [Process: 0] Synchronize training processes
2024-08-16 15:54:46,202 [Process: 0] Evaluating...
2024-08-16 15:54:46,204 [Process: 0] EPOCH 210:
2024-08-16 15:54:46,206 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4662e-02, 1.4382e-02, 1.4095e-02,  ..., 1.4469e-02,
          1.5065e-02, 1.4419e-02],
         [1.4662e-02, 1.4382e-02, 1.4095e-02,  ..., 1.4469e-02,
          1.5065e-02, 1.4419e-02],
         [1.4662e-02, 1.4382e-02, 1.4095e-02,  ..., 1.4469e-02,
          1.5065e-02, 1.4419e-02],
         [9.5601e-01, 9.5685e-01, 9.5771e-01,  ..., 9.5659e-01,
          9.5481e-01, 9.5674e-01]],
        [[1.4182e-02, 1.4473e-02, 1.4211e-02,  ..., 4.7517e-04,
          1.4930e-02, 1.4935e-02],
         [1.4182e-02, 1.4473e-02, 1.4211e-02,  ..., 4.7517e-04,
          1.4930e-02, 1.4935e-02],
         [1.4182e-02, 1.4473e-02, 1.4211e-02,  ..., 9.9857e-01,
          1.4930e-02, 1.4935e-02],
         [9.5745e-01, 9.5658e-01, 9.5737e-01,  ..., 4.7517e-04,
          9.5521e-01, 9.5520e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 210:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0186, 0.0185, 0.0184,  ..., 0.0188, 0.0188, 0.0186],
         [0.0186, 0.0185, 0.0184,  ..., 0.0188, 0.0188, 0.0186],
         [0.0186, 0.0185, 0.0184,  ..., 0.0188, 0.0188, 0.0186],
         [0.9442, 0.9446, 0.9448,  ..., 0.9436, 0.9435, 0.9443]],
        [[0.0174, 0.0174, 0.0176,  ..., 0.0175, 0.0174, 0.0177],
         [0.0174, 0.0174, 0.0176,  ..., 0.0175, 0.0174, 0.0177],
         [0.0174, 0.0174, 0.0176,  ..., 0.0175, 0.0174, 0.0177],
         [0.9479, 0.9479, 0.9473,  ..., 0.9474, 0.9479, 0.9470]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:48,356 [Process: 0] Synchronize training processes
2024-08-16 15:54:48,357 [Process: 0] Evaluating...
2024-08-16 15:54:48,359 [Process: 0] EPOCH 211:
2024-08-16 15:54:48,361 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4591e-02, 1.4454e-02, 1.3834e-02,  ..., 1.4338e-02,
          1.4714e-02, 1.4372e-02],
         [1.4591e-02, 1.4454e-02, 1.3834e-02,  ..., 1.4338e-02,
          1.4714e-02, 1.4372e-02],
         [1.4591e-02, 1.4454e-02, 1.3834e-02,  ..., 1.4338e-02,
          1.4714e-02, 1.4372e-02],
         [9.5623e-01, 9.5664e-01, 9.5850e-01,  ..., 9.5699e-01,
          9.5586e-01, 9.5688e-01]],
        [[1.4522e-02, 1.4644e-02, 1.4783e-02,  ..., 4.8226e-04,
          1.5555e-02, 1.4038e-02],
         [1.4522e-02, 1.4644e-02, 1.4783e-02,  ..., 4.8226e-04,
          1.5555e-02, 1.4038e-02],
         [1.4522e-02, 1.4644e-02, 1.4783e-02,  ..., 9.9855e-01,
          1.5555e-02, 1.4038e-02],
         [9.5643e-01, 9.5607e-01, 9.5565e-01,  ..., 4.8226e-04,
          9.5334e-01, 9.5788e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 211:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0186, 0.0188, 0.0183,  ..., 0.0185, 0.0186, 0.0185],
         [0.0186, 0.0188, 0.0183,  ..., 0.0185, 0.0186, 0.0185],
         [0.0186, 0.0188, 0.0183,  ..., 0.0185, 0.0186, 0.0185],
         [0.9442, 0.9436, 0.9450,  ..., 0.9444, 0.9442, 0.9444]],
        [[0.0174, 0.0169, 0.0181,  ..., 0.0177, 0.0173, 0.0176],
         [0.0174, 0.0169, 0.0181,  ..., 0.0177, 0.0173, 0.0176],
         [0.0174, 0.0169, 0.0181,  ..., 0.0177, 0.0173, 0.0176],
         [0.9478, 0.9493, 0.9456,  ..., 0.9470, 0.9482, 0.9472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:54:50,573 [Process: 0] Synchronize training processes
2024-08-16 15:54:50,573 [Process: 0] Evaluating...
2024-08-16 15:54:50,581 [Process: 0] EPOCH 212:
2024-08-16 15:54:50,583 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4660e-02, 1.3584e-02, 1.4301e-02,  ..., 1.4199e-02,
          1.4617e-02, 1.4674e-02],
         [1.4660e-02, 1.3584e-02, 1.4301e-02,  ..., 1.4199e-02,
          1.4617e-02, 1.4674e-02],
         [1.4660e-02, 1.3584e-02, 1.4301e-02,  ..., 1.4199e-02,
          1.4617e-02, 1.4674e-02],
         [9.5602e-01, 9.5925e-01, 9.5710e-01,  ..., 9.5740e-01,
          9.5615e-01, 9.5598e-01]],
        [[1.4686e-02, 1.4473e-02, 1.4322e-02,  ..., 7.0001e-04,
          1.4406e-02, 1.4163e-02],
         [1.4686e-02, 1.4473e-02, 1.4322e-02,  ..., 7.0001e-04,
          1.4406e-02, 1.4163e-02],
         [1.4686e-02, 1.4473e-02, 1.4322e-02,  ..., 9.9790e-01,
          1.4406e-02, 1.4163e-02],
         [9.5594e-01, 9.5658e-01, 9.5703e-01,  ..., 7.0001e-04,
          9.5678e-01, 9.5751e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 212:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:54:52,765 [Process: 0] Synchronize training processes
2024-08-16 15:54:52,765 [Process: 0] Evaluating...
2024-08-16 15:54:52,767 [Process: 0] EPOCH 213:
2024-08-16 15:54:52,769 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0188, 0.0185, 0.0187,  ..., 0.0188, 0.0186, 0.0184],
         [0.0188, 0.0185, 0.0187,  ..., 0.0188, 0.0186, 0.0184],
         [0.0188, 0.0185, 0.0187,  ..., 0.0188, 0.0186, 0.0184],
         [0.9437, 0.9444, 0.9440,  ..., 0.9437, 0.9441, 0.9447]],
        [[0.0173, 0.0181, 0.0178,  ..., 0.0175, 0.0174, 0.0182],
         [0.0173, 0.0181, 0.0178,  ..., 0.0175, 0.0174, 0.0182],
         [0.0173, 0.0181, 0.0178,  ..., 0.0175, 0.0174, 0.0182],
         [0.9482, 0.9458, 0.9467,  ..., 0.9474, 0.9479, 0.9454]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0140, 0.0134, 0.0146,  ..., 0.0140, 0.0146, 0.0137],
         [0.0140, 0.0134, 0.0146,  ..., 0.0140, 0.0146, 0.0137],
         [0.0140, 0.0134, 0.0146,  ..., 0.0140, 0.0146, 0.0137],
         [0.9580, 0.9598, 0.9561,  ..., 0.9579, 0.9561, 0.9588]],
        [[0.0141, 0.0140, 0.0145,  ..., 0.0011, 0.0137, 0.0146],
         [0.0141, 0.0140, 0.0145,  ..., 0.0011, 0.0137, 0.0146],
         [0.0141, 0.0140, 0.0145,  ..., 0.9966, 0.0137, 0.0146],
         [0.9576, 0.9581, 0.9566,  ..., 0.0011, 0.9590, 0.9561]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 213:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:54,884 [Process: 0] Synchronize training processes
2024-08-16 15:54:54,884 [Process: 0] Evaluating...
2024-08-16 15:54:54,886 [Process: 0] EPOCH 214:
2024-08-16 15:54:54,888 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0183, 0.0186, 0.0184,  ..., 0.0184, 0.0186, 0.0185],
         [0.0183, 0.0186, 0.0184,  ..., 0.0184, 0.0186, 0.0185],
         [0.0183, 0.0186, 0.0184,  ..., 0.0184, 0.0186, 0.0185],
         [0.9450, 0.9441, 0.9447,  ..., 0.9447, 0.9443, 0.9444]],
        [[0.0177, 0.0175, 0.0180,  ..., 0.0174, 0.0174, 0.0177],
         [0.0177, 0.0175, 0.0180,  ..., 0.0174, 0.0174, 0.0177],
         [0.0177, 0.0175, 0.0180,  ..., 0.0174, 0.0174, 0.0177],
         [0.9470, 0.9474, 0.9460,  ..., 0.9479, 0.9478, 0.9468]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.4195e-02, 1.4004e-02, 1.4501e-02,  ..., 1.3962e-02,
          1.4587e-02, 1.3453e-02],
         [1.4195e-02, 1.4004e-02, 1.4501e-02,  ..., 1.3962e-02,
          1.4587e-02, 1.3453e-02],
         [1.4195e-02, 1.4004e-02, 1.4501e-02,  ..., 1.3962e-02,
          1.4587e-02, 1.3453e-02],
         [9.5741e-01, 9.5799e-01, 9.5650e-01,  ..., 9.5811e-01,
          9.5624e-01, 9.5964e-01]],
        [[1.4407e-02, 1.4225e-02, 1.3996e-02,  ..., 3.4725e-04,
          1.4503e-02, 1.3880e-02],
         [1.4407e-02, 1.4225e-02, 1.3996e-02,  ..., 3.4725e-04,
          1.4503e-02, 1.3880e-02],
         [1.4407e-02, 1.4225e-02, 1.3996e-02,  ..., 9.9896e-01,
          1.4503e-02, 1.3880e-02],
         [9.5678e-01, 9.5732e-01, 9.5801e-01,  ..., 3.4725e-04,
          9.5649e-01, 9.5836e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 214:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0185, 0.0181,  ..., 0.0181, 0.0182, 0.0181],
         [0.0182, 0.0185, 0.0181,  ..., 0.0181, 0.0182, 0.0181],
         [0.0182, 0.0185, 0.0181,  ..., 0.0181, 0.0182, 0.0181],
         [0.9455, 0.9446, 0.9456,  ..., 0.9456, 0.9453, 0.9457]],
        [[0.0178, 0.0177, 0.0178,  ..., 0.0175, 0.0172, 0.0174],
         [0.0178, 0.0177, 0.0178,  ..., 0.0175, 0.0172, 0.0174],
         [0.0178, 0.0177, 0.0178,  ..., 0.0175, 0.0172, 0.0174],
         [0.9466, 0.9469, 0.9465,  ..., 0.9474, 0.9485, 0.9479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3687e-02, 1.3798e-02, 1.4138e-02,  ..., 1.3836e-02,
          1.4374e-02, 1.3865e-02],
         [1.3687e-02, 1.3798e-02, 1.4138e-02,  ..., 1.3836e-02,
          1.4374e-02, 1.3865e-02],
         [1.3687e-02, 1.3798e-02, 1.4138e-02,  ..., 1.3836e-02,
          1.4374e-02, 1.3865e-02],
         [9.5894e-01, 9.5860e-01, 9.5759e-01,  ..., 9.5849e-01,
          9.5688e-01, 9.5841e-01]],
        [[1.3992e-02, 1.3613e-02, 1.3859e-02,  ..., 5.1663e-04,
          1.3707e-02, 1.4619e-02],
         [1.3992e-02, 1.3613e-02, 1.3859e-02,  ..., 5.1663e-04,
          1.3707e-02, 1.4619e-02],
         [1.3992e-02, 1.3613e-02, 1.3859e-02,  ..., 9.9845e-01,
          1.3707e-02, 1.4619e-02],
         [9.5802e-01, 9.5916e-01, 9.5842e-01,  ..., 5.1663e-04,
          9.5888e-01, 9.5614e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 215:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:56,994 [Process: 0] Synchronize training processes
2024-08-16 15:54:56,995 [Process: 0] Evaluating...
2024-08-16 15:54:56,997 [Process: 0] EPOCH 215:
2024-08-16 15:54:56,998 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0182, 0.0183, 0.0182,  ..., 0.0183, 0.0183, 0.0183],
         [0.0182, 0.0183, 0.0182,  ..., 0.0183, 0.0183, 0.0183],
         [0.0182, 0.0183, 0.0182,  ..., 0.0183, 0.0183, 0.0183],
         [0.9454, 0.9451, 0.9454,  ..., 0.9450, 0.9451, 0.9452]],
        [[0.0181, 0.0179, 0.0184,  ..., 0.0171, 0.0174, 0.0175],
         [0.0181, 0.0179, 0.0184,  ..., 0.0171, 0.0174, 0.0175],
         [0.0181, 0.0179, 0.0184,  ..., 0.0171, 0.0174, 0.0175],
         [0.9457, 0.9462, 0.9448,  ..., 0.9487, 0.9479, 0.9476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2963e-02, 1.3750e-02, 1.3001e-02,  ..., 1.4791e-02,
          1.5107e-02, 1.3884e-02],
         [1.2963e-02, 1.3750e-02, 1.3001e-02,  ..., 1.4791e-02,
          1.5107e-02, 1.3884e-02],
         [1.2963e-02, 1.3750e-02, 1.3001e-02,  ..., 1.4791e-02,
          1.5107e-02, 1.3884e-02],
         [9.6111e-01, 9.5875e-01, 9.6100e-01,  ..., 9.5563e-01,
          9.5468e-01, 9.5835e-01]],
        [[1.4206e-02, 1.4168e-02, 1.3934e-02,  ..., 7.1814e-04,
          1.3873e-02, 1.4016e-02],
         [1.4206e-02, 1.4168e-02, 1.3934e-02,  ..., 7.1814e-04,
          1.3873e-02, 1.4016e-02],
         [1.4206e-02, 1.4168e-02, 1.3934e-02,  ..., 9.9785e-01,
          1.3873e-02, 1.4016e-02],
         [9.5738e-01, 9.5750e-01, 9.5820e-01,  ..., 7.1814e-04,
          9.5838e-01, 9.5795e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 216:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:54:59,105 [Process: 0] Synchronize training processes
2024-08-16 15:54:59,106 [Process: 0] Evaluating...
2024-08-16 15:54:59,108 [Process: 0] EPOCH 216:
2024-08-16 15:54:59,110 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0181, 0.0180, 0.0180,  ..., 0.0181, 0.0179, 0.0185],
         [0.0181, 0.0180, 0.0180,  ..., 0.0181, 0.0179, 0.0185],
         [0.0181, 0.0180, 0.0180,  ..., 0.0181, 0.0179, 0.0185],
         [0.9456, 0.9461, 0.9460,  ..., 0.9458, 0.9464, 0.9445]],
        [[0.0168, 0.0167, 0.0173,  ..., 0.0168, 0.0171, 0.0174],
         [0.0168, 0.0167, 0.0173,  ..., 0.0168, 0.0171, 0.0174],
         [0.0168, 0.0167, 0.0173,  ..., 0.0168, 0.0171, 0.0174],
         [0.9497, 0.9499, 0.9481,  ..., 0.9495, 0.9486, 0.9477]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3278e-02, 1.3552e-02, 1.3490e-02,  ..., 1.3645e-02,
          1.4186e-02, 1.4203e-02],
         [1.3278e-02, 1.3552e-02, 1.3490e-02,  ..., 1.3645e-02,
          1.4186e-02, 1.4203e-02],
         [1.3278e-02, 1.3552e-02, 1.3490e-02,  ..., 1.3645e-02,
          1.4186e-02, 1.4203e-02],
         [9.6016e-01, 9.5934e-01, 9.5953e-01,  ..., 9.5906e-01,
          9.5744e-01, 9.5739e-01]],
        [[1.4297e-02, 1.4486e-02, 1.3882e-02,  ..., 5.0238e-04,
          1.4180e-02, 1.3786e-02],
         [1.4297e-02, 1.4486e-02, 1.3882e-02,  ..., 5.0238e-04,
          1.4180e-02, 1.3786e-02],
         [1.4297e-02, 1.4486e-02, 1.3882e-02,  ..., 9.9849e-01,
          1.4180e-02, 1.3786e-02],
         [9.5711e-01, 9.5654e-01, 9.5835e-01,  ..., 5.0238e-04,
          9.5746e-01, 9.5864e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 217:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:01,212 [Process: 0] Synchronize training processes
2024-08-16 15:55:01,213 [Process: 0] Evaluating...
2024-08-16 15:55:01,215 [Process: 0] EPOCH 217:
2024-08-16 15:55:01,217 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0180, 0.0183, 0.0181,  ..., 0.0179, 0.0178, 0.0178],
         [0.0180, 0.0183, 0.0181,  ..., 0.0179, 0.0178, 0.0178],
         [0.0180, 0.0183, 0.0181,  ..., 0.0179, 0.0178, 0.0178],
         [0.9461, 0.9450, 0.9458,  ..., 0.9464, 0.9466, 0.9467]],
        [[0.0170, 0.0175, 0.0168,  ..., 0.0172, 0.0171, 0.0176],
         [0.0170, 0.0175, 0.0168,  ..., 0.0172, 0.0171, 0.0176],
         [0.0170, 0.0175, 0.0168,  ..., 0.0172, 0.0171, 0.0176],
         [0.9490, 0.9475, 0.9496,  ..., 0.9483, 0.9486, 0.9471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3247e-02, 1.3393e-02, 1.3801e-02,  ..., 1.3191e-02,
          1.3529e-02, 1.4089e-02],
         [1.3247e-02, 1.3393e-02, 1.3801e-02,  ..., 1.3191e-02,
          1.3529e-02, 1.4089e-02],
         [1.3247e-02, 1.3393e-02, 1.3801e-02,  ..., 1.3191e-02,
          1.3529e-02, 1.4089e-02],
         [9.6026e-01, 9.5982e-01, 9.5860e-01,  ..., 9.6043e-01,
          9.5941e-01, 9.5773e-01]],
        [[1.3868e-02, 1.3858e-02, 1.3357e-02,  ..., 3.1536e-04,
          1.3251e-02, 1.3747e-02],
         [1.3868e-02, 1.3858e-02, 1.3357e-02,  ..., 3.1536e-04,
          1.3251e-02, 1.3747e-02],
         [1.3868e-02, 1.3858e-02, 1.3357e-02,  ..., 9.9905e-01,
          1.3251e-02, 1.3747e-02],
         [9.5840e-01, 9.5843e-01, 9.5993e-01,  ..., 3.1536e-04,
          9.6025e-01, 9.5876e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 218:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:03,326 [Process: 0] Synchronize training processes
2024-08-16 15:55:03,326 [Process: 0] Evaluating...
2024-08-16 15:55:03,328 [Process: 0] EPOCH 218:
2024-08-16 15:55:03,330 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0174, 0.0174, 0.0171,  ..., 0.0174, 0.0177, 0.0175],
         [0.0174, 0.0174, 0.0171,  ..., 0.0174, 0.0177, 0.0175],
         [0.0174, 0.0174, 0.0171,  ..., 0.0174, 0.0177, 0.0175],
         [0.9479, 0.9477, 0.9486,  ..., 0.9477, 0.9470, 0.9476]],
        [[0.0180, 0.0192, 0.0179,  ..., 0.0176, 0.0167, 0.0173],
         [0.0180, 0.0192, 0.0179,  ..., 0.0176, 0.0167, 0.0173],
         [0.0180, 0.0192, 0.0179,  ..., 0.0176, 0.0167, 0.0173],
         [0.9460, 0.9425, 0.9463,  ..., 0.9472, 0.9500, 0.9480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3811e-02, 1.3370e-02, 1.3523e-02,  ..., 1.3080e-02,
          1.4449e-02, 1.3577e-02],
         [1.3811e-02, 1.3370e-02, 1.3523e-02,  ..., 1.3080e-02,
          1.4449e-02, 1.3577e-02],
         [1.3811e-02, 1.3370e-02, 1.3523e-02,  ..., 1.3080e-02,
          1.4449e-02, 1.3577e-02],
         [9.5857e-01, 9.5989e-01, 9.5943e-01,  ..., 9.6076e-01,
          9.5665e-01, 9.5927e-01]],
        [[1.3908e-02, 1.3537e-02, 1.3443e-02,  ..., 5.8932e-04,
          1.3725e-02, 1.3669e-02],
         [1.3908e-02, 1.3537e-02, 1.3443e-02,  ..., 5.8932e-04,
          1.3725e-02, 1.3669e-02],
         [1.3908e-02, 1.3537e-02, 1.3443e-02,  ..., 9.9823e-01,
          1.3725e-02, 1.3669e-02],
         [9.5828e-01, 9.5939e-01, 9.5967e-01,  ..., 5.8932e-04,
          9.5882e-01, 9.5899e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 219:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:05,423 [Process: 0] Synchronize training processes
2024-08-16 15:55:05,423 [Process: 0] Evaluating...
2024-08-16 15:55:05,425 [Process: 0] EPOCH 219:
2024-08-16 15:55:05,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0173, 0.0173, 0.0171,  ..., 0.0170, 0.0174, 0.0170],
         [0.0173, 0.0173, 0.0171,  ..., 0.0170, 0.0174, 0.0170],
         [0.0173, 0.0173, 0.0171,  ..., 0.0170, 0.0174, 0.0170],
         [0.9480, 0.9481, 0.9487,  ..., 0.9491, 0.9478, 0.9489]],
        [[0.0164, 0.0164, 0.0161,  ..., 0.0163, 0.0167, 0.0163],
         [0.0164, 0.0164, 0.0161,  ..., 0.0163, 0.0167, 0.0163],
         [0.0164, 0.0164, 0.0161,  ..., 0.0163, 0.0167, 0.0163],
         [0.9509, 0.9507, 0.9517,  ..., 0.9511, 0.9499, 0.9512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3598e-02, 1.3219e-02, 1.3685e-02,  ..., 1.3274e-02,
          1.3783e-02, 1.3575e-02],
         [1.3598e-02, 1.3219e-02, 1.3685e-02,  ..., 1.3274e-02,
          1.3783e-02, 1.3575e-02],
         [1.3598e-02, 1.3219e-02, 1.3685e-02,  ..., 1.3274e-02,
          1.3783e-02, 1.3575e-02],
         [9.5921e-01, 9.6034e-01, 9.5895e-01,  ..., 9.6018e-01,
          9.5865e-01, 9.5927e-01]],
        [[1.3937e-02, 1.3418e-02, 1.3692e-02,  ..., 9.0775e-04,
          1.3379e-02, 1.3986e-02],
         [1.3937e-02, 1.3418e-02, 1.3692e-02,  ..., 9.0775e-04,
          1.3379e-02, 1.3986e-02],
         [1.3937e-02, 1.3418e-02, 1.3692e-02,  ..., 9.9728e-01,
          1.3379e-02, 1.3986e-02],
         [9.5819e-01, 9.5974e-01, 9.5892e-01,  ..., 9.0775e-04,
          9.5986e-01, 9.5804e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:07,524 [Process: 0] Synchronize training processes
2024-08-16 15:55:07,524 [Process: 0] Evaluating...
2024-08-16 15:55:07,526 [Process: 0] EPOCH 220:
2024-08-16 15:55:07,528 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 220:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0145, 0.0145, 0.0146,  ..., 0.0148, 0.0148, 0.0145],
         [0.0145, 0.0145, 0.0146,  ..., 0.0148, 0.0148, 0.0145],
         [0.0145, 0.0145, 0.0146,  ..., 0.0148, 0.0148, 0.0145],
         [0.9565, 0.9565, 0.9562,  ..., 0.9557, 0.9556, 0.9566]],
        [[0.0142, 0.0143, 0.0141,  ..., 0.0139, 0.0141, 0.0146],
         [0.0142, 0.0143, 0.0141,  ..., 0.0139, 0.0141, 0.0146],
         [0.0142, 0.0143, 0.0141,  ..., 0.0139, 0.0141, 0.0146],
         [0.9575, 0.9571, 0.9577,  ..., 0.9582, 0.9578, 0.9562]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2902e-02, 1.3471e-02, 1.3132e-02,  ..., 1.2856e-02,
          1.2452e-02, 1.3532e-02],
         [1.2902e-02, 1.3471e-02, 1.3132e-02,  ..., 1.2856e-02,
          1.2452e-02, 1.3532e-02],
         [1.2902e-02, 1.3471e-02, 1.3132e-02,  ..., 1.2856e-02,
          1.2452e-02, 1.3532e-02],
         [9.6130e-01, 9.5959e-01, 9.6060e-01,  ..., 9.6143e-01,
          9.6265e-01, 9.5940e-01]],
        [[1.2582e-02, 1.2331e-02, 1.2087e-02,  ..., 1.5231e-04,
          1.8019e-02, 1.2403e-02],
         [1.2582e-02, 1.2331e-02, 1.2087e-02,  ..., 1.5231e-04,
          1.7063e-02, 1.2403e-02],
         [1.2582e-02, 1.2331e-02, 1.2087e-02,  ..., 9.9954e-01,
          1.7063e-02, 1.2403e-02],
         [9.6225e-01, 9.6301e-01, 9.6374e-01,  ..., 1.5231e-04,
          9.4786e-01, 9.6279e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:09,605 [Process: 0] Synchronize training processes
2024-08-16 15:55:09,605 [Process: 0] Evaluating...
2024-08-16 15:55:09,607 [Process: 0] EPOCH 221:
2024-08-16 15:55:09,609 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 221:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0152, 0.0150,  ..., 0.0151, 0.0150, 0.0151],
         [0.0152, 0.0152, 0.0150,  ..., 0.0151, 0.0150, 0.0151],
         [0.0152, 0.0152, 0.0150,  ..., 0.0151, 0.0150, 0.0151],
         [0.9544, 0.9544, 0.9550,  ..., 0.9547, 0.9550, 0.9547]],
        [[0.0151, 0.0148, 0.0147,  ..., 0.0150, 0.0152, 0.0151],
         [0.0151, 0.0148, 0.0147,  ..., 0.0150, 0.0152, 0.0151],
         [0.0151, 0.0148, 0.0147,  ..., 0.0150, 0.0152, 0.0151],
         [0.9548, 0.9557, 0.9560,  ..., 0.9550, 0.9543, 0.9548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:55:11,686 [Process: 0] Synchronize training processes
2024-08-16 15:55:11,687 [Process: 0] Evaluating...
2024-08-16 15:55:11,695 [Process: 0] EPOCH 222:
2024-08-16 15:55:11,697 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2782e-02, 1.3565e-02, 1.3446e-02,  ..., 1.3245e-02,
          1.3070e-02, 1.3067e-02],
         [1.2782e-02, 1.3565e-02, 1.3446e-02,  ..., 1.3245e-02,
          1.3070e-02, 1.3067e-02],
         [1.2782e-02, 1.3565e-02, 1.3446e-02,  ..., 1.3245e-02,
          1.3070e-02, 1.3067e-02],
         [9.6165e-01, 9.5931e-01, 9.5966e-01,  ..., 9.6027e-01,
          9.6079e-01, 9.6080e-01]],
        [[1.3372e-02, 1.2762e-02, 1.3158e-02,  ..., 3.8401e-04,
          1.2818e-02, 1.3138e-02],
         [1.3372e-02, 1.2762e-02, 1.3158e-02,  ..., 3.8401e-04,
          1.2818e-02, 1.3138e-02],
         [1.3372e-02, 1.2762e-02, 1.3158e-02,  ..., 9.9885e-01,
          1.2818e-02, 1.3138e-02],
         [9.5988e-01, 9.6171e-01, 9.6053e-01,  ..., 3.8401e-04,
          9.6155e-01, 9.6059e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 222:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0179, 0.0178, 0.0180,  ..., 0.0179, 0.0180, 0.0179],
         [0.0179, 0.0178, 0.0180,  ..., 0.0179, 0.0180, 0.0179],
         [0.0179, 0.0178, 0.0180,  ..., 0.0179, 0.0180, 0.0179],
         [0.9462, 0.9467, 0.9459,  ..., 0.9463, 0.9460, 0.9462]],
        [[0.0181, 0.0181, 0.0180,  ..., 0.0181, 0.0182, 0.0178],
         [0.0181, 0.0181, 0.0180,  ..., 0.0181, 0.0182, 0.0178],
         [0.0181, 0.0181, 0.0180,  ..., 0.0181, 0.0182, 0.0178],
         [0.9457, 0.9458, 0.9460,  ..., 0.9458, 0.9455, 0.9467]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:13,799 [Process: 0] Synchronize training processes
2024-08-16 15:55:13,800 [Process: 0] Evaluating...
2024-08-16 15:55:13,801 [Process: 0] EPOCH 223:
2024-08-16 15:55:13,803 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3450e-02, 1.4026e-02, 1.3015e-02,  ..., 1.3087e-02,
          1.3606e-02, 1.3373e-02],
         [1.3450e-02, 1.4026e-02, 1.3015e-02,  ..., 1.3087e-02,
          1.3606e-02, 1.3373e-02],
         [1.3450e-02, 1.4026e-02, 1.3015e-02,  ..., 1.3087e-02,
          1.3606e-02, 1.3373e-02],
         [9.5965e-01, 9.5792e-01, 9.6096e-01,  ..., 9.6074e-01,
          9.5918e-01, 9.5988e-01]],
        [[1.3504e-02, 1.2875e-02, 1.3200e-02,  ..., 1.2421e-04,
          1.2866e-02, 1.2741e-02],
         [1.3504e-02, 1.2875e-02, 1.3200e-02,  ..., 1.2421e-04,
          1.2866e-02, 1.2741e-02],
         [1.3504e-02, 1.2875e-02, 1.3200e-02,  ..., 9.9963e-01,
          1.2866e-02, 1.2741e-02],
         [9.5949e-01, 9.6138e-01, 9.6040e-01,  ..., 1.2421e-04,
          9.6140e-01, 9.6178e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 223:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0171, 0.0172, 0.0173,  ..., 0.0169, 0.0171, 0.0172],
         [0.0171, 0.0172, 0.0173,  ..., 0.0169, 0.0171, 0.0172],
         [0.0171, 0.0172, 0.0173,  ..., 0.0169, 0.0171, 0.0172],
         [0.9488, 0.9484, 0.9482,  ..., 0.9492, 0.9488, 0.9485]],
        [[0.0170, 0.0167, 0.0171,  ..., 0.0169, 0.0170, 0.0167],
         [0.0170, 0.0167, 0.0171,  ..., 0.0169, 0.0170, 0.0167],
         [0.0170, 0.0167, 0.0171,  ..., 0.0169, 0.0170, 0.0167],
         [0.9489, 0.9498, 0.9488,  ..., 0.9493, 0.9490, 0.9500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:15,903 [Process: 0] Synchronize training processes
2024-08-16 15:55:15,903 [Process: 0] Evaluating...
2024-08-16 15:55:15,905 [Process: 0] EPOCH 224:
2024-08-16 15:55:15,907 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0132, 0.0134, 0.0134,  ..., 0.0133, 0.0136, 0.0138],
         [0.0132, 0.0134, 0.0134,  ..., 0.0133, 0.0136, 0.0138],
         [0.0132, 0.0134, 0.0134,  ..., 0.0133, 0.0136, 0.0138],
         [0.9605, 0.9598, 0.9598,  ..., 0.9600, 0.9591, 0.9586]],
        [[0.0130, 0.0133, 0.0136,  ..., 0.0019, 0.0130, 0.0130],
         [0.0130, 0.0133, 0.0136,  ..., 0.0019, 0.0130, 0.0130],
         [0.0130, 0.0133, 0.0136,  ..., 0.9942, 0.0130, 0.0130],
         [0.9609, 0.9602, 0.9593,  ..., 0.0019, 0.9610, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 224:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0169, 0.0170, 0.0170,  ..., 0.0168, 0.0171, 0.0170],
         [0.0169, 0.0170, 0.0170,  ..., 0.0168, 0.0171, 0.0170],
         [0.0169, 0.0170, 0.0170,  ..., 0.0168, 0.0171, 0.0170],
         [0.9493, 0.9489, 0.9490,  ..., 0.9497, 0.9487, 0.9491]],
        [[0.0169, 0.0169, 0.0169,  ..., 0.0169, 0.0168, 0.0168],
         [0.0169, 0.0169, 0.0169,  ..., 0.0169, 0.0168, 0.0168],
         [0.0169, 0.0169, 0.0169,  ..., 0.0169, 0.0168, 0.0168],
         [0.9494, 0.9492, 0.9494,  ..., 0.9493, 0.9496, 0.9496]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:18,011 [Process: 0] Synchronize training processes
2024-08-16 15:55:18,012 [Process: 0] Evaluating...
2024-08-16 15:55:18,013 [Process: 0] EPOCH 225:
2024-08-16 15:55:18,015 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3045e-02, 1.2966e-02, 1.3044e-02,  ..., 1.3208e-02,
          1.3442e-02, 1.2917e-02],
         [1.3045e-02, 1.2966e-02, 1.3044e-02,  ..., 1.3208e-02,
          1.3442e-02, 1.2917e-02],
         [1.3045e-02, 1.2966e-02, 1.3044e-02,  ..., 1.3208e-02,
          1.3442e-02, 1.2917e-02],
         [9.6087e-01, 9.6110e-01, 9.6087e-01,  ..., 9.6038e-01,
          9.5968e-01, 9.6125e-01]],
        [[1.3057e-02, 1.2535e-02, 1.2733e-02,  ..., 5.6810e-04,
          1.3245e-02, 1.2905e-02],
         [1.3057e-02, 1.2535e-02, 1.2733e-02,  ..., 5.6810e-04,
          1.3245e-02, 1.2905e-02],
         [1.3057e-02, 1.2535e-02, 1.2733e-02,  ..., 9.9830e-01,
          1.3245e-02, 1.2905e-02],
         [9.6083e-01, 9.6239e-01, 9.6180e-01,  ..., 5.6810e-04,
          9.6027e-01, 9.6129e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 225:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0172, 0.0170, 0.0171,  ..., 0.0169, 0.0172, 0.0171],
         [0.0172, 0.0170, 0.0171,  ..., 0.0169, 0.0172, 0.0171],
         [0.0172, 0.0170, 0.0171,  ..., 0.0169, 0.0172, 0.0171],
         [0.9485, 0.9491, 0.9486,  ..., 0.9494, 0.9483, 0.9486]],
        [[0.0170, 0.0167, 0.0168,  ..., 0.0171, 0.0173, 0.0167],
         [0.0170, 0.0167, 0.0168,  ..., 0.0171, 0.0173, 0.0167],
         [0.0170, 0.0167, 0.0168,  ..., 0.0171, 0.0173, 0.0167],
         [0.9490, 0.9498, 0.9495,  ..., 0.9488, 0.9481, 0.9499]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:20,101 [Process: 0] Synchronize training processes
2024-08-16 15:55:20,102 [Process: 0] Evaluating...
2024-08-16 15:55:20,104 [Process: 0] EPOCH 226:
2024-08-16 15:55:20,106 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3508e-02, 1.3040e-02, 1.2983e-02,  ..., 1.2989e-02,
          1.3109e-02, 1.3263e-02],
         [1.3508e-02, 1.3040e-02, 1.2983e-02,  ..., 1.2989e-02,
          1.3109e-02, 1.3263e-02],
         [1.3508e-02, 1.3040e-02, 1.2983e-02,  ..., 1.2989e-02,
          1.3109e-02, 1.3263e-02],
         [9.5948e-01, 9.6088e-01, 9.6105e-01,  ..., 9.6103e-01,
          9.6067e-01, 9.6021e-01]],
        [[1.2920e-02, 1.3191e-02, 1.3788e-02,  ..., 1.2214e-04,
          1.3436e-02, 1.3004e-02],
         [1.2920e-02, 1.3191e-02, 1.3788e-02,  ..., 1.2214e-04,
          1.3436e-02, 1.3004e-02],
         [1.2920e-02, 1.3191e-02, 1.3788e-02,  ..., 9.9963e-01,
          1.3436e-02, 1.3004e-02],
         [9.6124e-01, 9.6043e-01, 9.5864e-01,  ..., 1.2214e-04,
          9.5969e-01, 9.6099e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 226:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0177, 0.0178, 0.0179,  ..., 0.0176, 0.0178, 0.0177],
         [0.0177, 0.0178, 0.0179,  ..., 0.0176, 0.0178, 0.0177],
         [0.0177, 0.0178, 0.0179,  ..., 0.0176, 0.0178, 0.0177],
         [0.9468, 0.9465, 0.9463,  ..., 0.9471, 0.9466, 0.9468]],
        [[0.0174, 0.0177, 0.0176,  ..., 0.0179, 0.0177, 0.0176],
         [0.0174, 0.0177, 0.0176,  ..., 0.0179, 0.0177, 0.0176],
         [0.0174, 0.0177, 0.0176,  ..., 0.0179, 0.0177, 0.0176],
         [0.9478, 0.9469, 0.9473,  ..., 0.9464, 0.9469, 0.9472]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:22,202 [Process: 0] Synchronize training processes
2024-08-16 15:55:22,202 [Process: 0] Evaluating...
2024-08-16 15:55:22,204 [Process: 0] EPOCH 227:
2024-08-16 15:55:22,206 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.3015e-02, 1.2964e-02, 1.2836e-02,  ..., 1.2654e-02,
          1.4760e-02, 1.3503e-02],
         [1.3015e-02, 1.2964e-02, 1.2836e-02,  ..., 1.2654e-02,
          1.4760e-02, 1.3503e-02],
         [1.3015e-02, 1.2964e-02, 1.2836e-02,  ..., 1.2654e-02,
          1.4760e-02, 1.3503e-02],
         [9.6095e-01, 9.6111e-01, 9.6149e-01,  ..., 9.6204e-01,
          9.5572e-01, 9.5949e-01]],
        [[1.3534e-02, 1.3347e-02, 1.2912e-02,  ..., 3.3047e-04,
          1.3052e-02, 1.3356e-02],
         [1.3534e-02, 1.3347e-02, 1.2912e-02,  ..., 3.3047e-04,
          1.3052e-02, 1.3356e-02],
         [1.3534e-02, 1.3347e-02, 1.2912e-02,  ..., 9.9901e-01,
          1.3052e-02, 1.3356e-02],
         [9.5940e-01, 9.5996e-01, 9.6126e-01,  ..., 3.3047e-04,
          9.6084e-01, 9.5993e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 227:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0168, 0.0168, 0.0168,  ..., 0.0167, 0.0168, 0.0168],
         [0.0168, 0.0168, 0.0168,  ..., 0.0167, 0.0168, 0.0168],
         [0.0168, 0.0168, 0.0168,  ..., 0.0167, 0.0168, 0.0168],
         [0.9497, 0.9495, 0.9495,  ..., 0.9499, 0.9496, 0.9497]],
        [[0.0163, 0.0161, 0.0163,  ..., 0.0167, 0.0164, 0.0163],
         [0.0163, 0.0161, 0.0163,  ..., 0.0167, 0.0164, 0.0163],
         [0.0163, 0.0161, 0.0163,  ..., 0.0167, 0.0164, 0.0163],
         [0.9511, 0.9518, 0.9512,  ..., 0.9500, 0.9508, 0.9512]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:24,310 [Process: 0] Synchronize training processes
2024-08-16 15:55:24,310 [Process: 0] Evaluating...
2024-08-16 15:55:24,312 [Process: 0] EPOCH 228:
2024-08-16 15:55:24,314 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2996e-02, 1.3302e-02, 1.2892e-02,  ..., 1.3275e-02,
          1.3491e-02, 1.3398e-02],
         [1.2996e-02, 1.3302e-02, 1.2892e-02,  ..., 1.3275e-02,
          1.3491e-02, 1.3398e-02],
         [1.2996e-02, 1.3302e-02, 1.2892e-02,  ..., 1.3275e-02,
          1.3491e-02, 1.3398e-02],
         [9.6101e-01, 9.6010e-01, 9.6132e-01,  ..., 9.6018e-01,
          9.5953e-01, 9.5981e-01]],
        [[1.3987e-02, 1.3060e-02, 1.3568e-02,  ..., 3.5519e-04,
          1.3150e-02, 1.2939e-02],
         [1.3987e-02, 1.3060e-02, 1.3568e-02,  ..., 3.5519e-04,
          1.3150e-02, 1.2939e-02],
         [1.3987e-02, 1.3060e-02, 1.3568e-02,  ..., 9.9893e-01,
          1.3150e-02, 1.2939e-02],
         [9.5804e-01, 9.6082e-01, 9.5930e-01,  ..., 3.5519e-04,
          9.6055e-01, 9.6118e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 228:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0165, 0.0165, 0.0165,  ..., 0.0165, 0.0164, 0.0164],
         [0.0165, 0.0165, 0.0165,  ..., 0.0165, 0.0164, 0.0164],
         [0.0165, 0.0165, 0.0165,  ..., 0.0165, 0.0164, 0.0164],
         [0.9504, 0.9505, 0.9505,  ..., 0.9505, 0.9508, 0.9508]],
        [[0.0162, 0.0155, 0.0160,  ..., 0.0164, 0.0156, 0.0160],
         [0.0162, 0.0155, 0.0160,  ..., 0.0164, 0.0156, 0.0160],
         [0.0162, 0.0155, 0.0160,  ..., 0.0164, 0.0156, 0.0160],
         [0.9513, 0.9535, 0.9520,  ..., 0.9508, 0.9533, 0.9521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:26,397 [Process: 0] Synchronize training processes
2024-08-16 15:55:26,397 [Process: 0] Evaluating...
2024-08-16 15:55:26,399 [Process: 0] EPOCH 229:
2024-08-16 15:55:26,401 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2809e-02, 1.2964e-02, 1.2822e-02,  ..., 1.2600e-02,
          1.3253e-02, 1.2989e-02],
         [1.2809e-02, 1.2964e-02, 1.2822e-02,  ..., 1.2600e-02,
          1.3253e-02, 1.2989e-02],
         [1.2809e-02, 1.2964e-02, 1.2822e-02,  ..., 1.2600e-02,
          1.3253e-02, 1.2989e-02],
         [9.6157e-01, 9.6111e-01, 9.6153e-01,  ..., 9.6220e-01,
          9.6024e-01, 9.6103e-01]],
        [[1.2632e-02, 1.3150e-02, 1.3314e-02,  ..., 2.7975e-04,
          1.2771e-02, 1.2909e-02],
         [1.2632e-02, 1.3150e-02, 1.3314e-02,  ..., 2.7975e-04,
          1.2771e-02, 1.2909e-02],
         [1.2632e-02, 1.3150e-02, 1.3314e-02,  ..., 9.9916e-01,
          1.2771e-02, 1.2909e-02],
         [9.6210e-01, 9.6055e-01, 9.6006e-01,  ..., 2.7975e-04,
          9.6169e-01, 9.6127e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 229:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0163, 0.0164,  ..., 0.0164, 0.0163, 0.0164],
         [0.0163, 0.0163, 0.0164,  ..., 0.0164, 0.0163, 0.0164],
         [0.0163, 0.0163, 0.0164,  ..., 0.0164, 0.0163, 0.0164],
         [0.9511, 0.9510, 0.9508,  ..., 0.9509, 0.9510, 0.9509]],
        [[0.0157, 0.0154, 0.0157,  ..., 0.0158, 0.0160, 0.0159],
         [0.0157, 0.0154, 0.0157,  ..., 0.0158, 0.0160, 0.0159],
         [0.0157, 0.0154, 0.0157,  ..., 0.0158, 0.0160, 0.0159],
         [0.9529, 0.9538, 0.9530,  ..., 0.9526, 0.9519, 0.9523]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:28,502 [Process: 0] Synchronize training processes
2024-08-16 15:55:28,503 [Process: 0] Evaluating...
2024-08-16 15:55:28,505 [Process: 0] EPOCH 230:
2024-08-16 15:55:28,507 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2700e-02, 1.2570e-02, 1.2206e-02,  ..., 1.2246e-02,
          1.2021e-02, 1.2965e-02],
         [1.2700e-02, 1.2570e-02, 1.2206e-02,  ..., 1.2246e-02,
          1.2021e-02, 1.2965e-02],
         [1.2700e-02, 1.2570e-02, 1.2206e-02,  ..., 1.2246e-02,
          1.2021e-02, 1.2965e-02],
         [9.6190e-01, 9.6229e-01, 9.6338e-01,  ..., 9.6326e-01,
          9.6394e-01, 9.6110e-01]],
        [[1.2874e-02, 1.2824e-02, 1.2819e-02,  ..., 6.2688e-04,
          1.2672e-02, 1.3153e-02],
         [1.2874e-02, 1.2824e-02, 1.2819e-02,  ..., 6.2688e-04,
          1.2672e-02, 1.3153e-02],
         [1.2874e-02, 1.2824e-02, 1.2819e-02,  ..., 9.9812e-01,
          1.2672e-02, 1.3153e-02],
         [9.6138e-01, 9.6153e-01, 9.6154e-01,  ..., 6.2688e-04,
          9.6198e-01, 9.6054e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 230:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0165, 0.0165, 0.0165,  ..., 0.0164, 0.0164, 0.0164],
         [0.0165, 0.0165, 0.0165,  ..., 0.0164, 0.0164, 0.0164],
         [0.0165, 0.0165, 0.0165,  ..., 0.0164, 0.0164, 0.0164],
         [0.9504, 0.9505, 0.9505,  ..., 0.9509, 0.9509, 0.9507]],
        [[0.0155, 0.0158, 0.0153,  ..., 0.0159, 0.0157, 0.0153],
         [0.0155, 0.0158, 0.0153,  ..., 0.0159, 0.0157, 0.0153],
         [0.0155, 0.0158, 0.0153,  ..., 0.0159, 0.0157, 0.0153],
         [0.9534, 0.9527, 0.9541,  ..., 0.9524, 0.9529, 0.9541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:30,606 [Process: 0] Synchronize training processes
2024-08-16 15:55:30,606 [Process: 0] Evaluating...
2024-08-16 15:55:30,608 [Process: 0] EPOCH 231:
2024-08-16 15:55:30,610 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2460e-02, 1.2589e-02, 1.1941e-02,  ..., 1.2777e-02,
          1.2495e-02, 1.2378e-02],
         [1.2460e-02, 1.2589e-02, 1.1941e-02,  ..., 1.2777e-02,
          1.2495e-02, 1.2378e-02],
         [1.2460e-02, 1.2589e-02, 1.1941e-02,  ..., 1.2777e-02,
          1.2495e-02, 1.2378e-02],
         [9.6262e-01, 9.6223e-01, 9.6418e-01,  ..., 9.6167e-01,
          9.6251e-01, 9.6287e-01]],
        [[1.2560e-02, 1.2351e-02, 1.2840e-02,  ..., 2.7752e-04,
          1.2780e-02, 1.2685e-02],
         [1.2560e-02, 1.2351e-02, 1.2840e-02,  ..., 2.7752e-04,
          1.2780e-02, 1.2685e-02],
         [1.2560e-02, 1.2351e-02, 1.2840e-02,  ..., 9.9917e-01,
          1.2780e-02, 1.2685e-02],
         [9.6232e-01, 9.6295e-01, 9.6148e-01,  ..., 2.7752e-04,
          9.6166e-01, 9.6195e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 231:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0165, 0.0167, 0.0164,  ..., 0.0165, 0.0166, 0.0164],
         [0.0165, 0.0167, 0.0164,  ..., 0.0165, 0.0166, 0.0164],
         [0.0165, 0.0167, 0.0164,  ..., 0.0165, 0.0166, 0.0164],
         [0.9504, 0.9500, 0.9507,  ..., 0.9506, 0.9502, 0.9508]],
        [[0.0151, 0.0156, 0.0153,  ..., 0.0157, 0.0160, 0.0154],
         [0.0151, 0.0156, 0.0153,  ..., 0.0157, 0.0160, 0.0154],
         [0.0151, 0.0156, 0.0153,  ..., 0.0157, 0.0160, 0.0154],
         [0.9546, 0.9532, 0.9542,  ..., 0.9528, 0.9521, 0.9538]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:32,709 [Process: 0] Synchronize training processes
2024-08-16 15:55:32,709 [Process: 0] Evaluating...
2024-08-16 15:55:32,717 [Process: 0] EPOCH 232:
2024-08-16 15:55:32,719 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2923e-02, 1.2344e-02, 1.2336e-02,  ..., 1.2809e-02,
          1.2615e-02, 1.2020e-02],
         [1.2923e-02, 1.2344e-02, 1.2336e-02,  ..., 1.2809e-02,
          1.2615e-02, 1.2020e-02],
         [1.2923e-02, 1.2344e-02, 1.2336e-02,  ..., 1.2809e-02,
          1.2615e-02, 1.2020e-02],
         [9.6123e-01, 9.6297e-01, 9.6299e-01,  ..., 9.6157e-01,
          9.6215e-01, 9.6394e-01]],
        [[1.2855e-02, 1.2547e-02, 1.2326e-02,  ..., 1.0683e-04,
          1.2329e-02, 1.2374e-02],
         [1.2855e-02, 1.2547e-02, 1.2326e-02,  ..., 1.0683e-04,
          1.2329e-02, 1.2374e-02],
         [1.2855e-02, 1.2547e-02, 1.2326e-02,  ..., 9.9968e-01,
          1.2329e-02, 1.2374e-02],
         [9.6144e-01, 9.6236e-01, 9.6302e-01,  ..., 1.0683e-04,
          9.6301e-01, 9.6288e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 232:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 15:55:34,808 [Process: 0] Synchronize training processes
2024-08-16 15:55:34,809 [Process: 0] Evaluating...
2024-08-16 15:55:34,811 [Process: 0] EPOCH 233:
2024-08-16 15:55:34,813 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0166, 0.0164, 0.0162,  ..., 0.0165, 0.0164, 0.0165],
         [0.0166, 0.0164, 0.0162,  ..., 0.0165, 0.0164, 0.0165],
         [0.0166, 0.0164, 0.0162,  ..., 0.0165, 0.0164, 0.0165],
         [0.9502, 0.9508, 0.9513,  ..., 0.9505, 0.9507, 0.9504]],
        [[0.0154, 0.0155, 0.0155,  ..., 0.0159, 0.0160, 0.0157],
         [0.0154, 0.0155, 0.0155,  ..., 0.0159, 0.0160, 0.0157],
         [0.0154, 0.0155, 0.0155,  ..., 0.0159, 0.0160, 0.0157],
         [0.9537, 0.9535, 0.9535,  ..., 0.9523, 0.9519, 0.9528]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0125, 0.0127, 0.0128,  ..., 0.0124, 0.0122, 0.0126],
         [0.0125, 0.0127, 0.0128,  ..., 0.0124, 0.0122, 0.0126],
         [0.0125, 0.0127, 0.0128,  ..., 0.0124, 0.0122, 0.0126],
         [0.9624, 0.9620, 0.9617,  ..., 0.9629, 0.9633, 0.9623]],
        [[0.0129, 0.0128, 0.0121,  ..., 0.0024, 0.0123, 0.0127],
         [0.0129, 0.0128, 0.0121,  ..., 0.0024, 0.0123, 0.0127],
         [0.0129, 0.0128, 0.0121,  ..., 0.9927, 0.0123, 0.0127],
         [0.9613, 0.9616, 0.9637,  ..., 0.0024, 0.9630, 0.9620]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 233:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:55:36,910 [Process: 0] Synchronize training processes
2024-08-16 15:55:36,911 [Process: 0] Evaluating...
2024-08-16 15:55:36,913 [Process: 0] EPOCH 234:
2024-08-16 15:55:36,915 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0164, 0.0166, 0.0166,  ..., 0.0164, 0.0165, 0.0165],
         [0.0164, 0.0166, 0.0166,  ..., 0.0164, 0.0165, 0.0165],
         [0.0164, 0.0166, 0.0166,  ..., 0.0164, 0.0165, 0.0165],
         [0.9507, 0.9503, 0.9503,  ..., 0.9509, 0.9504, 0.9506]],
        [[0.0154, 0.0154, 0.0152,  ..., 0.0155, 0.0156, 0.0154],
         [0.0154, 0.0154, 0.0152,  ..., 0.0155, 0.0156, 0.0154],
         [0.0154, 0.0154, 0.0152,  ..., 0.0155, 0.0156, 0.0154],
         [0.9539, 0.9538, 0.9545,  ..., 0.9534, 0.9532, 0.9539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2091e-02, 1.2091e-02, 1.2751e-02,  ..., 1.2908e-02,
          1.2584e-02, 1.2392e-02],
         [1.2091e-02, 1.2091e-02, 1.2751e-02,  ..., 1.2908e-02,
          1.2584e-02, 1.2392e-02],
         [1.2091e-02, 1.2091e-02, 1.2751e-02,  ..., 1.2908e-02,
          1.2584e-02, 1.2392e-02],
         [9.6373e-01, 9.6373e-01, 9.6175e-01,  ..., 9.6128e-01,
          9.6225e-01, 9.6283e-01]],
        [[1.2617e-02, 1.2177e-02, 1.2592e-02,  ..., 1.1500e-04,
          1.2093e-02, 1.1975e-02],
         [1.2617e-02, 1.2177e-02, 1.2592e-02,  ..., 1.1500e-04,
          1.2093e-02, 1.1975e-02],
         [1.2617e-02, 1.2177e-02, 1.2592e-02,  ..., 9.9966e-01,
          1.2093e-02, 1.1975e-02],
         [9.6215e-01, 9.6347e-01, 9.6223e-01,  ..., 1.1500e-04,
          9.6372e-01, 9.6407e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 234:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:38,991 [Process: 0] Synchronize training processes
2024-08-16 15:55:38,991 [Process: 0] Evaluating...
2024-08-16 15:55:38,993 [Process: 0] EPOCH 235:
2024-08-16 15:55:38,995 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0165, 0.0165, 0.0165,  ..., 0.0165, 0.0165, 0.0165],
         [0.0165, 0.0165, 0.0165,  ..., 0.0165, 0.0165, 0.0165],
         [0.0165, 0.0165, 0.0165,  ..., 0.0165, 0.0165, 0.0165],
         [0.9505, 0.9506, 0.9504,  ..., 0.9506, 0.9506, 0.9504]],
        [[0.0147, 0.0157, 0.0154,  ..., 0.0154, 0.0158, 0.0156],
         [0.0147, 0.0157, 0.0154,  ..., 0.0154, 0.0158, 0.0156],
         [0.0147, 0.0157, 0.0154,  ..., 0.0154, 0.0158, 0.0156],
         [0.9559, 0.9529, 0.9538,  ..., 0.9539, 0.9526, 0.9532]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2739e-02, 1.1666e-02, 1.1954e-02,  ..., 1.2247e-02,
          1.2347e-02, 1.2279e-02],
         [1.2739e-02, 1.1666e-02, 1.1954e-02,  ..., 1.2247e-02,
          1.2347e-02, 1.2279e-02],
         [1.2739e-02, 1.1666e-02, 1.1954e-02,  ..., 1.2247e-02,
          1.2347e-02, 1.2279e-02],
         [9.6178e-01, 9.6500e-01, 9.6414e-01,  ..., 9.6326e-01,
          9.6296e-01, 9.6316e-01]],
        [[1.2222e-02, 1.2982e-02, 1.1678e-02,  ..., 9.6093e-05,
          1.2805e-02, 1.2288e-02],
         [1.2222e-02, 1.2982e-02, 1.1678e-02,  ..., 9.6093e-05,
          1.2805e-02, 1.2288e-02],
         [1.2222e-02, 1.2982e-02, 1.1678e-02,  ..., 9.9971e-01,
          1.2805e-02, 1.2288e-02],
         [9.6333e-01, 9.6105e-01, 9.6497e-01,  ..., 9.6093e-05,
          9.6159e-01, 9.6314e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 235:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0162, 0.0162, 0.0162,  ..., 0.0163, 0.0163, 0.0163],
         [0.0162, 0.0162, 0.0162,  ..., 0.0163, 0.0163, 0.0163],
         [0.0162, 0.0162, 0.0162,  ..., 0.0163, 0.0163, 0.0163],
         [0.9515, 0.9513, 0.9513,  ..., 0.9512, 0.9512, 0.9512]],
        [[0.0155, 0.0154, 0.0152,  ..., 0.0152, 0.0150, 0.0151],
         [0.0155, 0.0154, 0.0152,  ..., 0.0152, 0.0150, 0.0151],
         [0.0155, 0.0154, 0.0152,  ..., 0.0152, 0.0150, 0.0151],
         [0.9536, 0.9538, 0.9545,  ..., 0.9543, 0.9549, 0.9547]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2383e-02, 1.1816e-02, 1.2494e-02,  ..., 1.2161e-02,
          1.2329e-02, 1.2524e-02],
         [1.2383e-02, 1.1816e-02, 1.2494e-02,  ..., 1.2161e-02,
          1.2329e-02, 1.2524e-02],
         [1.2383e-02, 1.1816e-02, 1.2494e-02,  ..., 1.2161e-02,
          1.2329e-02, 1.2524e-02],
         [9.6285e-01, 9.6455e-01, 9.6252e-01,  ..., 9.6352e-01,
          9.6301e-01, 9.6243e-01]],
        [[1.2440e-02, 1.2180e-02, 1.2411e-02,  ..., 1.1703e-04,
          1.2460e-02, 1.2849e-02],
         [1.2440e-02, 1.2180e-02, 1.2411e-02,  ..., 1.1703e-04,
          1.2460e-02, 1.2849e-02],
         [1.2440e-02, 1.2180e-02, 1.2411e-02,  ..., 9.9965e-01,
          1.2460e-02, 1.2849e-02],
         [9.6268e-01, 9.6346e-01, 9.6277e-01,  ..., 1.1703e-04,
          9.6262e-01, 9.6145e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 236:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:41,011 [Process: 0] Synchronize training processes
2024-08-16 15:55:41,011 [Process: 0] Evaluating...
2024-08-16 15:55:41,013 [Process: 0] EPOCH 236:
2024-08-16 15:55:41,015 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0163, 0.0162, 0.0162,  ..., 0.0161, 0.0161, 0.0161],
         [0.0163, 0.0162, 0.0162,  ..., 0.0161, 0.0161, 0.0161],
         [0.0163, 0.0162, 0.0162,  ..., 0.0161, 0.0161, 0.0161],
         [0.9512, 0.9514, 0.9515,  ..., 0.9517, 0.9518, 0.9517]],
        [[0.0153, 0.0152, 0.0153,  ..., 0.0150, 0.0152, 0.0154],
         [0.0153, 0.0152, 0.0153,  ..., 0.0150, 0.0152, 0.0154],
         [0.0153, 0.0152, 0.0153,  ..., 0.0150, 0.0152, 0.0154],
         [0.9541, 0.9543, 0.9541,  ..., 0.9549, 0.9545, 0.9539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2478e-02, 1.2459e-02, 1.2060e-02,  ..., 1.2262e-02,
          1.2029e-02, 1.2236e-02],
         [1.2478e-02, 1.2459e-02, 1.2060e-02,  ..., 1.2262e-02,
          1.2029e-02, 1.2236e-02],
         [1.2478e-02, 1.2459e-02, 1.2060e-02,  ..., 1.2262e-02,
          1.2029e-02, 1.2236e-02],
         [9.6256e-01, 9.6262e-01, 9.6382e-01,  ..., 9.6321e-01,
          9.6391e-01, 9.6329e-01]],
        [[1.2461e-02, 1.1809e-02, 1.2591e-02,  ..., 8.1916e-04,
          1.2678e-02, 1.2080e-02],
         [1.2461e-02, 1.1809e-02, 1.2591e-02,  ..., 8.1916e-04,
          1.2678e-02, 1.2080e-02],
         [1.2461e-02, 1.1809e-02, 1.2591e-02,  ..., 9.9754e-01,
          1.2678e-02, 1.2080e-02],
         [9.6262e-01, 9.6457e-01, 9.6223e-01,  ..., 8.1916e-04,
          9.6197e-01, 9.6376e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 237:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:43,106 [Process: 0] Synchronize training processes
2024-08-16 15:55:43,106 [Process: 0] Evaluating...
2024-08-16 15:55:43,108 [Process: 0] EPOCH 237:
2024-08-16 15:55:43,110 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0160, 0.0161, 0.0160,  ..., 0.0159, 0.0162, 0.0161],
         [0.0160, 0.0161, 0.0160,  ..., 0.0159, 0.0162, 0.0161],
         [0.0160, 0.0161, 0.0160,  ..., 0.0159, 0.0162, 0.0161],
         [0.9520, 0.9518, 0.9519,  ..., 0.9524, 0.9515, 0.9517]],
        [[0.0152, 0.0155, 0.0154,  ..., 0.0154, 0.0149, 0.0145],
         [0.0152, 0.0155, 0.0154,  ..., 0.0154, 0.0149, 0.0145],
         [0.0152, 0.0155, 0.0154,  ..., 0.0154, 0.0149, 0.0145],
         [0.9544, 0.9536, 0.9537,  ..., 0.9537, 0.9554, 0.9566]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0120, 0.0120,  ..., 0.0118, 0.0120, 0.0119],
         [0.0119, 0.0120, 0.0120,  ..., 0.0118, 0.0120, 0.0119],
         [0.0119, 0.0120, 0.0120,  ..., 0.0118, 0.0120, 0.0119],
         [0.9643, 0.9640, 0.9640,  ..., 0.9645, 0.9641, 0.9642]],
        [[0.0117, 0.0122, 0.0119,  ..., 0.0056, 0.0119, 0.0120],
         [0.0117, 0.0122, 0.0119,  ..., 0.0056, 0.0119, 0.0120],
         [0.0117, 0.0122, 0.0119,  ..., 0.9833, 0.0119, 0.0120],
         [0.9650, 0.9635, 0.9642,  ..., 0.0056, 0.9642, 0.9641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 238:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:45,184 [Process: 0] Synchronize training processes
2024-08-16 15:55:45,185 [Process: 0] Evaluating...
2024-08-16 15:55:45,186 [Process: 0] EPOCH 238:
2024-08-16 15:55:45,188 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0158, 0.0159, 0.0160,  ..., 0.0159, 0.0159, 0.0158],
         [0.0158, 0.0159, 0.0160,  ..., 0.0159, 0.0159, 0.0158],
         [0.0158, 0.0159, 0.0160,  ..., 0.0159, 0.0159, 0.0158],
         [0.9527, 0.9524, 0.9521,  ..., 0.9523, 0.9524, 0.9526]],
        [[0.0146, 0.0151, 0.0150,  ..., 0.0151, 0.0150, 0.0145],
         [0.0146, 0.0151, 0.0150,  ..., 0.0151, 0.0150, 0.0145],
         [0.0146, 0.0151, 0.0150,  ..., 0.0151, 0.0150, 0.0145],
         [0.9562, 0.9546, 0.9550,  ..., 0.9547, 0.9550, 0.9565]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0125, 0.0118,  ..., 0.0120, 0.0122, 0.0121],
         [0.0120, 0.0125, 0.0118,  ..., 0.0120, 0.0122, 0.0121],
         [0.0120, 0.0125, 0.0118,  ..., 0.0120, 0.0122, 0.0121],
         [0.9640, 0.9624, 0.9647,  ..., 0.9640, 0.9633, 0.9637]],
        [[0.0123, 0.0117, 0.0124,  ..., 0.0028, 0.0119, 0.0120],
         [0.0123, 0.0117, 0.0124,  ..., 0.0028, 0.0119, 0.0120],
         [0.0123, 0.0117, 0.0124,  ..., 0.9916, 0.0119, 0.0120],
         [0.9632, 0.9650, 0.9627,  ..., 0.0028, 0.9643, 0.9639]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 239:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:47,287 [Process: 0] Synchronize training processes
2024-08-16 15:55:47,288 [Process: 0] Evaluating...
2024-08-16 15:55:47,289 [Process: 0] EPOCH 239:
2024-08-16 15:55:47,291 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0155, 0.0157, 0.0156,  ..., 0.0158, 0.0157, 0.0157],
         [0.0155, 0.0157, 0.0156,  ..., 0.0158, 0.0157, 0.0157],
         [0.0155, 0.0157, 0.0156,  ..., 0.0158, 0.0157, 0.0157],
         [0.9534, 0.9530, 0.9531,  ..., 0.9526, 0.9528, 0.9529]],
        [[0.0151, 0.0147, 0.0151,  ..., 0.0152, 0.0148, 0.0150],
         [0.0151, 0.0147, 0.0151,  ..., 0.0152, 0.0148, 0.0150],
         [0.0151, 0.0147, 0.0151,  ..., 0.0152, 0.0148, 0.0150],
         [0.9546, 0.9558, 0.9548,  ..., 0.9544, 0.9555, 0.9550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2417e-02, 1.1644e-02, 1.1522e-02,  ..., 1.2265e-02,
          1.2319e-02, 1.2145e-02],
         [1.2417e-02, 1.1644e-02, 1.1522e-02,  ..., 1.2265e-02,
          1.2319e-02, 1.2145e-02],
         [1.2417e-02, 1.1644e-02, 1.1522e-02,  ..., 1.2265e-02,
          1.2319e-02, 1.2145e-02],
         [9.6275e-01, 9.6507e-01, 9.6543e-01,  ..., 9.6321e-01,
          9.6304e-01, 9.6356e-01]],
        [[1.1510e-02, 1.1585e-02, 1.1751e-02,  ..., 1.5255e-04,
          1.1351e-02, 1.1423e-02],
         [1.1510e-02, 1.1585e-02, 1.1751e-02,  ..., 1.5255e-04,
          1.1351e-02, 1.1423e-02],
         [1.1510e-02, 1.1585e-02, 1.1751e-02,  ..., 9.9954e-01,
          1.1351e-02, 1.1423e-02],
         [9.6547e-01, 9.6524e-01, 9.6475e-01,  ..., 1.5255e-04,
          9.6595e-01, 9.6573e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 240:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:49,379 [Process: 0] Synchronize training processes
2024-08-16 15:55:49,379 [Process: 0] Evaluating...
2024-08-16 15:55:49,381 [Process: 0] EPOCH 240:
2024-08-16 15:55:49,383 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0157, 0.0154, 0.0155,  ..., 0.0157, 0.0155, 0.0156],
         [0.0157, 0.0154, 0.0155,  ..., 0.0157, 0.0155, 0.0156],
         [0.0157, 0.0154, 0.0155,  ..., 0.0157, 0.0155, 0.0156],
         [0.9528, 0.9537, 0.9535,  ..., 0.9528, 0.9534, 0.9532]],
        [[0.0148, 0.0149, 0.0151,  ..., 0.0147, 0.0149, 0.0147],
         [0.0148, 0.0149, 0.0151,  ..., 0.0147, 0.0149, 0.0147],
         [0.0148, 0.0149, 0.0151,  ..., 0.0147, 0.0149, 0.0147],
         [0.9557, 0.9552, 0.9548,  ..., 0.9559, 0.9554, 0.9558]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.2019e-02, 1.2057e-02, 1.1868e-02,  ..., 1.2200e-02,
          1.2203e-02, 1.1874e-02],
         [1.2019e-02, 1.2057e-02, 1.1868e-02,  ..., 1.2200e-02,
          1.2203e-02, 1.1874e-02],
         [1.2019e-02, 1.2057e-02, 1.1868e-02,  ..., 1.2200e-02,
          1.2203e-02, 1.1874e-02],
         [9.6394e-01, 9.6383e-01, 9.6440e-01,  ..., 9.6340e-01,
          9.6339e-01, 9.6438e-01]],
        [[1.1798e-02, 1.1513e-02, 1.1976e-02,  ..., 7.9807e-04,
          1.1673e-02, 1.2143e-02],
         [1.1798e-02, 1.1513e-02, 1.1976e-02,  ..., 7.9807e-04,
          1.1673e-02, 1.2143e-02],
         [1.1798e-02, 1.1513e-02, 1.1976e-02,  ..., 9.9761e-01,
          1.1673e-02, 1.2143e-02],
         [9.6461e-01, 9.6546e-01, 9.6407e-01,  ..., 7.9807e-04,
          9.6498e-01, 9.6357e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 241:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:51,479 [Process: 0] Synchronize training processes
2024-08-16 15:55:51,479 [Process: 0] Evaluating...
2024-08-16 15:55:51,481 [Process: 0] EPOCH 241:
2024-08-16 15:55:51,483 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0155, 0.0153, 0.0153,  ..., 0.0156, 0.0154, 0.0153],
         [0.0155, 0.0153, 0.0153,  ..., 0.0156, 0.0154, 0.0153],
         [0.0155, 0.0153, 0.0153,  ..., 0.0156, 0.0154, 0.0153],
         [0.9536, 0.9540, 0.9542,  ..., 0.9533, 0.9537, 0.9540]],
        [[0.0144, 0.0151, 0.0146,  ..., 0.0150, 0.0149, 0.0143],
         [0.0144, 0.0151, 0.0146,  ..., 0.0150, 0.0149, 0.0143],
         [0.0144, 0.0151, 0.0146,  ..., 0.0150, 0.0149, 0.0143],
         [0.9567, 0.9548, 0.9563,  ..., 0.9551, 0.9553, 0.9572]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1790e-02, 1.1497e-02, 1.2153e-02,  ..., 1.2088e-02,
          1.2463e-02, 1.1556e-02],
         [1.1790e-02, 1.1497e-02, 1.2153e-02,  ..., 1.2088e-02,
          1.2463e-02, 1.1556e-02],
         [1.1790e-02, 1.1497e-02, 1.2153e-02,  ..., 1.2088e-02,
          1.2463e-02, 1.1556e-02],
         [9.6463e-01, 9.6551e-01, 9.6354e-01,  ..., 9.6374e-01,
          9.6261e-01, 9.6533e-01]],
        [[1.2205e-02, 1.1600e-02, 1.2094e-02,  ..., 1.9482e-04,
          1.1281e-02, 1.1688e-02],
         [1.2205e-02, 1.1600e-02, 1.2094e-02,  ..., 1.9482e-04,
          1.1281e-02, 1.1688e-02],
         [1.2205e-02, 1.1600e-02, 1.2094e-02,  ..., 9.9942e-01,
          1.1281e-02, 1.1688e-02],
         [9.6338e-01, 9.6520e-01, 9.6372e-01,  ..., 1.9482e-04,
          9.6616e-01, 9.6493e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 242:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:53,571 [Process: 0] Synchronize training processes
2024-08-16 15:55:53,572 [Process: 0] Evaluating...
2024-08-16 15:55:53,580 [Process: 0] EPOCH 242:
2024-08-16 15:55:53,582 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0153, 0.0154, 0.0154,  ..., 0.0153, 0.0153, 0.0154],
         [0.0153, 0.0154, 0.0154,  ..., 0.0153, 0.0153, 0.0154],
         [0.0153, 0.0154, 0.0154,  ..., 0.0153, 0.0153, 0.0154],
         [0.9540, 0.9539, 0.9538,  ..., 0.9542, 0.9542, 0.9538]],
        [[0.0144, 0.0150, 0.0143,  ..., 0.0150, 0.0146, 0.0141],
         [0.0144, 0.0150, 0.0143,  ..., 0.0150, 0.0146, 0.0141],
         [0.0144, 0.0150, 0.0143,  ..., 0.0150, 0.0146, 0.0141],
         [0.9567, 0.9549, 0.9570,  ..., 0.9551, 0.9561, 0.9576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1504e-02, 1.1523e-02, 1.2079e-02,  ..., 1.1735e-02,
          1.2098e-02, 1.1831e-02],
         [1.1504e-02, 1.1523e-02, 1.2079e-02,  ..., 1.1735e-02,
          1.2098e-02, 1.1831e-02],
         [1.1504e-02, 1.1523e-02, 1.2079e-02,  ..., 1.1735e-02,
          1.2098e-02, 1.1831e-02],
         [9.6549e-01, 9.6543e-01, 9.6376e-01,  ..., 9.6480e-01,
          9.6371e-01, 9.6451e-01]],
        [[1.1339e-02, 1.1577e-02, 1.1791e-02,  ..., 1.0375e-04,
          1.1460e-02, 1.1552e-02],
         [1.1339e-02, 1.1577e-02, 1.1791e-02,  ..., 1.0375e-04,
          1.1460e-02, 1.1552e-02],
         [1.1339e-02, 1.1577e-02, 1.1791e-02,  ..., 9.9969e-01,
          1.1460e-02, 1.1552e-02],
         [9.6598e-01, 9.6527e-01, 9.6463e-01,  ..., 1.0375e-04,
          9.6562e-01, 9.6534e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 243:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:55:55,669 [Process: 0] Synchronize training processes
2024-08-16 15:55:55,669 [Process: 0] Evaluating...
2024-08-16 15:55:55,671 [Process: 0] EPOCH 243:
2024-08-16 15:55:55,673 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0153, 0.0153,  ..., 0.0153, 0.0153, 0.0152],
         [0.0152, 0.0153, 0.0153,  ..., 0.0153, 0.0153, 0.0152],
         [0.0152, 0.0153, 0.0153,  ..., 0.0153, 0.0153, 0.0152],
         [0.9545, 0.9541, 0.9541,  ..., 0.9541, 0.9541, 0.9543]],
        [[0.0147, 0.0146, 0.0150,  ..., 0.0146, 0.0142, 0.0144],
         [0.0147, 0.0146, 0.0150,  ..., 0.0146, 0.0142, 0.0144],
         [0.0147, 0.0146, 0.0150,  ..., 0.0146, 0.0142, 0.0144],
         [0.9560, 0.9562, 0.9549,  ..., 0.9562, 0.9573, 0.9567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1195e-02, 1.1521e-02, 1.1683e-02,  ..., 1.1441e-02,
          1.2277e-02, 1.1483e-02],
         [1.1195e-02, 1.1521e-02, 1.1683e-02,  ..., 1.1441e-02,
          1.2277e-02, 1.1483e-02],
         [1.1195e-02, 1.1521e-02, 1.1683e-02,  ..., 1.1441e-02,
          1.2277e-02, 1.1483e-02],
         [9.6641e-01, 9.6544e-01, 9.6495e-01,  ..., 9.6568e-01,
          9.6317e-01, 9.6555e-01]],
        [[1.1431e-02, 1.1778e-02, 1.1845e-02,  ..., 2.4438e-04,
          1.1754e-02, 1.1632e-02],
         [1.1431e-02, 1.1778e-02, 1.1845e-02,  ..., 2.4438e-04,
          1.1754e-02, 1.1632e-02],
         [1.1431e-02, 1.1778e-02, 1.1845e-02,  ..., 9.9927e-01,
          1.1754e-02, 1.1632e-02],
         [9.6571e-01, 9.6467e-01, 9.6446e-01,  ..., 2.4438e-04,
          9.6474e-01, 9.6510e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:55:57,753 [Process: 0] Synchronize training processes
2024-08-16 15:55:57,753 [Process: 0] Evaluating...
2024-08-16 15:55:57,755 [Process: 0] EPOCH 244:
2024-08-16 15:55:57,757 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 244:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0152, 0.0151, 0.0152,  ..., 0.0150, 0.0151, 0.0152],
         [0.0152, 0.0151, 0.0152,  ..., 0.0150, 0.0151, 0.0152],
         [0.0152, 0.0151, 0.0152,  ..., 0.0150, 0.0151, 0.0152],
         [0.9545, 0.9546, 0.9545,  ..., 0.9551, 0.9548, 0.9544]],
        [[0.0145, 0.0144, 0.0142,  ..., 0.0138, 0.0144, 0.0144],
         [0.0145, 0.0144, 0.0142,  ..., 0.0138, 0.0144, 0.0144],
         [0.0145, 0.0144, 0.0142,  ..., 0.0138, 0.0144, 0.0144],
         [0.9565, 0.9569, 0.9574,  ..., 0.9586, 0.9567, 0.9567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape:
2024-08-16 15:55:59,851 [Process: 0] Synchronize training processes
2024-08-16 15:55:59,852 [Process: 0] Evaluating...
2024-08-16 15:55:59,854 [Process: 0] EPOCH 245:
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1171e-02, 1.1681e-02, 1.1574e-02,  ..., 1.0971e-02,
          1.2230e-02, 1.1810e-02],
         [1.1171e-02, 1.1681e-02, 1.1574e-02,  ..., 1.0971e-02,
          1.2230e-02, 1.1810e-02],
         [1.1171e-02, 1.1681e-02, 1.1574e-02,  ..., 1.0971e-02,
          1.2230e-02, 1.1810e-02],
         [9.6649e-01, 9.6496e-01, 9.6528e-01,  ..., 9.6709e-01,
          9.6331e-01, 9.6457e-01]],
        [[1.1072e-02, 1.1272e-02, 1.2043e-02,  ..., 3.3182e-04,
          1.1343e-02, 1.1329e-02],
         [1.1072e-02, 1.1272e-02, 1.2043e-02,  ..., 3.3182e-04,
          1.1343e-02, 1.1329e-02],
         [1.1072e-02, 1.1272e-02, 1.2043e-02,  ..., 9.9900e-01,
          1.1343e-02, 1.1329e-02],
         [9.6678e-01, 9.6618e-01, 9.6387e-01,  ..., 3.3182e-04,
          9.6597e-01, 9.6601e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 245:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0148, 0.0150, 0.0149,  ..., 0.0149, 0.0151, 0.0150],
         [0.0148, 0.0150, 0.0149,  ..., 0.0149, 0.0151, 0.0150],
         [0.0148, 0.0150, 0.0149,  ..., 0.0149, 0.0151, 0.0150],
         [0.9555, 0.9551, 0.9553,  ..., 0.9552, 0.9548, 0.9549]],
        [[0.0145, 0.0141, 0.0144,  ..., 0.0141, 0.0141, 0.0150],
         [0.0145, 0.0141, 0.0144,  ..., 0.0141, 0.0141, 0.0150],
         [0.0145, 0.0141, 0.0144,  ..., 0.0141, 0.0141, 0.0150],
         [0.9564, 0.9577, 0.9569,  ..., 0.9576, 0.9578, 0.9550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:56:01,939 [Process: 0] Synchronize training processes
2024-08-16 15:56:01,939 [Process: 0] Evaluating...
2024-08-16 15:56:01,941 [Process: 0] EPOCH 246:
2024-08-16 15:56:01,943 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1279e-02, 1.0708e-02, 1.1457e-02,  ..., 1.0956e-02,
          1.2020e-02, 1.1018e-02],
         [1.1279e-02, 1.0708e-02, 1.1457e-02,  ..., 1.0956e-02,
          1.2020e-02, 1.1018e-02],
         [1.1279e-02, 1.0708e-02, 1.1457e-02,  ..., 1.0956e-02,
          1.2020e-02, 1.1018e-02],
         [9.6616e-01, 9.6788e-01, 9.6563e-01,  ..., 9.6713e-01,
          9.6394e-01, 9.6695e-01]],
        [[1.0952e-02, 1.1973e-02, 1.1267e-02,  ..., 1.9580e-04,
          1.1085e-02, 1.1062e-02],
         [1.0952e-02, 1.1973e-02, 1.1267e-02,  ..., 1.9580e-04,
          1.1085e-02, 1.1062e-02],
         [1.0952e-02, 1.1973e-02, 1.1267e-02,  ..., 9.9941e-01,
          1.1085e-02, 1.1062e-02],
         [9.6714e-01, 9.6408e-01, 9.6620e-01,  ..., 1.9580e-04,
          9.6674e-01, 9.6682e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 246:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0147, 0.0145, 0.0146,  ..., 0.0146, 0.0148, 0.0146],
         [0.0147, 0.0145, 0.0146,  ..., 0.0146, 0.0148, 0.0146],
         [0.0147, 0.0145, 0.0146,  ..., 0.0146, 0.0148, 0.0146],
         [0.9560, 0.9564, 0.9561,  ..., 0.9562, 0.9555, 0.9561]],
        [[0.0140, 0.0151, 0.0168,  ..., 0.0136, 0.0138, 0.0164],
         [0.0140, 0.0151, 0.0168,  ..., 0.0136, 0.0138, 0.0164],
         [0.0140, 0.0151, 0.0168,  ..., 0.0136, 0.0138, 0.0164],
         [0.9581, 0.9546, 0.9497,  ..., 0.9592, 0.9587, 0.9509]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:04,030 [Process: 0] Synchronize training processes
2024-08-16 15:56:04,030 [Process: 0] Evaluating...
2024-08-16 15:56:04,032 [Process: 0] EPOCH 247:
2024-08-16 15:56:04,034 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1344e-02, 1.0631e-02, 1.0766e-02,  ..., 1.1070e-02,
          1.2184e-02, 1.1444e-02],
         [1.1344e-02, 1.0631e-02, 1.0766e-02,  ..., 1.1070e-02,
          1.2184e-02, 1.1444e-02],
         [1.1344e-02, 1.0631e-02, 1.0766e-02,  ..., 1.1070e-02,
          1.2184e-02, 1.1444e-02],
         [9.6597e-01, 9.6811e-01, 9.6770e-01,  ..., 9.6679e-01,
          9.6345e-01, 9.6567e-01]],
        [[1.1180e-02, 1.1506e-02, 1.1224e-02,  ..., 1.5115e-04,
          1.1612e-02, 1.1808e-02],
         [1.1180e-02, 1.1506e-02, 1.1224e-02,  ..., 1.5115e-04,
          1.1612e-02, 1.1808e-02],
         [1.1180e-02, 1.1506e-02, 1.1224e-02,  ..., 9.9955e-01,
          1.1612e-02, 1.1808e-02],
         [9.6646e-01, 9.6548e-01, 9.6633e-01,  ..., 1.5115e-04,
          9.6516e-01, 9.6458e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 247:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0150, 0.0150, 0.0149,  ..., 0.0149, 0.0149, 0.0150],
         [0.0150, 0.0150, 0.0149,  ..., 0.0149, 0.0149, 0.0150],
         [0.0150, 0.0150, 0.0149,  ..., 0.0149, 0.0149, 0.0150],
         [0.9551, 0.9551, 0.9553,  ..., 0.9553, 0.9552, 0.9550]],
        [[0.0144, 0.0140, 0.0147,  ..., 0.0146, 0.0144, 0.0140],
         [0.0144, 0.0140, 0.0147,  ..., 0.0146, 0.0144, 0.0140],
         [0.0144, 0.0140, 0.0147,  ..., 0.0146, 0.0144, 0.0140],
         [0.9567, 0.9580, 0.9560,  ..., 0.9563, 0.9569, 0.9579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:06,175 [Process: 0] Synchronize training processes
2024-08-16 15:56:06,176 [Process: 0] Evaluating...
2024-08-16 15:56:06,178 [Process: 0] EPOCH 248:
2024-08-16 15:56:06,180 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1062e-02, 1.1455e-02, 1.1335e-02,  ..., 1.0965e-02,
          1.1232e-02, 1.1018e-02],
         [1.1062e-02, 1.1455e-02, 1.1335e-02,  ..., 1.0965e-02,
          1.1232e-02, 1.1018e-02],
         [1.1062e-02, 1.1455e-02, 1.1335e-02,  ..., 1.0965e-02,
          1.1232e-02, 1.1018e-02],
         [9.6681e-01, 9.6563e-01, 9.6599e-01,  ..., 9.6711e-01,
          9.6630e-01, 9.6695e-01]],
        [[1.1002e-02, 1.1355e-02, 1.1636e-02,  ..., 2.0817e-04,
          1.1358e-02, 1.0961e-02],
         [1.1002e-02, 1.1355e-02, 1.1636e-02,  ..., 2.0817e-04,
          1.1358e-02, 1.0961e-02],
         [1.1002e-02, 1.1355e-02, 1.1636e-02,  ..., 9.9938e-01,
          1.1358e-02, 1.0961e-02],
         [9.6699e-01, 9.6594e-01, 9.6509e-01,  ..., 2.0817e-04,
          9.6592e-01, 9.6712e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 248:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0149, 0.0147, 0.0147,  ..., 0.0147, 0.0148, 0.0148],
         [0.0149, 0.0147, 0.0147,  ..., 0.0147, 0.0148, 0.0148],
         [0.0149, 0.0147, 0.0147,  ..., 0.0147, 0.0148, 0.0148],
         [0.9552, 0.9560, 0.9559,  ..., 0.9560, 0.9557, 0.9555]],
        [[0.0135, 0.0138, 0.0138,  ..., 0.0142, 0.0136, 0.0139],
         [0.0135, 0.0138, 0.0138,  ..., 0.0142, 0.0136, 0.0139],
         [0.0135, 0.0138, 0.0138,  ..., 0.0142, 0.0136, 0.0139],
         [0.9595, 0.9585, 0.9586,  ..., 0.9575, 0.9592, 0.9584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:08,379 [Process: 0] Synchronize training processes
2024-08-16 15:56:08,379 [Process: 0] Evaluating...
2024-08-16 15:56:08,381 [Process: 0] EPOCH 249:
2024-08-16 15:56:08,383 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0754e-02, 1.0969e-02, 1.0897e-02,  ..., 1.0667e-02,
          1.0843e-02, 1.0750e-02],
         [1.0754e-02, 1.0969e-02, 1.0897e-02,  ..., 1.0667e-02,
          1.0843e-02, 1.0750e-02],
         [1.0754e-02, 1.0969e-02, 1.0897e-02,  ..., 1.0667e-02,
          1.0843e-02, 1.0750e-02],
         [9.6774e-01, 9.6709e-01, 9.6731e-01,  ..., 9.6800e-01,
          9.6747e-01, 9.6775e-01]],
        [[1.0927e-02, 1.0936e-02, 1.0827e-02,  ..., 3.5752e-04,
          1.1210e-02, 1.1463e-02],
         [1.0927e-02, 1.0936e-02, 1.0827e-02,  ..., 3.5752e-04,
          1.1210e-02, 1.1463e-02],
         [1.0927e-02, 1.0936e-02, 1.0827e-02,  ..., 9.9893e-01,
          1.1210e-02, 1.1463e-02],
         [9.6722e-01, 9.6719e-01, 9.6752e-01,  ..., 3.5752e-04,
          9.6637e-01, 9.6561e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 249:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0149, 0.0147, 0.0149,  ..., 0.0147, 0.0147, 0.0148],
         [0.0149, 0.0147, 0.0149,  ..., 0.0147, 0.0147, 0.0148],
         [0.0149, 0.0147, 0.0149,  ..., 0.0147, 0.0147, 0.0148],
         [0.9552, 0.9559, 0.9554,  ..., 0.9559, 0.9558, 0.9556]],
        [[0.0139, 0.0138, 0.0143,  ..., 0.0141, 0.0140, 0.0139],
         [0.0139, 0.0138, 0.0143,  ..., 0.0141, 0.0140, 0.0139],
         [0.0139, 0.0138, 0.0143,  ..., 0.0141, 0.0140, 0.0139],
         [0.9584, 0.9586, 0.9572,  ..., 0.9576, 0.9579, 0.9584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:10,592 [Process: 0] Synchronize training processes
2024-08-16 15:56:10,592 [Process: 0] Evaluating...
2024-08-16 15:56:10,594 [Process: 0] EPOCH 250:
2024-08-16 15:56:10,596 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0984e-02, 1.0909e-02, 1.0867e-02,  ..., 1.1021e-02,
          1.1139e-02, 1.1052e-02],
         [1.0984e-02, 1.0909e-02, 1.0867e-02,  ..., 1.1021e-02,
          1.1139e-02, 1.1052e-02],
         [1.0984e-02, 1.0909e-02, 1.0867e-02,  ..., 1.1021e-02,
          1.1139e-02, 1.1052e-02],
         [9.6705e-01, 9.6727e-01, 9.6740e-01,  ..., 9.6694e-01,
          9.6658e-01, 9.6684e-01]],
        [[1.1154e-02, 1.1207e-02, 1.1335e-02,  ..., 2.1042e-04,
          1.1281e-02, 1.1080e-02],
         [1.1154e-02, 1.1207e-02, 1.1335e-02,  ..., 2.1042e-04,
          1.1281e-02, 1.1080e-02],
         [1.1154e-02, 1.1207e-02, 1.1335e-02,  ..., 9.9937e-01,
          1.1281e-02, 1.1080e-02],
         [9.6654e-01, 9.6638e-01, 9.6600e-01,  ..., 2.1042e-04,
          9.6616e-01, 9.6676e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 250:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0144, 0.0145, 0.0144,  ..., 0.0145, 0.0144, 0.0146],
         [0.0144, 0.0145, 0.0144,  ..., 0.0145, 0.0144, 0.0146],
         [0.0144, 0.0145, 0.0144,  ..., 0.0145, 0.0144, 0.0146],
         [0.9568, 0.9565, 0.9568,  ..., 0.9566, 0.9567, 0.9563]],
        [[0.0156, 0.0146, 0.0139,  ..., 0.0143, 0.0138, 0.0152],
         [0.0156, 0.0146, 0.0139,  ..., 0.0143, 0.0138, 0.0152],
         [0.0156, 0.0146, 0.0139,  ..., 0.0143, 0.0138, 0.0152],
         [0.9531, 0.9561, 0.9582,  ..., 0.9571, 0.9586, 0.9543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:12,709 [Process: 0] Synchronize training processes
2024-08-16 15:56:12,709 [Process: 0] Evaluating...
2024-08-16 15:56:12,711 [Process: 0] EPOCH 251:
2024-08-16 15:56:12,713 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.1161e-02, 1.0978e-02, 1.1130e-02,  ..., 1.1156e-02,
          1.1077e-02, 1.1082e-02],
         [1.1161e-02, 1.0978e-02, 1.1130e-02,  ..., 1.1156e-02,
          1.1077e-02, 1.1082e-02],
         [1.1161e-02, 1.0978e-02, 1.1130e-02,  ..., 1.1156e-02,
          1.1077e-02, 1.1082e-02],
         [9.6652e-01, 9.6707e-01, 9.6661e-01,  ..., 9.6653e-01,
          9.6677e-01, 9.6675e-01]],
        [[1.0770e-02, 1.0874e-02, 1.0554e-02,  ..., 4.8887e-04,
          1.1158e-02, 1.1263e-02],
         [1.0770e-02, 1.0874e-02, 1.0554e-02,  ..., 4.8887e-04,
          1.1158e-02, 1.1263e-02],
         [1.0770e-02, 1.0874e-02, 1.0554e-02,  ..., 9.9853e-01,
          1.1158e-02, 1.1263e-02],
         [9.6769e-01, 9.6738e-01, 9.6834e-01,  ..., 4.8887e-04,
          9.6652e-01, 9.6621e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 251:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0141, 0.0142, 0.0143,  ..., 0.0142, 0.0143, 0.0144],
         [0.0141, 0.0142, 0.0143,  ..., 0.0142, 0.0143, 0.0144],
         [0.0141, 0.0142, 0.0143,  ..., 0.0142, 0.0143, 0.0144],
         [0.9576, 0.9574, 0.9571,  ..., 0.9573, 0.9572, 0.9568]],
        [[0.0141, 0.0135, 0.0135,  ..., 0.0137, 0.0133, 0.0136],
         [0.0141, 0.0135, 0.0135,  ..., 0.0137, 0.0133, 0.0136],
         [0.0141, 0.0135, 0.0135,  ..., 0.0137, 0.0133, 0.0136],
         [0.9578, 0.9596, 0.9596,  ..., 0.9588, 0.9602, 0.9591]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:14,784 [Process: 0] Synchronize training processes
2024-08-16 15:56:14,784 [Process: 0] Evaluating...
2024-08-16 15:56:14,793 [Process: 0] EPOCH 252:
2024-08-16 15:56:14,795 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0524e-02, 1.0753e-02, 1.0974e-02,  ..., 1.1147e-02,
          1.1455e-02, 1.1280e-02],
         [1.0524e-02, 1.0753e-02, 1.0974e-02,  ..., 1.1147e-02,
          1.1455e-02, 1.1280e-02],
         [1.0524e-02, 1.0753e-02, 1.0974e-02,  ..., 1.1147e-02,
          1.1455e-02, 1.1280e-02],
         [9.6843e-01, 9.6774e-01, 9.6708e-01,  ..., 9.6656e-01,
          9.6564e-01, 9.6616e-01]],
        [[1.0791e-02, 1.0442e-02, 1.1064e-02,  ..., 4.8868e-04,
          1.0465e-02, 1.0532e-02],
         [1.0791e-02, 1.0442e-02, 1.1064e-02,  ..., 4.8868e-04,
          1.0465e-02, 1.0532e-02],
         [1.0791e-02, 1.0442e-02, 1.1064e-02,  ..., 9.9853e-01,
          1.0465e-02, 1.0532e-02],
         [9.6763e-01, 9.6867e-01, 9.6681e-01,  ..., 4.8868e-04,
          9.6861e-01, 9.6840e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 252:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0142, 0.0141, 0.0140,  ..., 0.0141, 0.0141, 0.0141],
         [0.0142, 0.0141, 0.0140,  ..., 0.0141, 0.0141, 0.0141],
         [0.0142, 0.0141, 0.0140,  ..., 0.0141, 0.0141, 0.0141],
         [0.9575, 0.9577, 0.9579,  ..., 0.9576, 0.9578, 0.9578]],
        [[0.0134, 0.0137, 0.0137,  ..., 0.0133, 0.0136, 0.0132],
         [0.0134, 0.0137, 0.0137,  ..., 0.0133, 0.0136, 0.0132],
         [0.0134, 0.0137, 0.0137,  ..., 0.0133, 0.0136, 0.0132],
         [0.9597, 0.9589, 0.9589,  ..., 0.9600, 0.9593, 0.9604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:16,848 [Process: 0] Synchronize training processes
2024-08-16 15:56:16,848 [Process: 0] Evaluating...
2024-08-16 15:56:16,850 [Process: 0] EPOCH 253:
2024-08-16 15:56:16,852 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0112, 0.0111, 0.0110,  ..., 0.0109, 0.0104, 0.0107],
         [0.0112, 0.0111, 0.0110,  ..., 0.0109, 0.0104, 0.0107],
         [0.0112, 0.0111, 0.0110,  ..., 0.0109, 0.0104, 0.0107],
         [0.9664, 0.9667, 0.9669,  ..., 0.9673, 0.9687, 0.9678]],
        [[0.0103, 0.0110, 0.0112,  ..., 0.0075, 0.0106, 0.0111],
         [0.0103, 0.0110, 0.0112,  ..., 0.0075, 0.0106, 0.0111],
         [0.0103, 0.0110, 0.0112,  ..., 0.9775, 0.0106, 0.0111],
         [0.9690, 0.9669, 0.9663,  ..., 0.0075, 0.9682, 0.9667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 253:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0144, 0.0145, 0.0143,  ..., 0.0143, 0.0144, 0.0143],
         [0.0144, 0.0145, 0.0143,  ..., 0.0143, 0.0144, 0.0143],
         [0.0144, 0.0145, 0.0143,  ..., 0.0143, 0.0144, 0.0143],
         [0.9569, 0.9565, 0.9571,  ..., 0.9572, 0.9567, 0.9570]],
        [[0.0130, 0.0134, 0.0138,  ..., 0.0139, 0.0137, 0.0137],
         [0.0130, 0.0134, 0.0138,  ..., 0.0139, 0.0137, 0.0137],
         [0.0130, 0.0134, 0.0138,  ..., 0.0139, 0.0137, 0.0137],
         [0.9609, 0.9599, 0.9585,  ..., 0.9584, 0.9588, 0.9589]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:18,909 [Process: 0] Synchronize training processes
2024-08-16 15:56:18,910 [Process: 0] Evaluating...
2024-08-16 15:56:18,912 [Process: 0] EPOCH 254:
2024-08-16 15:56:18,913 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0943e-02, 1.0745e-02, 1.1088e-02,  ..., 1.0768e-02,
          1.1042e-02, 1.0959e-02],
         [1.0943e-02, 1.0745e-02, 1.1088e-02,  ..., 1.0768e-02,
          1.1042e-02, 1.0959e-02],
         [1.0943e-02, 1.0745e-02, 1.1088e-02,  ..., 1.0768e-02,
          1.1042e-02, 1.0959e-02],
         [9.6717e-01, 9.6777e-01, 9.6674e-01,  ..., 9.6770e-01,
          9.6687e-01, 9.6712e-01]],
        [[1.0774e-02, 1.0813e-02, 1.0737e-02,  ..., 1.2746e-04,
          1.0782e-02, 1.0868e-02],
         [1.0774e-02, 1.0813e-02, 1.0737e-02,  ..., 1.2746e-04,
          1.0782e-02, 1.0868e-02],
         [1.0774e-02, 1.0813e-02, 1.0737e-02,  ..., 9.9962e-01,
          1.0782e-02, 1.0868e-02],
         [9.6768e-01, 9.6756e-01, 9.6779e-01,  ..., 1.2746e-04,
          9.6766e-01, 9.6740e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 254:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 15:56:20,974 [Process: 0] Synchronize training processes
2024-08-16 15:56:20,974 [Process: 0] Evaluating...
2024-08-16 15:56:20,976 [Process: 0] EPOCH 255:
2024-08-16 15:56:20,978 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.0143, 0.0143, 0.0143,  ..., 0.0144, 0.0143, 0.0143],
         [0.0143, 0.0143, 0.0143,  ..., 0.0144, 0.0143, 0.0143],
         [0.0143, 0.0143, 0.0143,  ..., 0.0144, 0.0143, 0.0143],
         [0.9571, 0.9570, 0.9572,  ..., 0.9569, 0.9570, 0.9570]],
        [[0.0132, 0.0135, 0.0136,  ..., 0.0141, 0.0139, 0.0139],
         [0.0132, 0.0135, 0.0136,  ..., 0.0141, 0.0139, 0.0139],
         [0.0132, 0.0135, 0.0136,  ..., 0.0141, 0.0139, 0.0139],
         [0.9603, 0.9595, 0.9593,  ..., 0.9577, 0.9583, 0.9584]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0106, 0.0108, 0.0109,  ..., 0.0105, 0.0106, 0.0111],
         [0.0106, 0.0108, 0.0109,  ..., 0.0105, 0.0106, 0.0111],
         [0.0106, 0.0108, 0.0109,  ..., 0.0105, 0.0106, 0.0111],
         [0.9681, 0.9676, 0.9672,  ..., 0.9684, 0.9683, 0.9666]],
        [[0.0108, 0.0109, 0.0107,  ..., 0.0026, 0.0101, 0.0111],
         [0.0108, 0.0109, 0.0107,  ..., 0.0026, 0.0101, 0.0111],
         [0.0108, 0.0109, 0.0107,  ..., 0.9923, 0.0101, 0.0111],
         [0.9675, 0.9673, 0.9679,  ..., 0.0026, 0.9697, 0.9666]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 255:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0141, 0.0143, 0.0143,  ..., 0.0143, 0.0142, 0.0142],
         [0.0141, 0.0143, 0.0143,  ..., 0.0143, 0.0142, 0.0142],
         [0.0141, 0.0143, 0.0143,  ..., 0.0143, 0.0142, 0.0142],
         [0.9576, 0.9572, 0.9572,  ..., 0.9572, 0.9573, 0.9574]],
        [[0.0136, 0.0136, 0.0132,  ..., 0.0132, 0.0136, 0.0130],
         [0.0136, 0.0136, 0.0132,  ..., 0.0132, 0.0136, 0.0130],
         [0.0136, 0.0136, 0.0132,  ..., 0.0132, 0.0136, 0.0130],
         [0.9591, 0.9593, 0.9605,  ..., 0.9604, 0.9593, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0823e-02, 1.0589e-02, 1.0659e-02,  ..., 1.0496e-02,
          1.0623e-02, 1.0936e-02],
         [1.0823e-02, 1.0589e-02, 1.0659e-02,  ..., 1.0496e-02,
          1.0623e-02, 1.0936e-02],
         [1.0823e-02, 1.0589e-02, 1.0659e-02,  ..., 1.0496e-02,
          1.0623e-02, 1.0936e-02],
         [9.6753e-01, 9.6823e-01, 9.6802e-01,  ..., 9.6851e-01,
          9.6813e-01, 9.6719e-01]],
        [[1.0674e-02, 1.1078e-02, 1.0443e-02,  ..., 5.3962e-04,
          1.0674e-02, 1.0716e-02],
         [1.0674e-02, 1.1078e-02, 1.0443e-02,  ..., 5.3962e-04,
          1.0674e-02, 1.0716e-02],
         [1.0674e-02, 1.1078e-02, 1.0443e-02,  ..., 9.9838e-01,
          1.0674e-02, 1.0716e-02],
         [9.6798e-01, 9.6677e-01, 9.6867e-01,  ..., 5.3962e-04,
          9.6798e-01, 9.6785e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 256:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:23,072 [Process: 0] Synchronize training processes
2024-08-16 15:56:23,072 [Process: 0] Evaluating...
2024-08-16 15:56:23,074 [Process: 0] EPOCH 256:
2024-08-16 15:56:23,076 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0141, 0.0140, 0.0140,  ..., 0.0142, 0.0142, 0.0143],
         [0.0141, 0.0140, 0.0140,  ..., 0.0142, 0.0142, 0.0143],
         [0.0141, 0.0140, 0.0140,  ..., 0.0142, 0.0142, 0.0143],
         [0.9576, 0.9579, 0.9579,  ..., 0.9575, 0.9574, 0.9571]],
        [[0.0130, 0.0135, 0.0133,  ..., 0.0134, 0.0133, 0.0132],
         [0.0130, 0.0135, 0.0133,  ..., 0.0134, 0.0133, 0.0132],
         [0.0130, 0.0135, 0.0133,  ..., 0.0134, 0.0133, 0.0132],
         [0.9610, 0.9594, 0.9602,  ..., 0.9598, 0.9601, 0.9603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0102, 0.0109,  ..., 0.0105, 0.0110, 0.0108],
         [0.0105, 0.0102, 0.0109,  ..., 0.0105, 0.0110, 0.0108],
         [0.0105, 0.0102, 0.0109,  ..., 0.0105, 0.0110, 0.0108],
         [0.9685, 0.9693, 0.9673,  ..., 0.9686, 0.9671, 0.9676]],
        [[0.0109, 0.0109, 0.0103,  ..., 0.0039, 0.0107, 0.0108],
         [0.0109, 0.0109, 0.0103,  ..., 0.0039, 0.0107, 0.0108],
         [0.0109, 0.0109, 0.0103,  ..., 0.9883, 0.0107, 0.0108],
         [0.9672, 0.9673, 0.9692,  ..., 0.0039, 0.9679, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 257:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:25,180 [Process: 0] Synchronize training processes
2024-08-16 15:56:25,180 [Process: 0] Evaluating...
2024-08-16 15:56:25,182 [Process: 0] EPOCH 257:
2024-08-16 15:56:25,184 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0140, 0.0138,  ..., 0.0139, 0.0138, 0.0139],
         [0.0138, 0.0140, 0.0138,  ..., 0.0139, 0.0138, 0.0139],
         [0.0138, 0.0140, 0.0138,  ..., 0.0139, 0.0138, 0.0139],
         [0.9587, 0.9580, 0.9585,  ..., 0.9583, 0.9585, 0.9583]],
        [[0.0129, 0.0127, 0.0134,  ..., 0.0131, 0.0132, 0.0134],
         [0.0129, 0.0127, 0.0134,  ..., 0.0131, 0.0132, 0.0134],
         [0.0129, 0.0127, 0.0134,  ..., 0.0131, 0.0132, 0.0134],
         [0.9612, 0.9619, 0.9598,  ..., 0.9606, 0.9605, 0.9598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0657e-02, 1.0651e-02, 1.0633e-02,  ..., 1.0493e-02,
          1.0124e-02, 1.0467e-02],
         [1.0657e-02, 1.0651e-02, 1.0633e-02,  ..., 1.0493e-02,
          1.0124e-02, 1.0467e-02],
         [1.0657e-02, 1.0651e-02, 1.0633e-02,  ..., 1.0493e-02,
          1.0124e-02, 1.0467e-02],
         [9.6803e-01, 9.6805e-01, 9.6810e-01,  ..., 9.6852e-01,
          9.6963e-01, 9.6860e-01]],
        [[1.0420e-02, 1.0674e-02, 1.0398e-02,  ..., 9.4939e-05,
          1.0205e-02, 1.0570e-02],
         [1.0420e-02, 1.0674e-02, 1.0398e-02,  ..., 9.4939e-05,
          1.0205e-02, 1.0570e-02],
         [1.0420e-02, 1.0674e-02, 1.0398e-02,  ..., 9.9972e-01,
          1.0205e-02, 1.0570e-02],
         [9.6874e-01, 9.6798e-01, 9.6881e-01,  ..., 9.4939e-05,
          9.6939e-01, 9.6829e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 258:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:27,253 [Process: 0] Synchronize training processes
2024-08-16 15:56:27,253 [Process: 0] Evaluating...
2024-08-16 15:56:27,255 [Process: 0] EPOCH 258:
2024-08-16 15:56:27,257 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0136, 0.0137, 0.0136,  ..., 0.0134, 0.0136, 0.0136],
         [0.0136, 0.0137, 0.0136,  ..., 0.0134, 0.0136, 0.0136],
         [0.0136, 0.0137, 0.0136,  ..., 0.0134, 0.0136, 0.0136],
         [0.9592, 0.9590, 0.9592,  ..., 0.9597, 0.9593, 0.9592]],
        [[0.0129, 0.0129, 0.0129,  ..., 0.0129, 0.0128, 0.0131],
         [0.0129, 0.0129, 0.0129,  ..., 0.0129, 0.0128, 0.0131],
         [0.0129, 0.0129, 0.0129,  ..., 0.0129, 0.0128, 0.0131],
         [0.9612, 0.9613, 0.9612,  ..., 0.9614, 0.9616, 0.9608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0107, 0.0107,  ..., 0.0107, 0.0101, 0.0105],
         [0.0102, 0.0107, 0.0107,  ..., 0.0107, 0.0101, 0.0105],
         [0.0102, 0.0107, 0.0107,  ..., 0.0107, 0.0101, 0.0105],
         [0.9693, 0.9678, 0.9679,  ..., 0.9680, 0.9698, 0.9684]],
        [[0.0107, 0.0102, 0.0102,  ..., 0.0015, 0.0105, 0.0108],
         [0.0107, 0.0102, 0.0102,  ..., 0.0015, 0.0105, 0.0108],
         [0.0107, 0.0102, 0.0102,  ..., 0.9955, 0.0105, 0.0108],
         [0.9679, 0.9695, 0.9695,  ..., 0.0015, 0.9686, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 259:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:29,331 [Process: 0] Synchronize training processes
2024-08-16 15:56:29,331 [Process: 0] Evaluating...
2024-08-16 15:56:29,333 [Process: 0] EPOCH 259:
2024-08-16 15:56:29,335 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0137, 0.0138, 0.0137,  ..., 0.0137, 0.0135, 0.0136],
         [0.0137, 0.0138, 0.0137,  ..., 0.0137, 0.0135, 0.0136],
         [0.0137, 0.0138, 0.0137,  ..., 0.0137, 0.0135, 0.0136],
         [0.9588, 0.9587, 0.9590,  ..., 0.9589, 0.9594, 0.9592]],
        [[0.0126, 0.0132, 0.0131,  ..., 0.0128, 0.0126, 0.0131],
         [0.0126, 0.0132, 0.0131,  ..., 0.0128, 0.0126, 0.0131],
         [0.0126, 0.0132, 0.0131,  ..., 0.0128, 0.0126, 0.0131],
         [0.9621, 0.9604, 0.9607,  ..., 0.9616, 0.9622, 0.9606]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0103, 0.0103,  ..., 0.0105, 0.0104, 0.0104],
         [0.0099, 0.0103, 0.0103,  ..., 0.0105, 0.0104, 0.0104],
         [0.0099, 0.0103, 0.0103,  ..., 0.0105, 0.0104, 0.0104],
         [0.9704, 0.9690, 0.9690,  ..., 0.9685, 0.9687, 0.9688]],
        [[0.0100, 0.0107, 0.0103,  ..., 0.0011, 0.0109, 0.0106],
         [0.0100, 0.0107, 0.0103,  ..., 0.0011, 0.0109, 0.0106],
         [0.0100, 0.0107, 0.0103,  ..., 0.9966, 0.0109, 0.0106],
         [0.9700, 0.9679, 0.9691,  ..., 0.0011, 0.9672, 0.9682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 260:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:31,415 [Process: 0] Synchronize training processes
2024-08-16 15:56:31,416 [Process: 0] Evaluating...
2024-08-16 15:56:31,418 [Process: 0] EPOCH 260:
2024-08-16 15:56:31,420 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0138, 0.0138, 0.0139,  ..., 0.0139, 0.0138, 0.0138],
         [0.0138, 0.0138, 0.0139,  ..., 0.0139, 0.0138, 0.0138],
         [0.0138, 0.0138, 0.0139,  ..., 0.0139, 0.0138, 0.0138],
         [0.9585, 0.9585, 0.9584,  ..., 0.9584, 0.9585, 0.9587]],
        [[0.0130, 0.0133, 0.0130,  ..., 0.0131, 0.0131, 0.0131],
         [0.0130, 0.0133, 0.0130,  ..., 0.0131, 0.0131, 0.0131],
         [0.0130, 0.0133, 0.0130,  ..., 0.0131, 0.0131, 0.0131],
         [0.9609, 0.9602, 0.9610,  ..., 0.9606, 0.9607, 0.9608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0106, 0.0105,  ..., 0.0102, 0.0101, 0.0104],
         [0.0103, 0.0106, 0.0105,  ..., 0.0102, 0.0101, 0.0104],
         [0.0103, 0.0106, 0.0105,  ..., 0.0102, 0.0101, 0.0104],
         [0.9690, 0.9681, 0.9684,  ..., 0.9693, 0.9696, 0.9689]],
        [[0.0108, 0.0106, 0.0107,  ..., 0.0024, 0.0104, 0.0102],
         [0.0108, 0.0106, 0.0107,  ..., 0.0024, 0.0104, 0.0102],
         [0.0108, 0.0106, 0.0107,  ..., 0.9927, 0.0104, 0.0102],
         [0.9677, 0.9683, 0.9679,  ..., 0.0024, 0.9687, 0.9695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 261:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:33,493 [Process: 0] Synchronize training processes
2024-08-16 15:56:33,494 [Process: 0] Evaluating...
2024-08-16 15:56:33,495 [Process: 0] EPOCH 261:
2024-08-16 15:56:33,497 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0137, 0.0137, 0.0135,  ..., 0.0136, 0.0136, 0.0135],
         [0.0137, 0.0137, 0.0135,  ..., 0.0136, 0.0136, 0.0135],
         [0.0137, 0.0137, 0.0135,  ..., 0.0136, 0.0136, 0.0135],
         [0.9589, 0.9589, 0.9594,  ..., 0.9591, 0.9592, 0.9594]],
        [[0.0127, 0.0127, 0.0129,  ..., 0.0127, 0.0132, 0.0129],
         [0.0127, 0.0127, 0.0129,  ..., 0.0127, 0.0132, 0.0129],
         [0.0127, 0.0127, 0.0129,  ..., 0.0127, 0.0132, 0.0129],
         [0.9620, 0.9618, 0.9612,  ..., 0.9619, 0.9604, 0.9614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0102, 0.0103, 0.0103,  ..., 0.0106, 0.0102, 0.0102],
         [0.0102, 0.0103, 0.0103,  ..., 0.0106, 0.0102, 0.0102],
         [0.0102, 0.0103, 0.0103,  ..., 0.0106, 0.0102, 0.0102],
         [0.9694, 0.9692, 0.9691,  ..., 0.9683, 0.9693, 0.9693]],
        [[0.0109, 0.0110, 0.0107,  ..., 0.0012, 0.0103, 0.0108],
         [0.0109, 0.0110, 0.0107,  ..., 0.0012, 0.0103, 0.0108],
         [0.0109, 0.0110, 0.0107,  ..., 0.9965, 0.0103, 0.0108],
         [0.9673, 0.9671, 0.9680,  ..., 0.0012, 0.9691, 0.9677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 262:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:35,572 [Process: 0] Synchronize training processes
2024-08-16 15:56:35,572 [Process: 0] Evaluating...
2024-08-16 15:56:35,580 [Process: 0] EPOCH 262:
2024-08-16 15:56:35,582 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0135, 0.0138, 0.0133,  ..., 0.0134, 0.0137, 0.0135],
         [0.0135, 0.0138, 0.0133,  ..., 0.0134, 0.0137, 0.0135],
         [0.0135, 0.0138, 0.0133,  ..., 0.0134, 0.0137, 0.0135],
         [0.9594, 0.9586, 0.9602,  ..., 0.9598, 0.9588, 0.9594]],
        [[0.0128, 0.0127, 0.0128,  ..., 0.0125, 0.0129, 0.0131],
         [0.0128, 0.0127, 0.0128,  ..., 0.0125, 0.0129, 0.0131],
         [0.0128, 0.0127, 0.0128,  ..., 0.0125, 0.0129, 0.0131],
         [0.9615, 0.9619, 0.9617,  ..., 0.9624, 0.9614, 0.9608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0127e-02, 1.0063e-02, 9.7151e-03,  ..., 1.0300e-02,
          9.5125e-03, 9.8186e-03],
         [1.0127e-02, 1.0063e-02, 9.7151e-03,  ..., 1.0300e-02,
          9.5125e-03, 9.8186e-03],
         [1.0127e-02, 1.0063e-02, 9.7151e-03,  ..., 1.0300e-02,
          9.5125e-03, 9.8186e-03],
         [9.6962e-01, 9.6981e-01, 9.7085e-01,  ..., 9.6910e-01,
          9.7146e-01, 9.7054e-01]],
        [[1.0315e-02, 1.0225e-02, 1.0452e-02,  ..., 3.5057e-05,
          1.0889e-02, 9.6958e-03],
         [1.0315e-02, 1.0225e-02, 1.0452e-02,  ..., 3.5057e-05,
          1.0889e-02, 9.6958e-03],
         [1.0315e-02, 1.0225e-02, 1.0452e-02,  ..., 9.9989e-01,
          1.0889e-02, 9.6958e-03],
         [9.6906e-01, 9.6932e-01, 9.6865e-01,  ..., 3.5057e-05,
          9.6733e-01, 9.7091e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 263:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:37,664 [Process: 0] Synchronize training processes
2024-08-16 15:56:37,664 [Process: 0] Evaluating...
2024-08-16 15:56:37,666 [Process: 0] EPOCH 263:
2024-08-16 15:56:37,668 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0133, 0.0138,  ..., 0.0133, 0.0137, 0.0137],
         [0.0133, 0.0133, 0.0138,  ..., 0.0133, 0.0137, 0.0137],
         [0.0133, 0.0133, 0.0138,  ..., 0.0133, 0.0137, 0.0137],
         [0.9600, 0.9601, 0.9586,  ..., 0.9602, 0.9588, 0.9588]],
        [[0.0130, 0.0128, 0.0127,  ..., 0.0127, 0.0126, 0.0131],
         [0.0130, 0.0128, 0.0127,  ..., 0.0127, 0.0126, 0.0131],
         [0.0130, 0.0128, 0.0127,  ..., 0.0127, 0.0126, 0.0131],
         [0.9609, 0.9615, 0.9620,  ..., 0.9619, 0.9623, 0.9606]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0002e-02, 9.5972e-03, 9.8093e-03,  ..., 1.0282e-02,
          9.4263e-03, 9.8510e-03],
         [1.0002e-02, 9.5972e-03, 9.8093e-03,  ..., 1.0282e-02,
          9.4263e-03, 9.8510e-03],
         [1.0002e-02, 9.5972e-03, 9.8093e-03,  ..., 1.0282e-02,
          9.4263e-03, 9.8510e-03],
         [9.6999e-01, 9.7121e-01, 9.7057e-01,  ..., 9.6915e-01,
          9.7172e-01, 9.7045e-01]],
        [[1.0896e-02, 1.0277e-02, 1.0619e-02,  ..., 1.7692e-05,
          1.0400e-02, 1.0248e-02],
         [1.0896e-02, 1.0277e-02, 1.0619e-02,  ..., 1.7692e-05,
          1.0400e-02, 1.0248e-02],
         [1.0896e-02, 1.0277e-02, 1.0619e-02,  ..., 9.9995e-01,
          1.0400e-02, 1.0248e-02],
         [9.6731e-01, 9.6917e-01, 9.6814e-01,  ..., 1.7692e-05,
          9.6880e-01, 9.6926e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 264:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:39,742 [Process: 0] Synchronize training processes
2024-08-16 15:56:39,742 [Process: 0] Evaluating...
2024-08-16 15:56:39,744 [Process: 0] EPOCH 264:
2024-08-16 15:56:39,746 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0133, 0.0133,  ..., 0.0132, 0.0134, 0.0134],
         [0.0133, 0.0133, 0.0133,  ..., 0.0132, 0.0134, 0.0134],
         [0.0133, 0.0133, 0.0133,  ..., 0.0132, 0.0134, 0.0134],
         [0.9601, 0.9600, 0.9602,  ..., 0.9603, 0.9598, 0.9599]],
        [[0.0129, 0.0124, 0.0134,  ..., 0.0128, 0.0126, 0.0127],
         [0.0129, 0.0124, 0.0134,  ..., 0.0128, 0.0126, 0.0127],
         [0.0129, 0.0124, 0.0134,  ..., 0.0128, 0.0126, 0.0127],
         [0.9613, 0.9627, 0.9598,  ..., 0.9616, 0.9623, 0.9618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.8379e-03, 1.0073e-02, 1.0077e-02,  ..., 1.0169e-02,
          1.0070e-02, 1.0445e-02],
         [9.8379e-03, 1.0073e-02, 1.0077e-02,  ..., 1.0169e-02,
          1.0070e-02, 1.0445e-02],
         [9.8379e-03, 1.0073e-02, 1.0077e-02,  ..., 1.0169e-02,
          1.0070e-02, 1.0445e-02],
         [9.7049e-01, 9.6978e-01, 9.6977e-01,  ..., 9.6949e-01,
          9.6979e-01, 9.6866e-01]],
        [[1.0708e-02, 1.0265e-02, 9.8040e-03,  ..., 1.6596e-04,
          9.9135e-03, 9.7394e-03],
         [1.0708e-02, 1.0265e-02, 9.8040e-03,  ..., 1.6596e-04,
          9.9135e-03, 9.7394e-03],
         [1.0708e-02, 1.0265e-02, 9.8040e-03,  ..., 9.9950e-01,
          9.9135e-03, 9.7394e-03],
         [9.6788e-01, 9.6920e-01, 9.7059e-01,  ..., 1.6596e-04,
          9.7026e-01, 9.7078e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 265:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:41,783 [Process: 0] Synchronize training processes
2024-08-16 15:56:41,784 [Process: 0] Evaluating...
2024-08-16 15:56:41,785 [Process: 0] EPOCH 265:
2024-08-16 15:56:41,787 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0131, 0.0130,  ..., 0.0133, 0.0133, 0.0132],
         [0.0133, 0.0131, 0.0130,  ..., 0.0133, 0.0133, 0.0132],
         [0.0133, 0.0131, 0.0130,  ..., 0.0133, 0.0133, 0.0132],
         [0.9601, 0.9606, 0.9611,  ..., 0.9601, 0.9602, 0.9605]],
        [[0.0132, 0.0133, 0.0135,  ..., 0.0131, 0.0123, 0.0141],
         [0.0132, 0.0133, 0.0135,  ..., 0.0131, 0.0123, 0.0141],
         [0.0132, 0.0133, 0.0135,  ..., 0.0131, 0.0123, 0.0141],
         [0.9604, 0.9601, 0.9596,  ..., 0.9606, 0.9630, 0.9578]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0096, 0.0101,  ..., 0.0100, 0.0097, 0.0100],
         [0.0103, 0.0096, 0.0101,  ..., 0.0100, 0.0097, 0.0100],
         [0.0103, 0.0096, 0.0101,  ..., 0.0100, 0.0097, 0.0100],
         [0.9690, 0.9712, 0.9698,  ..., 0.9701, 0.9710, 0.9699]],
        [[0.0101, 0.0106, 0.0105,  ..., 0.0017, 0.0101, 0.0100],
         [0.0101, 0.0106, 0.0105,  ..., 0.0017, 0.0101, 0.0100],
         [0.0101, 0.0106, 0.0105,  ..., 0.9948, 0.0101, 0.0100],
         [0.9697, 0.9682, 0.9685,  ..., 0.0017, 0.9696, 0.9701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 266:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:56:43,807 [Process: 0] Synchronize training processes
2024-08-16 15:56:43,807 [Process: 0] Evaluating...
2024-08-16 15:56:43,809 [Process: 0] EPOCH 266:
2024-08-16 15:56:43,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0131, 0.0133, 0.0132,  ..., 0.0132, 0.0133, 0.0130],
         [0.0131, 0.0133, 0.0132,  ..., 0.0132, 0.0133, 0.0130],
         [0.0131, 0.0133, 0.0132,  ..., 0.0132, 0.0133, 0.0130],
         [0.9606, 0.9602, 0.9604,  ..., 0.9603, 0.9601, 0.9609]],
        [[0.0126, 0.0128, 0.0125,  ..., 0.0123, 0.0130, 0.0130],
         [0.0126, 0.0128, 0.0125,  ..., 0.0123, 0.0130, 0.0130],
         [0.0126, 0.0128, 0.0125,  ..., 0.0123, 0.0130, 0.0130],
         [0.9623, 0.9617, 0.9624,  ..., 0.9632, 0.9609, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0103, 0.0101,  ..., 0.0101, 0.0098, 0.0099],
         [0.0097, 0.0103, 0.0101,  ..., 0.0101, 0.0098, 0.0099],
         [0.0097, 0.0103, 0.0101,  ..., 0.0101, 0.0098, 0.0099],
         [0.9709, 0.9690, 0.9698,  ..., 0.9698, 0.9707, 0.9702]],
        [[0.0098, 0.0099, 0.0098,  ..., 0.0013, 0.0096, 0.0103],
         [0.0098, 0.0099, 0.0098,  ..., 0.0013, 0.0096, 0.0103],
         [0.0098, 0.0099, 0.0098,  ..., 0.9960, 0.0096, 0.0103],
         [0.9706, 0.9703, 0.9705,  ..., 0.0013, 0.9711, 0.9691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:45,892 [Process: 0] Synchronize training processes
2024-08-16 15:56:45,892 [Process: 0] Evaluating...
2024-08-16 15:56:45,894 [Process: 0] EPOCH 267:
2024-08-16 15:56:45,897 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 267:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0136, 0.0137, 0.0133,  ..., 0.0132, 0.0133, 0.0133],
         [0.0136, 0.0137, 0.0133,  ..., 0.0132, 0.0133, 0.0133],
         [0.0136, 0.0137, 0.0133,  ..., 0.0132, 0.0133, 0.0133],
         [0.9592, 0.9589, 0.9602,  ..., 0.9603, 0.9601, 0.9602]],
        [[0.0131, 0.0133, 0.0128,  ..., 0.0131, 0.0130, 0.0129],
         [0.0131, 0.0133, 0.0128,  ..., 0.0131, 0.0130, 0.0129],
         [0.0131, 0.0133, 0.0128,  ..., 0.0131, 0.0130, 0.0129],
         [0.9607, 0.9602, 0.9615,  ..., 0.9606, 0.9609, 0.9612]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4892e-03, 9.6388e-03, 1.0106e-02,  ..., 9.7278e-03,
          9.8164e-03, 9.9413e-03],
         [9.4892e-03, 9.6388e-03, 1.0106e-02,  ..., 9.7278e-03,
          9.8164e-03, 9.9413e-03],
         [9.4892e-03, 9.6388e-03, 1.0106e-02,  ..., 9.7278e-03,
          9.8164e-03, 9.9413e-03],
         [9.7153e-01, 9.7108e-01, 9.6968e-01,  ..., 9.7082e-01,
          9.7055e-01, 9.7018e-01]],
        [[1.0084e-02, 1.0393e-02, 1.0153e-02,  ..., 1.0387e-04,
          9.8871e-03, 9.6784e-03],
         [1.0084e-02, 1.0393e-02, 1.0153e-02,  ..., 1.0387e-04,
          9.8871e-03, 9.6784e-03],
         [1.0084e-02, 1.0393e-02, 1.0153e-02,  ..., 9.9969e-01,
          9.8871e-03, 9.6784e-03],
         [9.6975e-01, 9.6882e-01, 9.6954e-01,  ..., 1.0387e-04,
          9.7034e-01, 9.7096e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:47,967 [Process: 0] Synchronize training processes
2024-08-16 15:56:47,967 [Process: 0] Evaluating...
2024-08-16 15:56:47,969 [Process: 0] EPOCH 268:
2024-08-16 15:56:47,971 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 268:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0135, 0.0134, 0.0135,  ..., 0.0134, 0.0134, 0.0136],
         [0.0135, 0.0134, 0.0135,  ..., 0.0134, 0.0134, 0.0136],
         [0.0135, 0.0134, 0.0135,  ..., 0.0134, 0.0134, 0.0136],
         [0.9596, 0.9599, 0.9594,  ..., 0.9597, 0.9598, 0.9593]],
        [[0.0129, 0.0129, 0.0133,  ..., 0.0128, 0.0131, 0.0130],
         [0.0129, 0.0129, 0.0133,  ..., 0.0128, 0.0131, 0.0130],
         [0.0129, 0.0129, 0.0133,  ..., 0.0128, 0.0131, 0.0130],
         [0.9614, 0.9613, 0.9602,  ..., 0.9617, 0.9606, 0.9610]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:56:50,060 [Process: 0] Synchronize training processes
2024-08-16 15:56:50,061 [Process: 0] Evaluating...
2024-08-16 15:56:50,063 [Process: 0] EPOCH 269:
2024-08-16 15:56:50,065 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0102, 0.0093,  ..., 0.0098, 0.0100, 0.0100],
         [0.0098, 0.0102, 0.0093,  ..., 0.0098, 0.0100, 0.0100],
         [0.0098, 0.0102, 0.0093,  ..., 0.0098, 0.0100, 0.0100],
         [0.9707, 0.9695, 0.9721,  ..., 0.9707, 0.9701, 0.9701]],
        [[0.0098, 0.0102, 0.0102,  ..., 0.0034, 0.0099, 0.0100],
         [0.0098, 0.0102, 0.0102,  ..., 0.0034, 0.0099, 0.0100],
         [0.0098, 0.0102, 0.0102,  ..., 0.9897, 0.0099, 0.0100],
         [0.9707, 0.9695, 0.9693,  ..., 0.0034, 0.9702, 0.9701]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 269:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0133, 0.0135, 0.0134,  ..., 0.0135, 0.0134, 0.0135],
         [0.0133, 0.0135, 0.0134,  ..., 0.0135, 0.0134, 0.0135],
         [0.0133, 0.0135, 0.0134,  ..., 0.0135, 0.0134, 0.0135],
         [0.9601, 0.9595, 0.9598,  ..., 0.9594, 0.9599, 0.9595]],
        [[0.0127, 0.0129, 0.0128,  ..., 0.0129, 0.0129, 0.0127],
         [0.0127, 0.0129, 0.0128,  ..., 0.0129, 0.0129, 0.0127],
         [0.0127, 0.0129, 0.0128,  ..., 0.0129, 0.0129, 0.0127],
         [0.9618, 0.9614, 0.9617,  ..., 0.9612, 0.9614, 0.9618]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:52,150 [Process: 0] Synchronize training processes
2024-08-16 15:56:52,151 [Process: 0] Evaluating...
2024-08-16 15:56:52,153 [Process: 0] EPOCH 270:
2024-08-16 15:56:52,155 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.8832e-03, 9.9216e-03, 9.5139e-03,  ..., 9.8607e-03,
          9.4836e-03, 9.8939e-03],
         [9.8832e-03, 9.9216e-03, 9.5139e-03,  ..., 9.8607e-03,
          9.4836e-03, 9.8939e-03],
         [9.8832e-03, 9.9216e-03, 9.5139e-03,  ..., 9.8607e-03,
          9.4836e-03, 9.8939e-03],
         [9.7035e-01, 9.7024e-01, 9.7146e-01,  ..., 9.7042e-01,
          9.7155e-01, 9.7032e-01]],
        [[1.0402e-02, 9.5805e-03, 9.3702e-03,  ..., 2.2672e-04,
          1.0090e-02, 9.7890e-03],
         [1.0402e-02, 9.5805e-03, 9.3702e-03,  ..., 2.2672e-04,
          1.0090e-02, 9.7890e-03],
         [1.0402e-02, 9.5805e-03, 9.3702e-03,  ..., 9.9932e-01,
          1.0090e-02, 9.7890e-03],
         [9.6879e-01, 9.7126e-01, 9.7189e-01,  ..., 2.2672e-04,
          9.6973e-01, 9.7063e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 270:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0127, 0.0126,  ..., 0.0128, 0.0128, 0.0128],
         [0.0129, 0.0127, 0.0126,  ..., 0.0128, 0.0128, 0.0128],
         [0.0129, 0.0127, 0.0126,  ..., 0.0128, 0.0128, 0.0128],
         [0.9613, 0.9619, 0.9621,  ..., 0.9615, 0.9617, 0.9616]],
        [[0.0126, 0.0125, 0.0123,  ..., 0.0124, 0.0125, 0.0128],
         [0.0126, 0.0125, 0.0123,  ..., 0.0124, 0.0125, 0.0128],
         [0.0126, 0.0125, 0.0123,  ..., 0.0124, 0.0125, 0.0128],
         [0.9622, 0.9626, 0.9630,  ..., 0.9629, 0.9624, 0.9617]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:54,232 [Process: 0] Synchronize training processes
2024-08-16 15:56:54,233 [Process: 0] Evaluating...
2024-08-16 15:56:54,235 [Process: 0] EPOCH 271:
2024-08-16 15:56:54,236 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0081e-02, 9.9494e-03, 9.7631e-03,  ..., 9.7223e-03,
          9.2032e-03, 9.6673e-03],
         [1.0081e-02, 9.9494e-03, 9.7631e-03,  ..., 9.7223e-03,
          9.2032e-03, 9.6673e-03],
         [1.0081e-02, 9.9494e-03, 9.7631e-03,  ..., 9.7223e-03,
          9.2032e-03, 9.6673e-03],
         [9.6976e-01, 9.7015e-01, 9.7071e-01,  ..., 9.7083e-01,
          9.7239e-01, 9.7100e-01]],
        [[9.9824e-03, 9.8966e-03, 1.0000e-02,  ..., 6.9388e-05,
          9.7887e-03, 9.7968e-03],
         [9.9824e-03, 9.8966e-03, 1.0000e-02,  ..., 6.9388e-05,
          9.7887e-03, 9.7968e-03],
         [9.9824e-03, 9.8966e-03, 1.0000e-02,  ..., 9.9979e-01,
          9.7887e-03, 9.7968e-03],
         [9.7005e-01, 9.7031e-01, 9.7000e-01,  ..., 6.9388e-05,
          9.7063e-01, 9.7061e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 271:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0126, 0.0126, 0.0125,  ..., 0.0126, 0.0126, 0.0126],
         [0.0126, 0.0126, 0.0125,  ..., 0.0126, 0.0126, 0.0126],
         [0.0126, 0.0126, 0.0125,  ..., 0.0126, 0.0126, 0.0126],
         [0.9622, 0.9622, 0.9624,  ..., 0.9621, 0.9622, 0.9622]],
        [[0.0126, 0.0121, 0.0125,  ..., 0.0122, 0.0121, 0.0123],
         [0.0126, 0.0121, 0.0125,  ..., 0.0122, 0.0121, 0.0123],
         [0.0126, 0.0121, 0.0125,  ..., 0.0122, 0.0121, 0.0123],
         [0.9623, 0.9636, 0.9626,  ..., 0.9633, 0.9636, 0.9632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:56,300 [Process: 0] Synchronize training processes
2024-08-16 15:56:56,300 [Process: 0] Evaluating...
2024-08-16 15:56:56,308 [Process: 0] EPOCH 272:
2024-08-16 15:56:56,310 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[1.0075e-02, 9.7004e-03, 9.6412e-03,  ..., 9.9707e-03,
          9.3262e-03, 9.7465e-03],
         [1.0075e-02, 9.7004e-03, 9.6412e-03,  ..., 9.9707e-03,
          9.3262e-03, 9.7465e-03],
         [1.0075e-02, 9.7004e-03, 9.6412e-03,  ..., 9.9707e-03,
          9.3262e-03, 9.7465e-03],
         [9.6977e-01, 9.7090e-01, 9.7108e-01,  ..., 9.7009e-01,
          9.7202e-01, 9.7076e-01]],
        [[9.4836e-03, 1.0368e-02, 9.6642e-03,  ..., 3.7104e-05,
          9.3165e-03, 9.4717e-03],
         [9.4836e-03, 1.0368e-02, 9.6642e-03,  ..., 3.7104e-05,
          9.3165e-03, 9.4717e-03],
         [9.4836e-03, 1.0368e-02, 9.6642e-03,  ..., 9.9989e-01,
          9.3165e-03, 9.4717e-03],
         [9.7155e-01, 9.6890e-01, 9.7101e-01,  ..., 3.7104e-05,
          9.7205e-01, 9.7159e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 272:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.0129, 0.0130,  ..., 0.0129, 0.0129, 0.0129],
         [0.0130, 0.0129, 0.0130,  ..., 0.0129, 0.0129, 0.0129],
         [0.0130, 0.0129, 0.0130,  ..., 0.0129, 0.0129, 0.0129],
         [0.9611, 0.9613, 0.9611,  ..., 0.9614, 0.9614, 0.9613]],
        [[0.0124, 0.0127, 0.0126,  ..., 0.0125, 0.0126, 0.0125],
         [0.0124, 0.0127, 0.0126,  ..., 0.0125, 0.0126, 0.0125],
         [0.0124, 0.0127, 0.0126,  ..., 0.0125, 0.0126, 0.0125],
         [0.9629, 0.9619, 0.9622,  ..., 0.9624, 0.9623, 0.9626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:56:58,369 [Process: 0] Synchronize training processes
2024-08-16 15:56:58,369 [Process: 0] Evaluating...
2024-08-16 15:56:58,371 [Process: 0] EPOCH 273:
2024-08-16 15:56:58,373 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7417e-03, 9.9680e-03, 9.5020e-03,  ..., 9.6185e-03,
          9.2929e-03, 9.7181e-03],
         [9.7417e-03, 9.9680e-03, 9.5020e-03,  ..., 9.6185e-03,
          9.2929e-03, 9.7181e-03],
         [9.7417e-03, 9.9680e-03, 9.5020e-03,  ..., 9.6185e-03,
          9.2929e-03, 9.7181e-03],
         [9.7077e-01, 9.7010e-01, 9.7149e-01,  ..., 9.7114e-01,
          9.7212e-01, 9.7085e-01]],
        [[9.3225e-03, 9.7069e-03, 9.7781e-03,  ..., 3.5012e-04,
          9.7067e-03, 9.5194e-03],
         [9.3225e-03, 9.7069e-03, 9.7781e-03,  ..., 3.5012e-04,
          9.7067e-03, 9.5194e-03],
         [9.3225e-03, 9.7069e-03, 9.7781e-03,  ..., 9.9895e-01,
          9.7067e-03, 9.5194e-03],
         [9.7203e-01, 9.7088e-01, 9.7067e-01,  ..., 3.5012e-04,
          9.7088e-01, 9.7144e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 273:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0130, 0.0130, 0.0130,  ..., 0.0130, 0.0130, 0.0129],
         [0.0130, 0.0130, 0.0130,  ..., 0.0130, 0.0130, 0.0129],
         [0.0130, 0.0130, 0.0130,  ..., 0.0130, 0.0130, 0.0129],
         [0.9611, 0.9610, 0.9611,  ..., 0.9611, 0.9610, 0.9612]],
        [[0.0124, 0.0127, 0.0126,  ..., 0.0126, 0.0125, 0.0129],
         [0.0124, 0.0127, 0.0126,  ..., 0.0126, 0.0125, 0.0129],
         [0.0124, 0.0127, 0.0126,  ..., 0.0126, 0.0125, 0.0129],
         [0.9627, 0.9619, 0.9623,  ..., 0.9621, 0.9626, 0.9614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:00,421 [Process: 0] Synchronize training processes
2024-08-16 15:57:00,421 [Process: 0] Evaluating...
2024-08-16 15:57:00,423 [Process: 0] EPOCH 274:
2024-08-16 15:57:00,425 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.6140e-03, 9.9968e-03, 9.6772e-03,  ..., 9.8809e-03,
          9.3152e-03, 1.0010e-02],
         [9.6140e-03, 9.9968e-03, 9.6772e-03,  ..., 9.8809e-03,
          9.3152e-03, 1.0010e-02],
         [9.6140e-03, 9.9968e-03, 9.6772e-03,  ..., 9.8809e-03,
          9.3152e-03, 1.0010e-02],
         [9.7116e-01, 9.7001e-01, 9.7097e-01,  ..., 9.7036e-01,
          9.7205e-01, 9.6997e-01]],
        [[9.3635e-03, 9.2892e-03, 9.5783e-03,  ..., 2.8814e-04,
          1.0004e-02, 9.2897e-03],
         [9.3635e-03, 9.2892e-03, 9.5783e-03,  ..., 1.9730e-04,
          1.0004e-02, 9.2897e-03],
         [9.3635e-03, 9.2892e-03, 9.5783e-03,  ..., 9.9932e-01,
          1.0004e-02, 9.2897e-03],
         [9.7191e-01, 9.7213e-01, 9.7127e-01,  ..., 1.9730e-04,
          9.6999e-01, 9.7213e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 274:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0128, 0.0130,  ..., 0.0127, 0.0130, 0.0129],
         [0.0129, 0.0128, 0.0130,  ..., 0.0127, 0.0130, 0.0129],
         [0.0129, 0.0128, 0.0130,  ..., 0.0127, 0.0130, 0.0129],
         [0.9613, 0.9615, 0.9610,  ..., 0.9619, 0.9610, 0.9614]],
        [[0.0122, 0.0124, 0.0122,  ..., 0.0124, 0.0124, 0.0122],
         [0.0122, 0.0124, 0.0122,  ..., 0.0124, 0.0124, 0.0122],
         [0.0122, 0.0124, 0.0122,  ..., 0.0124, 0.0124, 0.0122],
         [0.9634, 0.9629, 0.9633,  ..., 0.9629, 0.9627, 0.9633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:02,465 [Process: 0] Synchronize training processes
2024-08-16 15:57:02,465 [Process: 0] Evaluating...
2024-08-16 15:57:02,467 [Process: 0] EPOCH 275:
2024-08-16 15:57:02,469 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.7939e-03, 9.6288e-03, 9.5376e-03,  ..., 9.6507e-03,
          8.8293e-03, 9.5291e-03],
         [9.7939e-03, 9.6288e-03, 9.5376e-03,  ..., 9.6507e-03,
          8.8293e-03, 9.5291e-03],
         [9.7939e-03, 9.6288e-03, 9.5376e-03,  ..., 9.6507e-03,
          8.8293e-03, 9.5291e-03],
         [9.7062e-01, 9.7111e-01, 9.7139e-01,  ..., 9.7105e-01,
          9.7351e-01, 9.7141e-01]],
        [[9.7407e-03, 9.3846e-03, 9.2388e-03,  ..., 5.0018e-04,
          9.3995e-03, 9.6086e-03],
         [9.7407e-03, 9.3846e-03, 9.2388e-03,  ..., 5.0018e-04,
          9.3995e-03, 9.6086e-03],
         [9.7407e-03, 9.3846e-03, 9.2388e-03,  ..., 9.9850e-01,
          9.3995e-03, 9.6086e-03],
         [9.7078e-01, 9.7185e-01, 9.7228e-01,  ..., 5.0018e-04,
          9.7180e-01, 9.7117e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 275:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0127, 0.0130, 0.0127,  ..., 0.0127, 0.0127, 0.0126],
         [0.0127, 0.0130, 0.0127,  ..., 0.0127, 0.0127, 0.0126],
         [0.0127, 0.0130, 0.0127,  ..., 0.0127, 0.0127, 0.0126],
         [0.9620, 0.9610, 0.9620,  ..., 0.9620, 0.9620, 0.9623]],
        [[0.0122, 0.0122, 0.0122,  ..., 0.0126, 0.0123, 0.0124],
         [0.0122, 0.0122, 0.0122,  ..., 0.0126, 0.0123, 0.0124],
         [0.0122, 0.0122, 0.0122,  ..., 0.0126, 0.0123, 0.0124],
         [0.9635, 0.9633, 0.9635,  ..., 0.9622, 0.9631, 0.9628]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:04,571 [Process: 0] Synchronize training processes
2024-08-16 15:57:04,572 [Process: 0] Evaluating...
2024-08-16 15:57:04,574 [Process: 0] EPOCH 276:
2024-08-16 15:57:04,575 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4050e-03, 9.7794e-03, 9.6862e-03,  ..., 9.5967e-03,
          8.5659e-03, 9.6206e-03],
         [9.4050e-03, 9.7794e-03, 9.6862e-03,  ..., 9.5967e-03,
          8.5659e-03, 9.6206e-03],
         [9.4050e-03, 9.7794e-03, 9.6862e-03,  ..., 9.5967e-03,
          8.5659e-03, 9.6206e-03],
         [9.7178e-01, 9.7066e-01, 9.7094e-01,  ..., 9.7121e-01,
          9.7430e-01, 9.7114e-01]],
        [[1.0163e-02, 9.1335e-03, 9.6166e-03,  ..., 9.3719e-05,
          9.2505e-03, 9.4356e-03],
         [1.0163e-02, 9.1335e-03, 9.6166e-03,  ..., 9.3719e-05,
          9.2505e-03, 9.4356e-03],
         [1.0163e-02, 9.1335e-03, 9.6166e-03,  ..., 9.9972e-01,
          9.2505e-03, 9.4356e-03],
         [9.6951e-01, 9.7260e-01, 9.7115e-01,  ..., 9.3719e-05,
          9.7225e-01, 9.7169e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 276:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0129, 0.0125, 0.0128,  ..., 0.0125, 0.0128, 0.0125],
         [0.0129, 0.0125, 0.0128,  ..., 0.0125, 0.0128, 0.0125],
         [0.0129, 0.0125, 0.0128,  ..., 0.0125, 0.0128, 0.0125],
         [0.9613, 0.9625, 0.9615,  ..., 0.9624, 0.9616, 0.9624]],
        [[0.0122, 0.0123, 0.0123,  ..., 0.0121, 0.0123, 0.0123],
         [0.0122, 0.0123, 0.0123,  ..., 0.0121, 0.0123, 0.0123],
         [0.0122, 0.0123, 0.0123,  ..., 0.0121, 0.0123, 0.0123],
         [0.9633, 0.9631, 0.9630,  ..., 0.9637, 0.9631, 0.9631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:06,661 [Process: 0] Synchronize training processes
2024-08-16 15:57:06,661 [Process: 0] Evaluating...
2024-08-16 15:57:06,663 [Process: 0] EPOCH 277:
2024-08-16 15:57:06,665 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.4002e-03, 9.2560e-03, 9.5984e-03,  ..., 9.4836e-03,
          8.0505e-03, 9.3205e-03],
         [9.4002e-03, 9.2560e-03, 9.5984e-03,  ..., 9.4836e-03,
          8.0505e-03, 9.3205e-03],
         [9.4002e-03, 9.2560e-03, 9.5984e-03,  ..., 9.4836e-03,
          8.0505e-03, 9.3205e-03],
         [9.7180e-01, 9.7223e-01, 9.7120e-01,  ..., 9.7155e-01,
          9.7585e-01, 9.7204e-01]],
        [[9.2895e-03, 9.1883e-03, 8.9501e-03,  ..., 1.4643e-04,
          9.2073e-03, 9.5164e-03],
         [9.2895e-03, 9.1883e-03, 8.9501e-03,  ..., 1.4643e-04,
          9.2073e-03, 9.5164e-03],
         [9.2895e-03, 9.1883e-03, 8.9501e-03,  ..., 9.9956e-01,
          9.2073e-03, 9.5164e-03],
         [9.7213e-01, 9.7244e-01, 9.7315e-01,  ..., 1.4643e-04,
          9.7238e-01, 9.7145e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 277:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0128, 0.0127, 0.0128,  ..., 0.0127, 0.0128, 0.0125],
         [0.0128, 0.0127, 0.0128,  ..., 0.0127, 0.0128, 0.0125],
         [0.0128, 0.0127, 0.0128,  ..., 0.0127, 0.0128, 0.0125],
         [0.9617, 0.9619, 0.9617,  ..., 0.9620, 0.9615, 0.9626]],
        [[0.0122, 0.0123, 0.0119,  ..., 0.0120, 0.0121, 0.0124],
         [0.0122, 0.0123, 0.0119,  ..., 0.0120, 0.0121, 0.0124],
         [0.0122, 0.0123, 0.0119,  ..., 0.0120, 0.0121, 0.0124],
         [0.9633, 0.9630, 0.9644,  ..., 0.9639, 0.9637, 0.9629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:08,741 [Process: 0] Synchronize training processes
2024-08-16 15:57:08,742 [Process: 0] Evaluating...
2024-08-16 15:57:08,744 [Process: 0] EPOCH 278:
2024-08-16 15:57:08,746 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.3069e-03, 9.3174e-03, 9.3073e-03,  ..., 9.2901e-03,
          8.6065e-03, 9.6459e-03],
         [9.3069e-03, 9.3174e-03, 9.3073e-03,  ..., 9.2901e-03,
          8.6065e-03, 9.6459e-03],
         [9.3069e-03, 9.3174e-03, 9.3073e-03,  ..., 9.2901e-03,
          8.6065e-03, 9.6459e-03],
         [9.7208e-01, 9.7205e-01, 9.7208e-01,  ..., 9.7213e-01,
          9.7418e-01, 9.7106e-01]],
        [[9.2189e-03, 9.4019e-03, 9.0996e-03,  ..., 2.2921e-04,
          9.7822e-03, 9.1101e-03],
         [9.2189e-03, 9.4019e-03, 9.0996e-03,  ..., 2.2921e-04,
          9.7822e-03, 9.1101e-03],
         [9.2189e-03, 9.4019e-03, 9.0996e-03,  ..., 9.9931e-01,
          9.7822e-03, 9.1101e-03],
         [9.7234e-01, 9.7179e-01, 9.7270e-01,  ..., 2.2921e-04,
          9.7065e-01, 9.7267e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 278:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0128, 0.0127,  ..., 0.0127, 0.0124, 0.0124],
         [0.0124, 0.0128, 0.0127,  ..., 0.0127, 0.0124, 0.0124],
         [0.0124, 0.0128, 0.0127,  ..., 0.0127, 0.0124, 0.0124],
         [0.9628, 0.9616, 0.9619,  ..., 0.9619, 0.9628, 0.9629]],
        [[0.0117, 0.0122, 0.0118,  ..., 0.0120, 0.0122, 0.0121],
         [0.0117, 0.0122, 0.0118,  ..., 0.0120, 0.0122, 0.0121],
         [0.0117, 0.0122, 0.0118,  ..., 0.0120, 0.0122, 0.0121],
         [0.9649, 0.9634, 0.9646,  ..., 0.9641, 0.9634, 0.9637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:10,816 [Process: 0] Synchronize training processes
2024-08-16 15:57:10,817 [Process: 0] Evaluating...
2024-08-16 15:57:10,819 [Process: 0] EPOCH 279:
2024-08-16 15:57:10,821 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.2671e-03, 9.4807e-03, 9.2254e-03,  ..., 9.1126e-03,
          8.7155e-03, 9.0472e-03],
         [9.2671e-03, 9.4807e-03, 9.2254e-03,  ..., 9.1126e-03,
          8.7155e-03, 9.0472e-03],
         [9.2671e-03, 9.4807e-03, 9.2254e-03,  ..., 9.1126e-03,
          8.7155e-03, 9.0472e-03],
         [9.7220e-01, 9.7156e-01, 9.7232e-01,  ..., 9.7266e-01,
          9.7385e-01, 9.7286e-01]],
        [[8.9348e-03, 9.5690e-03, 9.0040e-03,  ..., 4.4661e-05,
          8.9602e-03, 9.5185e-03],
         [8.9348e-03, 9.5690e-03, 9.0040e-03,  ..., 4.4661e-05,
          8.9602e-03, 9.5185e-03],
         [8.9348e-03, 9.5690e-03, 9.0040e-03,  ..., 9.9987e-01,
          8.9602e-03, 9.5185e-03],
         [9.7320e-01, 9.7129e-01, 9.7299e-01,  ..., 4.4661e-05,
          9.7312e-01, 9.7144e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 279:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0123, 0.0123,  ..., 0.0121, 0.0122, 0.0122],
         [0.0123, 0.0123, 0.0123,  ..., 0.0121, 0.0122, 0.0122],
         [0.0123, 0.0123, 0.0123,  ..., 0.0121, 0.0122, 0.0122],
         [0.9631, 0.9630, 0.9632,  ..., 0.9636, 0.9635, 0.9633]],
        [[0.0118, 0.0117, 0.0115,  ..., 0.0120, 0.0120, 0.0118],
         [0.0118, 0.0117, 0.0115,  ..., 0.0120, 0.0120, 0.0118],
         [0.0118, 0.0117, 0.0115,  ..., 0.0120, 0.0120, 0.0118],
         [0.9645, 0.9649, 0.9654,  ..., 0.9641, 0.9639, 0.9646]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:12,830 [Process: 0] Synchronize training processes
2024-08-16 15:57:12,830 [Process: 0] Evaluating...
2024-08-16 15:57:12,832 [Process: 0] EPOCH 280:
2024-08-16 15:57:12,834 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0093, 0.0090,  ..., 0.0093, 0.0089, 0.0091],
         [0.0092, 0.0093, 0.0090,  ..., 0.0093, 0.0089, 0.0091],
         [0.0092, 0.0093, 0.0090,  ..., 0.0093, 0.0089, 0.0091],
         [0.9725, 0.9721, 0.9729,  ..., 0.9720, 0.9733, 0.9727]],
        [[0.0094, 0.0093, 0.0092,  ..., 0.0019, 0.0095, 0.0096],
         [0.0094, 0.0093, 0.0092,  ..., 0.0019, 0.0095, 0.0096],
         [0.0094, 0.0093, 0.0092,  ..., 0.9944, 0.0095, 0.0096],
         [0.9718, 0.9721, 0.9725,  ..., 0.0019, 0.9714, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 280:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0123, 0.0121, 0.0125,  ..., 0.0122, 0.0124, 0.0125],
         [0.0123, 0.0121, 0.0125,  ..., 0.0122, 0.0124, 0.0125],
         [0.0123, 0.0121, 0.0125,  ..., 0.0122, 0.0124, 0.0125],
         [0.9631, 0.9636, 0.9624,  ..., 0.9634, 0.9628, 0.9625]],
        [[0.0116, 0.0117, 0.0120,  ..., 0.0117, 0.0118, 0.0114],
         [0.0116, 0.0117, 0.0120,  ..., 0.0117, 0.0118, 0.0114],
         [0.0116, 0.0117, 0.0120,  ..., 0.0117, 0.0118, 0.0114],
         [0.9651, 0.9649, 0.9640,  ..., 0.9650, 0.9647, 0.9658]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:14,798 [Process: 0] Synchronize training processes
2024-08-16 15:57:14,798 [Process: 0] Evaluating...
2024-08-16 15:57:14,800 [Process: 0] EPOCH 281:
2024-08-16 15:57:14,802 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.1078e-03, 9.4580e-03, 9.1604e-03,  ..., 9.3981e-03,
          8.8935e-03, 9.0791e-03],
         [9.1078e-03, 9.4580e-03, 9.1604e-03,  ..., 9.3981e-03,
          8.8935e-03, 9.0791e-03],
         [9.1078e-03, 9.4580e-03, 9.1604e-03,  ..., 9.3981e-03,
          8.8935e-03, 9.0791e-03],
         [9.7268e-01, 9.7163e-01, 9.7252e-01,  ..., 9.7181e-01,
          9.7332e-01, 9.7276e-01]],
        [[9.6731e-03, 9.4803e-03, 9.3600e-03,  ..., 3.4872e-04,
          9.5482e-03, 9.4430e-03],
         [9.6731e-03, 9.4803e-03, 9.3600e-03,  ..., 3.4872e-04,
          9.5482e-03, 9.4430e-03],
         [9.6731e-03, 9.4803e-03, 9.3600e-03,  ..., 9.9895e-01,
          9.5482e-03, 9.4430e-03],
         [9.7098e-01, 9.7156e-01, 9.7192e-01,  ..., 3.4872e-04,
          9.7136e-01, 9.7167e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 281:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0124, 0.0122,  ..., 0.0122, 0.0121, 0.0123],
         [0.0124, 0.0124, 0.0122,  ..., 0.0122, 0.0121, 0.0123],
         [0.0124, 0.0124, 0.0122,  ..., 0.0122, 0.0121, 0.0123],
         [0.9628, 0.9627, 0.9634,  ..., 0.9634, 0.9638, 0.9630]],
        [[0.0117, 0.0115, 0.0119,  ..., 0.0116, 0.0113, 0.0114],
         [0.0117, 0.0115, 0.0119,  ..., 0.0116, 0.0113, 0.0114],
         [0.0117, 0.0115, 0.0119,  ..., 0.0116, 0.0113, 0.0114],
         [0.9649, 0.9654, 0.9642,  ..., 0.9652, 0.9660, 0.9658]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:16,842 [Process: 0] Synchronize training processes
2024-08-16 15:57:16,842 [Process: 0] Evaluating...
2024-08-16 15:57:16,850 [Process: 0] EPOCH 282:
2024-08-16 15:57:16,852 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.2616e-03, 9.2858e-03, 9.0239e-03,  ..., 9.2074e-03,
          8.7230e-03, 9.7437e-03],
         [9.2616e-03, 9.2858e-03, 9.0239e-03,  ..., 9.2074e-03,
          8.7230e-03, 9.7437e-03],
         [9.2616e-03, 9.2858e-03, 9.0239e-03,  ..., 9.2074e-03,
          8.7230e-03, 9.7437e-03],
         [9.7222e-01, 9.7214e-01, 9.7293e-01,  ..., 9.7238e-01,
          9.7383e-01, 9.7077e-01]],
        [[9.3441e-03, 8.9591e-03, 9.6183e-03,  ..., 2.0683e-04,
          9.0296e-03, 9.7003e-03],
         [9.3441e-03, 8.9591e-03, 9.6183e-03,  ..., 2.0683e-04,
          9.0296e-03, 9.7003e-03],
         [9.3441e-03, 8.9591e-03, 9.6183e-03,  ..., 9.9938e-01,
          9.0296e-03, 9.7003e-03],
         [9.7197e-01, 9.7312e-01, 9.7115e-01,  ..., 2.0683e-04,
          9.7291e-01, 9.7090e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 282:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0124, 0.0120, 0.0121,  ..., 0.0124, 0.0122, 0.0123],
         [0.0124, 0.0120, 0.0121,  ..., 0.0124, 0.0122, 0.0123],
         [0.0124, 0.0120, 0.0121,  ..., 0.0124, 0.0122, 0.0123],
         [0.9629, 0.9639, 0.9636,  ..., 0.9628, 0.9634, 0.9631]],
        [[0.0115, 0.0116, 0.0117,  ..., 0.0115, 0.0115, 0.0117],
         [0.0115, 0.0116, 0.0117,  ..., 0.0115, 0.0115, 0.0117],
         [0.0115, 0.0116, 0.0117,  ..., 0.0115, 0.0115, 0.0117],
         [0.9654, 0.9652, 0.9649,  ..., 0.9655, 0.9655, 0.9648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:18,936 [Process: 0] Synchronize training processes
2024-08-16 15:57:18,936 [Process: 0] Evaluating...
2024-08-16 15:57:18,938 [Process: 0] EPOCH 283:
2024-08-16 15:57:18,940 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.2401e-03, 8.8838e-03, 9.0888e-03,  ..., 9.2619e-03,
          8.7088e-03, 9.5003e-03],
         [9.2401e-03, 8.8838e-03, 9.0888e-03,  ..., 9.2619e-03,
          8.7088e-03, 9.5003e-03],
         [9.2401e-03, 8.8838e-03, 9.0888e-03,  ..., 9.2619e-03,
          8.7088e-03, 9.5003e-03],
         [9.7228e-01, 9.7335e-01, 9.7273e-01,  ..., 9.7221e-01,
          9.7387e-01, 9.7150e-01]],
        [[9.2360e-03, 9.4059e-03, 8.8845e-03,  ..., 1.7287e-04,
          9.1631e-03, 8.9767e-03],
         [9.2360e-03, 9.4059e-03, 8.8845e-03,  ..., 1.7287e-04,
          9.1631e-03, 8.9767e-03],
         [9.2360e-03, 9.4059e-03, 8.8845e-03,  ..., 9.9948e-01,
          9.1631e-03, 8.9767e-03],
         [9.7229e-01, 9.7178e-01, 9.7335e-01,  ..., 1.7287e-04,
          9.7251e-01, 9.7307e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 283:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0121, 0.0123, 0.0123,  ..., 0.0123, 0.0121, 0.0120],
         [0.0121, 0.0123, 0.0123,  ..., 0.0123, 0.0121, 0.0120],
         [0.0121, 0.0123, 0.0123,  ..., 0.0123, 0.0121, 0.0120],
         [0.9637, 0.9630, 0.9632,  ..., 0.9632, 0.9636, 0.9640]],
        [[0.0120, 0.0118, 0.0115,  ..., 0.0115, 0.0118, 0.0115],
         [0.0120, 0.0118, 0.0115,  ..., 0.0115, 0.0118, 0.0115],
         [0.0120, 0.0118, 0.0115,  ..., 0.0115, 0.0118, 0.0115],
         [0.9639, 0.9646, 0.9656,  ..., 0.9656, 0.9646, 0.9655]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:21,028 [Process: 0] Synchronize training processes
2024-08-16 15:57:21,028 [Process: 0] Evaluating...
2024-08-16 15:57:21,030 [Process: 0] EPOCH 284:
2024-08-16 15:57:21,032 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.1501e-03, 9.4309e-03, 9.0570e-03,  ..., 9.1311e-03,
          8.6103e-03, 9.2970e-03],
         [9.1501e-03, 9.4309e-03, 9.0570e-03,  ..., 9.1311e-03,
          8.6103e-03, 9.2970e-03],
         [9.1501e-03, 9.4309e-03, 9.0570e-03,  ..., 9.1311e-03,
          8.6103e-03, 9.2970e-03],
         [9.7255e-01, 9.7171e-01, 9.7283e-01,  ..., 9.7261e-01,
          9.7417e-01, 9.7211e-01]],
        [[8.9881e-03, 8.6765e-03, 9.0144e-03,  ..., 4.1236e-05,
          8.8569e-03, 9.0606e-03],
         [8.9881e-03, 8.6765e-03, 9.0144e-03,  ..., 4.1236e-05,
          8.8569e-03, 9.0606e-03],
         [8.9881e-03, 8.6765e-03, 9.0144e-03,  ..., 9.9988e-01,
          8.8569e-03, 9.0606e-03],
         [9.7304e-01, 9.7397e-01, 9.7296e-01,  ..., 4.1236e-05,
          9.7343e-01, 9.7282e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 284:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0119, 0.0119,  ..., 0.0119, 0.0120, 0.0121],
         [0.0119, 0.0119, 0.0119,  ..., 0.0119, 0.0120, 0.0121],
         [0.0119, 0.0119, 0.0119,  ..., 0.0119, 0.0120, 0.0121],
         [0.9642, 0.9643, 0.9642,  ..., 0.9642, 0.9641, 0.9636]],
        [[0.0116, 0.0112, 0.0116,  ..., 0.0115, 0.0116, 0.0116],
         [0.0116, 0.0112, 0.0116,  ..., 0.0115, 0.0116, 0.0116],
         [0.0116, 0.0112, 0.0116,  ..., 0.0115, 0.0116, 0.0116],
         [0.9653, 0.9663, 0.9652,  ..., 0.9655, 0.9653, 0.9651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:23,114 [Process: 0] Synchronize training processes
2024-08-16 15:57:23,114 [Process: 0] Evaluating...
2024-08-16 15:57:23,116 [Process: 0] EPOCH 285:
2024-08-16 15:57:23,118 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.3295e-03, 9.4057e-03, 9.1678e-03,  ..., 9.6883e-03,
          8.6365e-03, 8.6453e-03],
         [9.3295e-03, 9.4057e-03, 9.1678e-03,  ..., 9.6883e-03,
          8.6365e-03, 8.6453e-03],
         [9.3295e-03, 9.4057e-03, 9.1678e-03,  ..., 9.6883e-03,
          8.6365e-03, 8.6453e-03],
         [9.7201e-01, 9.7178e-01, 9.7250e-01,  ..., 9.7094e-01,
          9.7409e-01, 9.7406e-01]],
        [[8.9543e-03, 9.1639e-03, 9.0334e-03,  ..., 4.0669e-06,
          8.9775e-03, 8.7878e-03],
         [8.9543e-03, 9.1639e-03, 9.0334e-03,  ..., 3.9500e-06,
          8.9775e-03, 8.7878e-03],
         [8.9543e-03, 9.1639e-03, 9.0334e-03,  ..., 9.9999e-01,
          8.9775e-03, 8.7878e-03],
         [9.7314e-01, 9.7251e-01, 9.7290e-01,  ..., 3.9500e-06,
          9.7307e-01, 9.7364e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 285:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0120, 0.0119,  ..., 0.0120, 0.0120, 0.0121],
         [0.0120, 0.0120, 0.0119,  ..., 0.0120, 0.0120, 0.0121],
         [0.0120, 0.0120, 0.0119,  ..., 0.0120, 0.0120, 0.0121],
         [0.9640, 0.9640, 0.9643,  ..., 0.9640, 0.9639, 0.9638]],
        [[0.0121, 0.0119, 0.0114,  ..., 0.0115, 0.0115, 0.0120],
         [0.0121, 0.0119, 0.0114,  ..., 0.0115, 0.0115, 0.0120],
         [0.0121, 0.0119, 0.0114,  ..., 0.0115, 0.0115, 0.0120],
         [0.9638, 0.9644, 0.9657,  ..., 0.9654, 0.9655, 0.9640]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[9.2059e-03, 8.9718e-03, 8.6800e-03,  ..., 9.5175e-03,
          9.0429e-03, 8.9502e-03],
         [9.2059e-03, 8.9718e-03, 8.6800e-03,  ..., 9.5175e-03,
          9.0429e-03, 8.9502e-03],
         [9.2059e-03, 8.9718e-03, 8.6800e-03,  ..., 9.5175e-03,
          9.0429e-03, 8.9502e-03],
         [9.7238e-01, 9.7308e-01, 9.7396e-01,  ..., 9.7145e-01,
          9.7287e-01, 9.7315e-01]],
        [[8.7769e-03, 8.8765e-03, 8.9035e-03,  ..., 8.0568e-05,
          9.2614e-03, 9.1677e-03],
         [8.7769e-03, 8.8765e-03, 8.9035e-03,  ..., 8.0568e-05,
          9.2614e-03, 9.1677e-03],
         [8.7769e-03, 8.8765e-03, 8.9035e-03,  ..., 9.9976e-01,
          9.2614e-03, 9.1677e-03],
         [9.7367e-01, 9.7337e-01, 9.7329e-01,  ..., 8.0568e-05,
          9.7222e-01, 9.7250e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 286:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:57:25,208 [Process: 0] Synchronize training processes
2024-08-16 15:57:25,208 [Process: 0] Evaluating...
2024-08-16 15:57:25,210 [Process: 0] EPOCH 286:
2024-08-16 15:57:25,213 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0120, 0.0119, 0.0119,  ..., 0.0118, 0.0119, 0.0119],
         [0.0120, 0.0119, 0.0119,  ..., 0.0118, 0.0119, 0.0119],
         [0.0120, 0.0119, 0.0119,  ..., 0.0118, 0.0119, 0.0119],
         [0.9639, 0.9642, 0.9644,  ..., 0.9645, 0.9642, 0.9642]],
        [[0.0111, 0.0114, 0.0115,  ..., 0.0114, 0.0115, 0.0113],
         [0.0111, 0.0114, 0.0115,  ..., 0.0114, 0.0115, 0.0113],
         [0.0111, 0.0114, 0.0115,  ..., 0.0114, 0.0115, 0.0113],
         [0.9667, 0.9657, 0.9654,  ..., 0.9657, 0.9656, 0.9661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.9952e-03, 8.8137e-03, 8.5343e-03,  ..., 8.6332e-03,
          8.9896e-03, 8.7617e-03],
         [8.9952e-03, 8.8137e-03, 8.5343e-03,  ..., 8.6332e-03,
          8.9896e-03, 8.7617e-03],
         [8.9952e-03, 8.8137e-03, 8.5343e-03,  ..., 8.6332e-03,
          8.9896e-03, 8.7617e-03],
         [9.7301e-01, 9.7356e-01, 9.7440e-01,  ..., 9.7410e-01,
          9.7303e-01, 9.7372e-01]],
        [[9.2800e-03, 9.0738e-03, 8.7650e-03,  ..., 4.8802e-04,
          9.0119e-03, 8.5861e-03],
         [9.2800e-03, 9.0738e-03, 8.7650e-03,  ..., 4.8802e-04,
          9.0119e-03, 8.5861e-03],
         [9.2800e-03, 9.0738e-03, 8.7650e-03,  ..., 9.9854e-01,
          9.0119e-03, 8.5861e-03],
         [9.7216e-01, 9.7278e-01, 9.7370e-01,  ..., 4.8802e-04,
          9.7296e-01, 9.7424e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 287:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:27,288 [Process: 0] Synchronize training processes
2024-08-16 15:57:27,289 [Process: 0] Evaluating...
2024-08-16 15:57:27,291 [Process: 0] EPOCH 287:
2024-08-16 15:57:27,293 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0117, 0.0118, 0.0119,  ..., 0.0118, 0.0118, 0.0119],
         [0.0117, 0.0118, 0.0119,  ..., 0.0118, 0.0118, 0.0119],
         [0.0117, 0.0118, 0.0119,  ..., 0.0118, 0.0118, 0.0119],
         [0.9648, 0.9646, 0.9644,  ..., 0.9645, 0.9647, 0.9644]],
        [[0.0114, 0.0113, 0.0116,  ..., 0.0114, 0.0110, 0.0111],
         [0.0114, 0.0113, 0.0116,  ..., 0.0114, 0.0110, 0.0111],
         [0.0114, 0.0113, 0.0116,  ..., 0.0114, 0.0110, 0.0111],
         [0.9659, 0.9662, 0.9652,  ..., 0.9657, 0.9671, 0.9666]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.8748e-03, 8.9033e-03, 8.7317e-03,  ..., 9.5132e-03,
          9.0375e-03, 8.9813e-03],
         [8.8748e-03, 8.9033e-03, 8.7317e-03,  ..., 9.5132e-03,
          9.0375e-03, 8.9813e-03],
         [8.8748e-03, 8.9033e-03, 8.7317e-03,  ..., 9.5132e-03,
          9.0375e-03, 8.9813e-03],
         [9.7338e-01, 9.7329e-01, 9.7380e-01,  ..., 9.7146e-01,
          9.7289e-01, 9.7306e-01]],
        [[9.0702e-03, 8.7471e-03, 9.0451e-03,  ..., 3.9644e-04,
          8.7252e-03, 8.8492e-03],
         [9.0702e-03, 8.7471e-03, 9.0451e-03,  ..., 3.9644e-04,
          8.7252e-03, 8.8492e-03],
         [9.0702e-03, 8.7471e-03, 9.0451e-03,  ..., 9.9881e-01,
          8.7252e-03, 8.8492e-03],
         [9.7279e-01, 9.7376e-01, 9.7286e-01,  ..., 3.9644e-04,
          9.7382e-01, 9.7345e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 288:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:29,367 [Process: 0] Synchronize training processes
2024-08-16 15:57:29,367 [Process: 0] Evaluating...
2024-08-16 15:57:29,369 [Process: 0] EPOCH 288:
2024-08-16 15:57:29,371 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0118, 0.0119, 0.0120,  ..., 0.0118, 0.0119, 0.0119],
         [0.0118, 0.0119, 0.0120,  ..., 0.0118, 0.0119, 0.0119],
         [0.0118, 0.0119, 0.0120,  ..., 0.0118, 0.0119, 0.0119],
         [0.9645, 0.9643, 0.9640,  ..., 0.9646, 0.9644, 0.9644]],
        [[0.0110, 0.0114, 0.0114,  ..., 0.0114, 0.0114, 0.0112],
         [0.0110, 0.0114, 0.0114,  ..., 0.0114, 0.0114, 0.0112],
         [0.0110, 0.0114, 0.0114,  ..., 0.0114, 0.0114, 0.0112],
         [0.9669, 0.9659, 0.9658,  ..., 0.9658, 0.9659, 0.9663]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5098e-03, 8.9487e-03, 8.9284e-03,  ..., 8.7615e-03,
          9.0528e-03, 8.6539e-03],
         [8.5098e-03, 8.9487e-03, 8.9284e-03,  ..., 8.7615e-03,
          9.0528e-03, 8.6539e-03],
         [8.5098e-03, 8.9487e-03, 8.9284e-03,  ..., 8.7615e-03,
          9.0528e-03, 8.6539e-03],
         [9.7447e-01, 9.7315e-01, 9.7321e-01,  ..., 9.7372e-01,
          9.7284e-01, 9.7404e-01]],
        [[8.9161e-03, 8.8914e-03, 8.7328e-03,  ..., 3.5520e-04,
          9.2346e-03, 9.0130e-03],
         [8.9161e-03, 8.8914e-03, 8.7328e-03,  ..., 3.5520e-04,
          9.2346e-03, 9.0130e-03],
         [8.9161e-03, 8.8914e-03, 8.7328e-03,  ..., 9.9893e-01,
          9.2346e-03, 9.0130e-03],
         [9.7325e-01, 9.7333e-01, 9.7380e-01,  ..., 3.5520e-04,
          9.7230e-01, 9.7296e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 289:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:31,458 [Process: 0] Synchronize training processes
2024-08-16 15:57:31,458 [Process: 0] Evaluating...
2024-08-16 15:57:31,460 [Process: 0] EPOCH 289:
2024-08-16 15:57:31,462 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0117, 0.0115,  ..., 0.0116, 0.0116, 0.0115],
         [0.0115, 0.0117, 0.0115,  ..., 0.0116, 0.0116, 0.0115],
         [0.0115, 0.0117, 0.0115,  ..., 0.0116, 0.0116, 0.0115],
         [0.9656, 0.9648, 0.9654,  ..., 0.9653, 0.9652, 0.9654]],
        [[0.0111, 0.0113, 0.0111,  ..., 0.0112, 0.0107, 0.0106],
         [0.0111, 0.0113, 0.0111,  ..., 0.0112, 0.0107, 0.0106],
         [0.0111, 0.0113, 0.0111,  ..., 0.0112, 0.0107, 0.0106],
         [0.9668, 0.9660, 0.9667,  ..., 0.9665, 0.9680, 0.9681]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.1835e-03, 8.6871e-03, 8.9095e-03,  ..., 8.6628e-03,
          8.5407e-03, 8.9786e-03],
         [8.1835e-03, 8.6871e-03, 8.9095e-03,  ..., 8.6628e-03,
          8.5407e-03, 8.9786e-03],
         [8.1835e-03, 8.6871e-03, 8.9095e-03,  ..., 8.6628e-03,
          8.5407e-03, 8.9786e-03],
         [9.7545e-01, 9.7394e-01, 9.7327e-01,  ..., 9.7401e-01,
          9.7438e-01, 9.7306e-01]],
        [[8.5696e-03, 8.8359e-03, 8.9417e-03,  ..., 2.1507e-05,
          8.8619e-03, 8.4740e-03],
         [8.5696e-03, 8.8359e-03, 8.9417e-03,  ..., 2.1507e-05,
          8.8619e-03, 8.4740e-03],
         [8.5696e-03, 8.8359e-03, 8.9417e-03,  ..., 9.9994e-01,
          8.8619e-03, 8.4740e-03],
         [9.7429e-01, 9.7349e-01, 9.7317e-01,  ..., 2.1507e-05,
          9.7341e-01, 9.7458e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 290:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:33,557 [Process: 0] Synchronize training processes
2024-08-16 15:57:33,557 [Process: 0] Evaluating...
2024-08-16 15:57:33,559 [Process: 0] EPOCH 290:
2024-08-16 15:57:33,561 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0119, 0.0118, 0.0119,  ..., 0.0119, 0.0119, 0.0119],
         [0.0119, 0.0118, 0.0119,  ..., 0.0119, 0.0119, 0.0119],
         [0.0119, 0.0118, 0.0119,  ..., 0.0119, 0.0119, 0.0119],
         [0.9643, 0.9645, 0.9643,  ..., 0.9643, 0.9643, 0.9642]],
        [[0.0114, 0.0116, 0.0112,  ..., 0.0113, 0.0114, 0.0116],
         [0.0114, 0.0116, 0.0112,  ..., 0.0113, 0.0114, 0.0116],
         [0.0114, 0.0116, 0.0112,  ..., 0.0113, 0.0114, 0.0116],
         [0.9659, 0.9651, 0.9663,  ..., 0.9660, 0.9658, 0.9653]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6647e-03, 8.4530e-03, 8.7539e-03,  ..., 8.9520e-03,
          9.1249e-03, 8.7416e-03],
         [8.6647e-03, 8.4530e-03, 8.7539e-03,  ..., 8.9520e-03,
          9.1249e-03, 8.7416e-03],
         [8.6647e-03, 8.4530e-03, 8.7539e-03,  ..., 8.9520e-03,
          9.1249e-03, 8.7416e-03],
         [9.7401e-01, 9.7464e-01, 9.7374e-01,  ..., 9.7314e-01,
          9.7263e-01, 9.7378e-01]],
        [[8.8622e-03, 8.7829e-03, 8.6362e-03,  ..., 2.3646e-04,
          8.6337e-03, 8.6205e-03],
         [8.8622e-03, 8.7829e-03, 8.6362e-03,  ..., 2.3646e-04,
          8.6337e-03, 8.6205e-03],
         [8.8622e-03, 8.7829e-03, 8.6362e-03,  ..., 9.9929e-01,
          8.6337e-03, 8.6205e-03],
         [9.7341e-01, 9.7365e-01, 9.7409e-01,  ..., 2.3646e-04,
          9.7410e-01, 9.7414e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 291:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:35,663 [Process: 0] Synchronize training processes
2024-08-16 15:57:35,663 [Process: 0] Evaluating...
2024-08-16 15:57:35,665 [Process: 0] EPOCH 291:
2024-08-16 15:57:35,667 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0121, 0.0120, 0.0120,  ..., 0.0120, 0.0120, 0.0121],
         [0.0121, 0.0120, 0.0120,  ..., 0.0120, 0.0120, 0.0121],
         [0.0121, 0.0120, 0.0120,  ..., 0.0120, 0.0120, 0.0121],
         [0.9638, 0.9640, 0.9641,  ..., 0.9641, 0.9639, 0.9638]],
        [[0.0117, 0.0118, 0.0121,  ..., 0.0118, 0.0121, 0.0117],
         [0.0117, 0.0118, 0.0121,  ..., 0.0118, 0.0121, 0.0117],
         [0.0117, 0.0118, 0.0121,  ..., 0.0118, 0.0121, 0.0117],
         [0.9648, 0.9646, 0.9636,  ..., 0.9646, 0.9638, 0.9649]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.4238e-03, 8.4865e-03, 8.4140e-03,  ..., 8.7978e-03,
          8.8572e-03, 8.9014e-03],
         [8.4238e-03, 8.4865e-03, 8.4140e-03,  ..., 8.7978e-03,
          8.8572e-03, 8.9014e-03],
         [8.4238e-03, 8.4865e-03, 8.4140e-03,  ..., 8.7978e-03,
          8.8572e-03, 8.9014e-03],
         [9.7473e-01, 9.7454e-01, 9.7476e-01,  ..., 9.7361e-01,
          9.7343e-01, 9.7330e-01]],
        [[8.2486e-03, 8.5928e-03, 8.5484e-03,  ..., 6.9327e-05,
          8.8813e-03, 8.8570e-03],
         [8.2486e-03, 8.5928e-03, 8.5484e-03,  ..., 6.9327e-05,
          8.8813e-03, 8.8570e-03],
         [8.2486e-03, 8.5928e-03, 8.5484e-03,  ..., 9.9979e-01,
          8.8813e-03, 8.8570e-03],
         [9.7525e-01, 9.7422e-01, 9.7435e-01,  ..., 6.9327e-05,
          9.7336e-01, 9.7343e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 292:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:37,762 [Process: 0] Synchronize training processes
2024-08-16 15:57:37,763 [Process: 0] Evaluating...
2024-08-16 15:57:37,771 [Process: 0] EPOCH 292:
2024-08-16 15:57:37,773 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0115, 0.0115,  ..., 0.0115, 0.0116, 0.0115],
         [0.0115, 0.0115, 0.0115,  ..., 0.0115, 0.0116, 0.0115],
         [0.0115, 0.0115, 0.0115,  ..., 0.0115, 0.0116, 0.0115],
         [0.9654, 0.9654, 0.9654,  ..., 0.9654, 0.9653, 0.9654]],
        [[0.0109, 0.0111, 0.0114,  ..., 0.0110, 0.0110, 0.0113],
         [0.0109, 0.0111, 0.0114,  ..., 0.0110, 0.0110, 0.0113],
         [0.0109, 0.0111, 0.0114,  ..., 0.0110, 0.0110, 0.0113],
         [0.9672, 0.9666, 0.9658,  ..., 0.9669, 0.9670, 0.9662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6363e-03, 8.7839e-03, 8.8571e-03,  ..., 8.6791e-03,
          8.5109e-03, 8.5429e-03],
         [8.6363e-03, 8.7839e-03, 8.8571e-03,  ..., 8.6791e-03,
          8.5109e-03, 8.5429e-03],
         [8.6363e-03, 8.7839e-03, 8.8571e-03,  ..., 8.6791e-03,
          8.5109e-03, 8.5429e-03],
         [9.7409e-01, 9.7365e-01, 9.7343e-01,  ..., 9.7396e-01,
          9.7447e-01, 9.7437e-01]],
        [[8.3202e-03, 8.4961e-03, 8.7801e-03,  ..., 1.1428e-04,
          8.9441e-03, 9.0034e-03],
         [8.3202e-03, 8.4961e-03, 8.7801e-03,  ..., 1.1428e-04,
          8.9441e-03, 9.0034e-03],
         [8.3202e-03, 8.4961e-03, 8.7801e-03,  ..., 9.9966e-01,
          8.9441e-03, 9.0034e-03],
         [9.7504e-01, 9.7451e-01, 9.7366e-01,  ..., 1.1428e-04,
          9.7317e-01, 9.7299e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 293:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:39,862 [Process: 0] Synchronize training processes
2024-08-16 15:57:39,863 [Process: 0] Evaluating...
2024-08-16 15:57:39,865 [Process: 0] EPOCH 293:
2024-08-16 15:57:39,867 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0112, 0.0111,  ..., 0.0112, 0.0111, 0.0111],
         [0.0110, 0.0112, 0.0111,  ..., 0.0112, 0.0111, 0.0111],
         [0.0110, 0.0112, 0.0111,  ..., 0.0112, 0.0111, 0.0111],
         [0.9670, 0.9663, 0.9666,  ..., 0.9665, 0.9666, 0.9668]],
        [[0.0104, 0.0107, 0.0109,  ..., 0.0107, 0.0107, 0.0108],
         [0.0104, 0.0107, 0.0109,  ..., 0.0107, 0.0107, 0.0108],
         [0.0104, 0.0107, 0.0109,  ..., 0.0107, 0.0107, 0.0108],
         [0.9689, 0.9679, 0.9673,  ..., 0.9679, 0.9679, 0.9676]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6162e-03, 8.7371e-03, 8.6410e-03,  ..., 8.6607e-03,
          8.7802e-03, 8.7303e-03],
         [8.6162e-03, 8.7371e-03, 8.6410e-03,  ..., 8.6607e-03,
          8.7802e-03, 8.7303e-03],
         [8.6162e-03, 8.7371e-03, 8.6410e-03,  ..., 8.6607e-03,
          8.7802e-03, 8.7303e-03],
         [9.7415e-01, 9.7379e-01, 9.7408e-01,  ..., 9.7402e-01,
          9.7366e-01, 9.7381e-01]],
        [[8.7206e-03, 8.8079e-03, 8.3244e-03,  ..., 6.2665e-04,
          8.7197e-03, 8.6929e-03],
         [8.7206e-03, 8.8079e-03, 8.3244e-03,  ..., 6.2665e-04,
          8.7197e-03, 8.6929e-03],
         [8.7206e-03, 8.8079e-03, 8.3244e-03,  ..., 9.9812e-01,
          8.7197e-03, 8.6929e-03],
         [9.7384e-01, 9.7358e-01, 9.7503e-01,  ..., 6.2665e-04,
          9.7384e-01, 9.7392e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 294:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:41,945 [Process: 0] Synchronize training processes
2024-08-16 15:57:41,946 [Process: 0] Evaluating...
2024-08-16 15:57:41,948 [Process: 0] EPOCH 294:
2024-08-16 15:57:41,950 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0115, 0.0114,  ..., 0.0115, 0.0115, 0.0114],
         [0.0115, 0.0115, 0.0114,  ..., 0.0115, 0.0115, 0.0114],
         [0.0115, 0.0115, 0.0114,  ..., 0.0115, 0.0115, 0.0114],
         [0.9654, 0.9656, 0.9657,  ..., 0.9655, 0.9656, 0.9658]],
        [[0.0113, 0.0111, 0.0111,  ..., 0.0112, 0.0113, 0.0111],
         [0.0113, 0.0111, 0.0111,  ..., 0.0112, 0.0113, 0.0111],
         [0.0113, 0.0111, 0.0111,  ..., 0.0112, 0.0113, 0.0111],
         [0.9660, 0.9667, 0.9667,  ..., 0.9665, 0.9661, 0.9668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0083, 0.0088,  ..., 0.0086, 0.0087, 0.0086],
         [0.0085, 0.0083, 0.0088,  ..., 0.0086, 0.0087, 0.0086],
         [0.0085, 0.0083, 0.0088,  ..., 0.0086, 0.0087, 0.0086],
         [0.9744, 0.9750, 0.9736,  ..., 0.9742, 0.9740, 0.9743]],
        [[0.0089, 0.0086, 0.0084,  ..., 0.0021, 0.0084, 0.0086],
         [0.0089, 0.0086, 0.0084,  ..., 0.0021, 0.0084, 0.0086],
         [0.0089, 0.0086, 0.0084,  ..., 0.9936, 0.0084, 0.0086],
         [0.9734, 0.9741, 0.9748,  ..., 0.0021, 0.9748, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 295:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:57:44,040 [Process: 0] Synchronize training processes
2024-08-16 15:57:44,041 [Process: 0] Evaluating...
2024-08-16 15:57:44,043 [Process: 0] EPOCH 295:
2024-08-16 15:57:44,044 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0115, 0.0116,  ..., 0.0115, 0.0114, 0.0115],
         [0.0115, 0.0115, 0.0116,  ..., 0.0115, 0.0114, 0.0115],
         [0.0115, 0.0115, 0.0116,  ..., 0.0115, 0.0114, 0.0115],
         [0.9656, 0.9654, 0.9653,  ..., 0.9655, 0.9657, 0.9654]],
        [[0.0112, 0.0113, 0.0110,  ..., 0.0113, 0.0111, 0.0113],
         [0.0112, 0.0113, 0.0110,  ..., 0.0113, 0.0111, 0.0113],
         [0.0112, 0.0113, 0.0110,  ..., 0.0113, 0.0111, 0.0113],
         [0.9664, 0.9662, 0.9669,  ..., 0.9662, 0.9667, 0.9661]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0087, 0.0087,  ..., 0.0085, 0.0087, 0.0088],
         [0.0085, 0.0087, 0.0087,  ..., 0.0085, 0.0087, 0.0088],
         [0.0085, 0.0087, 0.0087,  ..., 0.0085, 0.0087, 0.0088],
         [0.9746, 0.9739, 0.9739,  ..., 0.9746, 0.9740, 0.9736]],
        [[0.0085, 0.0083, 0.0088,  ..., 0.0017, 0.0086, 0.0086],
         [0.0085, 0.0083, 0.0088,  ..., 0.0017, 0.0086, 0.0086],
         [0.0085, 0.0083, 0.0088,  ..., 0.9950, 0.0086, 0.0086],
         [0.9745, 0.9752, 0.9735,  ..., 0.0017, 0.9742, 0.9742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:46,159 [Process: 0] Synchronize training processes
2024-08-16 15:57:46,160 [Process: 0] Evaluating...
2024-08-16 15:57:46,162 [Process: 0] EPOCH 296:
2024-08-16 15:57:46,164 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 296:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0115, 0.0115,  ..., 0.0115, 0.0116, 0.0115],
         [0.0114, 0.0115, 0.0115,  ..., 0.0115, 0.0116, 0.0115],
         [0.0114, 0.0115, 0.0115,  ..., 0.0115, 0.0116, 0.0115],
         [0.9657, 0.9655, 0.9655,  ..., 0.9654, 0.9653, 0.9655]],
        [[0.0114, 0.0112, 0.0111,  ..., 0.0114, 0.0113, 0.0112],
         [0.0114, 0.0112, 0.0111,  ..., 0.0114, 0.0113, 0.0112],
         [0.0114, 0.0112, 0.0111,  ..., 0.0114, 0.0113, 0.0112],
         [0.9658, 0.9663, 0.9668,  ..., 0.9658, 0.9660, 0.9665]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:57:48,298 [Process: 0] Synchronize training processes
2024-08-16 15:57:48,298 [Process: 0] Evaluating...
2024-08-16 15:57:48,300 [Process: 0] EPOCH 297:
2024-08-16 15:57:48,302 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.5322e-03, 8.6318e-03, 8.4140e-03,  ..., 8.6386e-03,
          8.3288e-03, 8.1562e-03],
         [8.5322e-03, 8.6318e-03, 8.4140e-03,  ..., 8.6386e-03,
          8.3288e-03, 8.1562e-03],
         [8.5322e-03, 8.6318e-03, 8.4140e-03,  ..., 8.6386e-03,
          8.3288e-03, 8.1562e-03],
         [9.7440e-01, 9.7410e-01, 9.7476e-01,  ..., 9.7408e-01,
          9.7501e-01, 9.7553e-01]],
        [[8.3495e-03, 8.3379e-03, 8.4871e-03,  ..., 4.3625e-04,
          8.3571e-03, 8.5271e-03],
         [8.3495e-03, 8.3379e-03, 8.4871e-03,  ..., 4.3625e-04,
          8.3571e-03, 8.5271e-03],
         [8.3495e-03, 8.3379e-03, 8.4871e-03,  ..., 9.9869e-01,
          8.3571e-03, 8.5271e-03],
         [9.7495e-01, 9.7499e-01, 9.7454e-01,  ..., 4.3625e-04,
          9.7493e-01, 9.7442e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 297:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0115, 0.0115, 0.0115,  ..., 0.0114, 0.0115, 0.0114],
         [0.0115, 0.0115, 0.0115,  ..., 0.0114, 0.0115, 0.0114],
         [0.0115, 0.0115, 0.0115,  ..., 0.0114, 0.0115, 0.0114],
         [0.9654, 0.9654, 0.9654,  ..., 0.9658, 0.9656, 0.9658]],
        [[0.0113, 0.0112, 0.0113,  ..., 0.0112, 0.0112, 0.0113],
         [0.0113, 0.0112, 0.0113,  ..., 0.0112, 0.0112, 0.0113],
         [0.0113, 0.0112, 0.0113,  ..., 0.0112, 0.0112, 0.0113],
         [0.9662, 0.9665, 0.9661,  ..., 0.9665, 0.9665, 0.9660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:50,463 [Process: 0] Synchronize training processes
2024-08-16 15:57:50,464 [Process: 0] Evaluating...
2024-08-16 15:57:50,466 [Process: 0] EPOCH 298:
2024-08-16 15:57:50,468 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3681e-03, 8.4433e-03, 8.4943e-03,  ..., 8.4436e-03,
          8.1036e-03, 8.3916e-03],
         [8.3681e-03, 8.4433e-03, 8.4943e-03,  ..., 8.4436e-03,
          8.1036e-03, 8.3916e-03],
         [8.3681e-03, 8.4433e-03, 8.4943e-03,  ..., 8.4436e-03,
          8.1036e-03, 8.3916e-03],
         [9.7490e-01, 9.7467e-01, 9.7452e-01,  ..., 9.7467e-01,
          9.7569e-01, 9.7483e-01]],
        [[8.0822e-03, 8.2957e-03, 8.4837e-03,  ..., 2.4738e-04,
          8.6275e-03, 8.2575e-03],
         [8.0822e-03, 8.2957e-03, 8.4837e-03,  ..., 2.4738e-04,
          8.6275e-03, 8.2575e-03],
         [8.0822e-03, 8.2957e-03, 8.4837e-03,  ..., 9.9926e-01,
          8.6275e-03, 8.2575e-03],
         [9.7575e-01, 9.7511e-01, 9.7455e-01,  ..., 2.4738e-04,
          9.7412e-01, 9.7523e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 298:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0113, 0.0113, 0.0113,  ..., 0.0113, 0.0113, 0.0113],
         [0.0113, 0.0113, 0.0113,  ..., 0.0113, 0.0113, 0.0113],
         [0.0113, 0.0113, 0.0113,  ..., 0.0113, 0.0113, 0.0113],
         [0.9662, 0.9662, 0.9662,  ..., 0.9661, 0.9661, 0.9661]],
        [[0.0110, 0.0109, 0.0112,  ..., 0.0111, 0.0110, 0.0109],
         [0.0110, 0.0109, 0.0112,  ..., 0.0111, 0.0110, 0.0109],
         [0.0110, 0.0109, 0.0112,  ..., 0.0111, 0.0110, 0.0109],
         [0.9669, 0.9672, 0.9664,  ..., 0.9668, 0.9671, 0.9673]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:52,677 [Process: 0] Synchronize training processes
2024-08-16 15:57:52,678 [Process: 0] Evaluating...
2024-08-16 15:57:52,680 [Process: 0] EPOCH 299:
2024-08-16 15:57:52,682 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3262e-03, 8.4095e-03, 8.7084e-03,  ..., 8.3235e-03,
          8.2462e-03, 8.3604e-03],
         [8.3262e-03, 8.4095e-03, 8.7084e-03,  ..., 8.3235e-03,
          8.2462e-03, 8.3604e-03],
         [8.3262e-03, 8.4095e-03, 8.7084e-03,  ..., 8.3235e-03,
          8.2462e-03, 8.3604e-03],
         [9.7502e-01, 9.7477e-01, 9.7387e-01,  ..., 9.7503e-01,
          9.7526e-01, 9.7492e-01]],
        [[8.8278e-03, 8.1872e-03, 8.4745e-03,  ..., 2.6922e-04,
          8.4358e-03, 8.2949e-03],
         [8.8278e-03, 8.1872e-03, 8.4745e-03,  ..., 2.6922e-04,
          8.4358e-03, 8.2949e-03],
         [8.8278e-03, 8.1872e-03, 8.4745e-03,  ..., 9.9919e-01,
          8.4358e-03, 8.2949e-03],
         [9.7352e-01, 9.7544e-01, 9.7458e-01,  ..., 2.6922e-04,
          9.7469e-01, 9.7512e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 299:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0112, 0.0113,  ..., 0.0114, 0.0113, 0.0112],
         [0.0114, 0.0112, 0.0113,  ..., 0.0114, 0.0113, 0.0112],
         [0.0114, 0.0112, 0.0113,  ..., 0.0114, 0.0113, 0.0112],
         [0.9659, 0.9665, 0.9662,  ..., 0.9658, 0.9660, 0.9663]],
        [[0.0109, 0.0110, 0.0112,  ..., 0.0111, 0.0110, 0.0111],
         [0.0109, 0.0110, 0.0112,  ..., 0.0111, 0.0110, 0.0111],
         [0.0109, 0.0110, 0.0112,  ..., 0.0111, 0.0110, 0.0111],
         [0.9673, 0.9671, 0.9664,  ..., 0.9668, 0.9671, 0.9667]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:54,875 [Process: 0] Synchronize training processes
2024-08-16 15:57:54,876 [Process: 0] Evaluating...
2024-08-16 15:57:54,878 [Process: 0] EPOCH 300:
2024-08-16 15:57:54,880 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2133e-03, 8.1285e-03, 7.9437e-03,  ..., 8.5319e-03,
          8.2787e-03, 8.2659e-03],
         [8.2133e-03, 8.1285e-03, 7.9437e-03,  ..., 8.5319e-03,
          8.2787e-03, 8.2659e-03],
         [8.2133e-03, 8.1285e-03, 7.9437e-03,  ..., 8.5319e-03,
          8.2787e-03, 8.2659e-03],
         [9.7536e-01, 9.7561e-01, 9.7617e-01,  ..., 9.7440e-01,
          9.7516e-01, 9.7520e-01]],
        [[8.3356e-03, 8.4312e-03, 8.5731e-03,  ..., 2.9491e-05,
          8.3972e-03, 8.1666e-03],
         [8.3356e-03, 8.4312e-03, 8.5731e-03,  ..., 2.9491e-05,
          8.3972e-03, 8.1666e-03],
         [8.3356e-03, 8.4312e-03, 8.5731e-03,  ..., 9.9991e-01,
          8.3972e-03, 8.1666e-03],
         [9.7499e-01, 9.7471e-01, 9.7428e-01,  ..., 2.9491e-05,
          9.7481e-01, 9.7550e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 300:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0113, 0.0114, 0.0113,  ..., 0.0113, 0.0113, 0.0114],
         [0.0113, 0.0114, 0.0113,  ..., 0.0113, 0.0113, 0.0114],
         [0.0113, 0.0114, 0.0113,  ..., 0.0113, 0.0113, 0.0114],
         [0.9660, 0.9659, 0.9662,  ..., 0.9661, 0.9661, 0.9659]],
        [[0.0108, 0.0112, 0.0112,  ..., 0.0113, 0.0111, 0.0108],
         [0.0108, 0.0112, 0.0112,  ..., 0.0113, 0.0111, 0.0108],
         [0.0108, 0.0112, 0.0112,  ..., 0.0113, 0.0111, 0.0108],
         [0.9675, 0.9665, 0.9665,  ..., 0.9661, 0.9668, 0.9675]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:57,040 [Process: 0] Synchronize training processes
2024-08-16 15:57:57,040 [Process: 0] Evaluating...
2024-08-16 15:57:57,042 [Process: 0] EPOCH 301:
2024-08-16 15:57:57,044 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2256e-03, 8.2134e-03, 8.0260e-03,  ..., 8.0685e-03,
          8.0117e-03, 8.5596e-03],
         [8.2256e-03, 8.2134e-03, 8.0260e-03,  ..., 8.0685e-03,
          8.0117e-03, 8.5596e-03],
         [8.2256e-03, 8.2134e-03, 8.0260e-03,  ..., 8.0685e-03,
          8.0117e-03, 8.5596e-03],
         [9.7532e-01, 9.7536e-01, 9.7592e-01,  ..., 9.7579e-01,
          9.7596e-01, 9.7432e-01]],
        [[8.3004e-03, 8.4299e-03, 8.1705e-03,  ..., 1.6281e-04,
          8.3177e-03, 8.5600e-03],
         [8.3004e-03, 8.4299e-03, 8.1705e-03,  ..., 1.6281e-04,
          8.3177e-03, 8.5600e-03],
         [8.3004e-03, 8.4299e-03, 8.1705e-03,  ..., 9.9951e-01,
          8.3177e-03, 8.5600e-03],
         [9.7510e-01, 9.7471e-01, 9.7549e-01,  ..., 1.6281e-04,
          9.7505e-01, 9.7432e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 301:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0113, 0.0113, 0.0113,  ..., 0.0114, 0.0113, 0.0112],
         [0.0113, 0.0113, 0.0113,  ..., 0.0114, 0.0113, 0.0112],
         [0.0113, 0.0113, 0.0113,  ..., 0.0114, 0.0113, 0.0112],
         [0.9661, 0.9661, 0.9661,  ..., 0.9659, 0.9662, 0.9665]],
        [[0.0111, 0.0110, 0.0112,  ..., 0.0112, 0.0108, 0.0111],
         [0.0111, 0.0110, 0.0112,  ..., 0.0112, 0.0108, 0.0111],
         [0.0111, 0.0110, 0.0112,  ..., 0.0112, 0.0108, 0.0111],
         [0.9668, 0.9670, 0.9665,  ..., 0.9665, 0.9676, 0.9666]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:57:59,149 [Process: 0] Synchronize training processes
2024-08-16 15:57:59,150 [Process: 0] Evaluating...
2024-08-16 15:57:59,158 [Process: 0] EPOCH 302:
2024-08-16 15:57:59,160 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0082, 0.0086,  ..., 0.0084, 0.0080, 0.0086],
         [0.0085, 0.0082, 0.0086,  ..., 0.0084, 0.0080, 0.0086],
         [0.0085, 0.0082, 0.0086,  ..., 0.0084, 0.0080, 0.0086],
         [0.9745, 0.9754, 0.9743,  ..., 0.9748, 0.9759, 0.9741]],
        [[0.0083, 0.0081, 0.0082,  ..., 0.0018, 0.0084, 0.0082],
         [0.0083, 0.0081, 0.0082,  ..., 0.0018, 0.0084, 0.0082],
         [0.0083, 0.0081, 0.0082,  ..., 0.9946, 0.0084, 0.0082],
         [0.9751, 0.9758, 0.9753,  ..., 0.0018, 0.9748, 0.9753]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 302:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0114, 0.0112, 0.0112,  ..., 0.0112, 0.0113, 0.0112],
         [0.0114, 0.0112, 0.0112,  ..., 0.0112, 0.0113, 0.0112],
         [0.0114, 0.0112, 0.0112,  ..., 0.0112, 0.0113, 0.0112],
         [0.9657, 0.9663, 0.9665,  ..., 0.9663, 0.9662, 0.9665]],
        [[0.0114, 0.0114, 0.0113,  ..., 0.0114, 0.0109, 0.0109],
         [0.0114, 0.0114, 0.0113,  ..., 0.0114, 0.0109, 0.0109],
         [0.0114, 0.0114, 0.0113,  ..., 0.0114, 0.0109, 0.0109],
         [0.9658, 0.9658, 0.9661,  ..., 0.9659, 0.9672, 0.9674]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.4235e-03, 8.6068e-03, 8.6780e-03,  ..., 8.6093e-03,
          8.1849e-03, 8.4131e-03],
         [8.4235e-03, 8.6068e-03, 8.6780e-03,  ..., 8.6093e-03,
          8.1849e-03, 8.4131e-03],
         [8.4235e-03, 8.6068e-03, 8.6780e-03,  ..., 8.6093e-03,
          8.1849e-03, 8.4131e-03],
         [9.7473e-01, 9.7418e-01, 9.7397e-01,  ..., 9.7417e-01,
          9.7545e-01, 9.7476e-01]],
        [[8.0782e-03, 8.3919e-03, 7.9669e-03,  ..., 4.5423e-05,
          8.0977e-03, 8.0849e-03],
         [8.0782e-03, 8.3919e-03, 7.9669e-03,  ..., 4.5423e-05,
          8.0977e-03, 8.0849e-03],
         [8.0782e-03, 8.3919e-03, 7.9669e-03,  ..., 9.9986e-01,
          8.0977e-03, 8.0849e-03],
         [9.7577e-01, 9.7482e-01, 9.7610e-01,  ..., 4.5423e-05,
          9.7571e-01, 9.7575e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 303:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0112, 0.0112,  ..., 0.0111, 0.0111, 0.0111],
         [0.0111, 0.0112, 0.0112,  ..., 0.0111, 0.0111, 0.0111],
         [0.0111, 0.0112, 0.0112,  ..., 0.0111, 0.0111, 0.0111],
         [0.9666, 0.9664, 0.9665,  ..., 0.9667, 0.9668, 0.9668]],
        [[0.0108, 0.0108, 0.0108,  ..., 0.0108, 0.0108, 0.0110],
         [0.0108, 0.0108, 0.0108,  ..., 0.0108, 0.0108, 0.0110],
         [0.0108, 0.0108, 0.0108,  ..., 0.0108, 0.0108, 0.0110],
         [0.9675, 0.9676, 0.9677,  ..., 0.9677, 0.9677, 0.9670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:01,254 [Process: 0] Synchronize training processes
2024-08-16 15:58:01,255 [Process: 0] Evaluating...
2024-08-16 15:58:01,257 [Process: 0] EPOCH 303:
2024-08-16 15:58:01,259 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3009e-03, 8.2897e-03, 8.2393e-03,  ..., 8.0708e-03,
          8.3922e-03, 8.0928e-03],
         [8.3009e-03, 8.2897e-03, 8.2393e-03,  ..., 8.0708e-03,
          8.3922e-03, 8.0928e-03],
         [8.3009e-03, 8.2897e-03, 8.2393e-03,  ..., 8.0708e-03,
          8.3922e-03, 8.0928e-03],
         [9.7510e-01, 9.7513e-01, 9.7528e-01,  ..., 9.7579e-01,
          9.7482e-01, 9.7572e-01]],
        [[8.0390e-03, 8.4468e-03, 8.3511e-03,  ..., 5.7279e-04,
          8.1045e-03, 8.3406e-03],
         [8.0390e-03, 8.4468e-03, 8.3511e-03,  ..., 5.7279e-04,
          8.1045e-03, 8.3406e-03],
         [8.0390e-03, 8.4468e-03, 8.3511e-03,  ..., 9.9828e-01,
          8.1045e-03, 8.3406e-03],
         [9.7588e-01, 9.7466e-01, 9.7495e-01,  ..., 5.7279e-04,
          9.7569e-01, 9.7498e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 304:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:58:03,377 [Process: 0] Synchronize training processes
2024-08-16 15:58:03,378 [Process: 0] Evaluating...
2024-08-16 15:58:03,380 [Process: 0] EPOCH 304:
2024-08-16 15:58:03,382 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0111, 0.0110,  ..., 0.0111, 0.0111, 0.0111],
         [0.0111, 0.0111, 0.0110,  ..., 0.0111, 0.0111, 0.0111],
         [0.0111, 0.0111, 0.0110,  ..., 0.0111, 0.0111, 0.0111],
         [0.9668, 0.9668, 0.9670,  ..., 0.9668, 0.9667, 0.9667]],
        [[0.0107, 0.0106, 0.0106,  ..., 0.0108, 0.0108, 0.0108],
         [0.0107, 0.0106, 0.0106,  ..., 0.0108, 0.0108, 0.0108],
         [0.0107, 0.0106, 0.0106,  ..., 0.0108, 0.0108, 0.0108],
         [0.9678, 0.9681, 0.9682,  ..., 0.9677, 0.9677, 0.9677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.0627e-03, 7.9317e-03, 8.1410e-03,  ..., 8.3233e-03,
          8.2343e-03, 8.5961e-03],
         [8.0627e-03, 7.9317e-03, 8.1410e-03,  ..., 8.3233e-03,
          8.2343e-03, 8.5961e-03],
         [8.0627e-03, 7.9317e-03, 8.1410e-03,  ..., 8.3233e-03,
          8.2343e-03, 8.5961e-03],
         [9.7581e-01, 9.7620e-01, 9.7558e-01,  ..., 9.7503e-01,
          9.7530e-01, 9.7421e-01]],
        [[8.1881e-03, 8.1390e-03, 8.2440e-03,  ..., 9.2462e-07,
          8.3956e-03, 8.1325e-03],
         [8.1881e-03, 8.1390e-03, 8.2440e-03,  ..., 9.2462e-07,
          8.3956e-03, 8.1325e-03],
         [8.1881e-03, 8.1390e-03, 8.2440e-03,  ..., 1.0000e+00,
          8.3956e-03, 8.1325e-03],
         [9.7544e-01, 9.7558e-01, 9.7527e-01,  ..., 9.2462e-07,
          9.7481e-01, 9.7560e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 305:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:05,486 [Process: 0] Synchronize training processes
2024-08-16 15:58:05,486 [Process: 0] Evaluating...
2024-08-16 15:58:05,488 [Process: 0] EPOCH 305:
2024-08-16 15:58:05,490 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0110, 0.0110, 0.0109,  ..., 0.0110, 0.0109, 0.0109],
         [0.0110, 0.0110, 0.0109,  ..., 0.0110, 0.0109, 0.0109],
         [0.0110, 0.0110, 0.0109,  ..., 0.0110, 0.0109, 0.0109],
         [0.9669, 0.9671, 0.9672,  ..., 0.9669, 0.9672, 0.9672]],
        [[0.0107, 0.0108, 0.0108,  ..., 0.0106, 0.0108, 0.0107],
         [0.0107, 0.0108, 0.0108,  ..., 0.0106, 0.0108, 0.0107],
         [0.0107, 0.0108, 0.0108,  ..., 0.0106, 0.0108, 0.0107],
         [0.9679, 0.9675, 0.9677,  ..., 0.9681, 0.9677, 0.9680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.4564e-03, 8.4717e-03, 8.5503e-03,  ..., 8.3603e-03,
          8.3205e-03, 8.3511e-03],
         [8.4564e-03, 8.4717e-03, 8.5503e-03,  ..., 8.3603e-03,
          8.3205e-03, 8.3511e-03],
         [8.4564e-03, 8.4717e-03, 8.5503e-03,  ..., 8.3603e-03,
          8.3205e-03, 8.3511e-03],
         [9.7463e-01, 9.7458e-01, 9.7435e-01,  ..., 9.7492e-01,
          9.7504e-01, 9.7495e-01]],
        [[8.1605e-03, 8.2742e-03, 8.3080e-03,  ..., 4.1294e-04,
          8.2836e-03, 8.2336e-03],
         [8.1605e-03, 8.2742e-03, 8.3080e-03,  ..., 4.1294e-04,
          8.2836e-03, 8.2336e-03],
         [8.1605e-03, 8.2742e-03, 8.3080e-03,  ..., 9.9876e-01,
          8.2836e-03, 8.2336e-03],
         [9.7552e-01, 9.7518e-01, 9.7508e-01,  ..., 4.1294e-04,
          9.7515e-01, 9.7530e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 306:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:07,628 [Process: 0] Synchronize training processes
2024-08-16 15:58:07,628 [Process: 0] Evaluating...
2024-08-16 15:58:07,630 [Process: 0] EPOCH 306:
2024-08-16 15:58:07,633 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0108, 0.0107,  ..., 0.0107, 0.0109, 0.0109],
         [0.0107, 0.0108, 0.0107,  ..., 0.0107, 0.0109, 0.0109],
         [0.0107, 0.0108, 0.0107,  ..., 0.0107, 0.0109, 0.0109],
         [0.9678, 0.9675, 0.9679,  ..., 0.9679, 0.9673, 0.9673]],
        [[0.0107, 0.0106, 0.0105,  ..., 0.0104, 0.0106, 0.0104],
         [0.0107, 0.0106, 0.0105,  ..., 0.0104, 0.0106, 0.0104],
         [0.0107, 0.0106, 0.0105,  ..., 0.0104, 0.0106, 0.0104],
         [0.9679, 0.9683, 0.9684,  ..., 0.9689, 0.9683, 0.9687]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2694e-03, 8.2097e-03, 8.2196e-03,  ..., 8.1805e-03,
          8.3175e-03, 8.5481e-03],
         [8.2694e-03, 8.2097e-03, 8.2196e-03,  ..., 8.1805e-03,
          8.3175e-03, 8.5481e-03],
         [8.2694e-03, 8.2097e-03, 8.2196e-03,  ..., 8.1805e-03,
          8.3175e-03, 8.5481e-03],
         [9.7519e-01, 9.7537e-01, 9.7534e-01,  ..., 9.7546e-01,
          9.7505e-01, 9.7436e-01]],
        [[8.0532e-03, 8.2869e-03, 8.3522e-03,  ..., 3.3012e-04,
          8.3019e-03, 8.1047e-03],
         [8.0532e-03, 8.2869e-03, 8.3522e-03,  ..., 3.3012e-04,
          8.3019e-03, 8.1047e-03],
         [8.0532e-03, 8.2869e-03, 8.3522e-03,  ..., 9.9901e-01,
          8.3019e-03, 8.1047e-03],
         [9.7584e-01, 9.7514e-01, 9.7494e-01,  ..., 3.3012e-04,
          9.7509e-01, 9.7569e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 307:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:09,775 [Process: 0] Synchronize training processes
2024-08-16 15:58:09,776 [Process: 0] Evaluating...
2024-08-16 15:58:09,778 [Process: 0] EPOCH 307:
2024-08-16 15:58:09,780 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0106, 0.0106,  ..., 0.0107, 0.0107, 0.0107],
         [0.0107, 0.0106, 0.0106,  ..., 0.0107, 0.0107, 0.0107],
         [0.0107, 0.0106, 0.0106,  ..., 0.0107, 0.0107, 0.0107],
         [0.9680, 0.9682, 0.9681,  ..., 0.9679, 0.9679, 0.9680]],
        [[0.0103, 0.0105, 0.0102,  ..., 0.0103, 0.0101, 0.0101],
         [0.0103, 0.0105, 0.0102,  ..., 0.0103, 0.0101, 0.0101],
         [0.0103, 0.0105, 0.0102,  ..., 0.0103, 0.0101, 0.0101],
         [0.9690, 0.9685, 0.9694,  ..., 0.9690, 0.9698, 0.9696]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8093e-03, 8.1682e-03, 8.2260e-03,  ..., 8.2430e-03,
          8.2552e-03, 8.0652e-03],
         [7.8093e-03, 8.1682e-03, 8.2260e-03,  ..., 8.2430e-03,
          8.2552e-03, 8.0652e-03],
         [7.8093e-03, 8.1682e-03, 8.2260e-03,  ..., 8.2430e-03,
          8.2552e-03, 8.0652e-03],
         [9.7657e-01, 9.7550e-01, 9.7532e-01,  ..., 9.7527e-01,
          9.7523e-01, 9.7580e-01]],
        [[8.1762e-03, 7.9450e-03, 8.3747e-03,  ..., 1.0982e-04,
          8.0448e-03, 8.0303e-03],
         [8.1762e-03, 7.9450e-03, 8.3747e-03,  ..., 1.0982e-04,
          8.0448e-03, 8.0303e-03],
         [8.1762e-03, 7.9450e-03, 8.3747e-03,  ..., 9.9967e-01,
          8.0448e-03, 8.0303e-03],
         [9.7547e-01, 9.7617e-01, 9.7488e-01,  ..., 1.0982e-04,
          9.7587e-01, 9.7591e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 308:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:11,898 [Process: 0] Synchronize training processes
2024-08-16 15:58:11,898 [Process: 0] Evaluating...
2024-08-16 15:58:11,900 [Process: 0] EPOCH 308:
2024-08-16 15:58:11,902 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0086, 0.0086,  ..., 0.0087, 0.0086, 0.0085],
         [0.0085, 0.0086, 0.0086,  ..., 0.0087, 0.0086, 0.0085],
         [0.0085, 0.0086, 0.0086,  ..., 0.0087, 0.0086, 0.0085],
         [0.9744, 0.9743, 0.9741,  ..., 0.9740, 0.9741, 0.9746]],
        [[0.0085, 0.0085, 0.0084,  ..., 0.0080, 0.0082, 0.0081],
         [0.0085, 0.0085, 0.0084,  ..., 0.0080, 0.0082, 0.0081],
         [0.0085, 0.0085, 0.0084,  ..., 0.0080, 0.0082, 0.0081],
         [0.9746, 0.9744, 0.9748,  ..., 0.9759, 0.9754, 0.9758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8461e-03, 5.2481e-03, 5.6312e-03,  ..., 5.7667e-03,
          5.6875e-03, 5.4578e-03],
         [5.8461e-03, 5.2481e-03, 5.6312e-03,  ..., 5.7667e-03,
          5.6875e-03, 5.4578e-03],
         [5.8461e-03, 5.2481e-03, 5.6312e-03,  ..., 5.7667e-03,
          5.6875e-03, 5.4578e-03],
         [9.8246e-01, 9.8426e-01, 9.8311e-01,  ..., 9.8270e-01,
          9.8294e-01, 9.8363e-01]],
        [[4.9139e-03, 5.4771e-03, 5.1328e-03,  ..., 4.8053e-05,
          9.8384e-01, 5.3292e-03],
         [4.9139e-03, 5.4771e-03, 5.1328e-03,  ..., 4.8053e-05,
          5.3789e-03, 5.3292e-03],
         [4.9139e-03, 5.4771e-03, 5.1328e-03,  ..., 9.9986e-01,
          5.4069e-03, 5.3292e-03],
         [9.8526e-01, 9.8357e-01, 9.8460e-01,  ..., 4.8053e-05,
          5.3789e-03, 9.8401e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 309:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:14,079 [Process: 0] Synchronize training processes
2024-08-16 15:58:14,080 [Process: 0] Evaluating...
2024-08-16 15:58:14,081 [Process: 0] EPOCH 309:
2024-08-16 15:58:14,084 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0111, 0.0109, 0.0110,  ..., 0.0109, 0.0109, 0.0110],
         [0.0111, 0.0109, 0.0110,  ..., 0.0109, 0.0109, 0.0110],
         [0.0111, 0.0109, 0.0110,  ..., 0.0109, 0.0109, 0.0110],
         [0.9666, 0.9672, 0.9669,  ..., 0.9674, 0.9672, 0.9671]],
        [[0.0108, 0.0106, 0.0106,  ..., 0.0106, 0.0106, 0.0107],
         [0.0108, 0.0106, 0.0106,  ..., 0.0106, 0.0106, 0.0107],
         [0.0108, 0.0106, 0.0106,  ..., 0.0106, 0.0106, 0.0107],
         [0.9676, 0.9681, 0.9682,  ..., 0.9681, 0.9682, 0.9680]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6178e-03, 7.6856e-03, 7.7895e-03,  ..., 7.6928e-03,
          7.8776e-03, 7.7467e-03],
         [7.6178e-03, 7.6856e-03, 7.7895e-03,  ..., 7.6928e-03,
          7.8776e-03, 7.7467e-03],
         [7.6178e-03, 7.6856e-03, 7.7895e-03,  ..., 7.6928e-03,
          7.8776e-03, 7.7467e-03],
         [9.7715e-01, 9.7694e-01, 9.7663e-01,  ..., 9.7692e-01,
          9.7637e-01, 9.7676e-01]],
        [[7.6790e-03, 7.7184e-03, 7.5121e-03,  ..., 6.2732e-04,
          7.4523e-03, 7.8461e-03],
         [7.6790e-03, 7.7184e-03, 7.5121e-03,  ..., 6.2732e-04,
          7.4523e-03, 7.8461e-03],
         [7.6790e-03, 7.7184e-03, 7.5121e-03,  ..., 9.9812e-01,
          7.4523e-03, 7.8461e-03],
         [9.7696e-01, 9.7684e-01, 9.7746e-01,  ..., 6.2732e-04,
          9.7764e-01, 9.7646e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 310:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:16,176 [Process: 0] Synchronize training processes
2024-08-16 15:58:16,177 [Process: 0] Evaluating...
2024-08-16 15:58:16,179 [Process: 0] EPOCH 310:
2024-08-16 15:58:16,181 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0108, 0.0109, 0.0108,  ..., 0.0109, 0.0108, 0.0109],
         [0.0108, 0.0109, 0.0108,  ..., 0.0109, 0.0108, 0.0109],
         [0.0108, 0.0109, 0.0108,  ..., 0.0109, 0.0108, 0.0109],
         [0.9676, 0.9674, 0.9677,  ..., 0.9674, 0.9675, 0.9673]],
        [[0.0104, 0.0105, 0.0103,  ..., 0.0107, 0.0104, 0.0105],
         [0.0104, 0.0105, 0.0103,  ..., 0.0107, 0.0104, 0.0105],
         [0.0104, 0.0105, 0.0103,  ..., 0.0107, 0.0104, 0.0105],
         [0.9687, 0.9685, 0.9692,  ..., 0.9679, 0.9688, 0.9685]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.3975e-03, 8.4282e-03, 8.4223e-03,  ..., 8.2016e-03,
          8.1633e-03, 8.5282e-03],
         [8.3975e-03, 8.4282e-03, 8.4223e-03,  ..., 8.2016e-03,
          8.1633e-03, 8.5282e-03],
         [8.3975e-03, 8.4282e-03, 8.4223e-03,  ..., 8.2016e-03,
          8.1633e-03, 8.5282e-03],
         [9.7481e-01, 9.7472e-01, 9.7473e-01,  ..., 9.7540e-01,
          9.7551e-01, 9.7442e-01]],
        [[8.2446e-03, 8.4872e-03, 8.2875e-03,  ..., 1.9261e-05,
          8.4393e-03, 8.3259e-03],
         [8.2446e-03, 8.4872e-03, 8.2875e-03,  ..., 1.9261e-05,
          8.4393e-03, 8.3259e-03],
         [8.2446e-03, 8.4872e-03, 8.2875e-03,  ..., 9.9994e-01,
          8.4393e-03, 8.3259e-03],
         [9.7527e-01, 9.7454e-01, 9.7514e-01,  ..., 1.9261e-05,
          9.7468e-01, 9.7502e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:18,285 [Process: 0] Synchronize training processes
2024-08-16 15:58:18,285 [Process: 0] Evaluating...
2024-08-16 15:58:18,287 [Process: 0] EPOCH 311:
2024-08-16 15:58:18,289 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 311:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0107, 0.0108, 0.0108,  ..., 0.0106, 0.0107, 0.0107],
         [0.0107, 0.0108, 0.0108,  ..., 0.0106, 0.0107, 0.0107],
         [0.0107, 0.0108, 0.0108,  ..., 0.0106, 0.0107, 0.0107],
         [0.9678, 0.9677, 0.9677,  ..., 0.9683, 0.9680, 0.9678]],
        [[0.0104, 0.0106, 0.0107,  ..., 0.0104, 0.0107, 0.0107],
         [0.0104, 0.0106, 0.0107,  ..., 0.0104, 0.0107, 0.0107],
         [0.0104, 0.0106, 0.0107,  ..., 0.0104, 0.0107, 0.0107],
         [0.9687, 0.9682, 0.9678,  ..., 0.9687, 0.9679, 0.9678]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:58:20,386 [Process: 0] Synchronize training processes
2024-08-16 15:58:20,386 [Process: 0] Evaluating...
2024-08-16 15:58:20,395 [Process: 0] EPOCH 312:
2024-08-16 15:58:20,397 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0082, 0.0083,  ..., 0.0082, 0.0085, 0.0083],
         [0.0083, 0.0082, 0.0083,  ..., 0.0082, 0.0085, 0.0083],
         [0.0083, 0.0082, 0.0083,  ..., 0.0082, 0.0085, 0.0083],
         [0.9752, 0.9754, 0.9752,  ..., 0.9755, 0.9744, 0.9751]],
        [[0.0083, 0.0080, 0.0083,  ..., 0.0010, 0.0083, 0.0083],
         [0.0083, 0.0080, 0.0083,  ..., 0.0010, 0.0083, 0.0083],
         [0.0083, 0.0080, 0.0083,  ..., 0.9969, 0.0083, 0.0083],
         [0.9751, 0.9759, 0.9750,  ..., 0.0010, 0.9750, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 312:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0106, 0.0106,  ..., 0.0107, 0.0106, 0.0106],
         [0.0105, 0.0106, 0.0106,  ..., 0.0107, 0.0106, 0.0106],
         [0.0105, 0.0106, 0.0106,  ..., 0.0107, 0.0106, 0.0106],
         [0.9686, 0.9682, 0.9682,  ..., 0.9679, 0.9682, 0.9681]],
        [[0.0103, 0.0105, 0.0106,  ..., 0.0104, 0.0107, 0.0103],
         [0.0103, 0.0105, 0.0106,  ..., 0.0104, 0.0107, 0.0103],
         [0.0103, 0.0105, 0.0106,  ..., 0.0104, 0.0107, 0.0103],
         [0.9691, 0.9684, 0.9682,  ..., 0.9687, 0.9680, 0.9691]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:22,495 [Process: 0] Synchronize training processes
2024-08-16 15:58:22,496 [Process: 0] Evaluating...
2024-08-16 15:58:22,498 [Process: 0] EPOCH 313:
2024-08-16 15:58:22,500 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.6121e-03, 8.7089e-03, 8.6312e-03,  ..., 8.5017e-03,
          8.8685e-03, 8.5869e-03],
         [8.6121e-03, 8.7089e-03, 8.6312e-03,  ..., 8.5017e-03,
          8.8685e-03, 8.5869e-03],
         [8.6121e-03, 8.7089e-03, 8.6312e-03,  ..., 8.5017e-03,
          8.8685e-03, 8.5869e-03],
         [9.7416e-01, 9.7387e-01, 9.7411e-01,  ..., 9.7449e-01,
          9.7339e-01, 9.7424e-01]],
        [[8.5837e-03, 8.7580e-03, 8.5941e-03,  ..., 3.1228e-04,
          8.5852e-03, 8.6166e-03],
         [8.5837e-03, 8.7580e-03, 8.5941e-03,  ..., 3.1228e-04,
          8.5852e-03, 8.6166e-03],
         [8.5837e-03, 8.7580e-03, 8.5941e-03,  ..., 9.9906e-01,
          8.5852e-03, 8.6166e-03],
         [9.7425e-01, 9.7373e-01, 9.7422e-01,  ..., 3.1228e-04,
          9.7424e-01, 9.7415e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 313:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0105, 0.0106, 0.0105,  ..., 0.0106, 0.0106, 0.0105],
         [0.0105, 0.0106, 0.0105,  ..., 0.0106, 0.0106, 0.0105],
         [0.0105, 0.0106, 0.0105,  ..., 0.0106, 0.0106, 0.0105],
         [0.9685, 0.9682, 0.9684,  ..., 0.9683, 0.9681, 0.9685]],
        [[0.0105, 0.0104, 0.0104,  ..., 0.0106, 0.0104, 0.0103],
         [0.0105, 0.0104, 0.0104,  ..., 0.0106, 0.0104, 0.0103],
         [0.0105, 0.0104, 0.0104,  ..., 0.0106, 0.0104, 0.0103],
         [0.9685, 0.9689, 0.9688,  ..., 0.9681, 0.9688, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:24,575 [Process: 0] Synchronize training processes
2024-08-16 15:58:24,575 [Process: 0] Evaluating...
2024-08-16 15:58:24,577 [Process: 0] EPOCH 314:
2024-08-16 15:58:24,579 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0087, 0.0083],
         [0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0087, 0.0083],
         [0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0087, 0.0083],
         [0.9745, 0.9744, 0.9745,  ..., 0.9746, 0.9740, 0.9750]],
        [[0.0085, 0.0083, 0.0084,  ..., 0.0010, 0.0083, 0.0083],
         [0.0085, 0.0083, 0.0084,  ..., 0.0010, 0.0083, 0.0083],
         [0.0085, 0.0083, 0.0084,  ..., 0.9969, 0.0083, 0.0083],
         [0.9746, 0.9752, 0.9747,  ..., 0.0010, 0.9751, 0.9750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 314:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0103, 0.0103, 0.0103,  ..., 0.0103, 0.0103, 0.0105],
         [0.0103, 0.0103, 0.0103,  ..., 0.0103, 0.0103, 0.0105],
         [0.0103, 0.0103, 0.0103,  ..., 0.0103, 0.0103, 0.0105],
         [0.9690, 0.9690, 0.9690,  ..., 0.9691, 0.9691, 0.9686]],
        [[0.0102, 0.0103, 0.0103,  ..., 0.0104, 0.0102, 0.0102],
         [0.0102, 0.0103, 0.0103,  ..., 0.0104, 0.0102, 0.0102],
         [0.0102, 0.0103, 0.0103,  ..., 0.0104, 0.0102, 0.0102],
         [0.9695, 0.9691, 0.9690,  ..., 0.9689, 0.9693, 0.9693]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:26,679 [Process: 0] Synchronize training processes
2024-08-16 15:58:26,680 [Process: 0] Evaluating...
2024-08-16 15:58:26,682 [Process: 0] EPOCH 315:
2024-08-16 15:58:26,684 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[8.2263e-03, 8.0722e-03, 8.1577e-03,  ..., 8.0241e-03,
          8.3621e-03, 8.3160e-03],
         [8.2263e-03, 8.0722e-03, 8.1577e-03,  ..., 8.0241e-03,
          8.3621e-03, 8.3160e-03],
         [8.2263e-03, 8.0722e-03, 8.1577e-03,  ..., 8.0241e-03,
          8.3621e-03, 8.3160e-03],
         [9.7532e-01, 9.7578e-01, 9.7553e-01,  ..., 9.7593e-01,
          9.7491e-01, 9.7505e-01]],
        [[8.1991e-03, 8.2040e-03, 8.2748e-03,  ..., 2.6176e-04,
          8.2092e-03, 8.0730e-03],
         [8.1991e-03, 8.2040e-03, 8.2748e-03,  ..., 2.6176e-04,
          8.2092e-03, 8.0730e-03],
         [8.1991e-03, 8.2040e-03, 8.2748e-03,  ..., 9.9921e-01,
          8.2092e-03, 8.0730e-03],
         [9.7540e-01, 9.7539e-01, 9.7518e-01,  ..., 2.6176e-04,
          9.7537e-01, 9.7578e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 315:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0100, 0.0100,  ..., 0.0100, 0.0100, 0.0100],
         [0.0101, 0.0100, 0.0100,  ..., 0.0100, 0.0100, 0.0100],
         [0.0101, 0.0100, 0.0100,  ..., 0.0100, 0.0100, 0.0100],
         [0.9698, 0.9701, 0.9700,  ..., 0.9699, 0.9700, 0.9700]],
        [[0.0098, 0.0099, 0.0099,  ..., 0.0100, 0.0098, 0.0099],
         [0.0098, 0.0099, 0.0099,  ..., 0.0100, 0.0098, 0.0099],
         [0.0098, 0.0099, 0.0099,  ..., 0.0100, 0.0098, 0.0099],
         [0.9707, 0.9702, 0.9704,  ..., 0.9701, 0.9707, 0.9704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:28,771 [Process: 0] Synchronize training processes
2024-08-16 15:58:28,772 [Process: 0] Evaluating...
2024-08-16 15:58:28,774 [Process: 0] EPOCH 316:
2024-08-16 15:58:28,776 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0082, 0.0081,  ..., 0.0082, 0.0082, 0.0082],
         [0.0081, 0.0082, 0.0081,  ..., 0.0082, 0.0082, 0.0082],
         [0.0081, 0.0082, 0.0081,  ..., 0.0082, 0.0082, 0.0082],
         [0.9757, 0.9754, 0.9758,  ..., 0.9754, 0.9753, 0.9755]],
        [[0.0078, 0.0083, 0.0078,  ..., 0.0021, 0.0079, 0.0077],
         [0.0078, 0.0083, 0.0078,  ..., 0.0021, 0.0079, 0.0077],
         [0.0078, 0.0083, 0.0078,  ..., 0.9937, 0.0079, 0.0077],
         [0.9765, 0.9751, 0.9765,  ..., 0.0021, 0.9764, 0.9768]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 316:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0099, 0.0100],
         [0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0099, 0.0100],
         [0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0099, 0.0100],
         [0.9704, 0.9704, 0.9702,  ..., 0.9707, 0.9703, 0.9700]],
        [[0.0096, 0.0097, 0.0098,  ..., 0.0096, 0.0096, 0.0099],
         [0.0096, 0.0097, 0.0098,  ..., 0.0096, 0.0096, 0.0099],
         [0.0096, 0.0097, 0.0098,  ..., 0.0096, 0.0096, 0.0099],
         [0.9712, 0.9710, 0.9707,  ..., 0.9712, 0.9712, 0.9704]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:30,872 [Process: 0] Synchronize training processes
2024-08-16 15:58:30,872 [Process: 0] Evaluating...
2024-08-16 15:58:30,874 [Process: 0] EPOCH 317:
2024-08-16 15:58:30,877 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8365e-03, 8.0093e-03, 8.2231e-03,  ..., 7.8621e-03,
          8.1762e-03, 8.2507e-03],
         [7.8365e-03, 8.0093e-03, 8.2231e-03,  ..., 7.8621e-03,
          8.1762e-03, 8.2507e-03],
         [7.8365e-03, 8.0093e-03, 8.2231e-03,  ..., 7.8621e-03,
          8.1762e-03, 8.2507e-03],
         [9.7649e-01, 9.7597e-01, 9.7533e-01,  ..., 9.7641e-01,
          9.7547e-01, 9.7525e-01]],
        [[7.9797e-03, 7.8300e-03, 7.8662e-03,  ..., 5.5383e-04,
          7.7045e-03, 7.7329e-03],
         [7.9797e-03, 7.8300e-03, 7.8662e-03,  ..., 5.5383e-04,
          7.7045e-03, 7.7329e-03],
         [7.9797e-03, 7.8300e-03, 7.8662e-03,  ..., 9.9834e-01,
          7.7045e-03, 7.7329e-03],
         [9.7606e-01, 9.7651e-01, 9.7640e-01,  ..., 5.5383e-04,
          9.7689e-01, 9.7680e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 317:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0100, 0.0100,  ..., 0.0101, 0.0101, 0.0100],
         [0.0100, 0.0100, 0.0100,  ..., 0.0101, 0.0101, 0.0100],
         [0.0100, 0.0100, 0.0100,  ..., 0.0101, 0.0101, 0.0100],
         [0.9699, 0.9699, 0.9700,  ..., 0.9698, 0.9696, 0.9700]],
        [[0.0099, 0.0100, 0.0099,  ..., 0.0100, 0.0100, 0.0099],
         [0.0099, 0.0100, 0.0099,  ..., 0.0100, 0.0100, 0.0099],
         [0.0099, 0.0100, 0.0099,  ..., 0.0100, 0.0100, 0.0099],
         [0.9703, 0.9700, 0.9702,  ..., 0.9700, 0.9700, 0.9703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:32,954 [Process: 0] Synchronize training processes
2024-08-16 15:58:32,954 [Process: 0] Evaluating...
2024-08-16 15:58:32,956 [Process: 0] EPOCH 318:
2024-08-16 15:58:32,959 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7038e-03, 7.8015e-03, 7.7577e-03,  ..., 7.8871e-03,
          7.8341e-03, 7.9244e-03],
         [7.7038e-03, 7.8015e-03, 7.7577e-03,  ..., 7.8871e-03,
          7.8341e-03, 7.9244e-03],
         [7.7038e-03, 7.8015e-03, 7.7577e-03,  ..., 7.8871e-03,
          7.8341e-03, 7.9244e-03],
         [9.7689e-01, 9.7660e-01, 9.7673e-01,  ..., 9.7634e-01,
          9.7650e-01, 9.7623e-01]],
        [[7.8908e-03, 7.7801e-03, 7.8484e-03,  ..., 9.4617e-04,
          7.7813e-03, 7.8081e-03],
         [7.8908e-03, 7.7801e-03, 7.8484e-03,  ..., 9.4617e-04,
          7.7813e-03, 7.8081e-03],
         [7.8908e-03, 7.7801e-03, 7.8484e-03,  ..., 9.9716e-01,
          7.7813e-03, 7.8081e-03],
         [9.7633e-01, 9.7666e-01, 9.7645e-01,  ..., 9.4617e-04,
          9.7666e-01, 9.7658e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 318:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0104, 0.0103,  ..., 0.0103, 0.0104, 0.0104],
         [0.0104, 0.0104, 0.0103,  ..., 0.0103, 0.0104, 0.0104],
         [0.0104, 0.0104, 0.0103,  ..., 0.0103, 0.0104, 0.0104],
         [0.9687, 0.9689, 0.9690,  ..., 0.9691, 0.9687, 0.9689]],
        [[0.0102, 0.0102, 0.0102,  ..., 0.0102, 0.0101, 0.0102],
         [0.0102, 0.0102, 0.0102,  ..., 0.0102, 0.0101, 0.0102],
         [0.0102, 0.0102, 0.0102,  ..., 0.0102, 0.0101, 0.0102],
         [0.9695, 0.9694, 0.9694,  ..., 0.9695, 0.9697, 0.9694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:35,056 [Process: 0] Synchronize training processes
2024-08-16 15:58:35,056 [Process: 0] Evaluating...
2024-08-16 15:58:35,058 [Process: 0] EPOCH 319:
2024-08-16 15:58:35,060 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9986e-03, 8.0645e-03, 7.9190e-03,  ..., 7.8453e-03,
          7.6783e-03, 8.0204e-03],
         [7.9986e-03, 8.0645e-03, 7.9190e-03,  ..., 7.8453e-03,
          7.6783e-03, 8.0204e-03],
         [7.9986e-03, 8.0645e-03, 7.9190e-03,  ..., 7.8453e-03,
          7.6783e-03, 8.0204e-03],
         [9.7600e-01, 9.7581e-01, 9.7624e-01,  ..., 9.7646e-01,
          9.7697e-01, 9.7594e-01]],
        [[7.7442e-03, 7.7772e-03, 7.9427e-03,  ..., 4.8304e-04,
          7.8452e-03, 7.7862e-03],
         [7.7442e-03, 7.7772e-03, 7.9427e-03,  ..., 4.8304e-04,
          7.8452e-03, 7.7862e-03],
         [7.7442e-03, 7.7772e-03, 7.9427e-03,  ..., 9.9855e-01,
          7.8452e-03, 7.7862e-03],
         [9.7677e-01, 9.7667e-01, 9.7617e-01,  ..., 4.8304e-04,
          9.7646e-01, 9.7664e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 319:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0105, 0.0106,  ..., 0.0105, 0.0104, 0.0105],
         [0.0104, 0.0105, 0.0106,  ..., 0.0105, 0.0104, 0.0105],
         [0.0104, 0.0105, 0.0106,  ..., 0.0105, 0.0104, 0.0105],
         [0.9687, 0.9685, 0.9681,  ..., 0.9686, 0.9688, 0.9686]],
        [[0.0103, 0.0104, 0.0104,  ..., 0.0104, 0.0103, 0.0103],
         [0.0103, 0.0104, 0.0104,  ..., 0.0104, 0.0103, 0.0103],
         [0.0103, 0.0104, 0.0104,  ..., 0.0104, 0.0103, 0.0103],
         [0.9691, 0.9689, 0.9688,  ..., 0.9689, 0.9692, 0.9692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:37,148 [Process: 0] Synchronize training processes
2024-08-16 15:58:37,149 [Process: 0] Evaluating...
2024-08-16 15:58:37,152 [Process: 0] EPOCH 320:
2024-08-16 15:58:37,154 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.7301e-03, 7.7595e-03, 7.7262e-03,  ..., 7.7356e-03,
          8.0205e-03, 7.6957e-03],
         [7.7301e-03, 7.7595e-03, 7.7262e-03,  ..., 7.7356e-03,
          8.0205e-03, 7.6957e-03],
         [7.7301e-03, 7.7595e-03, 7.7262e-03,  ..., 7.7356e-03,
          8.0205e-03, 7.6957e-03],
         [9.7681e-01, 9.7672e-01, 9.7682e-01,  ..., 9.7679e-01,
          9.7594e-01, 9.7691e-01]],
        [[7.8630e-03, 8.0745e-03, 7.7071e-03,  ..., 4.4124e-04,
          8.1134e-03, 7.6404e-03],
         [7.8630e-03, 8.0745e-03, 7.7071e-03,  ..., 4.4124e-04,
          8.1134e-03, 7.6404e-03],
         [7.8630e-03, 8.0745e-03, 7.7071e-03,  ..., 9.9868e-01,
          8.1134e-03, 7.6404e-03],
         [9.7641e-01, 9.7578e-01, 9.7688e-01,  ..., 4.4124e-04,
          9.7566e-01, 9.7708e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 320:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0104, 0.0104, 0.0103,  ..., 0.0103, 0.0104, 0.0104],
         [0.0104, 0.0104, 0.0103,  ..., 0.0103, 0.0104, 0.0104],
         [0.0104, 0.0104, 0.0103,  ..., 0.0103, 0.0104, 0.0104],
         [0.9689, 0.9688, 0.9690,  ..., 0.9691, 0.9688, 0.9689]],
        [[0.0102, 0.0102, 0.0102,  ..., 0.0102, 0.0102, 0.0102],
         [0.0102, 0.0102, 0.0102,  ..., 0.0102, 0.0102, 0.0102],
         [0.0102, 0.0102, 0.0102,  ..., 0.0102, 0.0102, 0.0102],
         [0.9694, 0.9693, 0.9693,  ..., 0.9694, 0.9693, 0.9694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:39,238 [Process: 0] Synchronize training processes
2024-08-16 15:58:39,239 [Process: 0] Evaluating...
2024-08-16 15:58:39,241 [Process: 0] EPOCH 321:
2024-08-16 15:58:39,243 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8311e-03, 7.9637e-03, 7.8727e-03,  ..., 7.6016e-03,
          8.2137e-03, 7.8477e-03],
         [7.8311e-03, 7.9637e-03, 7.8727e-03,  ..., 7.6016e-03,
          8.2137e-03, 7.8477e-03],
         [7.8311e-03, 7.9637e-03, 7.8727e-03,  ..., 7.6016e-03,
          8.2137e-03, 7.8477e-03],
         [9.7651e-01, 9.7611e-01, 9.7638e-01,  ..., 9.7720e-01,
          9.7536e-01, 9.7646e-01]],
        [[7.6070e-03, 7.8040e-03, 7.7862e-03,  ..., 3.5642e-04,
          7.7364e-03, 7.7702e-03],
         [7.6070e-03, 7.8040e-03, 7.7862e-03,  ..., 3.5642e-04,
          7.7364e-03, 7.7702e-03],
         [7.6070e-03, 7.8040e-03, 7.7862e-03,  ..., 9.9893e-01,
          7.7364e-03, 7.7702e-03],
         [9.7718e-01, 9.7659e-01, 9.7664e-01,  ..., 3.5642e-04,
          9.7679e-01, 9.7669e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 321:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0102, 0.0101,  ..., 0.0104, 0.0103, 0.0100],
         [0.0100, 0.0102, 0.0101,  ..., 0.0104, 0.0103, 0.0100],
         [0.0100, 0.0102, 0.0101,  ..., 0.0104, 0.0103, 0.0100],
         [0.9701, 0.9695, 0.9697,  ..., 0.9689, 0.9692, 0.9699]],
        [[0.0100, 0.0099, 0.0100,  ..., 0.0099, 0.0099, 0.0100],
         [0.0100, 0.0099, 0.0100,  ..., 0.0099, 0.0099, 0.0100],
         [0.0100, 0.0099, 0.0100,  ..., 0.0099, 0.0099, 0.0100],
         [0.9701, 0.9704, 0.9700,  ..., 0.9704, 0.9702, 0.9699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6476e-03, 7.9586e-03, 7.5697e-03,  ..., 7.4478e-03,
          7.7787e-03, 7.8008e-03],
         [7.6476e-03, 7.9586e-03, 7.5697e-03,  ..., 7.4478e-03,
          7.7787e-03, 7.8008e-03],
         [7.6476e-03, 7.9586e-03, 7.5697e-03,  ..., 7.4478e-03,
          7.7787e-03, 7.8008e-03],
         [9.7706e-01, 9.7612e-01, 9.7729e-01,  ..., 9.7766e-01,
          9.7666e-01, 9.7660e-01]],
        [[7.7395e-03, 7.7215e-03, 7.5866e-03,  ..., 3.9813e-04,
          7.5872e-03, 7.4652e-03],
         [7.7395e-03, 7.7215e-03, 7.5866e-03,  ..., 3.9813e-04,
          7.5872e-03, 7.4652e-03],
         [7.7395e-03, 7.7215e-03, 7.5866e-03,  ..., 9.9881e-01,
          7.5872e-03, 7.4652e-03],
         [9.7678e-01, 9.7684e-01, 9.7724e-01,  ..., 3.9813e-04,
          9.7724e-01, 9.7760e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 322:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0098, 0.0101,  ..., 0.0101, 0.0100, 0.0101],
         [0.0098, 0.0098, 0.0101,  ..., 0.0101, 0.0100, 0.0101],
         [0.0098, 0.0098, 0.0101,  ..., 0.0101, 0.0100, 0.0101],
         [0.9706, 0.9707, 0.9696,  ..., 0.9696, 0.9701, 0.9696]],
        [[0.0096, 0.0100, 0.0100,  ..., 0.0098, 0.0097, 0.0099],
         [0.0096, 0.0100, 0.0100,  ..., 0.0098, 0.0097, 0.0099],
         [0.0096, 0.0100, 0.0100,  ..., 0.0098, 0.0097, 0.0099],
         [0.9713, 0.9700, 0.9700,  ..., 0.9705, 0.9709, 0.9703]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:41,327 [Process: 0] Synchronize training processes
2024-08-16 15:58:41,327 [Process: 0] Evaluating...
2024-08-16 15:58:41,335 [Process: 0] EPOCH 322:
2024-08-16 15:58:41,337 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.8853e-03, 7.9488e-03, 7.5394e-03,  ..., 7.5227e-03,
          7.8824e-03, 7.9164e-03],
         [7.8853e-03, 7.9488e-03, 7.5394e-03,  ..., 7.5227e-03,
          7.8824e-03, 7.9164e-03],
         [7.8853e-03, 7.9488e-03, 7.5394e-03,  ..., 7.5227e-03,
          7.8824e-03, 7.9164e-03],
         [9.7634e-01, 9.7615e-01, 9.7738e-01,  ..., 9.7743e-01,
          9.7635e-01, 9.7625e-01]],
        [[7.5464e-03, 7.4222e-03, 7.5316e-03,  ..., 1.1412e-04,
          7.8192e-03, 7.4044e-03],
         [7.5464e-03, 7.4222e-03, 7.5316e-03,  ..., 1.1412e-04,
          7.8192e-03, 7.4044e-03],
         [7.5464e-03, 7.4222e-03, 7.5316e-03,  ..., 9.9966e-01,
          7.8192e-03, 7.4044e-03],
         [9.7736e-01, 9.7773e-01, 9.7741e-01,  ..., 1.1412e-04,
          9.7654e-01, 9.7779e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 323:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:58:43,448 [Process: 0] Synchronize training processes
2024-08-16 15:58:43,449 [Process: 0] Evaluating...
2024-08-16 15:58:43,451 [Process: 0] EPOCH 323:
2024-08-16 15:58:43,453 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0101, 0.0101,  ..., 0.0099, 0.0099, 0.0101],
         [0.0100, 0.0101, 0.0101,  ..., 0.0099, 0.0099, 0.0101],
         [0.0100, 0.0101, 0.0101,  ..., 0.0099, 0.0099, 0.0101],
         [0.9701, 0.9698, 0.9698,  ..., 0.9704, 0.9704, 0.9696]],
        [[0.0097, 0.0097, 0.0098,  ..., 0.0098, 0.0099, 0.0099],
         [0.0097, 0.0097, 0.0098,  ..., 0.0098, 0.0099, 0.0099],
         [0.0097, 0.0097, 0.0098,  ..., 0.0098, 0.0099, 0.0099],
         [0.9710, 0.9710, 0.9706,  ..., 0.9706, 0.9703, 0.9702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.9213e-03, 7.6727e-03, 7.4455e-03,  ..., 7.8107e-03,
          7.8129e-03, 7.6705e-03],
         [7.9213e-03, 7.6727e-03, 7.4455e-03,  ..., 7.8107e-03,
          7.8129e-03, 7.6705e-03],
         [7.9213e-03, 7.6727e-03, 7.4455e-03,  ..., 7.8107e-03,
          7.8129e-03, 7.6705e-03],
         [9.7624e-01, 9.7698e-01, 9.7766e-01,  ..., 9.7657e-01,
          9.7656e-01, 9.7699e-01]],
        [[7.2381e-03, 7.3229e-03, 7.4895e-03,  ..., 1.2241e-04,
          7.5543e-03, 7.6011e-03],
         [7.2381e-03, 7.3229e-03, 7.4895e-03,  ..., 1.2241e-04,
          7.5543e-03, 7.6011e-03],
         [7.2381e-03, 7.3229e-03, 7.4895e-03,  ..., 9.9963e-01,
          7.5543e-03, 7.6011e-03],
         [9.7829e-01, 9.7803e-01, 9.7753e-01,  ..., 1.2241e-04,
          9.7734e-01, 9.7720e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 324:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:45,602 [Process: 0] Synchronize training processes
2024-08-16 15:58:45,602 [Process: 0] Evaluating...
2024-08-16 15:58:45,604 [Process: 0] EPOCH 324:
2024-08-16 15:58:45,606 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0099, 0.0099,  ..., 0.0101, 0.0101, 0.0100],
         [0.0099, 0.0099, 0.0099,  ..., 0.0101, 0.0101, 0.0100],
         [0.0099, 0.0099, 0.0099,  ..., 0.0101, 0.0101, 0.0100],
         [0.9702, 0.9704, 0.9702,  ..., 0.9698, 0.9698, 0.9700]],
        [[0.0098, 0.0096, 0.0098,  ..., 0.0096, 0.0096, 0.0096],
         [0.0098, 0.0096, 0.0098,  ..., 0.0096, 0.0096, 0.0096],
         [0.0098, 0.0096, 0.0098,  ..., 0.0096, 0.0096, 0.0096],
         [0.9707, 0.9711, 0.9705,  ..., 0.9711, 0.9711, 0.9712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4781e-03, 7.5481e-03, 7.7233e-03,  ..., 7.2446e-03,
          7.5711e-03, 7.7452e-03],
         [7.4781e-03, 7.5481e-03, 7.7233e-03,  ..., 7.2446e-03,
          7.5711e-03, 7.7452e-03],
         [7.4781e-03, 7.5481e-03, 7.7233e-03,  ..., 7.2446e-03,
          7.5711e-03, 7.7452e-03],
         [9.7757e-01, 9.7736e-01, 9.7683e-01,  ..., 9.7827e-01,
          9.7729e-01, 9.7676e-01]],
        [[7.3173e-03, 7.5864e-03, 7.4116e-03,  ..., 6.6920e-04,
          7.5421e-03, 7.7865e-03],
         [7.3173e-03, 7.5864e-03, 7.4116e-03,  ..., 6.6920e-04,
          7.5421e-03, 7.7865e-03],
         [7.3173e-03, 7.5864e-03, 7.4116e-03,  ..., 9.9799e-01,
          7.5421e-03, 7.7865e-03],
         [9.7805e-01, 9.7724e-01, 9.7777e-01,  ..., 6.6920e-04,
          9.7737e-01, 9.7664e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 325:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:47,807 [Process: 0] Synchronize training processes
2024-08-16 15:58:47,808 [Process: 0] Evaluating...
2024-08-16 15:58:47,810 [Process: 0] EPOCH 325:
2024-08-16 15:58:47,812 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0097, 0.0097,  ..., 0.0099, 0.0098, 0.0099],
         [0.0099, 0.0097, 0.0097,  ..., 0.0099, 0.0098, 0.0099],
         [0.0099, 0.0097, 0.0097,  ..., 0.0099, 0.0098, 0.0099],
         [0.9703, 0.9710, 0.9709,  ..., 0.9703, 0.9705, 0.9703]],
        [[0.0098, 0.0096, 0.0096,  ..., 0.0096, 0.0096, 0.0095],
         [0.0098, 0.0096, 0.0096,  ..., 0.0096, 0.0096, 0.0095],
         [0.0098, 0.0096, 0.0096,  ..., 0.0096, 0.0096, 0.0095],
         [0.9707, 0.9713, 0.9713,  ..., 0.9712, 0.9711, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0077, 0.0077,  ..., 0.0073, 0.0075, 0.0075],
         [0.0074, 0.0077, 0.0077,  ..., 0.0073, 0.0075, 0.0075],
         [0.0074, 0.0077, 0.0077,  ..., 0.0073, 0.0075, 0.0075],
         [0.9777, 0.9769, 0.9769,  ..., 0.9780, 0.9774, 0.9776]],
        [[0.0075, 0.0076, 0.0077,  ..., 0.0012, 0.0075, 0.0073],
         [0.0075, 0.0076, 0.0077,  ..., 0.0012, 0.0075, 0.0073],
         [0.0075, 0.0076, 0.0077,  ..., 0.9963, 0.0075, 0.0073],
         [0.9775, 0.9773, 0.9770,  ..., 0.0012, 0.9776, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 326:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:50,001 [Process: 0] Synchronize training processes
2024-08-16 15:58:50,002 [Process: 0] Evaluating...
2024-08-16 15:58:50,004 [Process: 0] EPOCH 326:
2024-08-16 15:58:50,006 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0099, 0.0097,  ..., 0.0095, 0.0099, 0.0097],
         [0.0098, 0.0099, 0.0097,  ..., 0.0095, 0.0099, 0.0097],
         [0.0098, 0.0099, 0.0097,  ..., 0.0095, 0.0099, 0.0097],
         [0.9705, 0.9703, 0.9708,  ..., 0.9715, 0.9703, 0.9708]],
        [[0.0095, 0.0094, 0.0095,  ..., 0.0095, 0.0095, 0.0095],
         [0.0095, 0.0094, 0.0095,  ..., 0.0095, 0.0095, 0.0095],
         [0.0095, 0.0094, 0.0095,  ..., 0.0095, 0.0095, 0.0095],
         [0.9715, 0.9719, 0.9716,  ..., 0.9714, 0.9714, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6169e-03, 7.3265e-03, 7.3305e-03,  ..., 7.7966e-03,
          7.5874e-03, 7.7370e-03],
         [7.6169e-03, 7.3265e-03, 7.3305e-03,  ..., 7.7966e-03,
          7.5874e-03, 7.7370e-03],
         [7.6169e-03, 7.3265e-03, 7.3305e-03,  ..., 7.7966e-03,
          7.5874e-03, 7.7370e-03],
         [9.7715e-01, 9.7802e-01, 9.7801e-01,  ..., 9.7661e-01,
          9.7724e-01, 9.7679e-01]],
        [[7.4819e-03, 7.4317e-03, 7.2657e-03,  ..., 1.3569e-04,
          7.3623e-03, 7.4779e-03],
         [7.4819e-03, 7.4317e-03, 7.2657e-03,  ..., 1.3569e-04,
          7.3623e-03, 7.4779e-03],
         [7.4819e-03, 7.4317e-03, 7.2657e-03,  ..., 9.9959e-01,
          7.3623e-03, 7.4779e-03],
         [9.7755e-01, 9.7770e-01, 9.7820e-01,  ..., 1.3569e-04,
          9.7791e-01, 9.7757e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 327:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:52,111 [Process: 0] Synchronize training processes
2024-08-16 15:58:52,112 [Process: 0] Evaluating...
2024-08-16 15:58:52,114 [Process: 0] EPOCH 327:
2024-08-16 15:58:52,116 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0100, 0.0098, 0.0100,  ..., 0.0099, 0.0100, 0.0098],
         [0.0100, 0.0098, 0.0100,  ..., 0.0099, 0.0100, 0.0098],
         [0.0100, 0.0098, 0.0100,  ..., 0.0099, 0.0100, 0.0098],
         [0.9700, 0.9706, 0.9701,  ..., 0.9703, 0.9700, 0.9705]],
        [[0.0097, 0.0097, 0.0096,  ..., 0.0098, 0.0096, 0.0096],
         [0.0097, 0.0097, 0.0096,  ..., 0.0098, 0.0096, 0.0096],
         [0.0097, 0.0097, 0.0096,  ..., 0.0098, 0.0096, 0.0096],
         [0.9708, 0.9710, 0.9713,  ..., 0.9706, 0.9712, 0.9712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.6575e-03, 7.4214e-03, 7.3631e-03,  ..., 7.4787e-03,
          7.6736e-03, 7.6930e-03],
         [7.6575e-03, 7.4214e-03, 7.3631e-03,  ..., 7.4787e-03,
          7.6736e-03, 7.6930e-03],
         [7.6575e-03, 7.4214e-03, 7.3631e-03,  ..., 7.4787e-03,
          7.6736e-03, 7.6930e-03],
         [9.7703e-01, 9.7774e-01, 9.7791e-01,  ..., 9.7756e-01,
          9.7698e-01, 9.7692e-01]],
        [[7.5535e-03, 7.3669e-03, 7.6281e-03,  ..., 4.7632e-04,
          7.5410e-03, 7.4104e-03],
         [7.5535e-03, 7.3669e-03, 7.6281e-03,  ..., 4.7632e-04,
          7.5410e-03, 7.4104e-03],
         [7.5535e-03, 7.3669e-03, 7.6281e-03,  ..., 9.9857e-01,
          7.5410e-03, 7.4104e-03],
         [9.7734e-01, 9.7790e-01, 9.7712e-01,  ..., 4.7632e-04,
          9.7738e-01, 9.7777e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 328:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:58:54,248 [Process: 0] Synchronize training processes
2024-08-16 15:58:54,248 [Process: 0] Evaluating...
2024-08-16 15:58:54,250 [Process: 0] EPOCH 328:
2024-08-16 15:58:54,252 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0098, 0.0098],
         [0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0098, 0.0098],
         [0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0098, 0.0098],
         [0.9702, 0.9703, 0.9702,  ..., 0.9705, 0.9706, 0.9706]],
        [[0.0096, 0.0098, 0.0097,  ..., 0.0098, 0.0097, 0.0097],
         [0.0096, 0.0098, 0.0097,  ..., 0.0098, 0.0097, 0.0097],
         [0.0096, 0.0098, 0.0097,  ..., 0.0098, 0.0097, 0.0097],
         [0.9713, 0.9707, 0.9710,  ..., 0.9706, 0.9710, 0.9709]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.5600e-03, 7.3374e-03, 7.5880e-03,  ..., 7.5545e-03,
          7.5107e-03, 7.6784e-03],
         [7.5600e-03, 7.3374e-03, 7.5880e-03,  ..., 7.5545e-03,
          7.5107e-03, 7.6784e-03],
         [7.5600e-03, 7.3374e-03, 7.5880e-03,  ..., 7.5545e-03,
          7.5107e-03, 7.6784e-03],
         [9.7732e-01, 9.7799e-01, 9.7724e-01,  ..., 9.7734e-01,
          9.7747e-01, 9.7696e-01]],
        [[7.5559e-03, 7.4616e-03, 7.3525e-03,  ..., 2.4231e-04,
          7.7015e-03, 7.6945e-03],
         [7.5559e-03, 7.4616e-03, 7.3525e-03,  ..., 2.4231e-04,
          7.7015e-03, 7.6945e-03],
         [7.5559e-03, 7.4616e-03, 7.3525e-03,  ..., 9.9927e-01,
          7.7015e-03, 7.6945e-03],
         [9.7733e-01, 9.7762e-01, 9.7794e-01,  ..., 2.4231e-04,
          9.7690e-01, 9.7692e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
2024-08-16 15:58:56,350 [Process: 0] Synchronize training processes
2024-08-16 15:58:56,350 [Process: 0] Evaluating...
2024-08-16 15:58:56,352 [Process: 0] EPOCH 329:
2024-08-16 15:58:56,354 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] EPOCH 329:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0100, 0.0099,  ..., 0.0099, 0.0099, 0.0100],
         [0.0099, 0.0100, 0.0099,  ..., 0.0099, 0.0099, 0.0100],
         [0.0099, 0.0100, 0.0099,  ..., 0.0099, 0.0099, 0.0100],
         [0.9702, 0.9701, 0.9703,  ..., 0.9702, 0.9702, 0.9700]],
        [[0.0098, 0.0097, 0.0098,  ..., 0.0099, 0.0098, 0.0098],
         [0.0098, 0.0097, 0.0098,  ..., 0.0099, 0.0098, 0.0098],
         [0.0098, 0.0097, 0.0098,  ..., 0.0099, 0.0098, 0.0098],
         [0.9705, 0.9708, 0.9705,  ..., 0.9704, 0.9707, 0.9707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2727e-03, 7.7021e-03, 7.4255e-03,  ..., 7.4731e-03,
          7.6132e-03, 7.5541e-03],
         [7.2727e-03, 7.7021e-03, 7.4255e-03,  ..., 7.4731e-03,
          7.6132e-03, 7.5541e-03],
         [7.2727e-03, 7.7021e-03, 7.4255e-03,  ..., 7.4731e-03,
          7.6132e-03, 7.5541e-03],
         [9.7818e-01, 9.7689e-01, 9.7772e-01,  ..., 9.7758e-01,
          9.7716e-01, 9.7734e-01]],
        [[7.2934e-03, 7.4672e-03, 7.2779e-03,  ..., 2.0511e-04,
          7.4600e-03, 7.6578e-03],
         [7.2934e-03, 7.4672e-03, 7.2779e-03,  ..., 2.0511e-04,
          7.4600e-03, 7.6578e-03],
         [7.2934e-03, 7.4672e-03, 7.2779e-03,  ..., 9.9938e-01,
          7.4600e-03, 7.6578e-03],
         [9.7812e-01, 9.7760e-01, 9.7817e-01,  ..., 2.0511e-04,
          9.7762e-01, 9.7703e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:58:58,466 [Process: 0] Synchronize training processes
2024-08-16 15:58:58,467 [Process: 0] Evaluating...
2024-08-16 15:58:58,469 [Process: 0] EPOCH 330:
2024-08-16 15:58:58,471 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 330:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0099, 0.0100,  ..., 0.0098, 0.0100, 0.0100],
         [0.0097, 0.0099, 0.0100,  ..., 0.0098, 0.0100, 0.0100],
         [0.0097, 0.0099, 0.0100,  ..., 0.0098, 0.0100, 0.0100],
         [0.9709, 0.9703, 0.9701,  ..., 0.9706, 0.9701, 0.9700]],
        [[0.0096, 0.0097, 0.0097,  ..., 0.0098, 0.0097, 0.0098],
         [0.0096, 0.0097, 0.0097,  ..., 0.0098, 0.0097, 0.0098],
         [0.0096, 0.0097, 0.0097,  ..., 0.0098, 0.0097, 0.0098],
         [0.9711, 0.9708, 0.9708,  ..., 0.9707, 0.9710, 0.9706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:59:00,556 [Process: 0] Synchronize training processes
2024-08-16 15:59:00,556 [Process: 0] Evaluating...
2024-08-16 15:59:00,558 [Process: 0] EPOCH 331:
2024-08-16 15:59:00,560 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.2738e-03, 7.4663e-03, 7.1114e-03,  ..., 7.4677e-03,
          7.5034e-03, 7.6344e-03],
         [7.2738e-03, 7.4663e-03, 7.1114e-03,  ..., 7.4677e-03,
          7.5034e-03, 7.6344e-03],
         [7.2738e-03, 7.4663e-03, 7.1114e-03,  ..., 7.4677e-03,
          7.5034e-03, 7.6344e-03],
         [9.7818e-01, 9.7760e-01, 9.7867e-01,  ..., 9.7760e-01,
          9.7749e-01, 9.7710e-01]],
        [[7.2149e-03, 7.3986e-03, 7.1958e-03,  ..., 4.0444e-05,
          7.0975e-03, 7.3621e-03],
         [7.2149e-03, 7.3986e-03, 7.1958e-03,  ..., 4.0444e-05,
          7.0975e-03, 7.3621e-03],
         [7.2149e-03, 7.3986e-03, 7.1958e-03,  ..., 9.9988e-01,
          7.0975e-03, 7.3621e-03],
         [9.7836e-01, 9.7780e-01, 9.7841e-01,  ..., 4.0444e-05,
          9.7871e-01, 9.7791e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 331:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0101, 0.0097, 0.0098,  ..., 0.0097, 0.0100, 0.0099],
         [0.0101, 0.0097, 0.0098,  ..., 0.0097, 0.0100, 0.0099],
         [0.0101, 0.0097, 0.0098,  ..., 0.0097, 0.0100, 0.0099],
         [0.9698, 0.9708, 0.9706,  ..., 0.9708, 0.9700, 0.9703]],
        [[0.0099, 0.0096, 0.0099,  ..., 0.0097, 0.0097, 0.0098],
         [0.0099, 0.0096, 0.0099,  ..., 0.0097, 0.0097, 0.0098],
         [0.0099, 0.0096, 0.0099,  ..., 0.0097, 0.0097, 0.0098],
         [0.9702, 0.9711, 0.9703,  ..., 0.9708, 0.9708, 0.9706]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:02,642 [Process: 0] Synchronize training processes
2024-08-16 15:59:02,642 [Process: 0] Evaluating...
2024-08-16 15:59:02,650 [Process: 0] EPOCH 332:
2024-08-16 15:59:02,652 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3684e-03, 7.4574e-03, 7.4354e-03,  ..., 7.5841e-03,
          7.6988e-03, 7.6012e-03],
         [7.3684e-03, 7.4574e-03, 7.4354e-03,  ..., 7.5841e-03,
          7.6988e-03, 7.6012e-03],
         [7.3684e-03, 7.4574e-03, 7.4354e-03,  ..., 7.5841e-03,
          7.6988e-03, 7.6012e-03],
         [9.7789e-01, 9.7763e-01, 9.7769e-01,  ..., 9.7725e-01,
          9.7690e-01, 9.7720e-01]],
        [[7.6310e-03, 7.3848e-03, 7.5309e-03,  ..., 3.1676e-04,
          7.6776e-03, 7.3721e-03],
         [7.6310e-03, 7.3848e-03, 7.5309e-03,  ..., 3.1676e-04,
          7.6776e-03, 7.3721e-03],
         [7.6310e-03, 7.3848e-03, 7.5309e-03,  ..., 9.9905e-01,
          7.6776e-03, 7.3721e-03],
         [9.7711e-01, 9.7785e-01, 9.7741e-01,  ..., 3.1676e-04,
          9.7697e-01, 9.7788e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 332:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0097, 0.0098,  ..., 0.0097, 0.0096, 0.0098],
         [0.0096, 0.0097, 0.0098,  ..., 0.0097, 0.0096, 0.0098],
         [0.0096, 0.0097, 0.0098,  ..., 0.0097, 0.0096, 0.0098],
         [0.9712, 0.9709, 0.9707,  ..., 0.9708, 0.9712, 0.9707]],
        [[0.0097, 0.0095, 0.0095,  ..., 0.0096, 0.0094, 0.0095],
         [0.0097, 0.0095, 0.0095,  ..., 0.0096, 0.0094, 0.0095],
         [0.0097, 0.0095, 0.0095,  ..., 0.0096, 0.0094, 0.0095],
         [0.9709, 0.9715, 0.9714,  ..., 0.9712, 0.9718, 0.9714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:04,747 [Process: 0] Synchronize training processes
2024-08-16 15:59:04,747 [Process: 0] Evaluating...
2024-08-16 15:59:04,749 [Process: 0] EPOCH 333:
2024-08-16 15:59:04,751 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.4226e-03, 7.2735e-03, 7.3716e-03,  ..., 7.2202e-03,
          7.4806e-03, 7.3573e-03],
         [7.4226e-03, 7.2735e-03, 7.3716e-03,  ..., 7.2202e-03,
          7.4806e-03, 7.3573e-03],
         [7.4226e-03, 7.2735e-03, 7.3716e-03,  ..., 7.2202e-03,
          7.4806e-03, 7.3573e-03],
         [9.7773e-01, 9.7818e-01, 9.7789e-01,  ..., 9.7834e-01,
          9.7756e-01, 9.7793e-01]],
        [[7.2615e-03, 7.1961e-03, 7.4989e-03,  ..., 1.6944e-04,
          7.4096e-03, 7.4207e-03],
         [7.2615e-03, 7.1961e-03, 7.4989e-03,  ..., 1.6944e-04,
          7.4096e-03, 7.4207e-03],
         [7.2615e-03, 7.1961e-03, 7.4989e-03,  ..., 9.9949e-01,
          7.4096e-03, 7.4207e-03],
         [9.7822e-01, 9.7841e-01, 9.7750e-01,  ..., 1.6944e-04,
          9.7777e-01, 9.7774e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 333:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0097, 0.0094,  ..., 0.0095, 0.0098, 0.0095],
         [0.0097, 0.0097, 0.0094,  ..., 0.0095, 0.0098, 0.0095],
         [0.0097, 0.0097, 0.0094,  ..., 0.0095, 0.0098, 0.0095],
         [0.9710, 0.9708, 0.9718,  ..., 0.9716, 0.9706, 0.9716]],
        [[0.0093, 0.0095, 0.0093,  ..., 0.0094, 0.0095, 0.0093],
         [0.0093, 0.0095, 0.0093,  ..., 0.0094, 0.0095, 0.0093],
         [0.0093, 0.0095, 0.0093,  ..., 0.0094, 0.0095, 0.0093],
         [0.9720, 0.9716, 0.9721,  ..., 0.9717, 0.9714, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:06,831 [Process: 0] Synchronize training processes
2024-08-16 15:59:06,831 [Process: 0] Evaluating...
2024-08-16 15:59:06,833 [Process: 0] EPOCH 334:
2024-08-16 15:59:06,835 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1708e-03, 7.4550e-03, 7.2797e-03,  ..., 7.4681e-03,
          7.3983e-03, 7.2209e-03],
         [7.1708e-03, 7.4550e-03, 7.2797e-03,  ..., 7.4681e-03,
          7.3983e-03, 7.2209e-03],
         [7.1708e-03, 7.4550e-03, 7.2797e-03,  ..., 7.4681e-03,
          7.3983e-03, 7.2209e-03],
         [9.7849e-01, 9.7764e-01, 9.7816e-01,  ..., 9.7760e-01,
          9.7781e-01, 9.7834e-01]],
        [[7.1873e-03, 7.4702e-03, 7.2554e-03,  ..., 8.5833e-05,
          6.9391e-03, 7.1684e-03],
         [7.1873e-03, 7.4702e-03, 7.2554e-03,  ..., 8.5833e-05,
          6.9391e-03, 7.1684e-03],
         [7.1873e-03, 7.4702e-03, 7.2554e-03,  ..., 9.9974e-01,
          6.9391e-03, 7.1684e-03],
         [9.7844e-01, 9.7759e-01, 9.7823e-01,  ..., 8.5833e-05,
          9.7918e-01, 9.7849e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 334:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0095, 0.0094,  ..., 0.0093, 0.0097, 0.0095],
         [0.0096, 0.0095, 0.0094,  ..., 0.0093, 0.0097, 0.0095],
         [0.0096, 0.0095, 0.0094,  ..., 0.0093, 0.0097, 0.0095],
         [0.9713, 0.9714, 0.9719,  ..., 0.9720, 0.9709, 0.9716]],
        [[0.0093, 0.0093, 0.0092,  ..., 0.0095, 0.0094, 0.0093],
         [0.0093, 0.0093, 0.0092,  ..., 0.0095, 0.0094, 0.0093],
         [0.0093, 0.0093, 0.0092,  ..., 0.0095, 0.0094, 0.0093],
         [0.9721, 0.9720, 0.9723,  ..., 0.9716, 0.9719, 0.9721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:08,911 [Process: 0] Synchronize training processes
2024-08-16 15:59:08,911 [Process: 0] Evaluating...
2024-08-16 15:59:08,914 [Process: 0] EPOCH 335:
2024-08-16 15:59:08,916 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1203e-03, 7.1158e-03, 7.3880e-03,  ..., 7.1037e-03,
          7.3257e-03, 7.6012e-03],
         [7.1203e-03, 7.1158e-03, 7.3880e-03,  ..., 7.1037e-03,
          7.3257e-03, 7.6012e-03],
         [7.1203e-03, 7.1158e-03, 7.3880e-03,  ..., 7.1037e-03,
          7.3257e-03, 7.6012e-03],
         [9.7864e-01, 9.7865e-01, 9.7784e-01,  ..., 9.7869e-01,
          9.7802e-01, 9.7720e-01]],
        [[7.5557e-03, 7.2895e-03, 7.1202e-03,  ..., 1.9295e-04,
          7.2977e-03, 7.0752e-03],
         [7.5557e-03, 7.2895e-03, 7.1202e-03,  ..., 1.9295e-04,
          7.2977e-03, 7.0752e-03],
         [7.5557e-03, 7.2895e-03, 7.1202e-03,  ..., 9.9942e-01,
          7.2977e-03, 7.0752e-03],
         [9.7733e-01, 9.7813e-01, 9.7864e-01,  ..., 1.9295e-04,
          9.7811e-01, 9.7877e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 335:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0096, 0.0093, 0.0093,  ..., 0.0095, 0.0096, 0.0093],
         [0.0096, 0.0093, 0.0093,  ..., 0.0095, 0.0096, 0.0093],
         [0.0096, 0.0093, 0.0093,  ..., 0.0095, 0.0096, 0.0093],
         [0.9713, 0.9721, 0.9720,  ..., 0.9715, 0.9713, 0.9721]],
        [[0.0091, 0.0092, 0.0092,  ..., 0.0091, 0.0092, 0.0093],
         [0.0091, 0.0092, 0.0092,  ..., 0.0091, 0.0092, 0.0093],
         [0.0091, 0.0092, 0.0092,  ..., 0.0091, 0.0092, 0.0093],
         [0.9728, 0.9725, 0.9724,  ..., 0.9727, 0.9724, 0.9720]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:11,016 [Process: 0] Synchronize training processes
2024-08-16 15:59:11,016 [Process: 0] Evaluating...
2024-08-16 15:59:11,018 [Process: 0] EPOCH 336:
2024-08-16 15:59:11,020 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.3090e-03, 7.0738e-03, 7.1894e-03,  ..., 7.2421e-03,
          7.4687e-03, 6.9968e-03],
         [7.3090e-03, 7.0738e-03, 7.1894e-03,  ..., 7.2421e-03,
          7.4687e-03, 6.9968e-03],
         [7.3090e-03, 7.0738e-03, 7.1894e-03,  ..., 7.2421e-03,
          7.4687e-03, 6.9968e-03],
         [9.7807e-01, 9.7878e-01, 9.7843e-01,  ..., 9.7827e-01,
          9.7759e-01, 9.7901e-01]],
        [[7.4531e-03, 7.0896e-03, 7.3736e-03,  ..., 1.4163e-04,
          7.1270e-03, 7.2197e-03],
         [7.4531e-03, 7.0896e-03, 7.3736e-03,  ..., 1.2812e-04,
          7.1270e-03, 7.2197e-03],
         [7.4531e-03, 7.0896e-03, 7.3736e-03,  ..., 9.9960e-01,
          7.1270e-03, 7.2197e-03],
         [9.7764e-01, 9.7873e-01, 9.7788e-01,  ..., 1.2812e-04,
          9.7862e-01, 9.7834e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 336:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0094, 0.0093,  ..., 0.0093, 0.0094, 0.0092],
         [0.0094, 0.0094, 0.0093,  ..., 0.0093, 0.0094, 0.0092],
         [0.0094, 0.0094, 0.0093,  ..., 0.0093, 0.0094, 0.0092],
         [0.9719, 0.9719, 0.9720,  ..., 0.9722, 0.9719, 0.9724]],
        [[0.0092, 0.0094, 0.0094,  ..., 0.0094, 0.0093, 0.0093],
         [0.0092, 0.0094, 0.0094,  ..., 0.0094, 0.0093, 0.0093],
         [0.0092, 0.0094, 0.0094,  ..., 0.0094, 0.0093, 0.0093],
         [0.9725, 0.9719, 0.9719,  ..., 0.9717, 0.9722, 0.9722]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs:
2024-08-16 15:59:13,114 [Process: 0] Synchronize training processes
2024-08-16 15:59:13,114 [Process: 0] Evaluating...
2024-08-16 15:59:13,116 [Process: 0] EPOCH 337:
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8971e-03, 6.9957e-03, 7.1761e-03,  ..., 7.0137e-03,
          7.0132e-03, 7.0199e-03],
         [6.8971e-03, 6.9957e-03, 7.1761e-03,  ..., 7.0137e-03,
          7.0132e-03, 7.0199e-03],
         [6.8971e-03, 6.9957e-03, 7.1761e-03,  ..., 7.0137e-03,
          7.0132e-03, 7.0199e-03],
         [9.7931e-01, 9.7901e-01, 9.7847e-01,  ..., 9.7896e-01,
          9.7896e-01, 9.7894e-01]],
        [[7.3308e-03, 6.8339e-03, 7.4527e-03,  ..., 5.9798e-05,
          7.4391e-03, 7.2249e-03],
         [7.3308e-03, 6.8339e-03, 7.4527e-03,  ..., 5.9798e-05,
          7.4391e-03, 7.2249e-03],
         [7.3308e-03, 6.8339e-03, 7.4527e-03,  ..., 9.9982e-01,
          7.4391e-03, 7.2249e-03],
         [9.7801e-01, 9.7950e-01, 9.7764e-01,  ..., 5.9798e-05,
          9.7768e-01, 9.7833e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 337:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 15:59:15,216 [Process: 0] Synchronize training processes
2024-08-16 15:59:15,216 [Process: 0] Evaluating...
2024-08-16 15:59:15,218 [Process: 0] EPOCH 338:
2024-08-16 15:59:15,220 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0096, 0.0097,  ..., 0.0097, 0.0095, 0.0097],
         [0.0097, 0.0096, 0.0097,  ..., 0.0097, 0.0095, 0.0097],
         [0.0097, 0.0096, 0.0097,  ..., 0.0097, 0.0095, 0.0097],
         [0.9709, 0.9711, 0.9708,  ..., 0.9710, 0.9715, 0.9710]],
        [[0.0096, 0.0096, 0.0095,  ..., 0.0095, 0.0096, 0.0096],
         [0.0096, 0.0096, 0.0095,  ..., 0.0095, 0.0096, 0.0096],
         [0.0096, 0.0096, 0.0095,  ..., 0.0095, 0.0096, 0.0096],
         [0.9711, 0.9712, 0.9715,  ..., 0.9714, 0.9712, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7333e-03, 7.1847e-03, 7.3507e-03,  ..., 6.9757e-03,
          7.0048e-03, 7.1318e-03],
         [6.7333e-03, 7.1847e-03, 7.3507e-03,  ..., 6.9757e-03,
          7.0048e-03, 7.1318e-03],
         [6.7333e-03, 7.1847e-03, 7.3507e-03,  ..., 6.9757e-03,
          7.0048e-03, 7.1318e-03],
         [9.7980e-01, 9.7845e-01, 9.7795e-01,  ..., 9.7907e-01,
          9.7899e-01, 9.7860e-01]],
        [[7.1706e-03, 7.4702e-03, 7.2807e-03,  ..., 3.0428e-04,
          7.3544e-03, 7.2288e-03],
         [7.1706e-03, 7.4702e-03, 7.2807e-03,  ..., 3.0428e-04,
          7.3544e-03, 7.2288e-03],
         [7.1706e-03, 7.4702e-03, 7.2807e-03,  ..., 9.9909e-01,
          7.3544e-03, 7.2288e-03],
         [9.7849e-01, 9.7759e-01, 9.7816e-01,  ..., 3.0428e-04,
          9.7794e-01, 9.7831e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 338:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:17,312 [Process: 0] Synchronize training processes
2024-08-16 15:59:17,313 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0098, 0.0099, 0.0098,  ..., 0.0097, 0.0098, 0.0097],
         [0.0098, 0.0099, 0.0098,  ..., 0.0097, 0.0098, 0.0097],
         [0.0098, 0.0099, 0.0098,  ..., 0.0097, 0.0098, 0.0097],
         [0.9706, 0.9704, 0.9706,  ..., 0.9708, 0.9706, 0.9708]],
        [[0.0097, 0.0095, 0.0096,  ..., 0.0096, 0.0096, 0.0096],
         [0.0097, 0.0095, 0.0096,  ..., 0.0096, 0.0096, 0.0096],
         [0.0097, 0.0095, 0.0096,  ..., 0.0096, 0.0096, 0.0096],
         [0.9710, 0.9716, 0.9711,  ..., 0.9713, 0.9711, 0.9713]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1044e-03, 7.0505e-03, 7.0898e-03,  ..., 7.0794e-03,
          7.3969e-03, 7.0402e-03],
         [7.1044e-03, 7.0505e-03, 7.0898e-03,  ..., 7.0794e-03,
          7.3969e-03, 7.0402e-03],
         [7.1044e-03, 7.0505e-03, 7.0898e-03,  ..., 7.0794e-03,
          7.3969e-03, 7.0402e-03],
         [9.7869e-01, 9.7885e-01, 9.7873e-01,  ..., 9.7876e-01,
          9.7781e-01, 9.7888e-01]],
        [[7.3600e-03, 7.2153e-03, 6.9506e-03,  ..., 5.7319e-05,
          7.3273e-03, 7.1379e-03],
         [7.3600e-03, 7.2153e-03, 6.9506e-03,  ..., 5.7319e-05,
          7.3273e-03, 7.1379e-03],
         [7.3600e-03, 7.2153e-03, 6.9506e-03,  ..., 9.9983e-01,
          7.3273e-03, 7.1379e-03],
         [9.7792e-01, 9.7835e-01, 9.7915e-01,  ..., 5.7319e-05,
          9.7802e-01, 9.7859e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 339:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:17,315 [Process: 0] EPOCH 339:
2024-08-16 15:59:17,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0099, 0.0098],
         [0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0099, 0.0098],
         [0.0099, 0.0099, 0.0099,  ..., 0.0098, 0.0099, 0.0098],
         [0.9703, 0.9703, 0.9703,  ..., 0.9707, 0.9704, 0.9705]],
        [[0.0097, 0.0097, 0.0098,  ..., 0.0096, 0.0097, 0.0096],
         [0.0097, 0.0097, 0.0098,  ..., 0.0096, 0.0097, 0.0096],
         [0.0097, 0.0097, 0.0098,  ..., 0.0096, 0.0097, 0.0096],
         [0.9710, 0.9710, 0.9706,  ..., 0.9711, 0.9708, 0.9712]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.0400e-03, 6.9104e-03, 6.8083e-03,  ..., 7.2398e-03,
          6.8548e-03, 6.8288e-03],
         [7.0400e-03, 6.9104e-03, 6.8083e-03,  ..., 7.2398e-03,
          6.8548e-03, 6.8288e-03],
         [7.0400e-03, 6.9104e-03, 6.8083e-03,  ..., 7.2398e-03,
          6.8548e-03, 6.8288e-03],
         [9.7888e-01, 9.7927e-01, 9.7958e-01,  ..., 9.7828e-01,
          9.7944e-01, 9.7951e-01]],
        [[7.3216e-03, 6.9025e-03, 7.1386e-03,  ..., 1.3524e-03,
          7.1082e-03, 7.2335e-03],
         [7.3216e-03, 6.9025e-03, 7.1386e-03,  ..., 9.3823e-04,
          7.1082e-03, 7.2335e-03],
         [7.3216e-03, 6.9025e-03, 7.1386e-03,  ..., 9.9677e-01,
          7.1082e-03, 7.2335e-03],
         [9.7804e-01, 9.7929e-01, 9.7858e-01,  ..., 9.3823e-04,
          9.7868e-01, 9.7830e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 340:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:19,402 [Process: 0] Synchronize training processes
2024-08-16 15:59:19,403 [Process: 0] Evaluating...
2024-08-16 15:59:19,405 [Process: 0] EPOCH 340:
2024-08-16 15:59:19,407 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0097, 0.0097, 0.0098,  ..., 0.0097, 0.0096, 0.0096],
         [0.0097, 0.0097, 0.0098,  ..., 0.0097, 0.0096, 0.0096],
         [0.0097, 0.0097, 0.0098,  ..., 0.0097, 0.0096, 0.0096],
         [0.9710, 0.9710, 0.9707,  ..., 0.9710, 0.9711, 0.9712]],
        [[0.0094, 0.0094, 0.0095,  ..., 0.0095, 0.0094, 0.0095],
         [0.0094, 0.0094, 0.0095,  ..., 0.0095, 0.0094, 0.0095],
         [0.0094, 0.0094, 0.0095,  ..., 0.0095, 0.0094, 0.0095],
         [0.9717, 0.9717, 0.9715,  ..., 0.9714, 0.9718, 0.9716]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.0779e-03, 7.2957e-03, 7.1164e-03,  ..., 6.6709e-03,
          7.2224e-03, 7.2405e-03],
         [7.0779e-03, 7.2957e-03, 7.1164e-03,  ..., 6.6709e-03,
          7.2224e-03, 7.2405e-03],
         [7.0779e-03, 7.2957e-03, 7.1164e-03,  ..., 6.6709e-03,
          7.2224e-03, 7.2405e-03],
         [9.7877e-01, 9.7811e-01, 9.7865e-01,  ..., 9.7999e-01,
          9.7833e-01, 9.7828e-01]],
        [[7.0884e-03, 7.3373e-03, 7.0415e-03,  ..., 4.6063e-05,
          7.1486e-03, 7.2624e-03],
         [7.0884e-03, 7.3373e-03, 7.0415e-03,  ..., 4.6063e-05,
          7.1486e-03, 7.2624e-03],
         [7.0884e-03, 7.3373e-03, 7.0415e-03,  ..., 9.9986e-01,
          7.1486e-03, 7.2624e-03],
         [9.7873e-01, 9.7799e-01, 9.7888e-01,  ..., 4.6063e-05,
          9.7855e-01, 9.7821e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 341:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:21,501 [Process: 0] Synchronize training processes
2024-08-16 15:59:21,501 [Process: 0] Evaluating...
2024-08-16 15:59:21,503 [Process: 0] EPOCH 341:
2024-08-16 15:59:21,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0094, 0.0093, 0.0094,  ..., 0.0093, 0.0093, 0.0093],
         [0.0094, 0.0093, 0.0094,  ..., 0.0093, 0.0093, 0.0093],
         [0.0094, 0.0093, 0.0094,  ..., 0.0093, 0.0093, 0.0093],
         [0.9718, 0.9721, 0.9719,  ..., 0.9720, 0.9722, 0.9721]],
        [[0.0090, 0.0092, 0.0092,  ..., 0.0092, 0.0093, 0.0092],
         [0.0090, 0.0092, 0.0092,  ..., 0.0092, 0.0093, 0.0092],
         [0.0090, 0.0092, 0.0092,  ..., 0.0092, 0.0093, 0.0092],
         [0.9729, 0.9724, 0.9723,  ..., 0.9725, 0.9722, 0.9725]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9938e-03, 6.9668e-03, 6.7216e-03,  ..., 6.8137e-03,
          6.8280e-03, 6.8476e-03],
         [6.9938e-03, 6.9668e-03, 6.7216e-03,  ..., 6.8137e-03,
          6.8280e-03, 6.8476e-03],
         [6.9938e-03, 6.9668e-03, 6.7216e-03,  ..., 6.8137e-03,
          6.8280e-03, 6.8476e-03],
         [9.7902e-01, 9.7910e-01, 9.7984e-01,  ..., 9.7956e-01,
          9.7952e-01, 9.7946e-01]],
        [[7.0639e-03, 6.9170e-03, 6.8369e-03,  ..., 1.7968e-04,
          6.8610e-03, 7.0165e-03],
         [7.0639e-03, 6.9170e-03, 6.8369e-03,  ..., 1.7968e-04,
          6.8610e-03, 7.0165e-03],
         [7.0639e-03, 6.9170e-03, 6.8369e-03,  ..., 9.9946e-01,
          6.8610e-03, 7.0165e-03],
         [9.7881e-01, 9.7925e-01, 9.7949e-01,  ..., 1.7968e-04,
          9.7942e-01, 9.7895e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 342:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:23,656 [Process: 0] Synchronize training processes
2024-08-16 15:59:23,656 [Process: 0] Evaluating...
2024-08-16 15:59:23,665 [Process: 0] EPOCH 342:
2024-08-16 15:59:23,667 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0093, 0.0093,  ..., 0.0093, 0.0094, 0.0093],
         [0.0091, 0.0093, 0.0093,  ..., 0.0093, 0.0094, 0.0093],
         [0.0091, 0.0093, 0.0093,  ..., 0.0093, 0.0094, 0.0093],
         [0.9726, 0.9720, 0.9721,  ..., 0.9722, 0.9718, 0.9721]],
        [[0.0092, 0.0091, 0.0091,  ..., 0.0090, 0.0090, 0.0091],
         [0.0092, 0.0091, 0.0091,  ..., 0.0090, 0.0090, 0.0091],
         [0.0092, 0.0091, 0.0091,  ..., 0.0090, 0.0090, 0.0091],
         [0.9725, 0.9728, 0.9726,  ..., 0.9730, 0.9729, 0.9727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[7.1885e-03, 6.9127e-03, 6.7324e-03,  ..., 6.7438e-03,
          7.1165e-03, 6.9409e-03],
         [7.1885e-03, 6.9127e-03, 6.7324e-03,  ..., 6.7438e-03,
          7.1165e-03, 6.9409e-03],
         [7.1885e-03, 6.9127e-03, 6.7324e-03,  ..., 6.7438e-03,
          7.1165e-03, 6.9409e-03],
         [9.7843e-01, 9.7926e-01, 9.7980e-01,  ..., 9.7977e-01,
          9.7865e-01, 9.7918e-01]],
        [[7.0608e-03, 7.0854e-03, 7.0683e-03,  ..., 9.9370e-05,
          6.8597e-03, 7.0411e-03],
         [7.0608e-03, 7.0854e-03, 7.0683e-03,  ..., 9.9370e-05,
          6.8597e-03, 7.0411e-03],
         [7.0608e-03, 7.0854e-03, 7.0683e-03,  ..., 9.9970e-01,
          6.8597e-03, 7.0411e-03],
         [9.7882e-01, 9.7874e-01, 9.7880e-01,  ..., 9.9370e-05,
          9.7942e-01, 9.7888e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 343:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:25,785 [Process: 0] Synchronize training processes
2024-08-16 15:59:25,786 [Process: 0] Evaluating...
2024-08-16 15:59:25,788 [Process: 0] EPOCH 343:
2024-08-16 15:59:25,790 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0093, 0.0093,  ..., 0.0092, 0.0093, 0.0092],
         [0.0093, 0.0093, 0.0093,  ..., 0.0092, 0.0093, 0.0092],
         [0.0093, 0.0093, 0.0093,  ..., 0.0092, 0.0093, 0.0092],
         [0.9721, 0.9722, 0.9722,  ..., 0.9723, 0.9722, 0.9723]],
        [[0.0092, 0.0091, 0.0090,  ..., 0.0092, 0.0090, 0.0094],
         [0.0092, 0.0091, 0.0090,  ..., 0.0092, 0.0090, 0.0094],
         [0.0092, 0.0091, 0.0090,  ..., 0.0092, 0.0090, 0.0094],
         [0.9725, 0.9726, 0.9730,  ..., 0.9724, 0.9731, 0.9719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6051e-03, 6.7820e-03, 6.6388e-03,  ..., 6.9065e-03,
          7.0634e-03, 7.1739e-03],
         [6.6051e-03, 6.7820e-03, 6.6388e-03,  ..., 6.9065e-03,
          7.0634e-03, 7.1739e-03],
         [6.6051e-03, 6.7820e-03, 6.6388e-03,  ..., 6.9065e-03,
          7.0634e-03, 7.1739e-03],
         [9.8018e-01, 9.7965e-01, 9.8008e-01,  ..., 9.7928e-01,
          9.7881e-01, 9.7848e-01]],
        [[7.2131e-03, 7.2503e-03, 7.2368e-03,  ..., 4.8593e-05,
          6.7517e-03, 6.9436e-03],
         [7.2131e-03, 7.2503e-03, 7.2368e-03,  ..., 4.8593e-05,
          6.7517e-03, 6.9436e-03],
         [7.2131e-03, 7.2503e-03, 7.2368e-03,  ..., 9.9985e-01,
          6.7517e-03, 6.9436e-03],
         [9.7836e-01, 9.7825e-01, 9.7829e-01,  ..., 4.8593e-05,
          9.7974e-01, 9.7917e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 344:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:27,869 [Process: 0] Synchronize training processes
2024-08-16 15:59:27,869 [Process: 0] Evaluating...
2024-08-16 15:59:27,871 [Process: 0] EPOCH 344:
2024-08-16 15:59:27,873 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0093, 0.0092, 0.0094,  ..., 0.0093, 0.0092, 0.0093],
         [0.0093, 0.0092, 0.0094,  ..., 0.0093, 0.0092, 0.0093],
         [0.0093, 0.0092, 0.0094,  ..., 0.0093, 0.0092, 0.0093],
         [0.9722, 0.9724, 0.9719,  ..., 0.9722, 0.9723, 0.9721]],
        [[0.0089, 0.0090, 0.0090,  ..., 0.0090, 0.0088, 0.0090],
         [0.0089, 0.0090, 0.0090,  ..., 0.0090, 0.0088, 0.0090],
         [0.0089, 0.0090, 0.0090,  ..., 0.0090, 0.0088, 0.0090],
         [0.9732, 0.9730, 0.9729,  ..., 0.9730, 0.9736, 0.9731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7544e-03, 6.7957e-03, 6.8987e-03,  ..., 7.1660e-03,
          6.9323e-03, 6.9334e-03],
         [6.7544e-03, 6.7957e-03, 6.8987e-03,  ..., 7.1660e-03,
          6.9323e-03, 6.9334e-03],
         [6.7544e-03, 6.7957e-03, 6.8987e-03,  ..., 7.1660e-03,
          6.9323e-03, 6.9334e-03],
         [9.7974e-01, 9.7961e-01, 9.7930e-01,  ..., 9.7850e-01,
          9.7920e-01, 9.7920e-01]],
        [[6.8857e-03, 7.0635e-03, 6.7736e-03,  ..., 7.5250e-05,
          7.2351e-03, 6.9006e-03],
         [6.8857e-03, 7.0635e-03, 6.7736e-03,  ..., 7.5250e-05,
          7.2351e-03, 6.9006e-03],
         [6.8857e-03, 7.0635e-03, 6.7736e-03,  ..., 9.9977e-01,
          7.2351e-03, 6.9006e-03],
         [9.7934e-01, 9.7881e-01, 9.7968e-01,  ..., 7.5250e-05,
          9.7829e-01, 9.7930e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 345:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 15:59:29,943 [Process: 0] Synchronize training processes
2024-08-16 15:59:29,943 [Process: 0] Evaluating...
2024-08-16 15:59:29,945 [Process: 0] EPOCH 345:
2024-08-16 15:59:29,947 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0092, 0.0092,  ..., 0.0092, 0.0091, 0.0091],
         [0.0092, 0.0092, 0.0092,  ..., 0.0092, 0.0091, 0.0091],
         [0.0092, 0.0092, 0.0092,  ..., 0.0092, 0.0091, 0.0091],
         [0.9725, 0.9725, 0.9724,  ..., 0.9723, 0.9728, 0.9727]],
        [[0.0090, 0.0090, 0.0090,  ..., 0.0091, 0.0088, 0.0090],
         [0.0090, 0.0090, 0.0090,  ..., 0.0091, 0.0088, 0.0090],
         [0.0090, 0.0090, 0.0090,  ..., 0.0091, 0.0088, 0.0090],
         [0.9730, 0.9729, 0.9730,  ..., 0.9727, 0.9736, 0.9731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0070, 0.0070,  ..., 0.0072, 0.0067, 0.0068],
         [0.0069, 0.0070, 0.0070,  ..., 0.0072, 0.0067, 0.0068],
         [0.0069, 0.0070, 0.0070,  ..., 0.0072, 0.0067, 0.0068],
         [0.9793, 0.9789, 0.9789,  ..., 0.9785, 0.9800, 0.9796]],
        [[0.0068, 0.0068, 0.0067,  ..., 0.0014, 0.0071, 0.0067],
         [0.0068, 0.0068, 0.0067,  ..., 0.0014, 0.0071, 0.0067],
         [0.0068, 0.0068, 0.0067,  ..., 0.9957, 0.0071, 0.0067],
         [0.9795, 0.9797, 0.9798,  ..., 0.0014, 0.9786, 0.9798]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:32,028 [Process: 0] Synchronize training processes
2024-08-16 15:59:32,029 [Process: 0] Evaluating...
2024-08-16 15:59:32,030 [Process: 0] EPOCH 346:
2024-08-16 15:59:32,032 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 346:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0090, 0.0091,  ..., 0.0091, 0.0091, 0.0090],
         [0.0092, 0.0090, 0.0091,  ..., 0.0091, 0.0091, 0.0090],
         [0.0092, 0.0090, 0.0091,  ..., 0.0091, 0.0091, 0.0090],
         [0.9724, 0.9730, 0.9727,  ..., 0.9727, 0.9727, 0.9729]],
        [[0.0089, 0.0087, 0.0089,  ..., 0.0088, 0.0089, 0.0088],
         [0.0089, 0.0087, 0.0089,  ..., 0.0088, 0.0089, 0.0088],
         [0.0089, 0.0087, 0.0089,  ..., 0.0088, 0.0089, 0.0088],
         [0.9732, 0.9738, 0.9732,  ..., 0.9736, 0.9732, 0.9735]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5957e-03, 6.8362e-03, 6.7224e-03,  ..., 6.8039e-03,
          6.7216e-03, 6.7045e-03],
         [6.5957e-03, 6.8362e-03, 6.7224e-03,  ..., 6.8039e-03,
          6.7216e-03, 6.7045e-03],
         [6.5957e-03, 6.8362e-03, 6.7224e-03,  ..., 6.8039e-03,
          6.7216e-03, 6.7045e-03],
         [9.8021e-01, 9.7949e-01, 9.7983e-01,  ..., 9.7959e-01,
          9.7984e-01, 9.7989e-01]],
        [[6.7752e-03, 6.6504e-03, 6.8202e-03,  ..., 7.9959e-06,
          6.8234e-03, 7.1430e-03],
         [6.7752e-03, 6.6504e-03, 6.8202e-03,  ..., 7.8919e-06,
          6.8234e-03, 7.1430e-03],
         [6.7752e-03, 6.6504e-03, 6.8202e-03,  ..., 9.9998e-01,
          6.8234e-03, 7.1430e-03],
         [9.7967e-01, 9.8005e-01, 9.7954e-01,  ..., 7.8919e-06,
          9.7953e-01, 9.7857e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:34,101 [Process: 0] Synchronize training processes
2024-08-16 15:59:34,102 [Process: 0] Evaluating...
2024-08-16 15:59:34,104 [Process: 0] EPOCH 347:
2024-08-16 15:59:34,105 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 347:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0092, 0.0091, 0.0090,  ..., 0.0091, 0.0091, 0.0090],
         [0.0092, 0.0091, 0.0090,  ..., 0.0091, 0.0091, 0.0090],
         [0.0092, 0.0091, 0.0090,  ..., 0.0091, 0.0091, 0.0090],
         [0.9725, 0.9726, 0.9729,  ..., 0.9728, 0.9728, 0.9729]],
        [[0.0088, 0.0088, 0.0088,  ..., 0.0089, 0.0089, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0089, 0.0089, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0089, 0.0089, 0.0087],
         [0.9736, 0.9736, 0.9735,  ..., 0.9733, 0.9732, 0.9738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 15:59:36,175 [Process: 0] Synchronize training processes
2024-08-16 15:59:36,175 [Process: 0] Evaluating...
2024-08-16 15:59:36,177 [Process: 0] EPOCH 348:
2024-08-16 15:59:36,179 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9075e-03, 7.0754e-03, 6.7725e-03,  ..., 6.6351e-03,
          6.8085e-03, 7.1700e-03],
         [6.9075e-03, 7.0754e-03, 6.7725e-03,  ..., 6.6351e-03,
          6.8085e-03, 7.1700e-03],
         [6.9075e-03, 7.0754e-03, 6.7725e-03,  ..., 6.6351e-03,
          6.8085e-03, 7.1700e-03],
         [9.7928e-01, 9.7877e-01, 9.7968e-01,  ..., 9.8009e-01,
          9.7957e-01, 9.7849e-01]],
        [[7.1216e-03, 6.4970e-03, 7.0052e-03,  ..., 4.0418e-04,
          6.6201e-03, 6.8570e-03],
         [7.1216e-03, 6.4970e-03, 7.0052e-03,  ..., 4.0418e-04,
          6.6201e-03, 6.8570e-03],
         [7.1216e-03, 6.4970e-03, 7.0052e-03,  ..., 9.9879e-01,
          6.6201e-03, 6.8570e-03],
         [9.7864e-01, 9.8051e-01, 9.7898e-01,  ..., 4.0418e-04,
          9.8014e-01, 9.7943e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 348:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0091, 0.0090, 0.0090,  ..., 0.0090, 0.0091, 0.0089],
         [0.0091, 0.0090, 0.0090,  ..., 0.0090, 0.0091, 0.0089],
         [0.0091, 0.0090, 0.0090,  ..., 0.0090, 0.0091, 0.0089],
         [0.9728, 0.9730, 0.9729,  ..., 0.9729, 0.9728, 0.9733]],
        [[0.0086, 0.0086, 0.0089,  ..., 0.0088, 0.0089, 0.0089],
         [0.0086, 0.0086, 0.0089,  ..., 0.0088, 0.0089, 0.0089],
         [0.0086, 0.0086, 0.0089,  ..., 0.0088, 0.0089, 0.0089],
         [0.9743, 0.9743, 0.9734,  ..., 0.9737, 0.9734, 0.9733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-16 15:59:38,266 [Process: 0] Synchronize training processes
2024-08-16 15:59:38,267 [Process: 0] Evaluating...
2024-08-16 15:59:38,269 [Process: 0] EPOCH 349:
2024-08-16 15:59:38,271 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.9800e-03, 6.6278e-03, 6.8243e-03,  ..., 6.7426e-03,
          6.5786e-03, 6.8258e-03],
         [6.9800e-03, 6.6278e-03, 6.8243e-03,  ..., 6.7426e-03,
          6.5786e-03, 6.8258e-03],
         [6.9800e-03, 6.6278e-03, 6.8243e-03,  ..., 6.7426e-03,
          6.5786e-03, 6.8258e-03],
         [9.7906e-01, 9.8012e-01, 9.7953e-01,  ..., 9.7977e-01,
          9.8026e-01, 9.7952e-01]],
        [[6.8039e-03, 6.7846e-03, 6.7218e-03,  ..., 1.4032e-04,
          6.8413e-03, 6.8943e-03],
         [6.8039e-03, 6.7846e-03, 6.7218e-03,  ..., 1.4032e-04,
          6.8413e-03, 6.8943e-03],
         [6.8039e-03, 6.7846e-03, 6.7218e-03,  ..., 9.9958e-01,
          6.8413e-03, 6.8943e-03],
         [9.7959e-01, 9.7965e-01, 9.7983e-01,  ..., 1.4032e-04,
          9.7948e-01, 9.7932e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 349:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0090, 0.0090,  ..., 0.0090, 0.0090, 0.0090],
         [0.0090, 0.0090, 0.0090,  ..., 0.0090, 0.0090, 0.0090],
         [0.0090, 0.0090, 0.0090,  ..., 0.0090, 0.0090, 0.0090],
         [0.9729, 0.9729, 0.9730,  ..., 0.9731, 0.9731, 0.9731]],
        [[0.0087, 0.0087, 0.0086,  ..., 0.0087, 0.0088, 0.0089],
         [0.0087, 0.0087, 0.0086,  ..., 0.0087, 0.0088, 0.0089],
         [0.0087, 0.0087, 0.0086,  ..., 0.0087, 0.0088, 0.0089],
         [0.9738, 0.9740, 0.9741,  ..., 0.9738, 0.9737, 0.9734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:40,343 [Process: 0] Synchronize training processes
2024-08-16 15:59:40,343 [Process: 0] Evaluating...
2024-08-16 15:59:40,345 [Process: 0] EPOCH 350:
2024-08-16 15:59:40,347 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8180e-03, 6.8644e-03, 6.6276e-03,  ..., 6.9731e-03,
          6.4738e-03, 6.9889e-03],
         [6.8180e-03, 6.8644e-03, 6.6276e-03,  ..., 6.9731e-03,
          6.4738e-03, 6.9889e-03],
         [6.8180e-03, 6.8644e-03, 6.6276e-03,  ..., 6.9731e-03,
          6.4738e-03, 6.9889e-03],
         [9.7955e-01, 9.7941e-01, 9.8012e-01,  ..., 9.7908e-01,
          9.8058e-01, 9.7903e-01]],
        [[6.8097e-03, 6.6732e-03, 6.7965e-03,  ..., 2.8665e-05,
          6.9696e-03, 6.8271e-03],
         [6.8097e-03, 6.6732e-03, 6.7965e-03,  ..., 2.8665e-05,
          6.9696e-03, 6.8271e-03],
         [6.8097e-03, 6.6732e-03, 6.7965e-03,  ..., 9.9991e-01,
          6.9696e-03, 6.8271e-03],
         [9.7957e-01, 9.7998e-01, 9.7961e-01,  ..., 2.8665e-05,
          9.7909e-01, 9.7952e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 350:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0090, 0.0089,  ..., 0.0089, 0.0086, 0.0088],
         [0.0089, 0.0090, 0.0089,  ..., 0.0089, 0.0086, 0.0088],
         [0.0089, 0.0090, 0.0089,  ..., 0.0089, 0.0086, 0.0088],
         [0.9732, 0.9731, 0.9732,  ..., 0.9732, 0.9741, 0.9736]],
        [[0.0088, 0.0088, 0.0087,  ..., 0.0086, 0.0089, 0.0088],
         [0.0088, 0.0088, 0.0087,  ..., 0.0086, 0.0089, 0.0088],
         [0.0088, 0.0088, 0.0087,  ..., 0.0086, 0.0089, 0.0088],
         [0.9737, 0.9735, 0.9738,  ..., 0.9742, 0.9732, 0.9737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:42,414 [Process: 0] Synchronize training processes
2024-08-16 15:59:42,414 [Process: 0] Evaluating...
2024-08-16 15:59:42,416 [Process: 0] EPOCH 351:
2024-08-16 15:59:42,418 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5932e-03, 6.9133e-03, 7.0716e-03,  ..., 6.7255e-03,
          6.6116e-03, 7.0139e-03],
         [6.5932e-03, 6.9133e-03, 7.0716e-03,  ..., 6.7255e-03,
          6.6116e-03, 7.0139e-03],
         [6.5932e-03, 6.9133e-03, 7.0716e-03,  ..., 6.7255e-03,
          6.6116e-03, 7.0139e-03],
         [9.8022e-01, 9.7926e-01, 9.7879e-01,  ..., 9.7982e-01,
          9.8017e-01, 9.7896e-01]],
        [[6.5801e-03, 6.4320e-03, 6.6802e-03,  ..., 1.9650e-05,
          6.7124e-03, 6.6616e-03],
         [6.5801e-03, 6.4320e-03, 6.6802e-03,  ..., 1.9650e-05,
          6.7124e-03, 6.6616e-03],
         [6.5801e-03, 6.4320e-03, 6.6802e-03,  ..., 9.9994e-01,
          6.7124e-03, 6.6616e-03],
         [9.8026e-01, 9.8070e-01, 9.7996e-01,  ..., 1.9650e-05,
          9.7986e-01, 9.8002e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 351:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0090, 0.0088, 0.0089,  ..., 0.0088, 0.0088, 0.0089],
         [0.0090, 0.0088, 0.0089,  ..., 0.0088, 0.0088, 0.0089],
         [0.0090, 0.0088, 0.0089,  ..., 0.0088, 0.0088, 0.0089],
         [0.9730, 0.9735, 0.9734,  ..., 0.9737, 0.9735, 0.9734]],
        [[0.0086, 0.0089, 0.0086,  ..., 0.0085, 0.0087, 0.0085],
         [0.0086, 0.0089, 0.0086,  ..., 0.0085, 0.0087, 0.0085],
         [0.0086, 0.0089, 0.0086,  ..., 0.0085, 0.0087, 0.0085],
         [0.9743, 0.9733, 0.9741,  ..., 0.9744, 0.9739, 0.9745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:44,488 [Process: 0] Synchronize training processes
2024-08-16 15:59:44,488 [Process: 0] Evaluating...
2024-08-16 15:59:44,496 [Process: 0] EPOCH 352:
2024-08-16 15:59:44,498 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5778e-03, 6.7278e-03, 6.9721e-03,  ..., 6.7762e-03,
          6.5531e-03, 6.6171e-03],
         [6.5778e-03, 6.7278e-03, 6.9721e-03,  ..., 6.7762e-03,
          6.5531e-03, 6.6171e-03],
         [6.5778e-03, 6.7278e-03, 6.9721e-03,  ..., 6.7762e-03,
          6.5531e-03, 6.6171e-03],
         [9.8027e-01, 9.7982e-01, 9.7908e-01,  ..., 9.7967e-01,
          9.8034e-01, 9.8015e-01]],
        [[6.7880e-03, 6.6678e-03, 6.7478e-03,  ..., 1.3578e-04,
          6.4949e-03, 6.6579e-03],
         [6.7880e-03, 6.6678e-03, 6.7478e-03,  ..., 1.3578e-04,
          6.4949e-03, 6.6579e-03],
         [6.7880e-03, 6.6678e-03, 6.7478e-03,  ..., 9.9959e-01,
          6.4949e-03, 6.6579e-03],
         [9.7964e-01, 9.8000e-01, 9.7976e-01,  ..., 1.3578e-04,
          9.8052e-01, 9.8003e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 352:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0089, 0.0090,  ..., 0.0087, 0.0089, 0.0089],
         [0.0088, 0.0089, 0.0090,  ..., 0.0087, 0.0089, 0.0089],
         [0.0088, 0.0089, 0.0090,  ..., 0.0087, 0.0089, 0.0089],
         [0.9735, 0.9732, 0.9730,  ..., 0.9738, 0.9734, 0.9732]],
        [[0.0085, 0.0087, 0.0085,  ..., 0.0087, 0.0085, 0.0087],
         [0.0085, 0.0087, 0.0085,  ..., 0.0087, 0.0085, 0.0087],
         [0.0085, 0.0087, 0.0085,  ..., 0.0087, 0.0085, 0.0087],
         [0.9745, 0.9739, 0.9744,  ..., 0.9740, 0.9745, 0.9739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:46,575 [Process: 0] Synchronize training processes
2024-08-16 15:59:46,575 [Process: 0] Evaluating...
2024-08-16 15:59:46,577 [Process: 0] EPOCH 353:
2024-08-16 15:59:46,579 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8931e-03, 6.5866e-03, 6.6489e-03,  ..., 6.7428e-03,
          6.5933e-03, 6.8807e-03],
         [6.8931e-03, 6.5866e-03, 6.6489e-03,  ..., 6.7428e-03,
          6.5933e-03, 6.8807e-03],
         [6.8931e-03, 6.5866e-03, 6.6489e-03,  ..., 6.7428e-03,
          6.5933e-03, 6.8807e-03],
         [9.7932e-01, 9.8024e-01, 9.8005e-01,  ..., 9.7977e-01,
          9.8022e-01, 9.7936e-01]],
        [[6.6004e-03, 6.7149e-03, 6.5461e-03,  ..., 4.2822e-04,
          6.5938e-03, 6.4259e-03],
         [6.6004e-03, 6.7149e-03, 6.5461e-03,  ..., 4.2822e-04,
          6.5938e-03, 6.4259e-03],
         [6.6004e-03, 6.7149e-03, 6.5461e-03,  ..., 9.9872e-01,
          6.5938e-03, 6.4259e-03],
         [9.8020e-01, 9.7986e-01, 9.8036e-01,  ..., 4.2822e-04,
          9.8022e-01, 9.8072e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 353:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0090, 0.0088,  ..., 0.0088, 0.0089, 0.0089],
         [0.0088, 0.0090, 0.0088,  ..., 0.0088, 0.0089, 0.0089],
         [0.0088, 0.0090, 0.0088,  ..., 0.0088, 0.0089, 0.0089],
         [0.9736, 0.9731, 0.9736,  ..., 0.9736, 0.9734, 0.9734]],
        [[0.0088, 0.0086, 0.0086,  ..., 0.0089, 0.0088, 0.0087],
         [0.0088, 0.0086, 0.0086,  ..., 0.0089, 0.0088, 0.0087],
         [0.0088, 0.0086, 0.0086,  ..., 0.0089, 0.0088, 0.0087],
         [0.9736, 0.9741, 0.9742,  ..., 0.9734, 0.9737, 0.9739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:48,717 [Process: 0] Synchronize training processes
2024-08-16 15:59:48,717 [Process: 0] Evaluating...
2024-08-16 15:59:48,719 [Process: 0] EPOCH 354:
2024-08-16 15:59:48,721 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.8354e-03, 6.4259e-03, 6.6074e-03,  ..., 6.9904e-03,
          6.6386e-03, 6.6408e-03],
         [6.8354e-03, 6.4259e-03, 6.6074e-03,  ..., 6.9904e-03,
          6.6386e-03, 6.6408e-03],
         [6.8354e-03, 6.4259e-03, 6.6074e-03,  ..., 6.9904e-03,
          6.6386e-03, 6.6408e-03],
         [9.7949e-01, 9.8072e-01, 9.8018e-01,  ..., 9.7903e-01,
          9.8008e-01, 9.8008e-01]],
        [[6.7869e-03, 6.4557e-03, 6.6112e-03,  ..., 1.6121e-05,
          6.4807e-03, 6.4586e-03],
         [6.7869e-03, 6.4557e-03, 6.6112e-03,  ..., 1.6121e-05,
          6.4807e-03, 6.4586e-03],
         [6.7869e-03, 6.4557e-03, 6.6112e-03,  ..., 9.9995e-01,
          6.4807e-03, 6.4586e-03],
         [9.7964e-01, 9.8063e-01, 9.8017e-01,  ..., 1.6121e-05,
          9.8056e-01, 9.8062e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 354:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0090, 0.0089,  ..., 0.0089, 0.0089, 0.0088],
         [0.0088, 0.0090, 0.0089,  ..., 0.0089, 0.0089, 0.0088],
         [0.0088, 0.0090, 0.0089,  ..., 0.0089, 0.0089, 0.0088],
         [0.9737, 0.9731, 0.9732,  ..., 0.9732, 0.9734, 0.9736]],
        [[0.0086, 0.0086, 0.0087,  ..., 0.0087, 0.0085, 0.0087],
         [0.0086, 0.0086, 0.0087,  ..., 0.0087, 0.0085, 0.0087],
         [0.0086, 0.0086, 0.0087,  ..., 0.0087, 0.0085, 0.0087],
         [0.9743, 0.9743, 0.9740,  ..., 0.9738, 0.9745, 0.9739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:50,839 [Process: 0] Synchronize training processes
2024-08-16 15:59:50,839 [Process: 0] Evaluating...
2024-08-16 15:59:50,841 [Process: 0] EPOCH 355:
2024-08-16 15:59:50,843 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5703e-03, 6.6626e-03, 6.9039e-03,  ..., 6.7846e-03,
          6.7626e-03, 6.5193e-03],
         [6.5703e-03, 6.6626e-03, 6.9039e-03,  ..., 6.7846e-03,
          6.7626e-03, 6.5193e-03],
         [6.5703e-03, 6.6626e-03, 6.9039e-03,  ..., 6.7846e-03,
          6.7626e-03, 6.5193e-03],
         [9.8029e-01, 9.8001e-01, 9.7929e-01,  ..., 9.7965e-01,
          9.7971e-01, 9.8044e-01]],
        [[6.2729e-03, 6.3933e-03, 6.6795e-03,  ..., 3.8114e-04,
          6.4060e-03, 6.9144e-03],
         [6.2729e-03, 6.3933e-03, 6.6795e-03,  ..., 3.8114e-04,
          6.4060e-03, 6.9144e-03],
         [6.2729e-03, 6.3933e-03, 6.6795e-03,  ..., 9.9886e-01,
          6.4060e-03, 6.9144e-03],
         [9.8118e-01, 9.8082e-01, 9.7996e-01,  ..., 3.8114e-04,
          9.8078e-01, 9.7926e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 355:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0089, 0.0090,  ..., 0.0088, 0.0089, 0.0087],
         [0.0089, 0.0089, 0.0090,  ..., 0.0088, 0.0089, 0.0087],
         [0.0089, 0.0089, 0.0090,  ..., 0.0088, 0.0089, 0.0087],
         [0.9733, 0.9734, 0.9731,  ..., 0.9737, 0.9734, 0.9738]],
        [[0.0085, 0.0087, 0.0086,  ..., 0.0087, 0.0085, 0.0089],
         [0.0085, 0.0087, 0.0086,  ..., 0.0087, 0.0085, 0.0089],
         [0.0085, 0.0087, 0.0086,  ..., 0.0087, 0.0085, 0.0089],
         [0.9744, 0.9740, 0.9741,  ..., 0.9738, 0.9744, 0.9733]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:52,914 [Process: 0] Synchronize training processes
2024-08-16 15:59:52,915 [Process: 0] Evaluating...
2024-08-16 15:59:52,917 [Process: 0] EPOCH 356:
2024-08-16 15:59:52,919 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6233e-03, 6.6153e-03, 6.8400e-03,  ..., 6.7471e-03,
          6.2973e-03, 6.5611e-03],
         [6.6233e-03, 6.6153e-03, 6.8400e-03,  ..., 6.7471e-03,
          6.2973e-03, 6.5611e-03],
         [6.6233e-03, 6.6153e-03, 6.8400e-03,  ..., 6.7471e-03,
          6.2973e-03, 6.5611e-03],
         [9.8013e-01, 9.8015e-01, 9.7948e-01,  ..., 9.7976e-01,
          9.8111e-01, 9.8032e-01]],
        [[6.5656e-03, 6.4588e-03, 6.5600e-03,  ..., 3.5876e-04,
          6.4725e-03, 6.5868e-03],
         [6.5656e-03, 6.4588e-03, 6.5600e-03,  ..., 2.2339e-04,
          6.4725e-03, 6.5868e-03],
         [6.5656e-03, 6.4588e-03, 6.5600e-03,  ..., 9.9919e-01,
          6.4725e-03, 6.5868e-03],
         [9.8030e-01, 9.8062e-01, 9.8032e-01,  ..., 2.2339e-04,
          9.8058e-01, 9.8024e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 356:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0089, 0.0089, 0.0089,  ..., 0.0089, 0.0089, 0.0087],
         [0.0089, 0.0089, 0.0089,  ..., 0.0089, 0.0089, 0.0087],
         [0.0089, 0.0089, 0.0089,  ..., 0.0089, 0.0089, 0.0087],
         [0.9733, 0.9732, 0.9734,  ..., 0.9734, 0.9734, 0.9740]],
        [[0.0089, 0.0087, 0.0085,  ..., 0.0089, 0.0088, 0.0087],
         [0.0089, 0.0087, 0.0085,  ..., 0.0089, 0.0088, 0.0087],
         [0.0089, 0.0087, 0.0085,  ..., 0.0089, 0.0088, 0.0087],
         [0.9734, 0.9738, 0.9745,  ..., 0.9733, 0.9735, 0.9738]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:55,001 [Process: 0] Synchronize training processes
2024-08-16 15:59:55,001 [Process: 0] Evaluating...
2024-08-16 15:59:55,003 [Process: 0] EPOCH 357:
2024-08-16 15:59:55,005 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7330e-03, 6.5072e-03, 6.7511e-03,  ..., 6.9012e-03,
          6.4194e-03, 6.9075e-03],
         [6.7330e-03, 6.5072e-03, 6.7511e-03,  ..., 6.9012e-03,
          6.4194e-03, 6.9075e-03],
         [6.7330e-03, 6.5072e-03, 6.7511e-03,  ..., 6.9012e-03,
          6.4194e-03, 6.9075e-03],
         [9.7980e-01, 9.8048e-01, 9.7975e-01,  ..., 9.7930e-01,
          9.8074e-01, 9.7928e-01]],
        [[6.6135e-03, 6.3372e-03, 6.8898e-03,  ..., 3.9269e-04,
          6.4779e-03, 6.3890e-03],
         [6.6135e-03, 6.3372e-03, 6.8898e-03,  ..., 3.9269e-04,
          6.4779e-03, 6.3890e-03],
         [6.6135e-03, 6.3372e-03, 6.8898e-03,  ..., 9.9882e-01,
          6.4779e-03, 6.3890e-03],
         [9.8016e-01, 9.8099e-01, 9.7933e-01,  ..., 3.9269e-04,
          9.8057e-01, 9.8083e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 357:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0088, 0.0088,  ..., 0.0088, 0.0088, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0088, 0.0088, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0088, 0.0088, 0.0087],
         [0.9735, 0.9735, 0.9735,  ..., 0.9735, 0.9736, 0.9738]],
        [[0.0086, 0.0086, 0.0086,  ..., 0.0086, 0.0088, 0.0086],
         [0.0086, 0.0086, 0.0086,  ..., 0.0086, 0.0088, 0.0086],
         [0.0086, 0.0086, 0.0086,  ..., 0.0086, 0.0088, 0.0086],
         [0.9742, 0.9742, 0.9741,  ..., 0.9742, 0.9737, 0.9742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:57,070 [Process: 0] Synchronize training processes
2024-08-16 15:59:57,071 [Process: 0] Evaluating...
2024-08-16 15:59:57,073 [Process: 0] EPOCH 358:
2024-08-16 15:59:57,075 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5612e-03, 6.8166e-03, 6.9061e-03,  ..., 6.7487e-03,
          6.7201e-03, 6.6961e-03],
         [6.5612e-03, 6.8166e-03, 6.9061e-03,  ..., 6.7487e-03,
          6.7201e-03, 6.6961e-03],
         [6.5612e-03, 6.8166e-03, 6.9061e-03,  ..., 6.7487e-03,
          6.7201e-03, 6.6961e-03],
         [9.8032e-01, 9.7955e-01, 9.7928e-01,  ..., 9.7975e-01,
          9.7984e-01, 9.7991e-01]],
        [[6.8698e-03, 6.3313e-03, 6.5498e-03,  ..., 4.5880e-05,
          6.5819e-03, 6.3502e-03],
         [6.8698e-03, 6.3313e-03, 6.5498e-03,  ..., 4.5880e-05,
          6.5819e-03, 6.3502e-03],
         [6.8698e-03, 6.3313e-03, 6.5498e-03,  ..., 9.9986e-01,
          6.5819e-03, 6.3502e-03],
         [9.7939e-01, 9.8101e-01, 9.8035e-01,  ..., 4.5880e-05,
          9.8025e-01, 9.8095e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 358:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0087, 0.0087,  ..., 0.0087, 0.0087, 0.0087],
         [0.0087, 0.0087, 0.0087,  ..., 0.0087, 0.0087, 0.0087],
         [0.0087, 0.0087, 0.0087,  ..., 0.0087, 0.0087, 0.0087],
         [0.9739, 0.9738, 0.9738,  ..., 0.9739, 0.9739, 0.9740]],
        [[0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0085, 0.0085],
         [0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0085, 0.0085],
         [0.0085, 0.0085, 0.0085,  ..., 0.0085, 0.0085, 0.0085],
         [0.9744, 0.9746, 0.9746,  ..., 0.9745, 0.9745, 0.9745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 15:59:59,169 [Process: 0] Synchronize training processes
2024-08-16 15:59:59,169 [Process: 0] Evaluating...
2024-08-16 15:59:59,171 [Process: 0] EPOCH 359:
2024-08-16 15:59:59,173 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7838e-03, 6.9082e-03, 6.4697e-03,  ..., 6.5899e-03,
          6.5598e-03, 6.9314e-03],
         [6.7838e-03, 6.9082e-03, 6.4697e-03,  ..., 6.5899e-03,
          6.5598e-03, 6.9314e-03],
         [6.7838e-03, 6.9082e-03, 6.4697e-03,  ..., 6.5899e-03,
          6.5598e-03, 6.9314e-03],
         [9.7965e-01, 9.7928e-01, 9.8059e-01,  ..., 9.8023e-01,
          9.8032e-01, 9.7921e-01]],
        [[6.7263e-03, 6.6020e-03, 6.6757e-03,  ..., 9.9787e-06,
          6.3797e-03, 6.4154e-03],
         [6.7263e-03, 6.6020e-03, 6.6757e-03,  ..., 9.9787e-06,
          6.3797e-03, 6.4154e-03],
         [6.7263e-03, 6.6020e-03, 6.6757e-03,  ..., 9.9997e-01,
          6.3797e-03, 6.4154e-03],
         [9.7982e-01, 9.8019e-01, 9.7997e-01,  ..., 9.9787e-06,
          9.8086e-01, 9.8075e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 359:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0087, 0.0087,  ..., 0.0087, 0.0087, 0.0088],
         [0.0087, 0.0087, 0.0087,  ..., 0.0087, 0.0087, 0.0088],
         [0.0087, 0.0087, 0.0087,  ..., 0.0087, 0.0087, 0.0088],
         [0.9740, 0.9738, 0.9738,  ..., 0.9738, 0.9739, 0.9735]],
        [[0.0084, 0.0085, 0.0083,  ..., 0.0084, 0.0085, 0.0084],
         [0.0084, 0.0085, 0.0083,  ..., 0.0084, 0.0085, 0.0084],
         [0.0084, 0.0085, 0.0083,  ..., 0.0084, 0.0085, 0.0084],
         [0.9749, 0.9745, 0.9751,  ..., 0.9748, 0.9745, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:01,222 [Process: 0] Synchronize training processes
2024-08-16 16:00:01,223 [Process: 0] Evaluating...
2024-08-16 16:00:01,225 [Process: 0] EPOCH 360:
2024-08-16 16:00:01,226 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.6959e-03, 6.4565e-03, 6.5654e-03,  ..., 6.5687e-03,
          6.2612e-03, 6.6141e-03],
         [6.6959e-03, 6.4565e-03, 6.5654e-03,  ..., 6.5687e-03,
          6.2612e-03, 6.6141e-03],
         [6.6959e-03, 6.4565e-03, 6.5654e-03,  ..., 6.5687e-03,
          6.2612e-03, 6.6141e-03],
         [9.7991e-01, 9.8063e-01, 9.8030e-01,  ..., 9.8029e-01,
          9.8122e-01, 9.8016e-01]],
        [[6.7071e-03, 6.5917e-03, 6.4012e-03,  ..., 3.8318e-04,
          6.3800e-03, 6.4030e-03],
         [6.7071e-03, 6.5917e-03, 6.4012e-03,  ..., 3.8318e-04,
          6.3800e-03, 6.4030e-03],
         [6.7071e-03, 6.5917e-03, 6.4012e-03,  ..., 9.9885e-01,
          6.3800e-03, 6.4030e-03],
         [9.7988e-01, 9.8022e-01, 9.8080e-01,  ..., 3.8318e-04,
          9.8086e-01, 9.8079e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 360:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0088, 0.0088,  ..., 0.0087, 0.0088, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0087, 0.0088, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0087, 0.0088, 0.0087],
         [0.9735, 0.9735, 0.9737,  ..., 0.9738, 0.9737, 0.9739]],
        [[0.0085, 0.0087, 0.0086,  ..., 0.0085, 0.0085, 0.0086],
         [0.0085, 0.0087, 0.0086,  ..., 0.0085, 0.0085, 0.0086],
         [0.0085, 0.0087, 0.0086,  ..., 0.0085, 0.0085, 0.0086],
         [0.9745, 0.9740, 0.9742,  ..., 0.9745, 0.9745, 0.9743]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:03,312 [Process: 0] Synchronize training processes
2024-08-16 16:00:03,313 [Process: 0] Evaluating...
2024-08-16 16:00:03,315 [Process: 0] EPOCH 361:
2024-08-16 16:00:03,317 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.7184e-03, 6.4736e-03, 6.5674e-03,  ..., 6.4440e-03,
          6.3434e-03, 6.3261e-03],
         [6.7184e-03, 6.4736e-03, 6.5674e-03,  ..., 6.4440e-03,
          6.3434e-03, 6.3261e-03],
         [6.7184e-03, 6.4736e-03, 6.5674e-03,  ..., 6.4440e-03,
          6.3434e-03, 6.3261e-03],
         [9.7984e-01, 9.8058e-01, 9.8030e-01,  ..., 9.8067e-01,
          9.8097e-01, 9.8102e-01]],
        [[6.4607e-03, 6.4289e-03, 6.2564e-03,  ..., 1.6938e-05,
          6.4198e-03, 6.3801e-03],
         [6.4607e-03, 6.4289e-03, 6.2564e-03,  ..., 1.6938e-05,
          6.4198e-03, 6.3801e-03],
         [6.4607e-03, 6.4289e-03, 6.2564e-03,  ..., 9.9995e-01,
          6.4198e-03, 6.3801e-03],
         [9.8062e-01, 9.8071e-01, 9.8123e-01,  ..., 1.6938e-05,
          9.8074e-01, 9.8086e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 361:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0088, 0.0087,  ..., 0.0087, 0.0089, 0.0088],
         [0.0088, 0.0088, 0.0087,  ..., 0.0087, 0.0089, 0.0088],
         [0.0088, 0.0088, 0.0087,  ..., 0.0087, 0.0089, 0.0088],
         [0.9736, 0.9736, 0.9738,  ..., 0.9738, 0.9734, 0.9736]],
        [[0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0085, 0.0087],
         [0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0085, 0.0087],
         [0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0085, 0.0087],
         [0.9740, 0.9742, 0.9741,  ..., 0.9742, 0.9746, 0.9739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4414e-03, 6.7475e-03, 6.6114e-03,  ..., 6.3048e-03,
          6.5053e-03, 6.4432e-03],
         [6.4414e-03, 6.7475e-03, 6.6114e-03,  ..., 6.3048e-03,
          6.5053e-03, 6.4432e-03],
         [6.4414e-03, 6.7475e-03, 6.6114e-03,  ..., 6.3048e-03,
          6.5053e-03, 6.4432e-03],
         [9.8068e-01, 9.7976e-01, 9.8017e-01,  ..., 9.8109e-01,
          9.8048e-01, 9.8067e-01]],
        [[6.5164e-03, 6.6276e-03, 6.4903e-03,  ..., 8.8569e-05,
          6.2476e-03, 6.5722e-03],
         [6.5164e-03, 6.6276e-03, 6.4903e-03,  ..., 8.8569e-05,
          6.2476e-03, 6.5722e-03],
         [6.5164e-03, 6.6276e-03, 6.4903e-03,  ..., 9.9973e-01,
          6.2476e-03, 6.5722e-03],
         [9.8045e-01, 9.8012e-01, 9.8053e-01,  ..., 8.8569e-05,
          9.8126e-01, 9.8028e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 362:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:05,411 [Process: 0] Synchronize training processes
2024-08-16 16:00:05,411 [Process: 0] Evaluating...
2024-08-16 16:00:05,425 [Process: 0] EPOCH 362:
2024-08-16 16:00:05,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0088, 0.0088,  ..., 0.0088, 0.0087, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0088, 0.0087, 0.0087],
         [0.0088, 0.0088, 0.0088,  ..., 0.0088, 0.0087, 0.0087],
         [0.9737, 0.9737, 0.9735,  ..., 0.9737, 0.9740, 0.9740]],
        [[0.0085, 0.0085, 0.0085,  ..., 0.0084, 0.0086, 0.0083],
         [0.0085, 0.0085, 0.0085,  ..., 0.0084, 0.0086, 0.0083],
         [0.0085, 0.0085, 0.0085,  ..., 0.0084, 0.0086, 0.0083],
         [0.9746, 0.9744, 0.9745,  ..., 0.9747, 0.9743, 0.9751]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5273e-03, 6.4000e-03, 6.2980e-03,  ..., 6.5523e-03,
          6.2287e-03, 6.6605e-03],
         [6.5273e-03, 6.4000e-03, 6.2980e-03,  ..., 6.5523e-03,
          6.2287e-03, 6.6605e-03],
         [6.5273e-03, 6.4000e-03, 6.2980e-03,  ..., 6.5523e-03,
          6.2287e-03, 6.6605e-03],
         [9.8042e-01, 9.8080e-01, 9.8111e-01,  ..., 9.8034e-01,
          9.8131e-01, 9.8002e-01]],
        [[6.4489e-03, 6.5838e-03, 6.3213e-03,  ..., 1.3595e-04,
          6.2797e-03, 6.6524e-03],
         [6.4489e-03, 6.5838e-03, 6.3213e-03,  ..., 1.3595e-04,
          6.2797e-03, 6.6524e-03],
         [6.4489e-03, 6.5838e-03, 6.3213e-03,  ..., 9.9959e-01,
          6.2797e-03, 6.6524e-03],
         [9.8065e-01, 9.8025e-01, 9.8104e-01,  ..., 1.3595e-04,
          9.8116e-01, 9.8004e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 363:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:07,519 [Process: 0] Synchronize training processes
2024-08-16 16:00:07,519 [Process: 0] Evaluating...
2024-08-16 16:00:07,521 [Process: 0] EPOCH 363:
2024-08-16 16:00:07,523 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0088, 0.0087, 0.0088,  ..., 0.0086, 0.0088, 0.0087],
         [0.0088, 0.0087, 0.0088,  ..., 0.0086, 0.0088, 0.0087],
         [0.0088, 0.0087, 0.0088,  ..., 0.0086, 0.0088, 0.0087],
         [0.9736, 0.9740, 0.9737,  ..., 0.9741, 0.9737, 0.9738]],
        [[0.0085, 0.0084, 0.0085,  ..., 0.0084, 0.0084, 0.0084],
         [0.0085, 0.0084, 0.0085,  ..., 0.0084, 0.0084, 0.0084],
         [0.0085, 0.0084, 0.0085,  ..., 0.0084, 0.0084, 0.0084],
         [0.9745, 0.9749, 0.9745,  ..., 0.9748, 0.9747, 0.9749]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.4728e-03, 6.3454e-03, 6.2035e-03,  ..., 6.2388e-03,
          6.0367e-03, 6.3706e-03],
         [6.4728e-03, 6.3454e-03, 6.2035e-03,  ..., 6.2388e-03,
          6.0367e-03, 6.3706e-03],
         [6.4728e-03, 6.3454e-03, 6.2035e-03,  ..., 6.2388e-03,
          6.0367e-03, 6.3706e-03],
         [9.8058e-01, 9.8096e-01, 9.8139e-01,  ..., 9.8128e-01,
          9.8189e-01, 9.8089e-01]],
        [[6.5485e-03, 6.1602e-03, 6.6633e-03,  ..., 1.9735e-04,
          6.1201e-03, 6.4623e-03],
         [6.5485e-03, 6.1602e-03, 6.6633e-03,  ..., 1.9735e-04,
          6.1201e-03, 6.4623e-03],
         [6.5485e-03, 6.1602e-03, 6.6633e-03,  ..., 9.9941e-01,
          6.1201e-03, 6.4623e-03],
         [9.8035e-01, 9.8152e-01, 9.8001e-01,  ..., 1.9735e-04,
          9.8164e-01, 9.8061e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 364:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:09,613 [Process: 0] Synchronize training processes
2024-08-16 16:00:09,614 [Process: 0] Evaluating...
2024-08-16 16:00:09,616 [Process: 0] EPOCH 364:
2024-08-16 16:00:09,618 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.9738, 0.9741, 0.9741,  ..., 0.9742, 0.9742, 0.9741]],
        [[0.0083, 0.0082, 0.0084,  ..., 0.0086, 0.0084, 0.0084],
         [0.0083, 0.0082, 0.0084,  ..., 0.0086, 0.0084, 0.0084],
         [0.0083, 0.0082, 0.0084,  ..., 0.0086, 0.0084, 0.0084],
         [0.9750, 0.9754, 0.9748,  ..., 0.9742, 0.9748, 0.9747]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3840e-03, 6.3822e-03, 6.2656e-03,  ..., 6.3628e-03,
          5.8633e-03, 6.2863e-03],
         [6.3840e-03, 6.3822e-03, 6.2656e-03,  ..., 6.3628e-03,
          5.8633e-03, 6.2863e-03],
         [6.3840e-03, 6.3822e-03, 6.2656e-03,  ..., 6.3628e-03,
          5.8633e-03, 6.2863e-03],
         [9.8085e-01, 9.8085e-01, 9.8120e-01,  ..., 9.8091e-01,
          9.8241e-01, 9.8114e-01]],
        [[6.2313e-03, 6.4946e-03, 6.2771e-03,  ..., 5.6086e-04,
          6.1817e-03, 6.2183e-03],
         [6.2313e-03, 6.4946e-03, 6.2771e-03,  ..., 5.6086e-04,
          6.1817e-03, 6.2183e-03],
         [6.2313e-03, 6.4946e-03, 6.2771e-03,  ..., 9.9832e-01,
          6.1817e-03, 6.2183e-03],
         [9.8131e-01, 9.8052e-01, 9.8117e-01,  ..., 5.6086e-04,
          9.8145e-01, 9.8135e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 365:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:11,696 [Process: 0] Synchronize training processes
2024-08-16 16:00:11,696 [Process: 0] Evaluating...
2024-08-16 16:00:11,698 [Process: 0] EPOCH 365:
2024-08-16 16:00:11,700 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0086, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.0085, 0.0086, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.0085, 0.0086, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.9744, 0.9742, 0.9741,  ..., 0.9743, 0.9742, 0.9743]],
        [[0.0083, 0.0083, 0.0082,  ..., 0.0085, 0.0083, 0.0082],
         [0.0083, 0.0083, 0.0082,  ..., 0.0085, 0.0083, 0.0082],
         [0.0083, 0.0083, 0.0082,  ..., 0.0085, 0.0083, 0.0082],
         [0.9751, 0.9750, 0.9753,  ..., 0.9745, 0.9750, 0.9755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3369e-03, 6.2985e-03, 6.4635e-03,  ..., 6.3850e-03,
          6.1319e-03, 6.2738e-03],
         [6.3369e-03, 6.2985e-03, 6.4635e-03,  ..., 6.3850e-03,
          6.1319e-03, 6.2738e-03],
         [6.3369e-03, 6.2985e-03, 6.4635e-03,  ..., 6.3850e-03,
          6.1319e-03, 6.2738e-03],
         [9.8099e-01, 9.8110e-01, 9.8061e-01,  ..., 9.8085e-01,
          9.8160e-01, 9.8118e-01]],
        [[6.5018e-03, 6.1449e-03, 5.9391e-03,  ..., 1.0912e-05,
          6.3985e-03, 6.1556e-03],
         [6.5018e-03, 6.1449e-03, 5.9391e-03,  ..., 1.0912e-05,
          6.3985e-03, 6.1556e-03],
         [6.5018e-03, 6.1449e-03, 5.9391e-03,  ..., 9.9997e-01,
          6.3985e-03, 6.1556e-03],
         [9.8049e-01, 9.8157e-01, 9.8218e-01,  ..., 1.0912e-05,
          9.8080e-01, 9.8153e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 366:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:13,766 [Process: 0] Synchronize training processes
2024-08-16 16:00:13,767 [Process: 0] Evaluating...
2024-08-16 16:00:13,769 [Process: 0] EPOCH 366:
2024-08-16 16:00:13,770 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0085, 0.0086,  ..., 0.0087, 0.0085, 0.0086],
         [0.0086, 0.0085, 0.0086,  ..., 0.0087, 0.0085, 0.0086],
         [0.0086, 0.0085, 0.0086,  ..., 0.0087, 0.0085, 0.0086],
         [0.9741, 0.9745, 0.9742,  ..., 0.9740, 0.9745, 0.9743]],
        [[0.0084, 0.0081, 0.0082,  ..., 0.0084, 0.0083, 0.0082],
         [0.0084, 0.0081, 0.0082,  ..., 0.0084, 0.0083, 0.0082],
         [0.0084, 0.0081, 0.0082,  ..., 0.0084, 0.0083, 0.0082],
         [0.9748, 0.9756, 0.9754,  ..., 0.9749, 0.9750, 0.9754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.5240e-03, 6.5193e-03, 6.1416e-03,  ..., 6.1776e-03,
          6.4347e-03, 6.4308e-03],
         [6.5240e-03, 6.5193e-03, 6.1416e-03,  ..., 6.1776e-03,
          6.4347e-03, 6.4308e-03],
         [6.5240e-03, 6.5193e-03, 6.1416e-03,  ..., 6.1776e-03,
          6.4347e-03, 6.4308e-03],
         [9.8043e-01, 9.8044e-01, 9.8158e-01,  ..., 9.8147e-01,
          9.8070e-01, 9.8071e-01]],
        [[6.0657e-03, 6.2490e-03, 6.3578e-03,  ..., 1.8242e-05,
          6.4393e-03, 6.2346e-03],
         [6.0657e-03, 6.2490e-03, 6.3578e-03,  ..., 1.8242e-05,
          6.4393e-03, 6.2346e-03],
         [6.0657e-03, 6.2490e-03, 6.3578e-03,  ..., 9.9995e-01,
          6.4393e-03, 6.2346e-03],
         [9.8180e-01, 9.8125e-01, 9.8093e-01,  ..., 1.8242e-05,
          9.8068e-01, 9.8130e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 367:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:15,832 [Process: 0] Synchronize training processes
2024-08-16 16:00:15,833 [Process: 0] Evaluating...
2024-08-16 16:00:15,835 [Process: 0] EPOCH 367:
2024-08-16 16:00:15,837 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0086, 0.0086,  ..., 0.0085, 0.0085, 0.0085],
         [0.0085, 0.0086, 0.0086,  ..., 0.0085, 0.0085, 0.0085],
         [0.0085, 0.0086, 0.0086,  ..., 0.0085, 0.0085, 0.0085],
         [0.9744, 0.9742, 0.9743,  ..., 0.9745, 0.9745, 0.9745]],
        [[0.0082, 0.0083, 0.0085,  ..., 0.0084, 0.0081, 0.0084],
         [0.0082, 0.0083, 0.0085,  ..., 0.0084, 0.0081, 0.0084],
         [0.0082, 0.0083, 0.0085,  ..., 0.0084, 0.0081, 0.0084],
         [0.9753, 0.9751, 0.9745,  ..., 0.9748, 0.9756, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2538e-03, 6.2978e-03, 6.1193e-03,  ..., 6.3087e-03,
          6.1332e-03, 6.3818e-03],
         [6.2538e-03, 6.2978e-03, 6.1193e-03,  ..., 6.3087e-03,
          6.1332e-03, 6.3818e-03],
         [6.2538e-03, 6.2978e-03, 6.1193e-03,  ..., 6.3087e-03,
          6.1332e-03, 6.3818e-03],
         [9.8124e-01, 9.8111e-01, 9.8164e-01,  ..., 9.8107e-01,
          9.8160e-01, 9.8085e-01]],
        [[5.9945e-03, 6.5005e-03, 6.2985e-03,  ..., 1.9465e-05,
          6.2395e-03, 6.3282e-03],
         [5.9945e-03, 6.5005e-03, 6.2985e-03,  ..., 1.9465e-05,
          6.2395e-03, 6.3282e-03],
         [5.9945e-03, 6.5005e-03, 6.2985e-03,  ..., 9.9994e-01,
          6.2395e-03, 6.3282e-03],
         [9.8202e-01, 9.8050e-01, 9.8110e-01,  ..., 1.9465e-05,
          9.8128e-01, 9.8102e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 368:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:17,918 [Process: 0] Synchronize training processes
2024-08-16 16:00:17,918 [Process: 0] Evaluating...
2024-08-16 16:00:17,920 [Process: 0] EPOCH 368:
2024-08-16 16:00:17,922 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0085, 0.0085,  ..., 0.0085, 0.0085, 0.0084],
         [0.0084, 0.0085, 0.0085,  ..., 0.0085, 0.0085, 0.0084],
         [0.0084, 0.0085, 0.0085,  ..., 0.0085, 0.0085, 0.0084],
         [0.9747, 0.9744, 0.9744,  ..., 0.9746, 0.9745, 0.9747]],
        [[0.0082, 0.0082, 0.0082,  ..., 0.0081, 0.0082, 0.0082],
         [0.0082, 0.0082, 0.0082,  ..., 0.0081, 0.0082, 0.0082],
         [0.0082, 0.0082, 0.0082,  ..., 0.0081, 0.0082, 0.0082],
         [0.9755, 0.9755, 0.9754,  ..., 0.9758, 0.9754, 0.9755]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2817e-03, 6.3174e-03, 6.1180e-03,  ..., 6.4723e-03,
          5.9114e-03, 6.4883e-03],
         [6.2817e-03, 6.3174e-03, 6.1180e-03,  ..., 6.4723e-03,
          5.9114e-03, 6.4883e-03],
         [6.2817e-03, 6.3174e-03, 6.1180e-03,  ..., 6.4723e-03,
          5.9114e-03, 6.4883e-03],
         [9.8115e-01, 9.8105e-01, 9.8165e-01,  ..., 9.8058e-01,
          9.8227e-01, 9.8054e-01]],
        [[6.4815e-03, 6.3485e-03, 6.0934e-03,  ..., 2.0135e-05,
          6.0221e-03, 6.2436e-03],
         [6.4815e-03, 6.3485e-03, 6.0934e-03,  ..., 2.0135e-05,
          6.0221e-03, 6.2436e-03],
         [6.4815e-03, 6.3485e-03, 6.0934e-03,  ..., 9.9994e-01,
          6.0221e-03, 6.2436e-03],
         [9.8056e-01, 9.8095e-01, 9.8172e-01,  ..., 2.0135e-05,
          9.8193e-01, 9.8127e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 369:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:19,996 [Process: 0] Synchronize training processes
2024-08-16 16:00:19,996 [Process: 0] Evaluating...
2024-08-16 16:00:19,998 [Process: 0] EPOCH 369:
2024-08-16 16:00:20,000 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0085, 0.0085, 0.0086,  ..., 0.0085, 0.0085, 0.0084],
         [0.0085, 0.0085, 0.0086,  ..., 0.0085, 0.0085, 0.0084],
         [0.0085, 0.0085, 0.0086,  ..., 0.0085, 0.0085, 0.0084],
         [0.9744, 0.9746, 0.9743,  ..., 0.9744, 0.9745, 0.9747]],
        [[0.0080, 0.0082, 0.0082,  ..., 0.0081, 0.0081, 0.0083],
         [0.0080, 0.0082, 0.0082,  ..., 0.0081, 0.0081, 0.0083],
         [0.0080, 0.0082, 0.0082,  ..., 0.0081, 0.0081, 0.0083],
         [0.9760, 0.9755, 0.9755,  ..., 0.9757, 0.9757, 0.9752]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3631e-03, 6.1422e-03, 6.3526e-03,  ..., 6.2717e-03,
          6.0941e-03, 6.1443e-03],
         [6.3631e-03, 6.1422e-03, 6.3526e-03,  ..., 6.2717e-03,
          6.0941e-03, 6.1443e-03],
         [6.3631e-03, 6.1422e-03, 6.3526e-03,  ..., 6.2717e-03,
          6.0941e-03, 6.1443e-03],
         [9.8091e-01, 9.8157e-01, 9.8094e-01,  ..., 9.8119e-01,
          9.8172e-01, 9.8157e-01]],
        [[6.1414e-03, 6.1031e-03, 6.1137e-03,  ..., 2.3605e-04,
          5.9727e-03, 6.3359e-03],
         [6.1414e-03, 6.1031e-03, 6.1137e-03,  ..., 2.3605e-04,
          5.9727e-03, 6.3359e-03],
         [6.1414e-03, 6.1031e-03, 6.1137e-03,  ..., 9.9929e-01,
          5.9727e-03, 6.3359e-03],
         [9.8158e-01, 9.8169e-01, 9.8166e-01,  ..., 2.3605e-04,
          9.8208e-01, 9.8099e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 370:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:22,138 [Process: 0] Synchronize training processes
2024-08-16 16:00:22,139 [Process: 0] Evaluating...
2024-08-16 16:00:22,140 [Process: 0] EPOCH 370:
2024-08-16 16:00:22,142 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0086, 0.0085, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.0086, 0.0085, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.0086, 0.0085, 0.0086,  ..., 0.0086, 0.0086, 0.0086],
         [0.9743, 0.9744, 0.9741,  ..., 0.9742, 0.9742, 0.9741]],
        [[0.0083, 0.0084, 0.0083,  ..., 0.0082, 0.0083, 0.0084],
         [0.0083, 0.0084, 0.0083,  ..., 0.0082, 0.0083, 0.0084],
         [0.0083, 0.0084, 0.0083,  ..., 0.0082, 0.0083, 0.0084],
         [0.9750, 0.9748, 0.9752,  ..., 0.9754, 0.9752, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2480e-03, 6.3557e-03, 6.3918e-03,  ..., 6.4173e-03,
          6.2454e-03, 6.2075e-03],
         [6.2480e-03, 6.3557e-03, 6.3918e-03,  ..., 6.4173e-03,
          6.2454e-03, 6.2075e-03],
         [6.2480e-03, 6.3557e-03, 6.3918e-03,  ..., 6.4173e-03,
          6.2454e-03, 6.2075e-03],
         [9.8126e-01, 9.8093e-01, 9.8082e-01,  ..., 9.8075e-01,
          9.8126e-01, 9.8138e-01]],
        [[6.0135e-03, 6.3994e-03, 6.1594e-03,  ..., 4.8477e-04,
          6.5409e-03, 6.4455e-03],
         [6.0135e-03, 6.3994e-03, 6.1594e-03,  ..., 4.8477e-04,
          6.5409e-03, 6.4455e-03],
         [6.0135e-03, 6.3994e-03, 6.1594e-03,  ..., 9.9855e-01,
          6.5409e-03, 6.4455e-03],
         [9.8196e-01, 9.8080e-01, 9.8152e-01,  ..., 4.8477e-04,
          9.8038e-01, 9.8066e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:24,246 [Process: 0] Synchronize training processes
2024-08-16 16:00:24,247 [Process: 0] Evaluating...
2024-08-16 16:00:24,249 [Process: 0] EPOCH 371:
2024-08-16 16:00:24,251 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 371:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0087, 0.0087],
         [0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0087, 0.0087],
         [0.0087, 0.0086, 0.0086,  ..., 0.0086, 0.0087, 0.0087],
         [0.9740, 0.9741, 0.9741,  ..., 0.9741, 0.9738, 0.9740]],
        [[0.0084, 0.0085, 0.0083,  ..., 0.0083, 0.0082, 0.0084],
         [0.0084, 0.0085, 0.0083,  ..., 0.0083, 0.0082, 0.0084],
         [0.0084, 0.0085, 0.0083,  ..., 0.0083, 0.0082, 0.0084],
         [0.9747, 0.9745, 0.9751,  ..., 0.9752, 0.9755, 0.9748]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
2024-08-16 16:00:26,342 [Process: 0] Synchronize training processes
2024-08-16 16:00:26,342 [Process: 0] Evaluating...
2024-08-16 16:00:26,351 [Process: 0] EPOCH 372:
2024-08-16 16:00:26,353 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[6.2955e-03, 6.3935e-03, 6.3557e-03,  ..., 6.1325e-03,
          6.0460e-03, 6.2043e-03],
         [6.2955e-03, 6.3935e-03, 6.3557e-03,  ..., 6.1325e-03,
          6.0460e-03, 6.2043e-03],
         [6.2955e-03, 6.3935e-03, 6.3557e-03,  ..., 6.1325e-03,
          6.0460e-03, 6.2043e-03],
         [9.8111e-01, 9.8082e-01, 9.8093e-01,  ..., 9.8160e-01,
          9.8186e-01, 9.8139e-01]],
        [[6.0065e-03, 6.2798e-03, 6.2783e-03,  ..., 6.6917e-05,
          6.3013e-03, 6.1090e-03],
         [6.0065e-03, 6.2798e-03, 6.2783e-03,  ..., 6.6917e-05,
          6.3013e-03, 6.1090e-03],
         [6.0065e-03, 6.2798e-03, 6.2783e-03,  ..., 9.9980e-01,
          6.3013e-03, 6.1090e-03],
         [9.8198e-01, 9.8116e-01, 9.8117e-01,  ..., 6.6917e-05,
          9.8110e-01, 9.8167e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 372:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0084, 0.0085,  ..., 0.0085, 0.0084, 0.0084],
         [0.0084, 0.0084, 0.0085,  ..., 0.0085, 0.0084, 0.0084],
         [0.0084, 0.0084, 0.0085,  ..., 0.0085, 0.0084, 0.0084],
         [0.9748, 0.9748, 0.9745,  ..., 0.9745, 0.9747, 0.9747]],
        [[0.0082, 0.0080, 0.0081,  ..., 0.0081, 0.0081, 0.0082],
         [0.0082, 0.0080, 0.0081,  ..., 0.0081, 0.0081, 0.0082],
         [0.0082, 0.0080, 0.0081,  ..., 0.0081, 0.0081, 0.0082],
         [0.9753, 0.9759, 0.9758,  ..., 0.9758, 0.9756, 0.9754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 16:00:28,449 [Process: 0] Synchronize training processes
2024-08-16 16:00:28,450 [Process: 0] Evaluating...
2024-08-16 16:00:28,452 [Process: 0] EPOCH 373:
2024-08-16 16:00:28,454 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2073e-03, 6.5387e-03, 6.1134e-03,  ..., 6.2443e-03,
          5.9377e-03, 6.1648e-03],
         [6.2073e-03, 6.5387e-03, 6.1134e-03,  ..., 6.2443e-03,
          5.9377e-03, 6.1648e-03],
         [6.2073e-03, 6.5387e-03, 6.1134e-03,  ..., 6.2443e-03,
          5.9377e-03, 6.1648e-03],
         [9.8138e-01, 9.8038e-01, 9.8166e-01,  ..., 9.8127e-01,
          9.8219e-01, 9.8151e-01]],
        [[6.0385e-03, 6.4357e-03, 5.8395e-03,  ..., 1.2680e-04,
          6.0218e-03, 6.2267e-03],
         [6.0385e-03, 6.4357e-03, 5.8395e-03,  ..., 1.2680e-04,
          6.0218e-03, 6.2267e-03],
         [6.0385e-03, 6.4357e-03, 5.8395e-03,  ..., 9.9962e-01,
          6.0218e-03, 6.2267e-03],
         [9.8188e-01, 9.8069e-01, 9.8248e-01,  ..., 1.2680e-04,
          9.8193e-01, 9.8132e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 373:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0084, 0.0083, 0.0086,  ..., 0.0084, 0.0085, 0.0084],
         [0.0084, 0.0083, 0.0086,  ..., 0.0084, 0.0085, 0.0084],
         [0.0084, 0.0083, 0.0086,  ..., 0.0084, 0.0085, 0.0084],
         [0.9748, 0.9750, 0.9743,  ..., 0.9749, 0.9744, 0.9747]],
        [[0.0080, 0.0079, 0.0080,  ..., 0.0079, 0.0081, 0.0081],
         [0.0080, 0.0079, 0.0080,  ..., 0.0079, 0.0081, 0.0081],
         [0.0080, 0.0079, 0.0080,  ..., 0.0079, 0.0081, 0.0081],
         [0.9759, 0.9762, 0.9761,  ..., 0.9763, 0.9758, 0.9758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:30,545 [Process: 0] Synchronize training processes
2024-08-16 16:00:30,545 [Process: 0] Evaluating...
2024-08-16 16:00:30,547 [Process: 0] EPOCH 374:
2024-08-16 16:00:30,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7747e-03, 6.4672e-03, 6.1115e-03,  ..., 6.0682e-03,
          5.9363e-03, 6.1855e-03],
         [5.7747e-03, 6.4672e-03, 6.1115e-03,  ..., 6.0682e-03,
          5.9363e-03, 6.1855e-03],
         [5.7747e-03, 6.4672e-03, 6.1115e-03,  ..., 6.0682e-03,
          5.9363e-03, 6.1855e-03],
         [9.8268e-01, 9.8060e-01, 9.8167e-01,  ..., 9.8180e-01,
          9.8219e-01, 9.8144e-01]],
        [[5.8652e-03, 6.0965e-03, 6.3512e-03,  ..., 8.5167e-04,
          5.9687e-03, 6.1085e-03],
         [5.8652e-03, 6.0965e-03, 6.3512e-03,  ..., 8.5167e-04,
          5.9687e-03, 6.1085e-03],
         [5.8652e-03, 6.0965e-03, 6.3512e-03,  ..., 9.9744e-01,
          5.9687e-03, 6.1085e-03],
         [9.8240e-01, 9.8171e-01, 9.8095e-01,  ..., 8.5167e-04,
          9.8209e-01, 9.8167e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 374:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0083, 0.0083, 0.0083,  ..., 0.0083, 0.0082, 0.0082],
         [0.0083, 0.0083, 0.0083,  ..., 0.0083, 0.0082, 0.0082],
         [0.0083, 0.0083, 0.0083,  ..., 0.0083, 0.0082, 0.0082],
         [0.9751, 0.9750, 0.9751,  ..., 0.9751, 0.9755, 0.9753]],
        [[0.0079, 0.0079, 0.0078,  ..., 0.0081, 0.0079, 0.0080],
         [0.0079, 0.0079, 0.0078,  ..., 0.0081, 0.0079, 0.0080],
         [0.0079, 0.0079, 0.0078,  ..., 0.0081, 0.0079, 0.0080],
         [0.9763, 0.9762, 0.9765,  ..., 0.9758, 0.9762, 0.9760]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:32,630 [Process: 0] Synchronize training processes
2024-08-16 16:00:32,631 [Process: 0] Evaluating...
2024-08-16 16:00:32,633 [Process: 0] EPOCH 375:
2024-08-16 16:00:32,634 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0062, 0.0061,  ..., 0.0063, 0.0062, 0.0062],
         [0.0060, 0.0062, 0.0061,  ..., 0.0063, 0.0062, 0.0062],
         [0.0060, 0.0062, 0.0061,  ..., 0.0063, 0.0062, 0.0062],
         [0.9820, 0.9815, 0.9817,  ..., 0.9812, 0.9815, 0.9813]],
        [[0.0061, 0.0061, 0.0058,  ..., 0.0013, 0.0061, 0.0061],
         [0.0061, 0.0061, 0.0058,  ..., 0.0013, 0.0061, 0.0061],
         [0.0061, 0.0061, 0.0058,  ..., 0.9961, 0.0061, 0.0061],
         [0.9818, 0.9818, 0.9825,  ..., 0.0013, 0.9816, 0.9817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 375:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0081, 0.0082,  ..., 0.0082, 0.0081, 0.0082],
         [0.0082, 0.0081, 0.0082,  ..., 0.0082, 0.0081, 0.0082],
         [0.0082, 0.0081, 0.0082,  ..., 0.0082, 0.0081, 0.0082],
         [0.9755, 0.9756, 0.9754,  ..., 0.9754, 0.9757, 0.9755]],
        [[0.0077, 0.0077, 0.0078,  ..., 0.0078, 0.0078, 0.0081],
         [0.0077, 0.0077, 0.0078,  ..., 0.0078, 0.0078, 0.0081],
         [0.0077, 0.0077, 0.0078,  ..., 0.0078, 0.0078, 0.0081],
         [0.9770, 0.9768, 0.9766,  ..., 0.9766, 0.9765, 0.9758]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:34,715 [Process: 0] Synchronize training processes
2024-08-16 16:00:34,716 [Process: 0] Evaluating...
2024-08-16 16:00:34,718 [Process: 0] EPOCH 376:
2024-08-16 16:00:34,719 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3468e-03, 6.0966e-03, 6.0421e-03,  ..., 6.0984e-03,
          6.1105e-03, 5.9344e-03],
         [6.3468e-03, 6.0966e-03, 6.0421e-03,  ..., 6.0984e-03,
          6.1105e-03, 5.9344e-03],
         [6.3468e-03, 6.0966e-03, 6.0421e-03,  ..., 6.0984e-03,
          6.1105e-03, 5.9344e-03],
         [9.8096e-01, 9.8171e-01, 9.8187e-01,  ..., 9.8170e-01,
          9.8167e-01, 9.8220e-01]],
        [[5.7834e-03, 5.9231e-03, 6.0414e-03,  ..., 1.0761e-04,
          6.1915e-03, 5.9922e-03],
         [5.7834e-03, 5.9231e-03, 6.0414e-03,  ..., 1.0761e-04,
          6.1915e-03, 5.9922e-03],
         [5.7834e-03, 5.9231e-03, 6.0414e-03,  ..., 9.9968e-01,
          6.1915e-03, 5.9922e-03],
         [9.8265e-01, 9.8223e-01, 9.8188e-01,  ..., 1.0761e-04,
          9.8143e-01, 9.8202e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 376:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0080, 0.0080,  ..., 0.0081, 0.0081, 0.0079],
         [0.0081, 0.0080, 0.0080,  ..., 0.0081, 0.0081, 0.0079],
         [0.0081, 0.0080, 0.0080,  ..., 0.0081, 0.0081, 0.0079],
         [0.9757, 0.9760, 0.9759,  ..., 0.9758, 0.9757, 0.9762]],
        [[0.0076, 0.0075, 0.0075,  ..., 0.0076, 0.0074, 0.0075],
         [0.0076, 0.0075, 0.0075,  ..., 0.0076, 0.0074, 0.0075],
         [0.0076, 0.0075, 0.0075,  ..., 0.0076, 0.0074, 0.0075],
         [0.9773, 0.9775, 0.9776,  ..., 0.9771, 0.9778, 0.9776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:36,814 [Process: 0] Synchronize training processes
2024-08-16 16:00:36,815 [Process: 0] Evaluating...
2024-08-16 16:00:36,817 [Process: 0] EPOCH 377:
2024-08-16 16:00:36,819 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0731e-03, 6.0742e-03, 6.2198e-03,  ..., 6.0399e-03,
          5.9538e-03, 5.8492e-03],
         [6.0731e-03, 6.0742e-03, 6.2198e-03,  ..., 6.0399e-03,
          5.9538e-03, 5.8492e-03],
         [6.0731e-03, 6.0742e-03, 6.2198e-03,  ..., 6.0399e-03,
          5.9538e-03, 5.8492e-03],
         [9.8178e-01, 9.8178e-01, 9.8134e-01,  ..., 9.8188e-01,
          9.8214e-01, 9.8245e-01]],
        [[6.2160e-03, 5.9919e-03, 5.9521e-03,  ..., 5.1309e-05,
          5.9696e-03, 5.9304e-03],
         [6.2160e-03, 5.9919e-03, 5.9521e-03,  ..., 5.1309e-05,
          5.9696e-03, 5.9304e-03],
         [6.2160e-03, 5.9919e-03, 5.9521e-03,  ..., 9.9985e-01,
          5.9696e-03, 5.9304e-03],
         [9.8135e-01, 9.8202e-01, 9.8214e-01,  ..., 5.1309e-05,
          9.8209e-01, 9.8221e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 377:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0081, 0.0082,  ..., 0.0081, 0.0081, 0.0083],
         [0.0081, 0.0081, 0.0082,  ..., 0.0081, 0.0081, 0.0083],
         [0.0081, 0.0081, 0.0082,  ..., 0.0081, 0.0081, 0.0083],
         [0.9757, 0.9757, 0.9753,  ..., 0.9756, 0.9756, 0.9752]],
        [[0.0076, 0.0077, 0.0078,  ..., 0.0077, 0.0080, 0.0078],
         [0.0076, 0.0077, 0.0078,  ..., 0.0077, 0.0080, 0.0078],
         [0.0076, 0.0077, 0.0078,  ..., 0.0077, 0.0080, 0.0078],
         [0.9771, 0.9768, 0.9765,  ..., 0.9769, 0.9760, 0.9765]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:38,902 [Process: 0] Synchronize training processes
2024-08-16 16:00:38,902 [Process: 0] Evaluating...
2024-08-16 16:00:38,904 [Process: 0] EPOCH 378:
2024-08-16 16:00:38,906 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0061, 0.0060, 0.0061,  ..., 0.0060, 0.0063, 0.0062],
         [0.0061, 0.0060, 0.0061,  ..., 0.0060, 0.0063, 0.0062],
         [0.0061, 0.0060, 0.0061,  ..., 0.0060, 0.0063, 0.0062],
         [0.9818, 0.9819, 0.9816,  ..., 0.9821, 0.9812, 0.9814]],
        [[0.0061, 0.0060, 0.0059,  ..., 0.0011, 0.0062, 0.0060],
         [0.0061, 0.0060, 0.0059,  ..., 0.0011, 0.0062, 0.0060],
         [0.0061, 0.0060, 0.0059,  ..., 0.9967, 0.0062, 0.0060],
         [0.9817, 0.9819, 0.9823,  ..., 0.0011, 0.9814, 0.9819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 378:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0082, 0.0081,  ..., 0.0082, 0.0082, 0.0082],
         [0.0082, 0.0082, 0.0081,  ..., 0.0082, 0.0082, 0.0082],
         [0.0082, 0.0082, 0.0081,  ..., 0.0082, 0.0082, 0.0082],
         [0.9753, 0.9754, 0.9757,  ..., 0.9753, 0.9755, 0.9755]],
        [[0.0078, 0.0078, 0.0079,  ..., 0.0079, 0.0079, 0.0078],
         [0.0078, 0.0078, 0.0079,  ..., 0.0079, 0.0079, 0.0078],
         [0.0078, 0.0078, 0.0079,  ..., 0.0079, 0.0079, 0.0078],
         [0.9767, 0.9765, 0.9763,  ..., 0.9762, 0.9764, 0.9767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:40,989 [Process: 0] Synchronize training processes
2024-08-16 16:00:40,990 [Process: 0] Evaluating...
2024-08-16 16:00:40,992 [Process: 0] EPOCH 379:
2024-08-16 16:00:40,994 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.2117e-03, 5.8996e-03, 6.0793e-03,  ..., 6.2011e-03,
          6.2870e-03, 6.3372e-03],
         [6.2117e-03, 5.8996e-03, 6.0793e-03,  ..., 6.2011e-03,
          6.2870e-03, 6.3372e-03],
         [6.2117e-03, 5.8996e-03, 6.0793e-03,  ..., 6.2011e-03,
          6.2870e-03, 6.3372e-03],
         [9.8137e-01, 9.8230e-01, 9.8176e-01,  ..., 9.8140e-01,
          9.8114e-01, 9.8099e-01]],
        [[5.9146e-03, 6.2083e-03, 6.0909e-03,  ..., 3.2142e-05,
          6.1943e-03, 5.8658e-03],
         [5.9146e-03, 6.2083e-03, 6.0909e-03,  ..., 3.2142e-05,
          6.1943e-03, 5.8658e-03],
         [5.9146e-03, 6.2083e-03, 6.0909e-03,  ..., 9.9990e-01,
          6.1943e-03, 5.8658e-03],
         [9.8226e-01, 9.8137e-01, 9.8173e-01,  ..., 3.2142e-05,
          9.8142e-01, 9.8240e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 379:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0082, 0.0081, 0.0082,  ..., 0.0082, 0.0082, 0.0081],
         [0.0082, 0.0081, 0.0082,  ..., 0.0082, 0.0082, 0.0081],
         [0.0082, 0.0081, 0.0082,  ..., 0.0082, 0.0082, 0.0081],
         [0.9754, 0.9756, 0.9755,  ..., 0.9753, 0.9754, 0.9756]],
        [[0.0078, 0.0080, 0.0078,  ..., 0.0078, 0.0077, 0.0078],
         [0.0078, 0.0080, 0.0078,  ..., 0.0078, 0.0077, 0.0078],
         [0.0078, 0.0080, 0.0078,  ..., 0.0078, 0.0077, 0.0078],
         [0.9766, 0.9761, 0.9767,  ..., 0.9766, 0.9768, 0.9767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:43,126 [Process: 0] Synchronize training processes
2024-08-16 16:00:43,126 [Process: 0] Evaluating...
2024-08-16 16:00:43,128 [Process: 0] EPOCH 380:
2024-08-16 16:00:43,130 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.0617e-03, 5.9068e-03, 5.9069e-03,  ..., 5.9808e-03,
          6.2847e-03, 5.7175e-03],
         [6.0617e-03, 5.9068e-03, 5.9069e-03,  ..., 5.9808e-03,
          6.2847e-03, 5.7175e-03],
         [6.0617e-03, 5.9068e-03, 5.9069e-03,  ..., 5.9808e-03,
          6.2847e-03, 5.7175e-03],
         [9.8181e-01, 9.8228e-01, 9.8228e-01,  ..., 9.8206e-01,
          9.8115e-01, 9.8285e-01]],
        [[6.0462e-03, 5.7069e-03, 5.9205e-03,  ..., 5.7967e-04,
          6.0300e-03, 6.0499e-03],
         [6.0462e-03, 5.7069e-03, 5.9205e-03,  ..., 5.7967e-04,
          6.0300e-03, 6.0499e-03],
         [6.0462e-03, 5.7069e-03, 5.9205e-03,  ..., 9.9826e-01,
          6.0300e-03, 6.0499e-03],
         [9.8186e-01, 9.8288e-01, 9.8224e-01,  ..., 5.7967e-04,
          9.8191e-01, 9.8185e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 380:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0082, 0.0082,  ..., 0.0081, 0.0081, 0.0081],
         [0.0080, 0.0082, 0.0082,  ..., 0.0081, 0.0081, 0.0081],
         [0.0080, 0.0082, 0.0082,  ..., 0.0081, 0.0081, 0.0081],
         [0.9761, 0.9755, 0.9754,  ..., 0.9758, 0.9758, 0.9757]],
        [[0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0079],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0079],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0078, 0.0079],
         [0.9765, 0.9767, 0.9765,  ..., 0.9767, 0.9766, 0.9763]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:45,198 [Process: 0] Synchronize training processes
2024-08-16 16:00:45,199 [Process: 0] Evaluating...
2024-08-16 16:00:45,201 [Process: 0] EPOCH 381:
2024-08-16 16:00:45,203 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8408e-03, 6.0064e-03, 5.7197e-03,  ..., 6.0741e-03,
          5.5377e-03, 6.0117e-03],
         [5.8408e-03, 6.0064e-03, 5.7197e-03,  ..., 6.0741e-03,
          5.5377e-03, 6.0117e-03],
         [5.8408e-03, 6.0064e-03, 5.7197e-03,  ..., 6.0741e-03,
          5.5377e-03, 6.0117e-03],
         [9.8248e-01, 9.8198e-01, 9.8284e-01,  ..., 9.8178e-01,
          9.8339e-01, 9.8196e-01]],
        [[5.8955e-03, 6.0216e-03, 5.9625e-03,  ..., 7.4639e-04,
          6.1794e-03, 5.8300e-03],
         [5.8955e-03, 6.0216e-03, 5.9625e-03,  ..., 7.4639e-04,
          6.1794e-03, 5.8300e-03],
         [5.8955e-03, 6.0216e-03, 5.9625e-03,  ..., 9.9776e-01,
          6.1794e-03, 5.8300e-03],
         [9.8231e-01, 9.8194e-01, 9.8211e-01,  ..., 7.4639e-04,
          9.8146e-01, 9.8251e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 381:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0081, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0080],
         [0.0081, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0080],
         [0.0081, 0.0080, 0.0080,  ..., 0.0080, 0.0080, 0.0080],
         [0.9756, 0.9759, 0.9759,  ..., 0.9759, 0.9760, 0.9761]],
        [[0.0076, 0.0076, 0.0075,  ..., 0.0076, 0.0078, 0.0076],
         [0.0076, 0.0076, 0.0075,  ..., 0.0076, 0.0078, 0.0076],
         [0.0076, 0.0076, 0.0075,  ..., 0.0076, 0.0078, 0.0076],
         [0.9771, 0.9771, 0.9774,  ..., 0.9772, 0.9765, 0.9773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:00:47,298 [Process: 0] Synchronize training processes
2024-08-16 16:00:47,299 [Process: 0] Evaluating...
2024-08-16 16:00:47,307 [Process: 0] EPOCH 382:
2024-08-16 16:00:47,309 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0059, 0.0058, 0.0062,  ..., 0.0061, 0.0057, 0.0063],
         [0.0059, 0.0058, 0.0062,  ..., 0.0061, 0.0057, 0.0063],
         [0.0059, 0.0058, 0.0062,  ..., 0.0061, 0.0057, 0.0063],
         [0.9824, 0.9827, 0.9814,  ..., 0.9817, 0.9828, 0.9810]],
        [[0.0059, 0.0058, 0.0058,  ..., 0.0015, 0.0058, 0.0059],
         [0.0059, 0.0058, 0.0058,  ..., 0.0014, 0.0058, 0.0059],
         [0.0059, 0.0058, 0.0058,  ..., 0.9957, 0.0058, 0.0059],
         [0.9822, 0.9827, 0.9825,  ..., 0.0014, 0.9827, 0.9824]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 382:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0080, 0.0080,  ..., 0.0080, 0.0079, 0.0080],
         [0.0079, 0.0080, 0.0080,  ..., 0.0080, 0.0079, 0.0080],
         [0.0079, 0.0080, 0.0080,  ..., 0.0080, 0.0079, 0.0080],
         [0.9763, 0.9759, 0.9760,  ..., 0.9761, 0.9762, 0.9761]],
        [[0.0076, 0.0076, 0.0078,  ..., 0.0078, 0.0076, 0.0076],
         [0.0076, 0.0076, 0.0078,  ..., 0.0078, 0.0076, 0.0076],
         [0.0076, 0.0076, 0.0078,  ..., 0.0078, 0.0076, 0.0076],
         [0.9772, 0.9771, 0.9767,  ..., 0.9766, 0.9772, 0.9772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.1038e-03, 5.7537e-03, 5.8581e-03,  ..., 5.8633e-03,
          5.2840e-03, 5.8917e-03],
         [6.1038e-03, 5.7537e-03, 5.8581e-03,  ..., 5.8633e-03,
          5.2840e-03, 5.8917e-03],
         [6.1038e-03, 5.7537e-03, 5.8581e-03,  ..., 5.8633e-03,
          5.2840e-03, 5.8917e-03],
         [9.8169e-01, 9.8274e-01, 9.8243e-01,  ..., 9.8241e-01,
          9.8415e-01, 9.8232e-01]],
        [[6.0063e-03, 5.9089e-03, 5.6200e-03,  ..., 4.8373e-05,
          5.8555e-03, 5.8984e-03],
         [6.0063e-03, 5.9089e-03, 5.6200e-03,  ..., 4.8373e-05,
          5.8555e-03, 5.8984e-03],
         [6.0063e-03, 5.9089e-03, 5.6200e-03,  ..., 9.9985e-01,
          5.8555e-03, 5.8984e-03],
         [9.8198e-01, 9.8227e-01, 9.8314e-01,  ..., 4.8373e-05,
          9.8243e-01, 9.8230e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 383:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:49,526 [Process: 0] Synchronize training processes
2024-08-16 16:00:49,527 [Process: 0] Evaluating...
2024-08-16 16:00:49,529 [Process: 0] EPOCH 383:
2024-08-16 16:00:49,531 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0080, 0.0079,  ..., 0.0078, 0.0079, 0.0080],
         [0.0079, 0.0080, 0.0079,  ..., 0.0078, 0.0079, 0.0080],
         [0.0079, 0.0080, 0.0079,  ..., 0.0078, 0.0079, 0.0080],
         [0.9764, 0.9761, 0.9763,  ..., 0.9765, 0.9762, 0.9760]],
        [[0.0076, 0.0076, 0.0075,  ..., 0.0077, 0.0075, 0.0077],
         [0.0076, 0.0076, 0.0075,  ..., 0.0077, 0.0075, 0.0077],
         [0.0076, 0.0076, 0.0075,  ..., 0.0077, 0.0075, 0.0077],
         [0.9773, 0.9773, 0.9774,  ..., 0.9769, 0.9776, 0.9770]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7536e-03, 5.8008e-03, 6.0070e-03,  ..., 5.7863e-03,
          5.7421e-03, 5.9651e-03],
         [5.7536e-03, 5.8008e-03, 6.0070e-03,  ..., 5.7863e-03,
          5.7421e-03, 5.9651e-03],
         [5.7536e-03, 5.8008e-03, 6.0070e-03,  ..., 5.7863e-03,
          5.7421e-03, 5.9651e-03],
         [9.8274e-01, 9.8260e-01, 9.8198e-01,  ..., 9.8264e-01,
          9.8277e-01, 9.8210e-01]],
        [[5.9572e-03, 5.8354e-03, 6.0189e-03,  ..., 3.4678e-05,
          5.7796e-03, 5.8000e-03],
         [5.9572e-03, 5.8354e-03, 6.0189e-03,  ..., 3.4678e-05,
          5.7796e-03, 5.8000e-03],
         [5.9572e-03, 5.8354e-03, 6.0189e-03,  ..., 9.9990e-01,
          5.7796e-03, 5.8000e-03],
         [9.8213e-01, 9.8249e-01, 9.8194e-01,  ..., 3.4678e-05,
          9.8266e-01, 9.8260e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 384:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:51,726 [Process: 0] Synchronize training processes
2024-08-16 16:00:51,726 [Process: 0] Evaluating...
2024-08-16 16:00:51,728 [Process: 0] EPOCH 384:
2024-08-16 16:00:51,730 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0080, 0.0080,  ..., 0.0081, 0.0079, 0.0079],
         [0.0080, 0.0080, 0.0080,  ..., 0.0081, 0.0079, 0.0079],
         [0.0080, 0.0080, 0.0080,  ..., 0.0081, 0.0079, 0.0079],
         [0.9759, 0.9759, 0.9759,  ..., 0.9757, 0.9763, 0.9762]],
        [[0.0075, 0.0076, 0.0074,  ..., 0.0077, 0.0077, 0.0076],
         [0.0075, 0.0076, 0.0074,  ..., 0.0077, 0.0077, 0.0076],
         [0.0075, 0.0076, 0.0074,  ..., 0.0077, 0.0077, 0.0076],
         [0.9774, 0.9773, 0.9778,  ..., 0.9770, 0.9769, 0.9771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0060, 0.0059,  ..., 0.0061, 0.0053, 0.0060],
         [0.0060, 0.0060, 0.0059,  ..., 0.0061, 0.0053, 0.0060],
         [0.0060, 0.0060, 0.0059,  ..., 0.0061, 0.0053, 0.0060],
         [0.9821, 0.9821, 0.9822,  ..., 0.9817, 0.9842, 0.9819]],
        [[0.0059, 0.0058, 0.0060,  ..., 0.0013, 0.0060, 0.0056],
         [0.0059, 0.0058, 0.0060,  ..., 0.0013, 0.0060, 0.0056],
         [0.0059, 0.0058, 0.0060,  ..., 0.9961, 0.0060, 0.0056],
         [0.9823, 0.9825, 0.9821,  ..., 0.0013, 0.9819, 0.9833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 385:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:53,882 [Process: 0] Synchronize training processes
2024-08-16 16:00:53,882 [Process: 0] Evaluating...
2024-08-16 16:00:53,884 [Process: 0] EPOCH 385:
2024-08-16 16:00:53,886 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0080, 0.0079, 0.0081,  ..., 0.0079, 0.0080, 0.0079],
         [0.0080, 0.0079, 0.0081,  ..., 0.0079, 0.0080, 0.0079],
         [0.0080, 0.0079, 0.0081,  ..., 0.0079, 0.0080, 0.0079],
         [0.9760, 0.9763, 0.9758,  ..., 0.9762, 0.9760, 0.9762]],
        [[0.0076, 0.0075, 0.0075,  ..., 0.0076, 0.0076, 0.0076],
         [0.0076, 0.0075, 0.0075,  ..., 0.0076, 0.0076, 0.0076],
         [0.0076, 0.0075, 0.0075,  ..., 0.0076, 0.0076, 0.0076],
         [0.9773, 0.9774, 0.9775,  ..., 0.9771, 0.9772, 0.9772]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.8762e-03, 5.9332e-03, 6.0032e-03,  ..., 6.0787e-03,
          6.0039e-03, 5.8228e-03],
         [5.8762e-03, 5.9332e-03, 6.0032e-03,  ..., 6.0787e-03,
          6.0039e-03, 5.8228e-03],
         [5.8762e-03, 5.9332e-03, 6.0032e-03,  ..., 6.0787e-03,
          6.0039e-03, 5.8228e-03],
         [9.8237e-01, 9.8220e-01, 9.8199e-01,  ..., 9.8176e-01,
          9.8199e-01, 9.8253e-01]],
        [[5.7897e-03, 5.8494e-03, 5.9110e-03,  ..., 1.6034e-04,
          5.7591e-03, 5.9522e-03],
         [5.7897e-03, 5.8494e-03, 5.9110e-03,  ..., 1.6034e-04,
          5.7591e-03, 5.9522e-03],
         [5.7897e-03, 5.8494e-03, 5.9110e-03,  ..., 9.9952e-01,
          5.7591e-03, 5.9522e-03],
         [9.8263e-01, 9.8245e-01, 9.8227e-01,  ..., 1.6034e-04,
          9.8272e-01, 9.8214e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 386:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:55,983 [Process: 0] Synchronize training processes
2024-08-16 16:00:55,983 [Process: 0] Evaluating...
2024-08-16 16:00:55,985 [Process: 0] EPOCH 386:
2024-08-16 16:00:55,987 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0079, 0.0078,  ..., 0.0079, 0.0078, 0.0079],
         [0.0078, 0.0079, 0.0078,  ..., 0.0079, 0.0078, 0.0079],
         [0.0078, 0.0079, 0.0078,  ..., 0.0079, 0.0078, 0.0079],
         [0.9765, 0.9762, 0.9767,  ..., 0.9764, 0.9765, 0.9763]],
        [[0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0075, 0.0078],
         [0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0075, 0.0078],
         [0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0075, 0.0078],
         [0.9772, 0.9772, 0.9773,  ..., 0.9772, 0.9774, 0.9767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9148e-03, 5.8770e-03, 5.9993e-03,  ..., 5.8617e-03,
          5.5104e-03, 5.9380e-03],
         [5.9148e-03, 5.8770e-03, 5.9993e-03,  ..., 5.8617e-03,
          5.5104e-03, 5.9380e-03],
         [5.9148e-03, 5.8770e-03, 5.9993e-03,  ..., 5.8617e-03,
          5.5104e-03, 5.9380e-03],
         [9.8226e-01, 9.8237e-01, 9.8200e-01,  ..., 9.8241e-01,
          9.8347e-01, 9.8219e-01]],
        [[5.6740e-03, 5.8956e-03, 5.8392e-03,  ..., 3.1940e-04,
          5.8117e-03, 5.9790e-03],
         [5.6740e-03, 5.8956e-03, 5.8392e-03,  ..., 3.1940e-04,
          5.8117e-03, 5.9790e-03],
         [5.6740e-03, 5.8956e-03, 5.8392e-03,  ..., 9.9904e-01,
          5.8117e-03, 5.9790e-03],
         [9.8298e-01, 9.8231e-01, 9.8248e-01,  ..., 3.1940e-04,
          9.8256e-01, 9.8206e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 387:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:00:58,067 [Process: 0] Synchronize training processes
2024-08-16 16:00:58,068 [Process: 0] Evaluating...
2024-08-16 16:00:58,070 [Process: 0] EPOCH 387:
2024-08-16 16:00:58,072 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0077, 0.0078],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0077, 0.0078],
         [0.0078, 0.0078, 0.0078,  ..., 0.0078, 0.0077, 0.0078],
         [0.9767, 0.9765, 0.9765,  ..., 0.9767, 0.9770, 0.9767]],
        [[0.0077, 0.0075, 0.0076,  ..., 0.0077, 0.0075, 0.0076],
         [0.0077, 0.0075, 0.0076,  ..., 0.0077, 0.0075, 0.0076],
         [0.0077, 0.0075, 0.0076,  ..., 0.0077, 0.0075, 0.0076],
         [0.9768, 0.9776, 0.9771,  ..., 0.9770, 0.9775, 0.9773]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6326e-03, 5.7810e-03, 6.4581e-03,  ..., 5.6873e-03,
          5.4349e-03, 6.0292e-03],
         [5.6326e-03, 5.7810e-03, 6.4581e-03,  ..., 5.6873e-03,
          5.4349e-03, 6.0292e-03],
         [5.6326e-03, 5.7810e-03, 6.4581e-03,  ..., 5.6873e-03,
          5.4349e-03, 6.0292e-03],
         [9.8310e-01, 9.8266e-01, 9.8063e-01,  ..., 9.8294e-01,
          9.8370e-01, 9.8191e-01]],
        [[5.9207e-03, 5.6509e-03, 5.5671e-03,  ..., 7.2376e-05,
          5.6559e-03, 5.6627e-03],
         [5.9207e-03, 5.6509e-03, 5.5671e-03,  ..., 7.2376e-05,
          5.6559e-03, 5.6627e-03],
         [5.9207e-03, 5.6509e-03, 5.5671e-03,  ..., 9.9978e-01,
          5.6559e-03, 5.6627e-03],
         [9.8224e-01, 9.8305e-01, 9.8330e-01,  ..., 7.2376e-05,
          9.8303e-01, 9.8301e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 388:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:01:00,175 [Process: 0] Synchronize training processes
2024-08-16 16:01:00,175 [Process: 0] Evaluating...
2024-08-16 16:01:00,177 [Process: 0] EPOCH 388:
2024-08-16 16:01:00,179 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0078, 0.0077,  ..., 0.0078, 0.0076, 0.0076],
         [0.0078, 0.0078, 0.0077,  ..., 0.0078, 0.0076, 0.0076],
         [0.0078, 0.0078, 0.0077,  ..., 0.0078, 0.0076, 0.0076],
         [0.9765, 0.9767, 0.9769,  ..., 0.9767, 0.9771, 0.9773]],
        [[0.0074, 0.0076, 0.0074,  ..., 0.0075, 0.0074, 0.0074],
         [0.0074, 0.0076, 0.0074,  ..., 0.0075, 0.0074, 0.0074],
         [0.0074, 0.0076, 0.0074,  ..., 0.0075, 0.0074, 0.0074],
         [0.9778, 0.9773, 0.9777,  ..., 0.9775, 0.9778, 0.9779]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[6.3112e-03, 6.1560e-03, 6.0350e-03,  ..., 6.0456e-03,
          5.8755e-03, 6.2242e-03],
         [6.3112e-03, 6.1560e-03, 6.0350e-03,  ..., 6.0456e-03,
          5.8755e-03, 6.2242e-03],
         [6.3112e-03, 6.1560e-03, 6.0350e-03,  ..., 6.0456e-03,
          5.8755e-03, 6.2242e-03],
         [9.8107e-01, 9.8153e-01, 9.8190e-01,  ..., 9.8186e-01,
          9.8237e-01, 9.8133e-01]],
        [[5.6709e-03, 5.6782e-03, 5.7832e-03,  ..., 6.1319e-04,
          5.7921e-03, 5.7517e-03],
         [5.6709e-03, 5.6782e-03, 5.7832e-03,  ..., 6.1319e-04,
          5.7921e-03, 5.7517e-03],
         [5.6709e-03, 5.6782e-03, 5.7832e-03,  ..., 9.9816e-01,
          5.7921e-03, 5.7517e-03],
         [9.8299e-01, 9.8297e-01, 9.8265e-01,  ..., 6.1319e-04,
          9.8262e-01, 9.8274e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 389:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 16:01:02,281 [Process: 0] Synchronize training processes
2024-08-16 16:01:02,281 [Process: 0] Evaluating...
2024-08-16 16:01:02,283 [Process: 0] EPOCH 389:
2024-08-16 16:01:02,285 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0077, 0.0078,  ..., 0.0077, 0.0076, 0.0078],
         [0.0078, 0.0077, 0.0078,  ..., 0.0077, 0.0076, 0.0078],
         [0.0078, 0.0077, 0.0078,  ..., 0.0077, 0.0076, 0.0078],
         [0.9767, 0.9769, 0.9766,  ..., 0.9770, 0.9773, 0.9766]],
        [[0.0076, 0.0075, 0.0074,  ..., 0.0075, 0.0074, 0.0075],
         [0.0076, 0.0075, 0.0074,  ..., 0.0075, 0.0074, 0.0075],
         [0.0076, 0.0075, 0.0074,  ..., 0.0075, 0.0074, 0.0075],
         [0.9773, 0.9774, 0.9777,  ..., 0.9776, 0.9777, 0.9774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.7950e-03, 5.7796e-03, 5.6941e-03,  ..., 5.8204e-03,
          5.7937e-03, 6.0791e-03],
         [5.7950e-03, 5.7796e-03, 5.6941e-03,  ..., 5.8204e-03,
          5.7937e-03, 6.0791e-03],
         [5.7950e-03, 5.7796e-03, 5.6941e-03,  ..., 5.8204e-03,
          5.7937e-03, 6.0791e-03],
         [9.8261e-01, 9.8266e-01, 9.8292e-01,  ..., 9.8254e-01,
          9.8262e-01, 9.8176e-01]],
        [[5.7123e-03, 5.7366e-03, 5.7036e-03,  ..., 2.4889e-05,
          5.5976e-03, 5.6514e-03],
         [5.7123e-03, 5.7366e-03, 5.7036e-03,  ..., 1.4626e-05,
          5.5976e-03, 5.6514e-03],
         [5.7123e-03, 5.7366e-03, 5.7036e-03,  ..., 9.9995e-01,
          5.5976e-03, 5.6514e-03],
         [9.8286e-01, 9.8279e-01, 9.8289e-01,  ..., 1.4626e-05,
          9.8321e-01, 9.8305e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:04,370 [Process: 0] Synchronize training processes
2024-08-16 16:01:04,371 [Process: 0] Evaluating...
2024-08-16 16:01:04,373 [Process: 0] EPOCH 390:
2024-08-16 16:01:04,375 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 390:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0078, 0.0078, 0.0078,  ..., 0.0077, 0.0078, 0.0077],
         [0.0078, 0.0078, 0.0078,  ..., 0.0077, 0.0078, 0.0077],
         [0.0078, 0.0078, 0.0078,  ..., 0.0077, 0.0078, 0.0077],
         [0.9767, 0.9767, 0.9766,  ..., 0.9769, 0.9767, 0.9769]],
        [[0.0076, 0.0076, 0.0076,  ..., 0.0074, 0.0074, 0.0075],
         [0.0076, 0.0076, 0.0076,  ..., 0.0074, 0.0074, 0.0075],
         [0.0076, 0.0076, 0.0076,  ..., 0.0074, 0.0074, 0.0075],
         [0.9773, 0.9773, 0.9771,  ..., 0.9777, 0.9777, 0.9776]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0060, 0.0059, 0.0059,  ..., 0.0057, 0.0054, 0.0058],
         [0.0060, 0.0059, 0.0059,  ..., 0.0057, 0.0054, 0.0058],
         [0.0060, 0.0059, 0.0059,  ..., 0.0057, 0.0054, 0.0058],
         [0.9821, 0.9823, 0.9823,  ..., 0.9829, 0.9837, 0.9825]],
        [[0.0059, 0.0055, 0.0060,  ..., 0.0012, 0.0058, 0.0058],
         [0.0059, 0.0055, 0.0060,  ..., 0.0012, 0.0058, 0.0058],
         [0.0059, 0.0055, 0.0060,  ..., 0.9964, 0.0058, 0.0058],
         [0.9824, 0.9834, 0.9820,  ..., 0.0012, 0.9827, 0.9826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:06,455 [Process: 0] Synchronize training processes
2024-08-16 16:01:06,456 [Process: 0] Evaluating...
2024-08-16 16:01:06,458 [Process: 0] EPOCH 391:
2024-08-16 16:01:06,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 391:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0077, 0.0076,  ..., 0.0076, 0.0077, 0.0077],
         [0.0076, 0.0077, 0.0076,  ..., 0.0076, 0.0077, 0.0077],
         [0.0076, 0.0077, 0.0076,  ..., 0.0076, 0.0077, 0.0077],
         [0.9772, 0.9769, 0.9773,  ..., 0.9771, 0.9769, 0.9769]],
        [[0.0075, 0.0074, 0.0074,  ..., 0.0076, 0.0073, 0.0074],
         [0.0075, 0.0074, 0.0074,  ..., 0.0076, 0.0073, 0.0074],
         [0.0075, 0.0074, 0.0074,  ..., 0.0076, 0.0073, 0.0074],
         [0.9776, 0.9778, 0.9777,  ..., 0.9773, 0.9780, 0.9777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:01:08,559 [Process: 0] Synchronize training processes
2024-08-16 16:01:08,559 [Process: 0] Evaluating...
2024-08-16 16:01:08,567 [Process: 0] EPOCH 392:
2024-08-16 16:01:08,569 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5161e-03, 5.6235e-03, 5.7734e-03,  ..., 5.7712e-03,
          5.4353e-03, 5.5680e-03],
         [5.5161e-03, 5.6235e-03, 5.7734e-03,  ..., 5.7712e-03,
          5.4353e-03, 5.5680e-03],
         [5.5161e-03, 5.6235e-03, 5.7734e-03,  ..., 5.7712e-03,
          5.4353e-03, 5.5680e-03],
         [9.8345e-01, 9.8313e-01, 9.8268e-01,  ..., 9.8269e-01,
          9.8369e-01, 9.8330e-01]],
        [[5.3645e-03, 5.7243e-03, 5.6043e-03,  ..., 3.0987e-04,
          5.9060e-03, 5.8536e-03],
         [5.3645e-03, 5.7243e-03, 5.6043e-03,  ..., 3.0987e-04,
          5.9060e-03, 5.8536e-03],
         [5.3645e-03, 5.7243e-03, 5.6043e-03,  ..., 9.9907e-01,
          5.9060e-03, 5.8536e-03],
         [9.8391e-01, 9.8283e-01, 9.8319e-01,  ..., 3.0987e-04,
          9.8228e-01, 9.8244e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 392:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0076, 0.0077,  ..., 0.0076, 0.0077, 0.0076],
         [0.0076, 0.0076, 0.0077,  ..., 0.0076, 0.0077, 0.0076],
         [0.0076, 0.0076, 0.0077,  ..., 0.0076, 0.0077, 0.0076],
         [0.9771, 0.9772, 0.9769,  ..., 0.9772, 0.9768, 0.9773]],
        [[0.0073, 0.0074, 0.0075,  ..., 0.0075, 0.0074, 0.0073],
         [0.0073, 0.0074, 0.0075,  ..., 0.0075, 0.0074, 0.0073],
         [0.0073, 0.0074, 0.0075,  ..., 0.0075, 0.0074, 0.0073],
         [0.9782, 0.9779, 0.9776,  ..., 0.9775, 0.9778, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:10,656 [Process: 0] Synchronize training processes
2024-08-16 16:01:10,656 [Process: 0] Evaluating...
2024-08-16 16:01:10,658 [Process: 0] EPOCH 393:
2024-08-16 16:01:10,660 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.9392e-03, 5.7721e-03, 5.9615e-03,  ..., 5.6760e-03,
          5.8127e-03, 5.5826e-03],
         [5.9392e-03, 5.7721e-03, 5.9615e-03,  ..., 5.6760e-03,
          5.8127e-03, 5.5826e-03],
         [5.9392e-03, 5.7721e-03, 5.9615e-03,  ..., 5.6760e-03,
          5.8127e-03, 5.5826e-03],
         [9.8218e-01, 9.8268e-01, 9.8212e-01,  ..., 9.8297e-01,
          9.8256e-01, 9.8325e-01]],
        [[5.8515e-03, 5.7024e-03, 5.7097e-03,  ..., 6.8736e-04,
          5.7158e-03, 5.8603e-03],
         [5.8515e-03, 5.7024e-03, 5.7097e-03,  ..., 6.8736e-04,
          5.7158e-03, 5.8603e-03],
         [5.8515e-03, 5.7024e-03, 5.7097e-03,  ..., 9.9794e-01,
          5.7158e-03, 5.8603e-03],
         [9.8245e-01, 9.8289e-01, 9.8287e-01,  ..., 6.8736e-04,
          9.8285e-01, 9.8242e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 393:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0076, 0.0077,  ..., 0.0078, 0.0077, 0.0076],
         [0.0077, 0.0076, 0.0077,  ..., 0.0078, 0.0077, 0.0076],
         [0.0077, 0.0076, 0.0077,  ..., 0.0078, 0.0077, 0.0076],
         [0.9770, 0.9772, 0.9769,  ..., 0.9766, 0.9770, 0.9771]],
        [[0.0073, 0.0073, 0.0073,  ..., 0.0072, 0.0074, 0.0074],
         [0.0073, 0.0073, 0.0073,  ..., 0.0072, 0.0074, 0.0074],
         [0.0073, 0.0073, 0.0073,  ..., 0.0072, 0.0074, 0.0074],
         [0.9780, 0.9780, 0.9781,  ..., 0.9784, 0.9778, 0.9778]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:12,776 [Process: 0] Synchronize training processes
2024-08-16 16:01:12,776 [Process: 0] Evaluating...
2024-08-16 16:01:12,778 [Process: 0] EPOCH 394:
2024-08-16 16:01:12,780 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6696e-03, 5.7568e-03, 5.4371e-03,  ..., 5.6271e-03,
          5.6192e-03, 5.7175e-03],
         [5.6696e-03, 5.7568e-03, 5.4371e-03,  ..., 5.6271e-03,
          5.6192e-03, 5.7175e-03],
         [5.6696e-03, 5.7568e-03, 5.4371e-03,  ..., 5.6271e-03,
          5.6192e-03, 5.7175e-03],
         [9.8299e-01, 9.8273e-01, 9.8369e-01,  ..., 9.8312e-01,
          9.8314e-01, 9.8285e-01]],
        [[5.6132e-03, 5.8010e-03, 5.7106e-03,  ..., 3.7548e-04,
          5.9941e-03, 5.5252e-03],
         [5.6132e-03, 5.8010e-03, 5.7106e-03,  ..., 3.7548e-04,
          5.9941e-03, 5.5252e-03],
         [5.6132e-03, 5.8010e-03, 5.7106e-03,  ..., 9.9887e-01,
          5.9941e-03, 5.5252e-03],
         [9.8316e-01, 9.8260e-01, 9.8287e-01,  ..., 3.7548e-04,
          9.8202e-01, 9.8342e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 394:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0077, 0.0078, 0.0075,  ..., 0.0079, 0.0076, 0.0079],
         [0.0077, 0.0078, 0.0075,  ..., 0.0079, 0.0076, 0.0079],
         [0.0077, 0.0078, 0.0075,  ..., 0.0079, 0.0076, 0.0079],
         [0.9770, 0.9767, 0.9774,  ..., 0.9762, 0.9772, 0.9764]],
        [[0.0073, 0.0074, 0.0071,  ..., 0.0072, 0.0073, 0.0071],
         [0.0073, 0.0074, 0.0071,  ..., 0.0072, 0.0073, 0.0071],
         [0.0073, 0.0074, 0.0071,  ..., 0.0072, 0.0073, 0.0071],
         [0.9782, 0.9778, 0.9787,  ..., 0.9783, 0.9782, 0.9786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:14,859 [Process: 0] Synchronize training processes
2024-08-16 16:01:14,859 [Process: 0] Evaluating...
2024-08-16 16:01:14,861 [Process: 0] EPOCH 395:
2024-08-16 16:01:14,863 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4646e-03, 5.7086e-03, 5.7722e-03,  ..., 5.6797e-03,
          5.8045e-03, 5.5493e-03],
         [5.4646e-03, 5.7086e-03, 5.7722e-03,  ..., 5.6797e-03,
          5.8045e-03, 5.5493e-03],
         [5.4646e-03, 5.7086e-03, 5.7722e-03,  ..., 5.6797e-03,
          5.8045e-03, 5.5493e-03],
         [9.8361e-01, 9.8287e-01, 9.8268e-01,  ..., 9.8296e-01,
          9.8259e-01, 9.8335e-01]],
        [[5.6944e-03, 5.6411e-03, 5.5281e-03,  ..., 4.1819e-05,
          5.5766e-03, 5.7534e-03],
         [5.6944e-03, 5.6411e-03, 5.5281e-03,  ..., 4.1819e-05,
          5.5766e-03, 5.7534e-03],
         [5.6944e-03, 5.6411e-03, 5.5281e-03,  ..., 9.9987e-01,
          5.5766e-03, 5.7534e-03],
         [9.8292e-01, 9.8308e-01, 9.8342e-01,  ..., 4.1819e-05,
          9.8327e-01, 9.8274e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 395:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0076, 0.0077,  ..., 0.0077, 0.0080, 0.0075],
         [0.0076, 0.0076, 0.0077,  ..., 0.0077, 0.0080, 0.0075],
         [0.0076, 0.0076, 0.0077,  ..., 0.0077, 0.0080, 0.0075],
         [0.9771, 0.9771, 0.9769,  ..., 0.9770, 0.9760, 0.9776]],
        [[0.0071, 0.0071, 0.0071,  ..., 0.0071, 0.0071, 0.0072],
         [0.0071, 0.0071, 0.0071,  ..., 0.0071, 0.0071, 0.0072],
         [0.0071, 0.0071, 0.0071,  ..., 0.0071, 0.0071, 0.0072],
         [0.9786, 0.9787, 0.9786,  ..., 0.9788, 0.9787, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:16,940 [Process: 0] Synchronize training processes
2024-08-16 16:01:16,940 [Process: 0] Evaluating...
2024-08-16 16:01:16,942 [Process: 0] EPOCH 396:
2024-08-16 16:01:16,944 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.5313e-03, 5.5779e-03, 5.6463e-03,  ..., 5.4740e-03,
          5.8978e-03, 5.6948e-03],
         [5.5313e-03, 5.5779e-03, 5.6463e-03,  ..., 5.4740e-03,
          5.8978e-03, 5.6948e-03],
         [5.5313e-03, 5.5779e-03, 5.6463e-03,  ..., 5.4740e-03,
          5.8978e-03, 5.6948e-03],
         [9.8341e-01, 9.8327e-01, 9.8306e-01,  ..., 9.8358e-01,
          9.8231e-01, 9.8292e-01]],
        [[5.6967e-03, 5.6542e-03, 5.7262e-03,  ..., 3.9390e-05,
          5.4258e-03, 5.4942e-03],
         [5.6967e-03, 5.6542e-03, 5.7262e-03,  ..., 3.9390e-05,
          5.4258e-03, 5.4942e-03],
         [5.6967e-03, 5.6542e-03, 5.7262e-03,  ..., 9.9988e-01,
          5.4258e-03, 5.4942e-03],
         [9.8291e-01, 9.8304e-01, 9.8282e-01,  ..., 3.9390e-05,
          9.8372e-01, 9.8352e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 396:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0079, 0.0075, 0.0078,  ..., 0.0080, 0.0078, 0.0079],
         [0.0079, 0.0075, 0.0078,  ..., 0.0080, 0.0078, 0.0079],
         [0.0079, 0.0075, 0.0078,  ..., 0.0080, 0.0078, 0.0079],
         [0.9764, 0.9774, 0.9767,  ..., 0.9761, 0.9767, 0.9763]],
        [[0.0073, 0.0072, 0.0072,  ..., 0.0072, 0.0072, 0.0071],
         [0.0073, 0.0072, 0.0072,  ..., 0.0072, 0.0072, 0.0071],
         [0.0073, 0.0072, 0.0072,  ..., 0.0072, 0.0072, 0.0071],
         [0.9781, 0.9783, 0.9784,  ..., 0.9784, 0.9785, 0.9786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:19,063 [Process: 0] Synchronize training processes
2024-08-16 16:01:19,063 [Process: 0] Evaluating...
2024-08-16 16:01:19,065 [Process: 0] EPOCH 397:
2024-08-16 16:01:19,067 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4939e-03, 5.7434e-03, 5.6886e-03,  ..., 5.5959e-03,
          5.7355e-03, 5.4873e-03],
         [5.4939e-03, 5.7434e-03, 5.6886e-03,  ..., 5.5959e-03,
          5.7355e-03, 5.4873e-03],
         [5.4939e-03, 5.7434e-03, 5.6886e-03,  ..., 5.5959e-03,
          5.7355e-03, 5.4873e-03],
         [9.8352e-01, 9.8277e-01, 9.8293e-01,  ..., 9.8321e-01,
          9.8279e-01, 9.8354e-01]],
        [[5.6092e-03, 5.5686e-03, 5.7317e-03,  ..., 6.8426e-04,
          5.6458e-03, 5.6149e-03],
         [5.6092e-03, 5.5686e-03, 5.7317e-03,  ..., 6.8426e-04,
          5.6458e-03, 5.6149e-03],
         [5.6092e-03, 5.5686e-03, 5.7317e-03,  ..., 9.9795e-01,
          5.6458e-03, 5.6149e-03],
         [9.8317e-01, 9.8329e-01, 9.8280e-01,  ..., 6.8426e-04,
          9.8306e-01, 9.8316e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 397:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0075, 0.0077,  ..., 0.0078, 0.0078, 0.0079],
         [0.0076, 0.0075, 0.0077,  ..., 0.0078, 0.0078, 0.0079],
         [0.0076, 0.0075, 0.0077,  ..., 0.0078, 0.0078, 0.0079],
         [0.9773, 0.9774, 0.9769,  ..., 0.9767, 0.9766, 0.9762]],
        [[0.0073, 0.0072, 0.0072,  ..., 0.0073, 0.0072, 0.0073],
         [0.0073, 0.0072, 0.0072,  ..., 0.0073, 0.0072, 0.0073],
         [0.0073, 0.0072, 0.0072,  ..., 0.0073, 0.0072, 0.0073],
         [0.9781, 0.9785, 0.9783,  ..., 0.9781, 0.9784, 0.9782]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:21,177 [Process: 0] Synchronize training processes
2024-08-16 16:01:21,177 [Process: 0] Evaluating...
2024-08-16 16:01:21,179 [Process: 0] EPOCH 398:
2024-08-16 16:01:21,181 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0058, 0.0056, 0.0054,  ..., 0.0056, 0.0057, 0.0057],
         [0.0058, 0.0056, 0.0054,  ..., 0.0056, 0.0057, 0.0057],
         [0.0058, 0.0056, 0.0054,  ..., 0.0056, 0.0057, 0.0057],
         [0.9825, 0.9833, 0.9837,  ..., 0.9831, 0.9830, 0.9829]],
        [[0.0056, 0.0056, 0.0056,  ..., 0.0010, 0.0058, 0.0056],
         [0.0056, 0.0056, 0.0056,  ..., 0.0010, 0.0058, 0.0056],
         [0.0056, 0.0056, 0.0056,  ..., 0.9969, 0.0058, 0.0056],
         [0.9833, 0.9833, 0.9831,  ..., 0.0010, 0.9825, 0.9833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 398:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0077, 0.0076,  ..., 0.0076, 0.0077, 0.0076],
         [0.0076, 0.0077, 0.0076,  ..., 0.0076, 0.0077, 0.0076],
         [0.0076, 0.0077, 0.0076,  ..., 0.0076, 0.0077, 0.0076],
         [0.9771, 0.9770, 0.9771,  ..., 0.9773, 0.9768, 0.9771]],
        [[0.0073, 0.0072, 0.0074,  ..., 0.0073, 0.0073, 0.0073],
         [0.0073, 0.0072, 0.0074,  ..., 0.0073, 0.0073, 0.0073],
         [0.0073, 0.0072, 0.0074,  ..., 0.0073, 0.0073, 0.0073],
         [0.9781, 0.9783, 0.9779,  ..., 0.9781, 0.9780, 0.9780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:23,167 [Process: 0] Synchronize training processes
2024-08-16 16:01:23,167 [Process: 0] Evaluating...
2024-08-16 16:01:23,169 [Process: 0] EPOCH 399:
2024-08-16 16:01:23,171 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6503e-03, 5.8809e-03, 5.4009e-03,  ..., 5.2851e-03,
          6.0736e-03, 5.5052e-03],
         [5.6503e-03, 5.8809e-03, 5.4009e-03,  ..., 5.2851e-03,
          6.0736e-03, 5.5052e-03],
         [5.6503e-03, 5.8809e-03, 5.4009e-03,  ..., 5.2851e-03,
          6.0736e-03, 5.5052e-03],
         [9.8305e-01, 9.8236e-01, 9.8380e-01,  ..., 9.8414e-01,
          9.8178e-01, 9.8348e-01]],
        [[5.6036e-03, 5.5070e-03, 5.4909e-03,  ..., 1.7519e-05,
          5.8763e-03, 5.5536e-03],
         [5.6036e-03, 5.5070e-03, 5.4909e-03,  ..., 1.7519e-05,
          5.8763e-03, 5.5536e-03],
         [5.6036e-03, 5.5070e-03, 5.4909e-03,  ..., 9.9995e-01,
          5.8763e-03, 5.5536e-03],
         [9.8319e-01, 9.8348e-01, 9.8353e-01,  ..., 1.7519e-05,
          9.8237e-01, 9.8334e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 399:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0077, 0.0075],
         [0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0077, 0.0075],
         [0.0076, 0.0076, 0.0076,  ..., 0.0076, 0.0077, 0.0075],
         [0.9771, 0.9773, 0.9771,  ..., 0.9773, 0.9770, 0.9775]],
        [[0.0074, 0.0072, 0.0073,  ..., 0.0074, 0.0074, 0.0072],
         [0.0074, 0.0072, 0.0073,  ..., 0.0074, 0.0074, 0.0072],
         [0.0074, 0.0072, 0.0073,  ..., 0.0074, 0.0074, 0.0072],
         [0.9779, 0.9783, 0.9782,  ..., 0.9779, 0.9778, 0.9783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:25,096 [Process: 0] Synchronize training processes
2024-08-16 16:01:25,097 [Process: 0] Evaluating...
2024-08-16 16:01:25,099 [Process: 0] EPOCH 400:
2024-08-16 16:01:25,100 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3261e-03, 5.8315e-03, 5.3643e-03,  ..., 5.5696e-03,
          5.5178e-03, 5.4642e-03],
         [5.3261e-03, 5.8315e-03, 5.3643e-03,  ..., 5.5696e-03,
          5.5178e-03, 5.4642e-03],
         [5.3261e-03, 5.8315e-03, 5.3643e-03,  ..., 5.5696e-03,
          5.5178e-03, 5.4642e-03],
         [9.8402e-01, 9.8251e-01, 9.8391e-01,  ..., 9.8329e-01,
          9.8345e-01, 9.8361e-01]],
        [[5.6846e-03, 5.7721e-03, 5.7747e-03,  ..., 1.2287e-05,
          5.6771e-03, 5.6872e-03],
         [5.6846e-03, 5.7721e-03, 5.7747e-03,  ..., 1.2287e-05,
          5.6771e-03, 5.6872e-03],
         [5.6846e-03, 5.7721e-03, 5.7747e-03,  ..., 9.9996e-01,
          5.6771e-03, 5.6872e-03],
         [9.8295e-01, 9.8268e-01, 9.8268e-01,  ..., 1.2287e-05,
          9.8297e-01, 9.8294e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 400:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0075, 0.0076,  ..., 0.0077, 0.0075, 0.0074],
         [0.0076, 0.0075, 0.0076,  ..., 0.0077, 0.0075, 0.0074],
         [0.0076, 0.0075, 0.0076,  ..., 0.0077, 0.0075, 0.0074],
         [0.9773, 0.9774, 0.9773,  ..., 0.9770, 0.9776, 0.9777]],
        [[0.0072, 0.0072, 0.0074,  ..., 0.0072, 0.0073, 0.0071],
         [0.0072, 0.0072, 0.0074,  ..., 0.0072, 0.0073, 0.0071],
         [0.0072, 0.0072, 0.0074,  ..., 0.0072, 0.0073, 0.0071],
         [0.9783, 0.9785, 0.9777,  ..., 0.9783, 0.9782, 0.9786]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:27,051 [Process: 0] Synchronize training processes
2024-08-16 16:01:27,051 [Process: 0] Evaluating...
2024-08-16 16:01:27,053 [Process: 0] EPOCH 401:
2024-08-16 16:01:27,055 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0053, 0.0054, 0.0054,  ..., 0.0053, 0.0058, 0.0052],
         [0.0053, 0.0054, 0.0054,  ..., 0.0053, 0.0058, 0.0052],
         [0.0053, 0.0054, 0.0054,  ..., 0.0053, 0.0058, 0.0052],
         [0.9841, 0.9837, 0.9839,  ..., 0.9840, 0.9826, 0.9843]],
        [[0.0056, 0.0056, 0.0055,  ..., 0.0011, 0.0058, 0.0056],
         [0.0056, 0.0056, 0.0055,  ..., 0.0011, 0.0058, 0.0056],
         [0.0056, 0.0056, 0.0055,  ..., 0.9967, 0.0058, 0.0056],
         [0.9833, 0.9832, 0.9836,  ..., 0.0011, 0.9827, 0.9833]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 401:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0075, 0.0075,  ..., 0.0075, 0.0075, 0.0075],
         [0.0075, 0.0075, 0.0075,  ..., 0.0075, 0.0075, 0.0075],
         [0.0075, 0.0075, 0.0075,  ..., 0.0075, 0.0075, 0.0075],
         [0.9775, 0.9775, 0.9774,  ..., 0.9775, 0.9776, 0.9775]],
        [[0.0072, 0.0073, 0.0072,  ..., 0.0073, 0.0073, 0.0072],
         [0.0072, 0.0073, 0.0072,  ..., 0.0073, 0.0073, 0.0072],
         [0.0072, 0.0073, 0.0072,  ..., 0.0073, 0.0073, 0.0072],
         [0.9785, 0.9782, 0.9784,  ..., 0.9780, 0.9782, 0.9784]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:28,973 [Process: 0] Synchronize training processes
2024-08-16 16:01:28,973 [Process: 0] Evaluating...
2024-08-16 16:01:28,981 [Process: 0] EPOCH 402:
2024-08-16 16:01:28,983 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4426e-03, 5.7111e-03, 5.4122e-03,  ..., 5.3017e-03,
          5.8864e-03, 5.2774e-03],
         [5.4426e-03, 5.7111e-03, 5.4122e-03,  ..., 5.3017e-03,
          5.8864e-03, 5.2774e-03],
         [5.4426e-03, 5.7111e-03, 5.4122e-03,  ..., 5.3017e-03,
          5.8864e-03, 5.2774e-03],
         [9.8367e-01, 9.8287e-01, 9.8376e-01,  ..., 9.8410e-01,
          9.8234e-01, 9.8417e-01]],
        [[5.5110e-03, 5.8014e-03, 5.4311e-03,  ..., 1.6778e-04,
          5.4216e-03, 5.4957e-03],
         [5.5110e-03, 5.8014e-03, 5.4311e-03,  ..., 1.6778e-04,
          5.4216e-03, 5.4957e-03],
         [5.5110e-03, 5.8014e-03, 5.4311e-03,  ..., 9.9950e-01,
          5.4216e-03, 5.4957e-03],
         [9.8347e-01, 9.8260e-01, 9.8371e-01,  ..., 1.6778e-04,
          9.8374e-01, 9.8351e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 402:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0076, 0.0074,  ..., 0.0073, 0.0074, 0.0074],
         [0.0075, 0.0076, 0.0074,  ..., 0.0073, 0.0074, 0.0074],
         [0.0075, 0.0076, 0.0074,  ..., 0.0073, 0.0074, 0.0074],
         [0.9776, 0.9773, 0.9777,  ..., 0.9780, 0.9778, 0.9779]],
        [[0.0072, 0.0070, 0.0070,  ..., 0.0071, 0.0071, 0.0070],
         [0.0072, 0.0070, 0.0070,  ..., 0.0071, 0.0071, 0.0070],
         [0.0072, 0.0070, 0.0070,  ..., 0.0071, 0.0071, 0.0070],
         [0.9784, 0.9789, 0.9789,  ..., 0.9786, 0.9788, 0.9790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:30,895 [Process: 0] Synchronize training processes
2024-08-16 16:01:30,896 [Process: 0] Evaluating...
2024-08-16 16:01:30,898 [Process: 0] EPOCH 403:
2024-08-16 16:01:30,899 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3121e-03, 5.4645e-03, 5.5106e-03,  ..., 5.3382e-03,
          5.5549e-03, 5.4854e-03],
         [5.3121e-03, 5.4645e-03, 5.5106e-03,  ..., 5.3382e-03,
          5.5549e-03, 5.4854e-03],
         [5.3121e-03, 5.4645e-03, 5.5106e-03,  ..., 5.3382e-03,
          5.5549e-03, 5.4854e-03],
         [9.8406e-01, 9.8361e-01, 9.8347e-01,  ..., 9.8399e-01,
          9.8334e-01, 9.8354e-01]],
        [[5.5035e-03, 5.5397e-03, 5.7129e-03,  ..., 4.4096e-04,
          5.7331e-03, 5.6251e-03],
         [5.5035e-03, 5.5397e-03, 5.7129e-03,  ..., 4.4096e-04,
          5.7331e-03, 5.6251e-03],
         [5.5035e-03, 5.5397e-03, 5.7129e-03,  ..., 9.9868e-01,
          5.7331e-03, 5.6251e-03],
         [9.8349e-01, 9.8338e-01, 9.8286e-01,  ..., 4.4096e-04,
          9.8280e-01, 9.8312e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 403:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0072, 0.0074,  ..., 0.0074, 0.0074, 0.0072],
         [0.0074, 0.0072, 0.0074,  ..., 0.0074, 0.0074, 0.0072],
         [0.0074, 0.0072, 0.0074,  ..., 0.0074, 0.0074, 0.0072],
         [0.9779, 0.9783, 0.9777,  ..., 0.9779, 0.9778, 0.9783]],
        [[0.0072, 0.0070, 0.0072,  ..., 0.0071, 0.0071, 0.0070],
         [0.0072, 0.0070, 0.0072,  ..., 0.0071, 0.0071, 0.0070],
         [0.0072, 0.0070, 0.0072,  ..., 0.0071, 0.0071, 0.0070],
         [0.9783, 0.9789, 0.9784,  ..., 0.9787, 0.9787, 0.9789]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:32,823 [Process: 0] Synchronize training processes
2024-08-16 16:01:32,824 [Process: 0] Evaluating...
2024-08-16 16:01:32,826 [Process: 0] EPOCH 404:
2024-08-16 16:01:32,828 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.6300e-03, 5.3032e-03, 5.4324e-03,  ..., 5.3989e-03,
          5.7208e-03, 5.3821e-03],
         [5.6300e-03, 5.3032e-03, 5.4324e-03,  ..., 5.3989e-03,
          5.7208e-03, 5.3821e-03],
         [5.6300e-03, 5.3032e-03, 5.4324e-03,  ..., 5.3989e-03,
          5.7208e-03, 5.3821e-03],
         [9.8311e-01, 9.8409e-01, 9.8370e-01,  ..., 9.8380e-01,
          9.8284e-01, 9.8385e-01]],
        [[5.3193e-03, 5.5308e-03, 5.4061e-03,  ..., 4.3228e-04,
          5.5777e-03, 5.3182e-03],
         [5.3193e-03, 5.5308e-03, 5.4061e-03,  ..., 4.3228e-04,
          5.5777e-03, 5.3182e-03],
         [5.3193e-03, 5.5308e-03, 5.4061e-03,  ..., 9.9870e-01,
          5.5777e-03, 5.3182e-03],
         [9.8404e-01, 9.8341e-01, 9.8378e-01,  ..., 4.3228e-04,
          9.8327e-01, 9.8405e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 404:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0073, 0.0074,  ..., 0.0074, 0.0073, 0.0073],
         [0.0073, 0.0073, 0.0074,  ..., 0.0074, 0.0073, 0.0073],
         [0.0074, 0.0073, 0.0074,  ..., 0.0075, 0.0073, 0.0073],
         [0.9779, 0.9782, 0.9777,  ..., 0.9777, 0.9780, 0.9782]],
        [[0.0071, 0.0071, 0.0071,  ..., 0.0070, 0.0071, 0.0070],
         [0.0071, 0.0071, 0.0071,  ..., 0.0070, 0.0071, 0.0070],
         [0.0072, 0.0074, 0.0071,  ..., 0.0070, 0.0071, 0.0070],
         [0.9786, 0.9785, 0.9786,  ..., 0.9790, 0.9786, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:34,731 [Process: 0] Synchronize training processes
2024-08-16 16:01:34,731 [Process: 0] Evaluating...
2024-08-16 16:01:34,733 [Process: 0] EPOCH 405:
2024-08-16 16:01:34,736 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2659e-03, 5.3573e-03, 5.5051e-03,  ..., 5.6414e-03,
          5.5937e-03, 5.3419e-03],
         [5.2659e-03, 5.3573e-03, 5.5051e-03,  ..., 5.6414e-03,
          5.5937e-03, 5.3419e-03],
         [5.2659e-03, 5.3573e-03, 5.5051e-03,  ..., 5.6414e-03,
          5.5937e-03, 5.3419e-03],
         [9.8420e-01, 9.8393e-01, 9.8348e-01,  ..., 9.8308e-01,
          9.8322e-01, 9.8397e-01]],
        [[5.4525e-03, 5.6278e-03, 5.3845e-03,  ..., 1.5263e-04,
          5.3223e-03, 5.4273e-03],
         [5.4525e-03, 5.6278e-03, 5.3845e-03,  ..., 1.5263e-04,
          5.3223e-03, 5.4273e-03],
         [5.4525e-03, 5.6278e-03, 5.3845e-03,  ..., 9.9954e-01,
          5.3223e-03, 5.4273e-03],
         [9.8364e-01, 9.8312e-01, 9.8385e-01,  ..., 1.5263e-04,
          9.8403e-01, 9.8372e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 405:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0074, 0.0074, 0.0074,  ..., 0.0074, 0.0075, 0.0075],
         [0.0074, 0.0074, 0.0074,  ..., 0.0074, 0.0075, 0.0075],
         [0.0074, 0.0074, 0.0074,  ..., 0.0074, 0.0075, 0.0075],
         [0.9778, 0.9777, 0.9777,  ..., 0.9777, 0.9775, 0.9775]],
        [[0.0073, 0.0073, 0.0070,  ..., 0.0070, 0.0073, 0.0072],
         [0.0073, 0.0073, 0.0070,  ..., 0.0070, 0.0073, 0.0072],
         [0.0073, 0.0073, 0.0070,  ..., 0.0070, 0.0073, 0.0072],
         [0.9781, 0.9781, 0.9789,  ..., 0.9790, 0.9782, 0.9785]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:01:36,643 [Process: 0] Synchronize training processes
2024-08-16 16:01:36,643 [Process: 0] Evaluating...
2024-08-16 16:01:36,645 [Process: 0] EPOCH 406:
2024-08-16 16:01:36,647 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3646e-03, 5.4045e-03, 5.4670e-03,  ..., 5.5391e-03,
          5.6672e-03, 5.3144e-03],
         [5.3646e-03, 5.4045e-03, 5.4670e-03,  ..., 5.5391e-03,
          5.6672e-03, 5.3144e-03],
         [5.3646e-03, 5.4045e-03, 5.4670e-03,  ..., 5.5391e-03,
          5.6672e-03, 5.3144e-03],
         [9.8391e-01, 9.8379e-01, 9.8360e-01,  ..., 9.8338e-01,
          9.8300e-01, 9.8406e-01]],
        [[5.4554e-03, 5.3239e-03, 5.5902e-03,  ..., 5.9899e-04,
          5.4813e-03, 5.4970e-03],
         [5.4554e-03, 5.3239e-03, 5.5902e-03,  ..., 5.9899e-04,
          5.4813e-03, 5.4970e-03],
         [5.4554e-03, 5.3239e-03, 5.5902e-03,  ..., 9.9820e-01,
          5.4813e-03, 5.4970e-03],
         [9.8363e-01, 9.8403e-01, 9.8323e-01,  ..., 5.9899e-04,
          9.8356e-01, 9.8351e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 406:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0075, 0.0075, 0.0074,  ..., 0.0073, 0.0073, 0.0076],
         [0.0075, 0.0075, 0.0074,  ..., 0.0073, 0.0073, 0.0076],
         [0.0075, 0.0075, 0.0074,  ..., 0.0073, 0.0073, 0.0076],
         [0.9776, 0.9776, 0.9779,  ..., 0.9780, 0.9782, 0.9773]],
        [[0.0071, 0.0070, 0.0069,  ..., 0.0069, 0.0072, 0.0071],
         [0.0071, 0.0070, 0.0069,  ..., 0.0069, 0.0072, 0.0071],
         [0.0071, 0.0070, 0.0069,  ..., 0.0069, 0.0072, 0.0071],
         [0.9788, 0.9789, 0.9792,  ..., 0.9792, 0.9783, 0.9788]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4163e-03, 5.2262e-03, 5.4044e-03,  ..., 5.2531e-03,
          5.4770e-03, 5.4615e-03],
         [5.4163e-03, 5.2262e-03, 5.4044e-03,  ..., 5.2531e-03,
          5.4770e-03, 5.4615e-03],
         [5.4163e-03, 5.2262e-03, 5.4044e-03,  ..., 5.2531e-03,
          5.4770e-03, 5.4615e-03],
         [9.8375e-01, 9.8432e-01, 9.8379e-01,  ..., 9.8424e-01,
          9.8357e-01, 9.8362e-01]],
        [[5.2585e-03, 5.5135e-03, 5.5297e-03,  ..., 3.7450e-05,
          5.3679e-03, 5.6445e-03],
         [5.2585e-03, 5.5135e-03, 5.5297e-03,  ..., 3.7450e-05,
          5.3679e-03, 5.6445e-03],
         [5.2585e-03, 5.5135e-03, 5.5297e-03,  ..., 9.9989e-01,
          5.3679e-03, 5.6445e-03],
         [9.8422e-01, 9.8346e-01, 9.8341e-01,  ..., 3.7450e-05,
          9.8390e-01, 9.8307e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:38,555 [Process: 0] Synchronize training processes
2024-08-16 16:01:38,556 [Process: 0] Evaluating...
2024-08-16 16:01:38,558 [Process: 0] EPOCH 407:
2024-08-16 16:01:38,559 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 407:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0076, 0.0074, 0.0073,  ..., 0.0073, 0.0071, 0.0071],
         [0.0076, 0.0074, 0.0073,  ..., 0.0073, 0.0071, 0.0071],
         [0.0076, 0.0074, 0.0073,  ..., 0.0073, 0.0071, 0.0071],
         [0.9773, 0.9777, 0.9781,  ..., 0.9782, 0.9786, 0.9786]],
        [[0.0071, 0.0071, 0.0070,  ..., 0.0071, 0.0070, 0.0070],
         [0.0071, 0.0071, 0.0070,  ..., 0.0071, 0.0070, 0.0070],
         [0.0071, 0.0071, 0.0070,  ..., 0.0071, 0.0070, 0.0070],
         [0.9788, 0.9787, 0.9790,  ..., 0.9788, 0.9789, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2454e-03, 5.1311e-03, 5.2750e-03,  ..., 5.2282e-03,
          5.1868e-03, 5.6184e-03],
         [5.2454e-03, 5.1311e-03, 5.2750e-03,  ..., 5.2282e-03,
          5.1868e-03, 5.6184e-03],
         [5.2454e-03, 5.1311e-03, 5.2750e-03,  ..., 5.2282e-03,
          5.1868e-03, 5.6184e-03],
         [9.8426e-01, 9.8461e-01, 9.8417e-01,  ..., 9.8432e-01,
          9.8444e-01, 9.8314e-01]],
        [[5.4315e-03, 5.3620e-03, 5.4359e-03,  ..., 3.1923e-04,
          5.3635e-03, 5.3656e-03],
         [5.4315e-03, 5.3620e-03, 5.4359e-03,  ..., 3.1923e-04,
          5.3635e-03, 5.3656e-03],
         [5.4315e-03, 5.3620e-03, 5.4359e-03,  ..., 9.9904e-01,
          5.3635e-03, 5.3656e-03],
         [9.8371e-01, 9.8391e-01, 9.8369e-01,  ..., 3.1923e-04,
          9.8391e-01, 9.8390e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:40,518 [Process: 0] Synchronize training processes
2024-08-16 16:01:40,518 [Process: 0] Evaluating...
2024-08-16 16:01:40,520 [Process: 0] EPOCH 408:
2024-08-16 16:01:40,522 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 408:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0073, 0.0073, 0.0072,  ..., 0.0074, 0.0073, 0.0074],
         [0.0073, 0.0073, 0.0072,  ..., 0.0074, 0.0073, 0.0074],
         [0.0073, 0.0073, 0.0072,  ..., 0.0074, 0.0073, 0.0074],
         [0.9782, 0.9780, 0.9783,  ..., 0.9779, 0.9780, 0.9778]],
        [[0.0069, 0.0070, 0.0071,  ..., 0.0069, 0.0070, 0.0070],
         [0.0069, 0.0070, 0.0071,  ..., 0.0069, 0.0070, 0.0070],
         [0.0069, 0.0070, 0.0071,  ..., 0.0069, 0.0070, 0.0070],
         [0.9792, 0.9789, 0.9788,  ..., 0.9793, 0.9791, 0.9791]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3991e-03, 5.1697e-03, 5.4421e-03,  ..., 5.2106e-03,
          5.3900e-03, 5.2842e-03],
         [5.3991e-03, 5.1697e-03, 5.4421e-03,  ..., 5.2106e-03,
          5.3900e-03, 5.2842e-03],
         [5.3991e-03, 5.1697e-03, 5.4421e-03,  ..., 5.2106e-03,
          5.3900e-03, 5.2842e-03],
         [9.8380e-01, 9.8449e-01, 9.8367e-01,  ..., 9.8437e-01,
          9.8383e-01, 9.8415e-01]],
        [[5.4470e-03, 5.1374e-03, 5.5892e-03,  ..., 4.0291e-05,
          5.1777e-03, 5.2686e-03],
         [5.4470e-03, 5.1374e-03, 5.5892e-03,  ..., 4.0291e-05,
          5.1777e-03, 5.2686e-03],
         [5.4470e-03, 5.1374e-03, 5.5892e-03,  ..., 9.9988e-01,
          5.1777e-03, 5.2686e-03],
         [9.8366e-01, 9.8459e-01, 9.8323e-01,  ..., 4.0291e-05,
          9.8447e-01, 9.8419e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:42,545 [Process: 0] Synchronize training processes
2024-08-16 16:01:42,545 [Process: 0] Evaluating...
2024-08-16 16:01:42,547 [Process: 0] EPOCH 409:
2024-08-16 16:01:42,549 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 409:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0073, 0.0073,  ..., 0.0074, 0.0071, 0.0072],
         [0.0072, 0.0073, 0.0073,  ..., 0.0074, 0.0071, 0.0072],
         [0.0072, 0.0073, 0.0073,  ..., 0.0074, 0.0071, 0.0072],
         [0.9783, 0.9781, 0.9781,  ..., 0.9779, 0.9786, 0.9784]],
        [[0.0069, 0.0068, 0.0071,  ..., 0.0069, 0.0070, 0.0070],
         [0.0069, 0.0068, 0.0071,  ..., 0.0069, 0.0070, 0.0070],
         [0.0069, 0.0068, 0.0071,  ..., 0.0069, 0.0070, 0.0070],
         [0.9793, 0.9797, 0.9788,  ..., 0.9792, 0.9791, 0.9790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1419e-03, 5.1655e-03, 5.1895e-03,  ..., 5.1317e-03,
          5.5747e-03, 5.2812e-03],
         [5.1419e-03, 5.1655e-03, 5.1895e-03,  ..., 5.1317e-03,
          5.5747e-03, 5.2812e-03],
         [5.1419e-03, 5.1655e-03, 5.1895e-03,  ..., 5.1317e-03,
          5.5747e-03, 5.2812e-03],
         [9.8457e-01, 9.8450e-01, 9.8443e-01,  ..., 9.8461e-01,
          9.8328e-01, 9.8416e-01]],
        [[5.3245e-03, 5.2344e-03, 5.5158e-03,  ..., 9.8896e-04,
          5.3632e-03, 5.1943e-03],
         [5.3245e-03, 5.2344e-03, 5.5158e-03,  ..., 9.8896e-04,
          5.3632e-03, 5.1943e-03],
         [5.3245e-03, 5.2344e-03, 5.5158e-03,  ..., 9.9703e-01,
          5.3632e-03, 5.1943e-03],
         [9.8403e-01, 9.8430e-01, 9.8345e-01,  ..., 9.8896e-04,
          9.8391e-01, 9.8442e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:44,517 [Process: 0] Synchronize training processes
2024-08-16 16:01:44,517 [Process: 0] Evaluating...
2024-08-16 16:01:44,519 [Process: 0] EPOCH 410:
2024-08-16 16:01:44,521 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 410:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0073, 0.0072,  ..., 0.0072, 0.0072, 0.0073],
         [0.0072, 0.0073, 0.0072,  ..., 0.0072, 0.0072, 0.0073],
         [0.0072, 0.0073, 0.0072,  ..., 0.0072, 0.0072, 0.0073],
         [0.9785, 0.9782, 0.9784,  ..., 0.9783, 0.9784, 0.9782]],
        [[0.0069, 0.0071, 0.0069,  ..., 0.0069, 0.0070, 0.0068],
         [0.0069, 0.0071, 0.0069,  ..., 0.0069, 0.0070, 0.0068],
         [0.0069, 0.0071, 0.0069,  ..., 0.0069, 0.0070, 0.0068],
         [0.9793, 0.9788, 0.9794,  ..., 0.9794, 0.9791, 0.9795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.4937e-03, 5.4486e-03, 5.4397e-03,  ..., 5.4268e-03,
          5.5123e-03, 5.4287e-03],
         [5.4937e-03, 5.4486e-03, 5.4397e-03,  ..., 5.4268e-03,
          5.5123e-03, 5.4287e-03],
         [5.4937e-03, 5.4486e-03, 5.4397e-03,  ..., 5.4268e-03,
          5.5123e-03, 5.4287e-03],
         [9.8352e-01, 9.8365e-01, 9.8368e-01,  ..., 9.8372e-01,
          9.8346e-01, 9.8371e-01]],
        [[5.3122e-03, 5.3076e-03, 5.2010e-03,  ..., 6.4343e-04,
          5.2285e-03, 5.6412e-03],
         [5.3122e-03, 5.3076e-03, 5.2010e-03,  ..., 6.4343e-04,
          5.2285e-03, 5.6412e-03],
         [5.3122e-03, 5.3076e-03, 5.2010e-03,  ..., 9.9807e-01,
          5.2285e-03, 5.6412e-03],
         [9.8406e-01, 9.8408e-01, 9.8440e-01,  ..., 6.4343e-04,
          9.8431e-01, 9.8308e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:46,620 [Process: 0] Synchronize training processes
2024-08-16 16:01:46,621 [Process: 0] Evaluating...
2024-08-16 16:01:46,623 [Process: 0] EPOCH 411:
2024-08-16 16:01:46,625 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 411:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0071, 0.0071,  ..., 0.0072, 0.0072, 0.0072],
         [0.0072, 0.0071, 0.0071,  ..., 0.0072, 0.0072, 0.0072],
         [0.0072, 0.0071, 0.0071,  ..., 0.0072, 0.0072, 0.0072],
         [0.9783, 0.9787, 0.9787,  ..., 0.9785, 0.9785, 0.9784]],
        [[0.0068, 0.0069, 0.0068,  ..., 0.0068, 0.0070, 0.0068],
         [0.0068, 0.0069, 0.0068,  ..., 0.0068, 0.0070, 0.0068],
         [0.0068, 0.0069, 0.0068,  ..., 0.0068, 0.0070, 0.0068],
         [0.9797, 0.9794, 0.9795,  ..., 0.9796, 0.9790, 0.9797]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 16:01:48,729 [Process: 0] Synchronize training processes
2024-08-16 16:01:48,729 [Process: 0] Evaluating...
2024-08-16 16:01:48,737 [Process: 0] EPOCH 412:
2024-08-16 16:01:48,739 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2427e-03, 5.2107e-03, 5.1831e-03,  ..., 5.3060e-03,
          5.3473e-03, 5.3759e-03],
         [5.2427e-03, 5.2107e-03, 5.1831e-03,  ..., 5.3060e-03,
          5.3473e-03, 5.3759e-03],
         [5.2427e-03, 5.2107e-03, 5.1831e-03,  ..., 5.3060e-03,
          5.3473e-03, 5.3759e-03],
         [9.8427e-01, 9.8437e-01, 9.8445e-01,  ..., 9.8408e-01,
          9.8396e-01, 9.8387e-01]],
        [[5.3899e-03, 5.2297e-03, 5.1830e-03,  ..., 1.6891e-04,
          5.3074e-03, 5.3991e-03],
         [5.3899e-03, 5.2297e-03, 5.1830e-03,  ..., 1.6891e-04,
          5.3074e-03, 5.3991e-03],
         [5.3899e-03, 5.2297e-03, 5.1830e-03,  ..., 9.9949e-01,
          5.3074e-03, 5.3991e-03],
         [9.8383e-01, 9.8431e-01, 9.8445e-01,  ..., 1.6891e-04,
          9.8408e-01, 9.8380e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 412:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0071, 0.0073,  ..., 0.0072, 0.0071, 0.0070],
         [0.0071, 0.0071, 0.0073,  ..., 0.0072, 0.0071, 0.0070],
         [0.0071, 0.0071, 0.0073,  ..., 0.0072, 0.0071, 0.0070],
         [0.9788, 0.9788, 0.9782,  ..., 0.9784, 0.9787, 0.9789]],
        [[0.0068, 0.0069, 0.0068,  ..., 0.0070, 0.0070, 0.0069],
         [0.0068, 0.0069, 0.0068,  ..., 0.0070, 0.0070, 0.0069],
         [0.0068, 0.0069, 0.0068,  ..., 0.0070, 0.0070, 0.0069],
         [0.9797, 0.9792, 0.9797,  ..., 0.9790, 0.9791, 0.9793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:50,793 [Process: 0] Synchronize training processes
2024-08-16 16:01:50,793 [Process: 0] Evaluating...
2024-08-16 16:01:50,795 [Process: 0] EPOCH 413:
2024-08-16 16:01:50,797 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0786e-03, 5.3959e-03, 5.1764e-03,  ..., 5.3335e-03,
          5.2843e-03, 5.2844e-03],
         [5.0786e-03, 5.3959e-03, 5.1764e-03,  ..., 5.3335e-03,
          5.2843e-03, 5.2844e-03],
         [5.0786e-03, 5.3959e-03, 5.1764e-03,  ..., 5.3335e-03,
          5.2843e-03, 5.2844e-03],
         [9.8476e-01, 9.8381e-01, 9.8447e-01,  ..., 9.8400e-01,
          9.8415e-01, 9.8415e-01]],
        [[5.1671e-03, 5.1990e-03, 5.1844e-03,  ..., 9.8989e-05,
          5.2690e-03, 5.3190e-03],
         [5.1671e-03, 5.1990e-03, 5.1844e-03,  ..., 9.8989e-05,
          5.2690e-03, 5.3190e-03],
         [5.1671e-03, 5.1990e-03, 5.1844e-03,  ..., 9.9970e-01,
          5.2690e-03, 5.3190e-03],
         [9.8450e-01, 9.8440e-01, 9.8445e-01,  ..., 9.8989e-05,
          9.8419e-01, 9.8404e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 413:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0072, 0.0070, 0.0071,  ..., 0.0072, 0.0072, 0.0070],
         [0.0072, 0.0070, 0.0071,  ..., 0.0072, 0.0072, 0.0070],
         [0.0072, 0.0070, 0.0071,  ..., 0.0072, 0.0072, 0.0070],
         [0.9783, 0.9789, 0.9787,  ..., 0.9785, 0.9785, 0.9789]],
        [[0.0068, 0.0068, 0.0068,  ..., 0.0068, 0.0069, 0.0069],
         [0.0068, 0.0068, 0.0068,  ..., 0.0068, 0.0069, 0.0069],
         [0.0068, 0.0068, 0.0068,  ..., 0.0068, 0.0069, 0.0069],
         [0.9796, 0.9797, 0.9795,  ..., 0.9796, 0.9793, 0.9792]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:52,814 [Process: 0] Synchronize training processes
2024-08-16 16:01:52,814 [Process: 0] Evaluating...
2024-08-16 16:01:52,816 [Process: 0] EPOCH 414:
2024-08-16 16:01:52,818 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3367e-03, 5.3206e-03, 5.3116e-03,  ..., 5.1114e-03,
          5.4958e-03, 5.3781e-03],
         [5.3367e-03, 5.3206e-03, 5.3116e-03,  ..., 5.1114e-03,
          5.4958e-03, 5.3781e-03],
         [5.3367e-03, 5.3206e-03, 5.3116e-03,  ..., 5.1114e-03,
          5.4958e-03, 5.3781e-03],
         [9.8399e-01, 9.8404e-01, 9.8407e-01,  ..., 9.8467e-01,
          9.8351e-01, 9.8387e-01]],
        [[5.4860e-03, 5.1857e-03, 5.3550e-03,  ..., 2.8012e-05,
          5.5273e-03, 5.1225e-03],
         [5.4860e-03, 5.1857e-03, 5.3550e-03,  ..., 2.8012e-05,
          5.5273e-03, 5.1225e-03],
         [5.4860e-03, 5.1857e-03, 5.3550e-03,  ..., 9.9992e-01,
          5.5273e-03, 5.1225e-03],
         [9.8354e-01, 9.8444e-01, 9.8393e-01,  ..., 2.8012e-05,
          9.8342e-01, 9.8463e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 414:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0071, 0.0070, 0.0071,  ..., 0.0071, 0.0072, 0.0072],
         [0.0071, 0.0070, 0.0071,  ..., 0.0071, 0.0072, 0.0072],
         [0.0071, 0.0070, 0.0071,  ..., 0.0071, 0.0072, 0.0072],
         [0.9787, 0.9789, 0.9787,  ..., 0.9788, 0.9784, 0.9785]],
        [[0.0068, 0.0068, 0.0069,  ..., 0.0067, 0.0069, 0.0068],
         [0.0068, 0.0068, 0.0069,  ..., 0.0067, 0.0069, 0.0068],
         [0.0068, 0.0068, 0.0069,  ..., 0.0067, 0.0069, 0.0068],
         [0.9797, 0.9795, 0.9794,  ..., 0.9798, 0.9794, 0.9795]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:54,823 [Process: 0] Synchronize training processes
2024-08-16 16:01:54,824 [Process: 0] Evaluating...
2024-08-16 16:01:54,826 [Process: 0] EPOCH 415:
2024-08-16 16:01:54,828 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2380e-03, 5.2459e-03, 5.3322e-03,  ..., 5.1440e-03,
          5.3705e-03, 5.1707e-03],
         [5.2380e-03, 5.2459e-03, 5.3322e-03,  ..., 5.1440e-03,
          5.3705e-03, 5.1707e-03],
         [5.2380e-03, 5.2459e-03, 5.3322e-03,  ..., 5.1440e-03,
          5.3705e-03, 5.1707e-03],
         [9.8429e-01, 9.8426e-01, 9.8400e-01,  ..., 9.8457e-01,
          9.8389e-01, 9.8449e-01]],
        [[5.2839e-03, 5.1647e-03, 5.0441e-03,  ..., 2.4337e-04,
          5.1426e-03, 5.3565e-03],
         [5.2839e-03, 5.1647e-03, 5.0441e-03,  ..., 2.4337e-04,
          5.1426e-03, 5.3565e-03],
         [5.2839e-03, 5.1647e-03, 5.0441e-03,  ..., 9.9927e-01,
          5.1426e-03, 5.3565e-03],
         [9.8415e-01, 9.8451e-01, 9.8487e-01,  ..., 2.4337e-04,
          9.8457e-01, 9.8393e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 415:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0071],
         [0.0070, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0071],
         [0.0070, 0.0071, 0.0070,  ..., 0.0071, 0.0072, 0.0071],
         [0.9790, 0.9787, 0.9789,  ..., 0.9786, 0.9785, 0.9787]],
        [[0.0068, 0.0069, 0.0068,  ..., 0.0068, 0.0068, 0.0069],
         [0.0068, 0.0069, 0.0068,  ..., 0.0068, 0.0068, 0.0069],
         [0.0068, 0.0069, 0.0068,  ..., 0.0068, 0.0068, 0.0069],
         [0.9796, 0.9792, 0.9797,  ..., 0.9796, 0.9797, 0.9794]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:56,804 [Process: 0] Synchronize training processes
2024-08-16 16:01:56,804 [Process: 0] Evaluating...
2024-08-16 16:01:56,806 [Process: 0] EPOCH 416:
2024-08-16 16:01:56,808 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.0411e-03, 5.0520e-03, 5.2485e-03,  ..., 5.3900e-03,
          5.1266e-03, 5.1990e-03],
         [5.0411e-03, 5.0520e-03, 5.2485e-03,  ..., 5.3900e-03,
          5.1266e-03, 5.1990e-03],
         [5.0411e-03, 5.0520e-03, 5.2485e-03,  ..., 5.3900e-03,
          5.1266e-03, 5.1990e-03],
         [9.8488e-01, 9.8484e-01, 9.8425e-01,  ..., 9.8383e-01,
          9.8462e-01, 9.8440e-01]],
        [[5.3222e-03, 5.1166e-03, 5.0462e-03,  ..., 1.3359e-05,
          5.2222e-03, 5.3285e-03],
         [5.3222e-03, 5.1166e-03, 5.0462e-03,  ..., 1.3359e-05,
          5.2222e-03, 5.3285e-03],
         [5.3222e-03, 5.1166e-03, 5.0462e-03,  ..., 9.9996e-01,
          5.2222e-03, 5.3285e-03],
         [9.8403e-01, 9.8465e-01, 9.8486e-01,  ..., 1.3359e-05,
          9.8433e-01, 9.8401e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 416:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0071, 0.0069,  ..., 0.0069, 0.0069, 0.0070],
         [0.0069, 0.0071, 0.0069,  ..., 0.0069, 0.0069, 0.0070],
         [0.0069, 0.0071, 0.0069,  ..., 0.0069, 0.0069, 0.0070],
         [0.9792, 0.9788, 0.9792,  ..., 0.9792, 0.9792, 0.9789]],
        [[0.0069, 0.0067, 0.0068,  ..., 0.0069, 0.0068, 0.0067],
         [0.0069, 0.0067, 0.0068,  ..., 0.0069, 0.0068, 0.0067],
         [0.0069, 0.0067, 0.0068,  ..., 0.0069, 0.0068, 0.0067],
         [0.9793, 0.9799, 0.9797,  ..., 0.9793, 0.9795, 0.9800]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:01:58,876 [Process: 0] Synchronize training processes
2024-08-16 16:01:58,877 [Process: 0] Evaluating...
2024-08-16 16:01:58,879 [Process: 0] EPOCH 417:
2024-08-16 16:01:58,881 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.2799e-03, 5.2156e-03, 5.1177e-03,  ..., 5.1050e-03,
          5.1530e-03, 5.3394e-03],
         [5.2799e-03, 5.2156e-03, 5.1177e-03,  ..., 5.1050e-03,
          5.1530e-03, 5.3394e-03],
         [5.2799e-03, 5.2156e-03, 5.1177e-03,  ..., 5.1050e-03,
          5.1530e-03, 5.3394e-03],
         [9.8416e-01, 9.8435e-01, 9.8465e-01,  ..., 9.8468e-01,
          9.8454e-01, 9.8398e-01]],
        [[5.3811e-03, 5.3179e-03, 5.1612e-03,  ..., 4.2523e-04,
          5.1002e-03, 5.3787e-03],
         [5.3811e-03, 5.3179e-03, 5.1612e-03,  ..., 4.2523e-04,
          5.1002e-03, 5.3787e-03],
         [5.3811e-03, 5.3179e-03, 5.1612e-03,  ..., 9.9872e-01,
          5.1002e-03, 5.3787e-03],
         [9.8386e-01, 9.8405e-01, 9.8452e-01,  ..., 4.2523e-04,
          9.8470e-01, 9.8386e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 417:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0070, 0.0069, 0.0069,  ..., 0.0071, 0.0071, 0.0069],
         [0.0070, 0.0069, 0.0069,  ..., 0.0071, 0.0071, 0.0069],
         [0.0070, 0.0069, 0.0069,  ..., 0.0071, 0.0071, 0.0069],
         [0.9791, 0.9793, 0.9792,  ..., 0.9788, 0.9788, 0.9793]],
        [[0.0067, 0.0067, 0.0067,  ..., 0.0068, 0.0068, 0.0068],
         [0.0067, 0.0067, 0.0067,  ..., 0.0068, 0.0068, 0.0068],
         [0.0067, 0.0067, 0.0067,  ..., 0.0068, 0.0068, 0.0068],
         [0.9799, 0.9798, 0.9798,  ..., 0.9797, 0.9795, 0.9796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:02:00,967 [Process: 0] Synchronize training processes
2024-08-16 16:02:00,967 [Process: 0] Evaluating...
2024-08-16 16:02:00,969 [Process: 0] EPOCH 418:
2024-08-16 16:02:00,971 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.3976e-03, 5.3650e-03, 5.2847e-03,  ..., 5.4248e-03,
          5.3859e-03, 5.1827e-03],
         [5.3976e-03, 5.3650e-03, 5.2847e-03,  ..., 5.4248e-03,
          5.3859e-03, 5.1827e-03],
         [5.3976e-03, 5.3650e-03, 5.2847e-03,  ..., 5.4248e-03,
          5.3859e-03, 5.1827e-03],
         [9.8381e-01, 9.8391e-01, 9.8415e-01,  ..., 9.8373e-01,
          9.8384e-01, 9.8445e-01]],
        [[5.1305e-03, 5.4858e-03, 5.1508e-03,  ..., 1.6986e-04,
          5.1326e-03, 5.4241e-03],
         [5.1305e-03, 5.4858e-03, 5.1508e-03,  ..., 1.6986e-04,
          5.1326e-03, 5.4241e-03],
         [5.1305e-03, 5.4858e-03, 5.1508e-03,  ..., 9.9949e-01,
          5.1326e-03, 5.4241e-03],
         [9.8461e-01, 9.8354e-01, 9.8455e-01,  ..., 1.6986e-04,
          9.8460e-01, 9.8373e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 418:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0071, 0.0071,  ..., 0.0069, 0.0070, 0.0069],
         [0.0069, 0.0071, 0.0071,  ..., 0.0069, 0.0070, 0.0069],
         [0.0069, 0.0071, 0.0071,  ..., 0.0069, 0.0070, 0.0069],
         [0.9792, 0.9788, 0.9787,  ..., 0.9792, 0.9789, 0.9793]],
        [[0.0067, 0.0066, 0.0068,  ..., 0.0067, 0.0066, 0.0067],
         [0.0067, 0.0066, 0.0068,  ..., 0.0067, 0.0066, 0.0067],
         [0.0067, 0.0066, 0.0068,  ..., 0.0067, 0.0066, 0.0067],
         [0.9800, 0.9801, 0.9797,  ..., 0.9798, 0.9801, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:02:03,063 [Process: 0] Synchronize training processes
2024-08-16 16:02:03,063 [Process: 0] Evaluating...
2024-08-16 16:02:03,066 [Process: 0] EPOCH 419:
2024-08-16 16:02:03,068 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[5.1533e-03, 5.2519e-03, 5.0801e-03,  ..., 5.3732e-03,
          5.2803e-03, 5.3158e-03],
         [5.1533e-03, 5.2519e-03, 5.0801e-03,  ..., 5.3732e-03,
          5.2803e-03, 5.3158e-03],
         [5.1533e-03, 5.2519e-03, 5.0801e-03,  ..., 5.3732e-03,
          5.2803e-03, 5.3158e-03],
         [9.8454e-01, 9.8424e-01, 9.8476e-01,  ..., 9.8388e-01,
          9.8416e-01, 9.8405e-01]],
        [[5.1528e-03, 5.1516e-03, 5.4494e-03,  ..., 3.0975e-05,
          5.2192e-03, 5.0551e-03],
         [5.1528e-03, 5.1516e-03, 5.4494e-03,  ..., 3.0975e-05,
          5.2192e-03, 5.0551e-03],
         [5.1528e-03, 5.1516e-03, 5.4494e-03,  ..., 9.9991e-01,
          5.2192e-03, 5.0551e-03],
         [9.8454e-01, 9.8455e-01, 9.8365e-01,  ..., 3.0975e-05,
          9.8434e-01, 9.8483e-01]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 419:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0070, 0.0070,  ..., 0.0069, 0.0070, 0.0069],
         [0.0069, 0.0070, 0.0070,  ..., 0.0069, 0.0070, 0.0069],
         [0.0069, 0.0070, 0.0070,  ..., 0.0069, 0.0070, 0.0069],
         [0.9793, 0.9790, 0.9791,  ..., 0.9793, 0.9790, 0.9793]],
        [[0.0068, 0.0067, 0.0066,  ..., 0.0068, 0.0066, 0.0067],
         [0.0068, 0.0067, 0.0066,  ..., 0.0068, 0.0066, 0.0067],
         [0.0068, 0.0067, 0.0066,  ..., 0.0068, 0.0066, 0.0067],
         [0.9797, 0.9799, 0.9801,  ..., 0.9797, 0.9801, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
2024-08-16 16:02:05,171 [Process: 0] Synchronize training processes
2024-08-16 16:02:05,171 [Process: 0] Evaluating...
2024-08-16 16:02:05,173 [Process: 0] EPOCH 420:
2024-08-16 16:02:05,175 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0052, 0.0052, 0.0050,  ..., 0.0049, 0.0053, 0.0049],
         [0.0052, 0.0052, 0.0050,  ..., 0.0049, 0.0053, 0.0049],
         [0.0052, 0.0052, 0.0050,  ..., 0.0049, 0.0053, 0.0049],
         [0.9845, 0.9844, 0.9851,  ..., 0.9852, 0.9840, 0.9853]],
        [[0.0052, 0.0052, 0.0052,  ..., 0.0026, 0.0053, 0.0051],
         [0.0052, 0.0052, 0.0052,  ..., 0.0026, 0.0053, 0.0051],
         [0.0052, 0.0052, 0.0052,  ..., 0.9922, 0.0053, 0.0051],
         [0.9843, 0.9844, 0.9845,  ..., 0.0026, 0.9841, 0.9848]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 420:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 4, 4096])
------target shape: torch.Size([2, 4096, 4])
tensor([[[0.0069, 0.0069, 0.0068,  ..., 0.0069, 0.0069, 0.0069],
         [0.0069, 0.0069, 0.0068,  ..., 0.0069, 0.0069, 0.0069],
         [0.0069, 0.0069, 0.0068,  ..., 0.0069, 0.0069, 0.0069],
         [0.9792, 0.9792, 0.9795,  ..., 0.9792, 0.9792, 0.9792]],
        [[0.0067, 0.0069, 0.0066,  ..., 0.0068, 0.0067, 0.0067],
         [0.0067, 0.0069, 0.0066,  ..., 0.0068, 0.0067, 0.0067],
         [0.0067, 0.0069, 0.0066,  ..., 0.0068, 0.0067, 0.0067],
         [0.9798, 0.9794, 0.9801,  ..., 0.9796, 0.9799, 0.9799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 4096])
mask shape: torch.Size([2, 4096, 4])
shape of inputs: torch.Size([2, 4, 4096])
shape of targets: torch.Size([2, 4, 4096])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 125, in __getitem__
    fps_indices_scene_np = fps_indices_scene.squeeze(0).cpu().numpy()
KeyboardInterrupt