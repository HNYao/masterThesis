2024-08-16 17:07:08,722 [Worker 0] Is distributed: False
2024-08-16 17:07:08,723 [Process: 0] Starting training
2024-08-16 17:07:08,723 [Process: 0] EPOCH 1:
2024-08-16 17:07:08,725 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.5000, 0.5000,  ..., 0.5905, 0.5000, 0.7182],
         [0.5000, 0.5000, 0.5000,  ..., 0.4095, 0.5000, 0.2818]],
        [[0.5112, 0.7725, 0.0253,  ..., 0.3480, 0.5541, 0.3911],
         [0.4888, 0.2275, 0.9747,  ..., 0.6520, 0.4459, 0.6089]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:11,449 [Process: 0] Synchronize training processes
2024-08-16 17:07:11,449 [Process: 0] Evaluating...
2024-08-16 17:07:11,458 [Process: 0] EPOCH 2:
2024-08-16 17:07:11,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4396, 0.6084, 0.5000,  ..., 0.5422, 0.5000, 0.4288],
         [0.5604, 0.3916, 0.5000,  ..., 0.4578, 0.5000, 0.5712]],
        [[0.5470, 0.3928, 0.5000,  ..., 0.5000, 0.5739, 0.4577],
         [0.4530, 0.6072, 0.5000,  ..., 0.5000, 0.4261, 0.5423]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.4847, 0.6020, 0.3459,  ..., 0.4512, 0.4490, 0.6283],
         [0.5153, 0.3980, 0.6541,  ..., 0.5488, 0.5510, 0.3717]],
        [[0.5000, 0.5000, 0.4949,  ..., 0.5000, 0.5000, 0.2492],
         [0.5000, 0.5000, 0.5051,  ..., 0.5000, 0.5000, 0.7508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.6190, 0.1213,  ..., 0.6974, 0.4146, 0.3902],
         [0.5000, 0.3810, 0.8787,  ..., 0.3026, 0.5854, 0.6098]],
        [[0.5000, 0.6686, 0.1678,  ..., 0.2541, 0.7275, 0.6965],
         [0.5000, 0.3314, 0.8322,  ..., 0.7459, 0.2725, 0.3035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.6716, 0.5893,  ..., 0.5016, 0.7282, 0.7053],
         [0.5000, 0.3284, 0.4107,  ..., 0.4984, 0.2718, 0.2947]],
        [[0.5000, 0.5901, 0.6403,  ..., 0.4755, 0.6865, 0.4950],
         [0.5000, 0.4099, 0.3597,  ..., 0.5245, 0.3135, 0.5050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:13,462 [Process: 0] Synchronize training processes
2024-08-16 17:07:13,462 [Process: 0] Evaluating...
2024-08-16 17:07:13,464 [Process: 0] EPOCH 3:
2024-08-16 17:07:13,466 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6749, 0.6171, 0.5754,  ..., 0.6700, 0.5000, 0.5000],
         [0.3251, 0.3829, 0.4246,  ..., 0.3300, 0.5000, 0.5000]],
        [[0.5630, 0.5000, 0.4972,  ..., 0.5000, 0.7161, 0.5890],
         [0.4370, 0.5000, 0.5028,  ..., 0.5000, 0.2839, 0.4110]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6155, 0.8031, 0.7075,  ..., 0.5000, 0.6763, 0.6758],
         [0.3845, 0.1969, 0.2925,  ..., 0.5000, 0.3237, 0.3242]],
        [[0.7253, 0.7276, 0.5000,  ..., 0.5000, 0.5000, 0.5000],
         [0.2747, 0.2724, 0.5000,  ..., 0.5000, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:15,475 [Process: 0] Synchronize training processes
2024-08-16 17:07:15,476 [Process: 0] Evaluating...
2024-08-16 17:07:15,478 [Process: 0] EPOCH 4:
2024-08-16 17:07:15,480 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.5000, 0.7393, 0.7182,  ..., 0.7242, 0.5000, 0.8031],
         [0.5000, 0.2607, 0.2818,  ..., 0.2758, 0.5000, 0.1969]],
        [[0.5000, 0.7412, 0.6787,  ..., 0.5000, 0.7108, 0.5000],
         [0.5000, 0.2588, 0.3213,  ..., 0.5000, 0.2892, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:07:17,608 [Process: 0] Synchronize training processes
2024-08-16 17:07:17,608 [Process: 0] Evaluating...
2024-08-16 17:07:17,610 [Process: 0] EPOCH 5:
2024-08-16 17:07:17,613 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:19,709 [Process: 0] Synchronize training processes
2024-08-16 17:07:19,709 [Process: 0] Evaluating...
2024-08-16 17:07:19,712 [Process: 0] EPOCH 6:
2024-08-16 17:07:19,715 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7097, 0.7482, 0.6749,  ..., 0.5000, 0.7599, 0.7318],
         [0.2903, 0.2518, 0.3251,  ..., 0.5000, 0.2401, 0.2682]],
        [[0.7781, 0.6363, 0.7076,  ..., 0.4962, 0.7158, 0.7318],
         [0.2219, 0.3637, 0.2924,  ..., 0.5038, 0.2842, 0.2682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6863, 0.7493, 0.6848,  ..., 0.6792, 0.5000, 0.6464],
         [0.3137, 0.2507, 0.3152,  ..., 0.3208, 0.5000, 0.3536]],
        [[0.6652, 0.7254, 0.6858,  ..., 0.3233, 0.5000, 0.5000],
         [0.3348, 0.2746, 0.3142,  ..., 0.6767, 0.5000, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:21,971 [Process: 0] Synchronize training processes
2024-08-16 17:07:21,972 [Process: 0] Evaluating...
2024-08-16 17:07:21,974 [Process: 0] EPOCH 7:
2024-08-16 17:07:21,977 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7380, 0.7518, 0.7365,  ..., 0.5000, 0.6162, 0.7225],
         [0.2620, 0.2482, 0.2635,  ..., 0.5000, 0.3838, 0.2775]],
        [[0.7541, 0.7487, 0.7618,  ..., 0.7822, 0.6201, 0.6940],
         [0.2459, 0.2513, 0.2382,  ..., 0.2178, 0.3799, 0.3060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7043, 0.7090, 0.7615,  ..., 0.7077, 0.5000, 0.7734],
         [0.2957, 0.2910, 0.2385,  ..., 0.2923, 0.5000, 0.2266]],
        [[0.6784, 0.7410, 0.6761,  ..., 0.5000, 0.7575, 0.5000],
         [0.3216, 0.2590, 0.3239,  ..., 0.5000, 0.2425, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:24,143 [Process: 0] Synchronize training processes
2024-08-16 17:07:24,144 [Process: 0] Evaluating...
2024-08-16 17:07:24,148 [Process: 0] EPOCH 8:
2024-08-16 17:07:24,151 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6858, 0.8021, 0.7916,  ..., 0.5000, 0.5000, 0.6887],
         [0.3142, 0.1979, 0.2084,  ..., 0.5000, 0.5000, 0.3113]],
        [[0.7532, 0.6416, 0.7163,  ..., 0.7224, 0.7358, 0.7266],
         [0.2468, 0.3584, 0.2837,  ..., 0.2776, 0.2642, 0.2734]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7641, 0.7723, 0.6768,  ..., 0.8261, 0.5000, 0.5000],
         [0.2359, 0.2277, 0.3232,  ..., 0.1739, 0.5000, 0.5000]],
        [[0.7442, 0.7758, 0.7096,  ..., 0.5643, 0.7787, 0.6982],
         [0.2558, 0.2242, 0.2904,  ..., 0.4357, 0.2213, 0.3018]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:26,394 [Process: 0] Synchronize training processes
2024-08-16 17:07:26,394 [Process: 0] Evaluating...
2024-08-16 17:07:26,399 [Process: 0] EPOCH 9:
2024-08-16 17:07:26,402 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7289, 0.6970, 0.6844,  ..., 0.5000, 0.7293, 0.7283],
         [0.2711, 0.3030, 0.3156,  ..., 0.5000, 0.2707, 0.2717]],
        [[0.7482, 0.6498, 0.7924,  ..., 0.7152, 0.8448, 0.4953],
         [0.2518, 0.3502, 0.2076,  ..., 0.2848, 0.1552, 0.5047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7374, 0.7420, 0.7263,  ..., 0.7049, 0.7966, 0.5000],
         [0.2626, 0.2580, 0.2737,  ..., 0.2951, 0.2034, 0.5000]],
        [[0.6869, 0.7337, 0.7724,  ..., 0.5000, 0.6937, 0.8263],
         [0.3131, 0.2663, 0.2276,  ..., 0.5000, 0.3063, 0.1737]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:28,662 [Process: 0] Synchronize training processes
2024-08-16 17:07:28,663 [Process: 0] Evaluating...
2024-08-16 17:07:28,665 [Process: 0] EPOCH 10:
2024-08-16 17:07:28,667 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7508, 0.7145, 0.7515,  ..., 0.5000, 0.7802, 0.7113],
         [0.2492, 0.2855, 0.2485,  ..., 0.5000, 0.2198, 0.2887]],
        [[0.8075, 0.7292, 0.7080,  ..., 0.7482, 0.7066, 0.5000],
         [0.1925, 0.2708, 0.2920,  ..., 0.2518, 0.2934, 0.5000]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:07:30,844 [Process: 0] Synchronize training processes
2024-08-16 17:07:30,844 [Process: 0] Evaluating...
2024-08-16 17:07:30,846 [Process: 0] EPOCH 11:
2024-08-16 17:07:30,848 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.6870, 0.6931, 0.7346,  ..., 0.8021, 0.5000, 0.5000],
         [0.3130, 0.3069, 0.2654,  ..., 0.1979, 0.5000, 0.5000]],
        [[0.6861, 0.7538, 0.7626,  ..., 0.5000, 0.7135, 0.7551],
         [0.3139, 0.2462, 0.2374,  ..., 0.5000, 0.2865, 0.2449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7264, 0.7190, 0.7138,  ..., 0.5000, 0.6633, 0.7451],
         [0.2736, 0.2810, 0.2862,  ..., 0.5000, 0.3367, 0.2549]],
        [[0.7237, 0.7223, 0.7550,  ..., 0.7393, 0.7632, 0.7332],
         [0.2763, 0.2777, 0.2450,  ..., 0.2607, 0.2368, 0.2668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7306, 0.7668, 0.7045,  ..., 0.6936, 0.5000, 0.5000],
         [0.2694, 0.2332, 0.2955,  ..., 0.3064, 0.5000, 0.5000]],
        [[0.6827, 0.7086, 0.7411,  ..., 0.5000, 0.7128, 0.7021],
         [0.3173, 0.2914, 0.2589,  ..., 0.5000, 0.2872, 0.2979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7490, 0.7723, 0.7537,  ..., 0.5000, 0.7404, 0.7387],
         [0.2510, 0.2277, 0.2463,  ..., 0.5000, 0.2596, 0.2613]],
        [[0.7910, 0.7686, 0.7181,  ..., 0.7147, 0.7108, 0.7111],
         [0.2090, 0.2314, 0.2819,  ..., 0.2853, 0.2892, 0.2889]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:32,955 [Process: 0] Synchronize training processes
2024-08-16 17:07:32,955 [Process: 0] Evaluating...
2024-08-16 17:07:32,963 [Process: 0] EPOCH 12:
2024-08-16 17:07:32,965 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7452, 0.7360, 0.7159,  ..., 0.7065, 0.5000, 0.5000],
         [0.2548, 0.2640, 0.2841,  ..., 0.2935, 0.5000, 0.5000]],
        [[0.7644, 0.7430, 0.7309,  ..., 0.5558, 0.6795, 0.7451],
         [0.2356, 0.2570, 0.2691,  ..., 0.4442, 0.3205, 0.2549]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7335, 0.7802, 0.7034,  ..., 0.5000, 0.6808, 0.6995],
         [0.2665, 0.2198, 0.2966,  ..., 0.5000, 0.3192, 0.3005]],
        [[0.7779, 0.7895, 0.6820,  ..., 0.7352, 0.7535, 0.7626],
         [0.2221, 0.2105, 0.3180,  ..., 0.2648, 0.2465, 0.2374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:35,123 [Process: 0] Synchronize training processes
2024-08-16 17:07:35,123 [Process: 0] Evaluating...
2024-08-16 17:07:35,125 [Process: 0] EPOCH 13:
2024-08-16 17:07:35,127 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7770, 0.6858, 0.7086,  ..., 0.7646, 0.5000, 0.5000],
         [0.2230, 0.3142, 0.2914,  ..., 0.2354, 0.5000, 0.5000]],
        [[0.7157, 0.7195, 0.7715,  ..., 0.5000, 0.7435, 0.7626],
         [0.2843, 0.2805, 0.2285,  ..., 0.5000, 0.2565, 0.2374]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7265, 0.7727, 0.7725,  ..., 0.5000, 0.7539, 0.7456],
         [0.2735, 0.2273, 0.2275,  ..., 0.5000, 0.2461, 0.2544]],
        [[0.7730, 0.7257, 0.7198,  ..., 0.7517, 0.7191, 0.7767],
         [0.2270, 0.2743, 0.2802,  ..., 0.2483, 0.2809, 0.2233]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:37,210 [Process: 0] Synchronize training processes
2024-08-16 17:07:37,210 [Process: 0] Evaluating...
2024-08-16 17:07:37,212 [Process: 0] EPOCH 14:
2024-08-16 17:07:37,214 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7618, 0.6970, 0.7682,  ..., 0.7441, 0.5000, 0.5000],
         [0.2382, 0.3030, 0.2318,  ..., 0.2559, 0.5000, 0.5000]],
        [[0.8220, 0.7431, 0.7264,  ..., 0.5000, 0.7873, 0.7298],
         [0.1780, 0.2569, 0.2736,  ..., 0.5000, 0.2127, 0.2702]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7841, 0.7087, 0.7595,  ..., 0.5000, 0.7376, 0.7573],
         [0.2159, 0.2913, 0.2405,  ..., 0.5000, 0.2624, 0.2427]],
        [[0.7532, 0.7504, 0.7788,  ..., 0.7581, 0.7324, 0.7336],
         [0.2468, 0.2496, 0.2212,  ..., 0.2419, 0.2676, 0.2664]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:39,238 [Process: 0] Synchronize training processes
2024-08-16 17:07:39,238 [Process: 0] Evaluating...
2024-08-16 17:07:39,240 [Process: 0] EPOCH 15:
2024-08-16 17:07:39,242 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7067, 0.7335, 0.7571,  ..., 0.8015, 0.5000, 0.5000],
         [0.2933, 0.2665, 0.2429,  ..., 0.1985, 0.5000, 0.5000]],
        [[0.7629, 0.7480, 0.7706,  ..., 0.5000, 0.7391, 0.7604],
         [0.2371, 0.2520, 0.2294,  ..., 0.5000, 0.2609, 0.2396]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7367, 0.8169, 0.7563,  ..., 0.5000, 0.7373, 0.7732],
         [0.2633, 0.1831, 0.2437,  ..., 0.5000, 0.2627, 0.2268]],
        [[0.8107, 0.8023, 0.7297,  ..., 0.7508, 0.7706, 0.7596],
         [0.1893, 0.1977, 0.2703,  ..., 0.2492, 0.2294, 0.2404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:41,268 [Process: 0] Synchronize training processes
2024-08-16 17:07:41,268 [Process: 0] Evaluating...
2024-08-16 17:07:41,270 [Process: 0] EPOCH 16:
2024-08-16 17:07:41,272 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7650, 0.7673, 0.7342,  ..., 0.7606, 0.5000, 0.5000],
         [0.2350, 0.2327, 0.2658,  ..., 0.2394, 0.5000, 0.5000]],
        [[0.7391, 0.7428, 0.8053,  ..., 0.5000, 0.7347, 0.7061],
         [0.2609, 0.2572, 0.1947,  ..., 0.5000, 0.2653, 0.2939]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7816, 0.7531, 0.7701,  ..., 0.5000, 0.7494, 0.7349],
         [0.2184, 0.2469, 0.2299,  ..., 0.5000, 0.2506, 0.2651]],
        [[0.7236, 0.7222, 0.7676,  ..., 0.7480, 0.7428, 0.7772],
         [0.2764, 0.2778, 0.2324,  ..., 0.2520, 0.2572, 0.2228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:43,402 [Process: 0] Synchronize training processes
2024-08-16 17:07:43,402 [Process: 0] Evaluating...
2024-08-16 17:07:43,404 [Process: 0] EPOCH 17:
2024-08-16 17:07:43,406 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7569, 0.7530, 0.7415,  ..., 0.7730, 0.5000, 0.5000],
         [0.2431, 0.2470, 0.2585,  ..., 0.2270, 0.5000, 0.5000]],
        [[0.7416, 0.7476, 0.7792,  ..., 0.5000, 0.7333, 0.7671],
         [0.2584, 0.2524, 0.2208,  ..., 0.5000, 0.2667, 0.2329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7851, 0.7534, 0.7670,  ..., 0.5000, 0.7415, 0.7188],
         [0.2149, 0.2466, 0.2330,  ..., 0.5000, 0.2585, 0.2812]],
        [[0.7735, 0.7330, 0.7523,  ..., 0.7401, 0.7602, 0.7518],
         [0.2265, 0.2670, 0.2477,  ..., 0.2599, 0.2398, 0.2482]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:45,430 [Process: 0] Synchronize training processes
2024-08-16 17:07:45,431 [Process: 0] Evaluating...
2024-08-16 17:07:45,433 [Process: 0] EPOCH 18:
2024-08-16 17:07:45,435 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7188, 0.7314, 0.7409,  ..., 0.7081, 0.5000, 0.5000],
         [0.2812, 0.2686, 0.2591,  ..., 0.2919, 0.5000, 0.5000]],
        [[0.7419, 0.7474, 0.7634,  ..., 0.5000, 0.7763, 0.7420],
         [0.2581, 0.2526, 0.2366,  ..., 0.5000, 0.2237, 0.2580]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7845, 0.7944, 0.8069,  ..., 0.5000, 0.7865, 0.7951],
         [0.2155, 0.2056, 0.1931,  ..., 0.5000, 0.2135, 0.2049]],
        [[0.7466, 0.7902, 0.7969,  ..., 0.7528, 0.8062, 0.7564],
         [0.2534, 0.2098, 0.2031,  ..., 0.2472, 0.1938, 0.2436]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:47,494 [Process: 0] Synchronize training processes
2024-08-16 17:07:47,494 [Process: 0] Evaluating...
2024-08-16 17:07:47,496 [Process: 0] EPOCH 19:
2024-08-16 17:07:47,498 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7496, 0.7564, 0.7550,  ..., 0.7533, 0.7982, 0.5000],
         [0.2504, 0.2436, 0.2450,  ..., 0.2467, 0.2018, 0.5000]],
        [[0.7737, 0.7570, 0.7520,  ..., 0.5000, 0.7387, 0.7923],
         [0.2263, 0.2430, 0.2480,  ..., 0.5000, 0.2613, 0.2077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7523, 0.7419, 0.7740,  ..., 0.6995, 0.7934, 0.8164],
         [0.2477, 0.2581, 0.2260,  ..., 0.3005, 0.2066, 0.1836]],
        [[0.7755, 0.7887, 0.7821,  ..., 0.7733, 0.7845, 0.8042],
         [0.2245, 0.2113, 0.2179,  ..., 0.2267, 0.2155, 0.1958]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:07:49,659 [Process: 0] Synchronize training processes
2024-08-16 17:07:49,659 [Process: 0] Evaluating...
2024-08-16 17:07:49,661 [Process: 0] EPOCH 20:
2024-08-16 17:07:49,663 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7704, 0.7467, 0.7358,  ..., 0.7823, 0.7693, 0.5000],
         [0.2296, 0.2533, 0.2642,  ..., 0.2177, 0.2307, 0.5000]],
        [[0.7641, 0.7651, 0.7857,  ..., 0.5000, 0.7731, 0.7759],
         [0.2359, 0.2349, 0.2143,  ..., 0.5000, 0.2269, 0.2241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
2024-08-16 17:07:51,726 [Process: 0] Synchronize training processes
2024-08-16 17:07:51,727 [Process: 0] Evaluating...
2024-08-16 17:07:51,729 [Process: 0] EPOCH 21:
2024-08-16 17:07:51,731 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
tensor([[[0.7964, 0.8142, 0.7962,  ..., 0.7692, 0.7431, 0.8098],
         [0.2036, 0.1858, 0.2038,  ..., 0.2308, 0.2569, 0.1902]],
        [[0.7935, 0.7706, 0.7460,  ..., 0.7550, 0.7768, 0.7732],
         [0.2065, 0.2294, 0.2540,  ..., 0.2450, 0.2232, 0.2268]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7515, 0.7799, 0.7528,  ..., 0.5000, 0.7504, 0.5000],
         [0.2485, 0.2201, 0.2472,  ..., 0.5000, 0.2496, 0.5000]],
        [[0.7726, 0.7626, 0.7414,  ..., 0.5000, 0.7698, 0.7641],
         [0.2274, 0.2374, 0.2586,  ..., 0.5000, 0.2302, 0.2359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:07:53,828 [Process: 0] Synchronize training processes
2024-08-16 17:07:53,829 [Process: 0] Evaluating...
2024-08-16 17:07:53,836 [Process: 0] EPOCH 22:
2024-08-16 17:07:53,838 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7747, 0.7699, 0.8110,  ..., 0.8046, 0.7814, 0.8035],
         [0.2253, 0.2301, 0.1890,  ..., 0.1954, 0.2186, 0.1965]],
        [[0.8116, 0.7942, 0.8114,  ..., 0.7807, 0.7693, 0.7892],
         [0.1884, 0.2058, 0.1886,  ..., 0.2193, 0.2307, 0.2108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7815, 0.7703, 0.7533,  ..., 0.5000, 0.7656, 0.5000],
         [0.2185, 0.2297, 0.2467,  ..., 0.5000, 0.2344, 0.5000]],
        [[0.7530, 0.7663, 0.7773,  ..., 0.5000, 0.7434, 0.7734],
         [0.2470, 0.2337, 0.2227,  ..., 0.5000, 0.2566, 0.2266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:55,907 [Process: 0] Synchronize training processes
2024-08-16 17:07:55,908 [Process: 0] Evaluating...
2024-08-16 17:07:55,910 [Process: 0] EPOCH 23:
2024-08-16 17:07:55,912 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7888, 0.8101, 0.7810,  ..., 0.7968, 0.7842, 0.8115],
         [0.2112, 0.1899, 0.2190,  ..., 0.2032, 0.2158, 0.1885]],
        [[0.7996, 0.7609, 0.7958,  ..., 0.8100, 0.7874, 0.7730],
         [0.2004, 0.2391, 0.2042,  ..., 0.1900, 0.2126, 0.2270]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8022, 0.7755, 0.7943,  ..., 0.5000, 0.8100, 0.5000],
         [0.1978, 0.2245, 0.2057,  ..., 0.5000, 0.1900, 0.5000]],
        [[0.8063, 0.7665, 0.7649,  ..., 0.5000, 0.7735, 0.7812],
         [0.1937, 0.2335, 0.2351,  ..., 0.5000, 0.2265, 0.2188]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:57,941 [Process: 0] Synchronize training processes
2024-08-16 17:07:57,941 [Process: 0] Evaluating...
2024-08-16 17:07:57,943 [Process: 0] EPOCH 24:
2024-08-16 17:07:57,946 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7782, 0.8012, 0.7818,  ..., 0.7962, 0.7558, 0.7863],
         [0.2218, 0.1988, 0.2182,  ..., 0.2038, 0.2442, 0.2137]],
        [[0.8024, 0.8024, 0.7884,  ..., 0.7943, 0.8093, 0.7733],
         [0.1976, 0.1976, 0.2116,  ..., 0.2057, 0.1907, 0.2267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7923, 0.7556, 0.7715,  ..., 0.5000, 0.7779, 0.5000],
         [0.2077, 0.2444, 0.2285,  ..., 0.5000, 0.2221, 0.5000]],
        [[0.7891, 0.7793, 0.7900,  ..., 0.5000, 0.7815, 0.7747],
         [0.2109, 0.2207, 0.2100,  ..., 0.5000, 0.2185, 0.2253]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:07:59,998 [Process: 0] Synchronize training processes
2024-08-16 17:07:59,998 [Process: 0] Evaluating...
2024-08-16 17:08:00,000 [Process: 0] EPOCH 25:
2024-08-16 17:08:00,002 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7832, 0.7880, 0.7784,  ..., 0.7896, 0.8059, 0.7979],
         [0.2168, 0.2120, 0.2216,  ..., 0.2104, 0.1941, 0.2021]],
        [[0.7998, 0.7853, 0.7817,  ..., 0.8251, 0.7844, 0.7987],
         [0.2002, 0.2147, 0.2183,  ..., 0.1749, 0.2156, 0.2013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7784, 0.7637, 0.7839,  ..., 0.5000, 0.7869, 0.5000],
         [0.2216, 0.2363, 0.2161,  ..., 0.5000, 0.2131, 0.5000]],
        [[0.7787, 0.7840, 0.7947,  ..., 0.5000, 0.7814, 0.7866],
         [0.2213, 0.2160, 0.2053,  ..., 0.5000, 0.2186, 0.2134]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:02,157 [Process: 0] Synchronize training processes
2024-08-16 17:08:02,157 [Process: 0] Evaluating...
2024-08-16 17:08:02,159 [Process: 0] EPOCH 26:
2024-08-16 17:08:02,161 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8007, 0.7829, 0.8075,  ..., 0.8132, 0.8084, 0.7968],
         [0.1993, 0.2171, 0.1925,  ..., 0.1868, 0.1916, 0.2032]],
        [[0.8055, 0.8000, 0.8229,  ..., 0.7877, 0.7935, 0.7815],
         [0.1945, 0.2000, 0.1771,  ..., 0.2123, 0.2065, 0.2185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7650, 0.7719, 0.7578,  ..., 0.7523, 0.7776, 0.5000],
         [0.2350, 0.2281, 0.2422,  ..., 0.2477, 0.2224, 0.5000]],
        [[0.7875, 0.7715, 0.7718,  ..., 0.5000, 0.7789, 0.7597],
         [0.2125, 0.2285, 0.2282,  ..., 0.5000, 0.2211, 0.2403]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:04,333 [Process: 0] Synchronize training processes
2024-08-16 17:08:04,334 [Process: 0] Evaluating...
2024-08-16 17:08:04,336 [Process: 0] EPOCH 27:
2024-08-16 17:08:04,338 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7852, 0.7761, 0.8152,  ..., 0.7946, 0.8146, 0.8138],
         [0.2148, 0.2239, 0.1848,  ..., 0.2054, 0.1854, 0.1862]],
        [[0.8098, 0.8044, 0.7848,  ..., 0.7449, 0.7922, 0.8038],
         [0.1902, 0.1956, 0.2152,  ..., 0.2551, 0.2078, 0.1962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7653, 0.7683, 0.7624,  ..., 0.7654, 0.7564, 0.5000],
         [0.2347, 0.2317, 0.2376,  ..., 0.2346, 0.2436, 0.5000]],
        [[0.7592, 0.7911, 0.7880,  ..., 0.5000, 0.7905, 0.7697],
         [0.2408, 0.2089, 0.2120,  ..., 0.5000, 0.2095, 0.2303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:06,501 [Process: 0] Synchronize training processes
2024-08-16 17:08:06,501 [Process: 0] Evaluating...
2024-08-16 17:08:06,503 [Process: 0] EPOCH 28:
2024-08-16 17:08:06,505 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7969, 0.7967, 0.8098,  ..., 0.7899, 0.8096, 0.7935],
         [0.2031, 0.2033, 0.1902,  ..., 0.2101, 0.1904, 0.2065]],
        [[0.7997, 0.8067, 0.7923,  ..., 0.7977, 0.7867, 0.7846],
         [0.2003, 0.1933, 0.2077,  ..., 0.2023, 0.2133, 0.2154]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7727, 0.7768, 0.7850,  ..., 0.7702, 0.7865, 0.5000],
         [0.2273, 0.2232, 0.2150,  ..., 0.2298, 0.2135, 0.5000]],
        [[0.7840, 0.7819, 0.7902,  ..., 0.5000, 0.8056, 0.7798],
         [0.2160, 0.2181, 0.2098,  ..., 0.5000, 0.1944, 0.2202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:08,669 [Process: 0] Synchronize training processes
2024-08-16 17:08:08,670 [Process: 0] Evaluating...
2024-08-16 17:08:08,672 [Process: 0] EPOCH 29:
2024-08-16 17:08:08,674 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8167, 0.7926, 0.7967,  ..., 0.8048, 0.8216, 0.7983],
         [0.1833, 0.2074, 0.2033,  ..., 0.1952, 0.1784, 0.2017]],
        [[0.8123, 0.7992, 0.7885,  ..., 0.8038, 0.7893, 0.8001],
         [0.1877, 0.2008, 0.2115,  ..., 0.1962, 0.2107, 0.1999]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7976, 0.7934, 0.7818,  ..., 0.7689, 0.7819, 0.5000],
         [0.2024, 0.2066, 0.2182,  ..., 0.2311, 0.2181, 0.5000]],
        [[0.7850, 0.7977, 0.7884,  ..., 0.5000, 0.7899, 0.7944],
         [0.2150, 0.2023, 0.2116,  ..., 0.5000, 0.2101, 0.2056]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:10,846 [Process: 0] Synchronize training processes
2024-08-16 17:08:10,847 [Process: 0] Evaluating...
2024-08-16 17:08:10,849 [Process: 0] EPOCH 30:
2024-08-16 17:08:10,851 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7905, 0.7974, 0.8247,  ..., 0.8073, 0.8202, 0.8084],
         [0.2095, 0.2026, 0.1753,  ..., 0.1927, 0.1798, 0.1916]],
        [[0.8043, 0.8178, 0.8076,  ..., 0.8137, 0.8100, 0.7905],
         [0.1957, 0.1822, 0.1924,  ..., 0.1863, 0.1900, 0.2095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7771, 0.7917, 0.7823,  ..., 0.7883, 0.7944, 0.5000],
         [0.2229, 0.2083, 0.2177,  ..., 0.2117, 0.2056, 0.5000]],
        [[0.7986, 0.8201, 0.8023,  ..., 0.5000, 0.7946, 0.7784],
         [0.2014, 0.1799, 0.1977,  ..., 0.5000, 0.2054, 0.2216]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8110, 0.8195, 0.8054,  ..., 0.7865, 0.8000, 0.7888],
         [0.1890, 0.1805, 0.1946,  ..., 0.2135, 0.2000, 0.2112]],
        [[0.8074, 0.8059, 0.8010,  ..., 0.8130, 0.8015, 0.8031],
         [0.1926, 0.1941, 0.1990,  ..., 0.1870, 0.1985, 0.1969]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:13,023 [Process: 0] Synchronize training processes
2024-08-16 17:08:13,024 [Process: 0] Evaluating...
2024-08-16 17:08:13,026 [Process: 0] EPOCH 31:
2024-08-16 17:08:13,028 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8024, 0.8006, 0.8047,  ..., 0.8119, 0.7938, 0.5000],
         [0.1976, 0.1994, 0.1953,  ..., 0.1881, 0.2062, 0.5000]],
        [[0.8107, 0.8083, 0.8008,  ..., 0.5000, 0.7981, 0.8069],
         [0.1893, 0.1917, 0.1992,  ..., 0.5000, 0.2019, 0.1931]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8163, 0.8194, 0.8061,  ..., 0.8100, 0.8166, 0.8058],
         [0.1837, 0.1806, 0.1939,  ..., 0.1900, 0.1834, 0.1942]],
        [[0.8010, 0.8177, 0.8148,  ..., 0.8259, 0.8074, 0.8199],
         [0.1990, 0.1823, 0.1852,  ..., 0.1741, 0.1926, 0.1801]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:15,218 [Process: 0] Synchronize training processes
2024-08-16 17:08:15,218 [Process: 0] Evaluating...
2024-08-16 17:08:15,226 [Process: 0] EPOCH 32:
2024-08-16 17:08:15,228 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8152, 0.8001, 0.7884,  ..., 0.8220, 0.8002, 0.5000],
         [0.1848, 0.1999, 0.2116,  ..., 0.1780, 0.1998, 0.5000]],
        [[0.8061, 0.8066, 0.8304,  ..., 0.5000, 0.8107, 0.7967],
         [0.1939, 0.1934, 0.1696,  ..., 0.5000, 0.1893, 0.2033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8072, 0.7882, 0.8021,  ..., 0.8066, 0.8093, 0.8063],
         [0.1928, 0.2118, 0.1979,  ..., 0.1934, 0.1907, 0.1937]],
        [[0.7892, 0.7827, 0.7978,  ..., 0.8080, 0.8029, 0.7993],
         [0.2108, 0.2173, 0.2022,  ..., 0.1920, 0.1971, 0.2007]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:17,401 [Process: 0] Synchronize training processes
2024-08-16 17:08:17,402 [Process: 0] Evaluating...
2024-08-16 17:08:17,404 [Process: 0] EPOCH 33:
2024-08-16 17:08:17,406 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8053, 0.8008, 0.7923,  ..., 0.7910, 0.8003, 0.5000],
         [0.1947, 0.1992, 0.2077,  ..., 0.2090, 0.1997, 0.5000]],
        [[0.8057, 0.7926, 0.7887,  ..., 0.5000, 0.7918, 0.8040],
         [0.1943, 0.2074, 0.2113,  ..., 0.5000, 0.2082, 0.1960]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8073, 0.8045, 0.8160,  ..., 0.8055, 0.7758, 0.8003],
         [0.1927, 0.1955, 0.1840,  ..., 0.1945, 0.2242, 0.1997]],
        [[0.7991, 0.8067, 0.7969,  ..., 0.7917, 0.7988, 0.8045],
         [0.2009, 0.1933, 0.2031,  ..., 0.2083, 0.2012, 0.1955]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:19,588 [Process: 0] Synchronize training processes
2024-08-16 17:08:19,589 [Process: 0] Evaluating...
2024-08-16 17:08:19,591 [Process: 0] EPOCH 34:
2024-08-16 17:08:19,593 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7870, 0.7914, 0.7764,  ..., 0.7862, 0.7787, 0.5000],
         [0.2130, 0.2086, 0.2236,  ..., 0.2138, 0.2213, 0.5000]],
        [[0.7997, 0.7866, 0.7774,  ..., 0.5000, 0.7939, 0.7733],
         [0.2003, 0.2134, 0.2226,  ..., 0.5000, 0.2061, 0.2267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8151, 0.8072, 0.8186,  ..., 0.8247, 0.8107, 0.8172],
         [0.1849, 0.1928, 0.1814,  ..., 0.1753, 0.1893, 0.1828]],
        [[0.8240, 0.8225, 0.7975,  ..., 0.8282, 0.5000, 0.8133],
         [0.1760, 0.1775, 0.2025,  ..., 0.1718, 0.5000, 0.1867]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:21,750 [Process: 0] Synchronize training processes
2024-08-16 17:08:21,750 [Process: 0] Evaluating...
2024-08-16 17:08:21,752 [Process: 0] EPOCH 35:
2024-08-16 17:08:21,754 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7819, 0.7943, 0.8014,  ..., 0.7882, 0.7895, 0.7974],
         [0.2181, 0.2057, 0.1986,  ..., 0.2118, 0.2105, 0.2026]],
        [[0.7898, 0.7903, 0.7855,  ..., 0.5000, 0.7858, 0.8097],
         [0.2102, 0.2097, 0.2145,  ..., 0.5000, 0.2142, 0.1903]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:08:23,932 [Process: 0] Synchronize training processes
2024-08-16 17:08:23,932 [Process: 0] Evaluating...
2024-08-16 17:08:23,935 [Process: 0] EPOCH 36:
2024-08-16 17:08:23,937 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8119, 0.8239, 0.8236,  ..., 0.8248, 0.8091, 0.8050],
         [0.1881, 0.1761, 0.1764,  ..., 0.1752, 0.1909, 0.1950]],
        [[0.8234, 0.8203, 0.8191,  ..., 0.8211, 0.5000, 0.8025],
         [0.1766, 0.1797, 0.1809,  ..., 0.1789, 0.5000, 0.1975]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8100, 0.7934, 0.8052,  ..., 0.8138, 0.8130, 0.8084],
         [0.1900, 0.2066, 0.1948,  ..., 0.1862, 0.1870, 0.1916]],
        [[0.8033, 0.8037, 0.7947,  ..., 0.5000, 0.7950, 0.8113],
         [0.1967, 0.1963, 0.2053,  ..., 0.5000, 0.2050, 0.1887]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:26,127 [Process: 0] Synchronize training processes
2024-08-16 17:08:26,127 [Process: 0] Evaluating...
2024-08-16 17:08:26,130 [Process: 0] EPOCH 37:
2024-08-16 17:08:26,132 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8015, 0.8132, 0.8318,  ..., 0.8251, 0.8274, 0.8320],
         [0.1985, 0.1868, 0.1682,  ..., 0.1749, 0.1726, 0.1680]],
        [[0.8235, 0.8193, 0.8361,  ..., 0.8335, 0.5000, 0.8243],
         [0.1765, 0.1807, 0.1639,  ..., 0.1665, 0.5000, 0.1757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8053, 0.8088, 0.8127,  ..., 0.8047, 0.8030, 0.8031],
         [0.1947, 0.1912, 0.1873,  ..., 0.1953, 0.1970, 0.1969]],
        [[0.7982, 0.8180, 0.8109,  ..., 0.5000, 0.8093, 0.8014],
         [0.2018, 0.1820, 0.1891,  ..., 0.5000, 0.1907, 0.1986]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:28,420 [Process: 0] Synchronize training processes
2024-08-16 17:08:28,421 [Process: 0] Evaluating...
2024-08-16 17:08:28,424 [Process: 0] EPOCH 38:
2024-08-16 17:08:28,427 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8319, 0.8362, 0.8316,  ..., 0.8251, 0.8172, 0.8415],
         [0.1681, 0.1638, 0.1684,  ..., 0.1749, 0.1828, 0.1585]],
        [[0.8380, 0.8324, 0.8360,  ..., 0.8304, 0.5000, 0.8261],
         [0.1620, 0.1676, 0.1640,  ..., 0.1696, 0.5000, 0.1739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8012, 0.8065, 0.7981,  ..., 0.8006, 0.8118, 0.8027],
         [0.1988, 0.1935, 0.2019,  ..., 0.1994, 0.1882, 0.1973]],
        [[0.8207, 0.8118, 0.8070,  ..., 0.5000, 0.8038, 0.8059],
         [0.1793, 0.1882, 0.1930,  ..., 0.5000, 0.1962, 0.1941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8371, 0.8255, 0.8339,  ..., 0.8248, 0.8298, 0.8503],
         [0.1629, 0.1745, 0.1661,  ..., 0.1752, 0.1702, 0.1497]],
        [[0.8424, 0.8442, 0.8510,  ..., 0.8365, 0.5000, 0.8286],
         [0.1576, 0.1558, 0.1490,  ..., 0.1635, 0.5000, 0.1714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.7939, 0.8074, 0.8089,  ..., 0.8114, 0.8068, 0.8147],
         [0.2061, 0.1926, 0.1911,  ..., 0.1886, 0.1932, 0.1853]],
        [[0.8088, 0.8172, 0.8198,  ..., 0.5000, 0.8009, 0.8153],
         [0.1912, 0.1828, 0.1802,  ..., 0.5000, 0.1991, 0.1847]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:30,626 [Process: 0] Synchronize training processes
2024-08-16 17:08:30,626 [Process: 0] Evaluating...
2024-08-16 17:08:30,629 [Process: 0] EPOCH 39:
2024-08-16 17:08:30,631 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8415, 0.8267, 0.8411,  ..., 0.8358, 0.8384, 0.8310],
         [0.1585, 0.1733, 0.1589,  ..., 0.1642, 0.1616, 0.1690]],
        [[0.8175, 0.8347, 0.8292,  ..., 0.8416, 0.5000, 0.8468],
         [0.1825, 0.1653, 0.1708,  ..., 0.1584, 0.5000, 0.1532]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8175, 0.7996, 0.8020,  ..., 0.8253, 0.8188, 0.8119],
         [0.1825, 0.2004, 0.1980,  ..., 0.1747, 0.1812, 0.1881]],
        [[0.8202, 0.8164, 0.8247,  ..., 0.5000, 0.8117, 0.8213],
         [0.1798, 0.1836, 0.1753,  ..., 0.5000, 0.1883, 0.1787]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:32,797 [Process: 0] Synchronize training processes
2024-08-16 17:08:32,797 [Process: 0] Evaluating...
2024-08-16 17:08:32,799 [Process: 0] EPOCH 40:
2024-08-16 17:08:32,801 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8436, 0.8330, 0.8354,  ..., 0.8374, 0.8313, 0.8227],
         [0.1564, 0.1670, 0.1646,  ..., 0.1626, 0.1687, 0.1773]],
        [[0.8309, 0.8342, 0.8253,  ..., 0.8314, 0.8317, 0.8398],
         [0.1691, 0.1658, 0.1747,  ..., 0.1686, 0.1683, 0.1602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:34,960 [Process: 0] Synchronize training processes
2024-08-16 17:08:34,961 [Process: 0] Evaluating...
2024-08-16 17:08:34,963 [Process: 0] EPOCH 41:
2024-08-16 17:08:34,965 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8391, 0.8304, 0.8425,  ..., 0.8175, 0.8229, 0.8295],
         [0.1609, 0.1696, 0.1575,  ..., 0.1825, 0.1771, 0.1705]],
        [[0.8267, 0.8255, 0.8392,  ..., 0.5000, 0.8287, 0.8329],
         [0.1733, 0.1745, 0.1608,  ..., 0.5000, 0.1713, 0.1671]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8098, 0.8377, 0.8260,  ..., 0.8325, 0.8234, 0.8163],
         [0.1902, 0.1623, 0.1740,  ..., 0.1675, 0.1766, 0.1837]],
        [[0.8236, 0.8237, 0.8206,  ..., 0.8286, 0.8163, 0.8181],
         [0.1764, 0.1763, 0.1794,  ..., 0.1714, 0.1837, 0.1819]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:37,179 [Process: 0] Synchronize training processes
2024-08-16 17:08:37,180 [Process: 0] Evaluating...
2024-08-16 17:08:37,188 [Process: 0] EPOCH 42:
2024-08-16 17:08:37,191 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8364, 0.8256, 0.8353,  ..., 0.8022, 0.8267, 0.8432],
         [0.1636, 0.1744, 0.1647,  ..., 0.1978, 0.1733, 0.1568]],
        [[0.8289, 0.8265, 0.8319,  ..., 0.5000, 0.8417, 0.8318],
         [0.1711, 0.1735, 0.1681,  ..., 0.5000, 0.1583, 0.1682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8308, 0.8309, 0.8214,  ..., 0.8292, 0.8268, 0.8153],
         [0.1692, 0.1691, 0.1786,  ..., 0.1708, 0.1732, 0.1847]],
        [[0.8131, 0.8142, 0.8144,  ..., 0.8186, 0.7963, 0.8104],
         [0.1869, 0.1858, 0.1856,  ..., 0.1814, 0.2037, 0.1896]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:39,372 [Process: 0] Synchronize training processes
2024-08-16 17:08:39,372 [Process: 0] Evaluating...
2024-08-16 17:08:39,374 [Process: 0] EPOCH 43:
2024-08-16 17:08:39,376 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8320, 0.8163, 0.8195,  ..., 0.8012, 0.8164, 0.8185],
         [0.1680, 0.1837, 0.1805,  ..., 0.1988, 0.1836, 0.1815]],
        [[0.8204, 0.8168, 0.8250,  ..., 0.5000, 0.8194, 0.8192],
         [0.1796, 0.1832, 0.1750,  ..., 0.5000, 0.1806, 0.1808]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8220, 0.8218, 0.8242,  ..., 0.8159, 0.8312, 0.8253],
         [0.1780, 0.1782, 0.1758,  ..., 0.1841, 0.1688, 0.1747]],
        [[0.8083, 0.8224, 0.8189,  ..., 0.8187, 0.8126, 0.8122],
         [0.1917, 0.1776, 0.1811,  ..., 0.1813, 0.1874, 0.1878]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:41,652 [Process: 0] Synchronize training processes
2024-08-16 17:08:41,652 [Process: 0] Evaluating...
2024-08-16 17:08:41,654 [Process: 0] EPOCH 44:
2024-08-16 17:08:41,656 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8074, 0.8234, 0.8166,  ..., 0.8095, 0.8174, 0.8034],
         [0.1926, 0.1766, 0.1834,  ..., 0.1905, 0.1826, 0.1966]],
        [[0.8260, 0.8231, 0.8190,  ..., 0.5000, 0.8187, 0.8191],
         [0.1740, 0.1769, 0.1810,  ..., 0.5000, 0.1813, 0.1809]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8201, 0.8185, 0.8231,  ..., 0.8303, 0.8245, 0.8309],
         [0.1799, 0.1815, 0.1769,  ..., 0.1697, 0.1755, 0.1691]],
        [[0.8258, 0.8246, 0.8232,  ..., 0.8243, 0.8173, 0.8268],
         [0.1742, 0.1754, 0.1768,  ..., 0.1757, 0.1827, 0.1732]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:43,921 [Process: 0] Synchronize training processes
2024-08-16 17:08:43,921 [Process: 0] Evaluating...
2024-08-16 17:08:43,923 [Process: 0] EPOCH 45:
2024-08-16 17:08:43,925 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8145, 0.8109, 0.8210,  ..., 0.8101, 0.8204, 0.8291],
         [0.1855, 0.1891, 0.1790,  ..., 0.1899, 0.1796, 0.1709]],
        [[0.8301, 0.8166, 0.8259,  ..., 0.5000, 0.8212, 0.8172],
         [0.1699, 0.1834, 0.1741,  ..., 0.5000, 0.1788, 0.1828]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:46,126 [Process: 0] Synchronize training processes
2024-08-16 17:08:46,126 [Process: 0] Evaluating...
2024-08-16 17:08:46,128 [Process: 0] EPOCH 46:
2024-08-16 17:08:46,130 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8286, 0.8414, 0.8355,  ..., 0.8212, 0.8235, 0.8311],
         [0.1714, 0.1586, 0.1645,  ..., 0.1788, 0.1765, 0.1689]],
        [[0.8309, 0.8257, 0.8206,  ..., 0.8313, 0.8222, 0.8271],
         [0.1691, 0.1743, 0.1794,  ..., 0.1687, 0.1778, 0.1729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8210, 0.8231, 0.8324,  ..., 0.8140, 0.8286, 0.8251],
         [0.1790, 0.1769, 0.1676,  ..., 0.1860, 0.1714, 0.1749]],
        [[0.8222, 0.8273, 0.8276,  ..., 0.5000, 0.8232, 0.8289],
         [0.1778, 0.1727, 0.1724,  ..., 0.5000, 0.1768, 0.1711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:48,308 [Process: 0] Synchronize training processes
2024-08-16 17:08:48,309 [Process: 0] Evaluating...
2024-08-16 17:08:48,311 [Process: 0] EPOCH 47:
2024-08-16 17:08:48,313 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8353, 0.8300, 0.8430,  ..., 0.8415, 0.8449, 0.8421],
         [0.1647, 0.1700, 0.1570,  ..., 0.1585, 0.1551, 0.1579]],
        [[0.8302, 0.8242, 0.8431,  ..., 0.8388, 0.8181, 0.8424],
         [0.1698, 0.1758, 0.1569,  ..., 0.1612, 0.1819, 0.1576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8298, 0.8231, 0.8304,  ..., 0.8306, 0.8253, 0.8365],
         [0.1702, 0.1769, 0.1696,  ..., 0.1694, 0.1747, 0.1635]],
        [[0.8364, 0.8236, 0.8301,  ..., 0.5000, 0.8334, 0.8318],
         [0.1636, 0.1764, 0.1699,  ..., 0.5000, 0.1666, 0.1682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:50,478 [Process: 0] Synchronize training processes
2024-08-16 17:08:50,479 [Process: 0] Evaluating...
2024-08-16 17:08:50,481 [Process: 0] EPOCH 48:
2024-08-16 17:08:50,483 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8419, 0.8455, 0.8425,  ..., 0.8445, 0.8451, 0.8430],
         [0.1581, 0.1545, 0.1575,  ..., 0.1555, 0.1549, 0.1570]],
        [[0.8352, 0.8333, 0.8355,  ..., 0.8358, 0.8334, 0.8367],
         [0.1648, 0.1667, 0.1645,  ..., 0.1642, 0.1666, 0.1633]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8444, 0.8297, 0.8348,  ..., 0.8317, 0.8353, 0.8335],
         [0.1556, 0.1703, 0.1652,  ..., 0.1683, 0.1647, 0.1665]],
        [[0.8354, 0.8338, 0.8228,  ..., 0.5000, 0.8295, 0.8279],
         [0.1646, 0.1662, 0.1772,  ..., 0.5000, 0.1705, 0.1721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8298, 0.8424, 0.8447,  ..., 0.8446, 0.8373, 0.8439],
         [0.1702, 0.1576, 0.1553,  ..., 0.1554, 0.1627, 0.1561]],
        [[0.8334, 0.8396, 0.8498,  ..., 0.8445, 0.8355, 0.8412],
         [0.1666, 0.1604, 0.1502,  ..., 0.1555, 0.1645, 0.1588]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8431, 0.8357, 0.8349,  ..., 0.8367, 0.8331, 0.8339],
         [0.1569, 0.1643, 0.1651,  ..., 0.1633, 0.1669, 0.1661]],
        [[0.8389, 0.8361, 0.8416,  ..., 0.5000, 0.8353, 0.8289],
         [0.1611, 0.1639, 0.1584,  ..., 0.5000, 0.1647, 0.1711]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:08:52,654 [Process: 0] Synchronize training processes
2024-08-16 17:08:52,654 [Process: 0] Evaluating...
2024-08-16 17:08:52,656 [Process: 0] EPOCH 49:
2024-08-16 17:08:52,658 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8334, 0.8476, 0.8380,  ..., 0.8453, 0.8427, 0.8420],
         [0.1666, 0.1524, 0.1620,  ..., 0.1547, 0.1573, 0.1580]],
        [[0.8400, 0.8374, 0.8363,  ..., 0.8403, 0.8324, 0.8449],
         [0.1600, 0.1626, 0.1637,  ..., 0.1597, 0.1676, 0.1551]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8449, 0.8366, 0.8425,  ..., 0.8394, 0.8391, 0.8357],
         [0.1551, 0.1634, 0.1575,  ..., 0.1606, 0.1609, 0.1643]],
        [[0.8318, 0.8479, 0.8347,  ..., 0.5000, 0.8301, 0.8479],
         [0.1682, 0.1521, 0.1653,  ..., 0.5000, 0.1699, 0.1521]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:54,849 [Process: 0] Synchronize training processes
2024-08-16 17:08:54,849 [Process: 0] Evaluating...
2024-08-16 17:08:54,851 [Process: 0] EPOCH 50:
2024-08-16 17:08:54,853 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8342, 0.8361, 0.8455,  ..., 0.8390, 0.8410, 0.8490],
         [0.1658, 0.1639, 0.1545,  ..., 0.1610, 0.1590, 0.1510]],
        [[0.8327, 0.8448, 0.8465,  ..., 0.8444, 0.8444, 0.8429],
         [0.1673, 0.1552, 0.1535,  ..., 0.1556, 0.1556, 0.1571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:57,039 [Process: 0] Synchronize training processes
2024-08-16 17:08:57,040 [Process: 0] Evaluating...
2024-08-16 17:08:57,042 [Process: 0] EPOCH 51:
2024-08-16 17:08:57,044 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8402, 0.8288, 0.8371,  ..., 0.8370, 0.8435, 0.8479],
         [0.1598, 0.1712, 0.1629,  ..., 0.1630, 0.1565, 0.1521]],
        [[0.8388, 0.8448, 0.8393,  ..., 0.5000, 0.8418, 0.8507],
         [0.1612, 0.1552, 0.1607,  ..., 0.5000, 0.1582, 0.1493]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8375, 0.8570, 0.8484,  ..., 0.8469, 0.8596, 0.8446],
         [0.1625, 0.1430, 0.1516,  ..., 0.1531, 0.1404, 0.1554]],
        [[0.8448, 0.8385, 0.8357,  ..., 0.8415, 0.8504, 0.8397],
         [0.1552, 0.1615, 0.1643,  ..., 0.1585, 0.1496, 0.1603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:08:59,228 [Process: 0] Synchronize training processes
2024-08-16 17:08:59,229 [Process: 0] Evaluating...
2024-08-16 17:08:59,236 [Process: 0] EPOCH 52:
2024-08-16 17:08:59,238 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8481, 0.8552, 0.8524,  ..., 0.8511, 0.8481, 0.8471],
         [0.1519, 0.1448, 0.1476,  ..., 0.1489, 0.1519, 0.1529]],
        [[0.8445, 0.8344, 0.8476,  ..., 0.5000, 0.8398, 0.8429],
         [0.1555, 0.1656, 0.1524,  ..., 0.5000, 0.1602, 0.1571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8497, 0.8377, 0.8588,  ..., 0.8537, 0.8395, 0.8557],
         [0.1503, 0.1623, 0.1412,  ..., 0.1463, 0.1605, 0.1443]],
        [[0.8448, 0.8447, 0.8474,  ..., 0.8494, 0.8416, 0.8398],
         [0.1552, 0.1553, 0.1526,  ..., 0.1506, 0.1584, 0.1602]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:01,421 [Process: 0] Synchronize training processes
2024-08-16 17:09:01,422 [Process: 0] Evaluating...
2024-08-16 17:09:01,424 [Process: 0] EPOCH 53:
2024-08-16 17:09:01,426 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8613, 0.8519, 0.8446,  ..., 0.8445, 0.8523, 0.8474],
         [0.1387, 0.1481, 0.1554,  ..., 0.1555, 0.1477, 0.1526]],
        [[0.8422, 0.8531, 0.8460,  ..., 0.5000, 0.8561, 0.8512],
         [0.1578, 0.1469, 0.1540,  ..., 0.5000, 0.1439, 0.1488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8563, 0.8512, 0.8486,  ..., 0.8455, 0.8587, 0.8570],
         [0.1437, 0.1488, 0.1514,  ..., 0.1545, 0.1413, 0.1430]],
        [[0.8432, 0.8469, 0.8469,  ..., 0.8548, 0.8533, 0.8500],
         [0.1568, 0.1531, 0.1531,  ..., 0.1452, 0.1467, 0.1500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:03,598 [Process: 0] Synchronize training processes
2024-08-16 17:09:03,598 [Process: 0] Evaluating...
2024-08-16 17:09:03,600 [Process: 0] EPOCH 54:
2024-08-16 17:09:03,602 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8536, 0.8498, 0.8444,  ..., 0.8530, 0.8466, 0.8388],
         [0.1464, 0.1502, 0.1556,  ..., 0.1470, 0.1534, 0.1612]],
        [[0.8510, 0.8548, 0.8433,  ..., 0.5000, 0.8511, 0.8551],
         [0.1490, 0.1452, 0.1567,  ..., 0.5000, 0.1489, 0.1449]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8463, 0.8621, 0.8489,  ..., 0.8534, 0.8521, 0.8502],
         [0.1537, 0.1379, 0.1511,  ..., 0.1466, 0.1479, 0.1498]],
        [[0.8566, 0.8572, 0.8444,  ..., 0.8465, 0.8559, 0.8521],
         [0.1434, 0.1428, 0.1556,  ..., 0.1535, 0.1441, 0.1479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:05,762 [Process: 0] Synchronize training processes
2024-08-16 17:09:05,762 [Process: 0] Evaluating...
2024-08-16 17:09:05,764 [Process: 0] EPOCH 55:
2024-08-16 17:09:05,766 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8568, 0.8479, 0.8521,  ..., 0.8505, 0.8536, 0.8495],
         [0.1432, 0.1521, 0.1479,  ..., 0.1495, 0.1464, 0.1505]],
        [[0.8485, 0.8543, 0.8551,  ..., 0.5000, 0.8625, 0.8629],
         [0.1515, 0.1457, 0.1449,  ..., 0.5000, 0.1375, 0.1371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8532, 0.8686, 0.8627,  ..., 0.8617, 0.8504, 0.8686],
         [0.1468, 0.1314, 0.1373,  ..., 0.1383, 0.1496, 0.1314]],
        [[0.8619, 0.8618, 0.8567,  ..., 0.8602, 0.8576, 0.8629],
         [0.1381, 0.1382, 0.1433,  ..., 0.1398, 0.1424, 0.1371]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:07,939 [Process: 0] Synchronize training processes
2024-08-16 17:09:07,939 [Process: 0] Evaluating...
2024-08-16 17:09:07,942 [Process: 0] EPOCH 56:
2024-08-16 17:09:07,944 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8569, 0.8620, 0.8601,  ..., 0.8528, 0.8565, 0.8513],
         [0.1431, 0.1380, 0.1399,  ..., 0.1472, 0.1435, 0.1487]],
        [[0.8467, 0.8593, 0.8612,  ..., 0.5000, 0.8615, 0.8580],
         [0.1533, 0.1407, 0.1388,  ..., 0.5000, 0.1385, 0.1420]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:10,126 [Process: 0] Synchronize training processes
2024-08-16 17:09:10,126 [Process: 0] Evaluating...
2024-08-16 17:09:10,128 [Process: 0] EPOCH 57:
2024-08-16 17:09:10,130 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8637, 0.8652, 0.8593,  ..., 0.8592, 0.8557, 0.8595],
         [0.1363, 0.1348, 0.1407,  ..., 0.1408, 0.1443, 0.1405]],
        [[0.8652, 0.8590, 0.8673,  ..., 0.8627, 0.8517, 0.8593],
         [0.1348, 0.1410, 0.1327,  ..., 0.1373, 0.1483, 0.1407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8595, 0.8572, 0.8548,  ..., 0.8580, 0.8574, 0.8574],
         [0.1405, 0.1428, 0.1452,  ..., 0.1420, 0.1426, 0.1426]],
        [[0.8702, 0.8614, 0.8569,  ..., 0.5000, 0.8602, 0.8561],
         [0.1298, 0.1386, 0.1431,  ..., 0.5000, 0.1398, 0.1439]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:12,314 [Process: 0] Synchronize training processes
2024-08-16 17:09:12,315 [Process: 0] Evaluating...
2024-08-16 17:09:12,318 [Process: 0] EPOCH 58:
2024-08-16 17:09:12,319 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8609, 0.8553, 0.8630,  ..., 0.8696, 0.8665, 0.8623],
         [0.1391, 0.1447, 0.1370,  ..., 0.1304, 0.1335, 0.1377]],
        [[0.8648, 0.8609, 0.8674,  ..., 0.8574, 0.8527, 0.8639],
         [0.1352, 0.1391, 0.1326,  ..., 0.1426, 0.1473, 0.1361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8686, 0.8640, 0.8600,  ..., 0.8577, 0.8612, 0.8598],
         [0.1314, 0.1360, 0.1400,  ..., 0.1423, 0.1388, 0.1402]],
        [[0.8546, 0.8630, 0.8555,  ..., 0.5000, 0.8513, 0.8589],
         [0.1454, 0.1370, 0.1445,  ..., 0.5000, 0.1487, 0.1411]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:14,507 [Process: 0] Synchronize training processes
2024-08-16 17:09:14,507 [Process: 0] Evaluating...
2024-08-16 17:09:14,509 [Process: 0] EPOCH 59:
2024-08-16 17:09:14,511 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8671, 0.8570, 0.8593,  ..., 0.8594, 0.8596, 0.8613],
         [0.1329, 0.1430, 0.1407,  ..., 0.1406, 0.1404, 0.1387]],
        [[0.8590, 0.8507, 0.8587,  ..., 0.8626, 0.8585, 0.8624],
         [0.1410, 0.1493, 0.1413,  ..., 0.1374, 0.1415, 0.1376]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8669, 0.8568, 0.8630,  ..., 0.8644, 0.8698, 0.8705],
         [0.1331, 0.1432, 0.1370,  ..., 0.1356, 0.1302, 0.1295]],
        [[0.8669, 0.8743, 0.8647,  ..., 0.5000, 0.8674, 0.8658],
         [0.1331, 0.1257, 0.1353,  ..., 0.5000, 0.1326, 0.1342]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8523, 0.8599, 0.8545,  ..., 0.8646, 0.8567, 0.8603],
         [0.1477, 0.1401, 0.1455,  ..., 0.1354, 0.1433, 0.1397]],
        [[0.8554, 0.8544, 0.8537,  ..., 0.8597, 0.8555, 0.8511],
         [0.1446, 0.1456, 0.1463,  ..., 0.1403, 0.1445, 0.1489]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8675, 0.8611, 0.8659,  ..., 0.8610, 0.8606, 0.8660],
         [0.1325, 0.1389, 0.1341,  ..., 0.1390, 0.1394, 0.1340]],
        [[0.8626, 0.8719, 0.8674,  ..., 0.5000, 0.8708, 0.8655],
         [0.1374, 0.1281, 0.1326,  ..., 0.5000, 0.1292, 0.1345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:16,675 [Process: 0] Synchronize training processes
2024-08-16 17:09:16,676 [Process: 0] Evaluating...
2024-08-16 17:09:16,678 [Process: 0] EPOCH 60:
2024-08-16 17:09:16,679 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8598, 0.8565, 0.8610,  ..., 0.8613, 0.8555, 0.8680],
         [0.1402, 0.1435, 0.1390,  ..., 0.1387, 0.1445, 0.1320]],
        [[0.8560, 0.8586, 0.8566,  ..., 0.8527, 0.8554, 0.8605],
         [0.1440, 0.1414, 0.1434,  ..., 0.1473, 0.1446, 0.1395]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8593, 0.8704, 0.8670,  ..., 0.8658, 0.8676, 0.8639],
         [0.1407, 0.1296, 0.1330,  ..., 0.1342, 0.1324, 0.1361]],
        [[0.8724, 0.8686, 0.8720,  ..., 0.5000, 0.8707, 0.8695],
         [0.1276, 0.1314, 0.1280,  ..., 0.5000, 0.1293, 0.1305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:18,856 [Process: 0] Synchronize training processes
2024-08-16 17:09:18,856 [Process: 0] Evaluating...
2024-08-16 17:09:18,858 [Process: 0] EPOCH 61:
2024-08-16 17:09:18,860 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8557, 0.8614, 0.8629,  ..., 0.8661, 0.8675, 0.8566],
         [0.1443, 0.1386, 0.1371,  ..., 0.1339, 0.1325, 0.1434]],
        [[0.8618, 0.8599, 0.8628,  ..., 0.8605, 0.8651, 0.8552],
         [0.1382, 0.1401, 0.1372,  ..., 0.1395, 0.1349, 0.1448]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
2024-08-16 17:09:21,054 [Process: 0] Synchronize training processes
2024-08-16 17:09:21,054 [Process: 0] Evaluating...
2024-08-16 17:09:21,062 [Process: 0] EPOCH 62:
2024-08-16 17:09:21,064 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8579, 0.8658, 0.8584,  ..., 0.8660, 0.8673, 0.8687],
         [0.1421, 0.1342, 0.1416,  ..., 0.1340, 0.1327, 0.1313]],
        [[0.8680, 0.8752, 0.8694,  ..., 0.5000, 0.8656, 0.8695],
         [0.1320, 0.1248, 0.1306,  ..., 0.5000, 0.1344, 0.1305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8660, 0.8598, 0.8565,  ..., 0.8638, 0.8666, 0.8664],
         [0.1340, 0.1402, 0.1435,  ..., 0.1362, 0.1334, 0.1336]],
        [[0.8657, 0.8618, 0.8644,  ..., 0.8586, 0.8591, 0.8633],
         [0.1343, 0.1382, 0.1356,  ..., 0.1414, 0.1409, 0.1367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:23,255 [Process: 0] Synchronize training processes
2024-08-16 17:09:23,256 [Process: 0] Evaluating...
2024-08-16 17:09:23,258 [Process: 0] EPOCH 63:
2024-08-16 17:09:23,260 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8710, 0.8640, 0.8648,  ..., 0.8662, 0.8600, 0.8624],
         [0.1290, 0.1360, 0.1352,  ..., 0.1338, 0.1400, 0.1376]],
        [[0.8646, 0.8643, 0.8718,  ..., 0.5000, 0.8747, 0.8727],
         [0.1354, 0.1357, 0.1282,  ..., 0.5000, 0.1253, 0.1273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8607, 0.8667, 0.8634,  ..., 0.8649, 0.8672, 0.8716],
         [0.1393, 0.1333, 0.1366,  ..., 0.1351, 0.1328, 0.1284]],
        [[0.8671, 0.8663, 0.8747,  ..., 0.8630, 0.8646, 0.8687],
         [0.1329, 0.1337, 0.1253,  ..., 0.1370, 0.1354, 0.1313]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:25,455 [Process: 0] Synchronize training processes
2024-08-16 17:09:25,455 [Process: 0] Evaluating...
2024-08-16 17:09:25,457 [Process: 0] EPOCH 64:
2024-08-16 17:09:25,459 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8643, 0.8718, 0.8684,  ..., 0.8644, 0.8670, 0.8724],
         [0.1357, 0.1282, 0.1316,  ..., 0.1356, 0.1330, 0.1276]],
        [[0.8707, 0.8690, 0.8693,  ..., 0.5000, 0.8650, 0.8704],
         [0.1293, 0.1310, 0.1307,  ..., 0.5000, 0.1350, 0.1296]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8720, 0.8713, 0.8700,  ..., 0.8638, 0.8654, 0.8627],
         [0.1280, 0.1287, 0.1300,  ..., 0.1362, 0.1346, 0.1373]],
        [[0.8728, 0.8656, 0.8723,  ..., 0.8667, 0.8671, 0.8704],
         [0.1272, 0.1344, 0.1277,  ..., 0.1333, 0.1329, 0.1296]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:27,733 [Process: 0] Synchronize training processes
2024-08-16 17:09:27,733 [Process: 0] Evaluating...
2024-08-16 17:09:27,735 [Process: 0] EPOCH 65:
2024-08-16 17:09:27,737 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8737, 0.8731, 0.8659,  ..., 0.8623, 0.8687, 0.8699],
         [0.1263, 0.1269, 0.1341,  ..., 0.1377, 0.1313, 0.1301]],
        [[0.8676, 0.8685, 0.8623,  ..., 0.5000, 0.8771, 0.8712],
         [0.1324, 0.1315, 0.1377,  ..., 0.5000, 0.1229, 0.1288]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8680, 0.8728, 0.8744,  ..., 0.8727, 0.8678, 0.8742],
         [0.1320, 0.1272, 0.1256,  ..., 0.1273, 0.1322, 0.1258]],
        [[0.8686, 0.8695, 0.8751,  ..., 0.8794, 0.8680, 0.8778],
         [0.1314, 0.1305, 0.1249,  ..., 0.1206, 0.1320, 0.1222]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:29,989 [Process: 0] Synchronize training processes
2024-08-16 17:09:29,990 [Process: 0] Evaluating...
2024-08-16 17:09:29,991 [Process: 0] EPOCH 66:
2024-08-16 17:09:29,993 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8671, 0.8666, 0.8736,  ..., 0.8715, 0.8632, 0.8675],
         [0.1329, 0.1334, 0.1264,  ..., 0.1285, 0.1368, 0.1325]],
        [[0.8819, 0.8676, 0.8737,  ..., 0.5000, 0.8798, 0.8710],
         [0.1181, 0.1324, 0.1263,  ..., 0.5000, 0.1202, 0.1290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:09:32,181 [Process: 0] Synchronize training processes
2024-08-16 17:09:32,181 [Process: 0] Evaluating...
2024-08-16 17:09:32,183 [Process: 0] EPOCH 67:
2024-08-16 17:09:32,185 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8768, 0.8736, 0.8762,  ..., 0.8776, 0.8781, 0.8767],
         [0.1232, 0.1264, 0.1238,  ..., 0.1224, 0.1219, 0.1233]],
        [[0.8708, 0.8803, 0.8725,  ..., 0.8710, 0.8716, 0.8695],
         [0.1292, 0.1197, 0.1275,  ..., 0.1290, 0.1284, 0.1305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8752, 0.8758, 0.8708,  ..., 0.8739, 0.8673, 0.8688],
         [0.1248, 0.1242, 0.1292,  ..., 0.1261, 0.1327, 0.1312]],
        [[0.8774, 0.8724, 0.8748,  ..., 0.5000, 0.8711, 0.8734],
         [0.1226, 0.1276, 0.1252,  ..., 0.5000, 0.1289, 0.1266]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:34,357 [Process: 0] Synchronize training processes
2024-08-16 17:09:34,357 [Process: 0] Evaluating...
2024-08-16 17:09:34,359 [Process: 0] EPOCH 68:
2024-08-16 17:09:34,361 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8772, 0.8799, 0.8813,  ..., 0.8842, 0.8767, 0.8809],
         [0.1228, 0.1201, 0.1187,  ..., 0.1158, 0.1233, 0.1191]],
        [[0.8722, 0.8793, 0.8748,  ..., 0.8733, 0.8763, 0.8787],
         [0.1278, 0.1207, 0.1252,  ..., 0.1267, 0.1237, 0.1213]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8764, 0.8754, 0.8725,  ..., 0.8745, 0.8701, 0.8708],
         [0.1236, 0.1246, 0.1275,  ..., 0.1255, 0.1299, 0.1292]],
        [[0.8737, 0.8752, 0.8719,  ..., 0.5000, 0.8738, 0.8769],
         [0.1263, 0.1248, 0.1281,  ..., 0.5000, 0.1262, 0.1231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:36,539 [Process: 0] Synchronize training processes
2024-08-16 17:09:36,540 [Process: 0] Evaluating...
2024-08-16 17:09:36,542 [Process: 0] EPOCH 69:
2024-08-16 17:09:36,544 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8751, 0.8736, 0.8820,  ..., 0.8782, 0.8805, 0.8798],
         [0.1249, 0.1264, 0.1180,  ..., 0.1218, 0.1195, 0.1202]],
        [[0.8783, 0.8793, 0.8753,  ..., 0.8767, 0.8767, 0.8768],
         [0.1217, 0.1207, 0.1247,  ..., 0.1233, 0.1233, 0.1232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8736, 0.8673, 0.8737,  ..., 0.8714, 0.8698, 0.8742],
         [0.1264, 0.1327, 0.1263,  ..., 0.1286, 0.1302, 0.1258]],
        [[0.8755, 0.8792, 0.8719,  ..., 0.5000, 0.8777, 0.8711],
         [0.1245, 0.1208, 0.1281,  ..., 0.5000, 0.1223, 0.1289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8862, 0.8805, 0.8821,  ..., 0.8847, 0.8826, 0.8817],
         [0.1138, 0.1195, 0.1179,  ..., 0.1153, 0.1174, 0.1183]],
        [[0.8820, 0.8818, 0.8781,  ..., 0.8787, 0.8807, 0.8797],
         [0.1180, 0.1182, 0.1219,  ..., 0.1213, 0.1193, 0.1203]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8735, 0.8734, 0.8726,  ..., 0.8686, 0.8682, 0.8691],
         [0.1265, 0.1266, 0.1274,  ..., 0.1314, 0.1318, 0.1309]],
        [[0.8740, 0.8736, 0.8686,  ..., 0.5000, 0.8693, 0.8763],
         [0.1260, 0.1264, 0.1314,  ..., 0.5000, 0.1307, 0.1237]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:38,734 [Process: 0] Synchronize training processes
2024-08-16 17:09:38,735 [Process: 0] Evaluating...
2024-08-16 17:09:38,737 [Process: 0] EPOCH 70:
2024-08-16 17:09:38,739 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8850, 0.8816, 0.8779,  ..., 0.8797, 0.8851, 0.8806],
         [0.1150, 0.1184, 0.1221,  ..., 0.1203, 0.1149, 0.1194]],
        [[0.8816, 0.8811, 0.8830,  ..., 0.8832, 0.8823, 0.8855],
         [0.1184, 0.1189, 0.1170,  ..., 0.1168, 0.1177, 0.1145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8793, 0.8763, 0.8738,  ..., 0.8732, 0.8708, 0.8727],
         [0.1207, 0.1237, 0.1262,  ..., 0.1268, 0.1292, 0.1273]],
        [[0.8739, 0.8750, 0.8718,  ..., 0.5000, 0.8749, 0.8744],
         [0.1261, 0.1250, 0.1282,  ..., 0.5000, 0.1251, 0.1256]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:40,902 [Process: 0] Synchronize training processes
2024-08-16 17:09:40,902 [Process: 0] Evaluating...
2024-08-16 17:09:40,904 [Process: 0] EPOCH 71:
2024-08-16 17:09:40,907 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8875, 0.8847, 0.8876,  ..., 0.8840, 0.8884, 0.8865],
         [0.1125, 0.1153, 0.1124,  ..., 0.1160, 0.1116, 0.1135]],
        [[0.8813, 0.8848, 0.8877,  ..., 0.8858, 0.8890, 0.8848],
         [0.1187, 0.1152, 0.1123,  ..., 0.1142, 0.1110, 0.1152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:09:43,083 [Process: 0] Synchronize training processes
2024-08-16 17:09:43,084 [Process: 0] Evaluating...
2024-08-16 17:09:43,092 [Process: 0] EPOCH 72:
2024-08-16 17:09:43,094 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8820, 0.8744, 0.8755,  ..., 0.8753, 0.8779, 0.8781],
         [0.1180, 0.1256, 0.1245,  ..., 0.1247, 0.1221, 0.1219]],
        [[0.8794, 0.8827, 0.8779,  ..., 0.5000, 0.8789, 0.8845],
         [0.1206, 0.1173, 0.1221,  ..., 0.5000, 0.1211, 0.1155]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8811, 0.8885, 0.8810,  ..., 0.8853, 0.8868, 0.8835],
         [0.1189, 0.1115, 0.1190,  ..., 0.1147, 0.1132, 0.1165]],
        [[0.8886, 0.8851, 0.8859,  ..., 0.8872, 0.8909, 0.8840],
         [0.1114, 0.1149, 0.1141,  ..., 0.1128, 0.1091, 0.1160]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:45,270 [Process: 0] Synchronize training processes
2024-08-16 17:09:45,270 [Process: 0] Evaluating...
2024-08-16 17:09:45,273 [Process: 0] EPOCH 73:
2024-08-16 17:09:45,275 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8758, 0.8724, 0.8802,  ..., 0.8807, 0.8741, 0.8792],
         [0.1242, 0.1276, 0.1198,  ..., 0.1193, 0.1259, 0.1208]],
        [[0.8742, 0.8802, 0.8767,  ..., 0.5000, 0.8800, 0.8817],
         [0.1258, 0.1198, 0.1233,  ..., 0.5000, 0.1200, 0.1183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8871, 0.8942, 0.8863,  ..., 0.8882, 0.8929, 0.8899],
         [0.1129, 0.1058, 0.1137,  ..., 0.1118, 0.1071, 0.1101]],
        [[0.8903, 0.8880, 0.8881,  ..., 0.8863, 0.8880, 0.8869],
         [0.1097, 0.1120, 0.1119,  ..., 0.1137, 0.1120, 0.1131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:47,429 [Process: 0] Synchronize training processes
2024-08-16 17:09:47,429 [Process: 0] Evaluating...
2024-08-16 17:09:47,431 [Process: 0] EPOCH 74:
2024-08-16 17:09:47,433 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8790, 0.8835, 0.8770,  ..., 0.8833, 0.8811, 0.8845],
         [0.1210, 0.1165, 0.1230,  ..., 0.1167, 0.1189, 0.1155]],
        [[0.8787, 0.8801, 0.8791,  ..., 0.5000, 0.8793, 0.8798],
         [0.1213, 0.1199, 0.1209,  ..., 0.5000, 0.1207, 0.1202]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8928, 0.8895, 0.8862,  ..., 0.8911, 0.8897, 0.8884],
         [0.1072, 0.1105, 0.1138,  ..., 0.1089, 0.1103, 0.1116]],
        [[0.8868, 0.8919, 0.8916,  ..., 0.8889, 0.8919, 0.8909],
         [0.1132, 0.1081, 0.1084,  ..., 0.1111, 0.1081, 0.1091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:49,592 [Process: 0] Synchronize training processes
2024-08-16 17:09:49,593 [Process: 0] Evaluating...
2024-08-16 17:09:49,595 [Process: 0] EPOCH 75:
2024-08-16 17:09:49,597 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8833, 0.8832, 0.8833,  ..., 0.8838, 0.8858, 0.8816],
         [0.1167, 0.1168, 0.1167,  ..., 0.1162, 0.1142, 0.1184]],
        [[0.8846, 0.8861, 0.8828,  ..., 0.5000, 0.8841, 0.8817],
         [0.1154, 0.1139, 0.1172,  ..., 0.5000, 0.1159, 0.1183]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8910, 0.8889, 0.8899,  ..., 0.8937, 0.8925, 0.8925],
         [0.1090, 0.1111, 0.1101,  ..., 0.1063, 0.1075, 0.1075]],
        [[0.8901, 0.8888, 0.8882,  ..., 0.8903, 0.8874, 0.8921],
         [0.1099, 0.1112, 0.1118,  ..., 0.1097, 0.1126, 0.1079]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:51,774 [Process: 0] Synchronize training processes
2024-08-16 17:09:51,774 [Process: 0] Evaluating...
2024-08-16 17:09:51,776 [Process: 0] EPOCH 76:
2024-08-16 17:09:51,778 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8808, 0.8815, 0.8877,  ..., 0.8845, 0.8826, 0.8817],
         [0.1192, 0.1185, 0.1123,  ..., 0.1155, 0.1174, 0.1183]],
        [[0.8824, 0.8821, 0.8883,  ..., 0.5000, 0.8840, 0.8882],
         [0.1176, 0.1179, 0.1117,  ..., 0.5000, 0.1160, 0.1118]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8947, 0.8911, 0.8943,  ..., 0.8900, 0.8923, 0.8897],
         [0.1053, 0.1089, 0.1057,  ..., 0.1100, 0.1077, 0.1103]],
        [[0.8912, 0.8978, 0.8929,  ..., 0.8907, 0.8922, 0.8920],
         [0.1088, 0.1022, 0.1071,  ..., 0.1093, 0.1078, 0.1080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:53,971 [Process: 0] Synchronize training processes
2024-08-16 17:09:53,971 [Process: 0] Evaluating...
2024-08-16 17:09:53,973 [Process: 0] EPOCH 77:
2024-08-16 17:09:53,975 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8918, 0.8869, 0.8842,  ..., 0.8817, 0.8857, 0.8825],
         [0.1082, 0.1131, 0.1158,  ..., 0.1183, 0.1143, 0.1175]],
        [[0.8873, 0.8875, 0.8844,  ..., 0.5000, 0.8859, 0.8825],
         [0.1127, 0.1125, 0.1156,  ..., 0.5000, 0.1141, 0.1175]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8916, 0.8875, 0.8939,  ..., 0.8929, 0.8865, 0.8928],
         [0.1084, 0.1125, 0.1061,  ..., 0.1071, 0.1135, 0.1072]],
        [[0.8922, 0.8962, 0.8900,  ..., 0.8871, 0.8929, 0.8864],
         [0.1078, 0.1038, 0.1100,  ..., 0.1129, 0.1071, 0.1136]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:09:56,153 [Process: 0] Synchronize training processes
2024-08-16 17:09:56,153 [Process: 0] Evaluating...
2024-08-16 17:09:56,155 [Process: 0] EPOCH 78:
2024-08-16 17:09:56,158 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8847, 0.8888, 0.8868,  ..., 0.8884, 0.8864, 0.8865],
         [0.1153, 0.1112, 0.1132,  ..., 0.1116, 0.1136, 0.1135]],
        [[0.8907, 0.8882, 0.8857,  ..., 0.5000, 0.8886, 0.8849],
         [0.1093, 0.1118, 0.1143,  ..., 0.5000, 0.1114, 0.1151]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:09:58,336 [Process: 0] Synchronize training processes
2024-08-16 17:09:58,337 [Process: 0] Evaluating...
2024-08-16 17:09:58,339 [Process: 0] EPOCH 79:
2024-08-16 17:09:58,340 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9154, 0.9123, 0.9076,  ..., 0.9147, 0.9153, 0.9148],
         [0.0846, 0.0877, 0.0924,  ..., 0.0853, 0.0847, 0.0852]],
        [[0.8502, 0.8602, 0.8576,  ..., 0.8358, 0.8451, 0.8609],
         [0.1498, 0.1398, 0.1424,  ..., 0.1642, 0.1549, 0.1391]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8907, 0.8896, 0.8880,  ..., 0.8875, 0.8874, 0.8892],
         [0.1093, 0.1104, 0.1120,  ..., 0.1125, 0.1126, 0.1108]],
        [[0.8883, 0.8903, 0.8870,  ..., 0.5000, 0.8882, 0.8855],
         [0.1117, 0.1097, 0.1130,  ..., 0.5000, 0.1118, 0.1145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:00,538 [Process: 0] Synchronize training processes
2024-08-16 17:10:00,538 [Process: 0] Evaluating...
2024-08-16 17:10:00,540 [Process: 0] EPOCH 80:
2024-08-16 17:10:00,542 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8105, 0.8146, 0.8250,  ..., 0.8527, 0.8483, 0.8538],
         [0.1895, 0.1854, 0.1750,  ..., 0.1473, 0.1517, 0.1462]],
        [[0.9265, 0.9231, 0.9294,  ..., 0.9245, 0.9238, 0.9246],
         [0.0735, 0.0769, 0.0706,  ..., 0.0755, 0.0762, 0.0754]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8868, 0.8863, 0.8852,  ..., 0.8908, 0.8898, 0.8873],
         [0.1132, 0.1137, 0.1148,  ..., 0.1092, 0.1102, 0.1127]],
        [[0.8869, 0.8857, 0.8891,  ..., 0.5000, 0.8877, 0.8872],
         [0.1131, 0.1143, 0.1109,  ..., 0.5000, 0.1123, 0.1128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8947, 0.8947, 0.8896,  ..., 0.8924, 0.8917, 0.8937],
         [0.1053, 0.1053, 0.1104,  ..., 0.1076, 0.1083, 0.1063]],
        [[0.8966, 0.8913, 0.8890,  ..., 0.8918, 0.8941, 0.8909],
         [0.1034, 0.1087, 0.1110,  ..., 0.1082, 0.1059, 0.1091]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8882, 0.8864, 0.8894,  ..., 0.8889, 0.8928, 0.8880],
         [0.1118, 0.1136, 0.1106,  ..., 0.1111, 0.1072, 0.1120]],
        [[0.8883, 0.8896, 0.8863,  ..., 0.5000, 0.8919, 0.8855],
         [0.1117, 0.1104, 0.1137,  ..., 0.5000, 0.1081, 0.1145]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:02,718 [Process: 0] Synchronize training processes
2024-08-16 17:10:02,719 [Process: 0] Evaluating...
2024-08-16 17:10:02,721 [Process: 0] EPOCH 81:
2024-08-16 17:10:02,723 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9023, 0.9007, 0.9021,  ..., 0.8978, 0.8950, 0.8952],
         [0.0977, 0.0993, 0.0979,  ..., 0.1022, 0.1050, 0.1048]],
        [[0.8976, 0.8955, 0.8978,  ..., 0.8936, 0.9038, 0.8999],
         [0.1024, 0.1045, 0.1022,  ..., 0.1064, 0.0962, 0.1001]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8906, 0.8941, 0.8903,  ..., 0.8902, 0.8882, 0.8922],
         [0.1094, 0.1059, 0.1097,  ..., 0.1098, 0.1118, 0.1078]],
        [[0.8962, 0.8890, 0.8907,  ..., 0.5000, 0.8927, 0.8936],
         [0.1038, 0.1110, 0.1093,  ..., 0.5000, 0.1073, 0.1064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:04,900 [Process: 0] Synchronize training processes
2024-08-16 17:10:04,900 [Process: 0] Evaluating...
2024-08-16 17:10:04,908 [Process: 0] EPOCH 82:
2024-08-16 17:10:04,911 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8980, 0.8980, 0.8995,  ..., 0.9077, 0.9010, 0.9016],
         [0.1020, 0.1020, 0.1005,  ..., 0.0923, 0.0990, 0.0984]],
        [[0.8937, 0.9004, 0.8954,  ..., 0.8962, 0.8933, 0.9003],
         [0.1063, 0.0996, 0.1046,  ..., 0.1038, 0.1067, 0.0997]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8925, 0.8916, 0.8951,  ..., 0.8931, 0.8927, 0.8980],
         [0.1075, 0.1084, 0.1049,  ..., 0.1069, 0.1073, 0.1020]],
        [[0.8890, 0.8988, 0.8902,  ..., 0.5000, 0.8966, 0.8983],
         [0.1110, 0.1012, 0.1098,  ..., 0.5000, 0.1034, 0.1017]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:07,063 [Process: 0] Synchronize training processes
2024-08-16 17:10:07,063 [Process: 0] Evaluating...
2024-08-16 17:10:07,065 [Process: 0] EPOCH 83:
2024-08-16 17:10:07,067 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9025, 0.9069, 0.9034,  ..., 0.8999, 0.9088, 0.9016],
         [0.0975, 0.0931, 0.0966,  ..., 0.1001, 0.0912, 0.0984]],
        [[0.8995, 0.9053, 0.8956,  ..., 0.9121, 0.8996, 0.9052],
         [0.1005, 0.0947, 0.1044,  ..., 0.0879, 0.1004, 0.0948]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:09,249 [Process: 0] Synchronize training processes
2024-08-16 17:10:09,249 [Process: 0] Evaluating...
2024-08-16 17:10:09,251 [Process: 0] EPOCH 84:
2024-08-16 17:10:09,253 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8927, 0.8906, 0.8950,  ..., 0.9021, 0.8994, 0.8911],
         [0.1073, 0.1094, 0.1050,  ..., 0.0979, 0.1006, 0.1089]],
        [[0.8972, 0.8953, 0.8913,  ..., 0.5000, 0.8939, 0.9026],
         [0.1028, 0.1047, 0.1087,  ..., 0.5000, 0.1061, 0.0974]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9013, 0.9038, 0.9041,  ..., 0.9074, 0.9017, 0.9036],
         [0.0987, 0.0962, 0.0959,  ..., 0.0926, 0.0983, 0.0964]],
        [[0.9042, 0.9085, 0.8985,  ..., 0.9057, 0.8989, 0.9032],
         [0.0958, 0.0915, 0.1015,  ..., 0.0943, 0.1011, 0.0968]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:11,455 [Process: 0] Synchronize training processes
2024-08-16 17:10:11,456 [Process: 0] Evaluating...
2024-08-16 17:10:11,458 [Process: 0] EPOCH 85:
2024-08-16 17:10:11,460 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8935, 0.8961, 0.8975,  ..., 0.8999, 0.9028, 0.8964],
         [0.1065, 0.1039, 0.1025,  ..., 0.1001, 0.0972, 0.1036]],
        [[0.8966, 0.8992, 0.8904,  ..., 0.5000, 0.8991, 0.8969],
         [0.1034, 0.1008, 0.1096,  ..., 0.5000, 0.1009, 0.1031]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9043, 0.9110, 0.9074,  ..., 0.9081, 0.9065, 0.9082],
         [0.0957, 0.0890, 0.0926,  ..., 0.0919, 0.0935, 0.0918]],
        [[0.9042, 0.9045, 0.9051,  ..., 0.9055, 0.9042, 0.9100],
         [0.0958, 0.0955, 0.0949,  ..., 0.0945, 0.0958, 0.0900]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:14,104 [Process: 0] Synchronize training processes
2024-08-16 17:10:14,104 [Process: 0] Evaluating...
2024-08-16 17:10:14,107 [Process: 0] EPOCH 86:
2024-08-16 17:10:14,111 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8979, 0.8994, 0.8934,  ..., 0.9007, 0.8980, 0.8977],
         [0.1021, 0.1006, 0.1066,  ..., 0.0993, 0.1020, 0.1023]],
        [[0.8986, 0.8967, 0.9009,  ..., 0.5000, 0.8996, 0.8986],
         [0.1014, 0.1033, 0.0991,  ..., 0.5000, 0.1004, 0.1014]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:10:16,249 [Process: 0] Synchronize training processes
2024-08-16 17:10:16,250 [Process: 0] Evaluating...
2024-08-16 17:10:16,252 [Process: 0] EPOCH 87:
2024-08-16 17:10:16,254 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9035, 0.9110, 0.9059,  ..., 0.9029, 0.9034, 0.9054],
         [0.0965, 0.0890, 0.0941,  ..., 0.0971, 0.0966, 0.0946]],
        [[0.9105, 0.9074, 0.9155,  ..., 0.9075, 0.9047, 0.8996],
         [0.0895, 0.0926, 0.0845,  ..., 0.0925, 0.0953, 0.1004]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8945, 0.9038, 0.8983,  ..., 0.9044, 0.8944, 0.9041],
         [0.1055, 0.0962, 0.1017,  ..., 0.0956, 0.1056, 0.0959]],
        [[0.9013, 0.9018, 0.9002,  ..., 0.5000, 0.8984, 0.9007],
         [0.0987, 0.0982, 0.0998,  ..., 0.5000, 0.1016, 0.0993]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:18,284 [Process: 0] Synchronize training processes
2024-08-16 17:10:18,284 [Process: 0] Evaluating...
2024-08-16 17:10:18,286 [Process: 0] EPOCH 88:
2024-08-16 17:10:18,288 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9055, 0.9134, 0.9107,  ..., 0.9045, 0.9089, 0.9117],
         [0.0945, 0.0866, 0.0893,  ..., 0.0955, 0.0911, 0.0883]],
        [[0.9051, 0.9097, 0.9072,  ..., 0.9107, 0.9099, 0.9044],
         [0.0949, 0.0903, 0.0928,  ..., 0.0893, 0.0901, 0.0956]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.8983, 0.8987, 0.8992,  ..., 0.9067, 0.9041, 0.9003],
         [0.1017, 0.1013, 0.1008,  ..., 0.0933, 0.0959, 0.0997]],
        [[0.8941, 0.9077, 0.9041,  ..., 0.5000, 0.8936, 0.9016],
         [0.1059, 0.0923, 0.0959,  ..., 0.5000, 0.1064, 0.0984]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:20,353 [Process: 0] Synchronize training processes
2024-08-16 17:10:20,353 [Process: 0] Evaluating...
2024-08-16 17:10:20,355 [Process: 0] EPOCH 89:
2024-08-16 17:10:20,357 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9064, 0.9098, 0.9079,  ..., 0.9100, 0.9137, 0.9165],
         [0.0936, 0.0902, 0.0921,  ..., 0.0900, 0.0863, 0.0835]],
        [[0.9078, 0.9135, 0.9050,  ..., 0.9100, 0.9085, 0.9083],
         [0.0922, 0.0865, 0.0950,  ..., 0.0900, 0.0915, 0.0917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9032, 0.9036, 0.9019,  ..., 0.9006, 0.8970, 0.9004],
         [0.0968, 0.0964, 0.0981,  ..., 0.0994, 0.1030, 0.0996]],
        [[0.9025, 0.9039, 0.9005,  ..., 0.5000, 0.8990, 0.8995],
         [0.0975, 0.0961, 0.0995,  ..., 0.5000, 0.1010, 0.1005]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:22,367 [Process: 0] Synchronize training processes
2024-08-16 17:10:22,367 [Process: 0] Evaluating...
2024-08-16 17:10:22,369 [Process: 0] EPOCH 90:
2024-08-16 17:10:22,371 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9051, 0.9101, 0.9097,  ..., 0.9046, 0.9055, 0.9106],
         [0.0949, 0.0899, 0.0903,  ..., 0.0954, 0.0945, 0.0894]],
        [[0.9113, 0.9070, 0.9113,  ..., 0.9120, 0.9082, 0.9087],
         [0.0887, 0.0930, 0.0887,  ..., 0.0880, 0.0918, 0.0913]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9029, 0.9054, 0.9039,  ..., 0.9034, 0.9030, 0.9075],
         [0.0971, 0.0946, 0.0961,  ..., 0.0966, 0.0970, 0.0925]],
        [[0.9028, 0.9034, 0.9071,  ..., 0.5000, 0.8982, 0.9031],
         [0.0972, 0.0966, 0.0929,  ..., 0.5000, 0.1018, 0.0969]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:24,389 [Process: 0] Synchronize training processes
2024-08-16 17:10:24,390 [Process: 0] Evaluating...
2024-08-16 17:10:24,392 [Process: 0] EPOCH 91:
2024-08-16 17:10:24,393 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9117, 0.9115, 0.9094,  ..., 0.9112, 0.9059, 0.9092],
         [0.0883, 0.0885, 0.0906,  ..., 0.0888, 0.0941, 0.0908]],
        [[0.9119, 0.9060, 0.9086,  ..., 0.9101, 0.9108, 0.9087],
         [0.0881, 0.0940, 0.0914,  ..., 0.0899, 0.0892, 0.0913]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9004, 0.9022, 0.9021,  ..., 0.9096, 0.9008, 0.9050],
         [0.0996, 0.0978, 0.0979,  ..., 0.0904, 0.0992, 0.0950]],
        [[0.9040, 0.9018, 0.9075,  ..., 0.5000, 0.9029, 0.8980],
         [0.0960, 0.0982, 0.0925,  ..., 0.5000, 0.0971, 0.1020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:26,441 [Process: 0] Synchronize training processes
2024-08-16 17:10:26,442 [Process: 0] Evaluating...
2024-08-16 17:10:26,450 [Process: 0] EPOCH 92:
2024-08-16 17:10:26,452 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9119, 0.9068, 0.9084,  ..., 0.9073, 0.9056, 0.9088],
         [0.0881, 0.0932, 0.0916,  ..., 0.0927, 0.0944, 0.0912]],
        [[0.9104, 0.9128, 0.9096,  ..., 0.9085, 0.9059, 0.9060],
         [0.0896, 0.0872, 0.0904,  ..., 0.0915, 0.0941, 0.0940]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9038, 0.9038, 0.9042,  ..., 0.9006, 0.9052, 0.9037],
         [0.0962, 0.0962, 0.0958,  ..., 0.0994, 0.0948, 0.0963]],
        [[0.9045, 0.9042, 0.9017,  ..., 0.5000, 0.9039, 0.9012],
         [0.0955, 0.0958, 0.0983,  ..., 0.5000, 0.0961, 0.0988]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:28,520 [Process: 0] Synchronize training processes
2024-08-16 17:10:28,520 [Process: 0] Evaluating...
2024-08-16 17:10:28,522 [Process: 0] EPOCH 93:
2024-08-16 17:10:28,524 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9064, 0.9143, 0.9075,  ..., 0.9124, 0.9053, 0.9058],
         [0.0936, 0.0857, 0.0925,  ..., 0.0876, 0.0947, 0.0942]],
        [[0.9096, 0.9103, 0.9080,  ..., 0.9047, 0.9139, 0.9114],
         [0.0904, 0.0897, 0.0920,  ..., 0.0953, 0.0861, 0.0886]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9000, 0.9069, 0.9060,  ..., 0.9016, 0.9047, 0.9030],
         [0.1000, 0.0931, 0.0940,  ..., 0.0984, 0.0953, 0.0970]],
        [[0.9040, 0.9051, 0.9013,  ..., 0.5000, 0.9038, 0.9016],
         [0.0960, 0.0949, 0.0987,  ..., 0.5000, 0.0962, 0.0984]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:30,554 [Process: 0] Synchronize training processes
2024-08-16 17:10:30,554 [Process: 0] Evaluating...
2024-08-16 17:10:30,556 [Process: 0] EPOCH 94:
2024-08-16 17:10:30,558 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9094, 0.9104, 0.9085,  ..., 0.9080, 0.9116, 0.9101],
         [0.0906, 0.0896, 0.0915,  ..., 0.0920, 0.0884, 0.0899]],
        [[0.9073, 0.9094, 0.9139,  ..., 0.9092, 0.9127, 0.9111],
         [0.0927, 0.0906, 0.0861,  ..., 0.0908, 0.0873, 0.0889]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9046, 0.9039, 0.9057,  ..., 0.9041, 0.9040, 0.9016],
         [0.0954, 0.0961, 0.0943,  ..., 0.0959, 0.0960, 0.0984]],
        [[0.9020, 0.9017, 0.9048,  ..., 0.5000, 0.9053, 0.9046],
         [0.0980, 0.0983, 0.0952,  ..., 0.5000, 0.0947, 0.0954]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:32,632 [Process: 0] Synchronize training processes
2024-08-16 17:10:32,632 [Process: 0] Evaluating...
2024-08-16 17:10:32,634 [Process: 0] EPOCH 95:
2024-08-16 17:10:32,636 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9140, 0.9103, 0.9083,  ..., 0.9083, 0.9103, 0.9134],
         [0.0860, 0.0897, 0.0917,  ..., 0.0917, 0.0897, 0.0866]],
        [[0.9109, 0.9140, 0.9115,  ..., 0.9109, 0.9103, 0.9144],
         [0.0891, 0.0860, 0.0885,  ..., 0.0891, 0.0897, 0.0856]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9076, 0.9064, 0.9073,  ..., 0.9055, 0.9056, 0.9069],
         [0.0924, 0.0936, 0.0927,  ..., 0.0945, 0.0944, 0.0931]],
        [[0.9054, 0.9054, 0.9064,  ..., 0.5000, 0.9054, 0.9041],
         [0.0946, 0.0946, 0.0936,  ..., 0.5000, 0.0946, 0.0959]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9155, 0.9125, 0.9081,  ..., 0.9143, 0.9058, 0.9142],
         [0.0845, 0.0875, 0.0919,  ..., 0.0857, 0.0942, 0.0858]],
        [[0.9104, 0.9140, 0.9133,  ..., 0.9093, 0.9096, 0.9029],
         [0.0896, 0.0860, 0.0867,  ..., 0.0907, 0.0904, 0.0971]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9113, 0.9077, 0.9096,  ..., 0.9055, 0.9104, 0.9049],
         [0.0887, 0.0923, 0.0904,  ..., 0.0945, 0.0896, 0.0951]],
        [[0.9116, 0.9061, 0.9063,  ..., 0.5000, 0.9114, 0.9083],
         [0.0884, 0.0939, 0.0937,  ..., 0.5000, 0.0886, 0.0917]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:34,671 [Process: 0] Synchronize training processes
2024-08-16 17:10:34,671 [Process: 0] Evaluating...
2024-08-16 17:10:34,673 [Process: 0] EPOCH 96:
2024-08-16 17:10:34,675 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9123, 0.9110, 0.9166,  ..., 0.9143, 0.9175, 0.9139],
         [0.0877, 0.0890, 0.0834,  ..., 0.0857, 0.0825, 0.0861]],
        [[0.9152, 0.9155, 0.9085,  ..., 0.9116, 0.9127, 0.9147],
         [0.0848, 0.0845, 0.0915,  ..., 0.0884, 0.0873, 0.0853]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9104, 0.9101, 0.9086,  ..., 0.9108, 0.9093, 0.9107],
         [0.0896, 0.0899, 0.0914,  ..., 0.0892, 0.0907, 0.0893]],
        [[0.9125, 0.9105, 0.9109,  ..., 0.5000, 0.9097, 0.9093],
         [0.0875, 0.0895, 0.0891,  ..., 0.5000, 0.0903, 0.0907]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:36,753 [Process: 0] Synchronize training processes
2024-08-16 17:10:36,753 [Process: 0] Evaluating...
2024-08-16 17:10:36,755 [Process: 0] EPOCH 97:
2024-08-16 17:10:36,757 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9147, 0.9158, 0.9182,  ..., 0.9148, 0.9190, 0.9117],
         [0.0853, 0.0842, 0.0818,  ..., 0.0852, 0.0810, 0.0883]],
        [[0.9119, 0.9164, 0.9135,  ..., 0.9110, 0.9198, 0.9158],
         [0.0881, 0.0836, 0.0865,  ..., 0.0890, 0.0802, 0.0842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9105, 0.9073, 0.9129,  ..., 0.9125, 0.9112, 0.9125],
         [0.0895, 0.0927, 0.0871,  ..., 0.0875, 0.0888, 0.0875]],
        [[0.9090, 0.9067, 0.9120,  ..., 0.5000, 0.9128, 0.9107],
         [0.0910, 0.0933, 0.0880,  ..., 0.5000, 0.0872, 0.0893]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:38,828 [Process: 0] Synchronize training processes
2024-08-16 17:10:38,829 [Process: 0] Evaluating...
2024-08-16 17:10:38,831 [Process: 0] EPOCH 98:
2024-08-16 17:10:38,832 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9158, 0.9177, 0.9185,  ..., 0.9157, 0.9143, 0.9206],
         [0.0842, 0.0823, 0.0815,  ..., 0.0843, 0.0857, 0.0794]],
        [[0.9153, 0.9183, 0.9162,  ..., 0.9159, 0.9161, 0.9173],
         [0.0847, 0.0817, 0.0838,  ..., 0.0841, 0.0839, 0.0827]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9149, 0.9122, 0.9145,  ..., 0.9132, 0.9131, 0.9136],
         [0.0851, 0.0878, 0.0855,  ..., 0.0868, 0.0869, 0.0864]],
        [[0.9137, 0.9157, 0.9150,  ..., 0.5000, 0.9163, 0.9182],
         [0.0863, 0.0843, 0.0850,  ..., 0.5000, 0.0837, 0.0818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:40,932 [Process: 0] Synchronize training processes
2024-08-16 17:10:40,932 [Process: 0] Evaluating...
2024-08-16 17:10:40,934 [Process: 0] EPOCH 99:
2024-08-16 17:10:40,936 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9164, 0.9197, 0.9198,  ..., 0.9261, 0.9154, 0.9158],
         [0.0836, 0.0803, 0.0802,  ..., 0.0739, 0.0846, 0.0842]],
        [[0.9168, 0.9191, 0.9192,  ..., 0.9162, 0.9177, 0.9182],
         [0.0832, 0.0809, 0.0808,  ..., 0.0838, 0.0823, 0.0818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9161, 0.9147, 0.9125,  ..., 0.9143, 0.9127, 0.9134],
         [0.0839, 0.0853, 0.0875,  ..., 0.0857, 0.0873, 0.0866]],
        [[0.9141, 0.9177, 0.9138,  ..., 0.5000, 0.9144, 0.9162],
         [0.0859, 0.0823, 0.0862,  ..., 0.5000, 0.0856, 0.0838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
2024-08-16 17:10:42,987 [Process: 0] Synchronize training processes
2024-08-16 17:10:42,987 [Process: 0] Evaluating...
2024-08-16 17:10:42,989 [Process: 0] EPOCH 100:
2024-08-16 17:10:42,991 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9226, 0.9177, 0.9185,  ..., 0.9183, 0.9199, 0.9169],
         [0.0774, 0.0823, 0.0815,  ..., 0.0817, 0.0801, 0.0831]],
        [[0.9197, 0.9196, 0.9152,  ..., 0.9198, 0.9177, 0.9145],
         [0.0803, 0.0804, 0.0848,  ..., 0.0802, 0.0823, 0.0855]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9163, 0.9139, 0.9154,  ..., 0.9145, 0.9167, 0.9160],
         [0.0837, 0.0861, 0.0846,  ..., 0.0855, 0.0833, 0.0840]],
        [[0.9132, 0.9160, 0.9153,  ..., 0.5000, 0.9110, 0.9161],
         [0.0868, 0.0840, 0.0847,  ..., 0.5000, 0.0890, 0.0839]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:45,180 [Process: 0] Synchronize training processes
2024-08-16 17:10:45,180 [Process: 0] Evaluating...
2024-08-16 17:10:45,182 [Process: 0] EPOCH 101:
2024-08-16 17:10:45,184 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9197, 0.9154, 0.9165,  ..., 0.9193, 0.9194, 0.9176],
         [0.0803, 0.0846, 0.0835,  ..., 0.0807, 0.0806, 0.0824]],
        [[0.9213, 0.9200, 0.9173,  ..., 0.9171, 0.9202, 0.9183],
         [0.0787, 0.0800, 0.0827,  ..., 0.0829, 0.0798, 0.0817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
2024-08-16 17:10:47,269 [Process: 0] Synchronize training processes
2024-08-16 17:10:47,269 [Process: 0] Evaluating...
2024-08-16 17:10:47,277 [Process: 0] EPOCH 102:
2024-08-16 17:10:47,279 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9162, 0.9173, 0.9131,  ..., 0.9144, 0.9162, 0.9156],
         [0.0838, 0.0827, 0.0869,  ..., 0.0856, 0.0838, 0.0844]],
        [[0.9151, 0.9180, 0.9142,  ..., 0.5000, 0.9165, 0.9147],
         [0.0849, 0.0820, 0.0858,  ..., 0.5000, 0.0835, 0.0853]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9159, 0.9145, 0.9184,  ..., 0.9183, 0.9166, 0.9172],
         [0.0841, 0.0855, 0.0816,  ..., 0.0817, 0.0834, 0.0828]],
        [[0.9172, 0.9178, 0.9177,  ..., 0.9170, 0.9153, 0.9149],
         [0.0828, 0.0822, 0.0823,  ..., 0.0830, 0.0847, 0.0851]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:49,365 [Process: 0] Synchronize training processes
2024-08-16 17:10:49,365 [Process: 0] Evaluating...
2024-08-16 17:10:49,367 [Process: 0] EPOCH 103:
2024-08-16 17:10:49,369 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9141, 0.9143, 0.9138,  ..., 0.9161, 0.9147, 0.9148],
         [0.0859, 0.0857, 0.0862,  ..., 0.0839, 0.0853, 0.0852]],
        [[0.9147, 0.9163, 0.9151,  ..., 0.5000, 0.9143, 0.9146],
         [0.0853, 0.0837, 0.0849,  ..., 0.5000, 0.0857, 0.0854]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9188, 0.9210, 0.9182,  ..., 0.9177, 0.9192, 0.9176],
         [0.0812, 0.0790, 0.0818,  ..., 0.0823, 0.0808, 0.0824]],
        [[0.9158, 0.9177, 0.9172,  ..., 0.9169, 0.9208, 0.9151],
         [0.0842, 0.0823, 0.0828,  ..., 0.0831, 0.0792, 0.0849]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:51,550 [Process: 0] Synchronize training processes
2024-08-16 17:10:51,550 [Process: 0] Evaluating...
2024-08-16 17:10:51,552 [Process: 0] EPOCH 104:
2024-08-16 17:10:51,554 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9166, 0.9152, 0.9167,  ..., 0.9159, 0.9166, 0.9177],
         [0.0834, 0.0848, 0.0833,  ..., 0.0841, 0.0834, 0.0823]],
        [[0.9176, 0.9162, 0.9147,  ..., 0.5000, 0.9163, 0.9158],
         [0.0824, 0.0838, 0.0853,  ..., 0.5000, 0.0837, 0.0842]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9167, 0.9162, 0.9166,  ..., 0.9170, 0.9161, 0.9181],
         [0.0833, 0.0838, 0.0834,  ..., 0.0830, 0.0839, 0.0819]],
        [[0.9211, 0.9168, 0.9164,  ..., 0.9163, 0.9161, 0.9182],
         [0.0789, 0.0832, 0.0836,  ..., 0.0837, 0.0839, 0.0818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:53,743 [Process: 0] Synchronize training processes
2024-08-16 17:10:53,744 [Process: 0] Evaluating...
2024-08-16 17:10:53,746 [Process: 0] EPOCH 105:
2024-08-16 17:10:53,748 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9148, 0.9204, 0.9181,  ..., 0.9166, 0.9161, 0.9180],
         [0.0852, 0.0796, 0.0819,  ..., 0.0834, 0.0839, 0.0820]],
        [[0.9174, 0.9177, 0.9175,  ..., 0.5000, 0.9168, 0.9162],
         [0.0826, 0.0823, 0.0825,  ..., 0.5000, 0.0832, 0.0838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9175, 0.9173, 0.9147,  ..., 0.9192, 0.9197, 0.9138],
         [0.0825, 0.0827, 0.0853,  ..., 0.0808, 0.0803, 0.0862]],
        [[0.9158, 0.9184, 0.9188,  ..., 0.9166, 0.9201, 0.9174],
         [0.0842, 0.0816, 0.0812,  ..., 0.0834, 0.0799, 0.0826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
2024-08-16 17:10:55,935 [Process: 0] Synchronize training processes
2024-08-16 17:10:55,936 [Process: 0] Evaluating...
2024-08-16 17:10:55,938 [Process: 0] EPOCH 106:
2024-08-16 17:10:55,940 [Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9187, 0.9192, 0.9199,  ..., 0.9190, 0.9190, 0.9191],
         [0.0813, 0.0808, 0.0801,  ..., 0.0810, 0.0810, 0.0809]],
        [[0.9174, 0.9192, 0.9187,  ..., 0.5000, 0.9175, 0.9182],
         [0.0826, 0.0808, 0.0813,  ..., 0.5000, 0.0825, 0.0818]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: soft_dice - SoftDiceLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 4096])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 4096, 3])
-----align shape: torch.Size([2, 16, 4096])
------x shape: torch.Size([2, 35, 4096])
------fusion x shape: torch.Size([2, 2, 4096])
------target shape: torch.Size([2, 4096, 2])
tensor([[[0.9131, 0.9157, 0.9165,  ..., 0.9152, 0.9154, 0.9131],
         [0.0869, 0.0843, 0.0835,  ..., 0.0848, 0.0846, 0.0869]],
        [[0.9160, 0.9146, 0.9155,  ..., 0.9156, 0.9161, 0.9143],
         [0.0840, 0.0854, 0.0845,  ..., 0.0844, 0.0839, 0.0857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 2, 4096])
mask shape: torch.Size([2, 4096, 2])
shape of inputs: torch.Size([2, 2, 4096])
shape of targets: torch.Size([2, 2, 4096])
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 179, in train_one_epoch
    for i, batch in enumerate(self.train_loader):
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/dataset/dataset.py", line 125, in __getitem__
    fps_indices_scene_np = fps_indices_scene.squeeze(0).cpu().numpy()
KeyboardInterrupt