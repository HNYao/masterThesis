2024-08-19 13:12:03,204 [Worker 0] Is distributed: False
2024-08-19 13:12:03,204 [Process: 0] Starting training
2024-08-19 13:12:03,205 [Process: 0] EPOCH 1:
2024-08-19 13:12:03,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:04,822 [Process: 0] Synchronize training processes
2024-08-19 13:12:04,822 [Process: 0] Evaluating...
2024-08-19 13:12:05,242 [Process: 0] EPOCH 2:
2024-08-19 13:12:05,246 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2013, 0.3420, 0.1496,  ..., 0.1481, 0.4452, 0.1980],
         [0.3961, 0.3088, 0.1496,  ..., 0.1420, 0.1849, 0.4061],
         [0.2013, 0.1928, 0.5388,  ..., 0.5084, 0.1849, 0.1980],
         [0.2013, 0.1564, 0.1620,  ..., 0.2015, 0.1849, 0.1980]],
        [[0.3098, 0.1502, 0.6037,  ..., 0.2301, 0.2239, 0.1630],
         [0.1867, 0.4153, 0.0751,  ..., 0.3520, 0.2239, 0.2199],
         [0.1668, 0.2519, 0.0751,  ..., 0.2089, 0.3282, 0.1630],
         [0.3367, 0.1825, 0.2462,  ..., 0.2089, 0.2239, 0.4541]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2458, 0.2444, 0.2424,  ..., 0.3001, 0.2173, 0.1468],
         [0.3203, 0.2840, 0.3283,  ..., 0.2954, 0.2393, 0.2006],
         [0.1734, 0.1718, 0.2031,  ..., 0.1530, 0.1367, 0.2625],
         [0.2606, 0.2997, 0.2262,  ..., 0.2515, 0.4067, 0.3902]],
        [[0.2259, 0.2831, 0.2743,  ..., 0.2935, 0.2588, 0.1739],
         [0.2259, 0.2422, 0.2122,  ..., 0.2308, 0.2869, 0.1926],
         [0.3223, 0.1911, 0.2122,  ..., 0.2308, 0.2190, 0.4596],
         [0.2259, 0.2837, 0.3014,  ..., 0.2449, 0.2353, 0.1739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:12:06,207 [Process: 0] Synchronize training processes
2024-08-19 13:12:06,207 [Process: 0] Evaluating...
2024-08-19 13:12:06,209 [Process: 0] EPOCH 3:
2024-08-19 13:12:06,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:07,168 [Process: 0] Synchronize training processes
2024-08-19 13:12:07,169 [Process: 0] Evaluating...
2024-08-19 13:12:07,170 [Process: 0] EPOCH 4:
2024-08-19 13:12:07,172 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2746, 0.0018, 0.2667,  ..., 0.2717, 0.2609, 0.2759],
         [0.2521, 0.0018, 0.2548,  ..., 0.2625, 0.2433, 0.2537],
         [0.2106, 0.9946, 0.2081,  ..., 0.2050, 0.2094, 0.2096],
         [0.2627, 0.0018, 0.2704,  ..., 0.2608, 0.2863, 0.2609]],
        [[0.2052, 0.2790, 0.2758,  ..., 0.2717, 0.2635, 0.2607],
         [0.2052, 0.2451, 0.2621,  ..., 0.2646, 0.2472, 0.2532],
         [0.3843, 0.2090, 0.1932,  ..., 0.2078, 0.2198, 0.2278],
         [0.2052, 0.2669, 0.2689,  ..., 0.2559, 0.2695, 0.2583]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2892, 0.2691, 0.2720,  ..., 0.2722, 0.0178, 0.2783],
         [0.2500, 0.2584, 0.2562,  ..., 0.2656, 0.0178, 0.2578],
         [0.1852, 0.1881, 0.1906,  ..., 0.1911, 0.9466, 0.1812],
         [0.2756, 0.2844, 0.2812,  ..., 0.2712, 0.0178, 0.2827]],
        [[0.2721, 0.2622, 0.2606,  ..., 0.2750, 0.2215, 0.0949],
         [0.2528, 0.2551, 0.2646,  ..., 0.2553, 0.2483, 0.0949],
         [0.2068, 0.1943, 0.2026,  ..., 0.1972, 0.3086, 0.7154],
         [0.2683, 0.2884, 0.2722,  ..., 0.2724, 0.2215, 0.0949]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2638, 0.0449, 0.2672,  ..., 0.2702, 0.2712, 0.2738],
         [0.2540, 0.0449, 0.2512,  ..., 0.2565, 0.2564, 0.2584],
         [0.2056, 0.8654, 0.2086,  ..., 0.1983, 0.2019, 0.2051],
         [0.2765, 0.0449, 0.2730,  ..., 0.2750, 0.2705, 0.2627]],
        [[0.2649, 0.2655, 0.2735,  ..., 0.2642, 0.2625, 0.2058],
         [0.2442, 0.2510, 0.2490,  ..., 0.2553, 0.2628, 0.2058],
         [0.2310, 0.2059, 0.2005,  ..., 0.1968, 0.2158, 0.3827],
         [0.2599, 0.2776, 0.2771,  ..., 0.2837, 0.2590, 0.2058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:12:08,131 [Process: 0] Synchronize training processes
2024-08-19 13:12:08,132 [Process: 0] Evaluating...
2024-08-19 13:12:08,133 [Process: 0] EPOCH 5:
2024-08-19 13:12:08,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:09,094 [Process: 0] Synchronize training processes
2024-08-19 13:12:09,095 [Process: 0] Evaluating...
2024-08-19 13:12:09,096 [Process: 0] EPOCH 6:
2024-08-19 13:12:09,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2839, 0.2765, 0.2747,  ..., 0.2676, 0.2191, 0.2184],
         [0.2438, 0.2498, 0.2486,  ..., 0.2531, 0.2191, 0.2249],
         [0.1903, 0.1918, 0.2001,  ..., 0.1996, 0.3426, 0.3353],
         [0.2820, 0.2819, 0.2766,  ..., 0.2798, 0.2191, 0.2214]],
        [[0.0675, 0.2748, 0.2735,  ..., 0.2616, 0.2708, 0.2419],
         [0.0675, 0.2532, 0.2482,  ..., 0.2548, 0.2477, 0.2418],
         [0.7975, 0.1990, 0.2001,  ..., 0.2050, 0.2055, 0.2648],
         [0.0675, 0.2730, 0.2782,  ..., 0.2787, 0.2760, 0.2515]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2812, 0.2831, 0.2708,  ..., 0.2827, 0.2807, 0.2698],
         [0.2447, 0.2448, 0.2497,  ..., 0.2457, 0.2517, 0.2453],
         [0.1952, 0.1949, 0.2109,  ..., 0.1917, 0.1965, 0.2079],
         [0.2789, 0.2772, 0.2686,  ..., 0.2799, 0.2711, 0.2770]],
        [[0.1087, 0.2735, 0.2783,  ..., 0.2815, 0.2769, 0.2218],
         [0.1087, 0.2512, 0.2493,  ..., 0.2391, 0.2488, 0.2218],
         [0.6738, 0.1963, 0.2086,  ..., 0.2008, 0.2005, 0.3346],
         [0.1087, 0.2790, 0.2637,  ..., 0.2786, 0.2738, 0.2218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2835, 0.2897, 0.2689,  ..., 0.2874, 0.2237, 0.0752],
         [0.2448, 0.2439, 0.2468,  ..., 0.2452, 0.2237, 0.0752],
         [0.1937, 0.1863, 0.1990,  ..., 0.1888, 0.3290, 0.7743],
         [0.2781, 0.2801, 0.2853,  ..., 0.2786, 0.2237, 0.0752]],
        [[0.2795, 0.2881, 0.2828,  ..., 0.2736, 0.2732, 0.2702],
         [0.2380, 0.2451, 0.2404,  ..., 0.2424, 0.2396, 0.2436],
         [0.2059, 0.1987, 0.1952,  ..., 0.1979, 0.2052, 0.2117],
         [0.2766, 0.2680, 0.2816,  ..., 0.2861, 0.2821, 0.2745]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2892, 0.2911, 0.2780,  ..., 0.2540, 0.3003, 0.2843],
         [0.2347, 0.2340, 0.2398,  ..., 0.2257, 0.2364, 0.2395],
         [0.1912, 0.1906, 0.1950,  ..., 0.2661, 0.1981, 0.1942],
         [0.2848, 0.2844, 0.2872,  ..., 0.2543, 0.2652, 0.2820]],
        [[0.0738, 0.2796, 0.2829,  ..., 0.2823, 0.1262, 0.0197],
         [0.0807, 0.2400, 0.2441,  ..., 0.2469, 0.1416, 0.0197],
         [0.7735, 0.1899, 0.1905,  ..., 0.1864, 0.6061, 0.9408],
         [0.0721, 0.2906, 0.2825,  ..., 0.2843, 0.1262, 0.0197]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2935, 0.2876, 0.2837,  ..., 0.2854, 0.0675, 0.2843],
         [0.2172, 0.2215, 0.2413,  ..., 0.2305, 0.0675, 0.2251],
         [0.1955, 0.1943, 0.2023,  ..., 0.1947, 0.7975, 0.1971],
         [0.2937, 0.2966, 0.2727,  ..., 0.2894, 0.0675, 0.2935]],
        [[0.2922, 0.2866, 0.2744,  ..., 0.2944, 0.2767, 0.2500],
         [0.2423, 0.2261, 0.2287,  ..., 0.2342, 0.2299, 0.2500],
         [0.1970, 0.2127, 0.1985,  ..., 0.1947, 0.2038, 0.2500],
         [0.2684, 0.2746, 0.2984,  ..., 0.2766, 0.2896, 0.2500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:12:10,056 [Process: 0] Synchronize training processes
2024-08-19 13:12:10,057 [Process: 0] Evaluating...
2024-08-19 13:12:10,059 [Process: 0] EPOCH 7:
2024-08-19 13:12:10,060 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:11,019 [Process: 0] Synchronize training processes
2024-08-19 13:12:11,020 [Process: 0] Evaluating...
2024-08-19 13:12:11,022 [Process: 0] EPOCH 8:
2024-08-19 13:12:11,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2872, 0.2992, 0.3092,  ..., 0.2914, 0.3053, 0.2902],
         [0.2275, 0.2227, 0.2375,  ..., 0.2359, 0.2259, 0.2296],
         [0.1947, 0.1929, 0.1765,  ..., 0.1889, 0.1957, 0.1934],
         [0.2906, 0.2853, 0.2769,  ..., 0.2838, 0.2732, 0.2868]],
        [[0.2836, 0.2910, 0.2825,  ..., 0.3021, 0.1359, 0.0408],
         [0.2473, 0.2297, 0.2433,  ..., 0.2312, 0.1359, 0.0408],
         [0.2120, 0.1870, 0.1909,  ..., 0.1919, 0.5923, 0.8775],
         [0.2571, 0.2923, 0.2833,  ..., 0.2747, 0.1359, 0.0408]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2980, 0.2973, 0.3102,  ..., 0.2959, 0.2182, 0.3104],
         [0.2193, 0.2160, 0.2085,  ..., 0.2191, 0.2333, 0.2095],
         [0.1973, 0.1878, 0.1888,  ..., 0.2034, 0.3241, 0.1952],
         [0.2854, 0.2989, 0.2925,  ..., 0.2816, 0.2244, 0.2850]],
        [[0.3163, 0.2966, 0.2975,  ..., 0.2954, 0.2998, 0.2186],
         [0.2151, 0.2211, 0.2112,  ..., 0.2179, 0.2119, 0.2227],
         [0.1778, 0.1912, 0.1987,  ..., 0.1954, 0.1944, 0.3414],
         [0.2907, 0.2911, 0.2927,  ..., 0.2912, 0.2939, 0.2172]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2981, 0.3228, 0.3244,  ..., 0.3220, 0.3170, 0.2973],
         [0.2195, 0.2011, 0.2131,  ..., 0.2137, 0.2115, 0.2158],
         [0.2034, 0.1890, 0.1695,  ..., 0.1775, 0.1803, 0.1956],
         [0.2790, 0.2871, 0.2930,  ..., 0.2868, 0.2912, 0.2913]],
        [[0.2301, 0.3024, 0.2951,  ..., 0.3046, 0.1283, 0.1039],
         [0.2321, 0.2164, 0.2167,  ..., 0.2127, 0.1310, 0.1039],
         [0.2921, 0.1962, 0.1943,  ..., 0.1944, 0.6124, 0.6882],
         [0.2457, 0.2850, 0.2939,  ..., 0.2883, 0.1283, 0.1039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3102, 0.3226, 0.3497,  ..., 0.3302, 0.1290, 0.3129],
         [0.2040, 0.1933, 0.1911,  ..., 0.2027, 0.1290, 0.2096],
         [0.1835, 0.1859, 0.1597,  ..., 0.1817, 0.6130, 0.1804],
         [0.3022, 0.2983, 0.2995,  ..., 0.2855, 0.1290, 0.2971]],
        [[0.3383, 0.3134, 0.3254,  ..., 0.3282, 0.3138, 0.0670],
         [0.1991, 0.2161, 0.1917,  ..., 0.2053, 0.2094, 0.0670],
         [0.1810, 0.1834, 0.1735,  ..., 0.1856, 0.1937, 0.7991],
         [0.2816, 0.2871, 0.3094,  ..., 0.2808, 0.2831, 0.0670]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:11,982 [Process: 0] Synchronize training processes
2024-08-19 13:12:11,982 [Process: 0] Evaluating...
2024-08-19 13:12:11,984 [Process: 0] EPOCH 9:
2024-08-19 13:12:11,986 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:12,942 [Process: 0] Synchronize training processes
2024-08-19 13:12:12,943 [Process: 0] Evaluating...
2024-08-19 13:12:12,944 [Process: 0] EPOCH 10:
2024-08-19 13:12:12,946 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3144, 0.3137, 0.2962,  ..., 0.3031, 0.3044, 0.3292],
         [0.2014, 0.2015, 0.2081,  ..., 0.2174, 0.2052, 0.1972],
         [0.1911, 0.2015, 0.2079,  ..., 0.1802, 0.1865, 0.1846],
         [0.2932, 0.2832, 0.2878,  ..., 0.2993, 0.3039, 0.2890]],
        [[0.1409, 0.3111, 0.2960,  ..., 0.3375, 0.1353, 0.1179],
         [0.1545, 0.2029, 0.2207,  ..., 0.1941, 0.1489, 0.1264],
         [0.5637, 0.1876, 0.1968,  ..., 0.1798, 0.5805, 0.6377],
         [0.1409, 0.2984, 0.2865,  ..., 0.2886, 0.1353, 0.1179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3282, 0.3287, 0.3118,  ..., 0.3389, 0.1277, 0.3241],
         [0.1823, 0.2028, 0.1922,  ..., 0.1855, 0.1277, 0.1927],
         [0.1742, 0.1653, 0.1773,  ..., 0.1678, 0.6170, 0.1768],
         [0.3153, 0.3032, 0.3187,  ..., 0.3079, 0.1277, 0.3065]],
        [[0.3381, 0.3251, 0.3258,  ..., 0.3172, 0.3390, 0.1020],
         [0.1907, 0.1975, 0.1841,  ..., 0.1897, 0.1815, 0.1066],
         [0.1728, 0.1975, 0.1787,  ..., 0.1835, 0.1760, 0.6893],
         [0.2984, 0.2799, 0.3114,  ..., 0.3096, 0.3035, 0.1020]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3309, 0.3467, 0.3226,  ..., 0.3173, 0.3164, 0.3360],
         [0.1982, 0.1926, 0.1907,  ..., 0.1937, 0.2046, 0.1886],
         [0.1706, 0.1632, 0.1829,  ..., 0.1937, 0.1896, 0.1710],
         [0.3003, 0.2975, 0.3038,  ..., 0.2953, 0.2894, 0.3044]],
        [[0.1656, 0.3304, 0.3315,  ..., 0.3159, 0.0553, 0.0714],
         [0.1840, 0.1988, 0.1934,  ..., 0.2003, 0.0553, 0.0714],
         [0.4847, 0.1830, 0.1790,  ..., 0.1754, 0.8341, 0.7857],
         [0.1656, 0.2878, 0.2960,  ..., 0.3083, 0.0553, 0.0714]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3369, 0.3614, 0.3703,  ..., 0.3459, 0.0707, 0.3410],
         [0.1825, 0.1782, 0.1667,  ..., 0.1808, 0.0776, 0.1853],
         [0.1763, 0.1562, 0.1533,  ..., 0.1696, 0.7810, 0.1700],
         [0.3042, 0.3041, 0.3098,  ..., 0.3037, 0.0707, 0.3037]],
        [[0.3286, 0.3457, 0.3577,  ..., 0.3208, 0.3362, 0.1109],
         [0.1849, 0.1824, 0.1719,  ..., 0.1867, 0.1784, 0.1468],
         [0.1684, 0.1679, 0.1618,  ..., 0.1867, 0.1779, 0.6315],
         [0.3181, 0.3040, 0.3086,  ..., 0.3058, 0.3075, 0.1109]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:13,903 [Process: 0] Synchronize training processes
2024-08-19 13:12:13,903 [Process: 0] Evaluating...
2024-08-19 13:12:13,905 [Process: 0] EPOCH 11:
2024-08-19 13:12:13,906 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:14,865 [Process: 0] Synchronize training processes
2024-08-19 13:12:14,865 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3206, 0.3240, 0.3002,  ..., 0.3171, 0.2977, 0.3198],
         [0.1965, 0.1972, 0.2048,  ..., 0.1976, 0.2054, 0.1896],
         [0.1866, 0.1842, 0.2048,  ..., 0.1865, 0.2021, 0.1867],
         [0.2963, 0.2946, 0.2903,  ..., 0.2988, 0.2949, 0.3039]],
        [[0.1165, 0.3341, 0.3262,  ..., 0.3244, 0.1603, 0.1648],
         [0.1315, 0.1884, 0.1871,  ..., 0.1804, 0.1706, 0.1648],
         [0.6354, 0.1805, 0.1871,  ..., 0.1804, 0.5088, 0.5057],
         [0.1165, 0.2969, 0.2996,  ..., 0.3149, 0.1603, 0.1648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3281, 0.3156, 0.3346,  ..., 0.3231, 0.1318, 0.3218],
         [0.1886, 0.1879, 0.1828,  ..., 0.1904, 0.1318, 0.1836],
         [0.1658, 0.1859, 0.1713,  ..., 0.1904, 0.6047, 0.1836],
         [0.3175, 0.3106, 0.3112,  ..., 0.2961, 0.1318, 0.3109]],
        [[0.3347, 0.3165, 0.3451,  ..., 0.3445, 0.2990, 0.1058],
         [0.1743, 0.1877, 0.1809,  ..., 0.1797, 0.1937, 0.1058],
         [0.1702, 0.1833, 0.1571,  ..., 0.1797, 0.1937, 0.6826],
         [0.3208, 0.3125, 0.3169,  ..., 0.2961, 0.3136, 0.1058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3006, 0.3241, 0.3205,  ..., 0.3166, 0.3003, 0.3457],
         [0.1917, 0.1903, 0.1957,  ..., 0.1951, 0.2020, 0.1794],
         [0.1917, 0.1870, 0.1797,  ..., 0.1800, 0.2020, 0.1679],
         [0.3159, 0.2986, 0.3041,  ..., 0.3082, 0.2957, 0.3071]],
        [[0.1509, 0.3324, 0.3379,  ..., 0.3510, 0.1823, 0.1766],
         [0.1509, 0.1816, 0.1895,  ..., 0.1805, 0.1823, 0.1766],
         [0.5473, 0.1782, 0.1895,  ..., 0.1687, 0.4532, 0.4703],
         [0.1509, 0.3078, 0.2832,  ..., 0.2999, 0.1823, 0.1766]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3621, 0.3399, 0.3675,  ..., 0.3595, 0.1503, 0.3233],
         [0.1724, 0.1745, 0.1687,  ..., 0.1759, 0.1569, 0.1884],
         [0.1724, 0.1690, 0.1556,  ..., 0.1569, 0.5424, 0.1855],
         [0.2931, 0.3166, 0.3082,  ..., 0.3078, 0.1503, 0.3029]],
        [[0.3149, 0.3454, 0.3605,  ..., 0.3389, 0.3565, 0.1108],
         [0.1905, 0.1743, 0.1778,  ..., 0.1866, 0.1719, 0.1108],
         [0.1691, 0.1743, 0.1760,  ..., 0.1780, 0.1670, 0.6675],
         [0.3256, 0.3059, 0.2856,  ..., 0.2965, 0.3046, 0.1108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:12:15,282 [Process: 0] EPOCH 12:
2024-08-19 13:12:15,284 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:16,242 [Process: 0] Synchronize training processes
2024-08-19 13:12:16,243 [Process: 0] Evaluating...
2024-08-19 13:12:16,245 [Process: 0] EPOCH 13:
2024-08-19 13:12:16,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:17,203 [Process: 0] Synchronize training processes
2024-08-19 13:12:17,204 [Process: 0] Evaluating...
2024-08-19 13:12:17,206 [Process: 0] EPOCH 14:
2024-08-19 13:12:17,207 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3271, 0.3045, 0.3329,  ..., 0.3186, 0.3335, 0.3131],
         [0.1848, 0.1897, 0.1814,  ..., 0.1839, 0.1874, 0.1971],
         [0.1814, 0.1880, 0.1621,  ..., 0.1839, 0.1801, 0.1971],
         [0.3067, 0.3179, 0.3236,  ..., 0.3135, 0.2990, 0.2927]],
        [[0.1796, 0.3075, 0.3225,  ..., 0.3183, 0.1371, 0.1498],
         [0.1796, 0.1963, 0.1911,  ..., 0.1885, 0.1483, 0.1498],
         [0.4612, 0.1963, 0.1883,  ..., 0.1813, 0.5775, 0.5505],
         [0.1796, 0.2999, 0.2981,  ..., 0.3118, 0.1371, 0.1498]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3434, 0.3701, 0.3589,  ..., 0.3488, 0.1148, 0.3115],
         [0.1842, 0.1716, 0.1706,  ..., 0.1709, 0.1148, 0.1897],
         [0.1639, 0.1427, 0.1572,  ..., 0.1672, 0.6555, 0.1849],
         [0.3085, 0.3157, 0.3133,  ..., 0.3131, 0.1148, 0.3138]],
        [[0.2961, 0.2952, 0.3274,  ..., 0.3401, 0.3455, 0.1295],
         [0.2033, 0.1944, 0.1841,  ..., 0.1784, 0.1715, 0.1466],
         [0.1895, 0.1944, 0.1841,  ..., 0.1612, 0.1682, 0.5945],
         [0.3111, 0.3159, 0.3045,  ..., 0.3203, 0.3147, 0.1295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3005, 0.3251, 0.3323,  ..., 0.3039, 0.2837, 0.3018],
         [0.2015, 0.1915, 0.1922,  ..., 0.1991, 0.2050, 0.1903],
         [0.2015, 0.1818, 0.1744,  ..., 0.1991, 0.2317, 0.1856],
         [0.2965, 0.3015, 0.3010,  ..., 0.2980, 0.2796, 0.3223]],
        [[0.1500, 0.3590, 0.3286,  ..., 0.3536, 0.0899, 0.1530],
         [0.1500, 0.1664, 0.1882,  ..., 0.1792, 0.0899, 0.1530],
         [0.5501, 0.1599, 0.1882,  ..., 0.1769, 0.7302, 0.5411],
         [0.1500, 0.3147, 0.2949,  ..., 0.2903, 0.0899, 0.1530]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-19 13:12:18,167 [Process: 0] Synchronize training processes
2024-08-19 13:12:18,167 [Process: 0] Evaluating...
2024-08-19 13:12:18,169 [Process: 0] EPOCH 15:
2024-08-19 13:12:18,171 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:19,130 [Process: 0] Synchronize training processes
2024-08-19 13:12:19,131 [Process: 0] Evaluating...
2024-08-19 13:12:19,133 [Process: 0] EPOCH 16:
2024-08-19 13:12:19,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.3052, 0.3637, 0.3589,  ..., 0.3368, 0.0649, 0.1644],
         [0.1939, 0.1664, 0.1668,  ..., 0.1782, 0.0649, 0.1644],
         [0.1901, 0.1550, 0.1502,  ..., 0.1729, 0.8052, 0.5068],
         [0.3109, 0.3149, 0.3241,  ..., 0.3122, 0.0649, 0.1644]],
        [[0.2785, 0.3579, 0.3796,  ..., 0.3899, 0.3499, 0.1280],
         [0.1998, 0.1694, 0.1684,  ..., 0.1459, 0.1854, 0.1280],
         [0.2154, 0.1550, 0.1412,  ..., 0.1390, 0.1638, 0.6160],
         [0.3063, 0.3177, 0.3108,  ..., 0.3252, 0.3009, 0.1280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3104, 0.2951, 0.3320,  ..., 0.3344, 0.2836, 0.3002],
         [0.1970, 0.2051, 0.1810,  ..., 0.1783, 0.2021, 0.1948],
         [0.1920, 0.2051, 0.1740,  ..., 0.1783, 0.1970, 0.1948],
         [0.3006, 0.2948, 0.3130,  ..., 0.3089, 0.3173, 0.3102]],
        [[0.0631, 0.3633, 0.3630,  ..., 0.3569, 0.1533, 0.1133],
         [0.0631, 0.1691, 0.1646,  ..., 0.1691, 0.1533, 0.1133],
         [0.8107, 0.1691, 0.1619,  ..., 0.1470, 0.5400, 0.6600],
         [0.0631, 0.2984, 0.3104,  ..., 0.3270, 0.1533, 0.1133]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1977, 0.3748, 0.3596,  ..., 0.3580, 0.0704, 0.0877],
         [0.1977, 0.1620, 0.1622,  ..., 0.1640, 0.0704, 0.0877],
         [0.3951, 0.1574, 0.1457,  ..., 0.1613, 0.7887, 0.7369],
         [0.2096, 0.3058, 0.3325,  ..., 0.3167, 0.0704, 0.0877]],
        [[0.2012, 0.3172, 0.3281,  ..., 0.3655, 0.3740, 0.1180],
         [0.2012, 0.1846, 0.1750,  ..., 0.1590, 0.1616, 0.1180],
         [0.3765, 0.1774, 0.1718,  ..., 0.1501, 0.1532, 0.6459],
         [0.2210, 0.3208, 0.3251,  ..., 0.3254, 0.3112, 0.1180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3264, 0.3531, 0.3384,  ..., 0.3961, 0.3098, 0.3277],
         [0.1734, 0.1790, 0.1817,  ..., 0.1646, 0.1964, 0.1858],
         [0.1610, 0.1748, 0.1809,  ..., 0.1551, 0.1861, 0.1849],
         [0.3391, 0.2931, 0.2990,  ..., 0.2842, 0.3077, 0.3017]],
        [[0.0546, 0.3134, 0.3140,  ..., 0.2772, 0.1225, 0.1070],
         [0.0546, 0.2001, 0.1948,  ..., 0.2056, 0.1225, 0.1070],
         [0.8361, 0.2001, 0.1948,  ..., 0.2329, 0.6326, 0.6790],
         [0.0546, 0.2864, 0.2965,  ..., 0.2843, 0.1225, 0.1070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1927, 0.3930, 0.4057,  ..., 0.3377, 0.0444, 0.0739],
         [0.1927, 0.1630, 0.1512,  ..., 0.1707, 0.0444, 0.0739],
         [0.4200, 0.1426, 0.1290,  ..., 0.1707, 0.8668, 0.7782],
         [0.1947, 0.3015, 0.3141,  ..., 0.3209, 0.0444, 0.0739]],
        [[0.1913, 0.3539, 0.4013,  ..., 0.3687, 0.4205, 0.0979],
         [0.1913, 0.1742, 0.1522,  ..., 0.1634, 0.1504, 0.0979],
         [0.4118, 0.1586, 0.1410,  ..., 0.1634, 0.1504, 0.7063],
         [0.2057, 0.3133, 0.3055,  ..., 0.3045, 0.2787, 0.0979]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:12:20,095 [Process: 0] Synchronize training processes
2024-08-19 13:12:20,096 [Process: 0] Evaluating...
2024-08-19 13:12:20,097 [Process: 0] EPOCH 17:
2024-08-19 13:12:20,099 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:21,067 [Process: 0] Synchronize training processes
2024-08-19 13:12:21,067 [Process: 0] Evaluating...
2024-08-19 13:12:21,069 [Process: 0] EPOCH 18:
2024-08-19 13:12:21,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2588, 0.2685, 0.2643,  ..., 0.3199, 0.2019, 0.2539],
         [0.2079, 0.2015, 0.2127,  ..., 0.1866, 0.2019, 0.2052],
         [0.2355, 0.2188, 0.2243,  ..., 0.1866, 0.3676, 0.2648],
         [0.2978, 0.3112, 0.2987,  ..., 0.3069, 0.2286, 0.2760]],
        [[0.0931, 0.4145, 0.4204,  ..., 0.3798, 0.1651, 0.0924],
         [0.0931, 0.1484, 0.1592,  ..., 0.1663, 0.1651, 0.0924],
         [0.7206, 0.1270, 0.1525,  ..., 0.1556, 0.5047, 0.7227],
         [0.0931, 0.3100, 0.2679,  ..., 0.2983, 0.1651, 0.0924]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1870, 0.3476, 0.3982,  ..., 0.3687, 0.0984, 0.0970],
         [0.1870, 0.1778, 0.1574,  ..., 0.1717, 0.0984, 0.0970],
         [0.4339, 0.1778, 0.1355,  ..., 0.1717, 0.7047, 0.7089],
         [0.1921, 0.2968, 0.3090,  ..., 0.2879, 0.0984, 0.0970]],
        [[0.3856, 0.3408, 0.3610,  ..., 0.4483, 0.5357, 0.1173],
         [0.1437, 0.1616, 0.1668,  ..., 0.1272, 0.1135, 0.1173],
         [0.1316, 0.1614, 0.1668,  ..., 0.1143, 0.1084, 0.6480],
         [0.3391, 0.3362, 0.3054,  ..., 0.3103, 0.2424, 0.1173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2846, 0.3131, 0.2924,  ..., 0.3091, 0.2651, 0.3848],
         [0.1899, 0.1814, 0.1893,  ..., 0.1857, 0.2043, 0.1628],
         [0.1899, 0.1755, 0.1893,  ..., 0.1857, 0.2430, 0.1532],
         [0.3355, 0.3301, 0.3289,  ..., 0.3195, 0.2875, 0.2992]],
        [[0.0969, 0.3718, 0.4504,  ..., 0.2396, 0.2094, 0.1315],
         [0.0969, 0.1688, 0.1518,  ..., 0.2065, 0.2094, 0.1315],
         [0.7094, 0.1609, 0.1333,  ..., 0.2850, 0.3260, 0.6054],
         [0.0969, 0.2985, 0.2645,  ..., 0.2690, 0.2551, 0.1315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1930, 0.3603, 0.3905,  ..., 0.4038, 0.1266, 0.1108],
         [0.1930, 0.1670, 0.1675,  ..., 0.1530, 0.1266, 0.1108],
         [0.3782, 0.1670, 0.1675,  ..., 0.1530, 0.6201, 0.6676],
         [0.2359, 0.3056, 0.2746,  ..., 0.2901, 0.1266, 0.1108]],
        [[0.2643, 0.4105, 0.3506,  ..., 0.3989, 0.6393, 0.1430],
         [0.1776, 0.1329, 0.1522,  ..., 0.1359, 0.0910, 0.1430],
         [0.1776, 0.1252, 0.1522,  ..., 0.1105, 0.0910, 0.5709],
         [0.3804, 0.3314, 0.3451,  ..., 0.3548, 0.1786, 0.1430]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:22,034 [Process: 0] Synchronize training processes
2024-08-19 13:12:22,034 [Process: 0] Evaluating...
2024-08-19 13:12:22,036 [Process: 0] EPOCH 19:
2024-08-19 13:12:22,038 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:22,996 [Process: 0] Synchronize training processes
2024-08-19 13:12:22,997 [Process: 0] Evaluating...
2024-08-19 13:12:22,998 [Process: 0] EPOCH 20:
2024-08-19 13:12:23,000 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2067, 0.2659, 0.2658,  ..., 0.2765, 0.2435, 0.2468],
         [0.2067, 0.1877, 0.1995,  ..., 0.1988, 0.2028, 0.2016],
         [0.3115, 0.1877, 0.2184,  ..., 0.2007, 0.2328, 0.2481],
         [0.2751, 0.3587, 0.3163,  ..., 0.3239, 0.3210, 0.3035]],
        [[0.1355, 0.3328, 0.3805,  ..., 0.3445, 0.1204, 0.1067],
         [0.1355, 0.1852, 0.1583,  ..., 0.1885, 0.1204, 0.1067],
         [0.5934, 0.1852, 0.1583,  ..., 0.1885, 0.6387, 0.6800],
         [0.1355, 0.2968, 0.3029,  ..., 0.2785, 0.1204, 0.1067]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1806, 0.3601, 0.4554,  ..., 0.4438, 0.1238, 0.0988],
         [0.1806, 0.1698, 0.1325,  ..., 0.1388, 0.1238, 0.0988],
         [0.4583, 0.1698, 0.1105,  ..., 0.1388, 0.6286, 0.7036],
         [0.1806, 0.3004, 0.3016,  ..., 0.2787, 0.1238, 0.0988]],
        [[0.1763, 0.4365, 0.3724,  ..., 0.4290, 0.4327, 0.1231],
         [0.1763, 0.1425, 0.1362,  ..., 0.1583, 0.1431, 0.1231],
         [0.4395, 0.1047, 0.1333,  ..., 0.1583, 0.1431, 0.6306],
         [0.2078, 0.3163, 0.3581,  ..., 0.2543, 0.2811, 0.1231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3857, 0.3999, 0.4598,  ..., 0.5230, 0.4942, 0.4998],
         [0.1487, 0.1357, 0.1365,  ..., 0.1146, 0.1243, 0.1354],
         [0.1471, 0.1357, 0.1365,  ..., 0.1146, 0.1243, 0.1242],
         [0.3185, 0.3287, 0.2672,  ..., 0.2477, 0.2572, 0.2406]],
        [[0.1063, 0.1484, 0.1888,  ..., 0.1420, 0.1135, 0.1073],
         [0.1063, 0.1484, 0.1888,  ..., 0.1420, 0.1135, 0.1073],
         [0.6812, 0.5547, 0.3425,  ..., 0.5740, 0.6596, 0.6781],
         [0.1063, 0.1484, 0.2798,  ..., 0.1420, 0.1135, 0.1073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2029, 0.5712, 0.4615,  ..., 0.4202, 0.0833, 0.1003],
         [0.2029, 0.1084, 0.1311,  ..., 0.1391, 0.0833, 0.1003],
         [0.3055, 0.1084, 0.1248,  ..., 0.1386, 0.7501, 0.6992],
         [0.2887, 0.2119, 0.2825,  ..., 0.3021, 0.0833, 0.1003]],
        [[0.1788, 0.3273, 0.3470,  ..., 0.4412, 0.5201, 0.1381],
         [0.1788, 0.1537, 0.1623,  ..., 0.1333, 0.1349, 0.1381],
         [0.3678, 0.1345, 0.1623,  ..., 0.1041, 0.1211, 0.5856],
         [0.2747, 0.3846, 0.3284,  ..., 0.3215, 0.2239, 0.1381]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:23,963 [Process: 0] Synchronize training processes
2024-08-19 13:12:23,963 [Process: 0] Evaluating...
2024-08-19 13:12:23,965 [Process: 0] EPOCH 21:
2024-08-19 13:12:23,967 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:24,932 [Process: 0] Synchronize training processes
2024-08-19 13:12:24,932 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2008, 0.2117, 0.2109,  ..., 0.2297, 0.1876, 0.2006],
         [0.2008, 0.1955, 0.1843,  ..., 0.1945, 0.1876, 0.1897],
         [0.3067, 0.2099, 0.2017,  ..., 0.2223, 0.3677, 0.2193],
         [0.2918, 0.3829, 0.4031,  ..., 0.3535, 0.2572, 0.3903]],
        [[0.1874, 0.5278, 0.4289,  ..., 0.2884, 0.1696, 0.0950],
         [0.1874, 0.1226, 0.1501,  ..., 0.1824, 0.1696, 0.0950],
         [0.4041, 0.1226, 0.1501,  ..., 0.1824, 0.4842, 0.7149],
         [0.2211, 0.2271, 0.2709,  ..., 0.3468, 0.1767, 0.0950]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4490, 0.4460, 0.5286,  ..., 0.4511, 0.0597, 0.1198],
         [0.1582, 0.1450, 0.1250,  ..., 0.1478, 0.0603, 0.1198],
         [0.1240, 0.1450, 0.1250,  ..., 0.1478, 0.8203, 0.6406],
         [0.2688, 0.2641, 0.2215,  ..., 0.2532, 0.0597, 0.1198]],
        [[0.1558, 0.3233, 0.3057,  ..., 0.3285, 0.5708, 0.1153],
         [0.1558, 0.1672, 0.1508,  ..., 0.1524, 0.1349, 0.1153],
         [0.5193, 0.1672, 0.1508,  ..., 0.1462, 0.0946, 0.6540],
         [0.1691, 0.3423, 0.3928,  ..., 0.3730, 0.1996, 0.1153]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2375, 0.2420, 0.2346,  ..., 0.2580, 0.2117, 0.2245],
         [0.1954, 0.1971, 0.1953,  ..., 0.1940, 0.1974, 0.1898],
         [0.2040, 0.1940, 0.1791,  ..., 0.1940, 0.2049, 0.2032],
         [0.3632, 0.3669, 0.3910,  ..., 0.3540, 0.3861, 0.3825]],
        [[0.3828, 0.5068, 0.5698,  ..., 0.2551, 0.0391, 0.0349],
         [0.1739, 0.1513, 0.1307,  ..., 0.2042, 0.0391, 0.0349],
         [0.1739, 0.1513, 0.1162,  ..., 0.2042, 0.8826, 0.8952],
         [0.2694, 0.1905, 0.1833,  ..., 0.3364, 0.0391, 0.0349]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4561, 0.4184, 0.4311,  ..., 0.4145, 0.0861, 0.0391],
         [0.1513, 0.1596, 0.1493,  ..., 0.1568, 0.0861, 0.0391],
         [0.1513, 0.1316, 0.1493,  ..., 0.1375, 0.7418, 0.8828],
         [0.2413, 0.2904, 0.2702,  ..., 0.2912, 0.0861, 0.0391]],
        [[0.1888, 0.3484, 0.3394,  ..., 0.3210, 0.6195, 0.1182],
         [0.1888, 0.1649, 0.1466,  ..., 0.1877, 0.1234, 0.1182],
         [0.3158, 0.1542, 0.1446,  ..., 0.1428, 0.1234, 0.6453],
         [0.3067, 0.3324, 0.3694,  ..., 0.3484, 0.1336, 0.1182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:12:25,350 [Process: 0] EPOCH 22:
2024-08-19 13:12:25,352 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:26,316 [Process: 0] Synchronize training processes
2024-08-19 13:12:26,316 [Process: 0] Evaluating...
2024-08-19 13:12:26,318 [Process: 0] EPOCH 23:
2024-08-19 13:12:26,320 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2612, 0.2592, 0.2708,  ..., 0.2778, 0.2042, 0.2437],
         [0.1675, 0.1873, 0.1768,  ..., 0.1805, 0.1954, 0.1752],
         [0.1592, 0.1873, 0.1768,  ..., 0.1717, 0.2437, 0.1685],
         [0.4122, 0.3662, 0.3756,  ..., 0.3700, 0.3567, 0.4126]],
        [[0.4201, 0.3306, 0.4695,  ..., 0.2048, 0.1090, 0.0651],
         [0.1693, 0.1876, 0.1562,  ..., 0.2048, 0.1090, 0.0651],
         [0.1646, 0.1876, 0.1550,  ..., 0.2519, 0.6730, 0.8046],
         [0.2460, 0.2941, 0.2192,  ..., 0.3385, 0.1090, 0.0651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4363, 0.4853, 0.4641,  ..., 0.5108, 0.1185, 0.1223],
         [0.1549, 0.1344, 0.1486,  ..., 0.1383, 0.1185, 0.1223],
         [0.1549, 0.1236, 0.1390,  ..., 0.1272, 0.6446, 0.6331],
         [0.2539, 0.2567, 0.2483,  ..., 0.2237, 0.1185, 0.1223]],
        [[0.2079, 0.3841, 0.4282,  ..., 0.3960, 0.4219, 0.1167],
         [0.1705, 0.1707, 0.1527,  ..., 0.1666, 0.1641, 0.1167],
         [0.1705, 0.1466, 0.1295,  ..., 0.1446, 0.1641, 0.6498],
         [0.4511, 0.2986, 0.2896,  ..., 0.2929, 0.2498, 0.1167]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3051, 0.2748, 0.2903,  ..., 0.2864, 0.2388, 0.2949],
         [0.1721, 0.1756, 0.1845,  ..., 0.1724, 0.1945, 0.1817],
         [0.1588, 0.1756, 0.1845,  ..., 0.1724, 0.1945, 0.1761],
         [0.3641, 0.3739, 0.3406,  ..., 0.3687, 0.3722, 0.3472]],
        [[0.4196, 0.4776, 0.5341,  ..., 0.2333, 0.0607, 0.0479],
         [0.1638, 0.1539, 0.1429,  ..., 0.1944, 0.0607, 0.0479],
         [0.1638, 0.1510, 0.1286,  ..., 0.1944, 0.8178, 0.8562],
         [0.2529, 0.2174, 0.1943,  ..., 0.3779, 0.0607, 0.0479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:12:27,279 [Process: 0] Synchronize training processes
2024-08-19 13:12:27,279 [Process: 0] Evaluating...
2024-08-19 13:12:27,281 [Process: 0] EPOCH 24:
2024-08-19 13:12:27,283 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:28,243 [Process: 0] Synchronize training processes
2024-08-19 13:12:28,244 [Process: 0] Evaluating...
2024-08-19 13:12:28,245 [Process: 0] EPOCH 25:
2024-08-19 13:12:28,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4115, 0.5358, 0.5278,  ..., 0.4260, 0.1108, 0.1114],
         [0.1514, 0.1261, 0.1287,  ..., 0.1734, 0.1108, 0.1114],
         [0.1514, 0.1261, 0.1287,  ..., 0.1734, 0.6675, 0.6658],
         [0.2857, 0.2120, 0.2148,  ..., 0.2271, 0.1108, 0.1114]],
        [[0.2368, 0.3571, 0.3746,  ..., 0.4179, 0.6672, 0.1294],
         [0.1432, 0.1548, 0.1733,  ..., 0.1339, 0.1060, 0.1294],
         [0.1351, 0.1548, 0.1395,  ..., 0.1146, 0.0962, 0.6117],
         [0.4848, 0.3333, 0.3127,  ..., 0.3335, 0.1306, 0.1294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2885, 0.3114, 0.2703,  ..., 0.2928, 0.2360, 0.3279],
         [0.1701, 0.1809, 0.1627,  ..., 0.1728, 0.1677, 0.1611],
         [0.1701, 0.1582, 0.1594,  ..., 0.1728, 0.1677, 0.1611],
         [0.3714, 0.3496, 0.4076,  ..., 0.3616, 0.4286, 0.3500]],
        [[0.3566, 0.3594, 0.4735,  ..., 0.2190, 0.0347, 0.0793],
         [0.1757, 0.1719, 0.1667,  ..., 0.1783, 0.0347, 0.0793],
         [0.1757, 0.1719, 0.1667,  ..., 0.1783, 0.8958, 0.7621],
         [0.2920, 0.2968, 0.1931,  ..., 0.4243, 0.0347, 0.0793]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2441, 0.4675, 0.4991,  ..., 0.5541, 0.0788, 0.0853],
         [0.1625, 0.1476, 0.1470,  ..., 0.1377, 0.0788, 0.0853],
         [0.1512, 0.1476, 0.1470,  ..., 0.1377, 0.7635, 0.7442],
         [0.4422, 0.2373, 0.2069,  ..., 0.1705, 0.0788, 0.0853]],
        [[0.1853, 0.5110, 0.4302,  ..., 0.5364, 0.1630, 0.0724],
         [0.1474, 0.1543, 0.1418,  ..., 0.1328, 0.1630, 0.0765],
         [0.1454, 0.1054, 0.1203,  ..., 0.1328, 0.1630, 0.7787],
         [0.5220, 0.2293, 0.3077,  ..., 0.1980, 0.5109, 0.0724]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1945, 0.2787, 0.3046,  ..., 0.2393, 0.1871, 0.2118],
         [0.1856, 0.1644, 0.1772,  ..., 0.1685, 0.1871, 0.1805],
         [0.2051, 0.1504, 0.1624,  ..., 0.1685, 0.1871, 0.1736],
         [0.4148, 0.4065, 0.3558,  ..., 0.4236, 0.4388, 0.4341]],
        [[0.3613, 0.2776, 0.5446,  ..., 0.2102, 0.0592, 0.0315],
         [0.1726, 0.1822, 0.1471,  ..., 0.1781, 0.0592, 0.0315],
         [0.1545, 0.1822, 0.1235,  ..., 0.1781, 0.8223, 0.9055],
         [0.3116, 0.3580, 0.1848,  ..., 0.4337, 0.0592, 0.0315]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3754, 0.5499, 0.2578,  ..., 0.5287, 0.1104, 0.1357],
         [0.1536, 0.1238, 0.1592,  ..., 0.1452, 0.1104, 0.1357],
         [0.1536, 0.1238, 0.1592,  ..., 0.1452, 0.6689, 0.5929],
         [0.3175, 0.2025, 0.4238,  ..., 0.1809, 0.1104, 0.1357]],
        [[0.1181, 0.4883, 0.4209,  ..., 0.6135, 0.7642, 0.1603],
         [0.1227, 0.1202, 0.1185,  ..., 0.1032, 0.0786, 0.1603],
         [0.1181, 0.1202, 0.1179,  ..., 0.1032, 0.0786, 0.2405],
         [0.6410, 0.2714, 0.3426,  ..., 0.1801, 0.0786, 0.4390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:12:29,204 [Process: 0] Synchronize training processes
2024-08-19 13:12:29,204 [Process: 0] Evaluating...
2024-08-19 13:12:29,206 [Process: 0] EPOCH 26:
2024-08-19 13:12:29,208 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:30,170 [Process: 0] Synchronize training processes
2024-08-19 13:12:30,171 [Process: 0] Evaluating...
2024-08-19 13:12:30,172 [Process: 0] EPOCH 27:
2024-08-19 13:12:30,174 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1707, 0.3014, 0.2686,  ..., 0.2211, 0.1794, 0.1796],
         [0.1707, 0.1423, 0.1553,  ..., 0.1615, 0.1794, 0.1796],
         [0.1707, 0.1423, 0.1553,  ..., 0.1615, 0.1921, 0.1796],
         [0.4879, 0.4141, 0.4207,  ..., 0.4560, 0.4491, 0.4613]],
        [[0.1880, 0.1977, 0.5470,  ..., 0.1855, 0.0528, 0.0835],
         [0.1739, 0.1648, 0.1478,  ..., 0.1855, 0.0528, 0.0835],
         [0.1739, 0.1648, 0.1478,  ..., 0.2565, 0.8415, 0.7495],
         [0.4642, 0.4728, 0.1574,  ..., 0.3725, 0.0528, 0.0835]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4714, 0.4234, 0.5447,  ..., 0.6022, 0.1068, 0.1262],
         [0.1443, 0.1391, 0.1130,  ..., 0.1326, 0.1125, 0.1262],
         [0.1443, 0.1391, 0.1130,  ..., 0.1326, 0.6739, 0.6215],
         [0.2400, 0.2984, 0.2292,  ..., 0.1326, 0.1068, 0.1262]],
        [[0.1701, 0.4141, 0.5756,  ..., 0.5134, 0.4215, 0.1454],
         [0.1710, 0.1304, 0.1321,  ..., 0.1399, 0.1348, 0.1454],
         [0.3062, 0.1304, 0.1321,  ..., 0.1132, 0.1175, 0.5472],
         [0.3527, 0.3251, 0.1602,  ..., 0.2334, 0.3262, 0.1621]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2630, 0.2953, 0.2725,  ..., 0.2904, 0.2064, 0.2045],
         [0.1751, 0.1766, 0.1578,  ..., 0.1921, 0.1728, 0.1855],
         [0.1751, 0.1738, 0.1518,  ..., 0.1921, 0.1636, 0.1968],
         [0.3868, 0.3543, 0.4179,  ..., 0.3255, 0.4572, 0.4131]],
        [[0.2186, 0.2255, 0.2065,  ..., 0.1913, 0.0510, 0.1368],
         [0.1903, 0.1874, 0.1944,  ..., 0.1913, 0.0510, 0.1368],
         [0.1903, 0.1874, 0.2072,  ..., 0.2305, 0.8469, 0.5897],
         [0.4008, 0.3996, 0.3920,  ..., 0.3869, 0.0510, 0.1368]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4422, 0.4964, 0.4664,  ..., 0.7208, 0.1458, 0.1116],
         [0.1334, 0.1431, 0.1514,  ..., 0.0885, 0.1458, 0.1116],
         [0.1287, 0.1255, 0.1312,  ..., 0.0827, 0.5227, 0.6588],
         [0.2957, 0.2349, 0.2510,  ..., 0.1081, 0.1856, 0.1179]],
        [[0.1465, 0.4034, 0.4739,  ..., 0.4987, 0.1626, 0.1203],
         [0.1465, 0.1388, 0.1399,  ..., 0.1333, 0.1626, 0.1203],
         [0.5092, 0.1388, 0.1399,  ..., 0.1216, 0.2093, 0.6053],
         [0.1977, 0.3189, 0.2464,  ..., 0.2464, 0.4655, 0.1540]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:31,133 [Process: 0] Synchronize training processes
2024-08-19 13:12:31,133 [Process: 0] Evaluating...
2024-08-19 13:12:31,135 [Process: 0] EPOCH 28:
2024-08-19 13:12:31,137 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:32,098 [Process: 0] Synchronize training processes
2024-08-19 13:12:32,098 [Process: 0] Evaluating...
2024-08-19 13:12:32,100 [Process: 0] EPOCH 29:
2024-08-19 13:12:32,101 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2227, 0.2217, 0.2309,  ..., 0.2524, 0.1854, 0.2082],
         [0.1821, 0.1815, 0.1732,  ..., 0.1790, 0.1854, 0.1812],
         [0.1821, 0.1689, 0.1732,  ..., 0.1702, 0.1930, 0.1812],
         [0.4131, 0.4279, 0.4226,  ..., 0.3984, 0.4363, 0.4294]],
        [[0.2737, 0.1900, 0.3484,  ..., 0.1915, 0.0454, 0.1919],
         [0.1782, 0.1900, 0.1858,  ..., 0.1915, 0.0454, 0.1919],
         [0.1782, 0.1957, 0.1858,  ..., 0.1967, 0.8639, 0.2076],
         [0.3699, 0.4242, 0.2801,  ..., 0.4203, 0.0454, 0.4086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4552, 0.5123, 0.5029,  ..., 0.7680, 0.1253, 0.0907],
         [0.1578, 0.1436, 0.1366,  ..., 0.0821, 0.1257, 0.0907],
         [0.1578, 0.1436, 0.1311,  ..., 0.0750, 0.6029, 0.7278],
         [0.2291, 0.2006, 0.2295,  ..., 0.0750, 0.1461, 0.0907]],
        [[0.1475, 0.6103, 0.6151,  ..., 0.5530, 0.1939, 0.0736],
         [0.1488, 0.1051, 0.1075,  ..., 0.1337, 0.1449, 0.0736],
         [0.4214, 0.1011, 0.1075,  ..., 0.1058, 0.1449, 0.7792],
         [0.2823, 0.1835, 0.1700,  ..., 0.2076, 0.5162, 0.0736]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2887, 0.1911, 0.2230,  ..., 0.2955, 0.1848, 0.2801],
         [0.1675, 0.1911, 0.1714,  ..., 0.1818, 0.1848, 0.1655],
         [0.1675, 0.2121, 0.1671,  ..., 0.1695, 0.1966, 0.1624],
         [0.3763, 0.4057, 0.4385,  ..., 0.3532, 0.4339, 0.3920]],
        [[0.1836, 0.1860, 0.1857,  ..., 0.1841, 0.0466, 0.1009],
         [0.1836, 0.1860, 0.1857,  ..., 0.1841, 0.0466, 0.1009],
         [0.1836, 0.2421, 0.1857,  ..., 0.2754, 0.8601, 0.6972],
         [0.4491, 0.3860, 0.4430,  ..., 0.3563, 0.0466, 0.1009]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3329, 0.5559, 0.4138,  ..., 0.8042, 0.1199, 0.1058],
         [0.1596, 0.1333, 0.1476,  ..., 0.0653, 0.1199, 0.1058],
         [0.1521, 0.1333, 0.1476,  ..., 0.0653, 0.6336, 0.6803],
         [0.3554, 0.1774, 0.2910,  ..., 0.0653, 0.1267, 0.1081]],
        [[0.1532, 0.6077, 0.5834,  ..., 0.5459, 0.7817, 0.1152],
         [0.1532, 0.1228, 0.1287,  ..., 0.1439, 0.0728, 0.1152],
         [0.1904, 0.1047, 0.1123,  ..., 0.1183, 0.0728, 0.6543],
         [0.5031, 0.1649, 0.1756,  ..., 0.1919, 0.0728, 0.1152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:33,062 [Process: 0] Synchronize training processes
2024-08-19 13:12:33,062 [Process: 0] Evaluating...
2024-08-19 13:12:33,064 [Process: 0] EPOCH 30:
2024-08-19 13:12:33,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:34,028 [Process: 0] Synchronize training processes
2024-08-19 13:12:34,028 [Process: 0] Evaluating...
2024-08-19 13:12:34,030 [Process: 0] EPOCH 31:
2024-08-19 13:12:34,032 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:34,998 [Process: 0] Synchronize training processes
2024-08-19 13:12:34,998 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2932, 0.1835, 0.2518,  ..., 0.2689, 0.1710, 0.2659],
         [0.1663, 0.1835, 0.1753,  ..., 0.1708, 0.1823, 0.1755],
         [0.1574, 0.2568, 0.1611,  ..., 0.1708, 0.2330, 0.1755],
         [0.3831, 0.3762, 0.4117,  ..., 0.3896, 0.4137, 0.3831]],
        [[0.1735, 0.1735, 0.2133,  ..., 0.1832, 0.0374, 0.1628],
         [0.1735, 0.1735, 0.1861,  ..., 0.1832, 0.0374, 0.1628],
         [0.1943, 0.2983, 0.1766,  ..., 0.2110, 0.8878, 0.4547],
         [0.4587, 0.3547, 0.4239,  ..., 0.4226, 0.0374, 0.2198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4809, 0.3322, 0.2603,  ..., 0.6343, 0.0906, 0.0850],
         [0.1573, 0.1447, 0.1751,  ..., 0.1219, 0.0906, 0.0850],
         [0.1573, 0.1447, 0.1751,  ..., 0.1219, 0.7282, 0.7451],
         [0.2045, 0.3784, 0.3895,  ..., 0.1219, 0.0906, 0.0850]],
        [[0.1354, 0.5839, 0.4606,  ..., 0.7137, 0.1298, 0.0947],
         [0.1384, 0.1387, 0.1662,  ..., 0.0974, 0.1298, 0.0947],
         [0.1569, 0.1387, 0.1662,  ..., 0.0944, 0.1351, 0.7159],
         [0.5692, 0.1387, 0.2070,  ..., 0.0944, 0.6052, 0.0947]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2979, 0.1689, 0.1984,  ..., 0.3686, 0.1284, 0.3939],
         [0.1559, 0.1400, 0.1569,  ..., 0.1659, 0.1323, 0.1491],
         [0.1559, 0.1260, 0.1569,  ..., 0.1659, 0.5614, 0.1444],
         [0.3902, 0.5651, 0.4878,  ..., 0.2995, 0.1779, 0.3126]],
        [[0.1481, 0.1671, 0.1627,  ..., 0.1638, 0.0767, 0.1611],
         [0.1481, 0.1671, 0.1627,  ..., 0.1638, 0.0767, 0.1611],
         [0.1481, 0.2594, 0.1627,  ..., 0.2014, 0.7699, 0.1611],
         [0.5557, 0.4063, 0.5119,  ..., 0.4709, 0.0767, 0.5166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3247, 0.2120, 0.3835,  ..., 0.7384, 0.1027, 0.1088],
         [0.1555, 0.1434, 0.1677,  ..., 0.0872, 0.1027, 0.1088],
         [0.1555, 0.1434, 0.1466,  ..., 0.0872, 0.6918, 0.6737],
         [0.3643, 0.5012, 0.3023,  ..., 0.0872, 0.1027, 0.1088]],
        [[0.1225, 0.7253, 0.5638,  ..., 0.5903, 0.1767, 0.0986],
         [0.1225, 0.0909, 0.1323,  ..., 0.1366, 0.1278, 0.0986],
         [0.2165, 0.0909, 0.1066,  ..., 0.1366, 0.1261, 0.7042],
         [0.5386, 0.0929, 0.1973,  ..., 0.1366, 0.5694, 0.0986]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:12:35,418 [Process: 0] EPOCH 32:
2024-08-19 13:12:35,421 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:36,382 [Process: 0] Synchronize training processes
2024-08-19 13:12:36,382 [Process: 0] Evaluating...
2024-08-19 13:12:36,384 [Process: 0] EPOCH 33:
2024-08-19 13:12:36,386 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1776, 0.1695, 0.1784,  ..., 0.2268, 0.1634, 0.1361],
         [0.1776, 0.1695, 0.1594,  ..., 0.1630, 0.1634, 0.1361],
         [0.1776, 0.2156, 0.1594,  ..., 0.1630, 0.1953, 0.1361],
         [0.4671, 0.4455, 0.5027,  ..., 0.4473, 0.4778, 0.5917]],
        [[0.5046, 0.1764, 0.1559,  ..., 0.1801, 0.1131, 0.1663],
         [0.1534, 0.1764, 0.1559,  ..., 0.1801, 0.1131, 0.1663],
         [0.1534, 0.1764, 0.1559,  ..., 0.1801, 0.6608, 0.3270],
         [0.1886, 0.4707, 0.5324,  ..., 0.4596, 0.1131, 0.3404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2660, 0.4931, 0.6415,  ..., 0.6194, 0.0843, 0.0576],
         [0.1567, 0.1423, 0.1255,  ..., 0.1269, 0.0843, 0.0576],
         [0.1518, 0.1423, 0.1156,  ..., 0.1269, 0.7472, 0.8272],
         [0.4254, 0.2223, 0.1174,  ..., 0.1269, 0.0843, 0.0576]],
        [[0.1620, 0.6582, 0.6426,  ..., 0.6700, 0.0761, 0.0721],
         [0.1620, 0.1405, 0.1186,  ..., 0.1018, 0.0761, 0.0721],
         [0.3054, 0.0943, 0.1186,  ..., 0.1018, 0.0761, 0.7838],
         [0.3707, 0.1071, 0.1201,  ..., 0.1264, 0.7718, 0.0721]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2280, 0.1825, 0.3589,  ..., 0.4111, 0.1343, 0.1558],
         [0.1628, 0.1623, 0.1813,  ..., 0.1584, 0.1343, 0.1553],
         [0.1628, 0.1623, 0.1524,  ..., 0.1516, 0.1343, 0.1553],
         [0.4465, 0.4929, 0.3074,  ..., 0.2790, 0.5970, 0.5336]],
        [[0.1145, 0.1565, 0.2367,  ..., 0.1754, 0.1599, 0.1343],
         [0.1145, 0.1565, 0.1862,  ..., 0.1754, 0.1599, 0.1343],
         [0.6565, 0.2333, 0.1862,  ..., 0.2257, 0.2795, 0.5971],
         [0.1145, 0.4537, 0.3909,  ..., 0.4236, 0.4007, 0.1343]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:12:37,344 [Process: 0] Synchronize training processes
2024-08-19 13:12:37,344 [Process: 0] Evaluating...
2024-08-19 13:12:37,346 [Process: 0] EPOCH 34:
2024-08-19 13:12:37,348 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:38,308 [Process: 0] Synchronize training processes
2024-08-19 13:12:38,309 [Process: 0] Evaluating...
2024-08-19 13:12:38,310 [Process: 0] EPOCH 35:
2024-08-19 13:12:38,312 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2519, 0.4011, 0.1314,  ..., 0.6910, 0.0703, 0.0497],
         [0.1768, 0.1650, 0.1290,  ..., 0.1030, 0.0703, 0.0497],
         [0.1768, 0.1392, 0.1290,  ..., 0.1030, 0.7891, 0.8508],
         [0.3945, 0.2947, 0.6106,  ..., 0.1030, 0.0703, 0.0497]],
        [[0.1197, 0.6632, 0.7509,  ..., 0.8951, 0.0764, 0.0682],
         [0.1197, 0.1350, 0.0830,  ..., 0.0350, 0.0858, 0.0682],
         [0.1498, 0.0962, 0.0830,  ..., 0.0350, 0.0764, 0.7955],
         [0.6108, 0.1057, 0.0830,  ..., 0.0350, 0.7614, 0.0682]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3866, 0.1587, 0.2414,  ..., 0.6091, 0.1467, 0.1533],
         [0.1459, 0.1587, 0.1461,  ..., 0.1172, 0.1467, 0.1457],
         [0.1459, 0.2582, 0.1461,  ..., 0.1172, 0.1467, 0.1434],
         [0.3217, 0.4243, 0.4664,  ..., 0.1565, 0.5599, 0.5577]],
        [[0.1380, 0.1534, 0.6899,  ..., 0.1682, 0.1877, 0.0820],
         [0.1380, 0.1534, 0.1148,  ..., 0.1682, 0.1750, 0.0820],
         [0.5860, 0.1534, 0.0952,  ..., 0.3611, 0.1750, 0.7539],
         [0.1380, 0.5398, 0.1001,  ..., 0.3026, 0.4623, 0.0820]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2381, 0.4761, 0.4160,  ..., 0.8361, 0.0805, 0.1034],
         [0.1664, 0.1207, 0.1558,  ..., 0.0712, 0.0805, 0.1034],
         [0.1664, 0.1172, 0.1069,  ..., 0.0464, 0.7585, 0.6898],
         [0.4291, 0.2860, 0.3212,  ..., 0.0464, 0.0805, 0.1034]],
        [[0.0716, 0.3375, 0.5535,  ..., 0.3061, 0.1441, 0.0919],
         [0.0716, 0.1518, 0.1370,  ..., 0.1377, 0.1441, 0.0919],
         [0.0716, 0.1297, 0.0947,  ..., 0.1377, 0.2576, 0.7244],
         [0.7851, 0.3810, 0.2148,  ..., 0.4185, 0.4542, 0.0919]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2782, 0.1607, 0.1790,  ..., 0.1585, 0.2009, 0.1741],
         [0.1704, 0.1607, 0.1790,  ..., 0.1467, 0.1736, 0.1593],
         [0.1586, 0.1607, 0.2884,  ..., 0.1467, 0.1732, 0.1532],
         [0.3928, 0.5180, 0.3537,  ..., 0.5481, 0.4523, 0.5134]],
        [[0.3710, 0.1716, 0.2514,  ..., 0.1682, 0.1722, 0.0379],
         [0.1660, 0.1716, 0.1795,  ..., 0.1682, 0.1722, 0.0379],
         [0.1660, 0.1716, 0.1795,  ..., 0.1682, 0.1722, 0.8863],
         [0.2970, 0.4851, 0.3897,  ..., 0.4954, 0.4835, 0.0379]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1919, 0.1325, 0.6804,  ..., 0.1314, 0.0592, 0.2079],
         [0.1667, 0.1325, 0.0981,  ..., 0.1143, 0.0592, 0.1857],
         [0.1667, 0.1325, 0.0892,  ..., 0.1143, 0.8224, 0.4207],
         [0.4748, 0.6025, 0.1323,  ..., 0.6400, 0.0592, 0.1857]],
        [[0.1056, 0.3404, 0.8077,  ..., 0.6341, 0.1599, 0.0900],
         [0.1056, 0.1373, 0.0641,  ..., 0.1267, 0.1428, 0.0900],
         [0.1056, 0.1171, 0.0641,  ..., 0.0846, 0.1428, 0.7300],
         [0.6833, 0.4051, 0.0641,  ..., 0.1545, 0.5545, 0.0900]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:12:39,272 [Process: 0] Synchronize training processes
2024-08-19 13:12:39,273 [Process: 0] Evaluating...
2024-08-19 13:12:39,274 [Process: 0] EPOCH 36:
2024-08-19 13:12:39,276 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:40,236 [Process: 0] Synchronize training processes
2024-08-19 13:12:40,236 [Process: 0] Evaluating...
2024-08-19 13:12:40,238 [Process: 0] EPOCH 37:
2024-08-19 13:12:40,240 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3577, 0.5982, 0.7634,  ..., 0.7732, 0.6622, 0.1810],
         [0.1670, 0.1073, 0.0814,  ..., 0.0699, 0.0943, 0.1810],
         [0.1427, 0.1020, 0.0739,  ..., 0.0618, 0.0941, 0.2550],
         [0.3326, 0.1924, 0.0813,  ..., 0.0951, 0.1494, 0.3829]],
        [[0.0265, 0.1753, 0.1690,  ..., 0.1639, 0.1754, 0.0173],
         [0.0265, 0.1753, 0.1690,  ..., 0.1639, 0.1754, 0.0173],
         [0.9206, 0.1753, 0.4314,  ..., 0.4381, 0.2190, 0.9480],
         [0.0265, 0.4741, 0.2307,  ..., 0.2340, 0.4302, 0.0173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2800, 0.3628, 0.5844,  ..., 0.9102, 0.1894, 0.3963],
         [0.1671, 0.1523, 0.1090,  ..., 0.0370, 0.1366, 0.1790],
         [0.1578, 0.1523, 0.1085,  ..., 0.0215, 0.5374, 0.2179],
         [0.3951, 0.3326, 0.1981,  ..., 0.0313, 0.1366, 0.2068]],
        [[0.1555, 0.1590, 0.4751,  ..., 0.1586, 0.1375, 0.1651],
         [0.1555, 0.1590, 0.1435,  ..., 0.1488, 0.1375, 0.1651],
         [0.1555, 0.1590, 0.0891,  ..., 0.1415, 0.1375, 0.4366],
         [0.5336, 0.5229, 0.2923,  ..., 0.5511, 0.5874, 0.2332]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1843, 0.1809, 0.2117,  ..., 0.2114, 0.1570, 0.2212],
         [0.1843, 0.1809, 0.1812,  ..., 0.1671, 0.1570, 0.1795],
         [0.1873, 0.3486, 0.1812,  ..., 0.1580, 0.4992, 0.1795],
         [0.4441, 0.2895, 0.4259,  ..., 0.4636, 0.1869, 0.4198]],
        [[0.0315, 0.3150, 0.1814,  ..., 0.2353, 0.2770, 0.0522],
         [0.0315, 0.1795, 0.1786,  ..., 0.1743, 0.1654, 0.0522],
         [0.9056, 0.1795, 0.1786,  ..., 0.1743, 0.1642, 0.8434],
         [0.0315, 0.3260, 0.4613,  ..., 0.4161, 0.3934, 0.0522]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3494, 0.5164, 0.4254,  ..., 0.6711, 0.0533, 0.1729],
         [0.1398, 0.1287, 0.1434,  ..., 0.1232, 0.0533, 0.1729],
         [0.1375, 0.0932, 0.1434,  ..., 0.0668, 0.8400, 0.1729],
         [0.3733, 0.2618, 0.2879,  ..., 0.1389, 0.0533, 0.4812]],
        [[0.1594, 0.2264, 0.4710,  ..., 0.3309, 0.2674, 0.1546],
         [0.1574, 0.1526, 0.1472,  ..., 0.1392, 0.1397, 0.1546],
         [0.1574, 0.1526, 0.0946,  ..., 0.1198, 0.1358, 0.5363],
         [0.5257, 0.4684, 0.2872,  ..., 0.4101, 0.4571, 0.1546]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:41,198 [Process: 0] Synchronize training processes
2024-08-19 13:12:41,198 [Process: 0] Evaluating...
2024-08-19 13:12:41,200 [Process: 0] EPOCH 38:
2024-08-19 13:12:41,202 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:42,187 [Process: 0] Synchronize training processes
2024-08-19 13:12:42,187 [Process: 0] Evaluating...
2024-08-19 13:12:42,189 [Process: 0] EPOCH 39:
2024-08-19 13:12:42,191 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1802, 0.2567, 0.2241,  ..., 0.2838, 0.1157, 0.3319],
         [0.1802, 0.1663, 0.1826,  ..., 0.1830, 0.1157, 0.1480],
         [0.4001, 0.1663, 0.1826,  ..., 0.1830, 0.6530, 0.1480],
         [0.2396, 0.4108, 0.4108,  ..., 0.3501, 0.1157, 0.3722]],
        [[0.1687, 0.2435, 0.2586,  ..., 0.3277, 0.2544, 0.0723],
         [0.1687, 0.1827, 0.1804,  ..., 0.1628, 0.1800, 0.0723],
         [0.4719, 0.1827, 0.1804,  ..., 0.1528, 0.1800, 0.7831],
         [0.1906, 0.3910, 0.3806,  ..., 0.3567, 0.3855, 0.0723]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3528, 0.3817, 0.4420,  ..., 0.6755, 0.0808, 0.1901],
         [0.1545, 0.1432, 0.1377,  ..., 0.0943, 0.0808, 0.1901],
         [0.1508, 0.1077, 0.1053,  ..., 0.0610, 0.7576, 0.3080],
         [0.3419, 0.3675, 0.3150,  ..., 0.1692, 0.0808, 0.3118]],
        [[0.1880, 0.1794, 0.4949,  ..., 0.5961, 0.2688, 0.1132],
         [0.1497, 0.1794, 0.1167,  ..., 0.1143, 0.1336, 0.1132],
         [0.1497, 0.1794, 0.1167,  ..., 0.0754, 0.1284, 0.6604],
         [0.5125, 0.4618, 0.2718,  ..., 0.2142, 0.4692, 0.1132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1894, 0.2590, 0.2558,  ..., 0.3586, 0.1918, 0.3581],
         [0.1894, 0.1670, 0.1741,  ..., 0.1516, 0.1918, 0.1608],
         [0.2679, 0.1670, 0.1741,  ..., 0.1414, 0.2832, 0.1553],
         [0.3534, 0.4070, 0.3960,  ..., 0.3484, 0.3332, 0.3258]],
        [[0.1823, 0.1941, 0.2086,  ..., 0.5351, 0.1957, 0.0962],
         [0.1823, 0.1941, 0.1931,  ..., 0.1441, 0.1957, 0.0962],
         [0.3882, 0.2097, 0.2266,  ..., 0.1132, 0.2160, 0.7114],
         [0.2472, 0.4021, 0.3718,  ..., 0.2077, 0.3927, 0.0962]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3243, 0.4940, 0.5821,  ..., 0.6705, 0.0393, 0.0957],
         [0.1447, 0.1382, 0.1382,  ..., 0.1256, 0.0393, 0.0957],
         [0.1400, 0.1162, 0.0664,  ..., 0.0616, 0.8821, 0.7128],
         [0.3910, 0.2517, 0.2133,  ..., 0.1423, 0.0393, 0.0957]],
        [[0.1638, 0.2133, 0.6622,  ..., 0.6021, 0.2736, 0.1274],
         [0.1638, 0.1677, 0.1167,  ..., 0.1114, 0.1491, 0.1274],
         [0.1638, 0.1677, 0.0651,  ..., 0.0800, 0.1491, 0.6178],
         [0.5086, 0.4513, 0.1560,  ..., 0.2065, 0.4281, 0.1274]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:43,150 [Process: 0] Synchronize training processes
2024-08-19 13:12:43,150 [Process: 0] Evaluating...
2024-08-19 13:12:43,152 [Process: 0] EPOCH 40:
2024-08-19 13:12:43,154 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:44,113 [Process: 0] Synchronize training processes
2024-08-19 13:12:44,113 [Process: 0] Evaluating...
2024-08-19 13:12:44,115 [Process: 0] EPOCH 41:
2024-08-19 13:12:44,117 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3058, 0.1232, 0.2468,  ..., 0.4386, 0.3175, 0.3083],
         [0.1658, 0.1232, 0.1876,  ..., 0.1506, 0.1587, 0.1513],
         [0.1658, 0.6303, 0.2137,  ..., 0.1256, 0.1587, 0.1399],
         [0.3627, 0.1232, 0.3519,  ..., 0.2852, 0.3650, 0.4005]],
        [[0.1245, 0.1885, 0.1892,  ..., 0.3826, 0.1894, 0.1490],
         [0.1245, 0.1885, 0.1892,  ..., 0.1550, 0.1894, 0.1490],
         [0.6265, 0.3052, 0.1968,  ..., 0.1550, 0.2358, 0.5530],
         [0.1245, 0.3179, 0.4248,  ..., 0.3075, 0.3855, 0.1490]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2399, 0.2767, 0.7470,  ..., 0.6450, 0.2343, 0.2335],
         [0.1416, 0.1410, 0.1134,  ..., 0.1346, 0.1641, 0.1737],
         [0.1416, 0.1336, 0.0499,  ..., 0.0576, 0.4375, 0.1913],
         [0.4769, 0.4488, 0.0897,  ..., 0.1628, 0.1641, 0.4014]],
        [[0.1412, 0.2369, 0.5441,  ..., 0.7090, 0.1565, 0.1062],
         [0.1412, 0.1627, 0.1594,  ..., 0.1060, 0.1550, 0.1062],
         [0.5765, 0.1627, 0.0908,  ..., 0.0540, 0.1550, 0.6814],
         [0.1412, 0.4376, 0.2057,  ..., 0.1310, 0.5335, 0.1062]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1821, 0.3129, 0.2444,  ..., 0.3309, 0.1912, 0.2917],
         [0.1821, 0.1680, 0.1676,  ..., 0.1570, 0.1912, 0.1715],
         [0.3477, 0.1596, 0.1676,  ..., 0.1570, 0.2470, 0.1485],
         [0.2882, 0.3595, 0.4205,  ..., 0.3551, 0.3706, 0.3882]],
        [[0.0749, 0.1872, 0.1874,  ..., 0.1872, 0.0975, 0.1221],
         [0.0749, 0.1872, 0.1874,  ..., 0.1872, 0.0975, 0.1221],
         [0.7754, 0.1890, 0.1874,  ..., 0.1966, 0.7075, 0.6337],
         [0.0749, 0.4366, 0.4377,  ..., 0.4290, 0.0975, 0.1221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1691, 0.1713, 0.4195,  ..., 0.6776, 0.5236, 0.1117],
         [0.1691, 0.1403, 0.1325,  ..., 0.1133, 0.1423, 0.1117],
         [0.1935, 0.1403, 0.0982,  ..., 0.0707, 0.1918, 0.6650],
         [0.4683, 0.5481, 0.3498,  ..., 0.1385, 0.1423, 0.1117]],
        [[0.1443, 0.1580, 0.7410,  ..., 0.3792, 0.1371, 0.0930],
         [0.1443, 0.1580, 0.1070,  ..., 0.1779, 0.1371, 0.0930],
         [0.1443, 0.1580, 0.0441,  ..., 0.1068, 0.1371, 0.7211],
         [0.5671, 0.5261, 0.1080,  ..., 0.3361, 0.5887, 0.0930]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:12:45,075 [Process: 0] Synchronize training processes
2024-08-19 13:12:45,076 [Process: 0] Evaluating...
2024-08-19 13:12:45,494 [Process: 0] EPOCH 42:
2024-08-19 13:12:45,496 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:46,457 [Process: 0] Synchronize training processes
2024-08-19 13:12:46,458 [Process: 0] Evaluating...
2024-08-19 13:12:46,460 [Process: 0] EPOCH 43:
2024-08-19 13:12:46,461 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1887, 0.2527, 0.2300,  ..., 0.3356, 0.2297, 0.2425],
         [0.1887, 0.1847, 0.1836,  ..., 0.1549, 0.1806, 0.1802],
         [0.2247, 0.1847, 0.1836,  ..., 0.1488, 0.1806, 0.1802],
         [0.3978, 0.3779, 0.4029,  ..., 0.3607, 0.4090, 0.3971]],
        [[0.0244, 0.1881, 0.1785,  ..., 0.1937, 0.0945, 0.0941],
         [0.0244, 0.1881, 0.1785,  ..., 0.1765, 0.0945, 0.0941],
         [0.9267, 0.2047, 0.2106,  ..., 0.1765, 0.7165, 0.7176],
         [0.0244, 0.4191, 0.4325,  ..., 0.4532, 0.0945, 0.0941]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1222, 0.1494, 0.6453,  ..., 0.7873, 0.0904, 0.0999],
         [0.1222, 0.1462, 0.1127,  ..., 0.0945, 0.0904, 0.0999],
         [0.6333, 0.1462, 0.1002,  ..., 0.0556, 0.7288, 0.7004],
         [0.1222, 0.5583, 0.1417,  ..., 0.0625, 0.0904, 0.0999]],
        [[0.1115, 0.1994, 0.4729,  ..., 0.6702, 0.1769, 0.0624],
         [0.1115, 0.1475, 0.1604,  ..., 0.1243, 0.1586, 0.0624],
         [0.6654, 0.1475, 0.1254,  ..., 0.0653, 0.1586, 0.8127],
         [0.1115, 0.5057, 0.2412,  ..., 0.1401, 0.5059, 0.0624]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1802, 0.2050, 0.1630,  ..., 0.2413, 0.1913, 0.2229],
         [0.1802, 0.1758, 0.1627,  ..., 0.1569, 0.1811, 0.1780],
         [0.2115, 0.1758, 0.1627,  ..., 0.1569, 0.1811, 0.1780],
         [0.4281, 0.4434, 0.5115,  ..., 0.4449, 0.4466, 0.4211]],
        [[0.0485, 0.1737, 0.1677,  ..., 0.1819, 0.0494, 0.0821],
         [0.0485, 0.1736, 0.1677,  ..., 0.1819, 0.0494, 0.0821],
         [0.8545, 0.1736, 0.1677,  ..., 0.2006, 0.8519, 0.7538],
         [0.0485, 0.4791, 0.4970,  ..., 0.4356, 0.0494, 0.0821]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:12:47,421 [Process: 0] Synchronize training processes
2024-08-19 13:12:47,422 [Process: 0] Evaluating...
2024-08-19 13:12:47,423 [Process: 0] EPOCH 44:
2024-08-19 13:12:47,425 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:48,387 [Process: 0] Synchronize training processes
2024-08-19 13:12:48,387 [Process: 0] Evaluating...
2024-08-19 13:12:48,389 [Process: 0] EPOCH 45:
2024-08-19 13:12:48,391 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1194, 0.1933, 0.4993,  ..., 0.7990, 0.0863, 0.0683],
         [0.1194, 0.1511, 0.1666,  ..., 0.0913, 0.0863, 0.0683],
         [0.6417, 0.1511, 0.1340,  ..., 0.0517, 0.7412, 0.7952],
         [0.1194, 0.5045, 0.2001,  ..., 0.0580, 0.0863, 0.0683]],
        [[0.1544, 0.2504, 0.6801,  ..., 0.5455, 0.1283, 0.0750],
         [0.1544, 0.1496, 0.1210,  ..., 0.1375, 0.1324, 0.0750],
         [0.2792, 0.1309, 0.0615,  ..., 0.0836, 0.1283, 0.7751],
         [0.4121, 0.4691, 0.1374,  ..., 0.2333, 0.6110, 0.0750]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1791, 0.2312, 0.1651,  ..., 0.2296, 0.1763, 0.2348],
         [0.1791, 0.1715, 0.1627,  ..., 0.1837, 0.1763, 0.1753],
         [0.2108, 0.1707, 0.1627,  ..., 0.1664, 0.1763, 0.1568],
         [0.4309, 0.4266, 0.5095,  ..., 0.4203, 0.4712, 0.4331]],
        [[0.0455, 0.1591, 0.1571,  ..., 0.1657, 0.0447, 0.0220],
         [0.0455, 0.1591, 0.1571,  ..., 0.1588, 0.0447, 0.0220],
         [0.8635, 0.1591, 0.1571,  ..., 0.1588, 0.8660, 0.9340],
         [0.0455, 0.5228, 0.5288,  ..., 0.5167, 0.0447, 0.0220]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0791, 0.1499, 0.7582,  ..., 0.8098, 0.1167, 0.0454],
         [0.0791, 0.1429, 0.0969,  ..., 0.0780, 0.1167, 0.0454],
         [0.7628, 0.1116, 0.0586,  ..., 0.0537, 0.6499, 0.8637],
         [0.0791, 0.5957, 0.0863,  ..., 0.0586, 0.1167, 0.0454]],
        [[0.1373, 0.1073, 0.7902,  ..., 0.6250, 0.1096, 0.0543],
         [0.1373, 0.1126, 0.0988,  ..., 0.1518, 0.1181, 0.0543],
         [0.5769, 0.1047, 0.0474,  ..., 0.0743, 0.1096, 0.8372],
         [0.1485, 0.6754, 0.0636,  ..., 0.1489, 0.6626, 0.0543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2343, 0.1695, 0.2171,  ..., 0.3804, 0.2756, 0.2924],
         [0.1815, 0.1728, 0.1789,  ..., 0.1691, 0.1805, 0.1821],
         [0.1815, 0.1614, 0.1721,  ..., 0.1471, 0.1564, 0.1588],
         [0.4026, 0.4964, 0.4319,  ..., 0.3034, 0.3875, 0.3667]],
        [[0.0347, 0.1636, 0.1604,  ..., 0.1463, 0.0800, 0.0643],
         [0.0347, 0.1636, 0.1604,  ..., 0.1557, 0.0800, 0.0643],
         [0.8959, 0.1636, 0.1604,  ..., 0.1463, 0.7600, 0.8072],
         [0.0347, 0.5092, 0.5188,  ..., 0.5517, 0.0800, 0.0643]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0580, 0.3088, 0.6794,  ..., 0.9037, 0.1172, 0.0657],
         [0.0580, 0.1716, 0.0942,  ..., 0.0399, 0.1172, 0.0657],
         [0.8260, 0.1566, 0.0942,  ..., 0.0282, 0.6484, 0.8029],
         [0.0580, 0.3630, 0.1322,  ..., 0.0282, 0.1172, 0.0657]],
        [[0.0577, 0.0875, 0.7917,  ..., 0.3818, 0.0850, 0.0337],
         [0.0577, 0.1009, 0.0836,  ..., 0.1660, 0.0860, 0.0337],
         [0.8268, 0.0875, 0.0581,  ..., 0.1118, 0.0850, 0.8989],
         [0.0577, 0.7242, 0.0666,  ..., 0.3404, 0.7441, 0.0337]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:12:49,348 [Process: 0] Synchronize training processes
2024-08-19 13:12:49,349 [Process: 0] Evaluating...
2024-08-19 13:12:49,351 [Process: 0] EPOCH 46:
2024-08-19 13:12:49,352 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:50,311 [Process: 0] Synchronize training processes
2024-08-19 13:12:50,311 [Process: 0] Evaluating...
2024-08-19 13:12:50,313 [Process: 0] EPOCH 47:
2024-08-19 13:12:50,315 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5242, 0.1708, 0.1631,  ..., 0.5066, 0.7010, 0.2900],
         [0.1518, 0.1744, 0.1631,  ..., 0.1693, 0.1133, 0.1810],
         [0.1325, 0.1939, 0.2082,  ..., 0.1171, 0.0847, 0.1597],
         [0.1916, 0.4609, 0.4656,  ..., 0.2069, 0.1010, 0.3694]],
        [[0.0622, 0.1384, 0.1337,  ..., 0.1353, 0.1346, 0.0543],
         [0.0622, 0.1418, 0.1337,  ..., 0.1486, 0.1346, 0.0543],
         [0.8134, 0.1384, 0.1337,  ..., 0.1353, 0.5234, 0.8371],
         [0.0622, 0.5814, 0.5990,  ..., 0.5807, 0.2073, 0.0543]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0574, 0.4985, 0.8867,  ..., 0.8059, 0.0633, 0.0656],
         [0.0574, 0.1690, 0.0378,  ..., 0.0814, 0.0633, 0.0656],
         [0.8278, 0.1101, 0.0378,  ..., 0.0563, 0.8100, 0.8031],
         [0.0574, 0.2224, 0.0378,  ..., 0.0563, 0.0633, 0.0656]],
        [[0.0454, 0.0541, 0.7743,  ..., 0.4690, 0.1017, 0.0458],
         [0.0454, 0.0811, 0.0867,  ..., 0.1447, 0.1199, 0.0458],
         [0.8639, 0.0541, 0.0695,  ..., 0.1062, 0.1017, 0.8627],
         [0.0454, 0.8108, 0.0695,  ..., 0.2801, 0.6767, 0.0458]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1686, 0.1509, 0.1673,  ..., 0.2843, 0.1619, 0.2710],
         [0.1838, 0.1593, 0.1834,  ..., 0.1840, 0.1619, 0.1790],
         [0.1686, 0.1509, 0.1603,  ..., 0.1840, 0.3467, 0.1598],
         [0.4790, 0.5390, 0.4889,  ..., 0.3476, 0.3295, 0.3902]],
        [[0.0631, 0.1452, 0.1669,  ..., 0.1278, 0.0754, 0.0882],
         [0.0631, 0.1452, 0.1886,  ..., 0.1569, 0.0754, 0.0882],
         [0.8108, 0.1452, 0.1669,  ..., 0.1278, 0.7738, 0.7355],
         [0.0631, 0.5643, 0.4777,  ..., 0.5874, 0.0754, 0.0882]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1316, 0.4307, 0.7778,  ..., 0.8304, 0.1294, 0.1184],
         [0.1316, 0.1786, 0.0867,  ..., 0.0643, 0.1294, 0.1184],
         [0.4905, 0.1403, 0.0677,  ..., 0.0527, 0.6118, 0.6424],
         [0.2463, 0.2503, 0.0677,  ..., 0.0527, 0.1294, 0.1207]],
        [[0.0661, 0.0716, 0.8319,  ..., 0.5532, 0.0692, 0.0660],
         [0.0661, 0.0931, 0.0720,  ..., 0.1530, 0.0896, 0.0660],
         [0.8016, 0.0716, 0.0480,  ..., 0.1256, 0.0692, 0.8021],
         [0.0661, 0.7638, 0.0480,  ..., 0.1681, 0.7721, 0.0660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:51,274 [Process: 0] Synchronize training processes
2024-08-19 13:12:51,275 [Process: 0] Evaluating...
2024-08-19 13:12:51,276 [Process: 0] EPOCH 48:
2024-08-19 13:12:51,278 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:52,242 [Process: 0] Synchronize training processes
2024-08-19 13:12:52,243 [Process: 0] Evaluating...
2024-08-19 13:12:52,245 [Process: 0] EPOCH 49:
2024-08-19 13:12:52,247 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2764, 0.2321, 0.1304,  ..., 0.4860, 0.1519, 0.3188],
         [0.1737, 0.1911, 0.1608,  ..., 0.1573, 0.1693, 0.1840],
         [0.1412, 0.1434, 0.1304,  ..., 0.1334, 0.1374, 0.1447],
         [0.4087, 0.4334, 0.5784,  ..., 0.2233, 0.5413, 0.3525]],
        [[0.2434, 0.1291, 0.1579,  ..., 0.0963, 0.0563, 0.0437],
         [0.1954, 0.1631, 0.1592,  ..., 0.1321, 0.0563, 0.0437],
         [0.1789, 0.1291, 0.1728,  ..., 0.0963, 0.8311, 0.8689],
         [0.3823, 0.5787, 0.5100,  ..., 0.6752, 0.0563, 0.0437]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0929, 0.2699, 0.7994,  ..., 0.7692, 0.0737, 0.0607],
         [0.0929, 0.1875, 0.0730,  ..., 0.0910, 0.0737, 0.0607],
         [0.7207, 0.1339, 0.0638,  ..., 0.0699, 0.7789, 0.8179],
         [0.0935, 0.4087, 0.0638,  ..., 0.0699, 0.0737, 0.0607]],
        [[0.0776, 0.0866, 0.9226,  ..., 0.6897, 0.0971, 0.0684],
         [0.0776, 0.1110, 0.0295,  ..., 0.1154, 0.1316, 0.0684],
         [0.7673, 0.0866, 0.0240,  ..., 0.0904, 0.0971, 0.7948],
         [0.0776, 0.7158, 0.0240,  ..., 0.1046, 0.6741, 0.0684]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3934, 0.1277, 0.1602,  ..., 0.6871, 0.4723, 0.3991],
         [0.1860, 0.1342, 0.1671,  ..., 0.1043, 0.1545, 0.1714],
         [0.1514, 0.1277, 0.1602,  ..., 0.1043, 0.1423, 0.1426],
         [0.2692, 0.6104, 0.5126,  ..., 0.1043, 0.2309, 0.2869]],
        [[0.9482, 0.1136, 0.0942,  ..., 0.1355, 0.0546, 0.0460],
         [0.0176, 0.1319, 0.1124,  ..., 0.1388, 0.0546, 0.0460],
         [0.0171, 0.1136, 0.0942,  ..., 0.1355, 0.8363, 0.8620],
         [0.0171, 0.6409, 0.6991,  ..., 0.5902, 0.0546, 0.0460]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0882, 0.3136, 0.6733,  ..., 0.8304, 0.0461, 0.0366],
         [0.0882, 0.1736, 0.1209,  ..., 0.0650, 0.0461, 0.0366],
         [0.7354, 0.1464, 0.1029,  ..., 0.0523, 0.8617, 0.8902],
         [0.0882, 0.3665, 0.1029,  ..., 0.0523, 0.0461, 0.0366]],
        [[0.0677, 0.0841, 0.8815,  ..., 0.6034, 0.0438, 0.0407],
         [0.0677, 0.1134, 0.0431,  ..., 0.1443, 0.0665, 0.0407],
         [0.7970, 0.0841, 0.0377,  ..., 0.1179, 0.0438, 0.8780],
         [0.0677, 0.7183, 0.0377,  ..., 0.1344, 0.8459, 0.0407]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:53,205 [Process: 0] Synchronize training processes
2024-08-19 13:12:53,205 [Process: 0] Evaluating...
2024-08-19 13:12:53,207 [Process: 0] EPOCH 50:
2024-08-19 13:12:53,208 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:54,167 [Process: 0] Synchronize training processes
2024-08-19 13:12:54,167 [Process: 0] Evaluating...
2024-08-19 13:12:54,169 [Process: 0] EPOCH 51:
2024-08-19 13:12:54,170 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3628, 0.1333, 0.2010,  ..., 0.6739, 0.2814, 0.3127],
         [0.1756, 0.1446, 0.1768,  ..., 0.1149, 0.1873, 0.1974],
         [0.1454, 0.1333, 0.1642,  ..., 0.1056, 0.2047, 0.1683],
         [0.3163, 0.5887, 0.4580,  ..., 0.1056, 0.3266, 0.3216]],
        [[0.8281, 0.1398, 0.1253,  ..., 0.1312, 0.0562, 0.0508],
         [0.0586, 0.1477, 0.1253,  ..., 0.1312, 0.0562, 0.0508],
         [0.0567, 0.1398, 0.1253,  ..., 0.1312, 0.8313, 0.8475],
         [0.0567, 0.5727, 0.6241,  ..., 0.6065, 0.0562, 0.0508]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0897, 0.4374, 0.7757,  ..., 0.8775, 0.1289, 0.0741],
         [0.0897, 0.1818, 0.0811,  ..., 0.0421, 0.1289, 0.0741],
         [0.7309, 0.1352, 0.0716,  ..., 0.0402, 0.5859, 0.7777],
         [0.0897, 0.2456, 0.0716,  ..., 0.0402, 0.1563, 0.0741]],
        [[0.1299, 0.0771, 0.8469,  ..., 0.4957, 0.0931, 0.0432],
         [0.1299, 0.1027, 0.0510,  ..., 0.1787, 0.1334, 0.0432],
         [0.4720, 0.0771, 0.0510,  ..., 0.1230, 0.0931, 0.8704],
         [0.2682, 0.7431, 0.0510,  ..., 0.2026, 0.6805, 0.0432]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3769, 0.1489, 0.1461,  ..., 0.6128, 0.3238, 0.2168],
         [0.1699, 0.1489, 0.1602,  ..., 0.1355, 0.1821, 0.1750],
         [0.1678, 0.2149, 0.1461,  ..., 0.1221, 0.1642, 0.1537],
         [0.2854, 0.4873, 0.5475,  ..., 0.1297, 0.3299, 0.4545]],
        [[0.9551, 0.1124, 0.1038,  ..., 0.1396, 0.0230, 0.0536],
         [0.0150, 0.1198, 0.1038,  ..., 0.1570, 0.0230, 0.0536],
         [0.0150, 0.1124, 0.1038,  ..., 0.1396, 0.9309, 0.8392],
         [0.0150, 0.6555, 0.6887,  ..., 0.5638, 0.0230, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0679, 0.4156, 0.8618,  ..., 0.8884, 0.0702, 0.0687],
         [0.0679, 0.1814, 0.0462,  ..., 0.0389, 0.0702, 0.0687],
         [0.7964, 0.1456, 0.0460,  ..., 0.0363, 0.7604, 0.7728],
         [0.0679, 0.2574, 0.0460,  ..., 0.0363, 0.0992, 0.0897]],
        [[0.0674, 0.0405, 0.9425,  ..., 0.9191, 0.0951, 0.0282],
         [0.0674, 0.0430, 0.0232,  ..., 0.0394, 0.1040, 0.0282],
         [0.7979, 0.0405, 0.0171,  ..., 0.0207, 0.0951, 0.9155],
         [0.0674, 0.8761, 0.0171,  ..., 0.0207, 0.7059, 0.0282]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:12:55,129 [Process: 0] Synchronize training processes
2024-08-19 13:12:55,129 [Process: 0] Evaluating...
2024-08-19 13:12:55,549 [Process: 0] EPOCH 52:
2024-08-19 13:12:55,551 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:56,509 [Process: 0] Synchronize training processes
2024-08-19 13:12:56,509 [Process: 0] Evaluating...
2024-08-19 13:12:56,511 [Process: 0] EPOCH 53:
2024-08-19 13:12:56,513 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6653, 0.1331, 0.1013,  ..., 0.7963, 0.6696, 0.2293],
         [0.1287, 0.1393, 0.1014,  ..., 0.0731, 0.1135, 0.1718],
         [0.1030, 0.1331, 0.1013,  ..., 0.0653, 0.1084, 0.1614],
         [0.1030, 0.5944, 0.6959,  ..., 0.0653, 0.1084, 0.4375]],
        [[0.8093, 0.1474, 0.0867,  ..., 0.1155, 0.0318, 0.0895],
         [0.0636, 0.1474, 0.0867,  ..., 0.1155, 0.0318, 0.0895],
         [0.0636, 0.1635, 0.0867,  ..., 0.1155, 0.9045, 0.7314],
         [0.0636, 0.5418, 0.7399,  ..., 0.6534, 0.0318, 0.0895]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1352, 0.1858, 0.8685,  ..., 0.9213, 0.0587, 0.0652],
         [0.1352, 0.1623, 0.0448,  ..., 0.0298, 0.0587, 0.0652],
         [0.5379, 0.1577, 0.0433,  ..., 0.0244, 0.8240, 0.8044],
         [0.1917, 0.4941, 0.0433,  ..., 0.0244, 0.0587, 0.0652]],
        [[0.0736, 0.0708, 0.8206,  ..., 0.8434, 0.0581, 0.0322],
         [0.0736, 0.0708, 0.0653,  ..., 0.0575, 0.0581, 0.0322],
         [0.7793, 0.0708, 0.0570,  ..., 0.0495, 0.0581, 0.9035],
         [0.0736, 0.7877, 0.0570,  ..., 0.0495, 0.8256, 0.0322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7703, 0.1250, 0.1589,  ..., 0.7896, 0.8237, 0.2738],
         [0.0861, 0.1250, 0.1589,  ..., 0.0789, 0.0660, 0.1613],
         [0.0718, 0.1250, 0.1589,  ..., 0.0658, 0.0552, 0.1513],
         [0.0718, 0.6250, 0.5233,  ..., 0.0658, 0.0552, 0.4136]],
        [[0.5736, 0.1097, 0.0934,  ..., 0.1113, 0.0590, 0.0604],
         [0.1490, 0.1097, 0.0934,  ..., 0.1142, 0.0590, 0.0604],
         [0.1358, 0.1097, 0.0934,  ..., 0.1113, 0.8230, 0.8189],
         [0.1416, 0.6709, 0.7197,  ..., 0.6632, 0.0590, 0.0604]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:12:57,471 [Process: 0] Synchronize training processes
2024-08-19 13:12:57,471 [Process: 0] Evaluating...
2024-08-19 13:12:57,473 [Process: 0] EPOCH 54:
2024-08-19 13:12:57,475 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:12:58,433 [Process: 0] Synchronize training processes
2024-08-19 13:12:58,434 [Process: 0] Evaluating...
2024-08-19 13:12:58,435 [Process: 0] EPOCH 55:
2024-08-19 13:12:58,437 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1440, 0.4578, 0.9256,  ..., 0.9071, 0.0737, 0.0680],
         [0.1440, 0.1723, 0.0288,  ..., 0.0321, 0.0737, 0.0680],
         [0.4973, 0.1429, 0.0228,  ..., 0.0304, 0.7790, 0.7960],
         [0.2147, 0.2269, 0.0228,  ..., 0.0304, 0.0737, 0.0680]],
        [[0.0475, 0.0414, 0.7664,  ..., 0.9116, 0.0509, 0.0611],
         [0.0475, 0.0414, 0.0779,  ..., 0.0295, 0.0554, 0.0611],
         [0.8576, 0.0414, 0.0779,  ..., 0.0295, 0.0509, 0.8167],
         [0.0475, 0.8759, 0.0779,  ..., 0.0295, 0.8429, 0.0611]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7512, 0.1158, 0.1425,  ..., 0.6616, 0.3576, 0.1502],
         [0.0891, 0.1158, 0.1425,  ..., 0.1128, 0.1674, 0.1502],
         [0.0799, 0.1158, 0.1425,  ..., 0.1128, 0.1674, 0.1625],
         [0.0799, 0.6525, 0.5724,  ..., 0.1128, 0.3076, 0.5372]],
        [[0.8078, 0.1095, 0.1074,  ..., 0.1142, 0.0165, 0.0587],
         [0.0641, 0.1095, 0.1074,  ..., 0.1142, 0.0165, 0.0587],
         [0.0641, 0.1095, 0.1074,  ..., 0.1142, 0.9506, 0.8238],
         [0.0641, 0.6714, 0.6779,  ..., 0.6575, 0.0165, 0.0587]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1402, 0.3716, 0.9226,  ..., 0.8967, 0.0682, 0.0798],
         [0.1402, 0.1443, 0.0258,  ..., 0.0346, 0.0682, 0.0798],
         [0.4981, 0.1318, 0.0258,  ..., 0.0343, 0.7954, 0.7564],
         [0.2216, 0.3523, 0.0258,  ..., 0.0343, 0.0682, 0.0840]],
        [[0.0791, 0.0292, 0.8983,  ..., 0.7352, 0.0534, 0.0853],
         [0.0791, 0.0292, 0.0443,  ..., 0.0966, 0.0534, 0.0853],
         [0.7626, 0.0292, 0.0287,  ..., 0.0841, 0.0534, 0.7440],
         [0.0791, 0.9124, 0.0287,  ..., 0.0841, 0.8397, 0.0853]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9137, 0.1179, 0.1449,  ..., 0.6849, 0.2504, 0.1032],
         [0.0288, 0.1179, 0.1507,  ..., 0.1050, 0.1679, 0.1032],
         [0.0288, 0.1179, 0.1265,  ..., 0.1050, 0.1499, 0.1032],
         [0.0288, 0.6463, 0.5779,  ..., 0.1050, 0.4318, 0.6905]],
        [[0.8725, 0.1083, 0.1262,  ..., 0.1148, 0.0352, 0.0641],
         [0.0425, 0.1083, 0.1262,  ..., 0.1183, 0.0352, 0.0641],
         [0.0425, 0.1083, 0.1262,  ..., 0.1148, 0.8943, 0.8076],
         [0.0425, 0.6752, 0.6214,  ..., 0.6520, 0.0352, 0.0641]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
2024-08-19 13:12:59,456 [Process: 0] Synchronize training processes
2024-08-19 13:12:59,456 [Process: 0] Evaluating...
2024-08-19 13:12:59,458 [Process: 0] EPOCH 56:
2024-08-19 13:12:59,460 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:00,488 [Process: 0] Synchronize training processes
2024-08-19 13:13:00,489 [Process: 0] Evaluating...
2024-08-19 13:13:00,490 [Process: 0] EPOCH 57:
2024-08-19 13:13:00,492 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0829, 0.0848, 0.8199,  ..., 0.6168, 0.1110, 0.0823],
         [0.0829, 0.0849, 0.0645,  ..., 0.1238, 0.1110, 0.0823],
         [0.7512, 0.0848, 0.0578,  ..., 0.1119, 0.5540, 0.7455],
         [0.0829, 0.7455, 0.0578,  ..., 0.1475, 0.2241, 0.0900]],
        [[0.1002, 0.0574, 0.9576,  ..., 0.9178, 0.0969, 0.0629],
         [0.1002, 0.0630, 0.0141,  ..., 0.0274, 0.0969, 0.0629],
         [0.6994, 0.0574, 0.0141,  ..., 0.0274, 0.0969, 0.8113],
         [0.1002, 0.8223, 0.0141,  ..., 0.0274, 0.7092, 0.0629]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6342, 0.1357, 0.1333,  ..., 0.6134, 0.3581, 0.0911],
         [0.1218, 0.1357, 0.1452,  ..., 0.1289, 0.1711, 0.0911],
         [0.1223, 0.1357, 0.1333,  ..., 0.1289, 0.1516, 0.0911],
         [0.1218, 0.5930, 0.5881,  ..., 0.1289, 0.3192, 0.7266]],
        [[0.8499, 0.1014, 0.0822,  ..., 0.1123, 0.0207, 0.0973],
         [0.0500, 0.1014, 0.0822,  ..., 0.1180, 0.0207, 0.0973],
         [0.0500, 0.1014, 0.0822,  ..., 0.1123, 0.9378, 0.7080],
         [0.0500, 0.6958, 0.7533,  ..., 0.6574, 0.0207, 0.0973]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0655, 0.1130, 0.8154,  ..., 0.8673, 0.0469, 0.0632],
         [0.0655, 0.1104, 0.0615,  ..., 0.0532, 0.0469, 0.0632],
         [0.8034, 0.0972, 0.0615,  ..., 0.0397, 0.8592, 0.8068],
         [0.0655, 0.6794, 0.0615,  ..., 0.0397, 0.0469, 0.0667]],
        [[0.0916, 0.0588, 0.9434,  ..., 0.9203, 0.0898, 0.0622],
         [0.0916, 0.0707, 0.0189,  ..., 0.0266, 0.0898, 0.0622],
         [0.7252, 0.0588, 0.0189,  ..., 0.0266, 0.0898, 0.8134],
         [0.0916, 0.8117, 0.0189,  ..., 0.0266, 0.7307, 0.0622]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8527, 0.0792, 0.1350,  ..., 0.8802, 0.6448, 0.0941],
         [0.0519, 0.0792, 0.1350,  ..., 0.0399, 0.1125, 0.0941],
         [0.0477, 0.0792, 0.1350,  ..., 0.0399, 0.1125, 0.0941],
         [0.0477, 0.7623, 0.5949,  ..., 0.0399, 0.1301, 0.7176]],
        [[0.7296, 0.1192, 0.0993,  ..., 0.1670, 0.0333, 0.0707],
         [0.0901, 0.1192, 0.0993,  ..., 0.1707, 0.0333, 0.0707],
         [0.0901, 0.1192, 0.0993,  ..., 0.1670, 0.9001, 0.7879],
         [0.0901, 0.6423, 0.7022,  ..., 0.4953, 0.0333, 0.0707]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-19 13:13:01,532 [Process: 0] Synchronize training processes
2024-08-19 13:13:01,532 [Process: 0] Evaluating...
2024-08-19 13:13:01,534 [Process: 0] EPOCH 58:
2024-08-19 13:13:01,535 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:02,562 [Process: 0] Synchronize training processes
2024-08-19 13:13:02,562 [Process: 0] Evaluating...
2024-08-19 13:13:02,564 [Process: 0] EPOCH 59:
2024-08-19 13:13:02,565 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0624, 0.0965, 0.8140,  ..., 0.8666, 0.0375, 0.0533],
         [0.0624, 0.1171, 0.0620,  ..., 0.0583, 0.0375, 0.0533],
         [0.8128, 0.0965, 0.0620,  ..., 0.0375, 0.8876, 0.8402],
         [0.0624, 0.6899, 0.0620,  ..., 0.0375, 0.0375, 0.0533]],
        [[0.0593, 0.0214, 0.9470,  ..., 0.7342, 0.0934, 0.0871],
         [0.0593, 0.0214, 0.0177,  ..., 0.0973, 0.0934, 0.0796],
         [0.8220, 0.0214, 0.0177,  ..., 0.0800, 0.1578, 0.7537],
         [0.0593, 0.9358, 0.0177,  ..., 0.0884, 0.6555, 0.0796]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7002, 0.1213, 0.0714,  ..., 0.4236, 0.4340, 0.1539],
         [0.0999, 0.1213, 0.0714,  ..., 0.1537, 0.1607, 0.1539],
         [0.0999, 0.1213, 0.0714,  ..., 0.1496, 0.1607, 0.1960],
         [0.0999, 0.6360, 0.7857,  ..., 0.2731, 0.2447, 0.4963]],
        [[0.6864, 0.1071, 0.1116,  ..., 0.1123, 0.0378, 0.0550],
         [0.1045, 0.1071, 0.1116,  ..., 0.1128, 0.0378, 0.0550],
         [0.1045, 0.1071, 0.1116,  ..., 0.1123, 0.8865, 0.8349],
         [0.1045, 0.6786, 0.6651,  ..., 0.6626, 0.0378, 0.0550]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0918, 0.0602, 0.9038,  ..., 0.8779, 0.0558, 0.0320],
         [0.0918, 0.0793, 0.0321,  ..., 0.0440, 0.0558, 0.0320],
         [0.7247, 0.0602, 0.0321,  ..., 0.0390, 0.8327, 0.9040],
         [0.0918, 0.8003, 0.0321,  ..., 0.0390, 0.0558, 0.0320]],
        [[0.0675, 0.0372, 0.9060,  ..., 0.9094, 0.1263, 0.0709],
         [0.0675, 0.0508, 0.0381,  ..., 0.0308, 0.1318, 0.0709],
         [0.7976, 0.0372, 0.0280,  ..., 0.0299, 0.1360, 0.7872],
         [0.0675, 0.8748, 0.0280,  ..., 0.0299, 0.6060, 0.0709]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8252, 0.1167, 0.1150,  ..., 0.8631, 0.7455, 0.1583],
         [0.0583, 0.1167, 0.1150,  ..., 0.0465, 0.0848, 0.1583],
         [0.0583, 0.1167, 0.1150,  ..., 0.0452, 0.0848, 0.2023],
         [0.0583, 0.6500, 0.6551,  ..., 0.0452, 0.0848, 0.4811]],
        [[0.5501, 0.0754, 0.0396,  ..., 0.0536, 0.0619, 0.0324],
         [0.1441, 0.0757, 0.0396,  ..., 0.0536, 0.0619, 0.0324],
         [0.1618, 0.0754, 0.0396,  ..., 0.0536, 0.8143, 0.9028],
         [0.1441, 0.7735, 0.8811,  ..., 0.8392, 0.0619, 0.0324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:03,592 [Process: 0] Synchronize training processes
2024-08-19 13:13:03,593 [Process: 0] Evaluating...
2024-08-19 13:13:03,594 [Process: 0] EPOCH 60:
2024-08-19 13:13:03,596 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:04,624 [Process: 0] Synchronize training processes
2024-08-19 13:13:04,624 [Process: 0] Evaluating...
2024-08-19 13:13:04,626 [Process: 0] EPOCH 61:
2024-08-19 13:13:04,628 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0841, 0.1619, 0.8931,  ..., 0.9022, 0.0678, 0.0740],
         [0.0841, 0.1905, 0.0388,  ..., 0.0363, 0.0678, 0.0740],
         [0.7477, 0.1393, 0.0341,  ..., 0.0307, 0.7487, 0.7555],
         [0.0841, 0.5082, 0.0341,  ..., 0.0307, 0.1157, 0.0965]],
        [[0.1029, 0.0280, 0.8859,  ..., 0.7310, 0.0940, 0.0728],
         [0.1029, 0.0422, 0.0380,  ..., 0.0897, 0.0940, 0.0728],
         [0.6914, 0.0280, 0.0380,  ..., 0.0897, 0.1228, 0.7816],
         [0.1029, 0.9017, 0.0380,  ..., 0.0897, 0.6891, 0.0728]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8801, 0.1432, 0.0892,  ..., 0.8415, 0.7756, 0.1412],
         [0.0400, 0.1432, 0.0892,  ..., 0.0528, 0.0815, 0.1412],
         [0.0400, 0.1721, 0.0892,  ..., 0.0528, 0.0715, 0.1894],
         [0.0400, 0.5414, 0.7325,  ..., 0.0528, 0.0715, 0.5282]],
        [[0.8115, 0.1025, 0.1640,  ..., 0.0540, 0.0411, 0.0424],
         [0.0654, 0.1025, 0.1532,  ..., 0.0540, 0.0411, 0.0424],
         [0.0616, 0.1025, 0.1402,  ..., 0.0540, 0.8766, 0.8729],
         [0.0616, 0.6926, 0.5426,  ..., 0.8381, 0.0411, 0.0424]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0475, 0.2378, 0.8557,  ..., 0.9442, 0.0871, 0.0544],
         [0.0475, 0.1922, 0.0712,  ..., 0.0223, 0.0869, 0.0544],
         [0.8576, 0.1297, 0.0365,  ..., 0.0167, 0.7383, 0.8368],
         [0.0475, 0.4404, 0.0365,  ..., 0.0167, 0.0877, 0.0544]],
        [[0.0651, 0.0099, 0.9826,  ..., 0.7865, 0.0994, 0.0669],
         [0.0651, 0.0118, 0.0064,  ..., 0.0865, 0.0994, 0.0669],
         [0.8048, 0.0099, 0.0055,  ..., 0.0635, 0.1048, 0.7992],
         [0.0651, 0.9685, 0.0055,  ..., 0.0635, 0.6964, 0.0669]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8838, 0.1186, 0.1407,  ..., 0.2122, 0.1887, 0.1373],
         [0.0387, 0.1252, 0.1407,  ..., 0.1961, 0.1829, 0.1554],
         [0.0387, 0.1186, 0.2127,  ..., 0.1618, 0.1958, 0.1373],
         [0.0387, 0.6376, 0.5058,  ..., 0.4299, 0.4327, 0.5701]],
        [[0.8927, 0.0888, 0.1166,  ..., 0.0911, 0.0521, 0.0780],
         [0.0358, 0.0888, 0.1166,  ..., 0.0911, 0.0521, 0.0780],
         [0.0358, 0.0888, 0.1166,  ..., 0.0911, 0.8436, 0.7659],
         [0.0358, 0.7335, 0.6501,  ..., 0.7266, 0.0521, 0.0780]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:05,653 [Process: 0] Synchronize training processes
2024-08-19 13:13:05,653 [Process: 0] Evaluating...
2024-08-19 13:13:06,103 [Process: 0] EPOCH 62:
2024-08-19 13:13:06,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0406, 0.3233, 0.9356,  ..., 0.8873, 0.0466, 0.0305],
         [0.0406, 0.1951, 0.0215,  ..., 0.0481, 0.0466, 0.0305],
         [0.8783, 0.1504, 0.0215,  ..., 0.0323, 0.8601, 0.9015],
         [0.0406, 0.3312, 0.0215,  ..., 0.0323, 0.0466, 0.0375]],
        [[0.0654, 0.1113, 0.8792,  ..., 0.8817, 0.0509, 0.0614],
         [0.0646, 0.1113, 0.0431,  ..., 0.0394, 0.0683, 0.0614],
         [0.8054, 0.1113, 0.0389,  ..., 0.0394, 0.0509, 0.8159],
         [0.0646, 0.6661, 0.0389,  ..., 0.0394, 0.8298, 0.0614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9119, 0.1096, 0.0974,  ..., 0.9042, 0.1071, 0.0979],
         [0.0340, 0.1162, 0.1079,  ..., 0.0391, 0.1071, 0.1017],
         [0.0270, 0.1096, 0.0974,  ..., 0.0283, 0.1071, 0.0979],
         [0.0270, 0.6646, 0.6973,  ..., 0.0283, 0.6786, 0.7025]],
        [[0.9465, 0.0731, 0.0561,  ..., 0.0507, 0.0721, 0.0631],
         [0.0202, 0.0731, 0.0561,  ..., 0.0507, 0.0721, 0.0631],
         [0.0167, 0.0731, 0.0561,  ..., 0.0507, 0.7837, 0.8106],
         [0.0167, 0.7806, 0.8318,  ..., 0.8480, 0.0721, 0.0631]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0595, 0.3087, 0.9424,  ..., 0.8088, 0.0475, 0.0389],
         [0.0595, 0.2187, 0.0202,  ..., 0.0637, 0.0475, 0.0389],
         [0.8215, 0.1456, 0.0187,  ..., 0.0637, 0.8574, 0.8832],
         [0.0595, 0.3270, 0.0187,  ..., 0.0637, 0.0475, 0.0389]],
        [[0.0532, 0.0267, 0.8965,  ..., 0.8382, 0.0451, 0.0764],
         [0.0532, 0.0274, 0.0345,  ..., 0.0539, 0.0451, 0.0764],
         [0.8404, 0.0267, 0.0345,  ..., 0.0539, 0.0451, 0.7709],
         [0.0532, 0.9191, 0.0345,  ..., 0.0539, 0.8647, 0.0764]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:07,124 [Process: 0] Synchronize training processes
2024-08-19 13:13:07,125 [Process: 0] Evaluating...
2024-08-19 13:13:07,126 [Process: 0] EPOCH 63:
2024-08-19 13:13:07,128 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:08,153 [Process: 0] Synchronize training processes
2024-08-19 13:13:08,154 [Process: 0] Evaluating...
2024-08-19 13:13:08,155 [Process: 0] EPOCH 64:
2024-08-19 13:13:08,157 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9503, 0.1198, 0.0589,  ..., 0.9316, 0.3144, 0.1368],
         [0.0166, 0.1198, 0.0589,  ..., 0.0230, 0.1998, 0.1399],
         [0.0166, 0.1198, 0.0589,  ..., 0.0227, 0.1476, 0.1356],
         [0.0166, 0.6407, 0.8232,  ..., 0.0227, 0.3382, 0.5877]],
        [[0.8508, 0.1026, 0.0624,  ..., 0.0850, 0.0515, 0.0273],
         [0.0497, 0.1026, 0.0624,  ..., 0.0850, 0.0511, 0.0273],
         [0.0497, 0.1026, 0.0624,  ..., 0.0850, 0.8462, 0.9180],
         [0.0497, 0.6922, 0.8128,  ..., 0.7450, 0.0511, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0589, 0.1987, 0.9256,  ..., 0.9782, 0.0725, 0.0238],
         [0.0589, 0.1947, 0.0279,  ..., 0.0073, 0.0725, 0.0238],
         [0.8232, 0.1483, 0.0232,  ..., 0.0073, 0.7765, 0.9285],
         [0.0589, 0.4582, 0.0232,  ..., 0.0073, 0.0785, 0.0238]],
        [[0.0722, 0.0221, 0.9291,  ..., 0.8981, 0.1126, 0.0777],
         [0.0722, 0.0260, 0.0236,  ..., 0.0340, 0.1126, 0.0777],
         [0.7835, 0.0221, 0.0236,  ..., 0.0340, 0.1687, 0.7669],
         [0.0722, 0.9299, 0.0236,  ..., 0.0340, 0.6061, 0.0777]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9296, 0.0551, 0.0737,  ..., 0.8766, 0.6926, 0.1496],
         [0.0235, 0.0551, 0.0737,  ..., 0.0411, 0.1140, 0.1545],
         [0.0235, 0.0551, 0.0737,  ..., 0.0411, 0.0969, 0.1532],
         [0.0235, 0.8346, 0.7790,  ..., 0.0411, 0.0965, 0.5427]],
        [[0.9660, 0.1095, 0.0775,  ..., 0.1033, 0.0624, 0.0434],
         [0.0113, 0.1095, 0.0775,  ..., 0.1033, 0.0624, 0.0434],
         [0.0113, 0.1520, 0.0817,  ..., 0.1033, 0.8127, 0.8698],
         [0.0113, 0.6289, 0.7633,  ..., 0.6900, 0.0624, 0.0434]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0560, 0.2024, 0.9437,  ..., 0.9431, 0.0646, 0.0272],
         [0.0560, 0.2368, 0.0188,  ..., 0.0190, 0.0646, 0.0272],
         [0.8321, 0.1461, 0.0188,  ..., 0.0190, 0.8061, 0.9184],
         [0.0560, 0.4148, 0.0188,  ..., 0.0190, 0.0646, 0.0272]],
        [[0.0670, 0.0119, 0.9669,  ..., 0.8769, 0.1308, 0.0593],
         [0.0670, 0.0176, 0.0110,  ..., 0.0410, 0.1308, 0.0593],
         [0.7989, 0.0119, 0.0110,  ..., 0.0410, 0.3243, 0.8222],
         [0.0670, 0.9586, 0.0110,  ..., 0.0410, 0.4140, 0.0593]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:09,180 [Process: 0] Synchronize training processes
2024-08-19 13:13:09,180 [Process: 0] Evaluating...
2024-08-19 13:13:09,182 [Process: 0] EPOCH 65:
2024-08-19 13:13:09,183 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:10,207 [Process: 0] Synchronize training processes
2024-08-19 13:13:10,208 [Process: 0] Evaluating...
2024-08-19 13:13:10,209 [Process: 0] EPOCH 66:
2024-08-19 13:13:10,211 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9576, 0.0745, 0.1808,  ..., 0.9200, 0.6421, 0.1482],
         [0.0154, 0.0745, 0.1658,  ..., 0.0267, 0.1175, 0.1482],
         [0.0135, 0.0745, 0.1739,  ..., 0.0267, 0.1175, 0.1937],
         [0.0135, 0.7765, 0.4794,  ..., 0.0267, 0.1230, 0.5098]],
        [[0.9857, 0.0691, 0.0688,  ..., 0.0760, 0.0308, 0.0421],
         [0.0048, 0.0715, 0.0688,  ..., 0.0760, 0.0308, 0.0421],
         [0.0048, 0.0691, 0.0688,  ..., 0.0760, 0.9077, 0.8736],
         [0.0048, 0.7903, 0.7937,  ..., 0.7720, 0.0308, 0.0421]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0852, 0.2937, 0.8758,  ..., 0.8626, 0.0430, 0.0197],
         [0.0852, 0.2221, 0.0414,  ..., 0.0458, 0.0430, 0.0197],
         [0.7287, 0.1324, 0.0414,  ..., 0.0458, 0.8711, 0.9410],
         [0.1010, 0.3517, 0.0414,  ..., 0.0458, 0.0430, 0.0197]],
        [[0.0506, 0.0337, 0.9819,  ..., 0.9140, 0.0409, 0.0568],
         [0.0506, 0.0358, 0.0060,  ..., 0.0287, 0.0409, 0.0568],
         [0.8481, 0.0337, 0.0060,  ..., 0.0287, 0.0409, 0.8296],
         [0.0506, 0.8969, 0.0060,  ..., 0.0287, 0.8772, 0.0568]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9645, 0.0720, 0.1039,  ..., 0.8229, 0.9641, 0.1154],
         [0.0136, 0.0720, 0.1039,  ..., 0.0590, 0.0120, 0.1154],
         [0.0110, 0.0720, 0.1039,  ..., 0.0590, 0.0120, 0.1154],
         [0.0110, 0.7839, 0.6882,  ..., 0.0590, 0.0120, 0.6537]],
        [[0.9525, 0.0435, 0.0936,  ..., 0.0505, 0.0292, 0.0511],
         [0.0158, 0.0435, 0.0936,  ..., 0.0505, 0.0292, 0.0511],
         [0.0158, 0.0435, 0.0936,  ..., 0.0505, 0.9125, 0.8466],
         [0.0158, 0.8695, 0.7193,  ..., 0.8484, 0.0292, 0.0511]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0392, 0.3245, 0.9202,  ..., 0.9443, 0.0446, 0.0449],
         [0.0392, 0.2745, 0.0297,  ..., 0.0186, 0.0446, 0.0449],
         [0.8823, 0.1271, 0.0251,  ..., 0.0186, 0.8663, 0.8536],
         [0.0392, 0.2738, 0.0251,  ..., 0.0186, 0.0446, 0.0567]],
        [[0.0976, 0.0356, 0.9183,  ..., 0.8479, 0.0861, 0.0607],
         [0.0976, 0.0459, 0.0272,  ..., 0.0507, 0.0861, 0.0607],
         [0.6879, 0.0356, 0.0272,  ..., 0.0507, 0.0861, 0.8118],
         [0.1168, 0.8829, 0.0272,  ..., 0.0507, 0.7417, 0.0668]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:11,234 [Process: 0] Synchronize training processes
2024-08-19 13:13:11,235 [Process: 0] Evaluating...
2024-08-19 13:13:11,236 [Process: 0] EPOCH 67:
2024-08-19 13:13:11,238 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:12,262 [Process: 0] Synchronize training processes
2024-08-19 13:13:12,263 [Process: 0] Evaluating...
2024-08-19 13:13:12,264 [Process: 0] EPOCH 68:
2024-08-19 13:13:12,266 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9243, 0.0671, 0.0511,  ..., 0.9399, 0.1620, 0.1261],
         [0.0298, 0.0671, 0.0511,  ..., 0.0200, 0.1767, 0.1421],
         [0.0230, 0.0671, 0.0511,  ..., 0.0200, 0.2194, 0.1261],
         [0.0230, 0.7988, 0.8468,  ..., 0.0200, 0.4419, 0.6056]],
        [[0.9378, 0.0562, 0.0543,  ..., 0.0553, 0.0225, 0.0259],
         [0.0207, 0.0562, 0.0543,  ..., 0.0553, 0.0225, 0.0259],
         [0.0207, 0.0562, 0.0543,  ..., 0.0553, 0.9325, 0.9223],
         [0.0207, 0.8315, 0.8371,  ..., 0.8341, 0.0225, 0.0259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0355, 0.2995, 0.9676,  ..., 0.9907, 0.0746, 0.0770],
         [0.0355, 0.2862, 0.0108,  ..., 0.0031, 0.0746, 0.0770],
         [0.8936, 0.1390, 0.0108,  ..., 0.0031, 0.7674, 0.7668],
         [0.0355, 0.2752, 0.0108,  ..., 0.0031, 0.0833, 0.0791]],
        [[0.0500, 0.0455, 0.9839,  ..., 0.9264, 0.0894, 0.0637],
         [0.0500, 0.0455, 0.0055,  ..., 0.0312, 0.0894, 0.0637],
         [0.8499, 0.0455, 0.0053,  ..., 0.0212, 0.1048, 0.8088],
         [0.0500, 0.8635, 0.0053,  ..., 0.0212, 0.7165, 0.0637]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7637, 0.1013, 0.0987,  ..., 0.9292, 0.1549, 0.1317],
         [0.0932, 0.1033, 0.0987,  ..., 0.0236, 0.1846, 0.1317],
         [0.0716, 0.1013, 0.0987,  ..., 0.0236, 0.3268, 0.1467],
         [0.0716, 0.6941, 0.7038,  ..., 0.0236, 0.3337, 0.5898]],
        [[0.9876, 0.0467, 0.0771,  ..., 0.0802, 0.0359, 0.0125],
         [0.0041, 0.0467, 0.0771,  ..., 0.0802, 0.0359, 0.0125],
         [0.0041, 0.0467, 0.0771,  ..., 0.0802, 0.8923, 0.9624],
         [0.0041, 0.8599, 0.7688,  ..., 0.7593, 0.0359, 0.0125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0669, 0.1226, 0.8814,  ..., 0.9774, 0.0531, 0.0393],
         [0.0669, 0.2080, 0.0395,  ..., 0.0075, 0.0531, 0.0393],
         [0.7994, 0.0971, 0.0395,  ..., 0.0075, 0.8407, 0.8820],
         [0.0669, 0.5723, 0.0395,  ..., 0.0075, 0.0531, 0.0393]],
        [[0.0465, 0.0421, 0.9554,  ..., 0.9291, 0.0922, 0.0564],
         [0.0465, 0.0421, 0.0154,  ..., 0.0259, 0.1114, 0.0564],
         [0.8605, 0.0421, 0.0146,  ..., 0.0225, 0.0960, 0.8308],
         [0.0465, 0.8738, 0.0146,  ..., 0.0225, 0.7004, 0.0564]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:13,288 [Process: 0] Synchronize training processes
2024-08-19 13:13:13,289 [Process: 0] Evaluating...
2024-08-19 13:13:13,290 [Process: 0] EPOCH 69:
2024-08-19 13:13:13,292 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:14,324 [Process: 0] Synchronize training processes
2024-08-19 13:13:14,324 [Process: 0] Evaluating...
2024-08-19 13:13:14,326 [Process: 0] EPOCH 70:
2024-08-19 13:13:14,328 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9232, 0.0512, 0.1353,  ..., 0.8710, 0.1888, 0.1195],
         [0.0256, 0.0512, 0.1353,  ..., 0.0430, 0.2141, 0.1280],
         [0.0256, 0.0512, 0.1905,  ..., 0.0430, 0.3238, 0.1195],
         [0.0256, 0.8464, 0.5389,  ..., 0.0430, 0.2732, 0.6329]],
        [[0.9598, 0.0615, 0.0846,  ..., 0.0425, 0.0578, 0.0105],
         [0.0134, 0.0615, 0.0846,  ..., 0.0425, 0.0694, 0.0105],
         [0.0134, 0.0615, 0.0846,  ..., 0.0425, 0.8150, 0.9685],
         [0.0134, 0.8155, 0.7463,  ..., 0.8725, 0.0578, 0.0105]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0589, 0.0616, 0.9192,  ..., 0.9946, 0.0451, 0.0648],
         [0.0589, 0.1117, 0.0359,  ..., 0.0018, 0.0451, 0.0648],
         [0.8232, 0.0616, 0.0225,  ..., 0.0018, 0.8646, 0.8056],
         [0.0589, 0.7652, 0.0225,  ..., 0.0018, 0.0451, 0.0648]],
        [[0.0293, 0.0384, 0.9701,  ..., 0.9163, 0.1046, 0.0211],
         [0.0293, 0.0384, 0.0100,  ..., 0.0279, 0.1046, 0.0211],
         [0.9121, 0.0384, 0.0100,  ..., 0.0279, 0.1604, 0.9366],
         [0.0293, 0.8849, 0.0100,  ..., 0.0279, 0.6304, 0.0211]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8889, 0.0826, 0.0764,  ..., 0.5882, 0.1162, 0.0724],
         [0.0370, 0.0826, 0.0764,  ..., 0.1863, 0.1162, 0.0726],
         [0.0370, 0.0826, 0.0764,  ..., 0.1104, 0.1162, 0.0724],
         [0.0370, 0.7522, 0.7709,  ..., 0.1151, 0.6514, 0.7826]],
        [[0.8374, 0.1114, 0.1152,  ..., 0.0682, 0.0172, 0.0132],
         [0.0618, 0.1114, 0.1192,  ..., 0.0682, 0.0172, 0.0132],
         [0.0504, 0.1274, 0.1152,  ..., 0.0685, 0.9484, 0.9605],
         [0.0504, 0.6498, 0.6505,  ..., 0.7951, 0.0172, 0.0132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0601, 0.2382, 0.8266,  ..., 0.9860, 0.0700, 0.0778],
         [0.0601, 0.2731, 0.0578,  ..., 0.0047, 0.0700, 0.0778],
         [0.8198, 0.3517, 0.0578,  ..., 0.0047, 0.7174, 0.6553],
         [0.0601, 0.1370, 0.0578,  ..., 0.0047, 0.1426, 0.1891]],
        [[0.0659, 0.0094, 0.9396,  ..., 0.8671, 0.0945, 0.0357],
         [0.0659, 0.0094, 0.0201,  ..., 0.0514, 0.0945, 0.0357],
         [0.8023, 0.0094, 0.0201,  ..., 0.0408, 0.1531, 0.8928],
         [0.0659, 0.9719, 0.0201,  ..., 0.0408, 0.6580, 0.0357]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:15,353 [Process: 0] Synchronize training processes
2024-08-19 13:13:15,353 [Process: 0] Evaluating...
2024-08-19 13:13:15,355 [Process: 0] EPOCH 71:
2024-08-19 13:13:15,357 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:16,387 [Process: 0] Synchronize training processes
2024-08-19 13:13:16,388 [Process: 0] Evaluating...
2024-08-19 13:13:16,841 [Process: 0] EPOCH 72:
2024-08-19 13:13:16,845 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9232, 0.0377, 0.0746,  ..., 0.9493, 0.4973, 0.1155],
         [0.0256, 0.0377, 0.0746,  ..., 0.0169, 0.2401, 0.1408],
         [0.0256, 0.0377, 0.0779,  ..., 0.0169, 0.1414, 0.1155],
         [0.0256, 0.8870, 0.7729,  ..., 0.0169, 0.1212, 0.6282]],
        [[0.9042, 0.0810, 0.0727,  ..., 0.0703, 0.0159, 0.0221],
         [0.0319, 0.0810, 0.0727,  ..., 0.0703, 0.0159, 0.0221],
         [0.0319, 0.0933, 0.0727,  ..., 0.0703, 0.9524, 0.9336],
         [0.0319, 0.7448, 0.7818,  ..., 0.7891, 0.0159, 0.0221]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0542, 0.0745, 0.9334,  ..., 0.9778, 0.0489, 0.0790],
         [0.0542, 0.0688, 0.0222,  ..., 0.0074, 0.0489, 0.0790],
         [0.8373, 0.7611, 0.0222,  ..., 0.0074, 0.8530, 0.7283],
         [0.0542, 0.0955, 0.0222,  ..., 0.0074, 0.0493, 0.1136]],
        [[0.0871, 0.0172, 0.9729,  ..., 0.9351, 0.0949, 0.0404],
         [0.0871, 0.0172, 0.0090,  ..., 0.0216, 0.0949, 0.0404],
         [0.7204, 0.0172, 0.0090,  ..., 0.0216, 0.1839, 0.8788],
         [0.1054, 0.9484, 0.0090,  ..., 0.0216, 0.6263, 0.0404]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9232, 0.0831, 0.1163,  ..., 0.9325, 0.6145, 0.0888],
         [0.0256, 0.0831, 0.1236,  ..., 0.0225, 0.1773, 0.1037],
         [0.0256, 0.0831, 0.1234,  ..., 0.0225, 0.1041, 0.0888],
         [0.0256, 0.7507, 0.6366,  ..., 0.0225, 0.1041, 0.7187]],
        [[0.9335, 0.0300, 0.0582,  ..., 0.0588, 0.0322, 0.0469],
         [0.0222, 0.0300, 0.0582,  ..., 0.0588, 0.0322, 0.0469],
         [0.0222, 0.0300, 0.0582,  ..., 0.0588, 0.9033, 0.8594],
         [0.0222, 0.9101, 0.8254,  ..., 0.8236, 0.0322, 0.0469]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:17,865 [Process: 0] Synchronize training processes
2024-08-19 13:13:17,865 [Process: 0] Evaluating...
2024-08-19 13:13:17,867 [Process: 0] EPOCH 73:
2024-08-19 13:13:17,869 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:18,893 [Process: 0] Synchronize training processes
2024-08-19 13:13:18,894 [Process: 0] Evaluating...
2024-08-19 13:13:18,895 [Process: 0] EPOCH 74:
2024-08-19 13:13:18,897 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8875e-02, 1.1014e-01, 9.6837e-01,  ..., 9.9768e-01,
          1.8383e-02, 5.3734e-02],
         [5.8875e-02, 2.2636e-01, 1.0543e-02,  ..., 7.7389e-04,
          1.8383e-02, 5.3734e-02],
         [8.2338e-01, 1.0281e-01, 1.0543e-02,  ..., 7.7389e-04,
          9.4485e-01, 8.1603e-01],
         [5.8875e-02, 5.6069e-01, 1.0543e-02,  ..., 7.7389e-04,
          1.8383e-02, 7.6500e-02]],
        [[5.6750e-02, 7.4064e-03, 9.7152e-01,  ..., 8.8326e-01,
          3.8044e-02, 4.5425e-02],
         [5.6750e-02, 7.4064e-03, 9.4926e-03,  ..., 3.8913e-02,
          5.0622e-02, 4.5425e-02],
         [8.2975e-01, 7.4064e-03, 9.4926e-03,  ..., 3.8913e-02,
          3.8044e-02, 8.6373e-01],
         [5.6750e-02, 9.7778e-01, 9.4926e-03,  ..., 3.8913e-02,
          8.7329e-01, 4.5425e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9313, 0.0529, 0.0953,  ..., 0.9059, 0.6250, 0.1282],
         [0.0243, 0.0529, 0.1337,  ..., 0.0356, 0.1665, 0.1604],
         [0.0222, 0.0529, 0.0953,  ..., 0.0292, 0.1003, 0.1282],
         [0.0222, 0.8414, 0.6757,  ..., 0.0292, 0.1082, 0.5832]],
        [[0.8866, 0.0365, 0.0649,  ..., 0.0512, 0.0159, 0.0571],
         [0.0379, 0.0365, 0.0649,  ..., 0.0512, 0.0159, 0.0507],
         [0.0377, 0.0365, 0.0649,  ..., 0.0512, 0.9523, 0.8415],
         [0.0377, 0.8906, 0.8053,  ..., 0.8463, 0.0159, 0.0507]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0500, 0.1431, 0.9552,  ..., 0.9798, 0.0326, 0.0512],
         [0.0500, 0.3197, 0.0149,  ..., 0.0067, 0.0326, 0.0512],
         [0.8499, 0.1099, 0.0149,  ..., 0.0067, 0.9022, 0.8465],
         [0.0500, 0.4272, 0.0149,  ..., 0.0067, 0.0326, 0.0512]],
        [[0.0487, 0.0645, 0.9906,  ..., 0.8449, 0.0499, 0.0416],
         [0.0487, 0.0798, 0.0031,  ..., 0.0665, 0.0499, 0.0416],
         [0.8539, 0.0645, 0.0031,  ..., 0.0443, 0.0499, 0.8751],
         [0.0487, 0.7912, 0.0031,  ..., 0.0443, 0.8502, 0.0416]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9757, 0.0454, 0.0459,  ..., 0.9330, 0.3673, 0.0633],
         [0.0081, 0.0454, 0.0459,  ..., 0.0223, 0.2678, 0.0633],
         [0.0081, 0.0454, 0.0459,  ..., 0.0223, 0.1667, 0.0633],
         [0.0081, 0.8637, 0.8623,  ..., 0.0223, 0.1983, 0.8101]],
        [[0.8497, 0.0580, 0.0339,  ..., 0.0575, 0.0152, 0.0335],
         [0.0501, 0.0580, 0.0339,  ..., 0.0575, 0.0152, 0.0335],
         [0.0501, 0.0725, 0.0339,  ..., 0.0575, 0.9545, 0.8995],
         [0.0501, 0.8115, 0.8984,  ..., 0.8274, 0.0152, 0.0335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:19,924 [Process: 0] Synchronize training processes
2024-08-19 13:13:19,924 [Process: 0] Evaluating...
2024-08-19 13:13:19,926 [Process: 0] EPOCH 75:
2024-08-19 13:13:19,928 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:20,953 [Process: 0] Synchronize training processes
2024-08-19 13:13:20,953 [Process: 0] Evaluating...
2024-08-19 13:13:20,955 [Process: 0] EPOCH 76:
2024-08-19 13:13:20,957 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0359, 0.2044, 0.8893,  ..., 0.9824, 0.0418, 0.0310],
         [0.0359, 0.3522, 0.0423,  ..., 0.0059, 0.0418, 0.0310],
         [0.8922, 0.1179, 0.0342,  ..., 0.0059, 0.8746, 0.9071],
         [0.0359, 0.3255, 0.0342,  ..., 0.0059, 0.0418, 0.0310]],
        [[0.0727, 0.0084, 0.9265,  ..., 0.8412, 0.0206, 0.0599],
         [0.0727, 0.0084, 0.0245,  ..., 0.0470, 0.0206, 0.0599],
         [0.7815, 0.0084, 0.0245,  ..., 0.0470, 0.0206, 0.8202],
         [0.0731, 0.9749, 0.0245,  ..., 0.0649, 0.9382, 0.0599]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9318, 0.0476, 0.0419,  ..., 0.9187, 0.3462, 0.1438],
         [0.0227, 0.0476, 0.0419,  ..., 0.0271, 0.2963, 0.1798],
         [0.0227, 0.0476, 0.0419,  ..., 0.0271, 0.1887, 0.2273],
         [0.0227, 0.8573, 0.8742,  ..., 0.0271, 0.1688, 0.4491]],
        [[0.4177, 0.0440, 0.0436,  ..., 0.0442, 0.0293, 0.0179],
         [0.2679, 0.0440, 0.0436,  ..., 0.0442, 0.0293, 0.0179],
         [0.1649, 0.0440, 0.0436,  ..., 0.0442, 0.9120, 0.9464],
         [0.1495, 0.8680, 0.8693,  ..., 0.8673, 0.0293, 0.0179]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0359, 0.2851, 0.9414,  ..., 0.9867, 0.0287, 0.0486],
         [0.0359, 0.4920, 0.0195,  ..., 0.0044, 0.0287, 0.0486],
         [0.8923, 0.0927, 0.0195,  ..., 0.0044, 0.9139, 0.8485],
         [0.0359, 0.1302, 0.0195,  ..., 0.0044, 0.0287, 0.0544]],
        [[0.0558, 0.0093, 0.9815,  ..., 0.9350, 0.0099, 0.0670],
         [0.0558, 0.0093, 0.0063,  ..., 0.0285, 0.0099, 0.0670],
         [0.8327, 0.0093, 0.0061,  ..., 0.0183, 0.0099, 0.7565],
         [0.0558, 0.9721, 0.0061,  ..., 0.0183, 0.9702, 0.1095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9411, 0.0336, 0.0363,  ..., 0.9554, 0.7141, 0.0918],
         [0.0211, 0.0336, 0.0363,  ..., 0.0149, 0.1404, 0.0918],
         [0.0189, 0.0336, 0.0363,  ..., 0.0149, 0.0727, 0.0918],
         [0.0189, 0.8991, 0.8912,  ..., 0.0149, 0.0727, 0.7247]],
        [[0.9539, 0.0450, 0.0588,  ..., 0.0693, 0.0253, 0.0366],
         [0.0169, 0.0450, 0.0588,  ..., 0.0693, 0.0253, 0.0366],
         [0.0146, 0.0450, 0.0588,  ..., 0.0693, 0.9240, 0.8903],
         [0.0146, 0.8649, 0.8236,  ..., 0.7920, 0.0253, 0.0366]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:21,982 [Process: 0] Synchronize training processes
2024-08-19 13:13:21,982 [Process: 0] Evaluating...
2024-08-19 13:13:21,984 [Process: 0] EPOCH 77:
2024-08-19 13:13:21,986 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:23,010 [Process: 0] Synchronize training processes
2024-08-19 13:13:23,011 [Process: 0] Evaluating...
2024-08-19 13:13:23,012 [Process: 0] EPOCH 78:
2024-08-19 13:13:23,014 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0660, 0.1228, 0.9430,  ..., 0.9748, 0.0480, 0.0613],
         [0.0660, 0.1988, 0.0190,  ..., 0.0077, 0.0480, 0.0613],
         [0.7444, 0.0892, 0.0190,  ..., 0.0077, 0.8561, 0.8162],
         [0.1236, 0.5891, 0.0190,  ..., 0.0097, 0.0480, 0.0613]],
        [[0.1188, 0.0305, 0.9571,  ..., 0.9139, 0.0139, 0.0782],
         [0.1188, 0.0305, 0.0143,  ..., 0.0287, 0.0139, 0.0782],
         [0.5243, 0.0305, 0.0143,  ..., 0.0287, 0.0139, 0.6955],
         [0.2381, 0.9086, 0.0143,  ..., 0.0287, 0.9584, 0.1481]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9837, 0.0875, 0.0995,  ..., 0.9622, 0.6545, 0.1053],
         [0.0054, 0.0875, 0.0996,  ..., 0.0126, 0.1809, 0.1268],
         [0.0054, 0.0875, 0.0995,  ..., 0.0126, 0.0823, 0.1053],
         [0.0054, 0.7376, 0.7014,  ..., 0.0126, 0.0823, 0.6625]],
        [[0.8602, 0.0426, 0.0404,  ..., 0.0563, 0.0138, 0.0198],
         [0.0500, 0.0426, 0.0404,  ..., 0.0563, 0.0138, 0.0198],
         [0.0449, 0.0426, 0.0404,  ..., 0.0563, 0.9587, 0.9407],
         [0.0449, 0.8721, 0.8788,  ..., 0.8310, 0.0138, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0351, 0.2404, 0.9558,  ..., 0.9882, 0.0485, 0.0672],
         [0.0351, 0.4515, 0.0147,  ..., 0.0039, 0.0485, 0.0672],
         [0.8946, 0.1100, 0.0147,  ..., 0.0039, 0.8524, 0.7848],
         [0.0351, 0.1980, 0.0147,  ..., 0.0039, 0.0506, 0.0809]],
        [[0.0993, 0.0232, 0.9838,  ..., 0.9299, 0.0138, 0.0473],
         [0.0993, 0.0232, 0.0054,  ..., 0.0234, 0.0138, 0.0473],
         [0.6042, 0.0232, 0.0054,  ..., 0.0234, 0.0138, 0.8482],
         [0.1972, 0.9304, 0.0054,  ..., 0.0234, 0.9587, 0.0571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9585, 0.1011, 0.0620,  ..., 0.9399, 0.5998, 0.1142],
         [0.0138, 0.1063, 0.0620,  ..., 0.0200, 0.2226, 0.1316],
         [0.0138, 0.1052, 0.0620,  ..., 0.0200, 0.0888, 0.1142],
         [0.0138, 0.6873, 0.8139,  ..., 0.0200, 0.0888, 0.6399]],
        [[0.9206, 0.0636, 0.0550,  ..., 0.0611, 0.0185, 0.0347],
         [0.0293, 0.0636, 0.0550,  ..., 0.0611, 0.0185, 0.0347],
         [0.0251, 0.0636, 0.0550,  ..., 0.0611, 0.9444, 0.8959],
         [0.0251, 0.8093, 0.8350,  ..., 0.8166, 0.0185, 0.0347]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:24,038 [Process: 0] Synchronize training processes
2024-08-19 13:13:24,038 [Process: 0] Evaluating...
2024-08-19 13:13:24,040 [Process: 0] EPOCH 79:
2024-08-19 13:13:24,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:25,068 [Process: 0] Synchronize training processes
2024-08-19 13:13:25,068 [Process: 0] Evaluating...
2024-08-19 13:13:25,070 [Process: 0] EPOCH 80:
2024-08-19 13:13:25,072 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0398, 0.2289, 0.9706,  ..., 0.9760, 0.0409, 0.0314],
         [0.0398, 0.5066, 0.0098,  ..., 0.0094, 0.0409, 0.0314],
         [0.8805, 0.1169, 0.0098,  ..., 0.0073, 0.8772, 0.8957],
         [0.0398, 0.1476, 0.0098,  ..., 0.0073, 0.0409, 0.0415]],
        [[0.0315, 0.0152, 0.9133,  ..., 0.8916, 0.0218, 0.0238],
         [0.0315, 0.0152, 0.0292,  ..., 0.0592, 0.0287, 0.0238],
         [0.9055, 0.0152, 0.0279,  ..., 0.0246, 0.0218, 0.9287],
         [0.0315, 0.9543, 0.0296,  ..., 0.0246, 0.9276, 0.0238]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9583, 0.0800, 0.0255,  ..., 0.9156, 0.9638, 0.2101],
         [0.0139, 0.0800, 0.0255,  ..., 0.0271, 0.0130, 0.2824],
         [0.0139, 0.0800, 0.0255,  ..., 0.0302, 0.0116, 0.1807],
         [0.0139, 0.7601, 0.9234,  ..., 0.0271, 0.0116, 0.3269]],
        [[0.2167, 0.0527, 0.0985,  ..., 0.0784, 0.0079, 0.0248],
         [0.2729, 0.0527, 0.0985,  ..., 0.0784, 0.0079, 0.0248],
         [0.2418, 0.0527, 0.6149,  ..., 0.0940, 0.9764, 0.9257],
         [0.2687, 0.8418, 0.1880,  ..., 0.7492, 0.0079, 0.0248]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0399, 0.2214, 0.9532,  ..., 0.9921, 0.0259, 0.0678],
         [0.0399, 0.3774, 0.0156,  ..., 0.0026, 0.0259, 0.0678],
         [0.8803, 0.1409, 0.0156,  ..., 0.0026, 0.9224, 0.7965],
         [0.0399, 0.2603, 0.0156,  ..., 0.0026, 0.0259, 0.0678]],
        [[0.0640, 0.0048, 0.8992,  ..., 0.8482, 0.0564, 0.0567],
         [0.0640, 0.0048, 0.0334,  ..., 0.0751, 0.0564, 0.0567],
         [0.8079, 0.0048, 0.0334,  ..., 0.0384, 0.0564, 0.8262],
         [0.0640, 0.9856, 0.0341,  ..., 0.0384, 0.8307, 0.0603]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:13:26,094 [Process: 0] Synchronize training processes
2024-08-19 13:13:26,095 [Process: 0] Evaluating...
2024-08-19 13:13:26,096 [Process: 0] EPOCH 81:
2024-08-19 13:13:26,098 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:27,122 [Process: 0] Synchronize training processes
2024-08-19 13:13:27,122 [Process: 0] Evaluating...
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8653, 0.0553, 0.0215,  ..., 0.8682, 0.6565, 0.0698],
         [0.0449, 0.0553, 0.0215,  ..., 0.0534, 0.1650, 0.0698],
         [0.0449, 0.0553, 0.0215,  ..., 0.0392, 0.0893, 0.0698],
         [0.0449, 0.8340, 0.9354,  ..., 0.0392, 0.0893, 0.7907]],
        [[0.4982, 0.0430, 0.0644,  ..., 0.0795, 0.0146, 0.0367],
         [0.2157, 0.0430, 0.0644,  ..., 0.0725, 0.0146, 0.0367],
         [0.1602, 0.0430, 0.0644,  ..., 0.0725, 0.9562, 0.8898],
         [0.1259, 0.8710, 0.8067,  ..., 0.7756, 0.0146, 0.0367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0382, 0.2188, 0.9480,  ..., 0.9945, 0.0534, 0.0503],
         [0.0382, 0.3848, 0.0173,  ..., 0.0018, 0.0512, 0.0503],
         [0.8854, 0.1306, 0.0173,  ..., 0.0018, 0.8441, 0.8492],
         [0.0382, 0.2659, 0.0173,  ..., 0.0018, 0.0512, 0.0503]],
        [[0.0540, 0.0057, 0.9645,  ..., 0.9603, 0.0481, 0.0345],
         [0.0540, 0.0057, 0.0118,  ..., 0.0132, 0.0481, 0.0345],
         [0.8380, 0.0057, 0.0118,  ..., 0.0132, 0.0481, 0.8966],
         [0.0540, 0.9828, 0.0118,  ..., 0.0132, 0.8556, 0.0345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9317, 0.0930, 0.0821,  ..., 0.9518, 0.2372, 0.0612],
         [0.0228, 0.0930, 0.0821,  ..., 0.0161, 0.3261, 0.0612],
         [0.0228, 0.0930, 0.0821,  ..., 0.0161, 0.1586, 0.0636],
         [0.0228, 0.7211, 0.7536,  ..., 0.0161, 0.2781, 0.8141]],
        [[0.1521, 0.0213, 0.0406,  ..., 0.0573, 0.0201, 0.0294],
         [0.2034, 0.0213, 0.0406,  ..., 0.0573, 0.0201, 0.0294],
         [0.4394, 0.0213, 0.0406,  ..., 0.0573, 0.9397, 0.9117],
         [0.2051, 0.9361, 0.8783,  ..., 0.8282, 0.0201, 0.0294]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0177, 0.1649, 0.9079,  ..., 0.9537, 0.0523, 0.0436],
         [0.0177, 0.4407, 0.0388,  ..., 0.0127, 0.0523, 0.0436],
         [0.9470, 0.1153, 0.0267,  ..., 0.0127, 0.8432, 0.8693],
         [0.0177, 0.2791, 0.0267,  ..., 0.0209, 0.0523, 0.0436]],
        [[0.1036, 0.0189, 0.9367,  ..., 0.9542, 0.0092, 0.0290],
         [0.1026, 0.0383, 0.0204,  ..., 0.0153, 0.0092, 0.0290],
         [0.7041, 0.0189, 0.0204,  ..., 0.0153, 0.0092, 0.9129],
         [0.0897, 0.9240, 0.0224,  ..., 0.0153, 0.9723, 0.0290]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-19 13:13:27,568 [Process: 0] EPOCH 82:
2024-08-19 13:13:27,570 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:28,586 [Process: 0] Synchronize training processes
2024-08-19 13:13:28,587 [Process: 0] Evaluating...
2024-08-19 13:13:28,589 [Process: 0] EPOCH 83:
2024-08-19 13:13:28,591 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9686, 0.0912, 0.0589,  ..., 0.8726, 0.5845, 0.0718],
         [0.0105, 0.1145, 0.0589,  ..., 0.0518, 0.1572, 0.0718],
         [0.0105, 0.0912, 0.0589,  ..., 0.0378, 0.1477, 0.0718],
         [0.0105, 0.7031, 0.8234,  ..., 0.0378, 0.1105, 0.7847]],
        [[0.1597, 0.0484, 0.0262,  ..., 0.0577, 0.0162, 0.0071],
         [0.2071, 0.0484, 0.0262,  ..., 0.0577, 0.0162, 0.0071],
         [0.4396, 0.0484, 0.0262,  ..., 0.0577, 0.9513, 0.9787],
         [0.1937, 0.8547, 0.9214,  ..., 0.8270, 0.0162, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0391, 0.1384, 0.8672,  ..., 0.7905, 0.0278, 0.0431],
         [0.0391, 0.4664, 0.0443,  ..., 0.1333, 0.0278, 0.0431],
         [0.8828, 0.1077, 0.0443,  ..., 0.0290, 0.9167, 0.8708],
         [0.0391, 0.2875, 0.0443,  ..., 0.0472, 0.0278, 0.0431]],
        [[0.0708, 0.0126, 0.9905,  ..., 0.9236, 0.0175, 0.0433],
         [0.0708, 0.0126, 0.0032,  ..., 0.0255, 0.0175, 0.0433],
         [0.7876, 0.0126, 0.0032,  ..., 0.0255, 0.0175, 0.8701],
         [0.0708, 0.9621, 0.0032,  ..., 0.0255, 0.9476, 0.0433]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8809, 0.0212, 0.0838,  ..., 0.8859, 0.7934, 0.0959],
         [0.0605, 0.0212, 0.0838,  ..., 0.0376, 0.0905, 0.0959],
         [0.0293, 0.0212, 0.0838,  ..., 0.0376, 0.0599, 0.1060],
         [0.0293, 0.9363, 0.7486,  ..., 0.0389, 0.0563, 0.7021]],
        [[0.4338, 0.0713, 0.0267,  ..., 0.0640, 0.0142, 0.0156],
         [0.2664, 0.0713, 0.0267,  ..., 0.0640, 0.0142, 0.0156],
         [0.1703, 0.0801, 0.0267,  ..., 0.0640, 0.9573, 0.9531],
         [0.1296, 0.7774, 0.9198,  ..., 0.8080, 0.0142, 0.0156]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0361, 0.0893, 0.9541,  ..., 0.9934, 0.0597, 0.0483],
         [0.0361, 0.5825, 0.0161,  ..., 0.0029, 0.0597, 0.0483],
         [0.8917, 0.0893, 0.0149,  ..., 0.0019, 0.8210, 0.8552],
         [0.0361, 0.2388, 0.0149,  ..., 0.0019, 0.0597, 0.0483]],
        [[0.0520, 0.0075, 0.9760,  ..., 0.9822, 0.1048, 0.0392],
         [0.0520, 0.0075, 0.0080,  ..., 0.0059, 0.1459, 0.0392],
         [0.8439, 0.0075, 0.0080,  ..., 0.0059, 0.1071, 0.8823],
         [0.0520, 0.9776, 0.0080,  ..., 0.0059, 0.6422, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:29,614 [Process: 0] Synchronize training processes
2024-08-19 13:13:29,615 [Process: 0] Evaluating...
2024-08-19 13:13:29,616 [Process: 0] EPOCH 84:
2024-08-19 13:13:29,618 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:30,651 [Process: 0] Synchronize training processes
2024-08-19 13:13:30,651 [Process: 0] Evaluating...
2024-08-19 13:13:30,653 [Process: 0] EPOCH 85:
2024-08-19 13:13:30,655 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9235, 0.0570, 0.0263,  ..., 0.8437, 0.9856, 0.0592],
         [0.0255, 0.0570, 0.0263,  ..., 0.0616, 0.0048, 0.0592],
         [0.0255, 0.0570, 0.0263,  ..., 0.0474, 0.0048, 0.0592],
         [0.0255, 0.8290, 0.9210,  ..., 0.0474, 0.0048, 0.8223]],
        [[0.8923, 0.0270, 0.0538,  ..., 0.0581, 0.0142, 0.0124],
         [0.0359, 0.0270, 0.0538,  ..., 0.0581, 0.0142, 0.0124],
         [0.0359, 0.0270, 0.0538,  ..., 0.0581, 0.9573, 0.9627],
         [0.0359, 0.9189, 0.8387,  ..., 0.8256, 0.0142, 0.0124]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0339, 0.1902, 0.9766,  ..., 0.9493, 0.0661, 0.0702],
         [0.0339, 0.3978, 0.0078,  ..., 0.0169, 0.0661, 0.0702],
         [0.8983, 0.1387, 0.0078,  ..., 0.0169, 0.8018, 0.7776],
         [0.0339, 0.2734, 0.0078,  ..., 0.0170, 0.0661, 0.0819]],
        [[0.0740, 0.0062, 0.9675,  ..., 0.9914, 0.1486, 0.0478],
         [0.0740, 0.0062, 0.0108,  ..., 0.0029, 0.2189, 0.0478],
         [0.7779, 0.0062, 0.0108,  ..., 0.0029, 0.2758, 0.8565],
         [0.0740, 0.9813, 0.0108,  ..., 0.0029, 0.3567, 0.0478]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8694, 0.0392, 0.0879,  ..., 0.6067, 0.7715, 0.0460],
         [0.0541, 0.0392, 0.1345,  ..., 0.2471, 0.0870, 0.0460],
         [0.0383, 0.0392, 0.0879,  ..., 0.0731, 0.0708, 0.0460],
         [0.0383, 0.8823, 0.6897,  ..., 0.0731, 0.0708, 0.8619]],
        [[0.8622, 0.0419, 0.0380,  ..., 0.0394, 0.0053, 0.0088],
         [0.0410, 0.0419, 0.0380,  ..., 0.0394, 0.0053, 0.0088],
         [0.0558, 0.0419, 0.0380,  ..., 0.0394, 0.9841, 0.9735],
         [0.0410, 0.8742, 0.8859,  ..., 0.8819, 0.0053, 0.0088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-19 13:13:31,678 [Process: 0] Synchronize training processes
2024-08-19 13:13:31,678 [Process: 0] Evaluating...
2024-08-19 13:13:31,680 [Process: 0] EPOCH 86:
2024-08-19 13:13:31,682 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:32,705 [Process: 0] Synchronize training processes
2024-08-19 13:13:32,706 [Process: 0] Evaluating...
2024-08-19 13:13:32,707 [Process: 0] EPOCH 87:
2024-08-19 13:13:32,709 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0237, 0.1190, 0.9498,  ..., 0.9702, 0.0267, 0.0283],
         [0.0237, 0.2016, 0.0167,  ..., 0.0099, 0.0267, 0.0283],
         [0.9290, 0.1093, 0.0167,  ..., 0.0099, 0.9200, 0.9143],
         [0.0237, 0.5700, 0.0167,  ..., 0.0099, 0.0267, 0.0291]],
        [[0.0929, 0.0140, 0.9700,  ..., 0.9203, 0.1235, 0.0441],
         [0.0929, 0.0140, 0.0100,  ..., 0.0282, 0.1235, 0.0441],
         [0.6977, 0.0140, 0.0100,  ..., 0.0257, 0.1556, 0.8676],
         [0.1165, 0.9581, 0.0100,  ..., 0.0257, 0.5973, 0.0441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9649, 0.0209, 0.0527,  ..., 0.9856, 0.7723, 0.0511],
         [0.0117, 0.0209, 0.0527,  ..., 0.0048, 0.0845, 0.0511],
         [0.0117, 0.0209, 0.0527,  ..., 0.0048, 0.0716, 0.0511],
         [0.0117, 0.9372, 0.8418,  ..., 0.0048, 0.0716, 0.8466]],
        [[0.9744, 0.0745, 0.0238,  ..., 0.1070, 0.0071, 0.0064],
         [0.0085, 0.0745, 0.0238,  ..., 0.1657, 0.0071, 0.0064],
         [0.0085, 0.0745, 0.0238,  ..., 0.1070, 0.9786, 0.9809],
         [0.0085, 0.7765, 0.9287,  ..., 0.6204, 0.0071, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0342, 0.0717, 0.9577,  ..., 0.9668, 0.0371, 0.0410],
         [0.0342, 0.2159, 0.0141,  ..., 0.0111, 0.0371, 0.0410],
         [0.8973, 0.0717, 0.0141,  ..., 0.0111, 0.8888, 0.8770],
         [0.0342, 0.6408, 0.0141,  ..., 0.0111, 0.0371, 0.0410]],
        [[0.0690, 0.0090, 0.9359,  ..., 0.9578, 0.0814, 0.0261],
         [0.0690, 0.0090, 0.0265,  ..., 0.0135, 0.0814, 0.0261],
         [0.7929, 0.0090, 0.0188,  ..., 0.0135, 0.0814, 0.9216],
         [0.0690, 0.9730, 0.0188,  ..., 0.0152, 0.7557, 0.0261]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9916, 0.0409, 0.0633,  ..., 0.9707, 0.3108, 0.0708],
         [0.0028, 0.0409, 0.0633,  ..., 0.0096, 0.4602, 0.0708],
         [0.0028, 0.0409, 0.0633,  ..., 0.0102, 0.1149, 0.0744],
         [0.0028, 0.8773, 0.8100,  ..., 0.0096, 0.1141, 0.7840]],
        [[0.9610, 0.0466, 0.0372,  ..., 0.0785, 0.0074, 0.0033],
         [0.0157, 0.0466, 0.0372,  ..., 0.0785, 0.0074, 0.0033],
         [0.0116, 0.0466, 0.0372,  ..., 0.0785, 0.9779, 0.9902],
         [0.0116, 0.8603, 0.8885,  ..., 0.7645, 0.0074, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-19 13:13:33,734 [Process: 0] Synchronize training processes
2024-08-19 13:13:33,734 [Process: 0] Evaluating...
2024-08-19 13:13:33,736 [Process: 0] EPOCH 88:
2024-08-19 13:13:33,738 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:34,775 [Process: 0] Synchronize training processes
2024-08-19 13:13:34,775 [Process: 0] Evaluating...
2024-08-19 13:13:34,777 [Process: 0] EPOCH 89:
2024-08-19 13:13:34,779 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0272, 0.0880, 0.8508,  ..., 0.9807, 0.0577, 0.0503],
         [0.0272, 0.1489, 0.0890,  ..., 0.0064, 0.0577, 0.0503],
         [0.9185, 0.0880, 0.0301,  ..., 0.0064, 0.8245, 0.8491],
         [0.0272, 0.6750, 0.0301,  ..., 0.0064, 0.0601, 0.0503]],
        [[0.0658, 0.0101, 0.9781,  ..., 0.9782, 0.0899, 0.0479],
         [0.0658, 0.0101, 0.0073,  ..., 0.0077, 0.0899, 0.0479],
         [0.7960, 0.0101, 0.0073,  ..., 0.0071, 0.0899, 0.8562],
         [0.0723, 0.9698, 0.0073,  ..., 0.0071, 0.7302, 0.0479]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9786, 0.0916, 0.0880,  ..., 0.9554, 0.9379, 0.0759],
         [0.0071, 0.1699, 0.0918,  ..., 0.0149, 0.0207, 0.0759],
         [0.0071, 0.0916, 0.0880,  ..., 0.0149, 0.0207, 0.0941],
         [0.0071, 0.6468, 0.7323,  ..., 0.0149, 0.0207, 0.7541]],
        [[0.9689, 0.0491, 0.0465,  ..., 0.0486, 0.0044, 0.0070],
         [0.0104, 0.0491, 0.0465,  ..., 0.0486, 0.0044, 0.0070],
         [0.0104, 0.0491, 0.0465,  ..., 0.0486, 0.9868, 0.9789],
         [0.0104, 0.8526, 0.8604,  ..., 0.8543, 0.0044, 0.0070]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0362, 0.1126, 0.9715,  ..., 0.9858, 0.0602, 0.0333],
         [0.0362, 0.1726, 0.0105,  ..., 0.0047, 0.0602, 0.0333],
         [0.8915, 0.1070, 0.0090,  ..., 0.0047, 0.7636, 0.8953],
         [0.0362, 0.6078, 0.0090,  ..., 0.0047, 0.1160, 0.0381]],
        [[0.1122, 0.0779, 0.9287,  ..., 0.9791, 0.1362, 0.0249],
         [0.1037, 0.1892, 0.0238,  ..., 0.0070, 0.1362, 0.0249],
         [0.6359, 0.0779, 0.0238,  ..., 0.0070, 0.1857, 0.9252],
         [0.1483, 0.6550, 0.0238,  ..., 0.0070, 0.5419, 0.0249]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8776, 0.0625, 0.0557,  ..., 0.9424, 0.7984, 0.0418],
         [0.0499, 0.0873, 0.0557,  ..., 0.0192, 0.0720, 0.0418],
         [0.0362, 0.0625, 0.0557,  ..., 0.0192, 0.0648, 0.0418],
         [0.0362, 0.7878, 0.8328,  ..., 0.0192, 0.0648, 0.8745]],
        [[0.9743, 0.0489, 0.0621,  ..., 0.0241, 0.0040, 0.0082],
         [0.0086, 0.0548, 0.0621,  ..., 0.0241, 0.0040, 0.0082],
         [0.0086, 0.0489, 0.0621,  ..., 0.0241, 0.9879, 0.9753],
         [0.0086, 0.8475, 0.8137,  ..., 0.9276, 0.0040, 0.0082]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:35,809 [Process: 0] Synchronize training processes
2024-08-19 13:13:35,809 [Process: 0] Evaluating...
2024-08-19 13:13:35,811 [Process: 0] EPOCH 90:
2024-08-19 13:13:35,813 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:36,837 [Process: 0] Synchronize training processes
2024-08-19 13:13:36,837 [Process: 0] Evaluating...
2024-08-19 13:13:36,839 [Process: 0] EPOCH 91:
2024-08-19 13:13:36,841 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0335, 0.0511, 0.9444,  ..., 0.9891, 0.0571, 0.0593],
         [0.0335, 0.2119, 0.0185,  ..., 0.0036, 0.0571, 0.0593],
         [0.8995, 0.0511, 0.0185,  ..., 0.0036, 0.8184, 0.8220],
         [0.0335, 0.6859, 0.0185,  ..., 0.0036, 0.0673, 0.0593]],
        [[0.1563, 0.0116, 0.9681,  ..., 0.9728, 0.0684, 0.0545],
         [0.1563, 0.0116, 0.0106,  ..., 0.0091, 0.0640, 0.0554],
         [0.3942, 0.0116, 0.0106,  ..., 0.0091, 0.0640, 0.8356],
         [0.2933, 0.9653, 0.0106,  ..., 0.0091, 0.8035, 0.0545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9639, 0.0481, 0.0266,  ..., 0.9602, 0.8955, 0.1029],
         [0.0141, 0.0481, 0.0266,  ..., 0.0133, 0.0412, 0.1083],
         [0.0110, 0.0511, 0.0266,  ..., 0.0133, 0.0316, 0.1029],
         [0.0110, 0.8527, 0.9201,  ..., 0.0133, 0.0316, 0.6860]],
        [[0.9607, 0.0581, 0.1056,  ..., 0.0223, 0.0100, 0.0088],
         [0.0131, 0.0581, 0.1056,  ..., 0.0223, 0.0100, 0.0088],
         [0.0131, 0.0581, 0.1056,  ..., 0.0223, 0.9699, 0.9737],
         [0.0131, 0.8257, 0.6833,  ..., 0.9331, 0.0100, 0.0088]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.2278e-02, 5.3296e-02, 9.8014e-01,  ..., 9.9882e-01,
          4.5360e-02, 4.0006e-02],
         [2.2278e-02, 6.9355e-02, 6.6212e-03,  ..., 3.9478e-04,
          4.5360e-02, 4.0006e-02],
         [9.3317e-01, 5.3296e-02, 6.6212e-03,  ..., 3.9478e-04,
          8.6392e-01, 8.7998e-01],
         [2.2278e-02, 8.2405e-01, 6.6212e-03,  ..., 3.9478e-04,
          4.5360e-02, 4.0006e-02]],
        [[1.5918e-01, 2.2364e-02, 9.6433e-01,  ..., 9.8227e-01,
          7.6116e-03, 2.7399e-02],
         [1.4682e-01, 2.2364e-02, 1.1891e-02,  ..., 5.9085e-03,
          7.6116e-03, 2.7399e-02],
         [4.5496e-01, 2.2364e-02, 1.1891e-02,  ..., 5.9085e-03,
          7.6116e-03, 9.1780e-01],
         [2.3905e-01, 9.3291e-01, 1.1891e-02,  ..., 5.9085e-03,
          9.7717e-01, 2.7399e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9952, 0.0418, 0.0343,  ..., 0.9853, 0.9393, 0.0570],
         [0.0016, 0.0418, 0.0343,  ..., 0.0085, 0.0248, 0.0570],
         [0.0016, 0.0625, 0.0343,  ..., 0.0031, 0.0180, 0.0570],
         [0.0016, 0.8539, 0.8970,  ..., 0.0031, 0.0180, 0.8289]],
        [[0.8516, 0.0418, 0.0544,  ..., 0.0326, 0.0080, 0.0039],
         [0.0594, 0.0418, 0.0544,  ..., 0.0326, 0.0080, 0.0039],
         [0.0445, 0.0418, 0.0544,  ..., 0.0326, 0.9759, 0.9883],
         [0.0445, 0.8746, 0.8368,  ..., 0.9022, 0.0080, 0.0039]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-19 13:13:37,864 [Process: 0] Synchronize training processes
2024-08-19 13:13:37,865 [Process: 0] Evaluating...
2024-08-19 13:13:38,312 [Process: 0] EPOCH 92:
2024-08-19 13:13:38,315 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0295, 0.0761, 0.9920,  ..., 0.9918, 0.0343, 0.0465],
         [0.0295, 0.0488, 0.0027,  ..., 0.0027, 0.0343, 0.0465],
         [0.9116, 0.0488, 0.0027,  ..., 0.0027, 0.8972, 0.8604],
         [0.0295, 0.8264, 0.0027,  ..., 0.0027, 0.0343, 0.0465]],
        [[0.1152, 0.0058, 0.9845,  ..., 0.9446, 0.0271, 0.0303],
         [0.1140, 0.0058, 0.0051,  ..., 0.0185, 0.0271, 0.0303],
         [0.6315, 0.0058, 0.0051,  ..., 0.0185, 0.0271, 0.9091],
         [0.1393, 0.9827, 0.0053,  ..., 0.0185, 0.9187, 0.0303]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9604, 0.0281, 0.0260,  ..., 0.9140, 0.6789, 0.1187],
         [0.0132, 0.0281, 0.0260,  ..., 0.0287, 0.1824, 0.1095],
         [0.0132, 0.0281, 0.0260,  ..., 0.0287, 0.0694, 0.1638],
         [0.0132, 0.9156, 0.9219,  ..., 0.0287, 0.0694, 0.6081]],
        [[0.9632, 0.0346, 0.0561,  ..., 0.0606, 0.0185, 0.0322],
         [0.0123, 0.0346, 0.0556,  ..., 0.0615, 0.0185, 0.0322],
         [0.0123, 0.0346, 0.0556,  ..., 0.0606, 0.9446, 0.9033],
         [0.0123, 0.8963, 0.8327,  ..., 0.8173, 0.0185, 0.0322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0191, 0.0078, 0.9223,  ..., 0.9847, 0.0306, 0.0555],
         [0.0191, 0.0078, 0.0259,  ..., 0.0051, 0.0306, 0.0555],
         [0.9428, 0.0078, 0.0259,  ..., 0.0051, 0.9082, 0.8250],
         [0.0191, 0.9767, 0.0259,  ..., 0.0051, 0.0306, 0.0641]],
        [[0.0763, 0.0151, 0.9726,  ..., 0.8997, 0.1249, 0.0345],
         [0.0763, 0.0151, 0.0091,  ..., 0.0506, 0.1249, 0.0345],
         [0.7265, 0.0151, 0.0091,  ..., 0.0249, 0.2727, 0.8965],
         [0.1209, 0.9547, 0.0091,  ..., 0.0249, 0.4774, 0.0345]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:39,329 [Process: 0] Synchronize training processes
2024-08-19 13:13:39,330 [Process: 0] Evaluating...
2024-08-19 13:13:39,332 [Process: 0] EPOCH 93:
2024-08-19 13:13:39,333 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:40,357 [Process: 0] Synchronize training processes
2024-08-19 13:13:40,357 [Process: 0] Evaluating...
2024-08-19 13:13:40,359 [Process: 0] EPOCH 94:
2024-08-19 13:13:40,360 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9845, 0.0502, 0.0425,  ..., 0.9601, 0.8227, 0.0782],
         [0.0071, 0.0502, 0.0425,  ..., 0.0133, 0.0939, 0.0782],
         [0.0042, 0.0576, 0.0425,  ..., 0.0133, 0.0417, 0.1256],
         [0.0042, 0.8421, 0.8724,  ..., 0.0133, 0.0417, 0.7180]],
        [[0.9416, 0.0355, 0.0417,  ..., 0.0651, 0.0086, 0.0147],
         [0.0195, 0.0355, 0.0417,  ..., 0.0951, 0.0086, 0.0147],
         [0.0195, 0.0355, 0.0417,  ..., 0.0651, 0.9742, 0.9559],
         [0.0195, 0.8935, 0.8748,  ..., 0.7747, 0.0086, 0.0147]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0767, 0.0111, 0.9566,  ..., 0.9394, 0.0240, 0.0329],
         [0.0640, 0.0111, 0.0131,  ..., 0.0202, 0.0240, 0.0332],
         [0.1023, 0.0111, 0.0131,  ..., 0.0202, 0.9281, 0.9011],
         [0.7570, 0.9667, 0.0172,  ..., 0.0202, 0.0240, 0.0329]],
        [[0.0306, 0.0013, 0.9445,  ..., 0.9661, 0.1244, 0.0536],
         [0.0306, 0.0013, 0.0185,  ..., 0.0113, 0.1244, 0.0536],
         [0.9082, 0.0013, 0.0185,  ..., 0.0113, 0.1497, 0.8392],
         [0.0306, 0.9961, 0.0186,  ..., 0.0113, 0.6015, 0.0536]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9013, 0.0454, 0.0417,  ..., 0.9932, 0.7379, 0.0663],
         [0.0339, 0.0454, 0.0417,  ..., 0.0023, 0.1631, 0.0663],
         [0.0324, 0.0454, 0.0417,  ..., 0.0023, 0.0495, 0.0663],
         [0.0324, 0.8639, 0.8749,  ..., 0.0023, 0.0495, 0.8012]],
        [[0.8854, 0.0629, 0.0637,  ..., 0.0832, 0.0085, 0.0146],
         [0.0455, 0.0629, 0.0637,  ..., 0.0832, 0.0096, 0.0146],
         [0.0345, 0.0629, 0.0720,  ..., 0.0832, 0.9735, 0.9563],
         [0.0345, 0.8113, 0.8006,  ..., 0.7503, 0.0085, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0152, 0.0321, 0.9565,  ..., 0.9879, 0.0316, 0.0381],
         [0.0152, 0.0321, 0.0145,  ..., 0.0040, 0.0316, 0.0381],
         [0.9544, 0.0321, 0.0145,  ..., 0.0040, 0.9052, 0.8856],
         [0.0152, 0.9037, 0.0145,  ..., 0.0040, 0.0316, 0.0381]],
        [[0.0231, 0.0427, 0.8727,  ..., 0.9492, 0.0605, 0.0181],
         [0.0231, 0.0488, 0.0727,  ..., 0.0169, 0.0447, 0.0184],
         [0.9307, 0.0427, 0.0273,  ..., 0.0169, 0.0447, 0.9455],
         [0.0231, 0.8657, 0.0273,  ..., 0.0169, 0.8501, 0.0181]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:41,382 [Process: 0] Synchronize training processes
2024-08-19 13:13:41,382 [Process: 0] Evaluating...
2024-08-19 13:13:41,384 [Process: 0] EPOCH 95:
2024-08-19 13:13:41,386 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:42,409 [Process: 0] Synchronize training processes
2024-08-19 13:13:42,410 [Process: 0] Evaluating...
2024-08-19 13:13:42,411 [Process: 0] EPOCH 96:
2024-08-19 13:13:42,413 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9509, 0.0240, 0.1011,  ..., 0.9313, 0.8934, 0.0160],
         [0.0164, 0.0240, 0.0851,  ..., 0.0229, 0.0454, 0.0160],
         [0.0164, 0.0240, 0.1209,  ..., 0.0229, 0.0306, 0.0160],
         [0.0164, 0.9280, 0.6929,  ..., 0.0229, 0.0306, 0.9520]],
        [[0.7126, 0.0485, 0.0534,  ..., 0.1302, 0.0137, 0.0033],
         [0.1342, 0.0485, 0.0506,  ..., 0.1317, 0.0137, 0.0033],
         [0.0773, 0.0485, 0.0506,  ..., 0.1440, 0.9590, 0.9900],
         [0.0759, 0.8545, 0.8453,  ..., 0.5941, 0.0137, 0.0033]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[2.4824e-02, 5.8822e-02, 9.8179e-01,  ..., 9.9765e-01,
          4.5296e-02, 2.5353e-02],
         [2.4824e-02, 5.7011e-01, 5.6830e-03,  ..., 7.8173e-04,
          4.5296e-02, 2.5353e-02],
         [9.2553e-01, 5.8822e-02, 5.6830e-03,  ..., 7.8173e-04,
          8.4619e-01, 9.2394e-01],
         [2.4824e-02, 3.1225e-01, 6.8403e-03,  ..., 7.8173e-04,
          6.3222e-02, 2.5353e-02]],
        [[4.4622e-02, 1.3268e-03, 9.4970e-01,  ..., 9.8574e-01,
          1.8442e-02, 4.8094e-02],
         [4.4622e-02, 1.3268e-03, 1.3826e-02,  ..., 4.7525e-03,
          1.8442e-02, 4.8094e-02],
         [8.5426e-01, 1.3268e-03, 1.3826e-02,  ..., 4.7525e-03,
          1.8442e-02, 8.5259e-01],
         [5.6495e-02, 9.9602e-01, 2.2648e-02,  ..., 4.7525e-03,
          9.4467e-01, 5.1222e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9703, 0.0292, 0.0546,  ..., 0.9130, 0.4442, 0.1030],
         [0.0099, 0.0292, 0.0546,  ..., 0.0354, 0.3622, 0.0754],
         [0.0099, 0.0292, 0.0546,  ..., 0.0258, 0.0968, 0.0948],
         [0.0099, 0.9125, 0.8362,  ..., 0.0258, 0.0968, 0.7267]],
        [[0.9514, 0.0464, 0.0372,  ..., 0.1443, 0.0021, 0.0086],
         [0.0162, 0.0464, 0.0372,  ..., 0.6483, 0.0021, 0.0086],
         [0.0162, 0.0464, 0.0372,  ..., 0.0917, 0.9938, 0.9741],
         [0.0162, 0.8609, 0.8883,  ..., 0.1156, 0.0021, 0.0086]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0333, 0.0583, 0.9618,  ..., 0.9333, 0.0296, 0.0422],
         [0.0333, 0.1018, 0.0127,  ..., 0.0222, 0.0296, 0.0422],
         [0.9001, 0.0583, 0.0127,  ..., 0.0222, 0.9112, 0.8734],
         [0.0333, 0.7816, 0.0127,  ..., 0.0222, 0.0296, 0.0422]],
        [[0.0300, 0.0130, 0.9776,  ..., 0.9724, 0.0107, 0.0150],
         [0.0300, 0.0106, 0.0073,  ..., 0.0092, 0.0107, 0.0150],
         [0.9100, 0.0106, 0.0073,  ..., 0.0092, 0.0107, 0.9550],
         [0.0300, 0.9657, 0.0077,  ..., 0.0092, 0.9680, 0.0150]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:43,437 [Process: 0] Synchronize training processes
2024-08-19 13:13:43,437 [Process: 0] Evaluating...
2024-08-19 13:13:43,439 [Process: 0] EPOCH 97:
2024-08-19 13:13:43,441 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-19 13:13:44,470 [Process: 0] Synchronize training processes
2024-08-19 13:13:44,470 [Process: 0] Evaluating...
2024-08-19 13:13:44,472 [Process: 0] EPOCH 98:
2024-08-19 13:13:44,474 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 207, in train_one_epoch
    if torch.isnan(loss):
KeyboardInterrupt
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9832, 0.0525, 0.0472,  ..., 0.9846, 0.1579, 0.1037],
         [0.0056, 0.0525, 0.0472,  ..., 0.0051, 0.3898, 0.1440],
         [0.0056, 0.0613, 0.0472,  ..., 0.0051, 0.2075, 0.1037],
         [0.0056, 0.8338, 0.8584,  ..., 0.0051, 0.2449, 0.6487]],
        [[0.9563, 0.0294, 0.0312,  ..., 0.0610, 0.0722, 0.1296],
         [0.0183, 0.0294, 0.0312,  ..., 0.0610, 0.0860, 0.1699],
         [0.0127, 0.0294, 0.0312,  ..., 0.0610, 0.7767, 0.5733],
         [0.0127, 0.9117, 0.9063,  ..., 0.8170, 0.0650, 0.1273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0478, 0.0133, 0.9151,  ..., 0.3040, 0.0166, 0.0184],
         [0.0478, 0.0156, 0.0283,  ..., 0.5733, 0.0166, 0.0184],
         [0.8567, 0.0133, 0.0283,  ..., 0.0588, 0.9502, 0.9447],
         [0.0478, 0.9578, 0.0283,  ..., 0.0640, 0.0166, 0.0184]],
        [[0.0150, 0.0248, 0.9818,  ..., 0.9807, 0.0066, 0.0374],
         [0.0150, 0.0309, 0.0061,  ..., 0.0064, 0.0066, 0.0365],
         [0.9549, 0.0248, 0.0061,  ..., 0.0064, 0.0066, 0.8896],
         [0.0150, 0.9194, 0.0061,  ..., 0.0064, 0.9803, 0.0365]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9703, 0.0281, 0.0517,  ..., 0.9720, 0.7377, 0.0606],
         [0.0099, 0.0281, 0.0778,  ..., 0.0093, 0.1416, 0.1121],
         [0.0099, 0.0281, 0.0517,  ..., 0.0093, 0.0604, 0.0606],
         [0.0099, 0.9158, 0.8188,  ..., 0.0093, 0.0604, 0.7667]],
        [[0.9841, 0.0163, 0.0231,  ..., 0.1700, 0.0345, 0.0897],
         [0.0053, 0.0163, 0.0231,  ..., 0.1742, 0.0355, 0.1378],
         [0.0053, 0.0163, 0.0231,  ..., 0.4729, 0.8956, 0.6828],
         [0.0053, 0.9511, 0.9308,  ..., 0.1829, 0.0345, 0.0897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])