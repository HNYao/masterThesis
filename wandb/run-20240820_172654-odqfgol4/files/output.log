2024-08-20 17:26:57,789 [Worker 0] Is distributed: False
2024-08-20 17:26:57,789 [Process: 0] Starting training
2024-08-20 17:26:57,790 [Process: 0] EPOCH 1:
2024-08-20 17:26:57,792 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:26:59,252 [Process: 0] Synchronize training processes
2024-08-20 17:26:59,252 [Process: 0] Evaluating...
[Worker 0] Is distributed: False
[Process: 0] Starting training
[Process: 0] EPOCH 1:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2028, 0.3592, 0.1945,  ..., 0.1251, 0.4740, 0.1963],
         [0.3724, 0.2667, 0.1582,  ..., 0.1394, 0.1753, 0.4111],
         [0.2220, 0.1966, 0.4491,  ..., 0.5495, 0.1753, 0.1963],
         [0.2028, 0.1774, 0.1982,  ..., 0.1860, 0.1753, 0.1963]],
        [[0.3022, 0.1658, 0.5318,  ..., 0.2739, 0.2172, 0.1463],
         [0.1963, 0.4420, 0.0963,  ..., 0.3728, 0.2172, 0.2151],
         [0.1502, 0.2115, 0.0963,  ..., 0.1767, 0.3485, 0.1463],
         [0.3513, 0.1806, 0.2755,  ..., 0.1767, 0.2172, 0.4923]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2603, 0.2483, 0.2055,  ..., 0.3013, 0.2619, 0.1072],
         [0.2818, 0.2790, 0.1898,  ..., 0.2536, 0.2594, 0.1072],
         [0.2252, 0.2253, 0.1297,  ..., 0.2053, 0.1352, 0.1313],
         [0.2327, 0.2474, 0.4750,  ..., 0.2398, 0.3435, 0.6543]],
        [[0.2508, 0.2497, 0.2780,  ..., 0.2924, 0.2560, 0.2173],
         [0.2575, 0.3005, 0.2474,  ..., 0.2551, 0.2206, 0.2195],
         [0.1948, 0.1780, 0.1907,  ..., 0.1911, 0.2039, 0.3459],
         [0.2968, 0.2717, 0.2839,  ..., 0.2614, 0.3195, 0.2173]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:27:01,065 [Process: 0] EPOCH 2:
2024-08-20 17:27:01,070 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 2:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2703, 0.2525, 0.2663,  ..., 0.2926, 0.2694, 0.2951],
         [0.2440, 0.2324, 0.2634,  ..., 0.2523, 0.2712, 0.2382],
         [0.2242, 0.2270, 0.1952,  ..., 0.1901, 0.1970, 0.1985],
         [0.2615, 0.2881, 0.2751,  ..., 0.2650, 0.2624, 0.2682]],
        [[0.0435, 0.2737, 0.2832,  ..., 0.1840, 0.0305, 0.2660],
         [0.0435, 0.2245, 0.2631,  ..., 0.1840, 0.0305, 0.2677],
         [0.8695, 0.2216, 0.1926,  ..., 0.4481, 0.9084, 0.1896],
         [0.0435, 0.2802, 0.2612,  ..., 0.1840, 0.0305, 0.2767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:01,932 [Process: 0] Synchronize training processes
2024-08-20 17:27:01,932 [Process: 0] Evaluating...
2024-08-20 17:27:01,934 [Process: 0] EPOCH 3:
2024-08-20 17:27:01,936 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:02,798 [Process: 0] Synchronize training processes
2024-08-20 17:27:02,799 [Process: 0] Evaluating...
2024-08-20 17:27:02,800 [Process: 0] EPOCH 4:
2024-08-20 17:27:02,802 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2849, 0.2688, 0.2780,  ..., 0.2720, 0.2832, 0.1841],
         [0.2408, 0.2450, 0.2572,  ..., 0.2564, 0.2447, 0.1841],
         [0.2022, 0.2013, 0.1954,  ..., 0.2021, 0.2036, 0.4476],
         [0.2721, 0.2849, 0.2694,  ..., 0.2695, 0.2685, 0.1841]],
        [[0.2688, 0.2743, 0.2620,  ..., 0.2739, 0.2774, 0.2812],
         [0.2469, 0.2481, 0.2592,  ..., 0.2566, 0.2512, 0.2538],
         [0.2173, 0.1940, 0.2060,  ..., 0.1990, 0.2065, 0.1996],
         [0.2669, 0.2835, 0.2728,  ..., 0.2706, 0.2649, 0.2654]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 3:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2740, 0.2712, 0.2786,  ..., 0.2736, 0.2761, 0.2713],
         [0.2474, 0.2427, 0.2395,  ..., 0.2491, 0.2451, 0.2521],
         [0.2047, 0.2109, 0.2110,  ..., 0.2046, 0.2094, 0.2113],
         [0.2739, 0.2753, 0.2709,  ..., 0.2727, 0.2694, 0.2653]],
        [[0.0833, 0.2661, 0.2500,  ..., 0.2677, 0.2453, 0.2720],
         [0.0833, 0.2443, 0.2500,  ..., 0.2433, 0.2667, 0.2437],
         [0.7502, 0.2077, 0.2500,  ..., 0.2051, 0.2364, 0.2102],
         [0.0833, 0.2819, 0.2500,  ..., 0.2840, 0.2515, 0.2742]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2807, 0.2884, 0.2824,  ..., 0.2658, 0.2901, 0.2640],
         [0.2331, 0.2355, 0.2334,  ..., 0.2563, 0.2460, 0.2475],
         [0.2003, 0.1948, 0.2072,  ..., 0.2048, 0.1962, 0.2092],
         [0.2859, 0.2813, 0.2770,  ..., 0.2731, 0.2676, 0.2793]],
        [[0.2741, 0.2829, 0.2838,  ..., 0.2685, 0.2833, 0.2868],
         [0.2454, 0.2448, 0.2385,  ..., 0.2500, 0.2421, 0.2398],
         [0.2094, 0.1981, 0.2004,  ..., 0.2019, 0.1989, 0.2029],
         [0.2711, 0.2742, 0.2773,  ..., 0.2795, 0.2758, 0.2705]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 4:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2664, 0.2940, 0.2860,  ..., 0.2848, 0.2910, 0.2726],
         [0.2544, 0.2353, 0.2334,  ..., 0.2256, 0.2304, 0.2365],
         [0.2097, 0.1940, 0.2105,  ..., 0.2025, 0.2020, 0.2080],
         [0.2695, 0.2767, 0.2700,  ..., 0.2871, 0.2767, 0.2829]],
        [[0.0178, 0.2803, 0.2767,  ..., 0.1872, 0.1758, 0.2887],
         [0.0178, 0.2495, 0.2372,  ..., 0.2192, 0.2178, 0.2365],
         [0.9465, 0.1955, 0.2155,  ..., 0.4064, 0.4306, 0.1991],
         [0.0178, 0.2747, 0.2706,  ..., 0.1872, 0.1758, 0.2757]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:03,657 [Process: 0] Synchronize training processes
2024-08-20 17:27:03,657 [Process: 0] Evaluating...
2024-08-20 17:27:03,659 [Process: 0] EPOCH 5:
2024-08-20 17:27:03,661 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:04,503 [Process: 0] Synchronize training processes
2024-08-20 17:27:04,504 [Process: 0] Evaluating...
2024-08-20 17:27:04,506 [Process: 0] EPOCH 6:
2024-08-20 17:27:04,507 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:05,356 [Process: 0] Synchronize training processes
2024-08-20 17:27:05,356 [Process: 0] Evaluating...
2024-08-20 17:27:05,358 [Process: 0] EPOCH 7:
2024-08-20 17:27:05,360 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3113, 0.3065, 0.2941,  ..., 0.2976, 0.3091, 0.2291],
         [0.2139, 0.2232, 0.2252,  ..., 0.2245, 0.2158, 0.2652],
         [0.1996, 0.1924, 0.2033,  ..., 0.1987, 0.2053, 0.2561],
         [0.2752, 0.2780, 0.2773,  ..., 0.2792, 0.2699, 0.2496]],
        [[0.2872, 0.3058, 0.2932,  ..., 0.2934, 0.3031, 0.2881],
         [0.2098, 0.2143, 0.2157,  ..., 0.2265, 0.2185, 0.2141],
         [0.2098, 0.2079, 0.2039,  ..., 0.2004, 0.1913, 0.2080],
         [0.2931, 0.2719, 0.2871,  ..., 0.2797, 0.2871, 0.2897]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 5:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3029, 0.3095, 0.2890,  ..., 0.2896, 0.2825, 0.3050],
         [0.2165, 0.2183, 0.2102,  ..., 0.2296, 0.2399, 0.2119],
         [0.1945, 0.1934, 0.2102,  ..., 0.2014, 0.2072, 0.2011],
         [0.2862, 0.2789, 0.2907,  ..., 0.2794, 0.2704, 0.2819]],
        [[0.1030, 0.2960, 0.2740,  ..., 0.1286, 0.1965, 0.3077],
         [0.1769, 0.2288, 0.2470,  ..., 0.2112, 0.2376, 0.2253],
         [0.5913, 0.1917, 0.2000,  ..., 0.5009, 0.3580, 0.2011],
         [0.1288, 0.2835, 0.2790,  ..., 0.1593, 0.2078, 0.2659]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3089, 0.3037, 0.3011,  ..., 0.3067, 0.2008, 0.1975],
         [0.2047, 0.2050, 0.2130,  ..., 0.2092, 0.2526, 0.2385],
         [0.2047, 0.2050, 0.2130,  ..., 0.2015, 0.3299, 0.3506],
         [0.2817, 0.2864, 0.2729,  ..., 0.2826, 0.2167, 0.2135]],
        [[0.3283, 0.3064, 0.3146,  ..., 0.3081, 0.3089, 0.2991],
         [0.2010, 0.2178, 0.2006,  ..., 0.2085, 0.2068, 0.2067],
         [0.2010, 0.2178, 0.2006,  ..., 0.2085, 0.2068, 0.2067],
         [0.2697, 0.2579, 0.2841,  ..., 0.2749, 0.2776, 0.2874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 6:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3125, 0.3093, 0.3387,  ..., 0.3112, 0.1639, 0.2432],
         [0.2017, 0.2084, 0.1989,  ..., 0.2084, 0.2296, 0.2391],
         [0.2017, 0.2071, 0.1863,  ..., 0.1969, 0.4340, 0.2601],
         [0.2842, 0.2752, 0.2761,  ..., 0.2835, 0.1725, 0.2576]],
        [[0.2942, 0.3156, 0.3094,  ..., 0.1574, 0.1585, 0.3068],
         [0.2219, 0.2039, 0.2152,  ..., 0.2149, 0.2162, 0.2029],
         [0.2110, 0.1962, 0.1975,  ..., 0.4703, 0.4562, 0.2029],
         [0.2729, 0.2842, 0.2779,  ..., 0.1574, 0.1691, 0.2873]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3212, 0.3397, 0.3582,  ..., 0.3194, 0.2496, 0.2132],
         [0.1977, 0.1850, 0.1848,  ..., 0.2039, 0.2400, 0.2301],
         [0.1977, 0.1850, 0.1821,  ..., 0.2039, 0.2624, 0.3265],
         [0.2834, 0.2903, 0.2749,  ..., 0.2728, 0.2481, 0.2302]],
        [[0.3545, 0.3525, 0.3329,  ..., 0.3185, 0.3369, 0.2699],
         [0.1881, 0.1933, 0.1904,  ..., 0.1949, 0.1838, 0.2367],
         [0.1752, 0.1774, 0.1904,  ..., 0.1949, 0.1838, 0.2320],
         [0.2822, 0.2769, 0.2863,  ..., 0.2917, 0.2955, 0.2614]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 7:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:06,204 [Process: 0] Synchronize training processes
2024-08-20 17:27:06,205 [Process: 0] Evaluating...
2024-08-20 17:27:06,207 [Process: 0] EPOCH 8:
2024-08-20 17:27:06,208 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:07,056 [Process: 0] Synchronize training processes
2024-08-20 17:27:07,057 [Process: 0] Evaluating...
2024-08-20 17:27:07,058 [Process: 0] EPOCH 9:
2024-08-20 17:27:07,060 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3172, 0.3356, 0.3471,  ..., 0.3099, 0.3231, 0.3266],
         [0.2023, 0.2013, 0.1924,  ..., 0.2076, 0.2042, 0.2001],
         [0.2023, 0.1896, 0.1807,  ..., 0.1980, 0.1911, 0.1924],
         [0.2782, 0.2735, 0.2798,  ..., 0.2846, 0.2815, 0.2809]],
        [[0.1159, 0.3072, 0.3209,  ..., 0.1785, 0.1760, 0.3283],
         [0.1227, 0.2058, 0.2027,  ..., 0.1874, 0.2020, 0.2002],
         [0.6455, 0.2058, 0.1944,  ..., 0.4556, 0.4281, 0.1901],
         [0.1159, 0.2812, 0.2820,  ..., 0.1785, 0.1938, 0.2815]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3392, 0.3595, 0.4175,  ..., 0.3558, 0.1430, 0.1419],
         [0.1920, 0.1782, 0.1715,  ..., 0.1940, 0.1627, 0.1591],
         [0.1802, 0.1724, 0.1473,  ..., 0.1815, 0.5443, 0.5571],
         [0.2886, 0.2900, 0.2637,  ..., 0.2688, 0.1500, 0.1419]],
        [[0.3888, 0.3514, 0.3853,  ..., 0.3336, 0.3635, 0.3146],
         [0.1760, 0.1902, 0.1698,  ..., 0.1946, 0.1856, 0.2143],
         [0.1675, 0.1787, 0.1621,  ..., 0.1939, 0.1820, 0.1928],
         [0.2677, 0.2797, 0.2828,  ..., 0.2779, 0.2689, 0.2783]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 8:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3630, 0.3681, 0.3468,  ..., 0.3455, 0.2575, 0.2966],
         [0.1890, 0.1881, 0.1942,  ..., 0.2021, 0.2183, 0.2175],
         [0.1702, 0.1851, 0.1942,  ..., 0.1708, 0.2613, 0.2136],
         [0.2777, 0.2587, 0.2648,  ..., 0.2817, 0.2629, 0.2723]],
        [[0.3828, 0.1982, 0.2325,  ..., 0.3995, 0.1490, 0.3721],
         [0.1823, 0.1999, 0.2104,  ..., 0.1752, 0.1739, 0.1949],
         [0.1603, 0.3721, 0.3222,  ..., 0.1647, 0.5254, 0.1601],
         [0.2745, 0.2297, 0.2349,  ..., 0.2606, 0.1517, 0.2729]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3711, 0.3253, 0.3491,  ..., 0.3517, 0.2643, 0.3126],
         [0.1863, 0.2079, 0.1928,  ..., 0.1921, 0.2159, 0.2098],
         [0.1709, 0.1877, 0.1801,  ..., 0.1784, 0.2505, 0.1990],
         [0.2717, 0.2790, 0.2780,  ..., 0.2779, 0.2692, 0.2787]],
        [[0.3400, 0.3249, 0.3516,  ..., 0.2432, 0.3713, 0.2033],
         [0.2027, 0.2058, 0.1955,  ..., 0.2142, 0.1853, 0.2033],
         [0.1814, 0.2033, 0.1824,  ..., 0.2861, 0.1678, 0.3650],
         [0.2759, 0.2660, 0.2705,  ..., 0.2565, 0.2756, 0.2285]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 9:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3939, 0.3825, 0.3659,  ..., 0.3613, 0.3064, 0.2553],
         [0.1880, 0.1890, 0.1911,  ..., 0.1832, 0.2059, 0.2114],
         [0.1494, 0.1543, 0.1725,  ..., 0.1791, 0.2042, 0.2714],
         [0.2686, 0.2742, 0.2704,  ..., 0.2763, 0.2835, 0.2619]],
        [[0.3875, 0.3582, 0.3764,  ..., 0.1753, 0.0899, 0.2111],
         [0.1897, 0.1931, 0.1807,  ..., 0.1753, 0.0899, 0.2009],
         [0.1570, 0.1790, 0.1731,  ..., 0.4699, 0.7304, 0.3500],
         [0.2658, 0.2697, 0.2697,  ..., 0.1796, 0.0899, 0.2380]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:07,901 [Process: 0] Synchronize training processes
2024-08-20 17:27:07,901 [Process: 0] Evaluating...
2024-08-20 17:27:07,903 [Process: 0] EPOCH 10:
2024-08-20 17:27:07,904 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:08,761 [Process: 0] Synchronize training processes
2024-08-20 17:27:08,762 [Process: 0] Evaluating...
2024-08-20 17:27:08,763 [Process: 0] EPOCH 11:
2024-08-20 17:27:08,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3805, 0.3899, 0.4001,  ..., 0.3676, 0.1841, 0.2261],
         [0.1905, 0.1870, 0.1822,  ..., 0.1914, 0.1841, 0.2075],
         [0.1699, 0.1585, 0.1527,  ..., 0.1719, 0.4477, 0.3231],
         [0.2590, 0.2645, 0.2651,  ..., 0.2691, 0.1841, 0.2433]],
        [[0.3706, 0.3886, 0.3849,  ..., 0.3533, 0.3660, 0.2633],
         [0.1934, 0.1865, 0.1850,  ..., 0.1895, 0.1874, 0.2177],
         [0.1686, 0.1626, 0.1630,  ..., 0.1774, 0.1777, 0.2611],
         [0.2674, 0.2623, 0.2671,  ..., 0.2798, 0.2689, 0.2579]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 10:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3648, 0.3256, 0.3543,  ..., 0.3724, 0.3067, 0.3566],
         [0.1836, 0.2008, 0.1902,  ..., 0.1863, 0.2108, 0.1797],
         [0.1653, 0.1915, 0.1865,  ..., 0.1676, 0.2064, 0.1681],
         [0.2863, 0.2821, 0.2690,  ..., 0.2737, 0.2761, 0.2956]],
        [[0.3457, 0.3402, 0.3732,  ..., 0.1548, 0.1063, 0.3479],
         [0.1888, 0.1947, 0.1746,  ..., 0.1548, 0.1063, 0.1910],
         [0.1888, 0.1846, 0.1645,  ..., 0.5355, 0.6811, 0.1738],
         [0.2767, 0.2805, 0.2877,  ..., 0.1548, 0.1063, 0.2874]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3561, 0.3506, 0.3959,  ..., 0.3843, 0.3705, 0.3268],
         [0.1892, 0.1908, 0.1818,  ..., 0.1820, 0.1838, 0.1964],
         [0.1761, 0.1727, 0.1511,  ..., 0.1676, 0.1718, 0.1964],
         [0.2786, 0.2858, 0.2712,  ..., 0.2661, 0.2739, 0.2804]],
        [[0.3980, 0.3836, 0.3921,  ..., 0.3878, 0.3600, 0.2023],
         [0.1691, 0.1767, 0.1805,  ..., 0.1758, 0.1787, 0.2023],
         [0.1497, 0.1537, 0.1539,  ..., 0.1690, 0.1727, 0.3930],
         [0.2833, 0.2859, 0.2734,  ..., 0.2674, 0.2886, 0.2023]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 11:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3774, 0.3743, 0.3755,  ..., 0.3734, 0.2190, 0.3856],
         [0.1769, 0.1839, 0.1871,  ..., 0.1852, 0.2128, 0.1737],
         [0.1534, 0.1621, 0.1517,  ..., 0.1623, 0.3179, 0.1503],
         [0.2923, 0.2797, 0.2857,  ..., 0.2791, 0.2502, 0.2904]],
        [[0.4071, 0.3277, 0.3792,  ..., 0.1575, 0.0867, 0.3884],
         [0.1743, 0.1958, 0.1845,  ..., 0.1575, 0.0867, 0.1701],
         [0.1487, 0.1843, 0.1777,  ..., 0.5276, 0.7399, 0.1641],
         [0.2700, 0.2922, 0.2585,  ..., 0.1575, 0.0867, 0.2774]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4591, 0.4085, 0.4300,  ..., 0.4494, 0.1904, 0.1950],
         [0.1525, 0.1662, 0.1647,  ..., 0.1678, 0.1904, 0.1950],
         [0.1449, 0.1459, 0.1300,  ..., 0.1266, 0.4287, 0.4149],
         [0.2436, 0.2794, 0.2753,  ..., 0.2562, 0.1904, 0.1950]],
        [[0.4449, 0.3749, 0.4302,  ..., 0.4237, 0.4360, 0.1826],
         [0.1589, 0.1687, 0.1638,  ..., 0.1622, 0.1530, 0.1826],
         [0.1209, 0.1687, 0.1587,  ..., 0.1515, 0.1323, 0.4521],
         [0.2753, 0.2877, 0.2474,  ..., 0.2625, 0.2787, 0.1826]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:09,618 [Process: 0] Synchronize training processes
2024-08-20 17:27:09,618 [Process: 0] Evaluating...
2024-08-20 17:27:11,428 [Process: 0] EPOCH 12:
2024-08-20 17:27:11,433 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
[Process: 0] EPOCH 12:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:12,318 [Process: 0] Synchronize training processes
2024-08-20 17:27:12,319 [Process: 0] Evaluating...
2024-08-20 17:27:12,320 [Process: 0] EPOCH 13:
2024-08-20 17:27:12,322 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:13,173 [Process: 0] Synchronize training processes
2024-08-20 17:27:13,173 [Process: 0] Evaluating...
2024-08-20 17:27:13,175 [Process: 0] EPOCH 14:
2024-08-20 17:27:13,176 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4582, 0.3386, 0.4035,  ..., 0.3921, 0.4241, 0.4048],
         [0.1470, 0.1786, 0.1568,  ..., 0.1613, 0.1611, 0.1703],
         [0.1287, 0.1771, 0.1315,  ..., 0.1537, 0.1390, 0.1492],
         [0.2661, 0.3058, 0.3082,  ..., 0.2929, 0.2758, 0.2757]],
        [[0.3969, 0.2066, 0.3351,  ..., 0.1899, 0.0911, 0.3632],
         [0.1727, 0.2066, 0.1942,  ..., 0.1899, 0.0911, 0.1722],
         [0.1571, 0.3510, 0.1900,  ..., 0.4303, 0.7266, 0.1675],
         [0.2733, 0.2358, 0.2807,  ..., 0.1899, 0.0911, 0.2971]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5332, 0.3839, 0.4171,  ..., 0.3600, 0.1455, 0.2140],
         [0.1185, 0.1742, 0.1541,  ..., 0.1726, 0.1455, 0.2140],
         [0.0990, 0.1527, 0.1395,  ..., 0.1726, 0.5634, 0.3294],
         [0.2492, 0.2891, 0.2893,  ..., 0.2949, 0.1455, 0.2426]],
        [[0.3189, 0.3247, 0.3977,  ..., 0.3742, 0.4135, 0.1630],
         [0.1910, 0.1932, 0.1659,  ..., 0.1676, 0.1491, 0.1630],
         [0.1910, 0.1932, 0.1505,  ..., 0.1568, 0.1355, 0.5111],
         [0.2990, 0.2888, 0.2859,  ..., 0.3014, 0.3020, 0.1630]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 13:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3748, 0.2199, 0.4460,  ..., 0.3739, 0.3427, 0.3398],
         [0.1638, 0.2181, 0.1541,  ..., 0.1772, 0.1753, 0.1727],
         [0.1638, 0.3207, 0.1314,  ..., 0.1772, 0.1727, 0.1714],
         [0.2976, 0.2414, 0.2685,  ..., 0.2717, 0.3093, 0.3162]],
        [[0.3616, 0.3757, 0.3358,  ..., 0.2344, 0.0667, 0.3881],
         [0.1726, 0.1616, 0.1876,  ..., 0.2146, 0.0667, 0.1686],
         [0.1621, 0.1530, 0.1872,  ..., 0.2949, 0.7999, 0.1576],
         [0.3037, 0.3096, 0.2894,  ..., 0.2561, 0.0667, 0.2857]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3024, 0.4611, 0.3060,  ..., 0.3544, 0.1334, 0.1200],
         [0.1979, 0.1290, 0.1991,  ..., 0.1694, 0.1334, 0.1200],
         [0.1979, 0.1290, 0.1991,  ..., 0.1694, 0.5997, 0.6400],
         [0.3017, 0.2809, 0.2958,  ..., 0.3068, 0.1334, 0.1200]],
        [[0.4231, 0.4115, 0.4268,  ..., 0.4918, 0.3907, 0.2038],
         [0.1391, 0.1436, 0.1529,  ..., 0.1192, 0.1668, 0.2038],
         [0.1357, 0.1436, 0.1384,  ..., 0.1077, 0.1649, 0.3887],
         [0.3021, 0.3013, 0.2819,  ..., 0.2813, 0.2776, 0.2038]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 14:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:27:14,022 [Process: 0] Synchronize training processes
2024-08-20 17:27:14,022 [Process: 0] Evaluating...
2024-08-20 17:27:14,024 [Process: 0] EPOCH 15:
2024-08-20 17:27:14,025 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:14,954 [Process: 0] Synchronize training processes
2024-08-20 17:27:14,955 [Process: 0] Evaluating...
2024-08-20 17:27:14,957 [Process: 0] EPOCH 16:
2024-08-20 17:27:14,958 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2873, 0.3955, 0.4245,  ..., 0.3746, 0.3143, 0.3624],
         [0.2045, 0.1579, 0.1423,  ..., 0.1750, 0.1843, 0.1741],
         [0.2125, 0.1571, 0.1258,  ..., 0.1557, 0.1843, 0.1741],
         [0.2957, 0.2895, 0.3074,  ..., 0.2947, 0.3171, 0.2894]],
        [[0.3389, 0.3188, 0.4067,  ..., 0.3791, 0.1214, 0.3701],
         [0.1778, 0.1927, 0.1484,  ..., 0.1560, 0.1214, 0.1539],
         [0.1778, 0.1927, 0.1484,  ..., 0.1466, 0.6357, 0.1399],
         [0.3055, 0.2959, 0.2966,  ..., 0.3183, 0.1214, 0.3361]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2062, 0.5071, 0.4087,  ..., 0.4961, 0.1335, 0.1323],
         [0.2062, 0.1209, 0.1469,  ..., 0.1139, 0.1335, 0.1323],
         [0.3776, 0.1176, 0.1469,  ..., 0.1110, 0.5994, 0.6030],
         [0.2100, 0.2544, 0.2976,  ..., 0.2789, 0.1335, 0.1323]],
        [[0.4225, 0.3414, 0.3816,  ..., 0.4441, 0.3893, 0.2059],
         [0.1458, 0.1792, 0.1662,  ..., 0.1348, 0.1529, 0.2059],
         [0.1458, 0.1792, 0.1662,  ..., 0.1348, 0.1529, 0.3556],
         [0.2858, 0.3001, 0.2861,  ..., 0.2864, 0.3048, 0.2325]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 15:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2869, 0.3680, 0.3436,  ..., 0.4155, 0.3494, 0.5174],
         [0.1974, 0.1755, 0.1792,  ..., 0.1513, 0.1731, 0.1232],
         [0.1974, 0.1683, 0.1792,  ..., 0.1513, 0.1712, 0.1143],
         [0.3183, 0.2882, 0.2980,  ..., 0.2819, 0.3063, 0.2452]],
        [[0.3441, 0.1896, 0.3721,  ..., 0.4164, 0.0518, 0.4227],
         [0.1753, 0.1896, 0.1626,  ..., 0.1497, 0.0545, 0.1461],
         [0.1753, 0.4312, 0.1626,  ..., 0.1461, 0.8418, 0.1461],
         [0.3053, 0.1896, 0.3027,  ..., 0.2878, 0.0518, 0.2852]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2328, 0.5150, 0.4886,  ..., 0.4432, 0.1164, 0.0867],
         [0.2091, 0.1169, 0.1173,  ..., 0.1337, 0.1164, 0.0867],
         [0.2843, 0.1169, 0.1173,  ..., 0.1337, 0.6507, 0.7398],
         [0.2738, 0.2511, 0.2768,  ..., 0.2894, 0.1164, 0.0867]],
        [[0.4034, 0.4179, 0.5142,  ..., 0.4076, 0.4090, 0.1632],
         [0.1460, 0.1416, 0.1163,  ..., 0.1666, 0.1566, 0.1632],
         [0.1440, 0.1413, 0.1163,  ..., 0.1666, 0.1566, 0.5105],
         [0.3067, 0.2992, 0.2532,  ..., 0.2592, 0.2777, 0.1632]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 16:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3493, 0.3136, 0.3495,  ..., 0.3239, 0.3565, 0.3774],
         [0.1773, 0.1892, 0.1820,  ..., 0.1917, 0.1753, 0.1598],
         [0.1773, 0.1892, 0.1820,  ..., 0.1917, 0.1753, 0.1598],
         [0.2961, 0.3080, 0.2864,  ..., 0.2928, 0.2928, 0.3029]],
        [[0.1945, 0.4090, 0.4624,  ..., 0.4201, 0.0716, 0.3971],
         [0.1945, 0.1411, 0.1336,  ..., 0.1479, 0.0716, 0.1559],
         [0.4041, 0.1381, 0.1336,  ..., 0.1468, 0.7852, 0.1559],
         [0.2068, 0.3119, 0.2703,  ..., 0.2852, 0.0716, 0.2911]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:15,928 [Process: 0] Synchronize training processes
2024-08-20 17:27:15,929 [Process: 0] Evaluating...
2024-08-20 17:27:15,930 [Process: 0] EPOCH 17:
2024-08-20 17:27:15,932 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:16,912 [Process: 0] Synchronize training processes
2024-08-20 17:27:16,912 [Process: 0] Evaluating...
2024-08-20 17:27:16,914 [Process: 0] EPOCH 18:
2024-08-20 17:27:16,916 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3494, 0.4613, 0.5265,  ..., 0.5174, 0.1257, 0.1073],
         [0.1590, 0.1305, 0.1047,  ..., 0.1228, 0.1294, 0.1073],
         [0.1590, 0.1305, 0.0914,  ..., 0.1228, 0.6192, 0.6780],
         [0.3326, 0.2776, 0.2773,  ..., 0.2370, 0.1257, 0.1073]],
        [[0.4606, 0.3683, 0.3775,  ..., 0.4258, 0.4548, 0.1767],
         [0.1210, 0.1619, 0.1689,  ..., 0.1328, 0.1285, 0.1767],
         [0.1210, 0.1619, 0.1689,  ..., 0.1328, 0.1285, 0.4700],
         [0.2974, 0.3079, 0.2847,  ..., 0.3086, 0.2882, 0.1767]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 17:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3140, 0.3581, 0.2983,  ..., 0.2898, 0.3656, 0.4003],
         [0.1851, 0.1625, 0.1915,  ..., 0.1909, 0.1630, 0.1543],
         [0.1851, 0.1581, 0.1915,  ..., 0.1909, 0.1630, 0.1543],
         [0.3159, 0.3214, 0.3186,  ..., 0.3285, 0.3084, 0.2911]],
        [[0.2156, 0.4949, 0.5417,  ..., 0.3980, 0.0686, 0.3610],
         [0.2030, 0.1138, 0.1045,  ..., 0.1580, 0.0782, 0.1725],
         [0.3053, 0.1138, 0.1045,  ..., 0.1580, 0.7845, 0.1725],
         [0.2760, 0.2775, 0.2492,  ..., 0.2859, 0.0686, 0.2939]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4264, 0.4743, 0.5517,  ..., 0.5602, 0.1392, 0.1162],
         [0.1509, 0.1294, 0.1151,  ..., 0.1003, 0.1392, 0.1162],
         [0.1509, 0.1294, 0.1151,  ..., 0.1003, 0.5823, 0.6513],
         [0.2718, 0.2669, 0.2182,  ..., 0.2393, 0.1392, 0.1162]],
        [[0.2494, 0.4220, 0.3831,  ..., 0.4479, 0.4445, 0.1695],
         [0.2007, 0.1381, 0.1585,  ..., 0.1279, 0.1421, 0.1695],
         [0.2246, 0.1381, 0.1585,  ..., 0.1279, 0.1421, 0.4914],
         [0.3253, 0.3019, 0.2998,  ..., 0.2964, 0.2712, 0.1695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 18:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2912, 0.3583, 0.3729,  ..., 0.3497, 0.3036, 0.3071],
         [0.2020, 0.1612, 0.1686,  ..., 0.1779, 0.1921, 0.1954],
         [0.2020, 0.1612, 0.1686,  ..., 0.1779, 0.1921, 0.1954],
         [0.3047, 0.3193, 0.2899,  ..., 0.2944, 0.3121, 0.3020]],
        [[0.1906, 0.3650, 0.4444,  ..., 0.4298, 0.0679, 0.2895],
         [0.1906, 0.1660, 0.1333,  ..., 0.1549, 0.0679, 0.1913],
         [0.3864, 0.1660, 0.1304,  ..., 0.1549, 0.7964, 0.1913],
         [0.2325, 0.3030, 0.2919,  ..., 0.2604, 0.0679, 0.3280]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:17,896 [Process: 0] Synchronize training processes
2024-08-20 17:27:17,897 [Process: 0] Evaluating...
2024-08-20 17:27:17,898 [Process: 0] EPOCH 19:
2024-08-20 17:27:17,900 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:18,866 [Process: 0] Synchronize training processes
2024-08-20 17:27:18,866 [Process: 0] Evaluating...
2024-08-20 17:27:18,868 [Process: 0] EPOCH 20:
2024-08-20 17:27:18,869 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4284, 0.4698, 0.6210,  ..., 0.5753, 0.1265, 0.1244],
         [0.1351, 0.1308, 0.0794,  ..., 0.0985, 0.1265, 0.1244],
         [0.1351, 0.1308, 0.0794,  ..., 0.0985, 0.6205, 0.6268],
         [0.3013, 0.2686, 0.2203,  ..., 0.2278, 0.1265, 0.1244]],
        [[0.2720, 0.4127, 0.3676,  ..., 0.4313, 0.3320, 0.1851],
         [0.1970, 0.1396, 0.1520,  ..., 0.1466, 0.1693, 0.1851],
         [0.1978, 0.1338, 0.1520,  ..., 0.1466, 0.1693, 0.4315],
         [0.3333, 0.3139, 0.3285,  ..., 0.2756, 0.3294, 0.1983]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 19:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3699, 0.3381, 0.3863,  ..., 0.4007, 0.4162, 0.4013],
         [0.1607, 0.1716, 0.1581,  ..., 0.1560, 0.1470, 0.1577],
         [0.1607, 0.1716, 0.1581,  ..., 0.1560, 0.1470, 0.1577],
         [0.3088, 0.3186, 0.2974,  ..., 0.2874, 0.2899, 0.2833]],
        [[0.3162, 0.1887, 0.4374,  ..., 0.3823, 0.0834, 0.1963],
         [0.1865, 0.1887, 0.1319,  ..., 0.1594, 0.0834, 0.1963],
         [0.1865, 0.4062, 0.1319,  ..., 0.1594, 0.7499, 0.3359],
         [0.3109, 0.2165, 0.2988,  ..., 0.2990, 0.0834, 0.2715]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4446, 0.6115, 0.5590,  ..., 0.4796, 0.1079, 0.0981],
         [0.1426, 0.0957, 0.0998,  ..., 0.1125, 0.1079, 0.0981],
         [0.1426, 0.0957, 0.0998,  ..., 0.1089, 0.6764, 0.7058],
         [0.2702, 0.1971, 0.2415,  ..., 0.2990, 0.1079, 0.0981]],
        [[0.2786, 0.3891, 0.3618,  ..., 0.5150, 0.4291, 0.1607],
         [0.1819, 0.1479, 0.1640,  ..., 0.1078, 0.1438, 0.1607],
         [0.1819, 0.1479, 0.1640,  ..., 0.1078, 0.1438, 0.5179],
         [0.3576, 0.3151, 0.3102,  ..., 0.2694, 0.2833, 0.1607]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 20:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3880, 0.3893, 0.3721,  ..., 0.3477, 0.3389, 0.3137],
         [0.1525, 0.1562, 0.1579,  ..., 0.1618, 0.1714, 0.1772],
         [0.1525, 0.1562, 0.1579,  ..., 0.1603, 0.1714, 0.1772],
         [0.3070, 0.2982, 0.3120,  ..., 0.3301, 0.3183, 0.3320]],
        [[0.3015, 0.5303, 0.3725,  ..., 0.3626, 0.1043, 0.1519],
         [0.1851, 0.1144, 0.1569,  ..., 0.1596, 0.1043, 0.1529],
         [0.1851, 0.1144, 0.1425,  ..., 0.1596, 0.6870, 0.5432],
         [0.3283, 0.2410, 0.3281,  ..., 0.3183, 0.1043, 0.1519]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:19,895 [Process: 0] Synchronize training processes
2024-08-20 17:27:19,896 [Process: 0] Evaluating...
2024-08-20 17:27:19,897 [Process: 0] EPOCH 21:
2024-08-20 17:27:19,899 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:20,891 [Process: 0] Synchronize training processes
2024-08-20 17:27:20,891 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4967, 0.5117, 0.5514,  ..., 0.5485, 0.0961, 0.1149],
         [0.1185, 0.1133, 0.1126,  ..., 0.1189, 0.0961, 0.1149],
         [0.1185, 0.1133, 0.1126,  ..., 0.1189, 0.7116, 0.6553],
         [0.2662, 0.2618, 0.2234,  ..., 0.2138, 0.0961, 0.1149]],
        [[0.1867, 0.3966, 0.5412,  ..., 0.5254, 0.4574, 0.1226],
         [0.1867, 0.1536, 0.1169,  ..., 0.1183, 0.1335, 0.1226],
         [0.3380, 0.1536, 0.1169,  ..., 0.1183, 0.1335, 0.6322],
         [0.2885, 0.2963, 0.2250,  ..., 0.2381, 0.2756, 0.1226]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 21:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4360, 0.4024, 0.3350,  ..., 0.3989, 0.3528, 0.3652],
         [0.1544, 0.1514, 0.1652,  ..., 0.1543, 0.1640, 0.1662],
         [0.1544, 0.1514, 0.1616,  ..., 0.1543, 0.1640, 0.1662],
         [0.2552, 0.2948, 0.3382,  ..., 0.2925, 0.3193, 0.3024]],
        [[0.3577, 0.4640, 0.5335,  ..., 0.3526, 0.0624, 0.1554],
         [0.1607, 0.1474, 0.1184,  ..., 0.1757, 0.0624, 0.1554],
         [0.1607, 0.1474, 0.1184,  ..., 0.1757, 0.8129, 0.5257],
         [0.3209, 0.2411, 0.2297,  ..., 0.2961, 0.0624, 0.1634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4300, 0.5690, 0.4395,  ..., 0.5307, 0.1035, 0.0448],
         [0.1445, 0.1098, 0.1467,  ..., 0.1195, 0.1035, 0.0448],
         [0.1445, 0.1098, 0.1467,  ..., 0.1195, 0.6894, 0.8657],
         [0.2809, 0.2114, 0.2671,  ..., 0.2304, 0.1035, 0.0448]],
        [[0.1923, 0.4136, 0.4637,  ..., 0.4453, 0.4914, 0.1217],
         [0.1923, 0.1519, 0.1332,  ..., 0.1404, 0.1384, 0.1217],
         [0.2858, 0.1519, 0.1332,  ..., 0.1404, 0.1384, 0.6348],
         [0.3296, 0.2825, 0.2700,  ..., 0.2740, 0.2317, 0.1217]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:27:22,761 [Process: 0] EPOCH 22:
2024-08-20 17:27:22,763 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 22:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5132, 0.2690, 0.2660,  ..., 0.3363, 0.2456, 0.2940],
         [0.1297, 0.1830, 0.1852,  ..., 0.1661, 0.1906, 0.1767],
         [0.1230, 0.1935, 0.1852,  ..., 0.1661, 0.2191, 0.1767],
         [0.2340, 0.3544, 0.3635,  ..., 0.3315, 0.3448, 0.3526]],
        [[0.4311, 0.2823, 0.4148,  ..., 0.4352, 0.0785, 0.1629],
         [0.1559, 0.1860, 0.1561,  ..., 0.1498, 0.0785, 0.1629],
         [0.1559, 0.1860, 0.1561,  ..., 0.1498, 0.7645, 0.4774],
         [0.2571, 0.3457, 0.2730,  ..., 0.2652, 0.0785, 0.1967]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-20 17:27:23,774 [Process: 0] Synchronize training processes
2024-08-20 17:27:23,774 [Process: 0] Evaluating...
2024-08-20 17:27:23,776 [Process: 0] EPOCH 23:
2024-08-20 17:27:23,778 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:24,742 [Process: 0] Synchronize training processes
2024-08-20 17:27:24,742 [Process: 0] Evaluating...
2024-08-20 17:27:24,744 [Process: 0] EPOCH 24:
2024-08-20 17:27:24,746 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2969, 0.6491, 0.4450,  ..., 0.6621, 0.1556, 0.1139],
         [0.1693, 0.0942, 0.1347,  ..., 0.0900, 0.1556, 0.1139],
         [0.1693, 0.0942, 0.1327,  ..., 0.0900, 0.5331, 0.6584],
         [0.3645, 0.1625, 0.2875,  ..., 0.1578, 0.1556, 0.1139]],
        [[0.1764, 0.4495, 0.6261,  ..., 0.5505, 0.4591, 0.1346],
         [0.1764, 0.1369, 0.1046,  ..., 0.1264, 0.1539, 0.1346],
         [0.3172, 0.1369, 0.1046,  ..., 0.1264, 0.1539, 0.5961],
         [0.3300, 0.2767, 0.1647,  ..., 0.1967, 0.2331, 0.1346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 23:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4801, 0.2232, 0.5233,  ..., 0.3547, 0.4587, 0.3529],
         [0.1406, 0.1824, 0.1376,  ..., 0.1583, 0.1507, 0.1640],
         [0.1406, 0.2003, 0.1376,  ..., 0.1583, 0.1507, 0.1640],
         [0.2386, 0.3941, 0.2014,  ..., 0.3287, 0.2399, 0.3191]],
        [[0.4998, 0.3155, 0.3298,  ..., 0.1808, 0.0884, 0.1622],
         [0.1338, 0.1696, 0.1635,  ..., 0.1808, 0.0884, 0.1625],
         [0.1338, 0.1696, 0.1603,  ..., 0.2498, 0.7349, 0.4326],
         [0.2326, 0.3453, 0.3464,  ..., 0.3887, 0.0884, 0.2428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6315, 0.8197, 0.7623,  ..., 0.7134, 0.1219, 0.1244],
         [0.1058, 0.0601, 0.0740,  ..., 0.0955, 0.1219, 0.1244],
         [0.1058, 0.0601, 0.0740,  ..., 0.0955, 0.6344, 0.6269],
         [0.1570, 0.0601, 0.0897,  ..., 0.0955, 0.1219, 0.1244]],
        [[0.1683, 0.1902, 0.2163,  ..., 0.1914, 0.1818, 0.1289],
         [0.1743, 0.1784, 0.1756,  ..., 0.1741, 0.1577, 0.1289],
         [0.2709, 0.1911, 0.1814,  ..., 0.1750, 0.1577, 0.6133],
         [0.3865, 0.4402, 0.4268,  ..., 0.4595, 0.5028, 0.1289]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 24:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2036, 0.2230, 0.1645,  ..., 0.1758, 0.3732, 0.4778],
         [0.1780, 0.1722, 0.1736,  ..., 0.1758, 0.1517, 0.1422],
         [0.1791, 0.1722, 0.2151,  ..., 0.2088, 0.1517, 0.1422],
         [0.4392, 0.4327, 0.4469,  ..., 0.4395, 0.3235, 0.2378]],
        [[0.1731, 0.4709, 0.2975,  ..., 0.1940, 0.0630, 0.1473],
         [0.1731, 0.1399, 0.1698,  ..., 0.1769, 0.0630, 0.1473],
         [0.3998, 0.1399, 0.1698,  ..., 0.1743, 0.8110, 0.5395],
         [0.2540, 0.2493, 0.3629,  ..., 0.4548, 0.0630, 0.1660]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-20 17:27:25,727 [Process: 0] Synchronize training processes
2024-08-20 17:27:25,728 [Process: 0] Evaluating...
2024-08-20 17:27:25,730 [Process: 0] EPOCH 25:
2024-08-20 17:27:25,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:26,708 [Process: 0] Synchronize training processes
2024-08-20 17:27:26,708 [Process: 0] Evaluating...
2024-08-20 17:27:26,710 [Process: 0] EPOCH 26:
2024-08-20 17:27:26,711 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.6839, 0.5279, 0.7045,  ..., 0.7938, 0.1285, 0.0790],
         [0.0929, 0.1335, 0.0913,  ..., 0.0687, 0.1285, 0.0790],
         [0.0876, 0.1335, 0.0913,  ..., 0.0687, 0.6145, 0.7629],
         [0.1356, 0.2050, 0.1129,  ..., 0.0687, 0.1285, 0.0790]],
        [[0.1986, 0.3750, 0.3221,  ..., 0.2949, 0.3555, 0.1231],
         [0.1636, 0.1464, 0.1511,  ..., 0.1649, 0.1476, 0.1231],
         [0.1636, 0.1404, 0.1511,  ..., 0.1649, 0.1476, 0.6306],
         [0.4741, 0.3382, 0.3756,  ..., 0.3753, 0.3494, 0.1231]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 25:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3076, 0.4157, 0.4881,  ..., 0.3267, 0.3166, 0.2659],
         [0.1735, 0.1473, 0.1348,  ..., 0.1683, 0.1785, 0.1782],
         [0.1703, 0.1466, 0.1348,  ..., 0.1683, 0.1785, 0.1697],
         [0.3487, 0.2904, 0.2423,  ..., 0.3368, 0.3264, 0.3862]],
        [[0.2282, 0.3308, 0.3560,  ..., 0.3464, 0.0527, 0.2056],
         [0.1864, 0.1730, 0.1608,  ..., 0.1574, 0.0527, 0.1950],
         [0.1817, 0.1730, 0.1608,  ..., 0.1574, 0.8420, 0.2152],
         [0.4038, 0.3233, 0.3225,  ..., 0.3389, 0.0527, 0.3841]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4306, 0.6660, 0.3556,  ..., 0.5932, 0.0751, 0.0959],
         [0.1483, 0.1010, 0.1606,  ..., 0.1176, 0.0751, 0.0959],
         [0.1483, 0.1010, 0.1606,  ..., 0.1176, 0.7748, 0.7123],
         [0.2727, 0.1319, 0.3233,  ..., 0.1716, 0.0751, 0.0959]],
        [[0.4387, 0.4521, 0.4905,  ..., 0.5029, 0.4808, 0.1041],
         [0.1393, 0.1383, 0.1220,  ..., 0.1271, 0.1435, 0.1041],
         [0.1249, 0.1383, 0.1220,  ..., 0.1271, 0.1435, 0.6878],
         [0.2971, 0.2713, 0.2655,  ..., 0.2429, 0.2322, 0.1041]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 26:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4092, 0.5135, 0.4490,  ..., 0.3436, 0.4091, 0.4561],
         [0.1560, 0.1241, 0.1425,  ..., 0.1602, 0.1543, 0.1412],
         [0.1530, 0.1241, 0.1425,  ..., 0.1602, 0.1543, 0.1402],
         [0.2818, 0.2383, 0.2659,  ..., 0.3359, 0.2822, 0.2624]],
        [[0.2852, 0.3167, 0.3136,  ..., 0.2672, 0.0301, 0.1193],
         [0.1690, 0.1648, 0.1717,  ..., 0.1776, 0.0301, 0.1193],
         [0.1690, 0.1618, 0.1717,  ..., 0.1765, 0.9098, 0.6420],
         [0.3768, 0.3567, 0.3430,  ..., 0.3787, 0.0301, 0.1193]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2877, 0.5174, 0.6543,  ..., 0.6159, 0.0907, 0.0847],
         [0.1564, 0.1281, 0.0953,  ..., 0.1230, 0.0907, 0.0847],
         [0.1541, 0.1281, 0.0953,  ..., 0.1230, 0.7280, 0.7459],
         [0.4018, 0.2263, 0.1551,  ..., 0.1381, 0.0907, 0.0847]],
        [[0.3976, 0.3662, 0.5031,  ..., 0.5613, 0.5391, 0.0871],
         [0.1378, 0.1365, 0.1276,  ..., 0.1168, 0.1278, 0.0871],
         [0.1378, 0.1365, 0.1276,  ..., 0.1109, 0.1105, 0.7386],
         [0.3267, 0.3609, 0.2416,  ..., 0.2110, 0.2226, 0.0871]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:27,699 [Process: 0] Synchronize training processes
2024-08-20 17:27:27,699 [Process: 0] Evaluating...
2024-08-20 17:27:27,701 [Process: 0] EPOCH 27:
2024-08-20 17:27:27,702 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:28,718 [Process: 0] Synchronize training processes
2024-08-20 17:27:28,718 [Process: 0] Evaluating...
2024-08-20 17:27:28,720 [Process: 0] EPOCH 28:
2024-08-20 17:27:28,721 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 27:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3511, 0.3387, 0.3758,  ..., 0.3671, 0.4341, 0.2411],
         [0.1585, 0.1632, 0.1445,  ..., 0.1613, 0.1396, 0.1748],
         [0.1585, 0.1632, 0.1445,  ..., 0.1613, 0.1235, 0.1748],
         [0.3319, 0.3349, 0.3351,  ..., 0.3103, 0.3028, 0.4094]],
        [[0.2082, 0.3053, 0.2676,  ..., 0.2532, 0.0497, 0.0694],
         [0.1778, 0.1579, 0.1672,  ..., 0.1720, 0.0497, 0.0694],
         [0.1778, 0.1559, 0.1663,  ..., 0.1720, 0.8510, 0.7917],
         [0.4361, 0.3809, 0.3989,  ..., 0.4029, 0.0497, 0.0694]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1926, 0.5941, 0.6438,  ..., 0.7465, 0.1460, 0.0932],
         [0.1266, 0.1177, 0.1037,  ..., 0.0791, 0.1460, 0.0932],
         [0.1266, 0.1031, 0.0999,  ..., 0.0760, 0.5516, 0.7203],
         [0.5541, 0.1851, 0.1527,  ..., 0.0985, 0.1565, 0.0932]],
        [[0.3741, 0.3652, 0.3732,  ..., 0.4853, 0.3671, 0.1259],
         [0.1311, 0.1430, 0.1319,  ..., 0.1194, 0.1310, 0.1259],
         [0.1311, 0.1430, 0.1319,  ..., 0.1194, 0.1215, 0.6223],
         [0.3637, 0.3488, 0.3629,  ..., 0.2759, 0.3804, 0.1259]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 28:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3371, 0.3175, 0.3713,  ..., 0.4453, 0.4046, 0.3157],
         [0.1684, 0.1521, 0.1530,  ..., 0.1411, 0.1517, 0.1575],
         [0.1684, 0.1513, 0.1530,  ..., 0.1411, 0.1517, 0.1575],
         [0.3262, 0.3791, 0.3227,  ..., 0.2726, 0.2919, 0.3693]],
        [[0.1934, 0.2924, 0.2116,  ..., 0.3839, 0.0405, 0.0597],
         [0.1754, 0.1694, 0.1860,  ..., 0.1602, 0.0405, 0.0597],
         [0.1799, 0.1694, 0.1983,  ..., 0.1602, 0.8784, 0.8209],
         [0.4513, 0.3688, 0.4041,  ..., 0.2957, 0.0405, 0.0597]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3652, 0.5815, 0.7404,  ..., 0.8391, 0.1010, 0.0995],
         [0.1509, 0.1148, 0.0865,  ..., 0.0536, 0.1010, 0.0995],
         [0.1509, 0.1148, 0.0865,  ..., 0.0536, 0.6970, 0.7015],
         [0.3329, 0.1888, 0.0865,  ..., 0.0536, 0.1010, 0.0995]],
        [[0.3547, 0.2806, 0.5355,  ..., 0.4374, 0.3436, 0.0945],
         [0.1347, 0.1196, 0.1211,  ..., 0.1290, 0.1444, 0.0945],
         [0.1347, 0.1196, 0.1211,  ..., 0.1290, 0.1444, 0.7165],
         [0.3758, 0.4802, 0.2223,  ..., 0.3045, 0.3676, 0.0945]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:29,727 [Process: 0] Synchronize training processes
2024-08-20 17:27:29,728 [Process: 0] Evaluating...
2024-08-20 17:27:29,729 [Process: 0] EPOCH 29:
2024-08-20 17:27:29,731 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:30,761 [Process: 0] Synchronize training processes
2024-08-20 17:27:30,761 [Process: 0] Evaluating...
2024-08-20 17:27:30,763 [Process: 0] EPOCH 30:
2024-08-20 17:27:30,765 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 29:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2179, 0.2030, 0.1844,  ..., 0.2539, 0.3383, 0.1964],
         [0.1595, 0.1634, 0.1567,  ..., 0.1573, 0.1672, 0.1476],
         [0.1595, 0.1634, 0.1567,  ..., 0.1524, 0.1672, 0.1476],
         [0.4632, 0.4702, 0.5023,  ..., 0.4364, 0.3272, 0.5084]],
        [[0.1541, 0.2224, 0.7227,  ..., 0.1759, 0.0458, 0.1058],
         [0.1541, 0.1677, 0.0924,  ..., 0.1759, 0.0458, 0.1058],
         [0.5300, 0.1677, 0.0924,  ..., 0.1763, 0.8627, 0.6827],
         [0.1618, 0.4421, 0.0924,  ..., 0.4719, 0.0458, 0.1058]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2517, 0.7254, 0.7900,  ..., 0.8532, 0.1140, 0.0898],
         [0.1398, 0.0915, 0.0700,  ..., 0.0489, 0.1140, 0.0898],
         [0.1398, 0.0915, 0.0700,  ..., 0.0489, 0.6579, 0.7305],
         [0.4687, 0.0915, 0.0700,  ..., 0.0489, 0.1140, 0.0898]],
        [[0.2910, 0.5306, 0.6010,  ..., 0.6504, 0.6285, 0.1381],
         [0.1396, 0.1276, 0.1233,  ..., 0.1132, 0.1203, 0.1381],
         [0.1396, 0.1276, 0.1233,  ..., 0.1132, 0.1203, 0.5199],
         [0.4298, 0.2141, 0.1525,  ..., 0.1233, 0.1309, 0.2040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 30:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3983, 0.2331, 0.3968,  ..., 0.3965, 0.5150, 0.3236],
         [0.1586, 0.1752, 0.1567,  ..., 0.1653, 0.1329, 0.1719],
         [0.1586, 0.1752, 0.1567,  ..., 0.1653, 0.1329, 0.1719],
         [0.2846, 0.4165, 0.2898,  ..., 0.2729, 0.2193, 0.3325]],
        [[0.0490, 0.3183, 0.3123,  ..., 0.1815, 0.0406, 0.1161],
         [0.0490, 0.1814, 0.1641,  ..., 0.1815, 0.0406, 0.1161],
         [0.8531, 0.1814, 0.1634,  ..., 0.1843, 0.8782, 0.6518],
         [0.0490, 0.3190, 0.3602,  ..., 0.4527, 0.0406, 0.1161]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:27:31,781 [Process: 0] Synchronize training processes
2024-08-20 17:27:31,781 [Process: 0] Evaluating...
2024-08-20 17:27:31,783 [Process: 0] EPOCH 31:
2024-08-20 17:27:31,784 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:32,834 [Process: 0] Synchronize training processes
2024-08-20 17:27:32,835 [Process: 0] Evaluating...
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3891, 0.6779, 0.4403,  ..., 0.6926, 0.0700, 0.0558],
         [0.1508, 0.1074, 0.1593,  ..., 0.1025, 0.0700, 0.0558],
         [0.1508, 0.1074, 0.1593,  ..., 0.1025, 0.7901, 0.8327],
         [0.3093, 0.1074, 0.2412,  ..., 0.1025, 0.0700, 0.0558]],
        [[0.1899, 0.3438, 0.3198,  ..., 0.5966, 0.3356, 0.1104],
         [0.1059, 0.1573, 0.1557,  ..., 0.1324, 0.1412, 0.1104],
         [0.1059, 0.1573, 0.1557,  ..., 0.1324, 0.1412, 0.6688],
         [0.5984, 0.3416, 0.3688,  ..., 0.1385, 0.3821, 0.1104]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 31:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4949, 0.4783, 0.3408,  ..., 0.4905, 0.4957, 0.4194],
         [0.1487, 0.1353, 0.1599,  ..., 0.1534, 0.1437, 0.1464],
         [0.1487, 0.1353, 0.1599,  ..., 0.1534, 0.1437, 0.1464],
         [0.2077, 0.2512, 0.3395,  ..., 0.2027, 0.2169, 0.2878]],
        [[0.1364, 0.3955, 0.1889,  ..., 0.1625, 0.0370, 0.0692],
         [0.1364, 0.1499, 0.1570,  ..., 0.1625, 0.0370, 0.0692],
         [0.5607, 0.1499, 0.1570,  ..., 0.1892, 0.8889, 0.7924],
         [0.1665, 0.3047, 0.4971,  ..., 0.4858, 0.0370, 0.0692]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6522, 0.6590, 0.4811,  ..., 0.6560, 0.0579, 0.1226],
         [0.1159, 0.1137, 0.1372,  ..., 0.1147, 0.0579, 0.1226],
         [0.1159, 0.1137, 0.1372,  ..., 0.1147, 0.8262, 0.6118],
         [0.1159, 0.1137, 0.2444,  ..., 0.1147, 0.0579, 0.1431]],
        [[0.1323, 0.3617, 0.5836,  ..., 0.5593, 0.3091, 0.0636],
         [0.1323, 0.1413, 0.1227,  ..., 0.1469, 0.1587, 0.0636],
         [0.1892, 0.1413, 0.1209,  ..., 0.1469, 0.1587, 0.8091],
         [0.5462, 0.3557, 0.1729,  ..., 0.1469, 0.3735, 0.0636]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:27:34,690 [Process: 0] EPOCH 32:
2024-08-20 17:27:34,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 32:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2621, 0.4095, 0.3652,  ..., 0.3540, 0.6050, 0.1945],
         [0.1602, 0.1750, 0.1537,  ..., 0.1455, 0.1329, 0.1309],
         [0.1602, 0.1750, 0.1537,  ..., 0.1455, 0.1305, 0.1309],
         [0.4175, 0.2405, 0.3275,  ..., 0.3550, 0.1316, 0.5437]],
        [[0.1569, 0.5318, 0.2037,  ..., 0.2101, 0.0763, 0.0775],
         [0.1569, 0.1374, 0.1458,  ..., 0.1420, 0.0763, 0.0775],
         [0.2290, 0.1374, 0.1458,  ..., 0.1420, 0.7711, 0.7675],
         [0.4572, 0.1934, 0.5048,  ..., 0.5060, 0.0763, 0.0775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7246, 0.7298, 0.6462,  ..., 0.5313, 0.0926, 0.0527],
         [0.0918, 0.0901, 0.1179,  ..., 0.1347, 0.0926, 0.0527],
         [0.0918, 0.0901, 0.1179,  ..., 0.1347, 0.7222, 0.8420],
         [0.0918, 0.0901, 0.1179,  ..., 0.1992, 0.0926, 0.0527]],
        [[0.1607, 0.2776, 0.6262,  ..., 0.6481, 0.1401, 0.0817],
         [0.1607, 0.1459, 0.1246,  ..., 0.1154, 0.1195, 0.0817],
         [0.2962, 0.1459, 0.1246,  ..., 0.1154, 0.1195, 0.7548],
         [0.3825, 0.4306, 0.1246,  ..., 0.1211, 0.6209, 0.0817]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:35,732 [Process: 0] Synchronize training processes
2024-08-20 17:27:35,733 [Process: 0] Evaluating...
2024-08-20 17:27:35,734 [Process: 0] EPOCH 33:
2024-08-20 17:27:35,736 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:36,723 [Process: 0] Synchronize training processes
2024-08-20 17:27:36,723 [Process: 0] Evaluating...
2024-08-20 17:27:36,725 [Process: 0] EPOCH 34:
2024-08-20 17:27:36,727 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 33:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7415, 0.4949, 0.7550,  ..., 0.6235, 0.8038, 0.6055],
         [0.0905, 0.1479, 0.0880,  ..., 0.1181, 0.0654, 0.1297],
         [0.0840, 0.1479, 0.0785,  ..., 0.1181, 0.0654, 0.1297],
         [0.0840, 0.2093, 0.0785,  ..., 0.1403, 0.0654, 0.1350]],
        [[0.1636, 0.1523, 0.1452,  ..., 0.1630, 0.0668, 0.1224],
         [0.1636, 0.1523, 0.1452,  ..., 0.1630, 0.0689, 0.1224],
         [0.2979, 0.3758, 0.3246,  ..., 0.3366, 0.7975, 0.6214],
         [0.3748, 0.3195, 0.3849,  ..., 0.3373, 0.0668, 0.1338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4908, 0.7104, 0.1384,  ..., 0.7913, 0.0536, 0.0314],
         [0.1471, 0.0965, 0.1384,  ..., 0.0696, 0.0536, 0.0314],
         [0.1471, 0.0965, 0.1384,  ..., 0.0696, 0.8391, 0.9058],
         [0.2150, 0.0965, 0.5849,  ..., 0.0696, 0.0536, 0.0314]],
        [[0.1470, 0.1725, 0.6911,  ..., 0.7819, 0.1656, 0.0836],
         [0.1470, 0.1212, 0.1030,  ..., 0.0727, 0.1389, 0.0836],
         [0.1508, 0.1212, 0.1030,  ..., 0.0727, 0.1389, 0.7493],
         [0.5553, 0.5850, 0.1030,  ..., 0.0727, 0.5566, 0.0836]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 34:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3398, 0.1660, 0.1801,  ..., 0.5680, 0.3207, 0.2156],
         [0.1601, 0.1660, 0.1533,  ..., 0.1334, 0.1639, 0.1624],
         [0.1601, 0.1660, 0.1533,  ..., 0.1334, 0.1639, 0.1624],
         [0.3401, 0.5021, 0.5133,  ..., 0.1653, 0.3515, 0.4595]],
        [[0.1900, 0.1967, 0.1830,  ..., 0.1888, 0.0481, 0.0838],
         [0.1792, 0.1677, 0.1694,  ..., 0.1785, 0.0481, 0.0838],
         [0.1792, 0.1677, 0.1694,  ..., 0.1785, 0.8556, 0.7487],
         [0.4516, 0.4678, 0.4783,  ..., 0.4542, 0.0481, 0.0838]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2500, 0.8233, 0.1540,  ..., 0.7118, 0.0478, 0.0588],
         [0.1611, 0.0589, 0.1528,  ..., 0.0961, 0.0478, 0.0588],
         [0.1611, 0.0589, 0.1528,  ..., 0.0961, 0.8565, 0.8237],
         [0.4278, 0.0589, 0.5405,  ..., 0.0961, 0.0478, 0.0588]],
        [[0.1724, 0.1927, 0.7432,  ..., 0.6640, 0.1645, 0.1129],
         [0.1724, 0.1675, 0.0856,  ..., 0.1140, 0.1481, 0.1129],
         [0.1724, 0.1675, 0.0856,  ..., 0.1110, 0.1481, 0.6329],
         [0.4827, 0.4722, 0.0856,  ..., 0.1110, 0.5393, 0.1413]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:37,770 [Process: 0] Synchronize training processes
2024-08-20 17:27:37,771 [Process: 0] Evaluating...
2024-08-20 17:27:37,772 [Process: 0] EPOCH 35:
2024-08-20 17:27:37,774 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:38,808 [Process: 0] Synchronize training processes
2024-08-20 17:27:38,808 [Process: 0] Evaluating...
2024-08-20 17:27:38,810 [Process: 0] EPOCH 36:
2024-08-20 17:27:38,811 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 35:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2877, 0.1837, 0.1864,  ..., 0.4268, 0.2551, 0.1727],
         [0.1740, 0.1654, 0.1696,  ..., 0.1372, 0.1683, 0.1727],
         [0.1740, 0.1654, 0.1696,  ..., 0.1372, 0.1683, 0.1727],
         [0.3643, 0.4856, 0.4744,  ..., 0.2989, 0.4083, 0.4819]],
        [[0.2398, 0.1879, 0.2047,  ..., 0.2327, 0.0607, 0.0476],
         [0.1663, 0.1626, 0.1657,  ..., 0.1634, 0.0607, 0.0476],
         [0.1663, 0.1626, 0.1657,  ..., 0.1634, 0.8179, 0.8572],
         [0.4275, 0.4869, 0.4640,  ..., 0.4405, 0.0607, 0.0476]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.6632, 0.6908, 0.1515,  ..., 0.7622, 0.0776, 0.1123],
         [0.1116, 0.1031, 0.1515,  ..., 0.0793, 0.0776, 0.1123],
         [0.1116, 0.1031, 0.1515,  ..., 0.0793, 0.7612, 0.6540],
         [0.1136, 0.1031, 0.5456,  ..., 0.0793, 0.0836, 0.1213]],
        [[0.1630, 0.1430, 0.6476,  ..., 0.2539, 0.1472, 0.0363],
         [0.1630, 0.1430, 0.1165,  ..., 0.1423, 0.1472, 0.0363],
         [0.3757, 0.4883, 0.1165,  ..., 0.1423, 0.4632, 0.8911],
         [0.2983, 0.2258, 0.1194,  ..., 0.4615, 0.2423, 0.0363]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 36:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5643, 0.1867, 0.2133,  ..., 0.7532, 0.3903, 0.1838],
         [0.1303, 0.1682, 0.1776,  ..., 0.0822, 0.1590, 0.1838],
         [0.1303, 0.1682, 0.1776,  ..., 0.0822, 0.1590, 0.2121],
         [0.1752, 0.4769, 0.4315,  ..., 0.0825, 0.2917, 0.4203]],
        [[0.2429, 0.2082, 0.2258,  ..., 0.2277, 0.0910, 0.1396],
         [0.1638, 0.1751, 0.1744,  ..., 0.1626, 0.0910, 0.1396],
         [0.1638, 0.1751, 0.1744,  ..., 0.1626, 0.7179, 0.5404],
         [0.4295, 0.4416, 0.4254,  ..., 0.4471, 0.1000, 0.1805]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-20 17:27:39,847 [Process: 0] Synchronize training processes
2024-08-20 17:27:39,848 [Process: 0] Evaluating...
2024-08-20 17:27:39,850 [Process: 0] EPOCH 37:
2024-08-20 17:27:39,851 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:40,850 [Process: 0] Synchronize training processes
2024-08-20 17:27:40,850 [Process: 0] Evaluating...
2024-08-20 17:27:40,852 [Process: 0] EPOCH 38:
2024-08-20 17:27:40,853 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2575, 0.7090, 0.1532,  ..., 0.7683, 0.0314, 0.0506],
         [0.1712, 0.0970, 0.1532,  ..., 0.0804, 0.0314, 0.0506],
         [0.1712, 0.0970, 0.4060,  ..., 0.0756, 0.9057, 0.8483],
         [0.4000, 0.0970, 0.2875,  ..., 0.0756, 0.0314, 0.0506]],
        [[0.1574, 0.1628, 0.8561,  ..., 0.7778, 0.1163, 0.0672],
         [0.1450, 0.1628, 0.0540,  ..., 0.0741, 0.1163, 0.0672],
         [0.1450, 0.1628, 0.0449,  ..., 0.0741, 0.1163, 0.7985],
         [0.5526, 0.5115, 0.0449,  ..., 0.0741, 0.6510, 0.0672]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 37:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5214, 0.1629, 0.1759,  ..., 0.6545, 0.5999, 0.1737],
         [0.1544, 0.1629, 0.1672,  ..., 0.1144, 0.1274, 0.1737],
         [0.1544, 0.1629, 0.1672,  ..., 0.1144, 0.1274, 0.1865],
         [0.1698, 0.5112, 0.4897,  ..., 0.1167, 0.1452, 0.4660]],
        [[0.2820, 0.1969, 0.1705,  ..., 0.1780, 0.0832, 0.1670],
         [0.1751, 0.1815, 0.1705,  ..., 0.1678, 0.0832, 0.1670],
         [0.1751, 0.1985, 0.1881,  ..., 0.1678, 0.7422, 0.2862],
         [0.3678, 0.4231, 0.4709,  ..., 0.4864, 0.0914, 0.3799]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1412, 0.6292, 0.1481,  ..., 0.6903, 0.0728, 0.0656],
         [0.1374, 0.1168, 0.1481,  ..., 0.1032, 0.0728, 0.0693],
         [0.1374, 0.1168, 0.3493,  ..., 0.1032, 0.7816, 0.7994],
         [0.5839, 0.1372, 0.3545,  ..., 0.1032, 0.0728, 0.0656]],
        [[0.1508, 0.1638, 0.9330,  ..., 0.6585, 0.1531, 0.1452],
         [0.1347, 0.1496, 0.0230,  ..., 0.1124, 0.1437, 0.1452],
         [0.1347, 0.1496, 0.0220,  ..., 0.1124, 0.1437, 0.4477],
         [0.5799, 0.5370, 0.0220,  ..., 0.1167, 0.5595, 0.2619]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 38:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7744, 0.1648, 0.1524,  ..., 0.7578, 0.8097, 0.1659],
         [0.0752, 0.1648, 0.1524,  ..., 0.0807, 0.0634, 0.1659],
         [0.0752, 0.1648, 0.1524,  ..., 0.0807, 0.0634, 0.1772],
         [0.0752, 0.5055, 0.5427,  ..., 0.0807, 0.0634, 0.4910]],
        [[0.2499, 0.1800, 0.1669,  ..., 0.1556, 0.1010, 0.1090],
         [0.1691, 0.1732, 0.1669,  ..., 0.1556, 0.1010, 0.1090],
         [0.1691, 0.2005, 0.2546,  ..., 0.1614, 0.6890, 0.6379],
         [0.4119, 0.4464, 0.4115,  ..., 0.5273, 0.1089, 0.1441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:27:41,839 [Process: 0] Synchronize training processes
2024-08-20 17:27:41,839 [Process: 0] Evaluating...
2024-08-20 17:27:41,841 [Process: 0] EPOCH 39:
2024-08-20 17:27:41,843 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:42,867 [Process: 0] Synchronize training processes
2024-08-20 17:27:42,867 [Process: 0] Evaluating...
2024-08-20 17:27:42,869 [Process: 0] EPOCH 40:
2024-08-20 17:27:42,870 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1622, 0.5800, 0.1714,  ..., 0.8597, 0.0783, 0.0918],
         [0.1622, 0.1286, 0.1714,  ..., 0.0468, 0.0783, 0.0918],
         [0.1622, 0.1286, 0.1714,  ..., 0.0468, 0.7532, 0.7245],
         [0.5135, 0.1628, 0.4858,  ..., 0.0468, 0.0903, 0.0918]],
        [[0.1219, 0.1412, 0.6965,  ..., 0.7678, 0.1079, 0.0648],
         [0.1219, 0.1412, 0.1012,  ..., 0.0774, 0.1079, 0.0648],
         [0.1219, 0.1412, 0.1012,  ..., 0.0774, 0.1079, 0.8057],
         [0.6344, 0.5763, 0.1012,  ..., 0.0774, 0.6764, 0.0648]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 39:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8313, 0.1526, 0.1424,  ..., 0.7220, 0.8652, 0.1484],
         [0.0562, 0.1526, 0.1424,  ..., 0.0927, 0.0449, 0.1484],
         [0.0562, 0.1526, 0.1424,  ..., 0.0927, 0.0449, 0.1484],
         [0.0562, 0.5422, 0.5727,  ..., 0.0927, 0.0449, 0.5549]],
        [[0.2412, 0.1432, 0.1466,  ..., 0.1518, 0.0613, 0.0695],
         [0.1763, 0.1432, 0.1466,  ..., 0.1518, 0.0613, 0.0695],
         [0.1763, 0.1432, 0.4016,  ..., 0.2514, 0.8162, 0.7883],
         [0.4061, 0.5703, 0.3052,  ..., 0.4450, 0.0613, 0.0727]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1570, 0.7332, 0.1212,  ..., 0.7705, 0.0696, 0.0793],
         [0.1570, 0.0889, 0.1212,  ..., 0.0765, 0.0696, 0.0793],
         [0.1570, 0.0889, 0.1212,  ..., 0.0765, 0.7862, 0.7622],
         [0.5290, 0.0889, 0.6364,  ..., 0.0765, 0.0746, 0.0793]],
        [[0.1186, 0.1509, 0.7933,  ..., 0.8233, 0.1311, 0.0714],
         [0.1186, 0.1509, 0.0689,  ..., 0.0589, 0.1311, 0.0714],
         [0.1186, 0.1509, 0.0689,  ..., 0.0589, 0.1311, 0.7802],
         [0.6443, 0.5473, 0.0689,  ..., 0.0589, 0.6067, 0.0771]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 40:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9316, 0.1277, 0.1499,  ..., 0.6990, 0.8255, 0.1333],
         [0.0228, 0.1277, 0.1499,  ..., 0.1003, 0.0582, 0.1333],
         [0.0228, 0.1277, 0.1518,  ..., 0.1003, 0.0582, 0.1333],
         [0.0228, 0.6169, 0.5484,  ..., 0.1003, 0.0582, 0.6000]],
        [[0.2992, 0.1708, 0.1509,  ..., 0.1541, 0.0908, 0.1020],
         [0.1850, 0.1708, 0.1509,  ..., 0.1541, 0.0908, 0.1020],
         [0.1850, 0.1708, 0.2105,  ..., 0.1541, 0.7186, 0.6914],
         [0.3308, 0.4876, 0.4877,  ..., 0.5377, 0.0998, 0.1047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:43,884 [Process: 0] Synchronize training processes
2024-08-20 17:27:43,884 [Process: 0] Evaluating...
2024-08-20 17:27:43,886 [Process: 0] EPOCH 41:
2024-08-20 17:27:43,888 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:44,889 [Process: 0] Synchronize training processes
2024-08-20 17:27:44,889 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0823, 0.7936, 0.9340,  ..., 0.7452, 0.0689, 0.0709],
         [0.0823, 0.0688, 0.0220,  ..., 0.0849, 0.0689, 0.0709],
         [0.0823, 0.0688, 0.0220,  ..., 0.0849, 0.7934, 0.7874],
         [0.7531, 0.0688, 0.0220,  ..., 0.0849, 0.0689, 0.0709]],
        [[0.2697, 0.1537, 0.7570,  ..., 0.8978, 0.0992, 0.0699],
         [0.1626, 0.1537, 0.0810,  ..., 0.0341, 0.0992, 0.0699],
         [0.1626, 0.1537, 0.0810,  ..., 0.0341, 0.0992, 0.7904],
         [0.4050, 0.5388, 0.0810,  ..., 0.0341, 0.7024, 0.0699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 41:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8858, 0.1647, 0.1490,  ..., 0.7755, 0.8895, 0.1476],
         [0.0381, 0.1647, 0.1490,  ..., 0.0748, 0.0368, 0.1476],
         [0.0381, 0.1848, 0.1490,  ..., 0.0748, 0.0368, 0.1476],
         [0.0381, 0.4857, 0.5529,  ..., 0.0748, 0.0368, 0.5572]],
        [[0.1527, 0.1400, 0.1455,  ..., 0.1616, 0.0581, 0.0719],
         [0.1527, 0.1400, 0.1455,  ..., 0.1616, 0.0655, 0.0719],
         [0.1527, 0.1400, 0.1455,  ..., 0.1616, 0.8182, 0.7844],
         [0.5419, 0.5800, 0.5634,  ..., 0.5151, 0.0581, 0.0719]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1612, 0.2480, 0.6701,  ..., 0.7571, 0.0707, 0.0879],
         [0.1612, 0.1731, 0.1100,  ..., 0.0810, 0.0719, 0.0879],
         [0.1612, 0.1731, 0.1100,  ..., 0.0810, 0.7867, 0.7363],
         [0.5163, 0.4058, 0.1100,  ..., 0.0810, 0.0707, 0.0879]],
        [[0.3128, 0.1262, 0.9017,  ..., 0.7245, 0.1569, 0.0626],
         [0.1626, 0.1262, 0.0328,  ..., 0.0918, 0.1569, 0.0626],
         [0.1626, 0.1262, 0.0328,  ..., 0.0918, 0.1569, 0.8122],
         [0.3620, 0.6213, 0.0328,  ..., 0.0918, 0.5293, 0.0626]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:27:46,719 [Process: 0] EPOCH 42:
2024-08-20 17:27:46,723 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 42:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7436, 0.1654, 0.1580,  ..., 0.2072, 0.8824, 0.1688],
         [0.0855, 0.1654, 0.1580,  ..., 0.1594, 0.0392, 0.1688],
         [0.0855, 0.1987, 0.1580,  ..., 0.1594, 0.0392, 0.1688],
         [0.0855, 0.4706, 0.5259,  ..., 0.4740, 0.0392, 0.4937]],
        [[0.1436, 0.1668, 0.1449,  ..., 0.1434, 0.0630, 0.0502],
         [0.1436, 0.1771, 0.1449,  ..., 0.1434, 0.0630, 0.0502],
         [0.1436, 0.1668, 0.1449,  ..., 0.1434, 0.8111, 0.8493],
         [0.5692, 0.4893, 0.5652,  ..., 0.5699, 0.0630, 0.0502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1104, 0.1958, 0.7885,  ..., 0.8349, 0.0869, 0.0860],
         [0.1104, 0.1497, 0.0705,  ..., 0.0550, 0.0964, 0.0860],
         [0.1104, 0.1438, 0.0705,  ..., 0.0550, 0.6998, 0.7420],
         [0.6687, 0.5108, 0.0705,  ..., 0.0550, 0.1169, 0.0860]],
        [[0.0989, 0.1409, 0.6833,  ..., 0.9103, 0.1267, 0.0587],
         [0.0989, 0.1409, 0.1056,  ..., 0.0299, 0.1267, 0.0712],
         [0.0989, 0.1409, 0.1056,  ..., 0.0299, 0.1267, 0.8102],
         [0.7032, 0.5774, 0.1056,  ..., 0.0299, 0.6198, 0.0600]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:47,720 [Process: 0] Synchronize training processes
2024-08-20 17:27:47,721 [Process: 0] Evaluating...
2024-08-20 17:27:47,722 [Process: 0] EPOCH 43:
2024-08-20 17:27:47,724 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:48,769 [Process: 0] Synchronize training processes
2024-08-20 17:27:48,769 [Process: 0] Evaluating...
2024-08-20 17:27:48,771 [Process: 0] EPOCH 44:
2024-08-20 17:27:48,773 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 43:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8746, 0.1128, 0.0998,  ..., 0.7707, 0.7850, 0.1376],
         [0.0418, 0.1128, 0.0998,  ..., 0.0807, 0.0717, 0.1376],
         [0.0418, 0.1128, 0.0998,  ..., 0.0743, 0.0717, 0.1376],
         [0.0418, 0.6615, 0.7006,  ..., 0.0743, 0.0717, 0.5872]],
        [[0.2044, 0.1259, 0.1147,  ..., 0.1453, 0.0513, 0.0651],
         [0.1776, 0.1259, 0.1147,  ..., 0.1453, 0.0527, 0.0651],
         [0.1776, 0.1259, 0.1147,  ..., 0.1453, 0.8446, 0.8046],
         [0.4403, 0.6224, 0.6560,  ..., 0.5641, 0.0513, 0.0651]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5542, 0.1594, 0.6242,  ..., 0.9127, 0.0639, 0.0428],
         [0.1458, 0.1604, 0.1253,  ..., 0.0291, 0.0639, 0.0428],
         [0.1458, 0.1594, 0.1253,  ..., 0.0291, 0.8084, 0.8715],
         [0.1542, 0.5208, 0.1253,  ..., 0.0291, 0.0639, 0.0428]],
        [[0.1226, 0.1126, 0.9192,  ..., 0.8431, 0.1322, 0.0502],
         [0.1226, 0.1126, 0.0269,  ..., 0.0523, 0.1322, 0.0502],
         [0.1226, 0.1126, 0.0269,  ..., 0.0523, 0.1322, 0.8494],
         [0.6323, 0.6623, 0.0269,  ..., 0.0523, 0.6035, 0.0502]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 44:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8757, 0.1653, 0.1309,  ..., 0.7299, 0.8465, 0.1258],
         [0.0414, 0.1804, 0.1309,  ..., 0.0925, 0.0512, 0.1258],
         [0.0414, 0.1719, 0.1309,  ..., 0.0888, 0.0512, 0.1258],
         [0.0414, 0.4824, 0.6072,  ..., 0.0888, 0.0512, 0.6225]],
        [[0.6386, 0.1370, 0.1439,  ..., 0.1496, 0.0374, 0.0445],
         [0.1216, 0.1370, 0.1439,  ..., 0.1496, 0.0374, 0.0445],
         [0.1199, 0.1370, 0.1439,  ..., 0.1496, 0.8878, 0.8665],
         [0.1199, 0.5891, 0.5684,  ..., 0.5511, 0.0374, 0.0445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1791, 0.3396, 0.8361,  ..., 0.7688, 0.0518, 0.0564],
         [0.1568, 0.1700, 0.0546,  ..., 0.0771, 0.0518, 0.0564],
         [0.1568, 0.1700, 0.0546,  ..., 0.0771, 0.8445, 0.8309],
         [0.5073, 0.3204, 0.0546,  ..., 0.0771, 0.0518, 0.0564]],
        [[0.1655, 0.0600, 0.9094,  ..., 0.8615, 0.0968, 0.0450],
         [0.1456, 0.0600, 0.0302,  ..., 0.0462, 0.1058, 0.0450],
         [0.1456, 0.0600, 0.0302,  ..., 0.0462, 0.0968, 0.8650],
         [0.5433, 0.8200, 0.0302,  ..., 0.0462, 0.7006, 0.0450]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:49,771 [Process: 0] Synchronize training processes
2024-08-20 17:27:49,771 [Process: 0] Evaluating...
2024-08-20 17:27:49,773 [Process: 0] EPOCH 45:
2024-08-20 17:27:49,774 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:50,777 [Process: 0] Synchronize training processes
2024-08-20 17:27:50,778 [Process: 0] Evaluating...
2024-08-20 17:27:50,779 [Process: 0] EPOCH 46:
2024-08-20 17:27:50,781 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 45:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8184, 0.1197, 0.1583,  ..., 0.7681, 0.8117, 0.1466],
         [0.0605, 0.1197, 0.1534,  ..., 0.0805, 0.0628, 0.1529],
         [0.0605, 0.1197, 0.1534,  ..., 0.0757, 0.0628, 0.1466],
         [0.0605, 0.6409, 0.5348,  ..., 0.0757, 0.0628, 0.5538]],
        [[0.7422, 0.1632, 0.1576,  ..., 0.1587, 0.0526, 0.0677],
         [0.0859, 0.1632, 0.1576,  ..., 0.1587, 0.0526, 0.0677],
         [0.0859, 0.1632, 0.1576,  ..., 0.1587, 0.8423, 0.7968],
         [0.0859, 0.5105, 0.5271,  ..., 0.5239, 0.0526, 0.0677]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1485, 0.3932, 0.5831,  ..., 0.8904, 0.0796, 0.0881],
         [0.1485, 0.1631, 0.1264,  ..., 0.0365, 0.0796, 0.0881],
         [0.1485, 0.1631, 0.1264,  ..., 0.0365, 0.7613, 0.7318],
         [0.5545, 0.2805, 0.1641,  ..., 0.0365, 0.0796, 0.0920]],
        [[0.0736, 0.0681, 0.8690,  ..., 0.8780, 0.0635, 0.0608],
         [0.0736, 0.0681, 0.0437,  ..., 0.0421, 0.0635, 0.0608],
         [0.0736, 0.0681, 0.0437,  ..., 0.0400, 0.0635, 0.8177],
         [0.7792, 0.7956, 0.0437,  ..., 0.0400, 0.8096, 0.0608]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 46:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9280, 0.1176, 0.1339,  ..., 0.8022, 0.8874, 0.0645],
         [0.0240, 0.1176, 0.1339,  ..., 0.0754, 0.0375, 0.0645],
         [0.0240, 0.1176, 0.1339,  ..., 0.0612, 0.0375, 0.0645],
         [0.0240, 0.6473, 0.5982,  ..., 0.0612, 0.0375, 0.8066]],
        [[0.8885, 0.1532, 0.1625,  ..., 0.1626, 0.0798, 0.0567],
         [0.0372, 0.1532, 0.1625,  ..., 0.1626, 0.0798, 0.0567],
         [0.0372, 0.1740, 0.1923,  ..., 0.2258, 0.7606, 0.8299],
         [0.0372, 0.5196, 0.4828,  ..., 0.4491, 0.0798, 0.0567]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3240, 0.2324, 0.9100,  ..., 0.7416, 0.0701, 0.0477],
         [0.1767, 0.1671, 0.0300,  ..., 0.0861, 0.0701, 0.0477],
         [0.1767, 0.1671, 0.0300,  ..., 0.0861, 0.7882, 0.8569],
         [0.3225, 0.4334, 0.0300,  ..., 0.0861, 0.0717, 0.0477]],
        [[0.1044, 0.0362, 0.8446,  ..., 0.8558, 0.1296, 0.0699],
         [0.1044, 0.0362, 0.0518,  ..., 0.0481, 0.1296, 0.0699],
         [0.1044, 0.0362, 0.0518,  ..., 0.0481, 0.1296, 0.7903],
         [0.6868, 0.8914, 0.0518,  ..., 0.0481, 0.6113, 0.0699]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:27:51,802 [Process: 0] Synchronize training processes
2024-08-20 17:27:51,802 [Process: 0] Evaluating...
2024-08-20 17:27:51,804 [Process: 0] EPOCH 47:
2024-08-20 17:27:51,805 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:52,828 [Process: 0] Synchronize training processes
2024-08-20 17:27:52,829 [Process: 0] Evaluating...
2024-08-20 17:27:52,830 [Process: 0] EPOCH 48:
2024-08-20 17:27:52,832 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 47:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7288, 0.0741, 0.1145,  ..., 0.7317, 0.6888, 0.1092],
         [0.0904, 0.0784, 0.1145,  ..., 0.0894, 0.1037, 0.1092],
         [0.0904, 0.0741, 0.1145,  ..., 0.0894, 0.1037, 0.1092],
         [0.0904, 0.7733, 0.6564,  ..., 0.0894, 0.1037, 0.6725]],
        [[0.5320, 0.1470, 0.1627,  ..., 0.1593, 0.0594, 0.0695],
         [0.1483, 0.1470, 0.1627,  ..., 0.1593, 0.0716, 0.0695],
         [0.1483, 0.1470, 0.1627,  ..., 0.2202, 0.8097, 0.7915],
         [0.1714, 0.5590, 0.5119,  ..., 0.4611, 0.0594, 0.0695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7483, 0.1361, 0.8838,  ..., 0.9115, 0.0796, 0.1057],
         [0.0839, 0.1361, 0.0387,  ..., 0.0295, 0.0796, 0.1057],
         [0.0839, 0.1361, 0.0387,  ..., 0.0295, 0.7611, 0.6596],
         [0.0839, 0.5916, 0.0387,  ..., 0.0295, 0.0796, 0.1290]],
        [[0.1091, 0.0520, 0.8888,  ..., 0.8563, 0.0897, 0.0488],
         [0.1091, 0.0520, 0.0371,  ..., 0.0479, 0.0897, 0.0488],
         [0.1091, 0.0520, 0.0371,  ..., 0.0479, 0.0897, 0.8537],
         [0.6726, 0.8441, 0.0371,  ..., 0.0479, 0.7310, 0.0488]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 48:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8431, 0.0893, 0.1358,  ..., 0.8585, 0.8294, 0.0952],
         [0.0527, 0.1010, 0.1358,  ..., 0.0472, 0.0569, 0.0952],
         [0.0521, 0.0893, 0.1358,  ..., 0.0472, 0.0569, 0.0952],
         [0.0521, 0.7204, 0.5927,  ..., 0.0472, 0.0569, 0.7145]],
        [[0.2805, 0.1646, 0.1750,  ..., 0.1692, 0.0395, 0.0445],
         [0.1808, 0.1646, 0.1750,  ..., 0.1692, 0.0513, 0.0445],
         [0.2107, 0.1721, 0.2656,  ..., 0.2397, 0.8698, 0.8666],
         [0.3280, 0.4986, 0.3844,  ..., 0.4218, 0.0395, 0.0445]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-20 17:27:53,857 [Process: 0] Synchronize training processes
2024-08-20 17:27:53,857 [Process: 0] Evaluating...
2024-08-20 17:27:53,859 [Process: 0] EPOCH 49:
2024-08-20 17:27:53,860 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:54,909 [Process: 0] Synchronize training processes
2024-08-20 17:27:54,910 [Process: 0] Evaluating...
2024-08-20 17:27:54,911 [Process: 0] EPOCH 50:
2024-08-20 17:27:54,913 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[0.2057, 0.3204, 0.8230,  ..., 0.9155, 0.0939, 0.0438],
         [0.1458, 0.1601, 0.0590,  ..., 0.0282, 0.0939, 0.0515],
         [0.1458, 0.1601, 0.0590,  ..., 0.0282, 0.7061, 0.8608],
         [0.5027, 0.3594, 0.0590,  ..., 0.0282, 0.1062, 0.0438]],
        [[0.1080, 0.0663, 0.8901,  ..., 0.8312, 0.0740, 0.0905],
         [0.1080, 0.0663, 0.0366,  ..., 0.0563, 0.0740, 0.0905],
         [0.1080, 0.0663, 0.0366,  ..., 0.0563, 0.0740, 0.7226],
         [0.6761, 0.8011, 0.0366,  ..., 0.0563, 0.7780, 0.0964]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 49:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8465, 0.1532, 0.1166,  ..., 0.8323, 0.8118, 0.0801],
         [0.0512, 0.1532, 0.1166,  ..., 0.0559, 0.0627, 0.0801],
         [0.0512, 0.2476, 0.1166,  ..., 0.0559, 0.0627, 0.0801],
         [0.0512, 0.4460, 0.6502,  ..., 0.0559, 0.0627, 0.7598]],
        [[0.4028, 0.1224, 0.1187,  ..., 0.1372, 0.0806, 0.0775],
         [0.1702, 0.1224, 0.1187,  ..., 0.1372, 0.0806, 0.0775],
         [0.1739, 0.1224, 0.1187,  ..., 0.1372, 0.7581, 0.7675],
         [0.2531, 0.6327, 0.6440,  ..., 0.5883, 0.0806, 0.0775]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1700, 0.3782, 0.8514,  ..., 0.8873, 0.0615, 0.0479],
         [0.1342, 0.1608, 0.0495,  ..., 0.0376, 0.0615, 0.0479],
         [0.1342, 0.1608, 0.0495,  ..., 0.0376, 0.8154, 0.8563],
         [0.5617, 0.3001, 0.0495,  ..., 0.0376, 0.0615, 0.0479]],
        [[0.0275, 0.0375, 0.8027,  ..., 0.6650, 0.0276, 0.0630],
         [0.0275, 0.0375, 0.0658,  ..., 0.1026, 0.0276, 0.0630],
         [0.0275, 0.0375, 0.0658,  ..., 0.1026, 0.0276, 0.8110],
         [0.9176, 0.8876, 0.0658,  ..., 0.1297, 0.9172, 0.0630]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 50:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8931, 0.0778, 0.1091,  ..., 0.7626, 0.8354, 0.1234],
         [0.0356, 0.0778, 0.1140,  ..., 0.0791, 0.0549, 0.1234],
         [0.0356, 0.0778, 0.1027,  ..., 0.0791, 0.0549, 0.1234],
         [0.0356, 0.7665, 0.6742,  ..., 0.0791, 0.0549, 0.6299]],
        [[0.7103, 0.1837, 0.1311,  ..., 0.1690, 0.0683, 0.1723],
         [0.0966, 0.1787, 0.1311,  ..., 0.1572, 0.0683, 0.1611],
         [0.0966, 0.1809, 0.1311,  ..., 0.1572, 0.7952, 0.4481],
         [0.0966, 0.4567, 0.6067,  ..., 0.5166, 0.0683, 0.2185]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-20 17:27:55,929 [Process: 0] Synchronize training processes
2024-08-20 17:27:55,930 [Process: 0] Evaluating...
2024-08-20 17:27:55,931 [Process: 0] EPOCH 51:
2024-08-20 17:27:55,933 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:27:56,949 [Process: 0] Synchronize training processes
2024-08-20 17:27:56,950 [Process: 0] Evaluating...
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3939, 0.2294, 0.8105,  ..., 0.9114, 0.0590, 0.0482],
         [0.1614, 0.1446, 0.0632,  ..., 0.0295, 0.0590, 0.0482],
         [0.1614, 0.1446, 0.0632,  ..., 0.0295, 0.8230, 0.8555],
         [0.2834, 0.4815, 0.0632,  ..., 0.0295, 0.0590, 0.0482]],
        [[0.1179, 0.0977, 0.8536,  ..., 0.8801, 0.0534, 0.0405],
         [0.1179, 0.0977, 0.0488,  ..., 0.0456, 0.0534, 0.0405],
         [0.1179, 0.0977, 0.0488,  ..., 0.0372, 0.0534, 0.8786],
         [0.6463, 0.7070, 0.0488,  ..., 0.0372, 0.8398, 0.0405]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 51:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8836, 0.1207, 0.1300,  ..., 0.8367, 0.8362, 0.1104],
         [0.0388, 0.1207, 0.1300,  ..., 0.0544, 0.0546, 0.1104],
         [0.0388, 0.1207, 0.1300,  ..., 0.0544, 0.0546, 0.1104],
         [0.0388, 0.6380, 0.6099,  ..., 0.0544, 0.0546, 0.6687]],
        [[0.8622, 0.1156, 0.1323,  ..., 0.1546, 0.0354, 0.0790],
         [0.0459, 0.1156, 0.1323,  ..., 0.1546, 0.0354, 0.0790],
         [0.0459, 0.1156, 0.1323,  ..., 0.1546, 0.8939, 0.7631],
         [0.0459, 0.6533, 0.6031,  ..., 0.5361, 0.0354, 0.0790]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2779, 0.1863, 0.8957,  ..., 0.9157, 0.0441, 0.0379],
         [0.1664, 0.1494, 0.0348,  ..., 0.0281, 0.0441, 0.0379],
         [0.1664, 0.1494, 0.0348,  ..., 0.0281, 0.8678, 0.8864],
         [0.3893, 0.5150, 0.0348,  ..., 0.0281, 0.0441, 0.0379]],
        [[0.0513, 0.0329, 0.9245,  ..., 0.9676, 0.0790, 0.0372],
         [0.0513, 0.0329, 0.0252,  ..., 0.0108, 0.0796, 0.0372],
         [0.0513, 0.0329, 0.0252,  ..., 0.0108, 0.0790, 0.8884],
         [0.8460, 0.9012, 0.0252,  ..., 0.0108, 0.7624, 0.0372]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:27:58,824 [Process: 0] EPOCH 52:
2024-08-20 17:27:58,825 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 52:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9182, 0.1350, 0.0799,  ..., 0.8627, 0.8721, 0.1620],
         [0.0274, 0.1364, 0.0799,  ..., 0.0458, 0.0426, 0.1620],
         [0.0272, 0.1350, 0.0799,  ..., 0.0458, 0.0426, 0.1710],
         [0.0272, 0.5936, 0.7603,  ..., 0.0458, 0.0426, 0.5051]],
        [[0.6756, 0.1836, 0.1150,  ..., 0.1377, 0.0395, 0.0571],
         [0.1081, 0.1587, 0.1150,  ..., 0.1377, 0.0395, 0.0571],
         [0.1081, 0.2406, 0.1150,  ..., 0.1698, 0.8814, 0.8287],
         [0.1081, 0.4171, 0.6550,  ..., 0.5547, 0.0395, 0.0571]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:27:59,906 [Process: 0] Synchronize training processes
2024-08-20 17:27:59,907 [Process: 0] Evaluating...
2024-08-20 17:27:59,908 [Process: 0] EPOCH 53:
2024-08-20 17:27:59,910 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:00,922 [Process: 0] Synchronize training processes
2024-08-20 17:28:00,923 [Process: 0] Evaluating...
2024-08-20 17:28:00,924 [Process: 0] EPOCH 54:
2024-08-20 17:28:00,926 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1220, 0.2167, 0.9292,  ..., 0.9479, 0.0444, 0.0473],
         [0.1220, 0.1771, 0.0236,  ..., 0.0174, 0.0444, 0.0473],
         [0.1220, 0.1771, 0.0236,  ..., 0.0174, 0.8667, 0.8580],
         [0.6339, 0.4291, 0.0236,  ..., 0.0174, 0.0444, 0.0473]],
        [[0.0264, 0.0615, 0.8616,  ..., 0.8112, 0.0624, 0.0471],
         [0.0264, 0.0615, 0.0468,  ..., 0.0629, 0.0624, 0.0471],
         [0.0264, 0.0615, 0.0458,  ..., 0.0629, 0.0624, 0.8588],
         [0.9207, 0.8156, 0.0458,  ..., 0.0629, 0.8128, 0.0471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 53:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8871, 0.1095, 0.1202,  ..., 0.8521, 0.9048, 0.1074],
         [0.0377, 0.1095, 0.1202,  ..., 0.0493, 0.0317, 0.1082],
         [0.0376, 0.1095, 0.1202,  ..., 0.0493, 0.0317, 0.1074],
         [0.0376, 0.6715, 0.6395,  ..., 0.0493, 0.0317, 0.6771]],
        [[0.6654, 0.1430, 0.1535,  ..., 0.1549, 0.0463, 0.0218],
         [0.1115, 0.1430, 0.1535,  ..., 0.1549, 0.0463, 0.0218],
         [0.1115, 0.1458, 0.1535,  ..., 0.1924, 0.8612, 0.9345],
         [0.1115, 0.5682, 0.5395,  ..., 0.4977, 0.0463, 0.0218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1139, 0.1287, 0.9306,  ..., 0.9584, 0.0486, 0.0531],
         [0.1139, 0.1287, 0.0231,  ..., 0.0139, 0.0486, 0.0531],
         [0.1139, 0.1287, 0.0231,  ..., 0.0139, 0.8541, 0.8408],
         [0.6582, 0.6140, 0.0231,  ..., 0.0139, 0.0486, 0.0531]],
        [[0.0522, 0.0493, 0.7180,  ..., 0.9015, 0.0813, 0.0589],
         [0.0522, 0.0493, 0.0940,  ..., 0.0328, 0.0813, 0.0576],
         [0.0522, 0.0493, 0.0940,  ..., 0.0328, 0.0813, 0.8260],
         [0.8434, 0.8520, 0.0940,  ..., 0.0328, 0.7560, 0.0576]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 54:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8992, 0.0891, 0.1275,  ..., 0.8093, 0.8245, 0.1300],
         [0.0336, 0.0891, 0.1275,  ..., 0.0636, 0.0585, 0.1300],
         [0.0336, 0.0891, 0.1275,  ..., 0.0636, 0.0585, 0.1300],
         [0.0336, 0.7327, 0.6175,  ..., 0.0636, 0.0585, 0.6100]],
        [[0.8544, 0.1143, 0.1349,  ..., 0.1443, 0.0172, 0.0295],
         [0.0485, 0.1143, 0.1349,  ..., 0.1443, 0.0172, 0.0295],
         [0.0485, 0.1143, 0.1761,  ..., 0.2518, 0.9485, 0.9114],
         [0.0485, 0.6570, 0.5541,  ..., 0.4597, 0.0172, 0.0295]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:28:01,931 [Process: 0] Synchronize training processes
2024-08-20 17:28:01,931 [Process: 0] Evaluating...
2024-08-20 17:28:01,933 [Process: 0] EPOCH 55:
2024-08-20 17:28:01,935 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:02,958 [Process: 0] Synchronize training processes
2024-08-20 17:28:02,959 [Process: 0] Evaluating...
2024-08-20 17:28:02,961 [Process: 0] EPOCH 56:
2024-08-20 17:28:02,962 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5319, 0.1263, 0.9085,  ..., 0.9473, 0.0450, 0.0540],
         [0.1364, 0.1263, 0.0305,  ..., 0.0176, 0.0450, 0.0540],
         [0.1364, 0.1263, 0.0305,  ..., 0.0176, 0.8651, 0.8381],
         [0.1953, 0.6211, 0.0305,  ..., 0.0176, 0.0450, 0.0540]],
        [[0.0339, 0.0454, 0.8627,  ..., 0.8593, 0.0229, 0.0731],
         [0.0339, 0.0454, 0.0458,  ..., 0.0469, 0.0229, 0.0731],
         [0.0339, 0.0454, 0.0458,  ..., 0.0469, 0.0229, 0.7806],
         [0.8984, 0.8637, 0.0458,  ..., 0.0469, 0.9312, 0.0731]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 55:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9278, 0.1228, 0.1025,  ..., 0.8721, 0.8379, 0.1275],
         [0.0241, 0.1228, 0.1064,  ..., 0.0426, 0.0540, 0.1275],
         [0.0241, 0.1228, 0.1025,  ..., 0.0426, 0.0540, 0.1275],
         [0.0241, 0.6317, 0.6887,  ..., 0.0426, 0.0540, 0.6176]],
        [[0.8804, 0.1110, 0.1550,  ..., 0.1450, 0.0271, 0.0539],
         [0.0399, 0.1110, 0.1550,  ..., 0.1450, 0.0271, 0.0539],
         [0.0399, 0.1110, 0.1758,  ..., 0.1450, 0.9186, 0.8383],
         [0.0399, 0.6670, 0.5142,  ..., 0.5649, 0.0271, 0.0539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2764, 0.1216, 0.8785,  ..., 0.9072, 0.0696, 0.0697],
         [0.1591, 0.1216, 0.0405,  ..., 0.0309, 0.0696, 0.0697],
         [0.1591, 0.1216, 0.0405,  ..., 0.0309, 0.7865, 0.7908],
         [0.4053, 0.6353, 0.0405,  ..., 0.0309, 0.0742, 0.0697]],
        [[0.0481, 0.0261, 0.9093,  ..., 0.8517, 0.0745, 0.0441],
         [0.0481, 0.0261, 0.0302,  ..., 0.0494, 0.0745, 0.0441],
         [0.0481, 0.0261, 0.0302,  ..., 0.0494, 0.0745, 0.8677],
         [0.8557, 0.9217, 0.0302,  ..., 0.0494, 0.7764, 0.0441]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 56:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7612, 0.0770, 0.0973,  ..., 0.9058, 0.9438, 0.0725],
         [0.0796, 0.0770, 0.0973,  ..., 0.0314, 0.0187, 0.0725],
         [0.0796, 0.0770, 0.0973,  ..., 0.0314, 0.0187, 0.0725],
         [0.0796, 0.7689, 0.7081,  ..., 0.0314, 0.0187, 0.7825]],
        [[0.8213, 0.1266, 0.0944,  ..., 0.1455, 0.0121, 0.1249],
         [0.0596, 0.1266, 0.0944,  ..., 0.1455, 0.0121, 0.1249],
         [0.0596, 0.1266, 0.0944,  ..., 0.1588, 0.9638, 0.5806],
         [0.0596, 0.6203, 0.7169,  ..., 0.5502, 0.0121, 0.1695]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:03,994 [Process: 0] Synchronize training processes
2024-08-20 17:28:03,995 [Process: 0] Evaluating...
2024-08-20 17:28:03,996 [Process: 0] EPOCH 57:
2024-08-20 17:28:03,998 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:05,013 [Process: 0] Synchronize training processes
2024-08-20 17:28:05,013 [Process: 0] Evaluating...
2024-08-20 17:28:05,015 [Process: 0] EPOCH 58:
2024-08-20 17:28:05,016 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2794, 0.1965, 0.7425,  ..., 0.9785, 0.0272, 0.0608],
         [0.1672, 0.1535, 0.0858,  ..., 0.0072, 0.0272, 0.0608],
         [0.1672, 0.1535, 0.0858,  ..., 0.0072, 0.9184, 0.8176],
         [0.3863, 0.4965, 0.0858,  ..., 0.0072, 0.0272, 0.0608]],
        [[0.1030, 0.0392, 0.8038,  ..., 0.9544, 0.0550, 0.0545],
         [0.1030, 0.0392, 0.0654,  ..., 0.0152, 0.0550, 0.0545],
         [0.1030, 0.0392, 0.0654,  ..., 0.0152, 0.0550, 0.8366],
         [0.6909, 0.8825, 0.0654,  ..., 0.0152, 0.8351, 0.0545]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 57:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8657, 0.0775, 0.1385,  ..., 0.8368, 0.8770, 0.1137],
         [0.0474, 0.0775, 0.1385,  ..., 0.0544, 0.0410, 0.1137],
         [0.0435, 0.0775, 0.1385,  ..., 0.0544, 0.0410, 0.1137],
         [0.0435, 0.7676, 0.5846,  ..., 0.0544, 0.0410, 0.6588]],
        [[0.7697, 0.1070, 0.1025,  ..., 0.2080, 0.0162, 0.0364],
         [0.0768, 0.1070, 0.1025,  ..., 0.1758, 0.0162, 0.0364],
         [0.0768, 0.1070, 0.1025,  ..., 0.2221, 0.9515, 0.8909],
         [0.0768, 0.6789, 0.6925,  ..., 0.3940, 0.0162, 0.0364]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5020, 0.2055, 0.9258,  ..., 0.9609, 0.0267, 0.0608],
         [0.1473, 0.1719, 0.0247,  ..., 0.0130, 0.0267, 0.0608],
         [0.1473, 0.1719, 0.0247,  ..., 0.0130, 0.9200, 0.8177],
         [0.2034, 0.4507, 0.0247,  ..., 0.0130, 0.0267, 0.0608]],
        [[0.0862, 0.0227, 0.8876,  ..., 0.8603, 0.0452, 0.0828],
         [0.0862, 0.0227, 0.0375,  ..., 0.0466, 0.0452, 0.0828],
         [0.0862, 0.0227, 0.0375,  ..., 0.0466, 0.0452, 0.7450],
         [0.7413, 0.9318, 0.0375,  ..., 0.0466, 0.8644, 0.0894]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 58:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8924, 0.0841, 0.0512,  ..., 0.9362, 0.8597, 0.1356],
         [0.0359, 0.0841, 0.0512,  ..., 0.0213, 0.0468, 0.1356],
         [0.0359, 0.0841, 0.0512,  ..., 0.0213, 0.0468, 0.1356],
         [0.0359, 0.7477, 0.8463,  ..., 0.0213, 0.0468, 0.5933]],
        [[0.7569, 0.1199, 0.1163,  ..., 0.1366, 0.0416, 0.0253],
         [0.0810, 0.1199, 0.1163,  ..., 0.1366, 0.0416, 0.0253],
         [0.0810, 0.1199, 0.1163,  ..., 0.1538, 0.8753, 0.9242],
         [0.0810, 0.6403, 0.6512,  ..., 0.5730, 0.0416, 0.0253]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:06,041 [Process: 0] Synchronize training processes
2024-08-20 17:28:06,041 [Process: 0] Evaluating...
2024-08-20 17:28:06,043 [Process: 0] EPOCH 59:
2024-08-20 17:28:06,044 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:07,067 [Process: 0] Synchronize training processes
2024-08-20 17:28:07,067 [Process: 0] Evaluating...
2024-08-20 17:28:07,069 [Process: 0] EPOCH 60:
2024-08-20 17:28:07,071 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3171, 0.0779, 0.9287,  ..., 0.9659, 0.0408, 0.0413],
         [0.1583, 0.0779, 0.0238,  ..., 0.0114, 0.0408, 0.0413],
         [0.1583, 0.0779, 0.0238,  ..., 0.0114, 0.8776, 0.8760],
         [0.3663, 0.7662, 0.0238,  ..., 0.0114, 0.0408, 0.0413]],
        [[0.0478, 0.0265, 0.9181,  ..., 0.9365, 0.5316, 0.0500],
         [0.0478, 0.0265, 0.0273,  ..., 0.0212, 0.1227, 0.0500],
         [0.0478, 0.0265, 0.0273,  ..., 0.0212, 0.1227, 0.8501],
         [0.8565, 0.9205, 0.0273,  ..., 0.0212, 0.2231, 0.0500]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 59:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9293, 0.0768, 0.0963,  ..., 0.9671, 0.9139, 0.0959],
         [0.0236, 0.0768, 0.0963,  ..., 0.0110, 0.0287, 0.0959],
         [0.0236, 0.0768, 0.0963,  ..., 0.0110, 0.0287, 0.0959],
         [0.0236, 0.7695, 0.7111,  ..., 0.0110, 0.0287, 0.7123]],
        [[0.6721, 0.1217, 0.0979,  ..., 0.0958, 0.0382, 0.0367],
         [0.1060, 0.1180, 0.0979,  ..., 0.0958, 0.0395, 0.0367],
         [0.1158, 0.1180, 0.0979,  ..., 0.0958, 0.8841, 0.8899],
         [0.1060, 0.6423, 0.7063,  ..., 0.7127, 0.0382, 0.0367]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1093, 0.0560, 0.9021,  ..., 0.9546, 0.0382, 0.0382],
         [0.1093, 0.0560, 0.0326,  ..., 0.0151, 0.0382, 0.0382],
         [0.1093, 0.0560, 0.0326,  ..., 0.0151, 0.8854, 0.8853],
         [0.6721, 0.8321, 0.0326,  ..., 0.0151, 0.0382, 0.0382]],
        [[0.0330, 0.0233, 0.8700,  ..., 0.8339, 0.0328, 0.0542],
         [0.0330, 0.0233, 0.0433,  ..., 0.0554, 0.0328, 0.0542],
         [0.0330, 0.0233, 0.0433,  ..., 0.0554, 0.0328, 0.8318],
         [0.9011, 0.9301, 0.0433,  ..., 0.0554, 0.9017, 0.0598]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 60:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9293, 0.1016, 0.0997,  ..., 0.9336, 0.9054, 0.1270],
         [0.0236, 0.1016, 0.0997,  ..., 0.0221, 0.0315, 0.1270],
         [0.0236, 0.1016, 0.0997,  ..., 0.0221, 0.0315, 0.1270],
         [0.0236, 0.6953, 0.7009,  ..., 0.0221, 0.0315, 0.6190]],
        [[0.9100, 0.1281, 0.1000,  ..., 0.1049, 0.0300, 0.0534],
         [0.0300, 0.1281, 0.1000,  ..., 0.1049, 0.0300, 0.0534],
         [0.0300, 0.1281, 0.1000,  ..., 0.1049, 0.9100, 0.8397],
         [0.0300, 0.6156, 0.6999,  ..., 0.6853, 0.0300, 0.0534]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:08,071 [Process: 0] Synchronize training processes
2024-08-20 17:28:08,071 [Process: 0] Evaluating...
2024-08-20 17:28:08,073 [Process: 0] EPOCH 61:
2024-08-20 17:28:08,074 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:09,087 [Process: 0] Synchronize training processes
2024-08-20 17:28:09,087 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3106, 0.1722, 0.9094,  ..., 0.9244, 0.0554, 0.0531],
         [0.1643, 0.1722, 0.0302,  ..., 0.0252, 0.0554, 0.0531],
         [0.1643, 0.1722, 0.0302,  ..., 0.0252, 0.8338, 0.8408],
         [0.3607, 0.4833, 0.0302,  ..., 0.0252, 0.0554, 0.0531]],
        [[0.0259, 0.0107, 0.9618,  ..., 0.8921, 0.0228, 0.0386],
         [0.0259, 0.0107, 0.0127,  ..., 0.0360, 0.0228, 0.0386],
         [0.0259, 0.0107, 0.0127,  ..., 0.0360, 0.0228, 0.8842],
         [0.9224, 0.9679, 0.0127,  ..., 0.0360, 0.9315, 0.0386]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 61:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8503, 0.0862, 0.1309,  ..., 0.8952, 0.9561, 0.0586],
         [0.0499, 0.0862, 0.1309,  ..., 0.0349, 0.0146, 0.0586],
         [0.0499, 0.0862, 0.1400,  ..., 0.0349, 0.0146, 0.0586],
         [0.0499, 0.7415, 0.5983,  ..., 0.0349, 0.0146, 0.8242]],
        [[0.8715, 0.0941, 0.0949,  ..., 0.1533, 0.0363, 0.0792],
         [0.0428, 0.0941, 0.0949,  ..., 0.1533, 0.0363, 0.0792],
         [0.0428, 0.0941, 0.0949,  ..., 0.2449, 0.8911, 0.7540],
         [0.0428, 0.7177, 0.7153,  ..., 0.4484, 0.0363, 0.0876]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3390, 0.1314, 0.9065,  ..., 0.9172, 0.0443, 0.0393],
         [0.1583, 0.1314, 0.0312,  ..., 0.0276, 0.0443, 0.0393],
         [0.1583, 0.1314, 0.0312,  ..., 0.0276, 0.8672, 0.8821],
         [0.3445, 0.6058, 0.0312,  ..., 0.0276, 0.0443, 0.0393]],
        [[0.0729, 0.0497, 0.7754,  ..., 0.8779, 0.0246, 0.0344],
         [0.0729, 0.0497, 0.0749,  ..., 0.0407, 0.0246, 0.0344],
         [0.0729, 0.0497, 0.0749,  ..., 0.0407, 0.0246, 0.8967],
         [0.7814, 0.8509, 0.0749,  ..., 0.0407, 0.9262, 0.0344]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:28:10,917 [Process: 0] EPOCH 62:
2024-08-20 17:28:10,919 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 62:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9406, 0.1094, 0.1023,  ..., 0.8978, 0.8123, 0.0463],
         [0.0198, 0.1094, 0.1023,  ..., 0.0341, 0.0626, 0.0463],
         [0.0198, 0.1094, 0.1023,  ..., 0.0341, 0.0626, 0.0463],
         [0.0198, 0.6718, 0.6930,  ..., 0.0341, 0.0626, 0.8612]],
        [[0.9741, 0.1052, 0.0798,  ..., 0.1366, 0.0277, 0.0327],
         [0.0086, 0.1052, 0.0798,  ..., 0.1366, 0.0277, 0.0327],
         [0.0086, 0.1052, 0.0798,  ..., 0.1366, 0.9168, 0.9018],
         [0.0086, 0.6845, 0.7607,  ..., 0.5903, 0.0277, 0.0327]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:28:11,973 [Process: 0] Synchronize training processes
2024-08-20 17:28:11,973 [Process: 0] Evaluating...
2024-08-20 17:28:11,975 [Process: 0] EPOCH 63:
2024-08-20 17:28:11,976 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:13,003 [Process: 0] Synchronize training processes
2024-08-20 17:28:13,003 [Process: 0] Evaluating...
2024-08-20 17:28:13,005 [Process: 0] EPOCH 64:
2024-08-20 17:28:13,006 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4201, 0.4259, 0.9294,  ..., 0.8521, 0.0405, 0.0496],
         [0.1578, 0.1584, 0.0235,  ..., 0.0493, 0.0405, 0.0496],
         [0.1578, 0.1617, 0.0235,  ..., 0.0493, 0.8764, 0.8511],
         [0.2644, 0.2540, 0.0235,  ..., 0.0493, 0.0427, 0.0496]],
        [[0.0485, 0.0287, 0.9078,  ..., 0.8900, 0.0130, 0.0471],
         [0.0485, 0.0287, 0.0307,  ..., 0.0367, 0.0130, 0.0471],
         [0.0485, 0.0287, 0.0307,  ..., 0.0367, 0.0130, 0.8586],
         [0.8545, 0.9139, 0.0307,  ..., 0.0367, 0.9611, 0.0471]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 63:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9566, 0.1104, 0.0886,  ..., 0.9729, 0.8631, 0.0857],
         [0.0145, 0.1104, 0.0886,  ..., 0.0090, 0.0456, 0.0857],
         [0.0145, 0.1104, 0.0941,  ..., 0.0090, 0.0456, 0.0857],
         [0.0145, 0.6689, 0.7288,  ..., 0.0090, 0.0456, 0.7428]],
        [[0.8414, 0.0992, 0.0645,  ..., 0.1408, 0.0288, 0.0223],
         [0.0529, 0.0992, 0.0645,  ..., 0.1408, 0.0276, 0.0223],
         [0.0529, 0.0992, 0.0645,  ..., 0.2243, 0.9160, 0.9330],
         [0.0529, 0.7024, 0.8065,  ..., 0.4941, 0.0276, 0.0223]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1185, 0.3614, 0.9118,  ..., 0.9737, 0.0551, 0.0375],
         [0.1185, 0.1847, 0.0294,  ..., 0.0088, 0.0551, 0.0375],
         [0.1185, 0.1847, 0.0294,  ..., 0.0088, 0.8270, 0.8875],
         [0.6444, 0.2692, 0.0294,  ..., 0.0088, 0.0629, 0.0375]],
        [[0.0963, 0.0138, 0.9123,  ..., 0.9169, 0.0686, 0.0470],
         [0.0963, 0.0138, 0.0292,  ..., 0.0277, 0.0686, 0.0444],
         [0.0963, 0.0138, 0.0292,  ..., 0.0277, 0.0686, 0.8641],
         [0.7112, 0.9587, 0.0292,  ..., 0.0277, 0.7943, 0.0444]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 64:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8881, 0.0295, 0.0672,  ..., 0.8983, 0.9518, 0.0609],
         [0.0373, 0.0295, 0.0672,  ..., 0.0339, 0.0161, 0.0609],
         [0.0373, 0.0295, 0.0672,  ..., 0.0339, 0.0161, 0.0609],
         [0.0373, 0.9115, 0.7984,  ..., 0.0339, 0.0161, 0.8174]],
        [[0.9842, 0.1348, 0.1095,  ..., 0.1138, 0.0363, 0.0374],
         [0.0053, 0.1348, 0.1095,  ..., 0.1138, 0.0357, 0.0359],
         [0.0053, 0.1378, 0.1425,  ..., 0.1138, 0.8923, 0.8907],
         [0.0053, 0.5926, 0.6385,  ..., 0.6587, 0.0357, 0.0359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-20 17:28:14,031 [Process: 0] Synchronize training processes
2024-08-20 17:28:14,032 [Process: 0] Evaluating...
2024-08-20 17:28:14,033 [Process: 0] EPOCH 65:
2024-08-20 17:28:14,035 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:15,096 [Process: 0] Synchronize training processes
2024-08-20 17:28:15,096 [Process: 0] Evaluating...
2024-08-20 17:28:15,098 [Process: 0] EPOCH 66:
2024-08-20 17:28:15,100 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1480, 0.3876, 0.9643,  ..., 0.9617, 0.0672, 0.0664],
         [0.1480, 0.1658, 0.0119,  ..., 0.0128, 0.0672, 0.0664],
         [0.1480, 0.1735, 0.0119,  ..., 0.0128, 0.7984, 0.7968],
         [0.5559, 0.2730, 0.0119,  ..., 0.0128, 0.0672, 0.0704]],
        [[0.5266, 0.0068, 0.9611,  ..., 0.8811, 0.1381, 0.0398],
         [0.1578, 0.0068, 0.0130,  ..., 0.0396, 0.1381, 0.0398],
         [0.1578, 0.0068, 0.0130,  ..., 0.0396, 0.1381, 0.8805],
         [0.1578, 0.9797, 0.0130,  ..., 0.0396, 0.5858, 0.0398]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 65:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9817, 0.0595, 0.1297,  ..., 0.9471, 0.9497, 0.0875],
         [0.0061, 0.0595, 0.1297,  ..., 0.0176, 0.0168, 0.0875],
         [0.0061, 0.0595, 0.1297,  ..., 0.0176, 0.0168, 0.0875],
         [0.0061, 0.8215, 0.6109,  ..., 0.0176, 0.0168, 0.7376]],
        [[0.9591, 0.0752, 0.0944,  ..., 0.1539, 0.0275, 0.0339],
         [0.0136, 0.0752, 0.0944,  ..., 0.1539, 0.0275, 0.0339],
         [0.0136, 0.0752, 0.0944,  ..., 0.1539, 0.9175, 0.8984],
         [0.0136, 0.7745, 0.7168,  ..., 0.5384, 0.0275, 0.0339]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.2600, 0.3095, 0.8981,  ..., 0.8970, 0.0624, 0.0396],
         [0.1984, 0.1828, 0.0340,  ..., 0.0344, 0.0624, 0.0396],
         [0.1984, 0.1828, 0.0340,  ..., 0.0343, 0.8127, 0.8813],
         [0.3433, 0.3250, 0.0340,  ..., 0.0343, 0.0624, 0.0396]],
        [[0.3401, 0.0599, 0.9832,  ..., 0.8817, 0.2329, 0.0463],
         [0.1676, 0.0599, 0.0056,  ..., 0.0394, 0.1535, 0.0463],
         [0.1676, 0.0599, 0.0056,  ..., 0.0394, 0.1535, 0.8610],
         [0.3247, 0.8202, 0.0056,  ..., 0.0394, 0.4601, 0.0463]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 66:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9874, 0.0390, 0.0833,  ..., 0.9058, 0.9864, 0.0678],
         [0.0042, 0.0390, 0.0833,  ..., 0.0314, 0.0046, 0.0678],
         [0.0042, 0.0390, 0.0833,  ..., 0.0314, 0.0045, 0.0678],
         [0.0042, 0.8830, 0.7500,  ..., 0.0314, 0.0045, 0.7965]],
        [[0.9319, 0.0833, 0.1155,  ..., 0.1059, 0.0251, 0.0392],
         [0.0227, 0.0833, 0.1155,  ..., 0.1059, 0.0251, 0.0392],
         [0.0227, 0.0833, 0.1274,  ..., 0.1059, 0.9247, 0.8823],
         [0.0227, 0.7501, 0.6416,  ..., 0.6822, 0.0251, 0.0392]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:16,098 [Process: 0] Synchronize training processes
2024-08-20 17:28:16,099 [Process: 0] Evaluating...
2024-08-20 17:28:16,100 [Process: 0] EPOCH 67:
2024-08-20 17:28:16,102 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:17,102 [Process: 0] Synchronize training processes
2024-08-20 17:28:17,102 [Process: 0] Evaluating...
2024-08-20 17:28:17,104 [Process: 0] EPOCH 68:
2024-08-20 17:28:17,105 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4500, 0.2404, 0.9052,  ..., 0.9345, 0.0630, 0.0456],
         [0.1784, 0.2118, 0.0316,  ..., 0.0218, 0.0626, 0.0456],
         [0.1784, 0.2118, 0.0316,  ..., 0.0218, 0.7958, 0.8633],
         [0.1933, 0.3360, 0.0316,  ..., 0.0218, 0.0786, 0.0456]],
        [[0.3176, 0.0222, 0.9174,  ..., 0.8242, 0.1646, 0.0305],
         [0.1799, 0.0222, 0.0275,  ..., 0.0577, 0.1570, 0.0305],
         [0.1799, 0.0222, 0.0275,  ..., 0.0577, 0.1570, 0.9085],
         [0.3225, 0.9334, 0.0275,  ..., 0.0603, 0.5214, 0.0305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 67:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9624, 0.0430, 0.0464,  ..., 0.9710, 0.9712, 0.0676],
         [0.0125, 0.0430, 0.0464,  ..., 0.0097, 0.0096, 0.0676],
         [0.0125, 0.0430, 0.0464,  ..., 0.0097, 0.0096, 0.0676],
         [0.0125, 0.8710, 0.8607,  ..., 0.0097, 0.0096, 0.7973]],
        [[0.9034, 0.0530, 0.0915,  ..., 0.0682, 0.0176, 0.0236],
         [0.0322, 0.0530, 0.0915,  ..., 0.0682, 0.0176, 0.0236],
         [0.0322, 0.0530, 0.0915,  ..., 0.0682, 0.9472, 0.9291],
         [0.0322, 0.8411, 0.7256,  ..., 0.7954, 0.0176, 0.0236]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5310, 0.1907, 0.9339,  ..., 0.9902, 0.0772, 0.0657],
         [0.1509, 0.1907, 0.0220,  ..., 0.0033, 0.0772, 0.0520],
         [0.1509, 0.1907, 0.0220,  ..., 0.0033, 0.7600, 0.8304],
         [0.1671, 0.4278, 0.0220,  ..., 0.0033, 0.0856, 0.0520]],
        [[0.1503, 0.0451, 0.9798,  ..., 0.9230, 0.0685, 0.0548],
         [0.1439, 0.0451, 0.0067,  ..., 0.0257, 0.0685, 0.0548],
         [0.1439, 0.0451, 0.0067,  ..., 0.0257, 0.0685, 0.8355],
         [0.5619, 0.8647, 0.0067,  ..., 0.0257, 0.7946, 0.0548]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 68:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8509, 0.1714, 0.0841,  ..., 0.9481, 0.9665, 0.0830],
         [0.0490, 0.1512, 0.0841,  ..., 0.0173, 0.0112, 0.0830],
         [0.0468, 0.1733, 0.0841,  ..., 0.0173, 0.0112, 0.0830],
         [0.0532, 0.5042, 0.7478,  ..., 0.0173, 0.0112, 0.7510]],
        [[0.9503, 0.0569, 0.1323,  ..., 0.1283, 0.0212, 0.0297],
         [0.0166, 0.0569, 0.1323,  ..., 0.1283, 0.0212, 0.0297],
         [0.0166, 0.0569, 0.1323,  ..., 0.1283, 0.9365, 0.9108],
         [0.0166, 0.8294, 0.6032,  ..., 0.6152, 0.0212, 0.0297]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:18,101 [Process: 0] Synchronize training processes
2024-08-20 17:28:18,101 [Process: 0] Evaluating...
2024-08-20 17:28:18,103 [Process: 0] EPOCH 69:
2024-08-20 17:28:18,104 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:19,104 [Process: 0] Synchronize training processes
2024-08-20 17:28:19,104 [Process: 0] Evaluating...
2024-08-20 17:28:19,106 [Process: 0] EPOCH 70:
2024-08-20 17:28:19,108 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3999, 0.2623, 0.9141,  ..., 0.9806, 0.0437, 0.0296],
         [0.1984, 0.2259, 0.0286,  ..., 0.0065, 0.0437, 0.0296],
         [0.1984, 0.2259, 0.0286,  ..., 0.0065, 0.8689, 0.9112],
         [0.2033, 0.2859, 0.0286,  ..., 0.0065, 0.0437, 0.0296]],
        [[0.0584, 0.0408, 0.9365,  ..., 0.9464, 0.0083, 0.0531],
         [0.0584, 0.0408, 0.0212,  ..., 0.0179, 0.0083, 0.0531],
         [0.0584, 0.0408, 0.0212,  ..., 0.0179, 0.0083, 0.8408],
         [0.8249, 0.8777, 0.0212,  ..., 0.0179, 0.9751, 0.0531]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 69:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9501, 0.0419, 0.1005,  ..., 0.8998, 0.9356, 0.0528],
         [0.0166, 0.0419, 0.1005,  ..., 0.0333, 0.0215, 0.0528],
         [0.0166, 0.0419, 0.1096,  ..., 0.0336, 0.0215, 0.0528],
         [0.0166, 0.8744, 0.6893,  ..., 0.0333, 0.0215, 0.8415]],
        [[0.9413, 0.0420, 0.1311,  ..., 0.0658, 0.0318, 0.0191],
         [0.0196, 0.0420, 0.1311,  ..., 0.0658, 0.0363, 0.0191],
         [0.0196, 0.0420, 0.1311,  ..., 0.0658, 0.9001, 0.9427],
         [0.0196, 0.8739, 0.6066,  ..., 0.8026, 0.0318, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1721, 0.2480, 0.9736,  ..., 0.9682, 0.0567, 0.0819],
         [0.1721, 0.1981, 0.0088,  ..., 0.0106, 0.0567, 0.0760],
         [0.1721, 0.1981, 0.0088,  ..., 0.0106, 0.8298, 0.7661],
         [0.4836, 0.3557, 0.0088,  ..., 0.0106, 0.0567, 0.0760]],
        [[0.1021, 0.0118, 0.9539,  ..., 0.8825, 0.1000, 0.0335],
         [0.1021, 0.0118, 0.0154,  ..., 0.0392, 0.1000, 0.0335],
         [0.1021, 0.0118, 0.0154,  ..., 0.0392, 0.1000, 0.8994],
         [0.6936, 0.9647, 0.0154,  ..., 0.0392, 0.7001, 0.0335]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 70:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9530, 0.0905, 0.0892,  ..., 0.8447, 0.9407, 0.0578],
         [0.0157, 0.0905, 0.0892,  ..., 0.0543, 0.0198, 0.0578],
         [0.0157, 0.0905, 0.0892,  ..., 0.0505, 0.0198, 0.0578],
         [0.0157, 0.7284, 0.7324,  ..., 0.0505, 0.0198, 0.8266]],
        [[0.7551, 0.0758, 0.0874,  ..., 0.1268, 0.0105, 0.0218],
         [0.0816, 0.0758, 0.0874,  ..., 0.1268, 0.0105, 0.0218],
         [0.0816, 0.0758, 0.0874,  ..., 0.1268, 0.9684, 0.9345],
         [0.0816, 0.7727, 0.7377,  ..., 0.6196, 0.0105, 0.0218]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:20,119 [Process: 0] Synchronize training processes
2024-08-20 17:28:20,120 [Process: 0] Evaluating...
2024-08-20 17:28:20,121 [Process: 0] EPOCH 71:
2024-08-20 17:28:20,123 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:21,127 [Process: 0] Synchronize training processes
2024-08-20 17:28:21,127 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1561, 0.2407, 0.8247,  ..., 0.9794, 0.0433, 0.0634],
         [0.1561, 0.1924, 0.0580,  ..., 0.0069, 0.0433, 0.0634],
         [0.1561, 0.1924, 0.0580,  ..., 0.0069, 0.8702, 0.8066],
         [0.5317, 0.3744, 0.0593,  ..., 0.0069, 0.0433, 0.0665]],
        [[0.0882, 0.0126, 0.8677,  ..., 0.9381, 0.0188, 0.0215],
         [0.0882, 0.0126, 0.0441,  ..., 0.0206, 0.0188, 0.0215],
         [0.0882, 0.0126, 0.0441,  ..., 0.0206, 0.0188, 0.9355],
         [0.7354, 0.9623, 0.0441,  ..., 0.0206, 0.9436, 0.0215]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 71:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9396, 0.0281, 0.0551,  ..., 0.9634, 0.9534, 0.0782],
         [0.0201, 0.0281, 0.0551,  ..., 0.0122, 0.0153, 0.0782],
         [0.0201, 0.0281, 0.0551,  ..., 0.0122, 0.0160, 0.0782],
         [0.0201, 0.9156, 0.8348,  ..., 0.0122, 0.0153, 0.7653]],
        [[0.8418, 0.0450, 0.0956,  ..., 0.1109, 0.0098, 0.0318],
         [0.0527, 0.0450, 0.0956,  ..., 0.1109, 0.0098, 0.0318],
         [0.0527, 0.0450, 0.0956,  ..., 0.1414, 0.9705, 0.9045],
         [0.0527, 0.8651, 0.7133,  ..., 0.6368, 0.0098, 0.0318]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0710, 0.1816, 0.9684,  ..., 0.9491, 0.0349, 0.0699],
         [0.0710, 0.1816, 0.0105,  ..., 0.0170, 0.0349, 0.0637],
         [0.0710, 0.1816, 0.0105,  ..., 0.0170, 0.8953, 0.8027],
         [0.7871, 0.4553, 0.0105,  ..., 0.0170, 0.0349, 0.0637]],
        [[0.1692, 0.0323, 0.9529,  ..., 0.9653, 0.0369, 0.0537],
         [0.1692, 0.0323, 0.0157,  ..., 0.0116, 0.0369, 0.0537],
         [0.1692, 0.0323, 0.0157,  ..., 0.0116, 0.0369, 0.8390],
         [0.4925, 0.9031, 0.0157,  ..., 0.0116, 0.8893, 0.0537]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:28:22,981 [Process: 0] EPOCH 72:
2024-08-20 17:28:22,983 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 72:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9389, 0.0881, 0.1260,  ..., 0.9553, 0.9387, 0.0846],
         [0.0204, 0.0881, 0.1260,  ..., 0.0149, 0.0204, 0.0846],
         [0.0204, 0.0881, 0.1440,  ..., 0.0149, 0.0204, 0.0846],
         [0.0204, 0.7356, 0.6040,  ..., 0.0149, 0.0204, 0.7462]],
        [[0.9441, 0.0395, 0.0889,  ..., 0.1405, 0.0214, 0.0433],
         [0.0186, 0.0395, 0.0889,  ..., 0.1405, 0.0214, 0.0386],
         [0.0186, 0.0395, 0.0889,  ..., 0.1405, 0.9359, 0.8796],
         [0.0186, 0.8814, 0.7333,  ..., 0.5784, 0.0214, 0.0386]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.3358, 0.2101, 0.9786,  ..., 0.9168, 0.0319, 0.0529],
         [0.1949, 0.2101, 0.0071,  ..., 0.0277, 0.0319, 0.0529],
         [0.1949, 0.2101, 0.0071,  ..., 0.0277, 0.9044, 0.8412],
         [0.2744, 0.3697, 0.0071,  ..., 0.0277, 0.0319, 0.0529]],
        [[0.1858, 0.0056, 0.9663,  ..., 0.7702, 0.0694, 0.0539],
         [0.1858, 0.0056, 0.0112,  ..., 0.0766, 0.0694, 0.0539],
         [0.1858, 0.0056, 0.0112,  ..., 0.0766, 0.0694, 0.8384],
         [0.4425, 0.9831, 0.0112,  ..., 0.0766, 0.7918, 0.0539]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:23,984 [Process: 0] Synchronize training processes
2024-08-20 17:28:23,984 [Process: 0] Evaluating...
2024-08-20 17:28:23,986 [Process: 0] EPOCH 73:
2024-08-20 17:28:23,987 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:24,990 [Process: 0] Synchronize training processes
2024-08-20 17:28:24,990 [Process: 0] Evaluating...
2024-08-20 17:28:24,992 [Process: 0] EPOCH 74:
2024-08-20 17:28:24,994 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 73:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8867, 0.0283, 0.0709,  ..., 0.9206, 0.9154, 0.0933],
         [0.0378, 0.0283, 0.0613,  ..., 0.0265, 0.0282, 0.0933],
         [0.0378, 0.0283, 0.0613,  ..., 0.0265, 0.0282, 0.0933],
         [0.0378, 0.9152, 0.8066,  ..., 0.0265, 0.0282, 0.7201]],
        [[0.8862, 0.0637, 0.0799,  ..., 0.1137, 0.0128, 0.0513],
         [0.0379, 0.0637, 0.0799,  ..., 0.1137, 0.0128, 0.0513],
         [0.0379, 0.0637, 0.0901,  ..., 0.1137, 0.9616, 0.8461],
         [0.0379, 0.8090, 0.7500,  ..., 0.6588, 0.0128, 0.0513]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.4715, 0.0877, 0.9833,  ..., 0.9191, 0.0470, 0.0386],
         [0.1762, 0.0877, 0.0056,  ..., 0.0270, 0.0470, 0.0386],
         [0.1762, 0.0877, 0.0056,  ..., 0.0270, 0.8590, 0.8841],
         [0.1762, 0.7370, 0.0056,  ..., 0.0270, 0.0470, 0.0386]],
        [[0.2185, 0.2121, 0.9756,  ..., 0.8702, 0.0321, 0.0342],
         [0.2185, 0.1088, 0.0081,  ..., 0.0433, 0.0321, 0.0338],
         [0.2185, 0.1088, 0.0081,  ..., 0.0433, 0.0321, 0.8981],
         [0.3446, 0.5702, 0.0081,  ..., 0.0433, 0.9037, 0.0338]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 74:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9396, 0.0678, 0.0708,  ..., 0.9076, 0.9357, 0.0265],
         [0.0201, 0.0678, 0.0708,  ..., 0.0321, 0.0214, 0.0265],
         [0.0201, 0.0678, 0.0708,  ..., 0.0302, 0.0214, 0.0265],
         [0.0201, 0.7965, 0.7875,  ..., 0.0302, 0.0214, 0.9206]],
        [[0.9276, 0.0433, 0.0497,  ..., 0.1488, 0.0152, 0.0126],
         [0.0241, 0.0433, 0.0497,  ..., 0.1488, 0.0152, 0.0126],
         [0.0241, 0.0500, 0.0497,  ..., 0.3553, 0.9544, 0.9621],
         [0.0241, 0.8634, 0.8510,  ..., 0.3470, 0.0152, 0.0126]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0426, 0.0489, 0.9658,  ..., 0.9760, 0.0424, 0.0275],
         [0.0426, 0.0489, 0.0114,  ..., 0.0080, 0.0424, 0.0275],
         [0.8723, 0.0489, 0.0114,  ..., 0.0080, 0.8720, 0.9176],
         [0.0426, 0.8533, 0.0114,  ..., 0.0080, 0.0432, 0.0275]],
        [[0.1871, 0.0345, 0.9119,  ..., 0.8331, 0.0329, 0.0443],
         [0.1871, 0.0345, 0.0294,  ..., 0.0556, 0.0329, 0.0443],
         [0.1871, 0.0345, 0.0294,  ..., 0.0556, 0.0329, 0.8672],
         [0.4386, 0.8964, 0.0294,  ..., 0.0556, 0.9014, 0.0443]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:26,018 [Process: 0] Synchronize training processes
2024-08-20 17:28:26,019 [Process: 0] Evaluating...
2024-08-20 17:28:26,020 [Process: 0] EPOCH 75:
2024-08-20 17:28:26,022 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:27,040 [Process: 0] Synchronize training processes
2024-08-20 17:28:27,041 [Process: 0] Evaluating...
2024-08-20 17:28:27,042 [Process: 0] EPOCH 76:
2024-08-20 17:28:27,044 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 75:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8866, 0.0630, 0.0443,  ..., 0.8604, 0.8299, 0.0833],
         [0.0378, 0.0648, 0.0471,  ..., 0.0465, 0.0536, 0.0643],
         [0.0378, 0.0716, 0.0443,  ..., 0.0465, 0.0629, 0.0675],
         [0.0378, 0.8005, 0.8643,  ..., 0.0465, 0.0536, 0.7850]],
        [[0.9495, 0.0328, 0.0555,  ..., 0.1215, 0.0332, 0.0108],
         [0.0168, 0.0328, 0.0555,  ..., 0.1215, 0.0332, 0.0108],
         [0.0168, 0.0328, 0.0555,  ..., 0.1215, 0.9004, 0.9675],
         [0.0168, 0.9016, 0.8336,  ..., 0.6354, 0.0332, 0.0108]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0927, 0.1864, 0.9443,  ..., 0.9377, 0.0297, 0.0269],
         [0.0927, 0.1864, 0.0186,  ..., 0.0208, 0.0297, 0.0269],
         [0.6572, 0.1864, 0.0186,  ..., 0.0208, 0.9110, 0.9193],
         [0.1574, 0.4407, 0.0186,  ..., 0.0208, 0.0297, 0.0269]],
        [[0.2289, 0.0014, 0.9774,  ..., 0.9441, 0.0020, 0.0572],
         [0.2289, 0.0014, 0.0075,  ..., 0.0186, 0.0020, 0.0572],
         [0.2289, 0.0014, 0.0075,  ..., 0.0186, 0.0020, 0.8222],
         [0.3132, 0.9959, 0.0075,  ..., 0.0186, 0.9939, 0.0634]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 76:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9202, 0.0291, 0.0156,  ..., 0.9061, 0.9584, 0.0503],
         [0.0266, 0.0291, 0.0156,  ..., 0.0313, 0.0139, 0.0503],
         [0.0266, 0.0291, 0.0156,  ..., 0.0313, 0.0139, 0.0503],
         [0.0266, 0.9128, 0.9533,  ..., 0.0313, 0.0139, 0.8491]],
        [[0.9435, 0.0472, 0.0877,  ..., 0.0806, 0.0240, 0.0317],
         [0.0191, 0.0472, 0.0877,  ..., 0.0806, 0.0240, 0.0317],
         [0.0187, 0.0472, 0.1166,  ..., 0.0806, 0.9280, 0.9050],
         [0.0187, 0.8584, 0.7079,  ..., 0.7583, 0.0240, 0.0317]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:28,069 [Process: 0] Synchronize training processes
2024-08-20 17:28:28,070 [Process: 0] Evaluating...
2024-08-20 17:28:28,071 [Process: 0] EPOCH 77:
2024-08-20 17:28:28,073 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:29,093 [Process: 0] Synchronize training processes
2024-08-20 17:28:29,093 [Process: 0] Evaluating...
2024-08-20 17:28:29,095 [Process: 0] EPOCH 78:
2024-08-20 17:28:29,096 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0619, 0.0307, 0.9324,  ..., 0.9237, 0.0287, 0.0483],
         [0.0619, 0.0307, 0.0225,  ..., 0.0254, 0.0287, 0.0483],
         [0.8143, 0.0307, 0.0225,  ..., 0.0254, 0.9138, 0.8551],
         [0.0619, 0.9078, 0.0225,  ..., 0.0254, 0.0287, 0.0483]],
        [[0.2500, 0.0055, 0.9200,  ..., 0.9068, 0.0564, 0.0334],
         [0.2500, 0.0055, 0.0226,  ..., 0.0311, 0.0564, 0.0324],
         [0.2500, 0.0055, 0.0226,  ..., 0.0311, 0.0564, 0.9018],
         [0.2500, 0.9836, 0.0347,  ..., 0.0311, 0.8308, 0.0324]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 77:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9840, 0.0995, 0.0596,  ..., 0.9540, 0.9440, 0.0426],
         [0.0053, 0.0895, 0.0555,  ..., 0.0153, 0.0187, 0.0426],
         [0.0053, 0.1114, 0.0582,  ..., 0.0153, 0.0187, 0.0426],
         [0.0053, 0.6996, 0.8267,  ..., 0.0153, 0.0187, 0.8722]],
        [[0.8614, 0.1037, 0.0478,  ..., 0.0636, 0.0192, 0.0210],
         [0.0462, 0.1037, 0.0478,  ..., 0.0636, 0.0192, 0.0210],
         [0.0462, 0.1056, 0.0478,  ..., 0.0636, 0.9425, 0.9370],
         [0.0462, 0.6869, 0.8565,  ..., 0.8092, 0.0192, 0.0210]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0833, 0.0353, 0.9768,  ..., 0.9678, 0.0413, 0.0390],
         [0.0833, 0.0353, 0.0077,  ..., 0.0107, 0.0413, 0.0404],
         [0.7502, 0.0353, 0.0077,  ..., 0.0107, 0.8755, 0.8815],
         [0.0833, 0.8942, 0.0077,  ..., 0.0107, 0.0419, 0.0390]],
        [[0.3003, 0.0508, 0.9564,  ..., 0.9246, 0.9593, 0.0305],
         [0.2332, 0.0508, 0.0133,  ..., 0.0251, 0.0136, 0.0305],
         [0.2332, 0.0508, 0.0133,  ..., 0.0251, 0.0136, 0.9086],
         [0.2332, 0.8476, 0.0171,  ..., 0.0251, 0.0136, 0.0305]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 78:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8272, 0.0531, 0.0488,  ..., 0.9601, 0.9581, 0.0572],
         [0.0542, 0.0479, 0.0488,  ..., 0.0133, 0.0144, 0.0572],
         [0.0645, 0.0479, 0.0488,  ..., 0.0133, 0.0138, 0.0572],
         [0.0542, 0.8512, 0.8536,  ..., 0.0133, 0.0138, 0.8284]],
        [[0.7874, 0.1015, 0.0818,  ..., 0.1216, 0.0129, 0.0191],
         [0.0709, 0.1015, 0.0818,  ..., 0.1216, 0.0129, 0.0202],
         [0.0709, 0.1015, 0.0818,  ..., 0.6342, 0.9613, 0.9417],
         [0.0709, 0.6955, 0.7547,  ..., 0.1226, 0.0129, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:28:30,080 [Process: 0] Synchronize training processes
2024-08-20 17:28:30,081 [Process: 0] Evaluating...
2024-08-20 17:28:30,082 [Process: 0] EPOCH 79:
2024-08-20 17:28:30,084 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:31,105 [Process: 0] Synchronize training processes
2024-08-20 17:28:31,106 [Process: 0] Evaluating...
2024-08-20 17:28:31,107 [Process: 0] EPOCH 80:
2024-08-20 17:28:31,109 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1217, 0.0596, 0.9759,  ..., 0.9823, 0.0215, 0.0190],
         [0.1217, 0.0596, 0.0080,  ..., 0.0059, 0.0215, 0.0190],
         [0.1217, 0.0596, 0.0080,  ..., 0.0059, 0.9354, 0.9431],
         [0.6350, 0.8211, 0.0080,  ..., 0.0059, 0.0215, 0.0190]],
        [[0.4615, 0.0262, 0.9669,  ..., 0.9608, 0.2471, 0.0159],
         [0.1795, 0.0262, 0.0110,  ..., 0.0131, 0.2385, 0.0159],
         [0.1795, 0.0262, 0.0110,  ..., 0.0131, 0.2385, 0.9522],
         [0.1795, 0.9213, 0.0110,  ..., 0.0131, 0.2759, 0.0159]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 79:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9643, 0.1590, 0.0095,  ..., 0.8884, 0.9868, 0.0185],
         [0.0119, 0.0936, 0.0095,  ..., 0.0372, 0.0044, 0.0185],
         [0.0119, 0.0936, 0.0095,  ..., 0.0372, 0.0044, 0.0185],
         [0.0119, 0.6537, 0.9714,  ..., 0.0372, 0.0044, 0.9446]],
        [[0.9748, 0.0455, 0.0357,  ..., 0.0789, 0.0698, 0.0304],
         [0.0084, 0.0455, 0.0357,  ..., 0.0789, 0.0698, 0.0304],
         [0.0084, 0.0455, 0.0357,  ..., 0.0789, 0.7906, 0.9088],
         [0.0084, 0.8635, 0.8929,  ..., 0.7634, 0.0698, 0.0304]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1767, 0.0870, 0.9659,  ..., 0.9865, 0.0300, 0.0800],
         [0.1767, 0.0870, 0.0114,  ..., 0.0045, 0.0300, 0.0791],
         [0.1767, 0.7187, 0.0114,  ..., 0.0045, 0.9101, 0.7592],
         [0.4699, 0.1073, 0.0114,  ..., 0.0045, 0.0300, 0.0818]],
        [[0.2500, 0.0159, 0.8548,  ..., 0.9440, 0.0075, 0.0373],
         [0.2500, 0.0159, 0.0411,  ..., 0.0187, 0.0075, 0.0373],
         [0.2500, 0.0159, 0.0411,  ..., 0.0187, 0.0075, 0.8879],
         [0.2500, 0.9522, 0.0630,  ..., 0.0187, 0.9774, 0.0375]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 80:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9604, 0.0403, 0.0362,  ..., 0.8636, 0.9486, 0.1009],
         [0.0132, 0.0394, 0.0362,  ..., 0.0455, 0.0171, 0.1009],
         [0.0132, 0.0394, 0.0362,  ..., 0.0455, 0.0171, 0.1009],
         [0.0132, 0.8810, 0.8915,  ..., 0.0455, 0.0171, 0.6972]],
        [[0.9671, 0.0866, 0.0463,  ..., 0.0862, 0.0223, 0.0322],
         [0.0110, 0.0866, 0.0458,  ..., 0.0862, 0.0223, 0.0322],
         [0.0110, 0.0866, 0.0458,  ..., 0.0862, 0.9332, 0.9033],
         [0.0110, 0.7402, 0.8620,  ..., 0.7414, 0.0223, 0.0322]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-20 17:28:32,140 [Process: 0] Synchronize training processes
2024-08-20 17:28:32,140 [Process: 0] Evaluating...
2024-08-20 17:28:32,142 [Process: 0] EPOCH 81:
2024-08-20 17:28:32,144 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:33,141 [Process: 0] Synchronize training processes
2024-08-20 17:28:33,141 [Process: 0] Evaluating...
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.3729e-01, 2.4968e-01, 9.8861e-01,  ..., 9.9085e-01,
          4.0568e-02, 3.4535e-02],
         [1.3729e-01, 2.4968e-01, 3.7970e-03,  ..., 3.0511e-03,
          4.0568e-02, 3.4535e-02],
         [4.6397e-01, 2.4968e-01, 3.7970e-03,  ..., 3.0511e-03,
          8.7830e-01, 8.9640e-01],
         [2.6145e-01, 2.5097e-01, 3.7970e-03,  ..., 3.0511e-03,
          4.0568e-02, 3.4535e-02]],
        [[2.3478e-01, 6.9935e-04, 9.5830e-01,  ..., 9.6887e-01,
          1.8499e-02, 3.3613e-02],
         [2.3478e-01, 6.9935e-04, 1.3273e-02,  ..., 1.0377e-02,
          1.8499e-02, 3.3613e-02],
         [2.3478e-01, 6.9935e-04, 1.3273e-02,  ..., 1.0377e-02,
          1.8499e-02, 8.9916e-01],
         [2.9567e-01, 9.9790e-01, 1.5152e-02,  ..., 1.0377e-02,
          9.4450e-01, 3.3613e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 81:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9603, 0.0791, 0.0607,  ..., 0.9107, 0.9364, 0.0365],
         [0.0132, 0.0791, 0.0607,  ..., 0.0298, 0.0217, 0.0365],
         [0.0132, 0.0921, 0.0607,  ..., 0.0298, 0.0210, 0.0365],
         [0.0132, 0.7497, 0.8178,  ..., 0.0298, 0.0210, 0.8904]],
        [[0.8945, 0.0344, 0.0545,  ..., 0.0448, 0.0259, 0.0267],
         [0.0352, 0.0344, 0.0545,  ..., 0.0364, 0.0259, 0.0267],
         [0.0352, 0.0344, 0.0545,  ..., 0.0364, 0.9224, 0.9200],
         [0.0352, 0.8969, 0.8364,  ..., 0.8825, 0.0259, 0.0267]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0649, 0.2482, 0.9869,  ..., 0.9467, 0.0549, 0.0412],
         [0.0649, 0.2482, 0.0044,  ..., 0.0178, 0.0549, 0.0412],
         [0.8054, 0.2482, 0.0044,  ..., 0.0178, 0.8353, 0.8764],
         [0.0649, 0.2554, 0.0044,  ..., 0.0178, 0.0549, 0.0412]],
        [[0.2337, 0.0065, 0.8767,  ..., 0.9553, 0.0112, 0.0146],
         [0.2337, 0.0065, 0.0397,  ..., 0.0149, 0.0112, 0.0146],
         [0.2678, 0.0065, 0.0397,  ..., 0.0149, 0.0112, 0.9563],
         [0.2647, 0.9805, 0.0439,  ..., 0.0149, 0.9665, 0.0146]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:28:34,982 [Process: 0] EPOCH 82:
2024-08-20 17:28:34,984 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 82:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9493, 0.0920, 0.0824,  ..., 0.8235, 0.9319, 0.0756],
         [0.0169, 0.0750, 0.0680,  ..., 0.0562, 0.0227, 0.0756],
         [0.0169, 0.0981, 0.0680,  ..., 0.0640, 0.0227, 0.0756],
         [0.0169, 0.7350, 0.7816,  ..., 0.0562, 0.0227, 0.7733]],
        [[0.9457, 0.0441, 0.0574,  ..., 0.1090, 0.0119, 0.0219],
         [0.0181, 0.0441, 0.0574,  ..., 0.1090, 0.0119, 0.0219],
         [0.0181, 0.0441, 0.0574,  ..., 0.1090, 0.9644, 0.9344],
         [0.0181, 0.8678, 0.8278,  ..., 0.6730, 0.0119, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0782, 0.2411, 0.8416,  ..., 0.9448, 0.0272, 0.0407],
         [0.0782, 0.2411, 0.0528,  ..., 0.0174, 0.0272, 0.0407],
         [0.7605, 0.2411, 0.0528,  ..., 0.0174, 0.9185, 0.8704],
         [0.0831, 0.2767, 0.0528,  ..., 0.0203, 0.0272, 0.0482]],
        [[0.1921, 0.0014, 0.9863,  ..., 0.9181, 0.2428, 0.0242],
         [0.1921, 0.0014, 0.0046,  ..., 0.0273, 0.2428, 0.0242],
         [0.3529, 0.0014, 0.0046,  ..., 0.0273, 0.2428, 0.9275],
         [0.2629, 0.9958, 0.0046,  ..., 0.0273, 0.2716, 0.0242]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:36,031 [Process: 0] Synchronize training processes
2024-08-20 17:28:36,032 [Process: 0] Evaluating...
2024-08-20 17:28:36,033 [Process: 0] EPOCH 83:
2024-08-20 17:28:36,035 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:37,062 [Process: 0] Synchronize training processes
2024-08-20 17:28:37,063 [Process: 0] Evaluating...
2024-08-20 17:28:37,064 [Process: 0] EPOCH 84:
2024-08-20 17:28:37,066 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 83:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9645, 0.0325, 0.0539,  ..., 0.9291, 0.9632, 0.0673],
         [0.0118, 0.0325, 0.0539,  ..., 0.0236, 0.0123, 0.0673],
         [0.0118, 0.0325, 0.0539,  ..., 0.0236, 0.0123, 0.0673],
         [0.0118, 0.9026, 0.8382,  ..., 0.0236, 0.0123, 0.7981]],
        [[0.9663, 0.0585, 0.0166,  ..., 0.0692, 0.0150, 0.0739],
         [0.0112, 0.0563, 0.0166,  ..., 0.0668, 0.0150, 0.0739],
         [0.0112, 0.0689, 0.0166,  ..., 0.0668, 0.9551, 0.7783],
         [0.0112, 0.8163, 0.9503,  ..., 0.7971, 0.0150, 0.0739]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0606, 0.2394, 0.9196,  ..., 0.9919, 0.0511, 0.0456],
         [0.0515, 0.2394, 0.0268,  ..., 0.0027, 0.0511, 0.0423],
         [0.8363, 0.2394, 0.0268,  ..., 0.0027, 0.8348, 0.8699],
         [0.0515, 0.2817, 0.0268,  ..., 0.0027, 0.0630, 0.0423]],
        [[0.1648, 0.0044, 0.9589,  ..., 0.9825, 0.7857, 0.0402],
         [0.1648, 0.0044, 0.0137,  ..., 0.0058, 0.0714, 0.0384],
         [0.4834, 0.0044, 0.0137,  ..., 0.0058, 0.0714, 0.8829],
         [0.1870, 0.9869, 0.0137,  ..., 0.0058, 0.0714, 0.0384]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 84:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9170, 0.0309, 0.0597,  ..., 0.9380, 0.9953, 0.0689],
         [0.0277, 0.0309, 0.0597,  ..., 0.0207, 0.0016, 0.0689],
         [0.0277, 0.0309, 0.0658,  ..., 0.0207, 0.0016, 0.0706],
         [0.0277, 0.9073, 0.8148,  ..., 0.0207, 0.0016, 0.7915]],
        [[0.9329, 0.0334, 0.0611,  ..., 0.1069, 0.0068, 0.0120],
         [0.0224, 0.0334, 0.0611,  ..., 0.1069, 0.0068, 0.0120],
         [0.0224, 0.0349, 0.0611,  ..., 0.1250, 0.9796, 0.9641],
         [0.0224, 0.8983, 0.8168,  ..., 0.6612, 0.0068, 0.0120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0795, 0.2500, 0.9672,  ..., 0.9668, 0.0458, 0.0742],
         [0.0795, 0.2500, 0.0109,  ..., 0.0111, 0.0458, 0.0702],
         [0.7235, 0.2500, 0.0109,  ..., 0.0111, 0.8555, 0.7249],
         [0.1175, 0.2500, 0.0109,  ..., 0.0111, 0.0528, 0.1307]],
        [[0.2119, 0.0079, 0.9434,  ..., 0.9909, 0.2129, 0.0717],
         [0.2119, 0.0079, 0.0189,  ..., 0.0030, 0.2129, 0.0662],
         [0.2669, 0.0079, 0.0189,  ..., 0.0030, 0.2129, 0.7958],
         [0.3092, 0.9764, 0.0189,  ..., 0.0030, 0.3612, 0.0662]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:38,013 [Process: 0] Synchronize training processes
2024-08-20 17:28:38,014 [Process: 0] Evaluating...
2024-08-20 17:28:38,015 [Process: 0] EPOCH 85:
2024-08-20 17:28:38,017 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:39,002 [Process: 0] Synchronize training processes
2024-08-20 17:28:39,003 [Process: 0] Evaluating...
2024-08-20 17:28:39,005 [Process: 0] EPOCH 86:
2024-08-20 17:28:39,006 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 85:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9482, 0.0466, 0.0624,  ..., 0.9739, 0.8631, 0.0585],
         [0.0173, 0.0466, 0.0624,  ..., 0.0087, 0.0456, 0.0585],
         [0.0173, 0.0466, 0.0624,  ..., 0.0087, 0.0456, 0.0585],
         [0.0173, 0.8602, 0.8129,  ..., 0.0087, 0.0456, 0.8245]],
        [[0.9007, 0.0544, 0.0211,  ..., 0.0320, 0.0084, 0.0166],
         [0.0331, 0.0544, 0.0211,  ..., 0.0320, 0.0084, 0.0166],
         [0.0331, 0.0544, 0.0211,  ..., 0.0320, 0.9748, 0.9501],
         [0.0331, 0.8368, 0.9367,  ..., 0.9040, 0.0084, 0.0166]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1242, 0.2500, 0.9375,  ..., 0.9837, 0.0135, 0.0146],
         [0.1242, 0.2500, 0.0208,  ..., 0.0054, 0.0135, 0.0146],
         [0.3431, 0.2500, 0.0208,  ..., 0.0054, 0.9596, 0.9561],
         [0.4085, 0.2500, 0.0208,  ..., 0.0054, 0.0135, 0.0146]],
        [[0.1950, 0.0035, 0.9393,  ..., 0.9532, 0.0137, 0.0389],
         [0.1950, 0.0035, 0.0202,  ..., 0.0156, 0.0137, 0.0389],
         [0.3035, 0.0035, 0.0202,  ..., 0.0156, 0.0137, 0.8748],
         [0.3064, 0.9896, 0.0202,  ..., 0.0156, 0.9590, 0.0475]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 86:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9757, 0.0356, 0.0500,  ..., 0.9722, 0.9665, 0.0477],
         [0.0081, 0.0356, 0.0500,  ..., 0.0093, 0.0112, 0.0477],
         [0.0081, 0.0356, 0.0500,  ..., 0.0093, 0.0112, 0.0477],
         [0.0081, 0.8933, 0.8501,  ..., 0.0093, 0.0112, 0.8568]],
        [[0.9746, 0.0678, 0.0166,  ..., 0.0926, 0.0064, 0.0098],
         [0.0085, 0.0678, 0.0166,  ..., 0.0926, 0.0064, 0.0098],
         [0.0085, 0.0678, 0.0166,  ..., 0.1147, 0.9809, 0.9705],
         [0.0085, 0.7966, 0.9503,  ..., 0.7002, 0.0064, 0.0098]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0733, 0.3698, 0.9888,  ..., 0.9781, 0.0256, 0.0343],
         [0.0733, 0.2101, 0.0037,  ..., 0.0073, 0.0256, 0.0343],
         [0.7683, 0.2101, 0.0037,  ..., 0.0073, 0.9233, 0.8970],
         [0.0850, 0.2101, 0.0037,  ..., 0.0073, 0.0256, 0.0343]],
        [[0.1363, 0.0088, 0.9497,  ..., 0.9597, 0.0205, 0.0229],
         [0.1363, 0.0088, 0.0168,  ..., 0.0137, 0.0205, 0.0229],
         [0.5910, 0.0088, 0.0168,  ..., 0.0127, 0.0205, 0.9312],
         [0.1363, 0.9737, 0.0168,  ..., 0.0139, 0.9386, 0.0229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:40,011 [Process: 0] Synchronize training processes
2024-08-20 17:28:40,011 [Process: 0] Evaluating...
2024-08-20 17:28:40,013 [Process: 0] EPOCH 87:
2024-08-20 17:28:40,014 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:41,060 [Process: 0] Synchronize training processes
2024-08-20 17:28:41,060 [Process: 0] Evaluating...
2024-08-20 17:28:41,062 [Process: 0] EPOCH 88:
2024-08-20 17:28:41,063 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 87:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9621, 0.0381, 0.0656,  ..., 0.9553, 0.5066, 0.0781],
         [0.0126, 0.0381, 0.0656,  ..., 0.0149, 0.1610, 0.0781],
         [0.0126, 0.0458, 0.0762,  ..., 0.0149, 0.1713, 0.0781],
         [0.0126, 0.8780, 0.7926,  ..., 0.0149, 0.1610, 0.7657]],
        [[0.9537, 0.0526, 0.0310,  ..., 0.0992, 0.0586, 0.0060],
         [0.0154, 0.0526, 0.0310,  ..., 0.0992, 0.0586, 0.0060],
         [0.0154, 0.0526, 0.0310,  ..., 0.0992, 0.8243, 0.9819],
         [0.0154, 0.8421, 0.9069,  ..., 0.7025, 0.0586, 0.0060]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5423e-02, 5.2185e-01, 9.8382e-01,  ..., 9.7841e-01,
          5.7237e-02, 3.9955e-02],
         [5.5423e-02, 1.5938e-01, 5.2849e-03,  ..., 7.1975e-03,
          5.7237e-02, 3.9955e-02],
         [8.3373e-01, 1.5938e-01, 5.2849e-03,  ..., 7.1975e-03,
          8.2675e-01, 8.8013e-01],
         [5.5423e-02, 1.5938e-01, 5.6088e-03,  ..., 7.1975e-03,
          5.8777e-02, 3.9955e-02]],
        [[6.9260e-02, 7.9339e-04, 9.4625e-01,  ..., 9.6107e-01,
          2.5620e-02, 4.6823e-02],
         [6.9260e-02, 7.9339e-04, 1.7917e-02,  ..., 1.2846e-02,
          2.5620e-02, 4.6823e-02],
         [7.9222e-01, 7.9339e-04, 1.7917e-02,  ..., 1.2846e-02,
          2.5620e-02, 8.5953e-01],
         [6.9260e-02, 9.9762e-01, 1.7917e-02,  ..., 1.3236e-02,
          9.2314e-01, 4.6823e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 88:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9886, 0.0558, 0.0342,  ..., 0.8999, 0.9104, 0.0553],
         [0.0038, 0.0558, 0.0342,  ..., 0.0334, 0.0299, 0.0553],
         [0.0038, 0.0558, 0.0342,  ..., 0.0334, 0.0299, 0.0670],
         [0.0038, 0.8325, 0.8973,  ..., 0.0334, 0.0299, 0.8224]],
        [[0.9589, 0.0517, 0.0268,  ..., 0.0410, 0.0199, 0.0084],
         [0.0137, 0.0517, 0.0268,  ..., 0.0410, 0.0199, 0.0084],
         [0.0137, 0.0517, 0.0268,  ..., 0.0410, 0.9403, 0.9747],
         [0.0137, 0.8449, 0.9195,  ..., 0.8769, 0.0199, 0.0084]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:28:42,128 [Process: 0] Synchronize training processes
2024-08-20 17:28:42,129 [Process: 0] Evaluating...
2024-08-20 17:28:42,130 [Process: 0] EPOCH 89:
2024-08-20 17:28:42,132 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:43,135 [Process: 0] Synchronize training processes
2024-08-20 17:28:43,135 [Process: 0] Evaluating...
2024-08-20 17:28:43,137 [Process: 0] EPOCH 90:
2024-08-20 17:28:43,138 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0982, 0.2500, 0.9767,  ..., 0.9761, 0.0363, 0.0217],
         [0.0982, 0.2500, 0.0074,  ..., 0.0080, 0.0363, 0.0217],
         [0.6103, 0.2500, 0.0074,  ..., 0.0080, 0.8854, 0.9348],
         [0.1933, 0.2500, 0.0085,  ..., 0.0080, 0.0420, 0.0217]],
        [[0.0835, 0.0145, 0.8006,  ..., 0.9760, 0.0030, 0.0320],
         [0.0835, 0.0145, 0.0665,  ..., 0.0080, 0.0030, 0.0320],
         [0.7307, 0.0145, 0.0665,  ..., 0.0080, 0.0030, 0.9041],
         [0.1023, 0.9566, 0.0665,  ..., 0.0080, 0.9910, 0.0320]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 89:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9427, 0.0118, 0.0393,  ..., 0.8970, 0.4148, 0.0267],
         [0.0190, 0.0116, 0.0393,  ..., 0.0328, 0.1951, 0.0267],
         [0.0194, 0.0116, 0.0393,  ..., 0.0375, 0.1951, 0.0267],
         [0.0190, 0.9650, 0.8820,  ..., 0.0328, 0.1951, 0.9200]],
        [[0.9812, 0.0333, 0.0785,  ..., 0.0178, 0.0473, 0.0112],
         [0.0063, 0.0333, 0.0785,  ..., 0.0177, 0.0473, 0.0112],
         [0.0063, 0.0333, 0.0805,  ..., 0.0177, 0.8581, 0.9664],
         [0.0063, 0.9001, 0.7625,  ..., 0.9467, 0.0473, 0.0112]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1031, 0.3563, 0.9551,  ..., 0.9739, 0.0503, 0.0487],
         [0.1031, 0.1921, 0.0150,  ..., 0.0087, 0.0481, 0.0421],
         [0.6509, 0.1921, 0.0150,  ..., 0.0087, 0.8535, 0.8670],
         [0.1429, 0.2594, 0.0150,  ..., 0.0087, 0.0481, 0.0421]],
        [[0.2262, 0.0177, 0.9567,  ..., 0.9349, 0.0056, 0.0533],
         [0.2262, 0.0177, 0.0144,  ..., 0.0217, 0.0053, 0.0533],
         [0.3214, 0.0177, 0.0144,  ..., 0.0217, 0.0053, 0.8400],
         [0.2262, 0.9468, 0.0144,  ..., 0.0217, 0.9838, 0.0533]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 90:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9546, 0.0215, 0.0261,  ..., 0.9075, 0.7855, 0.0462],
         [0.0151, 0.0215, 0.0261,  ..., 0.0308, 0.0715, 0.0431],
         [0.0151, 0.0250, 0.0261,  ..., 0.0308, 0.0715, 0.0431],
         [0.0151, 0.9321, 0.9218,  ..., 0.0308, 0.0715, 0.8676]],
        [[0.8730, 0.0683, 0.0836,  ..., 0.1191, 0.0121, 0.0232],
         [0.0421, 0.0683, 0.0836,  ..., 0.1191, 0.0121, 0.0232],
         [0.0428, 0.0683, 0.0836,  ..., 0.2962, 0.9636, 0.9305],
         [0.0421, 0.7950, 0.7492,  ..., 0.4655, 0.0121, 0.0232]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
2024-08-20 17:28:44,131 [Process: 0] Synchronize training processes
2024-08-20 17:28:44,132 [Process: 0] Evaluating...
2024-08-20 17:28:44,133 [Process: 0] EPOCH 91:
2024-08-20 17:28:44,135 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:45,152 [Process: 0] Synchronize training processes
2024-08-20 17:28:45,152 [Process: 0] Evaluating...
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.5166e-02, 2.5000e-01, 9.7665e-01,  ..., 9.9585e-01,
          2.1703e-02, 4.2420e-02],
         [7.5166e-02, 2.5000e-01, 7.7818e-03,  ..., 1.3829e-03,
          2.1703e-02, 4.2420e-02],
         [7.4612e-01, 2.5000e-01, 7.7818e-03,  ..., 1.3829e-03,
          9.3489e-01, 8.6949e-01],
         [1.0355e-01, 2.5000e-01, 7.7818e-03,  ..., 1.3829e-03,
          2.1703e-02, 4.5666e-02]],
        [[2.1085e-01, 1.2249e-02, 9.6199e-01,  ..., 9.7241e-01,
          5.1359e-04, 2.7627e-02],
         [2.1085e-01, 1.2249e-02, 1.2671e-02,  ..., 9.1959e-03,
          5.1359e-04, 2.7627e-02],
         [3.6466e-01, 1.2249e-02, 1.2671e-02,  ..., 9.1959e-03,
          5.1359e-04, 9.1712e-01],
         [2.1363e-01, 9.6325e-01, 1.2671e-02,  ..., 9.1959e-03,
          9.9846e-01, 2.7627e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 91:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9903, 0.0812, 0.0420,  ..., 0.9721, 0.0764, 0.0541],
         [0.0032, 0.0561, 0.0420,  ..., 0.0093, 0.0762, 0.0541],
         [0.0032, 0.0742, 0.0420,  ..., 0.0093, 0.0744, 0.0541],
         [0.0032, 0.7885, 0.8740,  ..., 0.0093, 0.7729, 0.8378]],
        [[0.5510, 0.0385, 0.0746,  ..., 0.0669, 0.0155, 0.0264],
         [0.1430, 0.0385, 0.0746,  ..., 0.0669, 0.0155, 0.0264],
         [0.1629, 0.0385, 0.0746,  ..., 0.0706, 0.9534, 0.9209],
         [0.1430, 0.8846, 0.7763,  ..., 0.7956, 0.0155, 0.0264]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0505, 0.3664, 0.9898,  ..., 0.9870, 0.0168, 0.0257],
         [0.0505, 0.2112, 0.0034,  ..., 0.0043, 0.0168, 0.0257],
         [0.8486, 0.2112, 0.0034,  ..., 0.0043, 0.9496, 0.9230],
         [0.0505, 0.2112, 0.0034,  ..., 0.0043, 0.0168, 0.0257]],
        [[0.1956, 0.0525, 0.9566,  ..., 0.9687, 0.0177, 0.0378],
         [0.1956, 0.0525, 0.0145,  ..., 0.0104, 0.0177, 0.0378],
         [0.3494, 0.0525, 0.0145,  ..., 0.0104, 0.0177, 0.8866],
         [0.2595, 0.8426, 0.0145,  ..., 0.0104, 0.9470, 0.0378]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:28:47,006 [Process: 0] EPOCH 92:
2024-08-20 17:28:47,008 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 92:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9440, 0.0206, 0.0150,  ..., 0.8500, 0.3177, 0.0823],
         [0.0187, 0.0206, 0.0150,  ..., 0.0500, 0.2221, 0.0598],
         [0.0187, 0.0206, 0.0150,  ..., 0.0500, 0.2221, 0.0598],
         [0.0187, 0.9382, 0.9549,  ..., 0.0500, 0.2380, 0.7981]],
        [[0.9643, 0.0244, 0.0705,  ..., 0.0910, 0.0222, 0.0893],
         [0.0119, 0.0244, 0.0699,  ..., 0.0910, 0.0222, 0.0893],
         [0.0119, 0.0244, 0.0700,  ..., 0.1114, 0.9335, 0.7321],
         [0.0119, 0.9268, 0.7896,  ..., 0.7065, 0.0222, 0.0893]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.4954e-02, 2.9429e-01, 9.2858e-01,  ..., 9.7069e-01,
          2.4431e-02, 3.5928e-02],
         [3.4258e-02, 2.2193e-01, 2.1697e-02,  ..., 1.0024e-02,
          2.4431e-02, 3.4482e-02],
         [8.9653e-01, 2.2193e-01, 2.1697e-02,  ..., 9.6436e-03,
          9.2671e-01, 8.9511e-01],
         [3.4258e-02, 2.6184e-01, 2.8025e-02,  ..., 9.6436e-03,
          2.4431e-02, 3.4482e-02]],
        [[1.0713e-01, 1.5722e-01, 9.4443e-01,  ..., 8.9564e-01,
          3.5705e-04, 3.2925e-02],
         [1.0713e-01, 1.5722e-01, 1.8523e-02,  ..., 3.3632e-02,
          3.5705e-04, 3.2925e-02],
         [6.5220e-01, 1.5722e-01, 1.8523e-02,  ..., 3.3632e-02,
          3.5705e-04, 8.9742e-01],
         [1.3354e-01, 5.2833e-01, 1.8523e-02,  ..., 3.7097e-02,
          9.9893e-01, 3.6727e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:48,041 [Process: 0] Synchronize training processes
2024-08-20 17:28:48,041 [Process: 0] Evaluating...
2024-08-20 17:28:48,043 [Process: 0] EPOCH 93:
2024-08-20 17:28:48,044 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:49,062 [Process: 0] Synchronize training processes
2024-08-20 17:28:49,062 [Process: 0] Evaluating...
2024-08-20 17:28:49,064 [Process: 0] EPOCH 94:
2024-08-20 17:28:49,065 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 93:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9845, 0.0559, 0.0855,  ..., 0.9714, 0.9562, 0.1155],
         [0.0052, 0.0559, 0.0855,  ..., 0.0095, 0.0146, 0.1155],
         [0.0051, 0.0559, 0.0889,  ..., 0.0095, 0.0146, 0.1155],
         [0.0051, 0.8324, 0.7400,  ..., 0.0095, 0.0146, 0.6536]],
        [[0.9283, 0.0763, 0.0262,  ..., 0.0554, 0.0077, 0.0228],
         [0.0224, 0.0763, 0.0262,  ..., 0.0504, 0.0077, 0.0228],
         [0.0268, 0.0763, 0.0262,  ..., 0.0504, 0.9769, 0.9317],
         [0.0224, 0.7712, 0.9214,  ..., 0.8437, 0.0077, 0.0228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.5287e-02, 3.0293e-01, 8.9206e-01,  ..., 9.2185e-01,
          3.8398e-02, 2.5738e-02],
         [5.2780e-02, 2.3236e-01, 2.9469e-02,  ..., 2.5973e-02,
          3.8398e-02, 2.5738e-02],
         [8.3623e-01, 2.3236e-01, 2.9469e-02,  ..., 2.5973e-02,
          8.8355e-01, 9.2279e-01],
         [5.5702e-02, 2.3236e-01, 4.8998e-02,  ..., 2.6206e-02,
          3.9658e-02, 2.5738e-02]],
        [[1.0461e-01, 4.0899e-04, 9.4336e-01,  ..., 9.2180e-01,
          2.5000e-01, 5.7997e-02],
         [1.0461e-01, 4.0899e-04, 1.8879e-02,  ..., 2.6065e-02,
          2.5000e-01, 5.2794e-02],
         [6.8617e-01, 4.0899e-04, 1.8879e-02,  ..., 2.6065e-02,
          2.5000e-01, 8.3641e-01],
         [1.0461e-01, 9.9877e-01, 1.8879e-02,  ..., 2.6065e-02,
          2.5000e-01, 5.2794e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 94:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9159, 0.0254, 0.0668,  ..., 0.9915, 0.9630, 0.0455],
         [0.0281, 0.0254, 0.0668,  ..., 0.0028, 0.0123, 0.0455],
         [0.0280, 0.0254, 0.0668,  ..., 0.0028, 0.0123, 0.0455],
         [0.0280, 0.9239, 0.7995,  ..., 0.0028, 0.0123, 0.8635]],
        [[0.9753, 0.0435, 0.0525,  ..., 0.0225, 0.0075, 0.0241],
         [0.0082, 0.0435, 0.0525,  ..., 0.0225, 0.0075, 0.0241],
         [0.0082, 0.0435, 0.0525,  ..., 0.0225, 0.9775, 0.9277],
         [0.0082, 0.8694, 0.8425,  ..., 0.9326, 0.0075, 0.0241]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0873, 0.2500, 0.9606,  ..., 0.9950, 0.0499, 0.0378],
         [0.0873, 0.2500, 0.0131,  ..., 0.0017, 0.0499, 0.0355],
         [0.7381, 0.2500, 0.0131,  ..., 0.0017, 0.8504, 0.8912],
         [0.0873, 0.2500, 0.0131,  ..., 0.0017, 0.0499, 0.0355]],
        [[0.1095, 0.0160, 0.9748,  ..., 0.9488, 0.9282, 0.0182],
         [0.1095, 0.0160, 0.0084,  ..., 0.0171, 0.0239, 0.0182],
         [0.6715, 0.0160, 0.0084,  ..., 0.0171, 0.0239, 0.9453],
         [0.1095, 0.9520, 0.0084,  ..., 0.0171, 0.0239, 0.0182]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:50,077 [Process: 0] Synchronize training processes
2024-08-20 17:28:50,078 [Process: 0] Evaluating...
2024-08-20 17:28:50,079 [Process: 0] EPOCH 95:
2024-08-20 17:28:50,081 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:51,072 [Process: 0] Synchronize training processes
2024-08-20 17:28:51,072 [Process: 0] Evaluating...
2024-08-20 17:28:51,074 [Process: 0] EPOCH 96:
2024-08-20 17:28:51,076 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 95:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9599, 0.0237, 0.0896,  ..., 0.4958, 0.9482, 0.0235],
         [0.0134, 0.0237, 0.0896,  ..., 0.1681, 0.0173, 0.0238],
         [0.0134, 0.0237, 0.0896,  ..., 0.1681, 0.0173, 0.0235],
         [0.0134, 0.9288, 0.7312,  ..., 0.1681, 0.0173, 0.9292]],
        [[0.9165, 0.0169, 0.0240,  ..., 0.0927, 0.0676, 0.0044],
         [0.0278, 0.0169, 0.0240,  ..., 0.0927, 0.0676, 0.0044],
         [0.0278, 0.0169, 0.0240,  ..., 0.0927, 0.7971, 0.9868],
         [0.0278, 0.9492, 0.9280,  ..., 0.7218, 0.0676, 0.0044]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[6.2496e-02, 2.3510e-01, 9.0604e-01,  ..., 9.6395e-01,
          2.4870e-02, 1.5115e-02],
         [6.2496e-02, 2.3510e-01, 3.1319e-02,  ..., 1.1119e-02,
          2.4870e-02, 1.5115e-02],
         [8.1251e-01, 2.3510e-01, 3.1319e-02,  ..., 1.1119e-02,
          9.2539e-01, 9.5466e-01],
         [6.2496e-02, 2.9471e-01, 3.1319e-02,  ..., 1.3815e-02,
          2.4870e-02, 1.5115e-02]],
        [[6.1427e-02, 4.6947e-04, 9.2717e-01,  ..., 9.8163e-01,
          6.6747e-01, 6.8471e-02],
         [6.1427e-02, 4.6947e-04, 2.1156e-02,  ..., 6.1222e-03,
          1.0394e-01, 6.4392e-02],
         [8.1572e-01, 4.6947e-04, 2.1156e-02,  ..., 6.1222e-03,
          1.0394e-01, 8.0274e-01],
         [6.1427e-02, 9.9859e-01, 3.0518e-02,  ..., 6.1222e-03,
          1.2465e-01, 6.4392e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 96:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9897, 0.0365, 0.0374,  ..., 0.9606, 0.9615, 0.0963],
         [0.0034, 0.0365, 0.0374,  ..., 0.0131, 0.0128, 0.0963],
         [0.0034, 0.0365, 0.0374,  ..., 0.0131, 0.0128, 0.0963],
         [0.0034, 0.8905, 0.8877,  ..., 0.0131, 0.0128, 0.7111]],
        [[0.9582, 0.0203, 0.0244,  ..., 0.0501, 0.0256, 0.0036],
         [0.0139, 0.0203, 0.0244,  ..., 0.0501, 0.0256, 0.0036],
         [0.0139, 0.0203, 0.0244,  ..., 0.0501, 0.9232, 0.9893],
         [0.0139, 0.9391, 0.9269,  ..., 0.8498, 0.0256, 0.0036]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1211, 0.3304, 0.9807,  ..., 0.9835, 0.0247, 0.0249],
         [0.1211, 0.2111, 0.0064,  ..., 0.0055, 0.0247, 0.0249],
         [0.6334, 0.2111, 0.0064,  ..., 0.0055, 0.9258, 0.9252],
         [0.1243, 0.2475, 0.0064,  ..., 0.0055, 0.0247, 0.0249]],
        [[0.0329, 0.0265, 0.9734,  ..., 0.9471, 0.0038, 0.0199],
         [0.0329, 0.0265, 0.0089,  ..., 0.0176, 0.0038, 0.0199],
         [0.9014, 0.0265, 0.0089,  ..., 0.0176, 0.0038, 0.9404],
         [0.0329, 0.9206, 0.0089,  ..., 0.0176, 0.9886, 0.0199]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:52,086 [Process: 0] Synchronize training processes
2024-08-20 17:28:52,086 [Process: 0] Evaluating...
2024-08-20 17:28:52,088 [Process: 0] EPOCH 97:
2024-08-20 17:28:52,090 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:53,115 [Process: 0] Synchronize training processes
2024-08-20 17:28:53,116 [Process: 0] Evaluating...
2024-08-20 17:28:53,117 [Process: 0] EPOCH 98:
2024-08-20 17:28:53,119 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 97:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9558, 0.0421, 0.1359,  ..., 0.9695, 0.5361, 0.0855],
         [0.0147, 0.0421, 0.1359,  ..., 0.0102, 0.1546, 0.0855],
         [0.0147, 0.0422, 0.1359,  ..., 0.0102, 0.1546, 0.0855],
         [0.0147, 0.8736, 0.5922,  ..., 0.0102, 0.1546, 0.7436]],
        [[0.8922, 0.0274, 0.0224,  ..., 0.0151, 0.0045, 0.0071],
         [0.0359, 0.0274, 0.0224,  ..., 0.0151, 0.0045, 0.0071],
         [0.0359, 0.0274, 0.0224,  ..., 0.0151, 0.9865, 0.9786],
         [0.0359, 0.9179, 0.9328,  ..., 0.9546, 0.0045, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1395, 0.2181, 0.8631,  ..., 0.9844, 0.0189, 0.0205],
         [0.1395, 0.2181, 0.0456,  ..., 0.0052, 0.0189, 0.0205],
         [0.5084, 0.2181, 0.0456,  ..., 0.0052, 0.9432, 0.9386],
         [0.2125, 0.3457, 0.0456,  ..., 0.0052, 0.0189, 0.0205]],
        [[0.0219, 0.0124, 0.9755,  ..., 0.9860, 0.0057, 0.0346],
         [0.0219, 0.0126, 0.0082,  ..., 0.0047, 0.0057, 0.0346],
         [0.9344, 0.0124, 0.0082,  ..., 0.0047, 0.0057, 0.8962],
         [0.0219, 0.9625, 0.0082,  ..., 0.0047, 0.9829, 0.0346]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 98:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9578, 0.0303, 0.1236,  ..., 0.9645, 0.2726, 0.0966],
         [0.0143, 0.0303, 0.1236,  ..., 0.0118, 0.2425, 0.0966],
         [0.0140, 0.0303, 0.1393,  ..., 0.0118, 0.2425, 0.0966],
         [0.0140, 0.9091, 0.6135,  ..., 0.0118, 0.2425, 0.7103]],
        [[0.7216, 0.0127, 0.0171,  ..., 0.0277, 0.0065, 0.0219],
         [0.0928, 0.0127, 0.0171,  ..., 0.0277, 0.0065, 0.0219],
         [0.0928, 0.0127, 0.0171,  ..., 0.0289, 0.9806, 0.9343],
         [0.0928, 0.9618, 0.9488,  ..., 0.9156, 0.0065, 0.0219]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.3382e-02, 5.3291e-01, 8.9214e-01,  ..., 9.6267e-01,
          1.5446e-02, 3.4661e-02],
         [7.3382e-02, 1.5553e-01, 3.5933e-02,  ..., 1.2444e-02,
          1.5446e-02, 3.4661e-02],
         [7.7376e-01, 1.5553e-01, 3.5933e-02,  ..., 1.2444e-02,
          9.5366e-01, 8.9602e-01],
         [7.9479e-02, 1.5603e-01, 3.5989e-02,  ..., 1.2444e-02,
          1.5446e-02, 3.4661e-02]],
        [[3.7599e-02, 7.1808e-04, 9.6488e-01,  ..., 8.8808e-01,
          5.2711e-03, 1.7794e-02],
         [3.7599e-02, 7.1808e-04, 1.1708e-02,  ..., 3.1743e-02,
          5.2711e-03, 1.7794e-02],
         [8.8720e-01, 7.1808e-04, 1.1708e-02,  ..., 3.1743e-02,
          5.2711e-03, 9.4662e-01],
         [3.7599e-02, 9.9785e-01, 1.1708e-02,  ..., 4.8429e-02,
          9.8419e-01, 1.7794e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:54,101 [Process: 0] Synchronize training processes
2024-08-20 17:28:54,102 [Process: 0] Evaluating...
2024-08-20 17:28:54,103 [Process: 0] EPOCH 99:
2024-08-20 17:28:54,105 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:55,138 [Process: 0] Synchronize training processes
2024-08-20 17:28:55,138 [Process: 0] Evaluating...
2024-08-20 17:28:55,140 [Process: 0] EPOCH 100:
2024-08-20 17:28:55,141 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 99:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9741, 0.0183, 0.0189,  ..., 0.9495, 0.8886, 0.0168],
         [0.0086, 0.0183, 0.0189,  ..., 0.0168, 0.0371, 0.0168],
         [0.0086, 0.0183, 0.0189,  ..., 0.0168, 0.0371, 0.0168],
         [0.0086, 0.9452, 0.9434,  ..., 0.0168, 0.0371, 0.9496]],
        [[0.5687, 0.1364, 0.0175,  ..., 0.1130, 0.0039, 0.0027],
         [0.1286, 0.1344, 0.0175,  ..., 0.1130, 0.0039, 0.0027],
         [0.1741, 0.1344, 0.0175,  ..., 0.5749, 0.9882, 0.9918],
         [0.1286, 0.5948, 0.9475,  ..., 0.1992, 0.0039, 0.0027]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0927, 0.3460, 0.9761,  ..., 0.9935, 0.0235, 0.0411],
         [0.0927, 0.2023, 0.0076,  ..., 0.0022, 0.0235, 0.0411],
         [0.7212, 0.2023, 0.0076,  ..., 0.0022, 0.9296, 0.8768],
         [0.0934, 0.2494, 0.0086,  ..., 0.0022, 0.0235, 0.0411]],
        [[0.1300, 0.0124, 0.9830,  ..., 0.9790, 0.0365, 0.0291],
         [0.1300, 0.0124, 0.0057,  ..., 0.0070, 0.0365, 0.0291],
         [0.6100, 0.0124, 0.0057,  ..., 0.0070, 0.0365, 0.9127],
         [0.1300, 0.9627, 0.0057,  ..., 0.0070, 0.8905, 0.0291]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 100:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9759, 0.0504, 0.0579,  ..., 0.9590, 0.9156, 0.0202],
         [0.0080, 0.0504, 0.0579,  ..., 0.0137, 0.0281, 0.0202],
         [0.0080, 0.0504, 0.0579,  ..., 0.0137, 0.0281, 0.0202],
         [0.0080, 0.8489, 0.8264,  ..., 0.0137, 0.0281, 0.9394]],
        [[0.7709, 0.1119, 0.0305,  ..., 0.0104, 0.0107, 0.0177],
         [0.0764, 0.0995, 0.0305,  ..., 0.0104, 0.0107, 0.0177],
         [0.0764, 0.0995, 0.0305,  ..., 0.0104, 0.9680, 0.9468],
         [0.0764, 0.6892, 0.9086,  ..., 0.9689, 0.0107, 0.0177]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1183, 0.2584, 0.9892,  ..., 0.9837, 0.0204, 0.0130],
         [0.1183, 0.2472, 0.0036,  ..., 0.0054, 0.0204, 0.0130],
         [0.5654, 0.2472, 0.0036,  ..., 0.0054, 0.9387, 0.9610],
         [0.1981, 0.2472, 0.0036,  ..., 0.0054, 0.0204, 0.0130]],
        [[0.2500, 0.0019, 0.9078,  ..., 0.9338, 0.0161, 0.0267],
         [0.2500, 0.0019, 0.0312,  ..., 0.0227, 0.0161, 0.0267],
         [0.2500, 0.0019, 0.0289,  ..., 0.0218, 0.0161, 0.9192],
         [0.2500, 0.9944, 0.0321,  ..., 0.0218, 0.9517, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:28:56,112 [Process: 0] Synchronize training processes
2024-08-20 17:28:56,112 [Process: 0] Evaluating...
2024-08-20 17:28:56,114 [Process: 0] EPOCH 101:
2024-08-20 17:28:56,115 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:28:57,113 [Process: 0] Synchronize training processes
2024-08-20 17:28:57,114 [Process: 0] Evaluating...
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 101:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9792, 0.0181, 0.0213,  ..., 0.9800, 0.9404, 0.0428],
         [0.0069, 0.0181, 0.0213,  ..., 0.0063, 0.0199, 0.0428],
         [0.0069, 0.0181, 0.0213,  ..., 0.0074, 0.0199, 0.0428],
         [0.0069, 0.9457, 0.9361,  ..., 0.0063, 0.0199, 0.8715]],
        [[0.8816, 0.0460, 0.0307,  ..., 0.0448, 0.0067, 0.0132],
         [0.0395, 0.0460, 0.0307,  ..., 0.0448, 0.0067, 0.0132],
         [0.0395, 0.0460, 0.0307,  ..., 0.0453, 0.9799, 0.9605],
         [0.0395, 0.8621, 0.9080,  ..., 0.8651, 0.0067, 0.0132]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0654e-01, 2.0689e-01, 9.8822e-01,  ..., 9.9737e-01,
          1.7708e-02, 2.3765e-02],
         [1.0654e-01, 2.0689e-01, 3.9273e-03,  ..., 8.7542e-04,
          1.7708e-02, 2.3765e-02],
         [4.3999e-01, 2.0689e-01, 3.9273e-03,  ..., 8.7542e-04,
          9.4688e-01, 9.2871e-01],
         [3.4693e-01, 3.7932e-01, 3.9273e-03,  ..., 8.7542e-04,
          1.7708e-02, 2.3765e-02]],
        [[1.2084e-01, 1.9654e-03, 9.8267e-01,  ..., 9.3361e-01,
          8.0598e-03, 1.1168e-02],
         [1.2084e-01, 1.9654e-03, 5.7762e-03,  ..., 1.9845e-02,
          8.0598e-03, 1.1168e-02],
         [6.3749e-01, 1.9654e-03, 5.7762e-03,  ..., 1.9845e-02,
          8.0598e-03, 9.6650e-01],
         [1.2084e-01, 9.9410e-01, 5.7762e-03,  ..., 2.6697e-02,
          9.7582e-01, 1.1168e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:28:58,970 [Process: 0] EPOCH 102:
2024-08-20 17:28:58,972 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 102:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9088, 0.0315, 0.0184,  ..., 0.9750, 0.9656, 0.0238],
         [0.0281, 0.0315, 0.0184,  ..., 0.0083, 0.0115, 0.0238],
         [0.0287, 0.0331, 0.0184,  ..., 0.0083, 0.0115, 0.0258],
         [0.0344, 0.9039, 0.9449,  ..., 0.0083, 0.0115, 0.9265]],
        [[0.9188, 0.0436, 0.0339,  ..., 0.0690, 0.0300, 0.0073],
         [0.0271, 0.0436, 0.0339,  ..., 0.0690, 0.0300, 0.0073],
         [0.0271, 0.0436, 0.0339,  ..., 0.0702, 0.9100, 0.9780],
         [0.0271, 0.8692, 0.8983,  ..., 0.7919, 0.0300, 0.0073]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0547, 0.3233, 0.9798,  ..., 0.9877, 0.0303, 0.0351],
         [0.0547, 0.1737, 0.0067,  ..., 0.0041, 0.0303, 0.0351],
         [0.8360, 0.1686, 0.0067,  ..., 0.0041, 0.9087, 0.8921],
         [0.0547, 0.3344, 0.0067,  ..., 0.0041, 0.0306, 0.0377]],
        [[0.0299, 0.0178, 0.9959,  ..., 0.9642, 0.3249, 0.0164],
         [0.0299, 0.0178, 0.0013,  ..., 0.0119, 0.2250, 0.0164],
         [0.9103, 0.0178, 0.0013,  ..., 0.0119, 0.2250, 0.9509],
         [0.0299, 0.9465, 0.0015,  ..., 0.0119, 0.2250, 0.0164]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 103:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:00,010 [Process: 0] Synchronize training processes
2024-08-20 17:29:00,010 [Process: 0] Evaluating...
2024-08-20 17:29:00,012 [Process: 0] EPOCH 103:
2024-08-20 17:29:00,013 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:01,020 [Process: 0] Synchronize training processes
2024-08-20 17:29:01,020 [Process: 0] Evaluating...
2024-08-20 17:29:01,022 [Process: 0] EPOCH 104:
2024-08-20 17:29:01,023 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9483, 0.0435, 0.0409,  ..., 0.9873, 0.9385, 0.0614],
         [0.0166, 0.0367, 0.0409,  ..., 0.0042, 0.0201, 0.0625],
         [0.0184, 0.0367, 0.0409,  ..., 0.0042, 0.0214, 0.0614],
         [0.0166, 0.8830, 0.8774,  ..., 0.0042, 0.0201, 0.8147]],
        [[0.8769, 0.0289, 0.0435,  ..., 0.0424, 0.0081, 0.0180],
         [0.0452, 0.0289, 0.0435,  ..., 0.0424, 0.0081, 0.0180],
         [0.0389, 0.0313, 0.0569,  ..., 0.0424, 0.9758, 0.9459],
         [0.0389, 0.9109, 0.8560,  ..., 0.8727, 0.0081, 0.0180]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0558, 0.2277, 0.9699,  ..., 0.9800, 0.0305, 0.0253],
         [0.0558, 0.2260, 0.0100,  ..., 0.0065, 0.0305, 0.0253],
         [0.8015, 0.1910, 0.0100,  ..., 0.0065, 0.9035, 0.9240],
         [0.0869, 0.3552, 0.0100,  ..., 0.0071, 0.0355, 0.0253]],
        [[0.0238, 0.0041, 0.9618,  ..., 0.8827, 0.7010, 0.0243],
         [0.0238, 0.0041, 0.0127,  ..., 0.0354, 0.1001, 0.0243],
         [0.9287, 0.0041, 0.0127,  ..., 0.0354, 0.0994, 0.9272],
         [0.0238, 0.9876, 0.0128,  ..., 0.0465, 0.0994, 0.0243]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 104:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9620, 0.0711, 0.0299,  ..., 0.9680, 0.9794, 0.0311],
         [0.0127, 0.0711, 0.0280,  ..., 0.0107, 0.0069, 0.0311],
         [0.0127, 0.0711, 0.0280,  ..., 0.0107, 0.0069, 0.0311],
         [0.0127, 0.7867, 0.9141,  ..., 0.0107, 0.0069, 0.9068]],
        [[0.5886, 0.0478, 0.0316,  ..., 0.0186, 0.0145, 0.0229],
         [0.2034, 0.0478, 0.0316,  ..., 0.0150, 0.0145, 0.0229],
         [0.1040, 0.0501, 0.0355,  ..., 0.0150, 0.9566, 0.9314],
         [0.1040, 0.8542, 0.9012,  ..., 0.9513, 0.0145, 0.0229]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0882, 0.1500, 0.9811,  ..., 0.9564, 0.0579, 0.0144],
         [0.0882, 0.4936, 0.0063,  ..., 0.0140, 0.0579, 0.0144],
         [0.6499, 0.1500, 0.0063,  ..., 0.0140, 0.8253, 0.9568],
         [0.1736, 0.2065, 0.0063,  ..., 0.0156, 0.0588, 0.0144]],
        [[0.0125, 0.0044, 0.9862,  ..., 0.9561, 0.7831, 0.0252],
         [0.0125, 0.0044, 0.0046,  ..., 0.0164, 0.1022, 0.0252],
         [0.9624, 0.0044, 0.0046,  ..., 0.0138, 0.0573, 0.9243],
         [0.0125, 0.9868, 0.0046,  ..., 0.0138, 0.0573, 0.0252]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 105:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:02,038 [Process: 0] Synchronize training processes
2024-08-20 17:29:02,039 [Process: 0] Evaluating...
2024-08-20 17:29:02,040 [Process: 0] EPOCH 105:
2024-08-20 17:29:02,042 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:03,037 [Process: 0] Synchronize training processes
2024-08-20 17:29:03,037 [Process: 0] Evaluating...
2024-08-20 17:29:03,039 [Process: 0] EPOCH 106:
2024-08-20 17:29:03,040 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9442, 0.0366, 0.0149,  ..., 0.9669, 0.8014, 0.0161],
         [0.0190, 0.0366, 0.0149,  ..., 0.0110, 0.0904, 0.0161],
         [0.0184, 0.0366, 0.0149,  ..., 0.0110, 0.0541, 0.0161],
         [0.0184, 0.8902, 0.9554,  ..., 0.0110, 0.0541, 0.9516]],
        [[0.3994, 0.0166, 0.0308,  ..., 0.0190, 0.0039, 0.0292],
         [0.3074, 0.0166, 0.0308,  ..., 0.0190, 0.0039, 0.0292],
         [0.1466, 0.0166, 0.0308,  ..., 0.0190, 0.9884, 0.9125],
         [0.1466, 0.9502, 0.9077,  ..., 0.9430, 0.0039, 0.0292]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0578, 0.1500, 0.9954,  ..., 0.9914, 0.0667, 0.0306],
         [0.0578, 0.5487, 0.0015,  ..., 0.0029, 0.0667, 0.0306],
         [0.8187, 0.1500, 0.0015,  ..., 0.0029, 0.7859, 0.9079],
         [0.0657, 0.1512, 0.0015,  ..., 0.0029, 0.0806, 0.0310]],
        [[0.0229, 0.0145, 0.9864,  ..., 0.8419, 0.1542, 0.0380],
         [0.0229, 0.0145, 0.0045,  ..., 0.0737, 0.3939, 0.0359],
         [0.9314, 0.0145, 0.0045,  ..., 0.0422, 0.1542, 0.8903],
         [0.0229, 0.9564, 0.0045,  ..., 0.0422, 0.2977, 0.0359]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 106:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9406, 0.0288, 0.0826,  ..., 0.8908, 0.9222, 0.0524],
         [0.0198, 0.0288, 0.0515,  ..., 0.0490, 0.0277, 0.0524],
         [0.0198, 0.0288, 0.0677,  ..., 0.0301, 0.0251, 0.0524],
         [0.0198, 0.9137, 0.7982,  ..., 0.0301, 0.0251, 0.8429]],
        [[0.9657, 0.0552, 0.0262,  ..., 0.0235, 0.0150, 0.0329],
         [0.0114, 0.0482, 0.0262,  ..., 0.0235, 0.0150, 0.0329],
         [0.0114, 0.0596, 0.0262,  ..., 0.0240, 0.9550, 0.9013],
         [0.0114, 0.8370, 0.9214,  ..., 0.9289, 0.0150, 0.0329]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0887, 0.3141, 0.9928,  ..., 0.9939, 0.0204, 0.0236],
         [0.0887, 0.3223, 0.0024,  ..., 0.0020, 0.0204, 0.0236],
         [0.6853, 0.1545, 0.0024,  ..., 0.0020, 0.9388, 0.9293],
         [0.1374, 0.2091, 0.0024,  ..., 0.0020, 0.0204, 0.0236]],
        [[0.0358, 0.0109, 0.9682,  ..., 0.9457, 0.0089, 0.0462],
         [0.0358, 0.0109, 0.0106,  ..., 0.0266, 0.0089, 0.0462],
         [0.8925, 0.0109, 0.0106,  ..., 0.0139, 0.0089, 0.8614],
         [0.0358, 0.9674, 0.0106,  ..., 0.0139, 0.9733, 0.0462]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 107:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:04,039 [Process: 0] Synchronize training processes
2024-08-20 17:29:04,040 [Process: 0] Evaluating...
2024-08-20 17:29:04,041 [Process: 0] EPOCH 107:
2024-08-20 17:29:04,043 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:05,054 [Process: 0] Synchronize training processes
2024-08-20 17:29:05,055 [Process: 0] Evaluating...
2024-08-20 17:29:05,056 [Process: 0] EPOCH 108:
2024-08-20 17:29:05,058 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9728, 0.0215, 0.0375,  ..., 0.9858, 0.9911, 0.0352],
         [0.0091, 0.0215, 0.0375,  ..., 0.0047, 0.0030, 0.0352],
         [0.0091, 0.0215, 0.0375,  ..., 0.0047, 0.0030, 0.0352],
         [0.0091, 0.9355, 0.8874,  ..., 0.0047, 0.0030, 0.8943]],
        [[0.8940, 0.0256, 0.0242,  ..., 0.0383, 0.0095, 0.0092],
         [0.0556, 0.0256, 0.0242,  ..., 0.0383, 0.0095, 0.0092],
         [0.0252, 0.0256, 0.0242,  ..., 0.0383, 0.9715, 0.9724],
         [0.0252, 0.9231, 0.9275,  ..., 0.8851, 0.0095, 0.0092]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1082, 0.2666, 0.9673,  ..., 0.9483, 0.0453, 0.0364],
         [0.1082, 0.2253, 0.0109,  ..., 0.0163, 0.0443, 0.0364],
         [0.6100, 0.1424, 0.0109,  ..., 0.0163, 0.8506, 0.8908],
         [0.1735, 0.3657, 0.0109,  ..., 0.0191, 0.0598, 0.0364]],
        [[0.0552, 0.0023, 0.9592,  ..., 0.9430, 0.0020, 0.0321],
         [0.0549, 0.0023, 0.0136,  ..., 0.0209, 0.0020, 0.0321],
         [0.8349, 0.0023, 0.0136,  ..., 0.0181, 0.0020, 0.9038],
         [0.0549, 0.9930, 0.0136,  ..., 0.0181, 0.9939, 0.0321]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 108:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9801, 0.0293, 0.0310,  ..., 0.9600, 0.9537, 0.0384],
         [0.0066, 0.0293, 0.0310,  ..., 0.0133, 0.0154, 0.0384],
         [0.0066, 0.0293, 0.0310,  ..., 0.0133, 0.0154, 0.0384],
         [0.0066, 0.9121, 0.9071,  ..., 0.0133, 0.0154, 0.8848]],
        [[0.7840, 0.0127, 0.0116,  ..., 0.0251, 0.0133, 0.0125],
         [0.1195, 0.0127, 0.0116,  ..., 0.0251, 0.0133, 0.0125],
         [0.0483, 0.0127, 0.0116,  ..., 0.0251, 0.9600, 0.9624],
         [0.0483, 0.9619, 0.9651,  ..., 0.9247, 0.0133, 0.0125]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0588, 0.1848, 0.9782,  ..., 0.9834, 0.0140, 0.0261],
         [0.0588, 0.1914, 0.0073,  ..., 0.0055, 0.0140, 0.0261],
         [0.8237, 0.1118, 0.0073,  ..., 0.0055, 0.9580, 0.9216],
         [0.0588, 0.5121, 0.0073,  ..., 0.0055, 0.0140, 0.0261]],
        [[0.1481, 0.0056, 0.9776,  ..., 0.9201, 0.0605, 0.0484],
         [0.3842, 0.0056, 0.0075,  ..., 0.0335, 0.0851, 0.0484],
         [0.3196, 0.0056, 0.0075,  ..., 0.0232, 0.0605, 0.8547],
         [0.1481, 0.9832, 0.0075,  ..., 0.0232, 0.7939, 0.0484]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 109:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:06,056 [Process: 0] Synchronize training processes
2024-08-20 17:29:06,057 [Process: 0] Evaluating...
2024-08-20 17:29:06,058 [Process: 0] EPOCH 109:
2024-08-20 17:29:06,060 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:07,064 [Process: 0] Synchronize training processes
2024-08-20 17:29:07,064 [Process: 0] Evaluating...
2024-08-20 17:29:07,066 [Process: 0] EPOCH 110:
2024-08-20 17:29:07,067 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9863, 0.0374, 0.0475,  ..., 0.9789, 0.4625, 0.0423],
         [0.0046, 0.0335, 0.0475,  ..., 0.0070, 0.2017, 0.0423],
         [0.0046, 0.0401, 0.0475,  ..., 0.0070, 0.1702, 0.0423],
         [0.0046, 0.8890, 0.8575,  ..., 0.0070, 0.1656, 0.8731]],
        [[0.8923, 0.0931, 0.0219,  ..., 0.0710, 0.0489, 0.0080],
         [0.0341, 0.0752, 0.0219,  ..., 0.0685, 0.0489, 0.0080],
         [0.0397, 0.0940, 0.0219,  ..., 0.0685, 0.8533, 0.9759],
         [0.0339, 0.7377, 0.9344,  ..., 0.7920, 0.0489, 0.0080]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0717, 0.1621, 0.9823,  ..., 0.9897, 0.0377, 0.0310],
         [0.0717, 0.3793, 0.0059,  ..., 0.0034, 0.0377, 0.0310],
         [0.7713, 0.2964, 0.0059,  ..., 0.0034, 0.8806, 0.9015],
         [0.0853, 0.1621, 0.0059,  ..., 0.0034, 0.0441, 0.0364]],
        [[0.1645, 0.0181, 0.9897,  ..., 0.9578, 0.0054, 0.0127],
         [0.1875, 0.0181, 0.0034,  ..., 0.0141, 0.0054, 0.0127],
         [0.4671, 0.0181, 0.0034,  ..., 0.0141, 0.0054, 0.9618],
         [0.1809, 0.9458, 0.0034,  ..., 0.0141, 0.9838, 0.0127]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 110:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9779, 0.0580, 0.0390,  ..., 0.9388, 0.8683, 0.0863],
         [0.0074, 0.0735, 0.0354,  ..., 0.0203, 0.0405, 0.1234],
         [0.0074, 0.0580, 0.0354,  ..., 0.0206, 0.0507, 0.0863],
         [0.0074, 0.8105, 0.8902,  ..., 0.0203, 0.0405, 0.7040]],
        [[0.9883, 0.0181, 0.0359,  ..., 0.0403, 0.0273, 0.0075],
         [0.0039, 0.0181, 0.0359,  ..., 0.0403, 0.0273, 0.0075],
         [0.0039, 0.0181, 0.0359,  ..., 0.0403, 0.9181, 0.9775],
         [0.0039, 0.9457, 0.8924,  ..., 0.8790, 0.0273, 0.0075]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1629, 0.3153, 0.9950,  ..., 0.9849, 0.0392, 0.0495],
         [0.4737, 0.3702, 0.0017,  ..., 0.0050, 0.0392, 0.0495],
         [0.1629, 0.1573, 0.0017,  ..., 0.0050, 0.8823, 0.8514],
         [0.2004, 0.1573, 0.0017,  ..., 0.0050, 0.0392, 0.0495]],
        [[0.1957, 0.0038, 0.9732,  ..., 0.9859, 0.0070, 0.0137],
         [0.5105, 0.0038, 0.0069,  ..., 0.0047, 0.0070, 0.0137],
         [0.1469, 0.0038, 0.0069,  ..., 0.0047, 0.0070, 0.9589],
         [0.1469, 0.9887, 0.0131,  ..., 0.0047, 0.9789, 0.0137]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 111:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:08,103 [Process: 0] Synchronize training processes
2024-08-20 17:29:08,103 [Process: 0] Evaluating...
2024-08-20 17:29:08,105 [Process: 0] EPOCH 111:
2024-08-20 17:29:08,107 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:09,117 [Process: 0] Synchronize training processes
2024-08-20 17:29:09,118 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9278, 0.0292, 0.0296,  ..., 0.9785, 0.9647, 0.0671],
         [0.0259, 0.0292, 0.0223,  ..., 0.0072, 0.0118, 0.0656],
         [0.0231, 0.0292, 0.0223,  ..., 0.0072, 0.0118, 0.0656],
         [0.0231, 0.9123, 0.9257,  ..., 0.0072, 0.0118, 0.8017]],
        [[0.8965, 0.0182, 0.0133,  ..., 0.0305, 0.0073, 0.0050],
         [0.0324, 0.0182, 0.0133,  ..., 0.0305, 0.0073, 0.0050],
         [0.0387, 0.0182, 0.0133,  ..., 0.0305, 0.9782, 0.9849],
         [0.0324, 0.9454, 0.9600,  ..., 0.9086, 0.0073, 0.0050]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0976, 0.9437, 0.9870,  ..., 0.9964, 0.0274, 0.0530],
         [0.1148, 0.0196, 0.0043,  ..., 0.0012, 0.0274, 0.0530],
         [0.0976, 0.0184, 0.0043,  ..., 0.0012, 0.9177, 0.8409],
         [0.6901, 0.0184, 0.0043,  ..., 0.0012, 0.0274, 0.0530]],
        [[0.1905, 0.0328, 0.9894,  ..., 0.9836, 0.0388, 0.0120],
         [0.3440, 0.0364, 0.0030,  ..., 0.0055, 0.0290, 0.0120],
         [0.2828, 0.0328, 0.0030,  ..., 0.0055, 0.0290, 0.9639],
         [0.1827, 0.8980, 0.0046,  ..., 0.0055, 0.9031, 0.0120]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:29:10,980 [Process: 0] EPOCH 112:
2024-08-20 17:29:10,985 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 112:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9803, 0.0793, 0.0140,  ..., 0.9833, 0.9920, 0.0639],
         [0.0066, 0.0806, 0.0140,  ..., 0.0056, 0.0027, 0.0639],
         [0.0066, 0.0793, 0.0140,  ..., 0.0056, 0.0027, 0.0639],
         [0.0066, 0.7608, 0.9579,  ..., 0.0056, 0.0027, 0.8084]],
        [[0.7821, 0.0353, 0.0226,  ..., 0.0394, 0.0072, 0.0071],
         [0.0903, 0.0353, 0.0226,  ..., 0.0247, 0.0078, 0.0072],
         [0.0638, 0.0353, 0.0226,  ..., 0.0247, 0.9777, 0.9786],
         [0.0638, 0.8941, 0.9322,  ..., 0.9112, 0.0072, 0.0071]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0271, 0.3636, 0.9748,  ..., 0.9966, 0.0216, 0.0186],
         [0.0271, 0.4055, 0.0084,  ..., 0.0011, 0.0216, 0.0186],
         [0.0271, 0.1154, 0.0084,  ..., 0.0011, 0.9352, 0.9441],
         [0.9186, 0.1154, 0.0084,  ..., 0.0011, 0.0216, 0.0186]],
        [[0.1903, 0.0050, 0.9941,  ..., 0.9833, 0.0079, 0.0347],
         [0.2786, 0.0048, 0.0020,  ..., 0.0056, 0.0079, 0.0347],
         [0.3227, 0.0048, 0.0020,  ..., 0.0056, 0.0079, 0.8958],
         [0.2084, 0.9853, 0.0020,  ..., 0.0056, 0.9763, 0.0347]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 113:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:11,995 [Process: 0] Synchronize training processes
2024-08-20 17:29:11,995 [Process: 0] Evaluating...
2024-08-20 17:29:11,997 [Process: 0] EPOCH 113:
2024-08-20 17:29:11,998 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:13,049 [Process: 0] Synchronize training processes
2024-08-20 17:29:13,049 [Process: 0] Evaluating...
2024-08-20 17:29:13,051 [Process: 0] EPOCH 114:
2024-08-20 17:29:13,053 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9786, 0.0448, 0.0572,  ..., 0.9851, 0.9970, 0.0148],
         [0.0071, 0.0448, 0.0572,  ..., 0.0050, 0.0010, 0.0148],
         [0.0071, 0.0475, 0.0625,  ..., 0.0050, 0.0010, 0.0148],
         [0.0071, 0.8630, 0.8231,  ..., 0.0050, 0.0010, 0.9556]],
        [[0.4970, 0.0286, 0.0297,  ..., 0.0402, 0.0050, 0.0040],
         [0.2761, 0.0286, 0.0297,  ..., 0.0402, 0.0090, 0.0040],
         [0.1146, 0.0286, 0.0297,  ..., 0.0402, 0.9809, 0.9880],
         [0.1124, 0.9142, 0.9109,  ..., 0.8795, 0.0050, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0792, 0.4050, 0.9949,  ..., 0.9198, 0.0147, 0.0230],
         [0.0792, 0.3121, 0.0017,  ..., 0.0210, 0.0177, 0.0247],
         [0.0965, 0.1414, 0.0017,  ..., 0.0210, 0.9528, 0.9294],
         [0.7452, 0.1414, 0.0017,  ..., 0.0382, 0.0147, 0.0230]],
        [[0.1076, 0.0024, 0.9940,  ..., 0.9790, 0.0023, 0.0277],
         [0.1186, 0.0024, 0.0020,  ..., 0.0070, 0.0023, 0.0277],
         [0.6474, 0.0024, 0.0020,  ..., 0.0070, 0.0023, 0.9168],
         [0.1264, 0.9927, 0.0020,  ..., 0.0070, 0.9932, 0.0277]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 114:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5094e-01, 1.2858e-02, 5.2105e-02,  ..., 9.8584e-01,
          9.9950e-01, 4.8476e-02],
         [1.6355e-02, 1.2858e-02, 5.2105e-02,  ..., 4.7185e-03,
          1.6734e-04, 4.8476e-02],
         [1.6355e-02, 1.2858e-02, 6.4580e-02,  ..., 4.7185e-03,
          1.6734e-04, 5.1401e-02],
         [1.6355e-02, 9.6142e-01, 8.3121e-01,  ..., 4.7185e-03,
          1.6734e-04, 8.5165e-01]],
        [[4.3149e-01, 5.9483e-02, 3.0227e-02,  ..., 7.1477e-02,
          6.3285e-03, 3.3066e-03],
         [2.2076e-01, 4.8808e-02, 3.0227e-02,  ..., 6.7252e-02,
          9.5420e-03, 4.4472e-03],
         [1.9726e-01, 4.8808e-02, 3.0227e-02,  ..., 7.4269e-02,
          9.7780e-01, 9.8894e-01],
         [1.5050e-01, 8.4290e-01, 9.0932e-01,  ..., 7.8700e-01,
          6.3285e-03, 3.3066e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0119, 0.2327, 0.9935,  ..., 0.9918, 0.0111, 0.0324],
         [0.0119, 0.4275, 0.0022,  ..., 0.0027, 0.0111, 0.0324],
         [0.0119, 0.1699, 0.0022,  ..., 0.0027, 0.9668, 0.9027],
         [0.9643, 0.1699, 0.0022,  ..., 0.0027, 0.0111, 0.0324]],
        [[0.0386, 0.0042, 0.9907,  ..., 0.3426, 0.0186, 0.0228],
         [0.0386, 0.0042, 0.0031,  ..., 0.3148, 0.0186, 0.0241],
         [0.8708, 0.0042, 0.0031,  ..., 0.1713, 0.0186, 0.9302],
         [0.0520, 0.9875, 0.0031,  ..., 0.1713, 0.9443, 0.0228]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 115:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:14,059 [Process: 0] Synchronize training processes
2024-08-20 17:29:14,059 [Process: 0] Evaluating...
2024-08-20 17:29:14,061 [Process: 0] EPOCH 115:
2024-08-20 17:29:14,063 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:15,082 [Process: 0] Synchronize training processes
2024-08-20 17:29:15,082 [Process: 0] Evaluating...
2024-08-20 17:29:15,084 [Process: 0] EPOCH 116:
2024-08-20 17:29:15,086 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9902, 0.0201, 0.0451,  ..., 0.9909, 0.9248, 0.0606],
         [0.0033, 0.0201, 0.0297,  ..., 0.0030, 0.0251, 0.0606],
         [0.0033, 0.0201, 0.0297,  ..., 0.0030, 0.0251, 0.0942],
         [0.0033, 0.9396, 0.8956,  ..., 0.0030, 0.0251, 0.7846]],
        [[0.6831, 0.0246, 0.0487,  ..., 0.0389, 0.0224, 0.0065],
         [0.1206, 0.0246, 0.0487,  ..., 0.0389, 0.0289, 0.0065],
         [0.1004, 0.0305, 0.0664,  ..., 0.0389, 0.9264, 0.9806],
         [0.0959, 0.9202, 0.8362,  ..., 0.8834, 0.0224, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[5.8372e-02, 2.3391e-01, 9.6181e-01,  ..., 9.6860e-01,
          1.2351e-02, 3.6217e-02],
         [5.8372e-02, 3.9878e-01, 1.0580e-02,  ..., 9.2053e-03,
          1.2351e-02, 3.4598e-02],
         [1.9814e-01, 1.8365e-01, 1.0580e-02,  ..., 9.2053e-03,
          9.6295e-01, 8.9459e-01],
         [6.8511e-01, 1.8365e-01, 1.7027e-02,  ..., 1.2985e-02,
          1.2351e-02, 3.4598e-02]],
        [[1.1586e-01, 4.6878e-04, 9.8359e-01,  ..., 8.6345e-01,
          4.6916e-01, 4.2801e-02],
         [1.1586e-01, 4.6878e-04, 4.8637e-03,  ..., 4.5515e-02,
          1.8405e-01, 4.2801e-02],
         [5.3099e-01, 4.6878e-04, 4.8637e-03,  ..., 4.5515e-02,
          1.6031e-01, 8.6886e-01],
         [2.3730e-01, 9.9859e-01, 6.6850e-03,  ..., 4.5515e-02,
          1.8648e-01, 4.5543e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 116:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9936, 0.0095, 0.0421,  ..., 0.9652, 0.9172, 0.0817],
         [0.0021, 0.0095, 0.0421,  ..., 0.0116, 0.0276, 0.0895],
         [0.0021, 0.0095, 0.0421,  ..., 0.0116, 0.0276, 0.0981],
         [0.0021, 0.9715, 0.8736,  ..., 0.0116, 0.0276, 0.7306]],
        [[0.7531, 0.0254, 0.0216,  ..., 0.0328, 0.0145, 0.0083],
         [0.1311, 0.0254, 0.0216,  ..., 0.0328, 0.0157, 0.0084],
         [0.0579, 0.0273, 0.0216,  ..., 0.0328, 0.9552, 0.9749],
         [0.0579, 0.9219, 0.9352,  ..., 0.9017, 0.0145, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0994, 0.1982, 0.9965,  ..., 0.9893, 0.0155, 0.0267],
         [0.1104, 0.3871, 0.0012,  ..., 0.0035, 0.0155, 0.0267],
         [0.6722, 0.1982, 0.0012,  ..., 0.0035, 0.9535, 0.9165],
         [0.1181, 0.2164, 0.0012,  ..., 0.0038, 0.0155, 0.0301]],
        [[0.1243, 0.0054, 0.9555,  ..., 0.9773, 0.0106, 0.0198],
         [0.1363, 0.0054, 0.0117,  ..., 0.0076, 0.0106, 0.0198],
         [0.5402, 0.0054, 0.0117,  ..., 0.0076, 0.0106, 0.9405],
         [0.1993, 0.9839, 0.0211,  ..., 0.0076, 0.9681, 0.0198]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 117:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:16,081 [Process: 0] Synchronize training processes
2024-08-20 17:29:16,082 [Process: 0] Evaluating...
2024-08-20 17:29:16,083 [Process: 0] EPOCH 117:
2024-08-20 17:29:16,085 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:17,111 [Process: 0] Synchronize training processes
2024-08-20 17:29:17,111 [Process: 0] Evaluating...
2024-08-20 17:29:17,113 [Process: 0] EPOCH 118:
2024-08-20 17:29:17,114 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9386, 0.0174, 0.0351,  ..., 0.9889, 0.9834, 0.0474],
         [0.0199, 0.0174, 0.0351,  ..., 0.0037, 0.0055, 0.0474],
         [0.0217, 0.0174, 0.0351,  ..., 0.0037, 0.0055, 0.0474],
         [0.0199, 0.9478, 0.8946,  ..., 0.0037, 0.0055, 0.8579]],
        [[0.9660, 0.0242, 0.0273,  ..., 0.0255, 0.0066, 0.0040],
         [0.0122, 0.0242, 0.0273,  ..., 0.0255, 0.0066, 0.0040],
         [0.0109, 0.0242, 0.0273,  ..., 0.0255, 0.9803, 0.9881],
         [0.0109, 0.9274, 0.9181,  ..., 0.9235, 0.0066, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2749e-02, 1.8993e-01, 9.9483e-01,  ..., 9.3095e-01,
          1.6905e-02, 1.6643e-02],
         [7.2749e-02, 3.7467e-01, 1.7223e-03,  ..., 2.3017e-02,
          1.6905e-02, 1.6643e-02],
         [7.5705e-01, 1.8993e-01, 1.7223e-03,  ..., 2.3017e-02,
          9.4929e-01, 9.5007e-01],
         [9.7453e-02, 2.4547e-01, 1.7223e-03,  ..., 2.3017e-02,
          1.6905e-02, 1.6643e-02]],
        [[1.1733e-01, 1.1043e-03, 9.9889e-01,  ..., 9.5257e-01,
          2.5391e-03, 3.7101e-02],
         [1.3824e-01, 1.1043e-03, 3.7168e-04,  ..., 1.8786e-02,
          2.5391e-03, 3.7101e-02],
         [5.6236e-01, 1.1043e-03, 3.7168e-04,  ..., 1.4320e-02,
          2.5391e-03, 8.8428e-01],
         [1.8208e-01, 9.9669e-01, 3.7168e-04,  ..., 1.4320e-02,
          9.9238e-01, 4.1512e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 118:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9084, 0.0477, 0.0279,  ..., 0.9845, 0.9726, 0.0653],
         [0.0353, 0.0477, 0.0279,  ..., 0.0049, 0.0091, 0.0653],
         [0.0282, 0.0477, 0.0279,  ..., 0.0056, 0.0091, 0.0668],
         [0.0282, 0.8568, 0.9162,  ..., 0.0049, 0.0091, 0.8025]],
        [[0.9906, 0.0320, 0.0519,  ..., 0.0231, 0.0070, 0.0028],
         [0.0031, 0.0320, 0.0519,  ..., 0.0231, 0.0070, 0.0028],
         [0.0031, 0.0320, 0.0519,  ..., 0.0231, 0.9791, 0.9917],
         [0.0031, 0.9041, 0.8442,  ..., 0.9308, 0.0070, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0340, 0.1283, 0.9878,  ..., 0.9618, 0.0360, 0.0261],
         [0.0340, 0.6152, 0.0041,  ..., 0.0127, 0.0360, 0.0261],
         [0.8914, 0.1283, 0.0041,  ..., 0.0127, 0.8921, 0.9217],
         [0.0405, 0.1283, 0.0041,  ..., 0.0127, 0.0360, 0.0261]],
        [[0.1312, 0.0019, 0.9838,  ..., 0.9894, 0.0018, 0.0274],
         [0.1582, 0.0019, 0.0054,  ..., 0.0035, 0.0018, 0.0274],
         [0.5292, 0.0019, 0.0054,  ..., 0.0035, 0.0018, 0.9159],
         [0.1815, 0.9944, 0.0054,  ..., 0.0035, 0.9946, 0.0293]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 119:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:18,134 [Process: 0] Synchronize training processes
2024-08-20 17:29:18,135 [Process: 0] Evaluating...
2024-08-20 17:29:18,137 [Process: 0] EPOCH 119:
2024-08-20 17:29:18,138 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:19,200 [Process: 0] Synchronize training processes
2024-08-20 17:29:19,200 [Process: 0] Evaluating...
2024-08-20 17:29:19,202 [Process: 0] EPOCH 120:
2024-08-20 17:29:19,203 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9423, 0.0127, 0.0230,  ..., 0.9682, 0.9564, 0.0322],
         [0.0192, 0.0127, 0.0230,  ..., 0.0106, 0.0145, 0.0322],
         [0.0192, 0.0127, 0.0230,  ..., 0.0106, 0.0145, 0.0322],
         [0.0192, 0.9619, 0.9309,  ..., 0.0106, 0.0145, 0.9033]],
        [[0.9853, 0.0149, 0.0440,  ..., 0.0327, 0.0074, 0.0152],
         [0.0049, 0.0149, 0.0440,  ..., 0.0327, 0.0074, 0.0152],
         [0.0049, 0.0149, 0.0440,  ..., 0.0327, 0.9778, 0.9545],
         [0.0049, 0.9554, 0.8679,  ..., 0.9019, 0.0074, 0.0152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3737e-02, 2.0339e-01, 9.9043e-01,  ..., 9.9076e-01,
          4.1859e-02, 4.9896e-02],
         [4.2510e-02, 4.0238e-01, 3.1901e-03,  ..., 3.0815e-03,
          3.9010e-02, 4.9896e-02],
         [8.7191e-01, 2.1016e-01, 3.1901e-03,  ..., 3.0815e-03,
          8.8012e-01, 8.4434e-01],
         [4.1847e-02, 1.8408e-01, 3.1901e-03,  ..., 3.0815e-03,
          3.9010e-02, 5.5865e-02]],
        [[1.3449e-01, 6.6879e-04, 9.8960e-01,  ..., 9.9174e-01,
          9.2054e-02, 2.7907e-02],
         [1.8338e-01, 6.6879e-04, 3.3655e-03,  ..., 2.7528e-03,
          1.2446e-01, 2.7907e-02],
         [4.7768e-01, 6.6879e-04, 3.3655e-03,  ..., 2.7528e-03,
          9.2054e-02, 9.1628e-01],
         [2.0446e-01, 9.9799e-01, 3.6733e-03,  ..., 2.7528e-03,
          6.9143e-01, 2.7907e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 120:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9071, 0.0269, 0.0298,  ..., 0.9907, 0.9448, 0.0372],
         [0.0269, 0.0269, 0.0298,  ..., 0.0031, 0.0184, 0.0372],
         [0.0391, 0.0269, 0.0298,  ..., 0.0031, 0.0184, 0.0372],
         [0.0269, 0.9194, 0.9107,  ..., 0.0031, 0.0184, 0.8883]],
        [[0.9842, 0.0351, 0.0254,  ..., 0.0099, 0.0079, 0.0273],
         [0.0053, 0.0351, 0.0254,  ..., 0.0099, 0.0084, 0.0273],
         [0.0053, 0.0351, 0.0254,  ..., 0.0099, 0.9759, 0.9180],
         [0.0053, 0.8947, 0.9238,  ..., 0.9703, 0.0079, 0.0273]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0354, 0.1991, 0.9908,  ..., 0.9579, 0.0231, 0.0223],
         [0.0354, 0.4537, 0.0031,  ..., 0.0140, 0.0231, 0.0223],
         [0.8938, 0.1736, 0.0031,  ..., 0.0140, 0.9306, 0.9330],
         [0.0354, 0.1736, 0.0031,  ..., 0.0140, 0.0231, 0.0223]],
        [[0.1512, 0.0030, 0.9853,  ..., 0.8902, 0.1753, 0.0467],
         [0.2408, 0.0030, 0.0049,  ..., 0.0366, 0.3458, 0.0477],
         [0.4061, 0.0030, 0.0049,  ..., 0.0366, 0.1672, 0.8576],
         [0.2019, 0.9909, 0.0049,  ..., 0.0366, 0.3117, 0.0480]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 121:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:20,241 [Process: 0] Synchronize training processes
2024-08-20 17:29:20,241 [Process: 0] Evaluating...
2024-08-20 17:29:20,243 [Process: 0] EPOCH 121:
2024-08-20 17:29:20,244 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:21,316 [Process: 0] Synchronize training processes
2024-08-20 17:29:21,316 [Process: 0] Evaluating...
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9800, 0.0270, 0.0520,  ..., 0.9583, 0.3960, 0.0464],
         [0.0067, 0.0270, 0.0520,  ..., 0.0145, 0.3853, 0.0464],
         [0.0067, 0.0270, 0.0520,  ..., 0.0136, 0.1093, 0.0464],
         [0.0067, 0.9190, 0.8440,  ..., 0.0136, 0.1093, 0.8608]],
        [[0.9376, 0.0437, 0.0229,  ..., 0.0183, 0.0043, 0.0055],
         [0.0203, 0.0437, 0.0229,  ..., 0.0183, 0.0043, 0.0055],
         [0.0219, 0.0529, 0.0229,  ..., 0.0183, 0.9872, 0.9834],
         [0.0203, 0.8597, 0.9313,  ..., 0.9452, 0.0043, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.2994e-02, 1.8384e-01, 9.8310e-01,  ..., 9.9677e-01,
          1.5566e-02, 2.7201e-02],
         [8.6691e-02, 4.2151e-01, 5.6317e-03,  ..., 1.0775e-03,
          1.5566e-02, 2.7201e-02],
         [7.3006e-01, 2.1082e-01, 5.6317e-03,  ..., 1.0775e-03,
          9.5330e-01, 9.1840e-01],
         [1.0025e-01, 1.8384e-01, 5.6317e-03,  ..., 1.0775e-03,
          1.5566e-02, 2.7201e-02]],
        [[1.5363e-01, 2.9591e-04, 9.9374e-01,  ..., 9.7017e-01,
          2.0610e-04, 2.3766e-02],
         [2.1509e-01, 2.9591e-04, 2.0863e-03,  ..., 9.9429e-03,
          2.0610e-04, 2.3766e-02],
         [1.7868e-01, 2.9591e-04, 2.0863e-03,  ..., 9.9429e-03,
          2.0610e-04, 9.2870e-01],
         [4.5260e-01, 9.9911e-01, 2.0863e-03,  ..., 9.9429e-03,
          9.9938e-01, 2.3766e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:29:23,197 [Process: 0] EPOCH 122:
2024-08-20 17:29:23,199 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 122:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9741, 0.0331, 0.0257,  ..., 0.9522, 0.1878, 0.0240],
         [0.0086, 0.0331, 0.0257,  ..., 0.0159, 0.4568, 0.0240],
         [0.0088, 0.0331, 0.0257,  ..., 0.0159, 0.1415, 0.0240],
         [0.0086, 0.9008, 0.9230,  ..., 0.0159, 0.2139, 0.9280]],
        [[0.8995, 0.0470, 0.0441,  ..., 0.0152, 0.0070, 0.0095],
         [0.0428, 0.0470, 0.0441,  ..., 0.0152, 0.0070, 0.0095],
         [0.0288, 0.0470, 0.0441,  ..., 0.0152, 0.9791, 0.9715],
         [0.0288, 0.8590, 0.8676,  ..., 0.9544, 0.0070, 0.0095]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.5593e-02, 1.6414e-01, 9.3461e-01,  ..., 9.9844e-01,
          1.1736e-02, 2.6250e-02],
         [3.5593e-02, 5.1999e-01, 1.6219e-02,  ..., 5.2116e-04,
          1.1736e-02, 2.6250e-02],
         [8.9322e-01, 1.5794e-01, 1.6219e-02,  ..., 5.2116e-04,
          9.6479e-01, 9.2125e-01],
         [3.5593e-02, 1.5794e-01, 3.2948e-02,  ..., 5.2116e-04,
          1.1736e-02, 2.6250e-02]],
        [[8.9787e-02, 5.8170e-03, 9.9357e-01,  ..., 9.8210e-01,
          4.3443e-03, 3.3986e-02],
         [8.1969e-02, 5.8170e-03, 2.1431e-03,  ..., 5.9657e-03,
          3.8569e-03, 3.3986e-02],
         [7.4256e-01, 5.8170e-03, 2.1431e-03,  ..., 5.9657e-03,
          3.8569e-03, 8.9671e-01],
         [8.5684e-02, 9.8255e-01, 2.1431e-03,  ..., 5.9657e-03,
          9.8794e-01, 3.5315e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 123:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:24,216 [Process: 0] Synchronize training processes
2024-08-20 17:29:24,216 [Process: 0] Evaluating...
2024-08-20 17:29:24,218 [Process: 0] EPOCH 123:
2024-08-20 17:29:24,219 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:25,264 [Process: 0] Synchronize training processes
2024-08-20 17:29:25,264 [Process: 0] Evaluating...
2024-08-20 17:29:25,266 [Process: 0] EPOCH 124:
2024-08-20 17:29:25,268 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9807, 0.0211, 0.0237,  ..., 0.9444, 0.3112, 0.0271],
         [0.0064, 0.0211, 0.0237,  ..., 0.0185, 0.4518, 0.0271],
         [0.0064, 0.0211, 0.0237,  ..., 0.0185, 0.1185, 0.0271],
         [0.0064, 0.9366, 0.9288,  ..., 0.0185, 0.1185, 0.9187]],
        [[0.8025, 0.0231, 0.0123,  ..., 0.0066, 0.0132, 0.0083],
         [0.0832, 0.0231, 0.0123,  ..., 0.0066, 0.0132, 0.0083],
         [0.0571, 0.0231, 0.0123,  ..., 0.0066, 0.9604, 0.9752],
         [0.0571, 0.9307, 0.9630,  ..., 0.9801, 0.0132, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[4.3106e-02, 1.9429e-01, 9.9758e-01,  ..., 9.8130e-01,
          1.8604e-02, 1.7242e-02],
         [4.3106e-02, 3.5116e-01, 8.0805e-04,  ..., 5.5047e-03,
          1.8944e-02, 1.7242e-02],
         [8.7068e-01, 1.9429e-01, 8.0805e-04,  ..., 5.5047e-03,
          9.4385e-01, 9.4827e-01],
         [4.3106e-02, 2.6025e-01, 8.0805e-04,  ..., 7.6868e-03,
          1.8604e-02, 1.7242e-02]],
        [[2.9769e-02, 1.6893e-03, 9.9072e-01,  ..., 9.9048e-01,
          2.6678e-03, 5.0703e-02],
         [2.9769e-02, 1.6893e-03, 3.0950e-03,  ..., 3.1740e-03,
          2.6678e-03, 5.0703e-02],
         [9.1030e-01, 1.6893e-03, 3.0950e-03,  ..., 3.1740e-03,
          2.6678e-03, 8.3274e-01],
         [3.0165e-02, 9.9493e-01, 3.0950e-03,  ..., 3.1740e-03,
          9.9200e-01, 6.5855e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 124:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9376, 0.0177, 0.0219,  ..., 0.9769, 0.9113, 0.0359],
         [0.0206, 0.0177, 0.0174,  ..., 0.0077, 0.0296, 0.0359],
         [0.0206, 0.0177, 0.0174,  ..., 0.0077, 0.0296, 0.0359],
         [0.0213, 0.9470, 0.9433,  ..., 0.0077, 0.0296, 0.8923]],
        [[0.8866, 0.0037, 0.0066,  ..., 0.0251, 0.0074, 0.0140],
         [0.0523, 0.0037, 0.0066,  ..., 0.0251, 0.0095, 0.0150],
         [0.0305, 0.0037, 0.0066,  ..., 0.0251, 0.9756, 0.9570],
         [0.0305, 0.9890, 0.9801,  ..., 0.9247, 0.0074, 0.0140]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2922e-01, 2.1822e-01, 9.6969e-01,  ..., 9.9776e-01,
          1.3709e-02, 1.2950e-02],
         [1.5483e-01, 4.0775e-01, 8.8801e-03,  ..., 7.4700e-04,
          1.3709e-02, 1.2950e-02],
         [5.2005e-01, 1.8701e-01, 8.8801e-03,  ..., 7.4700e-04,
          9.5887e-01, 9.6115e-01],
         [1.9591e-01, 1.8701e-01, 1.2552e-02,  ..., 7.4700e-04,
          1.3709e-02, 1.2950e-02]],
        [[5.6207e-02, 1.3896e-03, 9.9143e-01,  ..., 9.8843e-01,
          1.9188e-03, 3.1323e-02],
         [5.6682e-02, 1.3896e-03, 2.8563e-03,  ..., 3.8556e-03,
          1.9188e-03, 3.1323e-02],
         [8.3348e-01, 1.3896e-03, 2.8563e-03,  ..., 3.8556e-03,
          1.9188e-03, 9.0395e-01],
         [5.3627e-02, 9.9583e-01, 2.8563e-03,  ..., 3.8556e-03,
          9.9424e-01, 3.3399e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:26,291 [Process: 0] Synchronize training processes
2024-08-20 17:29:26,291 [Process: 0] Evaluating...
2024-08-20 17:29:26,293 [Process: 0] EPOCH 125:
2024-08-20 17:29:26,294 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:27,298 [Process: 0] Synchronize training processes
2024-08-20 17:29:27,298 [Process: 0] Evaluating...
2024-08-20 17:29:27,300 [Process: 0] EPOCH 126:
2024-08-20 17:29:27,302 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 125:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.5097, 0.0321, 0.0210,  ..., 0.0200, 0.9520, 0.0088],
         [0.2889, 0.0321, 0.0210,  ..., 0.0200, 0.0160, 0.0088],
         [0.1007, 0.0321, 0.0210,  ..., 0.0200, 0.0160, 0.0088],
         [0.1007, 0.9037, 0.9371,  ..., 0.9401, 0.0160, 0.9736]],
        [[0.9673, 0.0251, 0.0241,  ..., 0.0198, 0.0032, 0.0149],
         [0.0109, 0.0251, 0.0241,  ..., 0.0198, 0.0032, 0.0149],
         [0.0109, 0.0282, 0.0241,  ..., 0.0198, 0.9905, 0.9554],
         [0.0109, 0.9217, 0.9277,  ..., 0.9406, 0.0032, 0.0149]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.2060e-01, 1.5405e-01, 9.9721e-01,  ..., 9.8435e-01,
          1.0601e-02, 2.0464e-02],
         [1.4100e-01, 1.9289e-01, 9.2860e-04,  ..., 5.2162e-03,
          1.0601e-02, 2.0464e-02],
         [5.4285e-01, 4.7969e-01, 9.2860e-04,  ..., 5.2162e-03,
          9.6820e-01, 9.3861e-01],
         [1.9555e-01, 1.7336e-01, 9.2860e-04,  ..., 5.2162e-03,
          1.0601e-02, 2.0464e-02]],
        [[4.3684e-02, 2.8763e-04, 9.9150e-01,  ..., 9.9600e-01,
          1.9491e-03, 2.6175e-02],
         [4.3684e-02, 2.8763e-04, 2.8339e-03,  ..., 1.3332e-03,
          1.9491e-03, 2.6175e-02],
         [8.6895e-01, 2.8763e-04, 2.8339e-03,  ..., 1.3332e-03,
          1.9491e-03, 9.2148e-01],
         [4.3684e-02, 9.9914e-01, 2.8339e-03,  ..., 1.3332e-03,
          9.9415e-01, 2.6175e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 126:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9075, 0.0325, 0.0267,  ..., 0.9768, 0.9045, 0.0403],
         [0.0308, 0.0325, 0.0262,  ..., 0.0077, 0.0440, 0.0334],
         [0.0308, 0.0374, 0.0262,  ..., 0.0077, 0.0258, 0.0334],
         [0.0308, 0.8975, 0.9209,  ..., 0.0077, 0.0258, 0.8928]],
        [[0.9956, 0.0218, 0.0360,  ..., 0.0306, 0.0076, 0.0055],
         [0.0015, 0.0218, 0.0360,  ..., 0.0306, 0.0076, 0.0055],
         [0.0015, 0.0290, 0.0360,  ..., 0.0306, 0.9771, 0.9835],
         [0.0015, 0.9274, 0.8921,  ..., 0.9082, 0.0076, 0.0055]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9586e-02, 1.5894e-01, 9.9597e-01,  ..., 9.9053e-01,
          9.5645e-03, 2.6714e-02],
         [1.0979e-01, 2.2493e-01, 1.3105e-03,  ..., 3.1551e-03,
          9.5645e-03, 2.6714e-02],
         [6.2645e-01, 3.9781e-01, 1.3105e-03,  ..., 3.1551e-03,
          9.7131e-01, 9.1986e-01],
         [1.6418e-01, 2.1832e-01, 1.4107e-03,  ..., 3.1551e-03,
          9.5645e-03, 2.6714e-02]],
        [[2.9081e-02, 5.0068e-04, 9.5265e-01,  ..., 9.5934e-01,
          4.4873e-03, 4.1132e-02],
         [2.9081e-02, 5.0068e-04, 1.5784e-02,  ..., 1.3554e-02,
          4.4873e-03, 3.9413e-02],
         [9.1276e-01, 5.0068e-04, 1.5784e-02,  ..., 1.3554e-02,
          4.4873e-03, 8.7862e-01],
         [2.9081e-02, 9.9850e-01, 1.5784e-02,  ..., 1.3554e-02,
          9.8654e-01, 4.0838e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:28,320 [Process: 0] Synchronize training processes
2024-08-20 17:29:28,320 [Process: 0] Evaluating...
2024-08-20 17:29:28,322 [Process: 0] EPOCH 127:
2024-08-20 17:29:28,323 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:29,392 [Process: 0] Synchronize training processes
2024-08-20 17:29:29,393 [Process: 0] Evaluating...
2024-08-20 17:29:29,394 [Process: 0] EPOCH 128:
2024-08-20 17:29:29,396 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 127:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9812, 0.0124, 0.0359,  ..., 0.9850, 0.1876, 0.0571],
         [0.0063, 0.0124, 0.0359,  ..., 0.0050, 0.4753, 0.0571],
         [0.0063, 0.0124, 0.0429,  ..., 0.0050, 0.1827, 0.0571],
         [0.0063, 0.9628, 0.8853,  ..., 0.0050, 0.1544, 0.8288]],
        [[0.9790, 0.0191, 0.0150,  ..., 0.0098, 0.0088, 0.0045],
         [0.0070, 0.0191, 0.0150,  ..., 0.0098, 0.0088, 0.0045],
         [0.0070, 0.0191, 0.0150,  ..., 0.0098, 0.9735, 0.9865],
         [0.0070, 0.9427, 0.9550,  ..., 0.9705, 0.0088, 0.0045]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1402e-01, 1.2667e-01, 9.9779e-01,  ..., 9.9455e-01,
          2.2920e-02, 1.2999e-02],
         [1.3175e-01, 1.5139e-01, 7.3747e-04,  ..., 1.7826e-03,
          2.2920e-02, 1.2999e-02],
         [5.9722e-01, 5.4826e-01, 7.3747e-04,  ..., 1.7826e-03,
          9.3124e-01, 9.6100e-01],
         [1.5701e-01, 1.7369e-01, 7.3747e-04,  ..., 1.8800e-03,
          2.2920e-02, 1.2999e-02]],
        [[1.0390e-01, 7.4336e-04, 9.9417e-01,  ..., 9.8768e-01,
          5.6274e-03, 1.4373e-02],
         [1.1065e-01, 7.4336e-04, 1.9419e-03,  ..., 4.1062e-03,
          5.6274e-03, 1.4373e-02],
         [5.9851e-01, 7.4336e-04, 1.9419e-03,  ..., 4.1062e-03,
          5.6274e-03, 9.5667e-01],
         [1.8694e-01, 9.9777e-01, 1.9419e-03,  ..., 4.1062e-03,
          9.8312e-01, 1.4579e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 128:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7395, 0.0214, 0.0364,  ..., 0.7783, 0.3351, 0.0116],
         [0.0778, 0.0214, 0.0364,  ..., 0.0706, 0.3951, 0.0116],
         [0.0866, 0.0214, 0.0374,  ..., 0.0859, 0.1315, 0.0116],
         [0.0962, 0.9359, 0.8898,  ..., 0.0651, 0.1382, 0.9653]],
        [[0.9946, 0.0373, 0.0321,  ..., 0.0166, 0.0056, 0.0034],
         [0.0018, 0.0373, 0.0321,  ..., 0.0166, 0.0056, 0.0034],
         [0.0018, 0.0402, 0.0321,  ..., 0.0166, 0.9833, 0.9899],
         [0.0018, 0.8852, 0.9036,  ..., 0.9501, 0.0056, 0.0034]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:29:30,422 [Process: 0] Synchronize training processes
2024-08-20 17:29:30,422 [Process: 0] Evaluating...
2024-08-20 17:29:30,424 [Process: 0] EPOCH 129:
2024-08-20 17:29:30,425 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:31,449 [Process: 0] Synchronize training processes
2024-08-20 17:29:31,449 [Process: 0] Evaluating...
2024-08-20 17:29:31,451 [Process: 0] EPOCH 130:
2024-08-20 17:29:31,453 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1706e-01, 1.5181e-01, 9.7866e-01,  ..., 9.7832e-01,
          1.4939e-02, 3.2693e-02],
         [1.1070e-01, 1.3105e-01, 7.1143e-03,  ..., 7.2261e-03,
          1.4939e-02, 3.1110e-02],
         [5.4324e-01, 5.0139e-01, 7.1143e-03,  ..., 7.2261e-03,
          9.5518e-01, 9.0509e-01],
         [2.2899e-01, 2.1575e-01, 7.1143e-03,  ..., 7.2261e-03,
          1.4939e-02, 3.1110e-02]],
        [[2.9198e-02, 1.0691e-03, 9.8375e-01,  ..., 9.5074e-01,
          8.3137e-04, 2.2265e-02],
         [2.9198e-02, 1.0691e-03, 5.4152e-03,  ..., 1.8495e-02,
          8.3137e-04, 2.2265e-02],
         [9.0496e-01, 1.0691e-03, 5.4152e-03,  ..., 1.5384e-02,
          8.3137e-04, 9.3320e-01],
         [3.6645e-02, 9.9679e-01, 5.4152e-03,  ..., 1.5384e-02,
          9.9751e-01, 2.2265e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 129:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9683, 0.0168, 0.0392,  ..., 0.9548, 0.9795, 0.0366],
         [0.0106, 0.0168, 0.0392,  ..., 0.0151, 0.0068, 0.0341],
         [0.0106, 0.0168, 0.0392,  ..., 0.0151, 0.0068, 0.0341],
         [0.0106, 0.9497, 0.8825,  ..., 0.0151, 0.0068, 0.8953]],
        [[0.9588, 0.0384, 0.0294,  ..., 0.0217, 0.0049, 0.0040],
         [0.0170, 0.0384, 0.0294,  ..., 0.0217, 0.0049, 0.0040],
         [0.0121, 0.0384, 0.0294,  ..., 0.0217, 0.9854, 0.9880],
         [0.0121, 0.8847, 0.9119,  ..., 0.9349, 0.0049, 0.0040]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0644e-01, 1.7015e-01, 9.9421e-01,  ..., 9.9345e-01,
          2.3402e-02, 6.1851e-03],
         [9.2480e-02, 4.1386e-01, 1.9295e-03,  ..., 2.1838e-03,
          2.3402e-02, 6.1851e-03],
         [6.0607e-01, 1.7741e-01, 1.9295e-03,  ..., 2.1838e-03,
          9.2979e-01, 9.8144e-01],
         [1.9501e-01, 2.3858e-01, 1.9295e-03,  ..., 2.1838e-03,
          2.3402e-02, 6.1851e-03]],
        [[8.7771e-02, 7.8940e-04, 9.8598e-01,  ..., 9.0104e-01,
          9.5466e-03, 4.0558e-02],
         [9.9538e-02, 7.8940e-04, 4.6738e-03,  ..., 4.8463e-02,
          9.5466e-03, 4.0217e-02],
         [7.0595e-01, 7.8940e-04, 4.6738e-03,  ..., 2.5249e-02,
          9.5466e-03, 8.6215e-01],
         [1.0674e-01, 9.9763e-01, 4.6738e-03,  ..., 2.5249e-02,
          9.7136e-01, 5.7075e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 130:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9901, 0.0151, 0.0200,  ..., 0.9397, 0.9760, 0.0100],
         [0.0033, 0.0151, 0.0200,  ..., 0.0198, 0.0080, 0.0100],
         [0.0033, 0.0151, 0.0200,  ..., 0.0206, 0.0080, 0.0100],
         [0.0033, 0.9547, 0.9400,  ..., 0.0198, 0.0080, 0.9701]],
        [[0.7610, 0.0162, 0.0165,  ..., 0.0556, 0.0067, 0.0081],
         [0.1177, 0.0162, 0.0165,  ..., 0.0556, 0.0067, 0.0081],
         [0.0617, 0.0162, 0.0165,  ..., 0.0556, 0.9800, 0.9756],
         [0.0597, 0.9513, 0.9506,  ..., 0.8331, 0.0067, 0.0081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:32,492 [Process: 0] Synchronize training processes
2024-08-20 17:29:32,492 [Process: 0] Evaluating...
2024-08-20 17:29:32,494 [Process: 0] EPOCH 131:
2024-08-20 17:29:32,495 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:33,535 [Process: 0] Synchronize training processes
2024-08-20 17:29:33,535 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0026e-01, 1.1453e-01, 9.9801e-01,  ..., 9.6987e-01,
          2.1318e-02, 2.6056e-02],
         [1.0026e-01, 1.2027e-01, 6.6302e-04,  ..., 7.7440e-03,
          2.1318e-02, 2.6056e-02],
         [5.6213e-01, 2.3708e-01, 6.6302e-04,  ..., 7.7440e-03,
          9.3605e-01, 9.2183e-01],
         [2.3736e-01, 5.2812e-01, 6.6302e-04,  ..., 1.4642e-02,
          2.1318e-02, 2.6056e-02]],
        [[1.3461e-01, 4.7413e-04, 9.8959e-01,  ..., 9.2744e-01,
          9.7245e-04, 4.9708e-02],
         [1.6971e-01, 4.7413e-04, 3.4684e-03,  ..., 3.6243e-02,
          9.7245e-04, 4.5730e-02],
         [4.4930e-01, 4.7413e-04, 3.4684e-03,  ..., 1.8156e-02,
          9.7245e-04, 8.4925e-01],
         [2.4639e-01, 9.9858e-01, 3.4684e-03,  ..., 1.8156e-02,
          9.9708e-01, 5.5307e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 131:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9967, 0.0283, 0.0678,  ..., 0.9911, 0.9453, 0.0312],
         [0.0011, 0.0283, 0.0686,  ..., 0.0030, 0.0192, 0.0312],
         [0.0011, 0.0283, 0.0877,  ..., 0.0030, 0.0178, 0.0312],
         [0.0011, 0.9150, 0.7759,  ..., 0.0030, 0.0178, 0.9064]],
        [[0.7851, 0.0597, 0.0484,  ..., 0.0661, 0.0073, 0.0069],
         [0.1315, 0.0806, 0.0587,  ..., 0.0834, 0.0073, 0.0069],
         [0.0417, 0.0597, 0.0484,  ..., 0.0661, 0.9780, 0.9792],
         [0.0417, 0.8000, 0.8446,  ..., 0.7845, 0.0073, 0.0069]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0945, 0.1005, 0.9792,  ..., 0.9938, 0.0158, 0.0246],
         [0.0945, 0.1047, 0.0069,  ..., 0.0021, 0.0158, 0.0246],
         [0.5171, 0.6157, 0.0069,  ..., 0.0021, 0.9525, 0.9261],
         [0.2939, 0.1791, 0.0069,  ..., 0.0021, 0.0158, 0.0246]],
        [[0.1197, 0.0054, 0.9742,  ..., 0.9850, 0.0037, 0.0191],
         [0.1495, 0.0054, 0.0086,  ..., 0.0050, 0.0037, 0.0191],
         [0.4945, 0.0054, 0.0086,  ..., 0.0050, 0.0037, 0.9427],
         [0.2364, 0.9839, 0.0086,  ..., 0.0050, 0.9889, 0.0191]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:29:35,411 [Process: 0] EPOCH 132:
2024-08-20 17:29:35,413 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 132:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9536, 0.0079, 0.0414,  ..., 0.9920, 0.8898, 0.0151],
         [0.0148, 0.0079, 0.0414,  ..., 0.0027, 0.0320, 0.0151],
         [0.0148, 0.0079, 0.0564,  ..., 0.0027, 0.0463, 0.0151],
         [0.0167, 0.9763, 0.8607,  ..., 0.0027, 0.0320, 0.9548]],
        [[0.8798, 0.0216, 0.0097,  ..., 0.0296, 0.0168, 0.0051],
         [0.0486, 0.0216, 0.0097,  ..., 0.0296, 0.0168, 0.0051],
         [0.0358, 0.0216, 0.0097,  ..., 0.0296, 0.9497, 0.9846],
         [0.0358, 0.9351, 0.9708,  ..., 0.9113, 0.0168, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
2024-08-20 17:29:36,485 [Process: 0] Synchronize training processes
2024-08-20 17:29:36,486 [Process: 0] Evaluating...
2024-08-20 17:29:36,487 [Process: 0] EPOCH 133:
2024-08-20 17:29:36,489 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:37,479 [Process: 0] Synchronize training processes
2024-08-20 17:29:37,479 [Process: 0] Evaluating...
2024-08-20 17:29:37,481 [Process: 0] EPOCH 134:
2024-08-20 17:29:37,482 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1078, 0.1435, 0.9930,  ..., 0.9847, 0.0233, 0.0094],
         [0.1287, 0.4602, 0.0023,  ..., 0.0041, 0.0233, 0.0094],
         [0.5960, 0.1435, 0.0023,  ..., 0.0041, 0.9300, 0.9718],
         [0.1676, 0.2528, 0.0023,  ..., 0.0071, 0.0233, 0.0094]],
        [[0.0585, 0.0011, 0.9928,  ..., 0.9833, 0.0549, 0.0258],
         [0.0641, 0.0011, 0.0024,  ..., 0.0056, 0.0957, 0.0258],
         [0.8158, 0.0011, 0.0024,  ..., 0.0056, 0.0549, 0.9225],
         [0.0615, 0.9968, 0.0024,  ..., 0.0056, 0.7945, 0.0258]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 133:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.9221e-01, 3.9834e-02, 2.1779e-02,  ..., 9.9329e-01,
          9.7180e-01, 4.2561e-02],
         [2.5965e-03, 3.9834e-02, 2.1779e-02,  ..., 2.2376e-03,
          9.3990e-03, 3.7686e-02],
         [2.5965e-03, 3.9834e-02, 2.1779e-02,  ..., 2.2376e-03,
          9.3990e-03, 3.7686e-02],
         [2.5965e-03, 8.8050e-01, 9.3466e-01,  ..., 2.2376e-03,
          9.3990e-03, 8.8207e-01]],
        [[8.3998e-01, 2.5631e-02, 2.0426e-02,  ..., 6.1734e-02,
          1.1984e-01, 9.9141e-04],
         [7.2331e-02, 2.5631e-02, 2.0426e-02,  ..., 5.6733e-02,
          1.8133e-01, 9.9141e-04],
         [4.7936e-02, 2.5631e-02, 2.0426e-02,  ..., 8.2529e-01,
          4.8073e-01, 9.9703e-01],
         [3.9751e-02, 9.2311e-01, 9.3872e-01,  ..., 5.6245e-02,
          2.1810e-01, 9.9141e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1103, 0.1532, 0.9892,  ..., 0.9966, 0.0182, 0.0138],
         [0.1375, 0.2873, 0.0036,  ..., 0.0011, 0.0182, 0.0138],
         [0.5745, 0.1693, 0.0036,  ..., 0.0011, 0.9455, 0.9585],
         [0.1777, 0.3902, 0.0036,  ..., 0.0011, 0.0182, 0.0138]],
        [[0.1456, 0.0019, 0.9813,  ..., 0.9870, 0.0020, 0.0089],
         [0.2903, 0.0019, 0.0062,  ..., 0.0043, 0.0020, 0.0089],
         [0.2578, 0.0019, 0.0062,  ..., 0.0043, 0.0020, 0.9733],
         [0.3063, 0.9942, 0.0062,  ..., 0.0043, 0.9939, 0.0089]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 134:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9911, 0.0193, 0.0489,  ..., 0.9929, 0.9438, 0.0193],
         [0.0030, 0.0193, 0.0489,  ..., 0.0024, 0.0174, 0.0193],
         [0.0030, 0.0193, 0.0589,  ..., 0.0024, 0.0214, 0.0193],
         [0.0030, 0.9422, 0.8433,  ..., 0.0024, 0.0174, 0.9422]],
        [[0.8174, 0.0379, 0.0172,  ..., 0.0197, 0.0094, 0.0025],
         [0.0977, 0.0379, 0.0172,  ..., 0.0197, 0.0094, 0.0025],
         [0.0433, 0.0379, 0.0172,  ..., 0.0197, 0.9719, 0.9924],
         [0.0417, 0.8863, 0.9483,  ..., 0.9410, 0.0094, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:38,535 [Process: 0] Synchronize training processes
2024-08-20 17:29:38,535 [Process: 0] Evaluating...
2024-08-20 17:29:38,537 [Process: 0] EPOCH 135:
2024-08-20 17:29:38,539 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:39,565 [Process: 0] Synchronize training processes
2024-08-20 17:29:39,565 [Process: 0] Evaluating...
2024-08-20 17:29:39,567 [Process: 0] EPOCH 136:
2024-08-20 17:29:39,568 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1072, 0.1461, 0.9933,  ..., 0.9677, 0.0141, 0.0265],
         [0.1175, 0.4060, 0.0022,  ..., 0.0108, 0.0141, 0.0265],
         [0.5023, 0.1461, 0.0022,  ..., 0.0108, 0.9577, 0.9203],
         [0.2731, 0.3019, 0.0022,  ..., 0.0108, 0.0141, 0.0267]],
        [[0.1483, 0.0057, 0.9834,  ..., 0.9804, 0.0084, 0.0131],
         [0.3114, 0.0057, 0.0055,  ..., 0.0065, 0.0084, 0.0131],
         [0.3210, 0.0057, 0.0055,  ..., 0.0065, 0.0084, 0.9607],
         [0.2193, 0.9828, 0.0055,  ..., 0.0066, 0.9748, 0.0131]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 135:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9766, 0.0300, 0.0493,  ..., 0.9783, 0.9841, 0.0611],
         [0.0078, 0.0271, 0.0603,  ..., 0.0072, 0.0053, 0.0611],
         [0.0078, 0.0271, 0.0493,  ..., 0.0072, 0.0053, 0.0847],
         [0.0078, 0.9158, 0.8410,  ..., 0.0072, 0.0053, 0.7931]],
        [[0.8166, 0.0176, 0.0082,  ..., 0.0449, 0.0024, 0.0068],
         [0.0988, 0.0176, 0.0082,  ..., 0.0449, 0.0024, 0.0068],
         [0.0453, 0.0176, 0.0082,  ..., 0.0583, 0.9928, 0.9796],
         [0.0392, 0.9473, 0.9755,  ..., 0.8519, 0.0024, 0.0068]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.5623e-02, 9.1369e-02, 9.0484e-01,  ..., 9.9564e-01,
          3.6265e-02, 1.9587e-02],
         [7.5623e-02, 7.2589e-01, 3.1721e-02,  ..., 1.4128e-03,
          3.4892e-02, 1.9587e-02],
         [7.2649e-01, 9.1369e-02, 3.1721e-02,  ..., 1.4128e-03,
          8.9395e-01, 9.4124e-01],
         [1.2227e-01, 9.1369e-02, 3.1721e-02,  ..., 1.5367e-03,
          3.4892e-02, 1.9587e-02]],
        [[1.2745e-01, 5.1049e-04, 9.8272e-01,  ..., 9.8582e-01,
          1.5520e-03, 1.6174e-02],
         [2.4016e-01, 5.1049e-04, 5.7588e-03,  ..., 4.7283e-03,
          1.5520e-03, 1.6174e-02],
         [4.8216e-01, 5.1049e-04, 5.7588e-03,  ..., 4.7283e-03,
          1.5520e-03, 9.5148e-01],
         [1.5023e-01, 9.9847e-01, 5.7588e-03,  ..., 4.7283e-03,
          9.9534e-01, 1.6174e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 136:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9582, 0.0228, 0.0363,  ..., 0.9494, 0.9546, 0.0244],
         [0.0157, 0.0228, 0.0363,  ..., 0.0169, 0.0190, 0.0244],
         [0.0131, 0.0228, 0.0363,  ..., 0.0169, 0.0132, 0.0244],
         [0.0131, 0.9317, 0.8910,  ..., 0.0169, 0.0132, 0.9268]],
        [[0.8365, 0.0296, 0.0511,  ..., 0.0185, 0.0053, 0.0064],
         [0.1050, 0.0296, 0.0511,  ..., 0.0185, 0.0053, 0.0064],
         [0.0293, 0.0296, 0.0746,  ..., 0.0185, 0.9840, 0.9807],
         [0.0293, 0.9112, 0.8232,  ..., 0.9446, 0.0053, 0.0064]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:40,586 [Process: 0] Synchronize training processes
2024-08-20 17:29:40,586 [Process: 0] Evaluating...
2024-08-20 17:29:40,588 [Process: 0] EPOCH 137:
2024-08-20 17:29:40,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:41,636 [Process: 0] Synchronize training processes
2024-08-20 17:29:41,637 [Process: 0] Evaluating...
2024-08-20 17:29:41,638 [Process: 0] EPOCH 138:
2024-08-20 17:29:41,640 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2634e-02, 8.9020e-02, 9.9290e-01,  ..., 9.9387e-01,
          2.2071e-02, 2.4539e-02],
         [6.3551e-02, 7.3294e-01, 2.3683e-03,  ..., 2.0425e-03,
          2.2071e-02, 2.4539e-02],
         [7.7864e-01, 8.9020e-02, 2.3683e-03,  ..., 2.0425e-03,
          9.3379e-01, 9.2638e-01],
         [8.5171e-02, 8.9020e-02, 2.3683e-03,  ..., 2.0425e-03,
          2.2071e-02, 2.4539e-02]],
        [[6.4203e-02, 1.3727e-03, 9.5190e-01,  ..., 9.7011e-01,
          1.9215e-04, 1.3475e-02],
         [7.7333e-02, 1.3727e-03, 1.9658e-02,  ..., 9.9637e-03,
          1.9215e-04, 1.3475e-02],
         [6.4203e-02, 1.3727e-03, 1.4222e-02,  ..., 9.9637e-03,
          1.9215e-04, 9.5958e-01],
         [7.9426e-01, 9.9588e-01, 1.4222e-02,  ..., 9.9637e-03,
          9.9942e-01, 1.3475e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 137:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9732, 0.0149, 0.0323,  ..., 0.9849, 0.9861, 0.0254],
         [0.0089, 0.0149, 0.0323,  ..., 0.0050, 0.0046, 0.0254],
         [0.0089, 0.0149, 0.0323,  ..., 0.0050, 0.0046, 0.0314],
         [0.0089, 0.9552, 0.9031,  ..., 0.0050, 0.0046, 0.9177]],
        [[0.9093, 0.0400, 0.0244,  ..., 0.0323, 0.0026, 0.0051],
         [0.0615, 0.0400, 0.0244,  ..., 0.0323, 0.0026, 0.0051],
         [0.0146, 0.0441, 0.0244,  ..., 0.0333, 0.9923, 0.9847],
         [0.0146, 0.8760, 0.9268,  ..., 0.9020, 0.0026, 0.0051]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0468, 0.0363, 0.9859,  ..., 0.9590, 0.0251, 0.0087],
         [0.0468, 0.8911, 0.0047,  ..., 0.0101, 0.0251, 0.0087],
         [0.0865, 0.0363, 0.0047,  ..., 0.0101, 0.9247, 0.9740],
         [0.8199, 0.0363, 0.0047,  ..., 0.0208, 0.0251, 0.0087]],
        [[0.1345, 0.0012, 0.9775,  ..., 0.9540, 0.0010, 0.0083],
         [0.2114, 0.0012, 0.0075,  ..., 0.0153, 0.0010, 0.0083],
         [0.3464, 0.0012, 0.0075,  ..., 0.0153, 0.0010, 0.9750],
         [0.3077, 0.9963, 0.0075,  ..., 0.0153, 0.9969, 0.0083]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 138:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9744, 0.0149, 0.0396,  ..., 0.9890, 0.9715, 0.0403],
         [0.0085, 0.0149, 0.0396,  ..., 0.0037, 0.0111, 0.0273],
         [0.0085, 0.0149, 0.0587,  ..., 0.0037, 0.0087, 0.0273],
         [0.0085, 0.9552, 0.8620,  ..., 0.0037, 0.0087, 0.9050]],
        [[0.9723, 0.0457, 0.0194,  ..., 0.0100, 0.0106, 0.0054],
         [0.0085, 0.0466, 0.0194,  ..., 0.0100, 0.0106, 0.0054],
         [0.0106, 0.0542, 0.0194,  ..., 0.0100, 0.9681, 0.9839],
         [0.0085, 0.8535, 0.9418,  ..., 0.9701, 0.0106, 0.0054]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:42,652 [Process: 0] Synchronize training processes
2024-08-20 17:29:42,652 [Process: 0] Evaluating...
2024-08-20 17:29:42,654 [Process: 0] EPOCH 139:
2024-08-20 17:29:42,656 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:43,677 [Process: 0] Synchronize training processes
2024-08-20 17:29:43,677 [Process: 0] Evaluating...
2024-08-20 17:29:43,679 [Process: 0] EPOCH 140:
2024-08-20 17:29:43,680 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[3.9453e-02, 4.4884e-02, 9.9787e-01,  ..., 9.8019e-01,
          3.6639e-02, 1.5751e-02],
         [3.9453e-02, 8.6535e-01, 7.0985e-04,  ..., 6.6028e-03,
          3.6332e-02, 1.5751e-02],
         [8.7609e-01, 4.4884e-02, 7.0985e-04,  ..., 6.6028e-03,
          8.9070e-01, 9.5275e-01],
         [4.5000e-02, 4.4884e-02, 7.0985e-04,  ..., 6.6028e-03,
          3.6332e-02, 1.5751e-02]],
        [[1.1913e-01, 9.8489e-04, 9.9157e-01,  ..., 9.8621e-01,
          6.3661e-04, 1.2728e-02],
         [2.9472e-01, 9.8489e-04, 2.8092e-03,  ..., 4.5967e-03,
          6.3661e-04, 1.2728e-02],
         [1.1913e-01, 9.8489e-04, 2.8092e-03,  ..., 4.5967e-03,
          6.3661e-04, 9.6182e-01],
         [4.6703e-01, 9.9705e-01, 2.8092e-03,  ..., 4.5967e-03,
          9.9809e-01, 1.2728e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 139:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9894, 0.0242, 0.0187,  ..., 0.9738, 0.9784, 0.0728],
         [0.0035, 0.0242, 0.0187,  ..., 0.0087, 0.0074, 0.1064],
         [0.0035, 0.0242, 0.0187,  ..., 0.0087, 0.0071, 0.0843],
         [0.0035, 0.9275, 0.9440,  ..., 0.0087, 0.0071, 0.7364]],
        [[0.9311, 0.0167, 0.0106,  ..., 0.0163, 0.0073, 0.0046],
         [0.0217, 0.0167, 0.0106,  ..., 0.0163, 0.0073, 0.0046],
         [0.0255, 0.0167, 0.0106,  ..., 0.0163, 0.9782, 0.9861],
         [0.0217, 0.9498, 0.9681,  ..., 0.9511, 0.0073, 0.0046]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.5829e-02, 5.1908e-02, 9.9070e-01,  ..., 9.9760e-01,
          2.9318e-02, 7.5947e-03],
         [9.5829e-02, 8.4428e-01, 3.1002e-03,  ..., 7.9862e-04,
          2.9318e-02, 7.5947e-03],
         [4.8590e-01, 5.1908e-02, 3.1002e-03,  ..., 7.9862e-04,
          9.1204e-01, 9.7722e-01],
         [3.2244e-01, 5.1908e-02, 3.1002e-03,  ..., 7.9862e-04,
          2.9318e-02, 7.5947e-03]],
        [[1.3400e-01, 2.5257e-03, 9.5716e-01,  ..., 8.8627e-01,
          1.4277e-02, 1.3970e-02],
         [3.2177e-01, 2.5257e-03, 1.4280e-02,  ..., 4.6549e-02,
          1.0708e-02, 1.3970e-02],
         [1.3400e-01, 2.5257e-03, 1.4280e-02,  ..., 3.3591e-02,
          1.0708e-02, 9.5809e-01],
         [4.1022e-01, 9.9242e-01, 1.4280e-02,  ..., 3.3591e-02,
          9.6431e-01, 1.3970e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 140:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8432, 0.0216, 0.0466,  ..., 0.9929, 0.9894, 0.0278],
         [0.0535, 0.0216, 0.0458,  ..., 0.0024, 0.0035, 0.0233],
         [0.0568, 0.0216, 0.0511,  ..., 0.0024, 0.0035, 0.0233],
         [0.0465, 0.9351, 0.8565,  ..., 0.0024, 0.0035, 0.9255]],
        [[0.8547, 0.0071, 0.0150,  ..., 0.0251, 0.0084, 0.0048],
         [0.0779, 0.0071, 0.0150,  ..., 0.0251, 0.0084, 0.0048],
         [0.0337, 0.0071, 0.0150,  ..., 0.0251, 0.9749, 0.9856],
         [0.0337, 0.9786, 0.9549,  ..., 0.9247, 0.0084, 0.0048]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:44,691 [Process: 0] Synchronize training processes
2024-08-20 17:29:44,691 [Process: 0] Evaluating...
2024-08-20 17:29:44,693 [Process: 0] EPOCH 141:
2024-08-20 17:29:44,695 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:45,691 [Process: 0] Synchronize training processes
2024-08-20 17:29:45,692 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.9651e-02, 1.4137e-01, 9.7837e-01,  ..., 9.8173e-01,
          1.6558e-02, 6.3242e-03],
         [8.0272e-02, 5.7242e-01, 6.5536e-03,  ..., 6.0916e-03,
          1.6558e-02, 6.3242e-03],
         [1.4489e-01, 1.4484e-01, 6.5536e-03,  ..., 6.0916e-03,
          9.5033e-01, 9.8103e-01],
         [6.9519e-01, 1.4137e-01, 8.5221e-03,  ..., 6.0916e-03,
          1.6558e-02, 6.3242e-03]],
        [[1.2798e-01, 9.5128e-04, 9.9086e-01,  ..., 9.2021e-01,
          1.3445e-03, 2.0323e-02],
         [2.4525e-01, 9.5128e-04, 3.0461e-03,  ..., 2.7753e-02,
          1.3445e-03, 2.0323e-02],
         [1.2798e-01, 9.5128e-04, 3.0461e-03,  ..., 2.6019e-02,
          1.3445e-03, 9.3903e-01],
         [4.9880e-01, 9.9715e-01, 3.0461e-03,  ..., 2.6019e-02,
          9.9597e-01, 2.0323e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 141:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6711e-01, 2.8783e-02, 7.4030e-03,  ..., 9.9832e-01,
          9.6521e-01, 2.0986e-02],
         [1.0963e-02, 2.8783e-02, 7.4030e-03,  ..., 5.5865e-04,
          1.1597e-02, 2.0986e-02],
         [1.0963e-02, 2.8783e-02, 7.4030e-03,  ..., 5.5865e-04,
          1.1597e-02, 2.0986e-02],
         [1.0963e-02, 9.1365e-01, 9.7779e-01,  ..., 5.5865e-04,
          1.1597e-02, 9.3704e-01]],
        [[5.7560e-01, 2.9220e-02, 1.0231e-02,  ..., 2.5155e-02,
          1.4550e-03, 6.7964e-03],
         [3.5995e-01, 2.9220e-02, 1.0231e-02,  ..., 2.4083e-02,
          1.4550e-03, 6.7964e-03],
         [3.2223e-02, 2.9593e-02, 1.0231e-02,  ..., 2.4083e-02,
          9.9563e-01, 9.7961e-01],
         [3.2223e-02, 9.1197e-01, 9.6931e-01,  ..., 9.2668e-01,
          1.4550e-03, 6.7964e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0881e-01, 9.3200e-02, 9.9477e-01,  ..., 9.9706e-01,
          1.9195e-02, 1.5089e-02],
         [1.2412e-01, 7.2040e-01, 1.7428e-03,  ..., 8.7858e-04,
          1.9195e-02, 1.5089e-02],
         [5.3392e-01, 9.3200e-02, 1.7428e-03,  ..., 8.7858e-04,
          9.4241e-01, 9.5473e-01],
         [2.3315e-01, 9.3200e-02, 1.7428e-03,  ..., 1.1845e-03,
          1.9195e-02, 1.5089e-02]],
        [[1.3995e-01, 4.3385e-03, 9.8301e-01,  ..., 8.6690e-01,
          6.2568e-03, 3.3108e-02],
         [4.0117e-01, 4.3385e-03, 5.4856e-03,  ..., 6.9953e-02,
          6.2568e-03, 3.0781e-02],
         [1.6622e-01, 4.3385e-03, 5.4856e-03,  ..., 3.1573e-02,
          6.2568e-03, 9.0533e-01],
         [2.9265e-01, 9.8698e-01, 6.0228e-03,  ..., 3.1573e-02,
          9.8123e-01, 3.0781e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:29:47,527 [Process: 0] EPOCH 142:
2024-08-20 17:29:47,529 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 142:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7427, 0.0082, 0.0438,  ..., 0.9908, 0.9853, 0.0331],
         [0.0667, 0.0082, 0.0456,  ..., 0.0031, 0.0049, 0.0359],
         [0.0901, 0.0082, 0.0438,  ..., 0.0031, 0.0049, 0.0354],
         [0.1005, 0.9755, 0.8668,  ..., 0.0031, 0.0049, 0.8957]],
        [[0.8222, 0.0272, 0.0348,  ..., 0.0360, 0.0031, 0.0128],
         [0.1164, 0.0272, 0.0275,  ..., 0.0343, 0.0031, 0.0128],
         [0.0307, 0.0272, 0.0303,  ..., 0.0357, 0.9907, 0.9617],
         [0.0307, 0.9185, 0.9073,  ..., 0.8940, 0.0031, 0.0128]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:29:48,546 [Process: 0] Synchronize training processes
2024-08-20 17:29:48,546 [Process: 0] Evaluating...
2024-08-20 17:29:48,548 [Process: 0] EPOCH 143:
2024-08-20 17:29:48,549 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:49,546 [Process: 0] Synchronize training processes
2024-08-20 17:29:49,546 [Process: 0] Evaluating...
2024-08-20 17:29:49,548 [Process: 0] EPOCH 144:
2024-08-20 17:29:49,550 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1567e-01, 1.1791e-01, 9.9835e-01,  ..., 9.8016e-01,
          1.9125e-02, 9.4216e-03],
         [1.0750e-01, 6.3446e-01, 5.5134e-04,  ..., 6.6145e-03,
          1.9125e-02, 9.4216e-03],
         [5.5712e-01, 1.1791e-01, 5.5134e-04,  ..., 6.6145e-03,
          9.4262e-01, 9.7174e-01],
         [2.1970e-01, 1.2973e-01, 5.5134e-04,  ..., 6.6145e-03,
          1.9125e-02, 9.4216e-03]],
        [[1.3362e-01, 7.8967e-03, 9.8994e-01,  ..., 9.1272e-01,
          1.5724e-03, 1.7318e-02],
         [3.3286e-01, 7.8967e-03, 3.3520e-03,  ..., 2.9092e-02,
          1.5724e-03, 1.7318e-02],
         [1.3362e-01, 7.8967e-03, 3.3520e-03,  ..., 2.9092e-02,
          1.5724e-03, 9.4621e-01],
         [3.9991e-01, 9.7631e-01, 3.3520e-03,  ..., 2.9092e-02,
          9.9528e-01, 1.9158e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 143:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9143, 0.0106, 0.0312,  ..., 0.9941, 0.9317, 0.0127],
         [0.0283, 0.0106, 0.0312,  ..., 0.0020, 0.0228, 0.0123],
         [0.0291, 0.0106, 0.0312,  ..., 0.0020, 0.0228, 0.0123],
         [0.0283, 0.9682, 0.9064,  ..., 0.0020, 0.0228, 0.9627]],
        [[0.8036, 0.0369, 0.0184,  ..., 0.0473, 0.0040, 0.0030],
         [0.1524, 0.0369, 0.0175,  ..., 0.0473, 0.0040, 0.0030],
         [0.0220, 0.0386, 0.0175,  ..., 0.0605, 0.9879, 0.9911],
         [0.0220, 0.8876, 0.9467,  ..., 0.8450, 0.0040, 0.0030]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.2840e-02, 1.7700e-01, 9.8178e-01,  ..., 9.9056e-01,
          1.2823e-02, 3.3412e-02],
         [7.9229e-02, 3.7288e-01, 5.5855e-03,  ..., 3.1476e-03,
          1.2823e-02, 3.2026e-02],
         [7.4550e-01, 1.9814e-01, 5.5855e-03,  ..., 3.1476e-03,
          9.6153e-01, 9.0030e-01],
         [1.0243e-01, 2.5198e-01, 7.0491e-03,  ..., 3.1476e-03,
          1.2823e-02, 3.4263e-02]],
        [[1.2962e-01, 1.7982e-02, 9.9602e-01,  ..., 9.0157e-01,
          2.4705e-04, 2.1181e-02],
         [5.4560e-01, 1.7982e-02, 1.3260e-03,  ..., 3.4680e-02,
          2.4705e-04, 2.1181e-02],
         [1.2962e-01, 1.7982e-02, 1.3260e-03,  ..., 3.1876e-02,
          2.4705e-04, 9.3646e-01],
         [1.9517e-01, 9.4605e-01, 1.3260e-03,  ..., 3.1876e-02,
          9.9926e-01, 2.1181e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 144:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9556, 0.0596, 0.0663,  ..., 0.9799, 0.9774, 0.0445],
         [0.0148, 0.1070, 0.0875,  ..., 0.0067, 0.0075, 0.0447],
         [0.0148, 0.0596, 0.0787,  ..., 0.0067, 0.0075, 0.0445],
         [0.0148, 0.7738, 0.7675,  ..., 0.0067, 0.0075, 0.8662]],
        [[0.9245, 0.0133, 0.0656,  ..., 0.0150, 0.0021, 0.0047],
         [0.0345, 0.0133, 0.0867,  ..., 0.0150, 0.0021, 0.0057],
         [0.0205, 0.0133, 0.0681,  ..., 0.0150, 0.9938, 0.9848],
         [0.0205, 0.9602, 0.7796,  ..., 0.9551, 0.0021, 0.0047]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:29:50,544 [Process: 0] Synchronize training processes
2024-08-20 17:29:50,544 [Process: 0] Evaluating...
2024-08-20 17:29:50,546 [Process: 0] EPOCH 145:
2024-08-20 17:29:50,547 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:51,544 [Process: 0] Synchronize training processes
2024-08-20 17:29:51,544 [Process: 0] Evaluating...
2024-08-20 17:29:51,545 [Process: 0] EPOCH 146:
2024-08-20 17:29:51,547 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1555e-01, 9.4331e-02, 9.9507e-01,  ..., 9.9318e-01,
          2.3255e-02, 1.4642e-02],
         [1.1924e-01, 7.3082e-01, 1.6420e-03,  ..., 2.2719e-03,
          2.3255e-02, 1.4642e-02],
         [4.3154e-01, 8.7424e-02, 1.6420e-03,  ..., 2.2719e-03,
          9.3024e-01, 9.5607e-01],
         [3.3368e-01, 8.7424e-02, 1.6420e-03,  ..., 2.2719e-03,
          2.3255e-02, 1.4642e-02]],
        [[8.5070e-02, 6.1320e-03, 9.6678e-01,  ..., 9.0406e-01,
          5.5217e-04, 2.6034e-02],
         [2.9726e-01, 6.1320e-03, 1.1074e-02,  ..., 3.5066e-02,
          5.5217e-04, 2.6034e-02],
         [8.5070e-02, 6.1320e-03, 1.1074e-02,  ..., 3.0436e-02,
          5.5217e-04, 9.2190e-01],
         [5.3260e-01, 9.8160e-01, 1.1074e-02,  ..., 3.0436e-02,
          9.9834e-01, 2.6034e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 145:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.6833e-01, 5.4804e-02, 5.1221e-02,  ..., 9.8615e-01,
          9.7813e-01, 2.5096e-02],
         [1.0556e-02, 7.1772e-02, 5.1221e-02,  ..., 4.6157e-03,
          8.3157e-03, 2.5096e-02],
         [1.0556e-02, 5.4804e-02, 7.9500e-02,  ..., 4.6157e-03,
          6.7772e-03, 2.5096e-02],
         [1.0556e-02, 8.1862e-01, 8.1806e-01,  ..., 4.6157e-03,
          6.7772e-03, 9.2471e-01]],
        [[9.5145e-01, 4.4480e-02, 3.0691e-02,  ..., 1.6490e-02,
          2.5926e-03, 5.8238e-04],
         [1.7442e-02, 4.4480e-02, 3.0691e-02,  ..., 1.5584e-02,
          2.5926e-03, 5.8238e-04],
         [1.5554e-02, 4.5496e-02, 4.8139e-02,  ..., 1.5584e-02,
          9.9222e-01, 9.9825e-01],
         [1.5554e-02, 8.6554e-01, 8.9048e-01,  ..., 9.5234e-01,
          2.5926e-03, 5.8238e-04]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0851e-01, 1.3388e-01, 9.8607e-01,  ..., 9.9169e-01,
          1.9363e-02, 1.3137e-02],
         [1.0959e-01, 5.0379e-01, 4.6417e-03,  ..., 2.7704e-03,
          1.9363e-02, 1.3137e-02],
         [5.1263e-01, 1.4621e-01, 4.6417e-03,  ..., 2.7704e-03,
          9.4191e-01, 9.6059e-01],
         [2.6926e-01, 2.1613e-01, 4.6417e-03,  ..., 2.7704e-03,
          1.9363e-02, 1.3137e-02]],
        [[1.3118e-01, 4.0928e-04, 9.4878e-01,  ..., 9.5172e-01,
          2.5820e-04, 1.8223e-02],
         [2.3974e-01, 4.0928e-04, 1.5522e-02,  ..., 1.7116e-02,
          2.5820e-04, 1.8223e-02],
         [1.6001e-01, 4.0928e-04, 1.5522e-02,  ..., 1.5580e-02,
          2.5820e-04, 9.4419e-01],
         [4.6907e-01, 9.9877e-01, 2.0178e-02,  ..., 1.5580e-02,
          9.9923e-01, 1.9363e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 146:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9862, 0.0782, 0.0375,  ..., 0.9722, 0.9764, 0.0128],
         [0.0046, 0.0967, 0.0375,  ..., 0.0093, 0.0079, 0.0128],
         [0.0046, 0.0926, 0.0442,  ..., 0.0093, 0.0079, 0.0128],
         [0.0046, 0.7326, 0.8808,  ..., 0.0093, 0.0079, 0.9617]],
        [[0.9428, 0.0403, 0.0295,  ..., 0.0181, 0.0069, 0.0035],
         [0.0275, 0.0403, 0.0295,  ..., 0.0181, 0.0069, 0.0035],
         [0.0148, 0.0403, 0.0295,  ..., 0.0181, 0.9792, 0.9896],
         [0.0148, 0.8790, 0.9115,  ..., 0.9456, 0.0069, 0.0035]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
2024-08-20 17:29:52,549 [Process: 0] Synchronize training processes
2024-08-20 17:29:52,549 [Process: 0] Evaluating...
2024-08-20 17:29:52,551 [Process: 0] EPOCH 147:
2024-08-20 17:29:52,552 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:53,551 [Process: 0] Synchronize training processes
2024-08-20 17:29:53,552 [Process: 0] Evaluating...
2024-08-20 17:29:53,554 [Process: 0] EPOCH 148:
2024-08-20 17:29:53,555 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
tensor([[[1.0460e-01, 5.6640e-02, 9.8781e-01,  ..., 9.7430e-01,
          1.2654e-02, 1.8755e-02],
         [8.6471e-02, 5.6640e-02, 4.0629e-03,  ..., 8.4086e-03,
          1.2654e-02, 1.8755e-02],
         [6.7436e-01, 8.2510e-02, 4.0629e-03,  ..., 8.4086e-03,
          9.6204e-01, 9.4373e-01],
         [1.3456e-01, 8.0421e-01, 4.0629e-03,  ..., 8.8860e-03,
          1.2654e-02, 1.8755e-02]],
        [[1.3685e-01, 9.7226e-04, 9.5703e-01,  ..., 9.8380e-01,
          6.0352e-03, 2.9047e-02],
         [3.4474e-01, 9.7226e-04, 1.5512e-02,  ..., 5.3986e-03,
          6.0352e-03, 2.8208e-02],
         [1.8644e-01, 9.7226e-04, 1.3727e-02,  ..., 5.3986e-03,
          6.0352e-03, 9.1454e-01],
         [3.3198e-01, 9.9708e-01, 1.3727e-02,  ..., 5.3986e-03,
          9.8189e-01, 2.8208e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 147:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.8650, 0.0616, 0.0184,  ..., 0.9400, 0.9725, 0.0206],
         [0.0683, 0.0512, 0.0184,  ..., 0.0200, 0.0092, 0.0206],
         [0.0334, 0.0620, 0.0207,  ..., 0.0200, 0.0092, 0.0206],
         [0.0334, 0.8252, 0.9426,  ..., 0.0200, 0.0092, 0.9382]],
        [[0.9384, 0.0149, 0.0085,  ..., 0.0245, 0.0086, 0.0061],
         [0.0241, 0.0149, 0.0085,  ..., 0.0245, 0.0086, 0.0061],
         [0.0188, 0.0149, 0.0085,  ..., 0.0245, 0.9741, 0.9816],
         [0.0188, 0.9553, 0.9744,  ..., 0.9266, 0.0086, 0.0061]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0981, 0.0917, 0.9960,  ..., 0.9945, 0.0143, 0.0120],
         [0.0836, 0.0877, 0.0013,  ..., 0.0018, 0.0143, 0.0120],
         [0.6739, 0.1600, 0.0013,  ..., 0.0018, 0.9572, 0.9641],
         [0.1444, 0.6606, 0.0013,  ..., 0.0018, 0.0143, 0.0120]],
        [[0.1461, 0.0184, 0.9691,  ..., 0.9836, 0.8551, 0.0360],
         [0.1976, 0.0184, 0.0103,  ..., 0.0055, 0.1081, 0.0344],
         [0.2729, 0.0184, 0.0103,  ..., 0.0055, 0.0184, 0.8906],
         [0.3834, 0.9447, 0.0103,  ..., 0.0055, 0.0184, 0.0390]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 148:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9854, 0.0121, 0.0341,  ..., 0.9737, 0.9733, 0.0275],
         [0.0049, 0.0121, 0.0341,  ..., 0.0088, 0.0089, 0.0216],
         [0.0049, 0.0121, 0.0341,  ..., 0.0088, 0.0089, 0.0216],
         [0.0049, 0.9638, 0.8977,  ..., 0.0088, 0.0089, 0.9292]],
        [[0.9607, 0.0161, 0.0079,  ..., 0.0192, 0.0069, 0.0065],
         [0.0158, 0.0161, 0.0079,  ..., 0.0192, 0.0069, 0.0065],
         [0.0118, 0.0161, 0.0079,  ..., 0.0197, 0.9792, 0.9804],
         [0.0118, 0.9516, 0.9763,  ..., 0.9419, 0.0069, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:29:54,585 [Process: 0] Synchronize training processes
2024-08-20 17:29:54,586 [Process: 0] Evaluating...
2024-08-20 17:29:54,587 [Process: 0] EPOCH 149:
2024-08-20 17:29:54,589 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:55,613 [Process: 0] Synchronize training processes
2024-08-20 17:29:55,614 [Process: 0] Evaluating...
2024-08-20 17:29:55,615 [Process: 0] EPOCH 150:
2024-08-20 17:29:55,617 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1183, 0.0054, 0.9574,  ..., 0.9907, 0.0113, 0.0199],
         [0.1736, 0.0054, 0.0102,  ..., 0.0031, 0.0113, 0.0199],
         [0.5805, 0.0054, 0.0102,  ..., 0.0031, 0.9662, 0.9403],
         [0.1276, 0.9838, 0.0222,  ..., 0.0031, 0.0113, 0.0199]],
        [[0.1318, 0.0017, 0.9764,  ..., 0.9464, 0.9894, 0.0204],
         [0.4939, 0.0017, 0.0093,  ..., 0.0277, 0.0035, 0.0204],
         [0.1318, 0.0017, 0.0071,  ..., 0.0129, 0.0035, 0.9384],
         [0.2426, 0.9950, 0.0071,  ..., 0.0129, 0.0035, 0.0208]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 149:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9826, 0.0208, 0.0245,  ..., 0.9892, 0.9908, 0.0517],
         [0.0058, 0.0203, 0.0245,  ..., 0.0036, 0.0031, 0.0512],
         [0.0058, 0.0203, 0.0252,  ..., 0.0036, 0.0031, 0.0512],
         [0.0058, 0.9386, 0.9257,  ..., 0.0036, 0.0031, 0.8459]],
        [[0.9878, 0.0306, 0.0157,  ..., 0.1049, 0.0046, 0.0025],
         [0.0041, 0.0306, 0.0157,  ..., 0.0843, 0.0046, 0.0025],
         [0.0041, 0.0381, 0.0157,  ..., 0.6516, 0.9861, 0.9926],
         [0.0041, 0.9007, 0.9528,  ..., 0.1592, 0.0046, 0.0025]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.4442e-01, 7.4373e-04, 9.9515e-01,  ..., 9.7629e-01,
          2.2501e-02, 1.5261e-02],
         [1.3562e-01, 7.4373e-04, 1.6153e-03,  ..., 8.3394e-03,
          2.2501e-02, 1.5261e-02],
         [6.0008e-01, 7.4373e-04, 1.6153e-03,  ..., 7.6875e-03,
          9.3250e-01, 9.5422e-01],
         [1.1987e-01, 9.9777e-01, 1.6153e-03,  ..., 7.6875e-03,
          2.2501e-02, 1.5261e-02]],
        [[4.4464e-02, 1.2830e-03, 9.8112e-01,  ..., 9.4874e-01,
          9.3465e-01, 1.9568e-02],
         [8.6661e-01, 1.2830e-03, 6.2935e-03,  ..., 1.8730e-02,
          3.8185e-02, 1.9568e-02],
         [4.4464e-02, 1.2830e-03, 6.2935e-03,  ..., 1.6265e-02,
          1.3582e-02, 9.3965e-01],
         [4.4464e-02, 9.9615e-01, 6.2935e-03,  ..., 1.6265e-02,
          1.3582e-02, 2.1209e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 150:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9945, 0.0162, 0.0083,  ..., 0.9748, 0.9624, 0.0458],
         [0.0018, 0.0162, 0.0083,  ..., 0.0084, 0.0125, 0.0653],
         [0.0018, 0.0162, 0.0094,  ..., 0.0084, 0.0125, 0.0458],
         [0.0018, 0.9515, 0.9740,  ..., 0.0084, 0.0125, 0.8432]],
        [[0.9538, 0.0201, 0.0295,  ..., 0.0153, 0.0160, 0.0097],
         [0.0145, 0.0201, 0.0295,  ..., 0.0139, 0.0160, 0.0097],
         [0.0171, 0.0201, 0.0326,  ..., 0.0139, 0.9520, 0.9708],
         [0.0145, 0.9396, 0.9084,  ..., 0.9569, 0.0160, 0.0097]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:29:56,666 [Process: 0] Synchronize training processes
2024-08-20 17:29:56,666 [Process: 0] Evaluating...
2024-08-20 17:29:56,668 [Process: 0] EPOCH 151:
2024-08-20 17:29:56,670 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:29:57,689 [Process: 0] Synchronize training processes
2024-08-20 17:29:57,689 [Process: 0] Evaluating...
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1160, 0.0199, 0.9944,  ..., 0.9927, 0.0160, 0.0230],
         [0.1242, 0.0199, 0.0019,  ..., 0.0024, 0.0160, 0.0228],
         [0.4603, 0.0199, 0.0019,  ..., 0.0024, 0.9519, 0.9309],
         [0.2994, 0.9402, 0.0019,  ..., 0.0025, 0.0160, 0.0233]],
        [[0.0938, 0.0051, 0.9842,  ..., 0.9735, 0.0698, 0.0225],
         [0.4042, 0.0051, 0.0053,  ..., 0.0088, 0.5215, 0.0225],
         [0.0938, 0.0051, 0.0053,  ..., 0.0088, 0.0698, 0.9303],
         [0.4081, 0.9846, 0.0053,  ..., 0.0088, 0.3389, 0.0247]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 151:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9643, 0.0400, 0.0253,  ..., 0.8929, 0.9938, 0.0163],
         [0.0119, 0.0400, 0.0253,  ..., 0.0311, 0.0021, 0.0163],
         [0.0119, 0.0519, 0.0253,  ..., 0.0311, 0.0021, 0.0163],
         [0.0119, 0.8681, 0.9240,  ..., 0.0450, 0.0021, 0.9512]],
        [[0.9917, 0.0884, 0.0301,  ..., 0.0178, 0.0053, 0.0152],
         [0.0032, 0.0776, 0.0271,  ..., 0.0178, 0.0053, 0.0152],
         [0.0026, 0.1646, 0.0316,  ..., 0.0178, 0.9840, 0.9543],
         [0.0026, 0.6694, 0.9112,  ..., 0.9465, 0.0053, 0.0152]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1583, 0.1698, 0.9968,  ..., 0.9695, 0.0202, 0.0497],
         [0.1458, 0.3691, 0.0011,  ..., 0.0102, 0.0202, 0.0448],
         [0.3886, 0.1323, 0.0011,  ..., 0.0102, 0.9383, 0.8462],
         [0.3074, 0.3287, 0.0011,  ..., 0.0102, 0.0213, 0.0594]],
        [[0.1288, 0.0025, 0.9865,  ..., 0.9551, 0.0014, 0.0322],
         [0.2792, 0.0025, 0.0045,  ..., 0.0183, 0.0014, 0.0304],
         [0.1480, 0.0025, 0.0045,  ..., 0.0133, 0.0014, 0.8945],
         [0.4440, 0.9926, 0.0045,  ..., 0.0133, 0.9959, 0.0428]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
(2, 512, 3)
2024-08-20 17:29:59,546 [Process: 0] EPOCH 152:
2024-08-20 17:29:59,548 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] EPOCH 152:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9801, 0.0094, 0.0273,  ..., 0.9834, 0.9407, 0.0208],
         [0.0066, 0.0094, 0.0237,  ..., 0.0055, 0.0198, 0.0208],
         [0.0066, 0.0094, 0.0237,  ..., 0.0055, 0.0198, 0.0208],
         [0.0066, 0.9717, 0.9252,  ..., 0.0055, 0.0198, 0.9376]],
        [[0.7944, 0.0173, 0.0291,  ..., 0.0375, 0.0027, 0.0078],
         [0.1393, 0.0173, 0.0283,  ..., 0.0369, 0.0027, 0.0078],
         [0.0331, 0.0200, 0.0288,  ..., 0.0369, 0.9920, 0.9766],
         [0.0331, 0.9453, 0.9138,  ..., 0.8887, 0.0027, 0.0078]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.0346e-01, 2.0197e-02, 9.8378e-01,  ..., 9.7011e-01,
          1.1258e-02, 1.7798e-02],
         [1.0346e-01, 2.0197e-02, 4.6269e-03,  ..., 7.8922e-03,
          1.1258e-02, 1.7798e-02],
         [4.9378e-01, 2.0197e-02, 4.6269e-03,  ..., 7.8922e-03,
          9.6623e-01, 9.4660e-01],
         [2.9931e-01, 9.3941e-01, 6.9667e-03,  ..., 1.4104e-02,
          1.1258e-02, 1.7798e-02]],
        [[7.8996e-02, 3.1251e-04, 9.9144e-01,  ..., 9.1798e-01,
          3.6412e-04, 1.7601e-02],
         [1.7531e-01, 3.1251e-04, 3.2263e-03,  ..., 4.9327e-02,
          3.6412e-04, 1.7601e-02],
         [7.8996e-02, 3.1251e-04, 2.6667e-03,  ..., 1.6348e-02,
          3.6412e-04, 9.4720e-01],
         [6.6670e-01, 9.9906e-01, 2.6667e-03,  ..., 1.6348e-02,
          9.9891e-01, 1.7601e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:30:00,574 [Process: 0] Synchronize training processes
2024-08-20 17:30:00,575 [Process: 0] Evaluating...
2024-08-20 17:30:00,576 [Process: 0] EPOCH 153:
2024-08-20 17:30:00,578 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:30:01,587 [Process: 0] Synchronize training processes
2024-08-20 17:30:01,588 [Process: 0] Evaluating...
2024-08-20 17:30:01,589 [Process: 0] EPOCH 154:
2024-08-20 17:30:01,591 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 153:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9591, 0.0191, 0.0156,  ..., 0.9714, 0.9725, 0.0368],
         [0.0136, 0.0191, 0.0156,  ..., 0.0085, 0.0092, 0.0368],
         [0.0136, 0.0191, 0.0156,  ..., 0.0085, 0.0092, 0.0395],
         [0.0136, 0.9426, 0.9533,  ..., 0.0116, 0.0092, 0.8870]],
        [[0.9834, 0.0033, 0.0081,  ..., 0.0180, 0.0075, 0.0081],
         [0.0057, 0.0033, 0.0081,  ..., 0.0180, 0.0075, 0.0081],
         [0.0055, 0.0033, 0.0081,  ..., 0.0180, 0.9776, 0.9758],
         [0.0055, 0.9902, 0.9758,  ..., 0.9460, 0.0075, 0.0081]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.0975, 0.0097, 0.9961,  ..., 0.9955, 0.0190, 0.0353],
         [0.1323, 0.0097, 0.0013,  ..., 0.0015, 0.0190, 0.0353],
         [0.1724, 0.0097, 0.0013,  ..., 0.0015, 0.9431, 0.8941],
         [0.5978, 0.9710, 0.0013,  ..., 0.0015, 0.0190, 0.0353]],
        [[0.0500, 0.0017, 0.9687,  ..., 0.9821, 0.1092, 0.0235],
         [0.0527, 0.0017, 0.0104,  ..., 0.0060, 0.7230, 0.0235],
         [0.0500, 0.0017, 0.0104,  ..., 0.0060, 0.0573, 0.9295],
         [0.8474, 0.9950, 0.0104,  ..., 0.0060, 0.1105, 0.0235]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 154:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9131, 0.0086, 0.0711,  ..., 0.9887, 0.9409, 0.0463],
         [0.0249, 0.0086, 0.1061,  ..., 0.0038, 0.0207, 0.0443],
         [0.0329, 0.0086, 0.0916,  ..., 0.0038, 0.0192, 0.0448],
         [0.0291, 0.9743, 0.7313,  ..., 0.0038, 0.0192, 0.8647]],
        [[0.9957, 0.0151, 0.0390,  ..., 0.0247, 0.0079, 0.0013],
         [0.0014, 0.0151, 0.0352,  ..., 0.0247, 0.0079, 0.0013],
         [0.0014, 0.0151, 0.0402,  ..., 0.0247, 0.9763, 0.9962],
         [0.0014, 0.9546, 0.8856,  ..., 0.9260, 0.0079, 0.0013]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
2024-08-20 17:30:02,601 [Process: 0] Synchronize training processes
2024-08-20 17:30:02,601 [Process: 0] Evaluating...
2024-08-20 17:30:02,603 [Process: 0] EPOCH 155:
2024-08-20 17:30:02,604 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:30:03,634 [Process: 0] Synchronize training processes
2024-08-20 17:30:03,634 [Process: 0] Evaluating...
2024-08-20 17:30:03,636 [Process: 0] EPOCH 156:
2024-08-20 17:30:03,637 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[9.2936e-02, 7.2021e-04, 9.9305e-01,  ..., 9.9239e-01,
          1.1549e-02, 1.2296e-02],
         [9.2936e-02, 7.2021e-04, 2.3161e-03,  ..., 2.5383e-03,
          1.1549e-02, 1.2296e-02],
         [1.9761e-01, 7.2021e-04, 2.3161e-03,  ..., 2.5383e-03,
          9.6535e-01, 9.6311e-01],
         [6.1652e-01, 9.9784e-01, 2.3161e-03,  ..., 2.5383e-03,
          1.1549e-02, 1.2296e-02]],
        [[1.3766e-01, 1.7733e-04, 9.9531e-01,  ..., 9.8870e-01,
          9.7057e-01, 2.7624e-02],
         [2.1150e-01, 1.7733e-04, 1.4908e-03,  ..., 3.7669e-03,
          9.8085e-03, 2.7537e-02],
         [1.7588e-01, 1.7733e-04, 1.4908e-03,  ..., 3.7669e-03,
          9.8085e-03, 9.1730e-01],
         [4.7497e-01, 9.9947e-01, 1.7096e-03,  ..., 3.7669e-03,
          9.8085e-03, 2.7537e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 155:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9261, 0.0059, 0.0225,  ..., 0.9524, 0.9842, 0.0161],
         [0.0220, 0.0059, 0.0225,  ..., 0.0147, 0.0053, 0.0161],
         [0.0265, 0.0059, 0.0225,  ..., 0.0183, 0.0053, 0.0161],
         [0.0255, 0.9824, 0.9326,  ..., 0.0147, 0.0053, 0.9517]],
        [[0.9900, 0.0110, 0.0105,  ..., 0.0199, 0.0077, 0.0032],
         [0.0034, 0.0110, 0.0105,  ..., 0.0199, 0.0077, 0.0032],
         [0.0033, 0.0110, 0.0105,  ..., 0.0199, 0.9770, 0.9905],
         [0.0033, 0.9671, 0.9684,  ..., 0.9403, 0.0077, 0.0032]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1291, 0.0110, 0.9721,  ..., 0.9969, 0.0123, 0.0228],
         [0.1081, 0.0110, 0.0090,  ..., 0.0010, 0.0123, 0.0225],
         [0.4875, 0.0110, 0.0090,  ..., 0.0010, 0.9632, 0.9322],
         [0.2753, 0.9671, 0.0098,  ..., 0.0010, 0.0123, 0.0225]],
        [[0.1136, 0.0014, 0.9963,  ..., 0.9808, 0.9620, 0.0066],
         [0.2186, 0.0014, 0.0012,  ..., 0.0081, 0.0127, 0.0066],
         [0.1798, 0.0014, 0.0012,  ..., 0.0055, 0.0127, 0.9803],
         [0.4880, 0.9959, 0.0012,  ..., 0.0055, 0.0127, 0.0066]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 156:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9586, 0.0082, 0.0429,  ..., 0.9827, 0.9825, 0.0341],
         [0.0138, 0.0082, 0.0498,  ..., 0.0058, 0.0058, 0.0341],
         [0.0138, 0.0082, 0.0429,  ..., 0.0058, 0.0058, 0.0341],
         [0.0138, 0.9753, 0.8644,  ..., 0.0058, 0.0058, 0.8977]],
        [[0.9763, 0.0096, 0.0097,  ..., 0.0190, 0.0046, 0.0028],
         [0.0079, 0.0096, 0.0097,  ..., 0.0190, 0.0046, 0.0028],
         [0.0079, 0.0096, 0.0097,  ..., 0.0190, 0.9861, 0.9916],
         [0.0079, 0.9712, 0.9710,  ..., 0.9431, 0.0046, 0.0028]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
2024-08-20 17:30:04,676 [Process: 0] Synchronize training processes
2024-08-20 17:30:04,676 [Process: 0] Evaluating...
2024-08-20 17:30:04,678 [Process: 0] EPOCH 157:
2024-08-20 17:30:04,679 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
2024-08-20 17:30:05,684 [Process: 0] Synchronize training processes
2024-08-20 17:30:05,685 [Process: 0] Evaluating...
2024-08-20 17:30:05,686 [Process: 0] EPOCH 158:
2024-08-20 17:30:05,688 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[1.1835e-01, 2.5892e-02, 9.5171e-01,  ..., 9.9830e-01,
          5.0886e-02, 3.2570e-02],
         [1.2812e-01, 2.5892e-02, 1.3787e-02,  ..., 5.6603e-04,
          4.4629e-02, 3.1180e-02],
         [2.7734e-01, 2.5892e-02, 1.3787e-02,  ..., 5.6603e-04,
          8.3302e-01, 9.0507e-01],
         [4.7619e-01, 9.2232e-01, 2.0718e-02,  ..., 5.6603e-04,
          7.1469e-02, 3.1180e-02]],
        [[1.4410e-01, 4.1786e-04, 9.7086e-01,  ..., 8.9427e-01,
          9.7449e-01, 1.8593e-02],
         [3.1012e-01, 4.1786e-04, 7.6391e-03,  ..., 4.6530e-02,
          8.5034e-03, 1.8593e-02],
         [2.1318e-01, 4.1786e-04, 7.6391e-03,  ..., 2.9600e-02,
          8.5034e-03, 9.4422e-01],
         [3.3259e-01, 9.9875e-01, 1.3864e-02,  ..., 2.9600e-02,
          8.5034e-03, 1.8593e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 157:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9383, 0.0140, 0.0091,  ..., 0.9679, 0.9790, 0.0079],
         [0.0205, 0.0138, 0.0091,  ..., 0.0107, 0.0070, 0.0079],
         [0.0206, 0.0138, 0.0091,  ..., 0.0107, 0.0070, 0.0079],
         [0.0205, 0.9585, 0.9727,  ..., 0.0107, 0.0070, 0.9762]],
        [[0.9310, 0.0137, 0.0315,  ..., 0.0266, 0.0048, 0.0026],
         [0.0311, 0.0137, 0.0315,  ..., 0.0266, 0.0048, 0.0026],
         [0.0190, 0.0137, 0.0407,  ..., 0.0288, 0.9855, 0.9921],
         [0.0190, 0.9590, 0.8963,  ..., 0.9181, 0.0048, 0.0026]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[7.8270e-02, 5.6540e-03, 9.9205e-01,  ..., 9.6998e-01,
          2.0072e-02, 1.4617e-02],
         [9.9697e-02, 5.6540e-03, 2.6492e-03,  ..., 1.0007e-02,
          2.0072e-02, 1.4617e-02],
         [1.0560e-01, 5.6540e-03, 2.6492e-03,  ..., 1.0007e-02,
          9.3977e-01, 9.5615e-01],
         [7.1643e-01, 9.8304e-01, 2.6492e-03,  ..., 1.0007e-02,
          2.0086e-02, 1.4617e-02]],
        [[1.1707e-01, 1.8621e-03, 9.9783e-01,  ..., 9.0571e-01,
          9.4886e-01, 2.1990e-02],
         [4.6042e-01, 1.8621e-03, 7.2429e-04,  ..., 2.5408e-02,
          2.6709e-02, 2.1304e-02],
         [1.1707e-01, 1.8621e-03, 7.2429e-04,  ..., 2.5408e-02,
          1.2216e-02, 9.3540e-01],
         [3.0544e-01, 9.9441e-01, 7.2429e-04,  ..., 4.3475e-02,
          1.2216e-02, 2.1304e-02]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 158:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.9820, 0.0308, 0.0199,  ..., 0.9633, 0.8985, 0.0164],
         [0.0060, 0.0308, 0.0199,  ..., 0.0122, 0.0288, 0.0164],
         [0.0060, 0.0407, 0.0199,  ..., 0.0122, 0.0363, 0.0164],
         [0.0060, 0.8978, 0.9404,  ..., 0.0122, 0.0364, 0.9509]],
        [[0.6095, 0.0178, 0.0064,  ..., 0.0584, 0.0037, 0.0065],
         [0.2240, 0.0178, 0.0064,  ..., 0.0678, 0.0037, 0.0065],
         [0.0832, 0.0201, 0.0064,  ..., 0.0813, 0.9888, 0.9804],
         [0.0832, 0.9444, 0.9809,  ..., 0.7925, 0.0037, 0.0065]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
2024-08-20 17:30:06,689 [Process: 0] Synchronize training processes
2024-08-20 17:30:06,689 [Process: 0] Evaluating...
2024-08-20 17:30:06,691 [Process: 0] EPOCH 159:
2024-08-20 17:30:06,692 [Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
Traceback (most recent call last):
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 37, in <module>
    main()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/main.py", line 49, in decorated_main
    _run_hydra(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 367, in _run_hydra
    run_and_report(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 211, in run_and_report
    return func()
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/utils.py", line 368, in <lambda>
    lambda: hydra.run(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/_internal/hydra.py", line 97, in run
    ret = run_job(
  File "/home/stud/zhoy/anaconda3/envs/o2o/lib/python3.8/site-packages/hydra/core/utils.py", line 160, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/run.py", line 31, in main
    trainer.train()
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 340, in train
    avg_loss = self.train_one_epoch(epoch)
  File "/home/stud/zhoy/MasterThesis_zhoy/GeoL_net/trainer/trainer.py", line 207, in train_one_epoch
    if torch.isnan(loss):
KeyboardInterrupt
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.1418, 0.0668, 0.9936,  ..., 0.9948, 0.0183, 0.0178],
         [0.1025, 0.0931, 0.0021,  ..., 0.0017, 0.0183, 0.0178],
         [0.4975, 0.0668, 0.0021,  ..., 0.0017, 0.9436, 0.9466],
         [0.2582, 0.7733, 0.0021,  ..., 0.0017, 0.0197, 0.0178]],
        [[0.1356, 0.0031, 0.9953,  ..., 0.9540, 0.9792, 0.0077],
         [0.3527, 0.0031, 0.0016,  ..., 0.0162, 0.0069, 0.0077],
         [0.1841, 0.0031, 0.0016,  ..., 0.0149, 0.0069, 0.9769],
         [0.3276, 0.9906, 0.0016,  ..., 0.0149, 0.0069, 0.0077]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
[Process: 0] Synchronize training processes
[Process: 0] Evaluating...
[Process: 0] EPOCH 159:
[Worker 0] Loss fn: focal - FocalLoss(), Rank 0 - True
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
------list
['To Front of the normal monitor, there is a the normal keyboard', 'the blue phone is at the Back of the normal phone']
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[0.7330, 0.0111, 0.0069,  ..., 0.4632, 0.9896, 0.0254],
         [0.0930, 0.0111, 0.0069,  ..., 0.0939, 0.0035, 0.0246],
         [0.1032, 0.0111, 0.0069,  ..., 0.1392, 0.0035, 0.0258],
         [0.0708, 0.9668, 0.9792,  ..., 0.3037, 0.0035, 0.9242]],
        [[0.6676, 0.0611, 0.0199,  ..., 0.0907, 0.0134, 0.0010],
         [0.2413, 0.0506, 0.0199,  ..., 0.0830, 0.0134, 0.0010],
         [0.0456, 0.0754, 0.0218,  ..., 0.6025, 0.9598, 0.9969],
         [0.0456, 0.8129, 0.9384,  ..., 0.2238, 0.0134, 0.0010]]],
       device='cuda:0', grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
------list
["the orange lamp is on the normal eraser's Front side", "the normal printer is on the normal plant's Front Right side"]
<class 'str'>
<class 'str'>
----x_geo shape: torch.Size([2, 16, 512])
----x_rgb shape: torch.Size([2, 16, 480, 640])
-----scene_pcs shape: torch.Size([2, 512, 3])
-----align shape: torch.Size([2, 16, 512])
------x shape: torch.Size([2, 35, 512])
------fusion x shape: torch.Size([2, 4, 512])
------target shape: torch.Size([2, 512, 4])
tensor([[[8.4564e-02, 4.4702e-02, 9.9154e-01,  ..., 9.2361e-01,
          1.5658e-02, 3.2516e-02],
         [8.4372e-02, 2.9961e-02, 2.8187e-03,  ..., 2.2692e-02,
          1.5658e-02, 3.2516e-02],
         [6.8139e-01, 2.9961e-02, 2.8187e-03,  ..., 2.2692e-02,
          9.5302e-01, 9.0033e-01],
         [1.4968e-01, 8.9538e-01, 2.8187e-03,  ..., 3.1002e-02,
          1.5658e-02, 3.4637e-02]],
        [[1.3334e-01, 1.0024e-03, 9.9848e-01,  ..., 8.4874e-01,
          9.9442e-01, 5.4682e-03],
         [3.8325e-01, 1.0024e-03, 5.0565e-04,  ..., 6.3658e-02,
          1.8593e-03, 5.4682e-03],
         [2.4956e-01, 1.0024e-03, 5.0565e-04,  ..., 4.3802e-02,
          1.8593e-03, 9.8360e-01],
         [2.3385e-01, 9.9699e-01, 5.0565e-04,  ..., 4.3802e-02,
          1.8593e-03, 5.4682e-03]]], device='cuda:0',
       grad_fn=<SoftmaxBackward0>)
outputs shape: torch.Size([2, 4, 512])
mask shape: torch.Size([2, 512, 4])